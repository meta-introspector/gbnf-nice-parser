type t = Lexing.position * Lexing.position
type 'a located = { value : 'a; position : t; }
val value : 'a located -> 'a
val position : 'a located -> t
val decompose : 'a located -> 'a * t
val with_pos : t -> 'a -> 'a located
val with_loc : t -> 'a -> 'a located
val map : ('a -> 'b) -> 'a located -> 'b located
val pmap : (t -> 'a -> 'b) -> 'a located -> 'b located
val iter : ('a -> 'b) -> 'a located -> 'b
val mapd : ('a -> 'b * 'c) -> 'a located -> 'b located * 'c located
val dummy : Lexing.position * Lexing.position
val unknown_pos : 'a -> 'a located
val start_of_position : 'a * 'b -> 'a
val end_of_position : 'a * 'b -> 'b
val filename_of_position : Lexing.position * 'a -> string
val line : Lexing.position -> int
val column : Lexing.position -> int
val characters : Lexing.position -> Lexing.position -> int * int
val join :
  Lexing.position * Lexing.position ->
  Lexing.position * Lexing.position -> Lexing.position * Lexing.position
val import : 'a -> 'a
val join_located : 'a located -> 'b located -> ('a -> 'b -> 'c) -> 'c located
val string_of_lex_pos : Lexing.position -> string
val string_of_pos : Lexing.position * Lexing.position -> string
val pos_or_undef :
  (Lexing.position * Lexing.position) option ->
  Lexing.position * Lexing.position
val cpos : Lexing.lexbuf -> Lexing.position * Lexing.position
val with_cpos : Lexing.lexbuf -> 'a -> 'a located
val string_of_cpos : Lexing.lexbuf -> string
val joinf :
  ('a -> Lexing.position * Lexing.position) ->
  'a -> 'a -> Lexing.position * Lexing.position
val ljoinf :
  ('a -> Lexing.position * Lexing.position) ->
  'a list -> Lexing.position * Lexing.position
val join_located_list : 'a located list -> ('a list -> 'b) -> 'b located
type positions = t list
val one : Lexing.position -> positions
val lexbuf : Lexing.lexbuf -> positions("DEBUG:rule", [Tag1 (("t", 1412), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -171); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -172)]), 100000000, 0, -170)), 0, 0, 0, 0, (("lib/positions.ml", 16, 989, 989), ("lib/positions.ml", 18, 1031, 1052), 0), 0, 0, 0, Tag1 ("Gbnf_parser__Positions", 0)), 1, 0); Tag1 (("located", 1413), ([((("a")), 100000000, 0, -168)], 1, [[(("value", 1182), 0, ((("a")), 100000000, 0, -168), (("lib/positions.ml", 22, 1078, 1084), ("lib/positions.ml", 22, 1078, 1098), 0), 0, Tag1 ("Gbnf_parser__Positions", 2)); (("position", 1183), 0, (Tag3 ((("t", 1412)), 0, (0)), 100000000, 0, -169), (("lib/positions.ml", 23, 1099, 1105), ("lib/positions.ml", 23, 1099, 1118), 0), 0, Tag1 ("Gbnf_parser__Positions", 3))]], 1, 0, [25], [0], 0, 0, (("lib/positions.ml", 20, 1054, 1054), ("lib/positions.ml", 24, 1119, 1124), 0), 0, 0, 0, Tag1 ("Gbnf_parser__Positions", 1)), 1, 0); (("value", 1414), ((Tag1 (0, (Tag3 ((("located", 1413)), [((0), 100000000, 0, -166)], (0)), 100000000, 0, -167), ((0), 100000000, 0, -166), 0), 100000000, 0, -165), 0, (("lib/positions.ml", 26, 1126, 1130), ("lib/positions.ml", 26, 1126, 1135), 0), 0, Tag1 ("Gbnf_parser__Positions", 4)), 0); (("position", 1415), ((Tag1 (0, (Tag3 ((("located", 1413)), [((0), 100000000, 0, -164)], (0)), 100000000, 0, -163), (Tag3 ((("t", 1412)), 0, (0)), 100000000, 0, -162), 0), 100000000, 0, -161), 0, (("lib/positions.ml", 29, 1160, 1164), ("lib/positions.ml", 29, 1160, 1172), 0), 0, Tag1 ("Gbnf_parser__Positions", 6)), 0); (("decompose", 1416), ((Tag1 (0, (Tag3 ((("located", 1413)), [((0), 100000000, 0, -158)], (0)), 100000000, 0, -160), (Tag2 ([((0), 100000000, 0, -158); (Tag3 ((("t", 1412)), 0, (0)), 100000000, 0, -159)]), 100000000, 0, -157), 0), 100000000, 0, -156), 0, (("lib/positions.ml", 32, 1200, 1204), ("lib/positions.ml", 32, 1200, 1213), 0), 0, Tag1 ("Gbnf_parser__Positions", 8)), 0); (("with_pos", 1417), ((Tag1 (0, (Tag3 ((("t", 1412)), 0, (0)), 100000000, 0, -155), (Tag1 (0, ((0), 100000000, 0, -154), (Tag3 ((("located", 1413)), [((0), 100000000, 0, -154)], (0)), 100000000, 0, -153), 0), 100000000, 0, -152), 0), 100000000, 0, -151), 0, (("lib/positions.ml", 35, 1257, 1261), ("lib/positions.ml", 35, 1257, 1269), 0), 0, Tag1 ("Gbnf_parser__Positions", 11)), 0); (("with_loc", 1418), ((Tag1 (0, (Tag3 ((("t", 1412)), 0, (0)), 100000000, 0, -150), (Tag1 (0, ((0), 100000000, 0, -149), (Tag3 ((("located", 1413)), [((0), 100000000, 0, -149)], (0)), 100000000, 0, -148), 0), 100000000, 0, -147), 0), 100000000, 0, -146), 0, (("lib/positions.ml", 41, 1323, 1327), ("lib/positions.ml", 41, 1323, 1335), 0), 0, Tag1 ("Gbnf_parser__Positions", 14)), 0); (("map", 1419), ((Tag1 (0, (Tag1 (0, ((0), 100000000, 0, -144), ((0), 100000000, 0, -142), (1)), 100000000, 0, -145), (Tag1 (0, (Tag3 ((("located", 1413)), [((0), 100000000, 0, -144)], (0)), 100000000, 0, -143), (Tag3 ((("located", 1413)), [((0), 100000000, 0, -142)], (0)), 100000000, 0, -141), 0), 100000000, 0, -140), 0), 100000000, 0, -139), 0, (("lib/positions.ml", 46, 1442, 1446), ("lib/positions.ml", 46, 1442, 1449), 0), 0, Tag1 ("Gbnf_parser__Positions", 15)), 0); (("pmap", 1420), ((Tag1 (0, (Tag1 (0, (Tag3 ((("t", 1412)), 0, (0)), 100000000, 0, -138), (Tag1 (0, ((0), 100000000, 0, -135), ((0), 100000000, 0, -133), (1)), 100000000, 0, -137), (1)), 100000000, 0, -136), (Tag1 (0, (Tag3 ((("located", 1413)), [((0), 100000000, 0, -135)], (0)), 100000000, 0, -134), (Tag3 ((("located", 1413)), [((0), 100000000, 0, -133)], (0)), 100000000, 0, -132), 0), 100000000, 0, -131), 0), 100000000, 0, -130), 0, (("lib/positions.ml", 52, 1520, 1524), ("lib/positions.ml", 52, 1520, 1528), 0), 0, Tag1 ("Gbnf_parser__Positions", 18)), 0); (("iter", 1421), ((Tag1 (0, (Tag1 (0, ((0), 100000000, 0, -128), ((0), 100000000, 0, -126), (1)), 100000000, 0, -129), (Tag1 (0, (Tag3 ((("located", 1413)), [((0), 100000000, 0, -128)], (0)), 100000000, 0, -127), ((0), 100000000, 0, -126), 0), 100000000, 0, -125), 0), 100000000, 0, -124), 0, (("lib/positions.ml", 58, 1609, 1613), ("lib/positions.ml", 58, 1609, 1617), 0), 0, Tag1 ("Gbnf_parser__Positions", 21)), 0); (("mapd", 1422), ((Tag1 (0, (Tag1 (0, ((0), 100000000, 0, -121), (Tag2 ([((0), 100000000, 0, -117); ((0), 100000000, 0, -119)]), 100000000, 0, -123), (1)), 100000000, 0, -122), (Tag1 (0, (Tag3 ((("located", 1413)), [((0), 100000000, 0, -121)], (0)), 100000000, 0, -120), (Tag2 ([(Tag3 ((("located", 1413)), [((0), 100000000, 0, -117)], (0)), 100000000, 0, -116); (Tag3 ((("located", 1413)), [((0), 100000000, 0, -119)], (0)), 100000000, 0, -118)]), 100000000, 0, -115), 0), 100000000, 0, -114), 0), 100000000, 0, -113), 0, (("lib/positions.ml", 61, 1646, 1650), ("lib/positions.ml", 61, 1646, 1654), 0), 0, Tag1 ("Gbnf_parser__Positions", 24)), 0); (("dummy", 1423), ((Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -111); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -112)]), 100000000, 0, -110), 0, (("lib/positions.ml", 67, 1783, 1787), ("lib/positions.ml", 67, 1783, 1792), 0), 0, Tag1 ("Gbnf_parser__Positions", 30)), 0); (("unknown_pos", 1424), ((Tag1 (0, ((0), 100000000, 0, -109), (Tag3 ((("located", 1413)), [((0), 100000000, 0, -109)], (0)), 100000000, 0, -108), 0), 100000000, 0, -107), 0, (("lib/positions.ml", 70, 1821, 1825), ("lib/positions.ml", 70, 1821, 1836), 0), 0, Tag1 ("Gbnf_parser__Positions", 31)), 0); (("start_of_position", 1425), ((Tag1 (0, (Tag2 ([((0), 100000000, 0, -104); ((0), 100000000, 0, -106)]), 100000000, 0, -105), ((0), 100000000, 0, -104), 0), 100000000, 0, -103), 0, (("lib/positions.ml", 76, 1891, 1895), ("lib/positions.ml", 76, 1891, 1912), 0), 0, Tag1 ("Gbnf_parser__Positions", 33)), 0); (("end_of_position", 1426), ((Tag1 (0, (Tag2 ([((0), 100000000, 0, -102); ((0), 100000000, 0, -100)]), 100000000, 0, -101), ((0), 100000000, 0, -100), 0), 100000000, 0, -99), 0, (("lib/positions.ml", 78, 1925, 1929), ("lib/positions.ml", 78, 1925, 1944), 0), 0, Tag1 ("Gbnf_parser__Positions", 35)), 0); (("filename_of_position", 1427), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -97); ((0), 100000000, 0, -98)]), 100000000, 0, -96), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -95), 0), 100000000, 0, -94), 0, (("lib/positions.ml", 80, 1957, 1961), ("lib/positions.ml", 80, 1957, 1981), 0), 0, Tag1 ("Gbnf_parser__Positions", 37)), 0); (("line", 1428), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -93), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -92), 0), 100000000, 0, -91), 0, (("lib/positions.ml", 83, 2021, 2025), ("lib/positions.ml", 83, 2021, 2029), 0), 0, Tag1 ("Gbnf_parser__Positions", 39)), 0); (("column", 1429), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -90), (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -89), 0), 100000000, 0, -88), 0, (("lib/positions.ml", 86, 2048, 2052), ("lib/positions.ml", 86, 2048, 2058), 0), 0, Tag1 ("Gbnf_parser__Positions", 41)), 0); (("characters", 1430), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -87), (Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -87), (Tag2 ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -85); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -86)]), 100000000, 0, -84), 0), 100000000, 0, -83), 0), 100000000, 0, -82), 0, (("lib/positions.ml", 89, 2089, 2093), ("lib/positions.ml", 89, 2089, 2103), 0), 0, Tag1 ("Gbnf_parser__Positions", 43)), 0); (("join", 1431), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -79); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -80)]), 100000000, 0, -81), (Tag1 (0, (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -79); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -80)]), 100000000, 0, -81), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -79); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -80)]), 100000000, 0, -78), 0), 100000000, 0, -77), 0), 100000000, 0, -76), 0, (("lib/positions.ml", 92, 2186, 2190), ("lib/positions.ml", 92, 2186, 2194), 0), 0, Tag1 ("Gbnf_parser__Positions", 46)), 0); (("import", 1432), ((Tag1 (0, ((0), 100000000, 0, -75), ((0), 100000000, 0, -75), 0), 100000000, 0, -74), 0, (("lib/positions.ml", 98, 2313, 2317), ("lib/positions.ml", 98, 2313, 2323), 0), 0, Tag1 ("Gbnf_parser__Positions", 49)), 0); (("join_located", 1433), ((Tag1 (0, (Tag3 ((("located", 1413)), [((0), 100000000, 0, -71)], (0)), 100000000, 0, -73), (Tag1 (0, (Tag3 ((("located", 1413)), [((0), 100000000, 0, -70)], (0)), 100000000, 0, -72), (Tag1 (0, (Tag1 (0, ((0), 100000000, 0, -71), (Tag1 (0, ((0), 100000000, 0, -70), ((0), 100000000, 0, -67), (1)), 100000000, 0, -69), (1)), 100000000, 0, -68), (Tag3 ((("located", 1413)), [((0), 100000000, 0, -67)], (0)), 100000000, 0, -66), 0), 100000000, 0, -65), 0), 100000000, 0, -64), 0), 100000000, 0, -63), 0, (("lib/positions.ml", 101, 2333, 2337), ("lib/positions.ml", 101, 2333, 2349), 0), 0, Tag1 ("Gbnf_parser__Positions", 51)), 0); (("string_of_lex_pos", 1434), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -62), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -61), 0), 100000000, 0, -60), 0, (("lib/positions.ml", 107, 2450, 2454), ("lib/positions.ml", 107, 2450, 2471), 0), 0, Tag1 ("Gbnf_parser__Positions", 55)), 0); (("string_of_pos", 1435), ((Tag1 (0, (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -59); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -59)]), 100000000, 0, -58), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -57), 0), 100000000, 0, -56), 0, (("lib/positions.ml", 111, 2564, 2568), ("lib/positions.ml", 111, 2564, 2581), 0), 0, Tag1 ("Gbnf_parser__Positions", 58)), 0); (("pos_or_undef", 1436), ((Tag1 (0, (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -53); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -54)]), 100000000, 0, -52)], (0)), 100000000, 0, -55), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -53); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -54)]), 100000000, 0, -52), 0), 100000000, 0, -51), 0, (("lib/positions.ml", 118, 2856, 2860), ("lib/positions.ml", 118, 2856, 2872), 0), 0, Tag1 ("Gbnf_parser__Positions", 64)), 0); (("cpos", 1437), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -50), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -49); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -49)]), 100000000, 0, -48), 0), 100000000, 0, -47), 0, (("lib/positions.ml", 122, 2919, 2923), ("lib/positions.ml", 122, 2919, 2927), 0), 0, Tag1 ("Gbnf_parser__Positions", 66)), 0); (("with_cpos", 1438), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -46), (Tag1 (0, ((0), 100000000, 0, -45), (Tag3 ((("located", 1413)), [((0), 100000000, 0, -45)], (0)), 100000000, 0, -44), 0), 100000000, 0, -43), 0), 100000000, 0, -42), 0, (("lib/positions.ml", 125, 2985, 2989), ("lib/positions.ml", 125, 2985, 2998), 0), 0, Tag1 ("Gbnf_parser__Positions", 68)), 0); (("string_of_cpos", 1439), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -41), (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -40), 0), 100000000, 0, -39), 0, (("lib/positions.ml", 128, 3038, 3042), ("lib/positions.ml", 128, 3038, 3056), 0), 0, Tag1 ("Gbnf_parser__Positions", 71)), 0); (("joinf", 1440), ((Tag1 (0, (Tag1 (0, ((0), 100000000, 0, -36), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -34); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -35)]), 100000000, 0, -38), (1)), 100000000, 0, -37), (Tag1 (0, ((0), 100000000, 0, -36), (Tag1 (0, ((0), 100000000, 0, -36), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -34); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -35)]), 100000000, 0, -33), 0), 100000000, 0, -32), 0), 100000000, 0, -31), 0), 100000000, 0, -30), 0, (("lib/positions.ml", 131, 3097, 3101), ("lib/positions.ml", 131, 3097, 3106), 0), 0, Tag1 ("Gbnf_parser__Positions", 73)), 0); (("ljoinf", 1441), ((Tag1 (0, (Tag1 (0, ((0), 100000000, 0, -28), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -25); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -26)]), 100000000, 0, -24), (1)), 100000000, 0, -29), (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((0), 100000000, 0, -28)], (0)), 100000000, 0, -27), (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -25); (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -26)]), 100000000, 0, -24), 0), 100000000, 0, -23), 0), 100000000, 0, -22), 0, (("lib/positions.ml", 134, 3139, 3143), ("lib/positions.ml", 134, 3139, 3149), 0), 0, Tag1 ("Gbnf_parser__Positions", 77)), 0); (("join_located_list", 1442), ((Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("located", 1413)), [((0), 100000000, 0, -19)], (0)), 100000000, 0, -21)], (0)), 100000000, 0, -20), (Tag1 (0, (Tag1 (0, (Tag3 ((Tag3 ("list", 9)), [((0), 100000000, 0, -19)], (0)), 100000000, 0, -18), ((0), 100000000, 0, -16), (1)), 100000000, 0, -17), (Tag3 ((("located", 1413)), [((0), 100000000, 0, -16)], (0)), 100000000, 0, -15), 0), 100000000, 0, -14), 0), 100000000, 0, -13), 0, (("lib/positions.ml", 137, 3204, 3208), ("lib/positions.ml", 137, 3204, 3225), 0), 0, Tag1 ("Gbnf_parser__Positions", 81)), 0); Tag1 (("positions", 1443), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("t", 1412)), 0, (0)), 100000000, 0, -12)], (0)), 100000000, 0, -11)), 0, 0, 0, 0, (("lib/positions.ml", 146, 3491, 3491), ("lib/positions.ml", 147, 3508, 3518), 0), 0, 0, 0, Tag1 ("Gbnf_parser__Positions", 86)), 1, 0); (("one", 1444), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -10), (Tag3 ((("positions", 1443)), 0, (0)), 100000000, 0, -9), 0), 100000000, 0, -8), 0, (("lib/positions.ml", 149, 3520, 3524), ("lib/positions.ml", 149, 3520, 3527), 0), 0, Tag1 ("Gbnf_parser__Positions", 87)), 0); (("lexbuf", 1445), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -7), (Tag3 ((("positions", 1443)), 0, (0)), 100000000, 0, -6), 0), 100000000, 0, -5), 0, (("lib/positions.ml", 152, 3584, 3588), ("lib/positions.ml", 152, 3584, 3594), 0), 0, Tag1 ("Gbnf_parser__Positions", 89)), 0); (("print", 1446), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "position"), 0, (0)), 100000000, 0, -4), (Tag3 ((Tag3 ("unit", 6)), 0, (0)), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("lib/positions.ml", 155, 3681, 3685), ("lib/positions.ml", 155, 3681, 3690), 0), 0, Tag1 ("Gbnf_parser__Positions", 91)), 0)], "Gbnf_parser__Positions", [("Gbnf_parser__Positions", ("\249\007\250\253\136\226\1414\253\1861i\198\252\210\193")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__StringLabels", ("\134F\024\226\216Is#\223\230\234\169Z\206Gc")); ("Stdlib__StdLabels", (".\193\n\229\139\017\212C-ZA\\kz-\128")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Printf", ("\215<\139]\021\142\224E\245m\198qc(W\229")); ("Stdlib__Printexc", ("\217u\168\235\179oi\167\235\255\025\017%d\192s")); ("Stdlib__Obj", ("\017\027P\240\207\204\138\148\210R\129\133g\254\137\027")); ("Stdlib__Nativeint", ("\167\207\224\147\233+\024lx\0055\142\141v\252\138")); ("Stdlib__MoreLabels", ("\248\232\248\254`<\230\241\161U\193U\1466J\238")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__ListLabels", ("*\194\012\191\020%\170\249m\002\180\178hk\205\220")); ("Stdlib__List", ("\137\146X\127&\164\235\254\165w$\144\178T\179(")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Int64", ("@\131\210+\255\138\197\014D\252\211\025\244\201Z\031")); ("Stdlib__Int32", ("\248;\\\021<\200_/\205{`[Cd\to")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shadow_stdlib", ("\219zi\164\203\158e)\232\221\196\168\138x\142\018")); ("Sexplib0__Sexpable", ("\251${\207(\249/z\242\255\250^\141\156\210e")); ("Sexplib0__Sexp_grammar", ("\205z\198^\134\218\168\144~\172\248\192\214iO\148")); ("Sexplib0__Sexp_conv_grammar", ("\140\212\006\028'\025p\192T\170\155$\193X^\178")); ("Sexplib0__Sexp_conv_error", ("kzv!\151~\198P\000\165\176d\007\251p\232")); ("Sexplib0__Sexp_conv", ("\028\"9\167\026\182=_\006{\181S+\003\213\186")); ("Sexplib0__Sexp", ("3\246H)\220:\173a\222\233uu\168Aw\159")); ("Sexplib0__", ("\1283\"^\250\003\142\255Q\\C\210;@\196r")); ("Sexplib0", ("\218.\006\222\143\211\171<3\018\165\b|\021\188\002")); ("Ppx_module_timer_runtime", ("\255\014\002\221+\150\189o\025\158\233y\t7\000\001")); ("Ppx_inline_test_lib", ("\218y\132\179\250\138\134,\155\143\192\163\025\218\"\217")); ("Ppx_bench_lib__Benchmark_accumulator", ("\149S\241hfpT\136F\251\018\140U\161\171^")); ("Ppx_bench_lib", ("\187\028\001\224\139H\014\148\179\0060<\016\134\190\"")); ("Inline_test_config", ("\\i\218(\228\139X\218\168\n-\152\158\165\2337")); ("Gbnf_parser", ("\017-\177\154_\152\247\179\232\028Y\187\182\219\217t")); ("Expect_test_config_types__Expect_test_config_types_intf", ("H\178\201K\2348\236h=\184\166\205\016\177\151,")); ("Expect_test_config_types__", ("\173E\156\232l\016P\n2\210\139\139\180\240_\145")); ("Expect_test_config_types", ("\1811\151S\164\189\028\209\222\2348[/\127\255*")); ("Expect_test_common__File", ("l\027\219\1577\028\236\134\224V\205\242R\210\182B")); ("Expect_test_common__Expectation", ("\255Z\156\189K\227\237l\003\135\031\251\242\149\242\154")); ("Expect_test_common__", (")\246.\002\031\\\027j1\136\161\149_\149>\030")); ("Expect_test_common", ("\235\234\220\143;\001\136?G\148\192\011\246\1479#")); ("Expect_test_collector__", ("\163,)1\228\170\155\143\208V\0236\023\172 \203")); ("Expect_test_collector", ("\224E}\232\250\137,=\151\170\227O\233\002\024\028")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Base_internalhash_types", ("0\148#2\226\223\018\135\173>!\020\237\017\255\149")); ("Base__Unit", ("\247\n\178\171]m\169\231\139\171\148\189\254\236l'")); ("Base__T", ("+t\159\169\027\152\205\235\003\237\133\177\024\n6'")); ("Base__Sys0", ("\206z\231\154s\\\136\2364\131\005\014\031\152m3")); ("Base__Stringable", ("\170\025\162\136\234\162\n\161\1491>\145\210@\237t")); ("Base__String0", ("\212\221L\220\245\255\162P\228\224\189\216\135H\149O")); ("Base__String", ("|q\181\r\14787\130\127\191\025\137\203\217\250\196")); ("Base__Staged", ("\203J\011+\249\0115\1338\023\209\142\159\240V.")); ("Base__Source_code_position0", ("_\003P6\254\029\206\005\130\136\180\019\145\230\000M")); ("Base__Source_code_position", ("i\235\201'\004\215\194\157\004\174X9+b\0231")); ("Base__Sign_or_nan", ("\2287\251,\197\017qf\179Y\025h\190\131W%")); ("Base__Sign0", ("\152\138\204\175\244\128J\165\221\165\160\150y\1305i")); ("Base__Sign", ("^\255.Q;\215fi\134\192\182\241Z\2425l")); ("Base__Sexpable", ("\155?\169\178\246\242*\232\206\018Y\174\203h\217i")); ("Base__Sexp_with_comparable", ("\171\173\137y\1855\006y\146\248\141@@\191[W")); ("Base__Sexp", ("\154\187\171&\209=\153[\236\250!U\174`\190T")); ("Base__Sequence", ("{L\140\211\223\183\000\030\151\247FnY\196\210\201")); ("Base__Result", ("\204|\215\173FMa\2511<&\215T\194$\228")); ("Base__Ref", ("\250\254R\158s\203c\0025\029I6\149\179s\158")); ("Base__Random", (" \216\153fc\243\1430\155\211\169?\022\\\231\011")); ("Base__Printf", ("\000\196c,\214\127\226\174\220\190\253z!\242\028\250")); ("Base__Pretty_printer", ("\175\005\031\018\015a\159\220\154c'(a\239j\233")); ("Base__Ppx_hash_lib", ("\199\141\178\193\006\209L\007^\020(\131\224sn8")); ("Base__Ppx_enumerate_lib", ("G\171\178\012Em\142\235@\152fg\020\140~(")); ("Base__Ppx_compare_lib", ("\243\186~\233\228\199Ah\181.\223\004e\231\129S")); ("Base__Poly0", ("\230;\143\234\255.H\132KOe7\155\\\023f")); ("Base__Or_error", ("\193\133)\bO\210\2517\168*\203\148\143\200\127\177")); ("Base__Option", ("\242!\176\142\168\247\163Jg\0254\180\224\\A\210")); ("Base__Nativeint", ("\252/\181U\214\229\029?.\130\145\237\"qFj")); ("Base__Monad_intf", ("\208\203\163\152\184O\130?\012:\168\247}\018\253\155")); ("Base__Monad", ("!\244\168\2352=\137Lm\219\129K\216\199\145\\")); ("Base__List", ("}\029h\158/\153\229\161]0\224Y\003Z\250\210")); ("Base__Lazy", ("@`\165\196 \235)\136ANe:p\169$\185")); ("Base__Invariant_intf", ("\213\204\238\235\236[\198\145\028\2392\015\243\177S\249")); ("Base__Invariant", ("\135\153\136\\\129SD\228\202l\255\152\139\253\015\201")); ("Base__Intable", ("\028\249=Y\003]\231qd\238\172\004b\170\142\255")); ("Base__Int_intf", ("\238Q\2457\239\156\018\183J\015\240\178\193b\166@")); ("Base__Int64", ("\252B\186\239\245\155\209\227\136CIX@\189\003\029")); ("Base__Int63_emul", ("'\210s\232\177\204\254\024C\215\014\231\210\227n\235")); ("Base__Int63", ("\165\016\236\214m\014a\226A{\191\235@O\1695")); ("Base__Int32", ("\244*\172\133\227\025$@\180\027\024\132\195yO\027")); ("Base__Int0", ("N\1310\012\227\254\000\255_\222!\018\016\003\1779")); ("Base__Int", ("\165Z\179\140\230$\131\175\209\172\214\"\170\214{\250")); ("Base__Info_intf", ("\184\209'\173\251\219\167X|v\188]\190o5X")); ("Base__Info", ("-\011\149\203\248\030\2301\1907\1630\189\128\209\170")); ("Base__Indexed_container_intf", ("\179\2213\145j\\\136\tl2\240\006\188j$r")); ("Base__Indexed_container", ("\196\246\213\141\196d\130\002\232\162\144y\149\236\145\218")); ("Base__Import0", ("\156\129U\197Y[\\\153\017Ho\203\173\204\220\020")); ("Base__Import", ("\014\187\247\141\187\181\142g\176:s_,\181\219\209")); ("Base__Identifiable_intf", ("hK7}\187\129\022-r\233\241\192Q\161=j")); ("Base__Identifiable", ("L\020\162\189\228\217^\171\158H_\157\164c\130\242")); ("Base__Hashable_intf", ("\128\015G\244\135R\026\202\128F?)\193\004\195\181")); ("Base__Hashable", ("\027\187\158\245r}\018\193dbq\196\005\170g\252")); ("Base__Hash_intf", ("h\004P\218\1531G\127\212\208A\024\140\164iq")); ("Base__Hash", ("\206Rc\194\234{s3\248\165\024\162\203{\206\206")); ("Base__Globalize", ("<\243w~.\180\196t\159\193\174[\227\139\215G")); ("Base__Formatter", ("\193\149\030\140\154\1505b\162a`%\243\185'%")); ("Base__Floatable", ("\239\176\151\139\173ft(q\190\205\030C\170\197\177")); ("Base__Float", ("tR$\252\165\134g\024>\127\254\245\212-\018\141")); ("Base__Field", ("8In\234X\202\188G\186\208$\192\175\136\214v")); ("Base__Exn", ("?\191\202\221\228\185\154\127\240\191o\134\020\186b\173")); ("Base__Error", ("\199\218\231n\155/\159\156\146\247\148t\237\003\t\153")); ("Base__Equal", ("\193\217Z\127he\141N\000\1447\030\236%\131\b")); ("Base__Either0", ("!9-\011n\2077eZ\212\031c\227\029\206\t")); ("Base__Container_intf", ("\170vo*\208\209\141\219\196\168\236l\016\246\012c")); ("Base__Container", ("\191|>_\153W\235M\180uKz\214w`q")); ("Base__Comparisons", ("\196\196Y\"{\163~)\\G/\155:\004\141;")); ("Base__Comparator", ("\002\135z7b\025&\207\t\188\239&U3R\167")); ("Base__Comparable_intf", ("\252n\002\221\246\143r\235oJ\240\151\202\211\161\254")); ("Base__Comparable", (":\134'\156u#\215\225\129\191\162\229\200\185l\012")); ("Base__Char", ("\206\224\186\000'\157$\023\023\190\198{\250\141a\216")); ("Base__Bytes", ("\028\001\232X(\240\139\227s\152\156\138\023\030\r\188")); ("Base__Bool0", ("\177f\254p\023\143&\239\020\136\206\242~\018F\251")); ("Base__Bool", ("\162+\012Rx\183c\226\131\190@Z\016q\138@")); ("Base__Blit_intf", ("\171\129\t\214\130\131O\210\251F\228.\168\004Vo")); ("Base__Blit", ("}g\242\161\000\216\132\220\195\230C\002jg\234j")); ("Base__Binary_searchable_intf", ("/\213\237\209\200\192$w\158\234\169\148\012\221W\019")); ("Base__Binary_searchable", ("V\022B_\233\194\145K\248\233\025\175U\155i\197")); ("Base__Backtrace", ("\212~\253E\024|\228\141\015\169\012\006\022\0065\181")); ("Base__Array", ("P\252F\172\242{\241\226#uu\207\2068\218\015")); ("Base__Applicative_intf", ("J\176\203\159\235N(\235\027\232\198+\224\205*A")); ("Base__Applicative", ("\157\024\176\241a\165\204\133\003s3\214\007\131\244\n")); ("Base__", ("p\252\007\139\128\163W\025+\0225\001\246|P\158")); ("Base", ("\167SY\027Q9E\005r,\198\164\161\023\170\151"))], [1; (0)])

val print : Lexing.position -> unit
