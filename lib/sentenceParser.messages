grammar: ON_ERROR_REDUCE UNDERSCORE
##
## Concrete syntax: %on_error_reduce _
##
## Ends in an error in state: 52.
##
## declaration -> ON_ERROR_REDUCE . separated_nonempty_list(option(COMMA),strict_actual) [ TYPE TOKEN START SEMI RIGHT PUBLIC PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COLON ]
##
## The known suffix of the stack is as follows:
## ON_ERROR_REDUCE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PARAMETER UNDERSCORE
##
## Concrete syntax: %parameter _
##
## Ends in an error in state: 50.
##
## declaration -> PARAMETER . OCAMLTYPE [ TYPE TOKEN START SEMI RIGHT PUBLIC PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COLON ]
##
## The known suffix of the stack is as follows:
## PARAMETER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTATTRIBUTE UID ATTRIBUTE UNDERSCORE
##
## Concrete syntax: %attribute UIdent [@foo] _
##
## Ends in an error in state: 47.
##
## nonempty_list(ATTRIBUTE) -> ATTRIBUTE . [ TYPE TOKEN START SEMI RIGHT PUBLIC PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COLON ]
## nonempty_list(ATTRIBUTE) -> ATTRIBUTE . nonempty_list(ATTRIBUTE) [ TYPE TOKEN START SEMI RIGHT PUBLIC PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COLON ]
##
## The known suffix of the stack is as follows:
## ATTRIBUTE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTATTRIBUTE UID COMMA UNDERSCORE
##
## Concrete syntax: %attribute UIdent , _
##
## Ends in an error in state: 21.
##
## separated_nonempty_list(option(COMMA),strict_actual) -> strict_actual option(COMMA) . separated_nonempty_list(option(COMMA),strict_actual) [ TYPE TOKEN START SEMI RIGHT PUBLIC PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COLON ATTRIBUTE ]
##
## The known suffix of the stack is as follows:
## strict_actual option(COMMA)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTATTRIBUTE UID LPAREN UID COMMA UNDERSCORE
##
## Concrete syntax: %attribute UIdent ( UIdent , _
##
## Ends in an error in state: 12.
##
## separated_nonempty_list(COMMA,strict_actual) -> strict_actual COMMA . separated_nonempty_list(COMMA,strict_actual) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## strict_actual COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTATTRIBUTE UID LPAREN UID UID
##
## Concrete syntax: %attribute UIdent ( UIdent UIdent
##
## Ends in an error in state: 8.
##
## separated_nonempty_list(COMMA,strict_actual) -> strict_actual . [ RPAREN ]
## separated_nonempty_list(COMMA,strict_actual) -> strict_actual . COMMA separated_nonempty_list(COMMA,strict_actual) [ RPAREN ]
## strict_actual -> strict_actual . located(modifier) [ STAR RPAREN QUESTION PLUS COMMA ]
##
## The known suffix of the stack is as follows:
## strict_actual
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 6, spurious reduction of production loption(delimited(LPAREN,separated_nonempty_list(COMMA,strict_actual),RPAREN)) ->
## In state 18, spurious reduction of production strict_actual -> symbol loption(delimited(LPAREN,separated_nonempty_list(COMMA,strict_actual),RPAREN))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTATTRIBUTE UID LPAREN UNDERSCORE
##
## Concrete syntax: %attribute UIdent ( _
##
## Ends in an error in state: 7.
##
## loption(delimited(LPAREN,separated_nonempty_list(COMMA,strict_actual),RPAREN)) -> LPAREN . separated_nonempty_list(COMMA,strict_actual) RPAREN [ UID TYPE TOKEN START STAR SEMI RPAREN RIGHT QUESTION QID PUBLIC PLUS PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LID LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COMMA COLON ATTRIBUTE ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTATTRIBUTE UID RPAREN
##
## Concrete syntax: %attribute UIdent )
##
## Ends in an error in state: 19.
##
## separated_nonempty_list(option(COMMA),strict_actual) -> strict_actual . [ TYPE TOKEN START SEMI RIGHT PUBLIC PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COLON ATTRIBUTE ]
## separated_nonempty_list(option(COMMA),strict_actual) -> strict_actual . option(COMMA) separated_nonempty_list(option(COMMA),strict_actual) [ TYPE TOKEN START SEMI RIGHT PUBLIC PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COLON ATTRIBUTE ]
## strict_actual -> strict_actual . located(modifier) [ UID TYPE TOKEN START STAR SEMI RIGHT QUESTION QID PUBLIC PLUS PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LID LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COMMA COLON ATTRIBUTE ]
##
## The known suffix of the stack is as follows:
## strict_actual
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 6, spurious reduction of production loption(delimited(LPAREN,separated_nonempty_list(COMMA,strict_actual),RPAREN)) ->
## In state 18, spurious reduction of production strict_actual -> symbol loption(delimited(LPAREN,separated_nonempty_list(COMMA,strict_actual),RPAREN))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTATTRIBUTE UID TYPE
##
## Concrete syntax: %attribute UIdent %type
##
## Ends in an error in state: 46.
##
## declaration -> PERCENTATTRIBUTE separated_nonempty_list(option(COMMA),strict_actual) . nonempty_list(ATTRIBUTE) [ TYPE TOKEN START SEMI RIGHT PUBLIC PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COLON ]
##
## The known suffix of the stack is as follows:
## PERCENTATTRIBUTE separated_nonempty_list(option(COMMA),strict_actual)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 6, spurious reduction of production loption(delimited(LPAREN,separated_nonempty_list(COMMA,strict_actual),RPAREN)) ->
## In state 18, spurious reduction of production strict_actual -> symbol loption(delimited(LPAREN,separated_nonempty_list(COMMA,strict_actual),RPAREN))
## In state 19, spurious reduction of production separated_nonempty_list(option(COMMA),strict_actual) -> strict_actual
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTATTRIBUTE UID UNDERSCORE
##
## Concrete syntax: %attribute UIdent _
##
## Ends in an error in state: 6.
##
## strict_actual -> symbol . loption(delimited(LPAREN,separated_nonempty_list(COMMA,strict_actual),RPAREN)) [ UID TYPE TOKEN START STAR SEMI RPAREN RIGHT QUESTION QID PUBLIC PLUS PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LID LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COMMA COLON ATTRIBUTE ]
##
## The known suffix of the stack is as follows:
## symbol
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTATTRIBUTE UNDERSCORE
##
## Concrete syntax: %attribute _
##
## Ends in an error in state: 45.
##
## declaration -> PERCENTATTRIBUTE . separated_nonempty_list(option(COMMA),strict_actual) nonempty_list(ATTRIBUTE) [ TYPE TOKEN START SEMI RIGHT PUBLIC PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COLON ]
##
## The known suffix of the stack is as follows:
## PERCENTATTRIBUTE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT INLINE UNDERSCORE
##
## Concrete syntax: %% %inline _
##
## Ends in an error in state: 71.
##
## flags -> INLINE . [ UID QID LID ]
## flags -> INLINE . PUBLIC [ UID QID LID ]
##
## The known suffix of the stack is as follows:
## INLINE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT LET LID EQUALEQUAL BAR TYPE
##
## Concrete syntax: %% let lident == | %type
##
## Ends in an error in state: 151.
##
## reversed_preceded_or_separated_nonempty_llist(BAR,branch) -> BAR . located(raw_seq_expression) [ UID RPAREN QID PUBLIC PERCENTPERCENT LID LET INLINE EOF COMMA BAR ]
##
## The known suffix of the stack is as follows:
## BAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT LET LID EQUALEQUAL LID UNDERSCORE
##
## Concrete syntax: %% let lident == lident _
##
## Ends in an error in state: 150.
##
## pattern -> LID . [ EQUAL ]
## symbol -> LID . [ UID STAR SEMI RPAREN QUESTION QID PUBLIC PLUS PERCENTPERCENT LPAREN LID LET INLINE EOF COMMA BAR ATTRIBUTE ]
##
## The known suffix of the stack is as follows:
## LID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT LET LID EQUALEQUAL LPAREN UID
##
## Concrete syntax: %% let lident == ( UIdent
##
## Ends in an error in state: 142.
##
## pattern -> LPAREN . loption(separated_nonempty_list(COMMA,pattern)) RPAREN [ RPAREN EQUAL COMMA ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT LET LID EQUALEQUAL LPAREN UNDERSCORE COMMA UID
##
## Concrete syntax: %% let lident == ( _ , UIdent
##
## Ends in an error in state: 146.
##
## separated_nonempty_list(COMMA,pattern) -> pattern COMMA . separated_nonempty_list(COMMA,pattern) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## pattern COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT LET LID EQUALEQUAL LPAREN UNDERSCORE RIGHT
##
## Concrete syntax: %% let lident == ( _ %right
##
## Ends in an error in state: 148.
##
## pattern -> LPAREN loption(separated_nonempty_list(COMMA,pattern)) . RPAREN [ RPAREN EQUAL COMMA ]
##
## The known suffix of the stack is as follows:
## LPAREN loption(separated_nonempty_list(COMMA,pattern))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 145, spurious reduction of production separated_nonempty_list(COMMA,pattern) -> pattern
## In state 144, spurious reduction of production loption(separated_nonempty_list(COMMA,pattern)) -> separated_nonempty_list(COMMA,pattern)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT LET LID EQUALEQUAL OCAMLTYPE UNDERSCORE
##
## Concrete syntax: %% let lident == <unit> _
##
## Ends in an error in state: 159.
##
## located(choice_expression) -> reversed_preceded_or_separated_nonempty_llist(BAR,branch) . [ UID RPAREN QID PUBLIC PERCENTPERCENT LID LET INLINE EOF COMMA ]
## reversed_preceded_or_separated_nonempty_llist(BAR,branch) -> reversed_preceded_or_separated_nonempty_llist(BAR,branch) . BAR located(raw_seq_expression) [ UID RPAREN QID PUBLIC PERCENTPERCENT LID LET INLINE EOF COMMA BAR ]
##
## The known suffix of the stack is as follows:
## reversed_preceded_or_separated_nonempty_llist(BAR,branch)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 173, spurious reduction of production action_expression -> action
## In state 172, spurious reduction of production raw_seq_expression -> action_expression
## In state 161, spurious reduction of production located(raw_seq_expression) -> raw_seq_expression
## In state 176, spurious reduction of production reversed_preceded_or_separated_nonempty_llist(BAR,branch) -> located(raw_seq_expression)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT LET LID EQUALEQUAL PREC LID UNDERSCORE
##
## Concrete syntax: %% let lident == %prec lident _
##
## Ends in an error in state: 162.
##
## action_expression -> precedence . action [ UID RPAREN QID PUBLIC PERCENTPERCENT LID LET INLINE EOF COMMA BAR ]
##
## The known suffix of the stack is as follows:
## precedence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT LET LID EQUALEQUAL TYPE
##
## Concrete syntax: %% let lident == %type
##
## Ends in an error in state: 138.
##
## new_rule -> boption(PUBLIC) LET LID list(ATTRIBUTE) loption(delimited(LPAREN,separated_nonempty_list(COMMA,symbol),RPAREN)) equality_symbol . expression [ UID QID PUBLIC PERCENTPERCENT LID LET INLINE EOF ]
##
## The known suffix of the stack is as follows:
## boption(PUBLIC) LET LID list(ATTRIBUTE) loption(delimited(LPAREN,separated_nonempty_list(COMMA,symbol),RPAREN)) equality_symbol
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT LET LID EQUALEQUAL UID BAR TYPE
##
## Concrete syntax: %% let lident == UIdent | %type
##
## Ends in an error in state: 160.
##
## reversed_preceded_or_separated_nonempty_llist(BAR,branch) -> reversed_preceded_or_separated_nonempty_llist(BAR,branch) BAR . located(raw_seq_expression) [ UID RPAREN QID PUBLIC PERCENTPERCENT LID LET INLINE EOF COMMA BAR ]
##
## The known suffix of the stack is as follows:
## reversed_preceded_or_separated_nonempty_llist(BAR,branch) BAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT LET LID EQUALEQUAL UID LPAREN TYPE
##
## Concrete syntax: %% let lident == UIdent ( %type
##
## Ends in an error in state: 156.
##
## loption(delimited(LPAREN,separated_nonempty_list(COMMA,expression),RPAREN)) -> LPAREN . separated_nonempty_list(COMMA,expression) RPAREN [ UID STAR SEMI RPAREN QUESTION QID PUBLIC PLUS PERCENTPERCENT LID LET INLINE EOF COMMA BAR ATTRIBUTE ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT LET LID EQUALEQUAL UID LPAREN UID COMMA TYPE
##
## Concrete syntax: %% let lident == UIdent ( UIdent , %type
##
## Ends in an error in state: 179.
##
## separated_nonempty_list(COMMA,expression) -> expression COMMA . separated_nonempty_list(COMMA,expression) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## expression COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT LET LID EQUALEQUAL UID LPAREN UID UID
##
## Concrete syntax: %% let lident == UIdent ( UIdent UIdent
##
## Ends in an error in state: 178.
##
## separated_nonempty_list(COMMA,expression) -> expression . [ RPAREN ]
## separated_nonempty_list(COMMA,expression) -> expression . COMMA separated_nonempty_list(COMMA,expression) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 155, spurious reduction of production loption(delimited(LPAREN,separated_nonempty_list(COMMA,expression),RPAREN)) ->
## In state 181, spurious reduction of production list(ATTRIBUTE) ->
## In state 182, spurious reduction of production symbol_expression -> symbol loption(delimited(LPAREN,separated_nonempty_list(COMMA,expression),RPAREN)) list(ATTRIBUTE)
## In state 153, spurious reduction of production raw_seq_expression -> symbol_expression
## In state 161, spurious reduction of production located(raw_seq_expression) -> raw_seq_expression
## In state 176, spurious reduction of production reversed_preceded_or_separated_nonempty_llist(BAR,branch) -> located(raw_seq_expression)
## In state 159, spurious reduction of production located(choice_expression) -> reversed_preceded_or_separated_nonempty_llist(BAR,branch)
## In state 177, spurious reduction of production expression -> located(choice_expression)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT LET LID EQUALEQUAL UID RPAREN
##
## Concrete syntax: %% let lident == UIdent )
##
## Ends in an error in state: 74.
##
## list(rule) -> new_rule . list(rule) [ PERCENTPERCENT EOF ]
##
## The known suffix of the stack is as follows:
## new_rule
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 155, spurious reduction of production loption(delimited(LPAREN,separated_nonempty_list(COMMA,expression),RPAREN)) ->
## In state 181, spurious reduction of production list(ATTRIBUTE) ->
## In state 182, spurious reduction of production symbol_expression -> symbol loption(delimited(LPAREN,separated_nonempty_list(COMMA,expression),RPAREN)) list(ATTRIBUTE)
## In state 153, spurious reduction of production raw_seq_expression -> symbol_expression
## In state 161, spurious reduction of production located(raw_seq_expression) -> raw_seq_expression
## In state 176, spurious reduction of production reversed_preceded_or_separated_nonempty_llist(BAR,branch) -> located(raw_seq_expression)
## In state 159, spurious reduction of production located(choice_expression) -> reversed_preceded_or_separated_nonempty_llist(BAR,branch)
## In state 177, spurious reduction of production expression -> located(choice_expression)
## In state 185, spurious reduction of production new_rule -> boption(PUBLIC) LET LID list(ATTRIBUTE) loption(delimited(LPAREN,separated_nonempty_list(COMMA,symbol),RPAREN)) equality_symbol expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT LET LID EQUALEQUAL UID SEMI TYPE
##
## Concrete syntax: %% let lident == UIdent ; %type
##
## Ends in an error in state: 154.
##
## raw_seq_expression -> symbol_expression SEMI . located(raw_seq_expression) [ UID RPAREN QID PUBLIC PERCENTPERCENT LID LET INLINE EOF COMMA BAR ]
##
## The known suffix of the stack is as follows:
## symbol_expression SEMI
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT LET LID EQUALEQUAL UID UNDERSCORE
##
## Concrete syntax: %% let lident == UIdent _
##
## Ends in an error in state: 153.
##
## located(symbol_expression) -> symbol_expression . [ STAR QUESTION PLUS ]
## raw_seq_expression -> symbol_expression . SEMI located(raw_seq_expression) [ UID RPAREN QID PUBLIC PERCENTPERCENT LID LET INLINE EOF COMMA BAR ]
## raw_seq_expression -> symbol_expression . [ UID RPAREN QID PUBLIC PERCENTPERCENT LID LET INLINE EOF COMMA BAR ]
##
## The known suffix of the stack is as follows:
## symbol_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 155, spurious reduction of production loption(delimited(LPAREN,separated_nonempty_list(COMMA,expression),RPAREN)) ->
## In state 181, spurious reduction of production list(ATTRIBUTE) ->
## In state 182, spurious reduction of production symbol_expression -> symbol loption(delimited(LPAREN,separated_nonempty_list(COMMA,expression),RPAREN)) list(ATTRIBUTE)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT LET LID EQUALEQUAL UNDERSCORE EQUAL UID SEMI TYPE
##
## Concrete syntax: %% let lident == _ = UIdent ; %type
##
## Ends in an error in state: 167.
##
## raw_seq_expression -> pattern EQUAL symbol_expression SEMI . located(raw_seq_expression) [ UID RPAREN QID PUBLIC PERCENTPERCENT LID LET INLINE EOF COMMA BAR ]
##
## The known suffix of the stack is as follows:
## pattern EQUAL symbol_expression SEMI
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT LET LID EQUALEQUAL UNDERSCORE EQUAL UID UNDERSCORE
##
## Concrete syntax: %% let lident == _ = UIdent _
##
## Ends in an error in state: 166.
##
## located(symbol_expression) -> symbol_expression . [ STAR QUESTION PLUS ]
## raw_seq_expression -> pattern EQUAL symbol_expression . SEMI located(raw_seq_expression) [ UID RPAREN QID PUBLIC PERCENTPERCENT LID LET INLINE EOF COMMA BAR ]
##
## The known suffix of the stack is as follows:
## pattern EQUAL symbol_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 155, spurious reduction of production loption(delimited(LPAREN,separated_nonempty_list(COMMA,expression),RPAREN)) ->
## In state 181, spurious reduction of production list(ATTRIBUTE) ->
## In state 182, spurious reduction of production symbol_expression -> symbol loption(delimited(LPAREN,separated_nonempty_list(COMMA,expression),RPAREN)) list(ATTRIBUTE)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT LET LID EQUALEQUAL UNDERSCORE EQUAL UNDERSCORE
##
## Concrete syntax: %% let lident == _ = _
##
## Ends in an error in state: 165.
##
## raw_seq_expression -> pattern EQUAL . symbol_expression SEMI located(raw_seq_expression) [ UID RPAREN QID PUBLIC PERCENTPERCENT LID LET INLINE EOF COMMA BAR ]
##
## The known suffix of the stack is as follows:
## pattern EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT LET LID EQUALEQUAL UNDERSCORE UNDERSCORE
##
## Concrete syntax: %% let lident == _ _
##
## Ends in an error in state: 164.
##
## raw_seq_expression -> pattern . EQUAL symbol_expression SEMI located(raw_seq_expression) [ UID RPAREN QID PUBLIC PERCENTPERCENT LID LET INLINE EOF COMMA BAR ]
##
## The known suffix of the stack is as follows:
## pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT LET LID LPAREN LID RPAREN COLON
##
## Concrete syntax: %% let lident ( lident ) :
##
## Ends in an error in state: 135.
##
## new_rule -> boption(PUBLIC) LET LID list(ATTRIBUTE) loption(delimited(LPAREN,separated_nonempty_list(COMMA,symbol),RPAREN)) . equality_symbol expression [ UID QID PUBLIC PERCENTPERCENT LID LET INLINE EOF ]
##
## The known suffix of the stack is as follows:
## boption(PUBLIC) LET LID list(ATTRIBUTE) loption(delimited(LPAREN,separated_nonempty_list(COMMA,symbol),RPAREN))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT LET LID UNDERSCORE
##
## Concrete syntax: %% let lident _
##
## Ends in an error in state: 134.
##
## new_rule -> boption(PUBLIC) LET LID list(ATTRIBUTE) . loption(delimited(LPAREN,separated_nonempty_list(COMMA,symbol),RPAREN)) equality_symbol expression [ UID QID PUBLIC PERCENTPERCENT LID LET INLINE EOF ]
##
## The known suffix of the stack is as follows:
## boption(PUBLIC) LET LID list(ATTRIBUTE)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 133, spurious reduction of production list(ATTRIBUTE) ->
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT LET UNDERSCORE
##
## Concrete syntax: %% let _
##
## Ends in an error in state: 132.
##
## new_rule -> boption(PUBLIC) LET . LID list(ATTRIBUTE) loption(delimited(LPAREN,separated_nonempty_list(COMMA,symbol),RPAREN)) equality_symbol expression [ UID QID PUBLIC PERCENTPERCENT LID LET INLINE EOF ]
##
## The known suffix of the stack is as follows:
## boption(PUBLIC) LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT PUBLIC INLINE UNDERSCORE
##
## Concrete syntax: %% %public %inline _
##
## Ends in an error in state: 76.
##
## old_rule -> flags . symbol list(ATTRIBUTE) loption(delimited(LPAREN,separated_nonempty_list(COMMA,symbol),RPAREN)) COLON optional_bar separated_nonempty_list(BAR,production_group) list(SEMI) [ UID QID PUBLIC PERCENTPERCENT LID LET INLINE EOF ]
##
## The known suffix of the stack is as follows:
## flags
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT PUBLIC UNDERSCORE
##
## Concrete syntax: %% %public _
##
## Ends in an error in state: 69.
##
## boption(PUBLIC) -> PUBLIC . [ LET ]
## flags -> PUBLIC . [ UID QID LID ]
## flags -> PUBLIC . INLINE [ UID QID LID ]
##
## The known suffix of the stack is as follows:
## PUBLIC
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT UID COLON ACTION BAR UNDERSCORE
##
## Concrete syntax: %% UIdent : {} | _
##
## Ends in an error in state: 104.
##
## separated_nonempty_list(BAR,production_group) -> production_group BAR . separated_nonempty_list(BAR,production_group) [ UID SEMI RPAREN QID PUBLIC PERCENTPERCENT LID LET INLINE EOF COMMA ]
##
## The known suffix of the stack is as follows:
## production_group BAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT UID COLON ACTION PREC UID UNDERSCORE
##
## Concrete syntax: %% UIdent : {} %prec UIdent _
##
## Ends in an error in state: 103.
##
## separated_nonempty_list(BAR,production_group) -> production_group . [ UID SEMI RPAREN QID PUBLIC PERCENTPERCENT LID LET INLINE EOF COMMA ]
## separated_nonempty_list(BAR,production_group) -> production_group . BAR separated_nonempty_list(BAR,production_group) [ UID SEMI RPAREN QID PUBLIC PERCENTPERCENT LID LET INLINE EOF COMMA ]
##
## The known suffix of the stack is as follows:
## production_group
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT UID COLON ACTION RPAREN
##
## Concrete syntax: %% UIdent : {} )
##
## Ends in an error in state: 129.
##
## old_rule -> flags symbol list(ATTRIBUTE) loption(delimited(LPAREN,separated_nonempty_list(COMMA,symbol),RPAREN)) COLON optional_bar separated_nonempty_list(BAR,production_group) . list(SEMI) [ UID QID PUBLIC PERCENTPERCENT LID LET INLINE EOF ]
##
## The known suffix of the stack is as follows:
## flags symbol list(ATTRIBUTE) loption(delimited(LPAREN,separated_nonempty_list(COMMA,symbol),RPAREN)) COLON optional_bar separated_nonempty_list(BAR,production_group)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 99, spurious reduction of production production_group -> separated_nonempty_list(BAR,production) ACTION
## In state 103, spurious reduction of production separated_nonempty_list(BAR,production_group) -> production_group
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT UID COLON ACTION SEMI PREC
##
## Concrete syntax: %% UIdent : {} ; %prec
##
## Ends in an error in state: 73.
##
## list(rule) -> old_rule . list(rule) [ PERCENTPERCENT EOF ]
##
## The known suffix of the stack is as follows:
## old_rule
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 114, spurious reduction of production list(SEMI) ->
## In state 115, spurious reduction of production list(SEMI) -> SEMI list(SEMI)
## In state 130, spurious reduction of production old_rule -> flags symbol list(ATTRIBUTE) loption(delimited(LPAREN,separated_nonempty_list(COMMA,symbol),RPAREN)) COLON optional_bar separated_nonempty_list(BAR,production_group) list(SEMI)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT UID COLON ACTION SEMI UNDERSCORE
##
## Concrete syntax: %% UIdent : {} ; _
##
## Ends in an error in state: 114.
##
## list(SEMI) -> SEMI . list(SEMI) [ UID QID PUBLIC PREC PERCENTPERCENT LID LET INLINE EOF BAR ACTION ]
##
## The known suffix of the stack is as follows:
## SEMI
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT UID COLON ACTION UNDERSCORE
##
## Concrete syntax: %% UIdent : {} _
##
## Ends in an error in state: 99.
##
## production_group -> separated_nonempty_list(BAR,production) ACTION . [ UID SEMI RPAREN QID PUBLIC PERCENTPERCENT LID LET INLINE EOF COMMA BAR ]
## production_group -> separated_nonempty_list(BAR,production) ACTION . precedence [ UID SEMI RPAREN QID PUBLIC PERCENTPERCENT LID LET INLINE EOF COMMA BAR ]
##
## The known suffix of the stack is as follows:
## separated_nonempty_list(BAR,production) ACTION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT UID COLON BAR UNDERSCORE
##
## Concrete syntax: %% UIdent : | _
##
## Ends in an error in state: 88.
##
## old_rule -> flags symbol list(ATTRIBUTE) loption(delimited(LPAREN,separated_nonempty_list(COMMA,symbol),RPAREN)) COLON optional_bar . separated_nonempty_list(BAR,production_group) list(SEMI) [ UID QID PUBLIC PERCENTPERCENT LID LET INLINE EOF ]
##
## The known suffix of the stack is as follows:
## flags symbol list(ATTRIBUTE) loption(delimited(LPAREN,separated_nonempty_list(COMMA,symbol),RPAREN)) COLON optional_bar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT UID COLON LID EQUAL UID UNDERSCORE
##
## Concrete syntax: %% UIdent : lident = UIdent _
##
## Ends in an error in state: 127.
##
## producer -> LID EQUAL actual list(ATTRIBUTE) . list(SEMI) [ UID QID PREC LID BAR ACTION ]
##
## The known suffix of the stack is as follows:
## LID EQUAL actual list(ATTRIBUTE)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 91, spurious reduction of production loption(delimited(LPAREN,separated_nonempty_list(COMMA,lax_actual),RPAREN)) ->
## In state 125, spurious reduction of production actual -> symbol loption(delimited(LPAREN,separated_nonempty_list(COMMA,lax_actual),RPAREN))
## In state 126, spurious reduction of production list(ATTRIBUTE) ->
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT UID COLON LID EQUAL UNDERSCORE
##
## Concrete syntax: %% UIdent : lident = _
##
## Ends in an error in state: 90.
##
## producer -> LID EQUAL . actual list(ATTRIBUTE) list(SEMI) [ UID QID PREC LID BAR ACTION ]
##
## The known suffix of the stack is as follows:
## LID EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT UID COLON LID UNDERSCORE
##
## Concrete syntax: %% UIdent : lident _
##
## Ends in an error in state: 89.
##
## producer -> LID . EQUAL actual list(ATTRIBUTE) list(SEMI) [ UID QID PREC LID BAR ACTION ]
## symbol -> LID . [ UID STAR SEMI RPAREN QUESTION QID PREC PLUS LPAREN LID COMMA BAR ATTRIBUTE ACTION ]
##
## The known suffix of the stack is as follows:
## LID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT UID COLON PREC LID UNDERSCORE
##
## Concrete syntax: %% UIdent : %prec lident _
##
## Ends in an error in state: 106.
##
## separated_nonempty_list(BAR,production) -> production . [ ACTION ]
## separated_nonempty_list(BAR,production) -> production . BAR separated_nonempty_list(BAR,production) [ ACTION ]
##
## The known suffix of the stack is as follows:
## production
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT UID COLON PREC UNDERSCORE
##
## Concrete syntax: %% UIdent : %prec _
##
## Ends in an error in state: 100.
##
## precedence -> PREC . symbol [ UID SEMI RPAREN QID PUBLIC PERCENTPERCENT OCAMLTYPE LID LET INLINE EOF COMMA BAR ACTION ]
##
## The known suffix of the stack is as follows:
## PREC
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT UID COLON UID BAR UNDERSCORE
##
## Concrete syntax: %% UIdent : UIdent | _
##
## Ends in an error in state: 107.
##
## separated_nonempty_list(BAR,production) -> production BAR . separated_nonempty_list(BAR,production) [ ACTION ]
##
## The known suffix of the stack is as follows:
## production BAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT UID COLON UID LPAREN ACTION UID
##
## Concrete syntax: %% UIdent : UIdent ( {} UIdent
##
## Ends in an error in state: 120.
##
## separated_nonempty_list(COMMA,lax_actual) -> lax_actual . [ RPAREN ]
## separated_nonempty_list(COMMA,lax_actual) -> lax_actual . COMMA separated_nonempty_list(COMMA,lax_actual) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## lax_actual
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 99, spurious reduction of production production_group -> separated_nonempty_list(BAR,production) ACTION
## In state 103, spurious reduction of production separated_nonempty_list(BAR,production_group) -> production_group
## In state 97, spurious reduction of production located(branches) -> separated_nonempty_list(BAR,production_group)
## In state 119, spurious reduction of production lax_actual -> located(branches)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT UID COLON UID LPAREN UID COMMA UNDERSCORE
##
## Concrete syntax: %% UIdent : UIdent ( UIdent , _
##
## Ends in an error in state: 121.
##
## separated_nonempty_list(COMMA,lax_actual) -> lax_actual COMMA . separated_nonempty_list(COMMA,lax_actual) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## lax_actual COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT UID COLON UID LPAREN UID STAR UNDERSCORE
##
## Concrete syntax: %% UIdent : UIdent ( UIdent * _
##
## Ends in an error in state: 124.
##
## actual -> actual located(modifier) . [ UID STAR SEMI QUESTION QID PREC PLUS LID BAR ATTRIBUTE ACTION ]
## lax_actual -> actual located(modifier) . [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## actual located(modifier)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT UID COLON UID LPAREN UID UNDERSCORE
##
## Concrete syntax: %% UIdent : UIdent ( UIdent _
##
## Ends in an error in state: 94.
##
## actual -> symbol loption(delimited(LPAREN,separated_nonempty_list(COMMA,lax_actual),RPAREN)) . [ UID STAR SEMI QUESTION QID PREC PLUS LID BAR ATTRIBUTE ACTION ]
## lax_actual -> symbol loption(delimited(LPAREN,separated_nonempty_list(COMMA,lax_actual),RPAREN)) . [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## symbol loption(delimited(LPAREN,separated_nonempty_list(COMMA,lax_actual),RPAREN))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 93, spurious reduction of production loption(delimited(LPAREN,separated_nonempty_list(COMMA,lax_actual),RPAREN)) ->
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT UID COLON UID LPAREN UNDERSCORE
##
## Concrete syntax: %% UIdent : UIdent ( _
##
## Ends in an error in state: 92.
##
## loption(delimited(LPAREN,separated_nonempty_list(COMMA,lax_actual),RPAREN)) -> LPAREN . separated_nonempty_list(COMMA,lax_actual) RPAREN [ UID STAR SEMI RPAREN QUESTION QID PREC PLUS LID COMMA BAR ATTRIBUTE ACTION ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT UID COLON UID SEMI PUBLIC
##
## Concrete syntax: %% UIdent : UIdent ; %public
##
## Ends in an error in state: 109.
##
## list(producer) -> producer . list(producer) [ PREC BAR ACTION ]
##
## The known suffix of the stack is as follows:
## producer
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 114, spurious reduction of production list(SEMI) ->
## In state 115, spurious reduction of production list(SEMI) -> SEMI list(SEMI)
## In state 116, spurious reduction of production producer -> actual list(ATTRIBUTE) list(SEMI)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT UID COLON UID UNDERSCORE
##
## Concrete syntax: %% UIdent : UIdent _
##
## Ends in an error in state: 113.
##
## producer -> actual list(ATTRIBUTE) . list(SEMI) [ UID QID PREC LID BAR ACTION ]
##
## The known suffix of the stack is as follows:
## actual list(ATTRIBUTE)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 91, spurious reduction of production loption(delimited(LPAREN,separated_nonempty_list(COMMA,lax_actual),RPAREN)) ->
## In state 125, spurious reduction of production actual -> symbol loption(delimited(LPAREN,separated_nonempty_list(COMMA,lax_actual),RPAREN))
## In state 111, spurious reduction of production list(ATTRIBUTE) ->
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT UID COLON UNDERSCORE
##
## Concrete syntax: %% UIdent : _
##
## Ends in an error in state: 86.
##
## old_rule -> flags symbol list(ATTRIBUTE) loption(delimited(LPAREN,separated_nonempty_list(COMMA,symbol),RPAREN)) COLON . optional_bar separated_nonempty_list(BAR,production_group) list(SEMI) [ UID QID PUBLIC PERCENTPERCENT LID LET INLINE EOF ]
##
## The known suffix of the stack is as follows:
## flags symbol list(ATTRIBUTE) loption(delimited(LPAREN,separated_nonempty_list(COMMA,symbol),RPAREN)) COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT UID LPAREN UID COMMA UNDERSCORE
##
## Concrete syntax: %% UIdent ( UIdent , _
##
## Ends in an error in state: 81.
##
## separated_nonempty_list(COMMA,symbol) -> symbol COMMA . separated_nonempty_list(COMMA,symbol) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## symbol COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT UID LPAREN UID RPAREN BAR
##
## Concrete syntax: %% UIdent ( UIdent ) |
##
## Ends in an error in state: 85.
##
## old_rule -> flags symbol list(ATTRIBUTE) loption(delimited(LPAREN,separated_nonempty_list(COMMA,symbol),RPAREN)) . COLON optional_bar separated_nonempty_list(BAR,production_group) list(SEMI) [ UID QID PUBLIC PERCENTPERCENT LID LET INLINE EOF ]
##
## The known suffix of the stack is as follows:
## flags symbol list(ATTRIBUTE) loption(delimited(LPAREN,separated_nonempty_list(COMMA,symbol),RPAREN))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT UID LPAREN UID UNDERSCORE
##
## Concrete syntax: %% UIdent ( UIdent _
##
## Ends in an error in state: 83.
##
## loption(delimited(LPAREN,separated_nonempty_list(COMMA,symbol),RPAREN)) -> LPAREN separated_nonempty_list(COMMA,symbol) . RPAREN [ EQUALEQUAL COLONEQUAL COLON ]
##
## The known suffix of the stack is as follows:
## LPAREN separated_nonempty_list(COMMA,symbol)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 80, spurious reduction of production separated_nonempty_list(COMMA,symbol) -> symbol
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT UID LPAREN UNDERSCORE
##
## Concrete syntax: %% UIdent ( _
##
## Ends in an error in state: 79.
##
## loption(delimited(LPAREN,separated_nonempty_list(COMMA,symbol),RPAREN)) -> LPAREN . separated_nonempty_list(COMMA,symbol) RPAREN [ EQUALEQUAL COLONEQUAL COLON ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT UID UNDERSCORE
##
## Concrete syntax: %% UIdent _
##
## Ends in an error in state: 78.
##
## old_rule -> flags symbol list(ATTRIBUTE) . loption(delimited(LPAREN,separated_nonempty_list(COMMA,symbol),RPAREN)) COLON optional_bar separated_nonempty_list(BAR,production_group) list(SEMI) [ UID QID PUBLIC PERCENTPERCENT LID LET INLINE EOF ]
##
## The known suffix of the stack is as follows:
## flags symbol list(ATTRIBUTE)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 77, spurious reduction of production list(ATTRIBUTE) ->
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: PERCENTPERCENT UNDERSCORE
##
## Concrete syntax: %% _
##
## Ends in an error in state: 68.
##
## grammar -> list(declaration) PERCENTPERCENT . list(rule) postlude [ # ]
##
## The known suffix of the stack is as follows:
## list(declaration) PERCENTPERCENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: RIGHT UID COMMA UNDERSCORE
##
## Concrete syntax: %right UIdent , _
##
## Ends in an error in state: 64.
##
## separated_nonempty_list(option(COMMA),symbol) -> symbol option(COMMA) . separated_nonempty_list(option(COMMA),symbol) [ TYPE TOKEN START SEMI RIGHT PUBLIC PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COLON ]
##
## The known suffix of the stack is as follows:
## symbol option(COMMA)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: RIGHT UID UNDERSCORE
##
## Concrete syntax: %right UIdent _
##
## Ends in an error in state: 63.
##
## separated_nonempty_list(option(COMMA),symbol) -> symbol . [ TYPE TOKEN START SEMI RIGHT PUBLIC PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COLON ]
## separated_nonempty_list(option(COMMA),symbol) -> symbol . option(COMMA) separated_nonempty_list(option(COMMA),symbol) [ TYPE TOKEN START SEMI RIGHT PUBLIC PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COLON ]
##
## The known suffix of the stack is as follows:
## symbol
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: RIGHT UNDERSCORE
##
## Concrete syntax: %right _
##
## Ends in an error in state: 62.
##
## declaration -> priority_keyword . separated_nonempty_list(option(COMMA),symbol) [ TYPE TOKEN START SEMI RIGHT PUBLIC PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COLON ]
##
## The known suffix of the stack is as follows:
## priority_keyword
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: SEMI UNDERSCORE
##
## Concrete syntax: ; _
##
## Ends in an error in state: 192.
##
## list(declaration) -> declaration . list(declaration) [ PERCENTPERCENT ]
##
## The known suffix of the stack is as follows:
## declaration
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: START LID COMMA UNDERSCORE
##
## Concrete syntax: %start lident , _
##
## Ends in an error in state: 39.
##
## separated_nonempty_list(option(COMMA),nonterminal) -> LID option(COMMA) . separated_nonempty_list(option(COMMA),nonterminal) [ TYPE TOKEN START SEMI RIGHT PUBLIC PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COLON ]
##
## The known suffix of the stack is as follows:
## LID option(COMMA)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: START LID UNDERSCORE
##
## Concrete syntax: %start lident _
##
## Ends in an error in state: 38.
##
## separated_nonempty_list(option(COMMA),nonterminal) -> LID . [ TYPE TOKEN START SEMI RIGHT PUBLIC PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COLON ]
## separated_nonempty_list(option(COMMA),nonterminal) -> LID . option(COMMA) separated_nonempty_list(option(COMMA),nonterminal) [ TYPE TOKEN START SEMI RIGHT PUBLIC PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COLON ]
##
## The known suffix of the stack is as follows:
## LID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: START OCAMLTYPE LET
##
## Concrete syntax: %start <unit> let
##
## Ends in an error in state: 37.
##
## declaration -> START option(OCAMLTYPE) . separated_nonempty_list(option(COMMA),nonterminal) [ TYPE TOKEN START SEMI RIGHT PUBLIC PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COLON ]
##
## The known suffix of the stack is as follows:
## START option(OCAMLTYPE)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: START UNDERSCORE
##
## Concrete syntax: %start _
##
## Ends in an error in state: 36.
##
## declaration -> START . option(OCAMLTYPE) separated_nonempty_list(option(COMMA),nonterminal) [ TYPE TOKEN START SEMI RIGHT PUBLIC PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COLON ]
##
## The known suffix of the stack is as follows:
## START
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: TOKEN OCAMLTYPE UNDERSCORE
##
## Concrete syntax: %token <unit> _
##
## Ends in an error in state: 26.
##
## declaration -> TOKEN option(OCAMLTYPE) . separated_nonempty_list(option(COMMA),terminal_alias_attrs) [ TYPE TOKEN START SEMI RIGHT PUBLIC PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COLON ]
##
## The known suffix of the stack is as follows:
## TOKEN option(OCAMLTYPE)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: TOKEN UID ATTRIBUTE UNDERSCORE
##
## Concrete syntax: %token UIdent [@foo] _
##
## Ends in an error in state: 32.
##
## separated_nonempty_list(option(COMMA),terminal_alias_attrs) -> UID option(QID) list(ATTRIBUTE) . [ TYPE TOKEN START SEMI RIGHT PUBLIC PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COLON ]
## separated_nonempty_list(option(COMMA),terminal_alias_attrs) -> UID option(QID) list(ATTRIBUTE) . option(COMMA) separated_nonempty_list(option(COMMA),terminal_alias_attrs) [ TYPE TOKEN START SEMI RIGHT PUBLIC PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COLON ]
##
## The known suffix of the stack is as follows:
## UID option(QID) list(ATTRIBUTE)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production list(ATTRIBUTE) ->
## In state 31, spurious reduction of production list(ATTRIBUTE) -> ATTRIBUTE list(ATTRIBUTE)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: TOKEN UID COMMA UNDERSCORE
##
## Concrete syntax: %token UIdent , _
##
## Ends in an error in state: 33.
##
## separated_nonempty_list(option(COMMA),terminal_alias_attrs) -> UID option(QID) list(ATTRIBUTE) option(COMMA) . separated_nonempty_list(option(COMMA),terminal_alias_attrs) [ TYPE TOKEN START SEMI RIGHT PUBLIC PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COLON ]
##
## The known suffix of the stack is as follows:
## UID option(QID) list(ATTRIBUTE) option(COMMA)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: TOKEN UID UNDERSCORE
##
## Concrete syntax: %token UIdent _
##
## Ends in an error in state: 27.
##
## separated_nonempty_list(option(COMMA),terminal_alias_attrs) -> UID . option(QID) list(ATTRIBUTE) [ TYPE TOKEN START SEMI RIGHT PUBLIC PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COLON ]
## separated_nonempty_list(option(COMMA),terminal_alias_attrs) -> UID . option(QID) list(ATTRIBUTE) option(COMMA) separated_nonempty_list(option(COMMA),terminal_alias_attrs) [ TYPE TOKEN START SEMI RIGHT PUBLIC PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COLON ]
##
## The known suffix of the stack is as follows:
## UID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: TOKEN UNDERSCORE
##
## Concrete syntax: %token _
##
## Ends in an error in state: 24.
##
## declaration -> TOKEN . option(OCAMLTYPE) separated_nonempty_list(option(COMMA),terminal_alias_attrs) [ TYPE TOKEN START SEMI RIGHT PUBLIC PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COLON ]
##
## The known suffix of the stack is as follows:
## TOKEN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: TYPE OCAMLTYPE UNDERSCORE
##
## Concrete syntax: %type <unit> _
##
## Ends in an error in state: 2.
##
## declaration -> TYPE OCAMLTYPE . separated_nonempty_list(option(COMMA),strict_actual) [ TYPE TOKEN START SEMI RIGHT PUBLIC PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COLON ]
##
## The known suffix of the stack is as follows:
## TYPE OCAMLTYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: TYPE UNDERSCORE
##
## Concrete syntax: %type _
##
## Ends in an error in state: 1.
##
## declaration -> TYPE . OCAMLTYPE separated_nonempty_list(option(COMMA),strict_actual) [ TYPE TOKEN START SEMI RIGHT PUBLIC PERCENTPERCENT PERCENTATTRIBUTE PARAMETER ON_ERROR_REDUCE NONASSOC LET LEFT INLINE HEADER GRAMMARATTRIBUTE EOF COLON ]
##
## The known suffix of the stack is as follows:
## TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

grammar: UNDERSCORE
##
## Concrete syntax: _
##
## Ends in an error in state: 0.
##
## grammar' -> . grammar [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

