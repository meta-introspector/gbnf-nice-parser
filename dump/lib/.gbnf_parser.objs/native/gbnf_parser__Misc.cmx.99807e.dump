[
  structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
    Pstr_attribute "ocaml.ppx.context"
    [
      structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
        Pstr_eval
        expression (_none_[0,0+-1]..[0,0+-1]) ghost
          Pexp_record
          [
            "tool_name" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_constant PConst_string("ppx_driver",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
            "include_dirs" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "load_path" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "open_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "for_package" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "None" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "debug" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_threads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_vmthreads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "recursive_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "principal" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "transparent_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unboxed_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unsafe_string" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "cookies" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                Some
                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                    Pexp_tuple
                    [
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_tuple
                        [
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_constant PConst_string("inline_tests",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                          expression (<command-line>[1,0+0]..[1,0+9])
                            Pexp_constant PConst_string("enabled",(<command-line>[1,0+1]..[1,0+8]),None)
                        ]
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                        Some
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_tuple
                            [
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_tuple
                                [
                                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                    Pexp_constant PConst_string("library-name",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                                  expression (<command-line>[1,0+0]..[1,0+13])
                                    Pexp_constant PConst_string("gbnf_parser",(<command-line>[1,0+1]..[1,0+12]),None)
                                ]
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                                None
                            ]
                    ]
          ]
          None
    ]
  structure_item (lib/misc.ml[14,976+0]..[14,976+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[14,976+0]..[14,976+0]) ghost
          Ppat_construct "()" (lib/misc.ml[14,976+0]..[14,976+0]) ghost
          None
        expression (lib/misc.ml[14,976+0]..[14,976+0]) ghost
          Pexp_apply
          expression (lib/misc.ml[14,976+0]..[14,976+0]) ghost
            Pexp_ident "Ppx_module_timer_runtime.record_start" (lib/misc.ml[14,976+0]..[14,976+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/misc.ml[14,976+0]..[14,976+0]) ghost
                Pexp_ident "Ppx_module_timer_runtime.__MODULE__" (lib/misc.ml[14,976+0]..[14,976+0]) ghost
          ]
    ]
  structure_item (lib/misc.ml[14,976+0]..[14,976+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[14,976+0]..[14,976+0]) ghost
          Ppat_construct "()" (lib/misc.ml[14,976+0]..[14,976+0]) ghost
          None
        expression (lib/misc.ml[14,976+0]..[14,976+0]) ghost
          Pexp_apply
          expression (lib/misc.ml[14,976+0]..[14,976+0]) ghost
            Pexp_ident "Ppx_bench_lib.Benchmark_accumulator.Current_libname.set" (lib/misc.ml[14,976+0]..[14,976+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/misc.ml[14,976+0]..[14,976+0]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/misc.ml[14,976+0]..[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/misc.ml[14,976+0]..[14,976+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[14,976+0]..[14,976+0]) ghost
          Ppat_construct "()" (lib/misc.ml[14,976+0]..[14,976+0]) ghost
          None
        expression (lib/misc.ml[14,976+0]..[14,976+0]) ghost
          Pexp_apply
          expression (lib/misc.ml[14,976+0]..[14,976+0]) ghost
            Pexp_ident "Expect_test_collector.Current_file.set" (lib/misc.ml[14,976+0]..[14,976+0]) ghost
          [
            <arg>
            Labelled "absolute_filename"
              expression (lib/misc.ml[14,976+0]..[14,976+0]) ghost
                Pexp_constant PConst_string("lib/misc.ml",(lib/misc.ml[14,976+0]..[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/misc.ml[14,976+0]..[14,976+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[14,976+0]..[14,976+0]) ghost
          Ppat_construct "()" (lib/misc.ml[14,976+0]..[14,976+0]) ghost
          None
        expression (lib/misc.ml[14,976+0]..[14,976+0]) ghost
          Pexp_apply
          expression (lib/misc.ml[14,976+0]..[14,976+0]) ghost
            Pexp_ident "Ppx_inline_test_lib.set_lib_and_partition" (lib/misc.ml[14,976+0]..[14,976+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/misc.ml[14,976+0]..[14,976+0]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/misc.ml[14,976+0]..[14,976+0]) ghost,None)
            <arg>
            Nolabel
              expression (lib/misc.ml[14,976+0]..[14,976+0]) ghost
                Pexp_constant PConst_string("misc.ml",(lib/misc.ml[14,976+0]..[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/misc.ml[14,976+0]..[18,1028+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[14,976+4]..[14,976+10])
          Ppat_var "single" (lib/misc.ml[14,976+4]..[14,976+10])
        expression (lib/misc.ml[14,976+13]..[18,1028+18])
          Pexp_function
          [
            <case>
              pattern (lib/misc.ml[15,998+4]..[15,998+9])
                Ppat_construct "::" (lib/misc.ml[15,998+6]..[15,998+9]) ghost
                Some
                  []
                  pattern (lib/misc.ml[15,998+6]..[15,998+9]) ghost
                    Ppat_tuple
                    [
                      pattern (lib/misc.ml[15,998+6]..[15,998+7])
                        Ppat_var "x" (lib/misc.ml[15,998+6]..[15,998+7])
                      pattern (lib/misc.ml[15,998+8]..[15,998+9]) ghost
                        Ppat_construct "[]" (lib/misc.ml[15,998+8]..[15,998+9]) ghost
                        None
                    ]
              expression (lib/misc.ml[16,1011+6]..[16,1011+7])
                Pexp_ident "x" (lib/misc.ml[16,1011+6]..[16,1011+7])
            <case>
              pattern (lib/misc.ml[17,1019+4]..[17,1019+5])
                Ppat_any
              expression (lib/misc.ml[18,1028+6]..[18,1028+18])
                Pexp_assert
                expression (lib/misc.ml[18,1028+13]..[18,1028+18])
                  Pexp_construct "false" (lib/misc.ml[18,1028+13]..[18,1028+18])
                  None
          ]
    ]
  structure_item (lib/misc.ml[20,1048+0]..[25,1134+27])
    Pstr_value Rec
    [
      <def>
        pattern (lib/misc.ml[20,1048+8]..[20,1048+12])
          Ppat_var "mapd" (lib/misc.ml[20,1048+8]..[20,1048+12])
        expression (lib/misc.ml[20,1048+13]..[25,1134+27]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[20,1048+13]..[20,1048+14])
            Ppat_var "f" (lib/misc.ml[20,1048+13]..[20,1048+14])
          expression (lib/misc.ml[20,1048+17]..[25,1134+27])
            Pexp_function
            [
              <case>
                pattern (lib/misc.ml[21,1074+4]..[21,1074+6])
                  Ppat_construct "[]" (lib/misc.ml[21,1074+4]..[21,1074+6])
                  None
                expression (lib/misc.ml[22,1084+6]..[22,1084+8])
                  Pexp_construct "[]" (lib/misc.ml[22,1084+6]..[22,1084+8])
                  None
              <case>
                pattern (lib/misc.ml[23,1093+4]..[23,1093+11])
                  Ppat_construct "::" (lib/misc.ml[23,1093+6]..[23,1093+8])
                  Some
                    []
                    pattern (lib/misc.ml[23,1093+4]..[23,1093+11]) ghost
                      Ppat_tuple
                      [
                        pattern (lib/misc.ml[23,1093+4]..[23,1093+5])
                          Ppat_var "x" (lib/misc.ml[23,1093+4]..[23,1093+5])
                        pattern (lib/misc.ml[23,1093+9]..[23,1093+11])
                          Ppat_var "xs" (lib/misc.ml[23,1093+9]..[23,1093+11])
                      ]
                expression (lib/misc.ml[24,1108+6]..[25,1134+27])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/misc.ml[24,1108+10]..[24,1108+16])
                        Ppat_tuple
                        [
                          pattern (lib/misc.ml[24,1108+10]..[24,1108+12])
                            Ppat_var "y1" (lib/misc.ml[24,1108+10]..[24,1108+12])
                          pattern (lib/misc.ml[24,1108+14]..[24,1108+16])
                            Ppat_var "y2" (lib/misc.ml[24,1108+14]..[24,1108+16])
                        ]
                      expression (lib/misc.ml[24,1108+19]..[24,1108+22])
                        Pexp_apply
                        expression (lib/misc.ml[24,1108+19]..[24,1108+20])
                          Pexp_ident "f" (lib/misc.ml[24,1108+19]..[24,1108+20])
                        [
                          <arg>
                          Nolabel
                            expression (lib/misc.ml[24,1108+21]..[24,1108+22])
                              Pexp_ident "x" (lib/misc.ml[24,1108+21]..[24,1108+22])
                        ]
                  ]
                  expression (lib/misc.ml[25,1134+6]..[25,1134+27])
                    Pexp_construct "::" (lib/misc.ml[25,1134+9]..[25,1134+11])
                    Some
                      expression (lib/misc.ml[25,1134+6]..[25,1134+27]) ghost
                        Pexp_tuple
                        [
                          expression (lib/misc.ml[25,1134+6]..[25,1134+8])
                            Pexp_ident "y1" (lib/misc.ml[25,1134+6]..[25,1134+8])
                          expression (lib/misc.ml[25,1134+12]..[25,1134+27])
                            Pexp_construct "::" (lib/misc.ml[25,1134+15]..[25,1134+17])
                            Some
                              expression (lib/misc.ml[25,1134+12]..[25,1134+27]) ghost
                                Pexp_tuple
                                [
                                  expression (lib/misc.ml[25,1134+12]..[25,1134+14])
                                    Pexp_ident "y2" (lib/misc.ml[25,1134+12]..[25,1134+14])
                                  expression (lib/misc.ml[25,1134+18]..[25,1134+27])
                                    Pexp_apply
                                    expression (lib/misc.ml[25,1134+18]..[25,1134+22])
                                      Pexp_ident "mapd" (lib/misc.ml[25,1134+18]..[25,1134+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/misc.ml[25,1134+23]..[25,1134+24])
                                          Pexp_ident "f" (lib/misc.ml[25,1134+23]..[25,1134+24])
                                      <arg>
                                      Nolabel
                                        expression (lib/misc.ml[25,1134+25]..[25,1134+27])
                                          Pexp_ident "xs" (lib/misc.ml[25,1134+25]..[25,1134+27])
                                    ]
                                ]
                        ]
            ]
    ]
  structure_item (lib/misc.ml[27,1163+0]..[29,1210+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[27,1163+4]..[27,1163+12])
          Ppat_var "tabulate" (lib/misc.ml[27,1163+4]..[27,1163+12])
        expression (lib/misc.ml[27,1163+13]..[29,1210+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[27,1163+13]..[27,1163+14])
            Ppat_var "n" (lib/misc.ml[27,1163+13]..[27,1163+14])
          expression (lib/misc.ml[27,1163+15]..[29,1210+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[27,1163+15]..[27,1163+16])
              Ppat_var "f" (lib/misc.ml[27,1163+15]..[27,1163+16])
            expression (lib/misc.ml[28,1182+2]..[29,1210+13])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/misc.ml[28,1182+6]..[28,1182+7])
                    Ppat_var "a" (lib/misc.ml[28,1182+6]..[28,1182+7])
                  expression (lib/misc.ml[28,1182+10]..[28,1182+24])
                    Pexp_apply
                    expression (lib/misc.ml[28,1182+10]..[28,1182+20])
                      Pexp_ident "Array.init" (lib/misc.ml[28,1182+10]..[28,1182+20])
                    [
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[28,1182+21]..[28,1182+22])
                          Pexp_ident "n" (lib/misc.ml[28,1182+21]..[28,1182+22])
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[28,1182+23]..[28,1182+24])
                          Pexp_ident "f" (lib/misc.ml[28,1182+23]..[28,1182+24])
                    ]
              ]
              expression (lib/misc.ml[29,1210+2]..[29,1210+13])
                Pexp_apply
                expression (lib/misc.ml[29,1210+2]..[29,1210+11])
                  Pexp_ident "Array.get" (lib/misc.ml[29,1210+2]..[29,1210+11])
                [
                  <arg>
                  Nolabel
                    expression (lib/misc.ml[29,1210+12]..[29,1210+13])
                      Pexp_ident "a" (lib/misc.ml[29,1210+12]..[29,1210+13])
                ]
    ]
  structure_item (lib/misc.ml[31,1225+0]..[36,1335+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[31,1225+4]..[31,1225+7])
          Ppat_var "sum" (lib/misc.ml[31,1225+4]..[31,1225+7])
        expression (lib/misc.ml[31,1225+8]..[36,1335+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[31,1225+8]..[31,1225+9])
            Ppat_var "n" (lib/misc.ml[31,1225+8]..[31,1225+9])
          expression (lib/misc.ml[31,1225+10]..[36,1335+6]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[31,1225+10]..[31,1225+26])
              Ppat_constraint
              pattern (lib/misc.ml[31,1225+11]..[31,1225+12])
                Ppat_var "f" (lib/misc.ml[31,1225+11]..[31,1225+12])
              core_type (lib/misc.ml[31,1225+15]..[31,1225+25])
                Ptyp_arrow
                Nolabel
                core_type (lib/misc.ml[31,1225+15]..[31,1225+18])
                  Ptyp_constr "int" (lib/misc.ml[31,1225+15]..[31,1225+18])
                  []
                core_type (lib/misc.ml[31,1225+22]..[31,1225+25])
                  Ptyp_constr "int" (lib/misc.ml[31,1225+22]..[31,1225+25])
                  []
            expression (lib/misc.ml[31,1225+27]..[36,1335+6])
              Pexp_constraint
              expression (lib/misc.ml[32,1260+2]..[36,1335+6])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lib/misc.ml[32,1260+6]..[32,1260+9])
                      Ppat_var "sum" (lib/misc.ml[32,1260+6]..[32,1260+9])
                    expression (lib/misc.ml[32,1260+12]..[32,1260+17])
                      Pexp_apply
                      expression (lib/misc.ml[32,1260+12]..[32,1260+15])
                        Pexp_ident "ref" (lib/misc.ml[32,1260+12]..[32,1260+15])
                      [
                        <arg>
                        Nolabel
                          expression (lib/misc.ml[32,1260+16]..[32,1260+17])
                            Pexp_constant PConst_int (0,None)
                      ]
                ]
                expression (lib/misc.ml[33,1281+2]..[36,1335+6])
                  Pexp_sequence
                  expression (lib/misc.ml[33,1281+2]..[35,1327+6])
                    Pexp_for Up
                    pattern (lib/misc.ml[33,1281+6]..[33,1281+7])
                      Ppat_var "x" (lib/misc.ml[33,1281+6]..[33,1281+7])
                    expression (lib/misc.ml[33,1281+10]..[33,1281+11])
                      Pexp_constant PConst_int (0,None)
                    expression (lib/misc.ml[33,1281+15]..[33,1281+20])
                      Pexp_apply
                      expression (lib/misc.ml[33,1281+17]..[33,1281+18])
                        Pexp_ident "-" (lib/misc.ml[33,1281+17]..[33,1281+18])
                      [
                        <arg>
                        Nolabel
                          expression (lib/misc.ml[33,1281+15]..[33,1281+16])
                            Pexp_ident "n" (lib/misc.ml[33,1281+15]..[33,1281+16])
                        <arg>
                        Nolabel
                          expression (lib/misc.ml[33,1281+19]..[33,1281+20])
                            Pexp_constant PConst_int (1,None)
                      ]
                    expression (lib/misc.ml[34,1305+4]..[34,1305+21])
                      Pexp_apply
                      expression (lib/misc.ml[34,1305+8]..[34,1305+10])
                        Pexp_ident ":=" (lib/misc.ml[34,1305+8]..[34,1305+10])
                      [
                        <arg>
                        Nolabel
                          expression (lib/misc.ml[34,1305+4]..[34,1305+7])
                            Pexp_ident "sum" (lib/misc.ml[34,1305+4]..[34,1305+7])
                        <arg>
                        Nolabel
                          expression (lib/misc.ml[34,1305+11]..[34,1305+21])
                            Pexp_apply
                            expression (lib/misc.ml[34,1305+16]..[34,1305+17])
                              Pexp_ident "+" (lib/misc.ml[34,1305+16]..[34,1305+17])
                            [
                              <arg>
                              Nolabel
                                expression (lib/misc.ml[34,1305+11]..[34,1305+15])
                                  Pexp_apply
                                  expression (lib/misc.ml[34,1305+11]..[34,1305+12])
                                    Pexp_ident "!" (lib/misc.ml[34,1305+11]..[34,1305+12])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/misc.ml[34,1305+12]..[34,1305+15])
                                        Pexp_ident "sum" (lib/misc.ml[34,1305+12]..[34,1305+15])
                                  ]
                              <arg>
                              Nolabel
                                expression (lib/misc.ml[34,1305+18]..[34,1305+21])
                                  Pexp_apply
                                  expression (lib/misc.ml[34,1305+18]..[34,1305+19])
                                    Pexp_ident "f" (lib/misc.ml[34,1305+18]..[34,1305+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/misc.ml[34,1305+20]..[34,1305+21])
                                        Pexp_ident "x" (lib/misc.ml[34,1305+20]..[34,1305+21])
                                  ]
                            ]
                      ]
                  expression (lib/misc.ml[36,1335+2]..[36,1335+6])
                    Pexp_apply
                    expression (lib/misc.ml[36,1335+2]..[36,1335+3])
                      Pexp_ident "!" (lib/misc.ml[36,1335+2]..[36,1335+3])
                    [
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[36,1335+3]..[36,1335+6])
                          Pexp_ident "sum" (lib/misc.ml[36,1335+3]..[36,1335+6])
                    ]
              core_type (lib/misc.ml[31,1225+29]..[31,1225+32])
                Ptyp_constr "int" (lib/misc.ml[31,1225+29]..[31,1225+32])
                []
    ]
  structure_item (lib/misc.ml[38,1343+0]..[41,1401+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[38,1343+4]..[38,1343+15])
          Ppat_var "with_buffer" (lib/misc.ml[38,1343+4]..[38,1343+15])
        expression (lib/misc.ml[38,1343+16]..[41,1401+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[38,1343+16]..[38,1343+17])
            Ppat_var "n" (lib/misc.ml[38,1343+16]..[38,1343+17])
          expression (lib/misc.ml[38,1343+18]..[41,1401+19]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[38,1343+18]..[38,1343+19])
              Ppat_var "f" (lib/misc.ml[38,1343+18]..[38,1343+19])
            expression (lib/misc.ml[39,1365+2]..[41,1401+19])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/misc.ml[39,1365+6]..[39,1365+7])
                    Ppat_var "b" (lib/misc.ml[39,1365+6]..[39,1365+7])
                  expression (lib/misc.ml[39,1365+10]..[39,1365+25])
                    Pexp_apply
                    expression (lib/misc.ml[39,1365+10]..[39,1365+23])
                      Pexp_ident "Buffer.create" (lib/misc.ml[39,1365+10]..[39,1365+23])
                    [
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[39,1365+24]..[39,1365+25])
                          Pexp_ident "n" (lib/misc.ml[39,1365+24]..[39,1365+25])
                    ]
              ]
              expression (lib/misc.ml[40,1394+2]..[41,1401+19])
                Pexp_sequence
                expression (lib/misc.ml[40,1394+2]..[40,1394+5])
                  Pexp_apply
                  expression (lib/misc.ml[40,1394+2]..[40,1394+3])
                    Pexp_ident "f" (lib/misc.ml[40,1394+2]..[40,1394+3])
                  [
                    <arg>
                    Nolabel
                      expression (lib/misc.ml[40,1394+4]..[40,1394+5])
                        Pexp_ident "b" (lib/misc.ml[40,1394+4]..[40,1394+5])
                  ]
                expression (lib/misc.ml[41,1401+2]..[41,1401+19])
                  Pexp_apply
                  expression (lib/misc.ml[41,1401+2]..[41,1401+17])
                    Pexp_ident "Buffer.contents" (lib/misc.ml[41,1401+2]..[41,1401+17])
                  [
                    <arg>
                    Nolabel
                      expression (lib/misc.ml[41,1401+18]..[41,1401+19])
                        Pexp_ident "b" (lib/misc.ml[41,1401+18]..[41,1401+19])
                  ]
    ]
  structure_item (lib/misc.ml[43,1422+0]..[43,1422+35])
    Pstr_type Rec
    [
      type_declaration "iter" (lib/misc.ml[43,1422+8]..[43,1422+12]) (lib/misc.ml[43,1422+0]..[43,1422+35])
        ptype_params =
          [
            core_type (lib/misc.ml[43,1422+5]..[43,1422+7])
              Ptyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/misc.ml[43,1422+15]..[43,1422+35])
              Ptyp_arrow
              Nolabel
              core_type (lib/misc.ml[43,1422+16]..[43,1422+26])
                Ptyp_arrow
                Nolabel
                core_type (lib/misc.ml[43,1422+16]..[43,1422+18])
                  Ptyp_var a
                core_type (lib/misc.ml[43,1422+22]..[43,1422+26])
                  Ptyp_constr "unit" (lib/misc.ml[43,1422+22]..[43,1422+26])
                  []
              core_type (lib/misc.ml[43,1422+31]..[43,1422+35])
                Ptyp_constr "unit" (lib/misc.ml[43,1422+31]..[43,1422+35])
                []
    ]
  structure_item (lib/misc.ml[45,1459+0]..[58,1800+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[45,1459+4]..[45,1459+28])
          Ppat_var "separated_iter_to_string" (lib/misc.ml[45,1459+4]..[45,1459+28])
        expression (lib/misc.ml[45,1459+29]..[58,1800+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[45,1459+29]..[45,1459+36])
            Ppat_var "printer" (lib/misc.ml[45,1459+29]..[45,1459+36])
          expression (lib/misc.ml[45,1459+37]..[58,1800+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[45,1459+37]..[45,1459+46])
              Ppat_var "separator" (lib/misc.ml[45,1459+37]..[45,1459+46])
            expression (lib/misc.ml[45,1459+47]..[58,1800+3]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/misc.ml[45,1459+47]..[45,1459+51])
                Ppat_var "iter" (lib/misc.ml[45,1459+47]..[45,1459+51])
              expression (lib/misc.ml[46,1513+2]..[58,1800+3])
                Pexp_apply
                expression (lib/misc.ml[46,1513+2]..[46,1513+13])
                  Pexp_ident "with_buffer" (lib/misc.ml[46,1513+2]..[46,1513+13])
                [
                  <arg>
                  Nolabel
                    expression (lib/misc.ml[46,1513+14]..[46,1513+16])
                      Pexp_constant PConst_int (32,None)
                  <arg>
                  Nolabel
                    expression (lib/misc.ml[46,1513+17]..[58,1800+3])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lib/misc.ml[46,1513+22]..[46,1513+23])
                        Ppat_var "b" (lib/misc.ml[46,1513+22]..[46,1513+23])
                      expression (lib/misc.ml[47,1540+4]..[57,1794+5])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/misc.ml[47,1540+8]..[47,1540+13])
                              Ppat_var "first" (lib/misc.ml[47,1540+8]..[47,1540+13])
                            expression (lib/misc.ml[47,1540+16]..[47,1540+24])
                              Pexp_apply
                              expression (lib/misc.ml[47,1540+16]..[47,1540+19])
                                Pexp_ident "ref" (lib/misc.ml[47,1540+16]..[47,1540+19])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/misc.ml[47,1540+20]..[47,1540+24])
                                    Pexp_construct "true" (lib/misc.ml[47,1540+20]..[47,1540+24])
                                    None
                              ]
                        ]
                        expression (lib/misc.ml[48,1568+4]..[57,1794+5])
                          Pexp_apply
                          expression (lib/misc.ml[48,1568+4]..[48,1568+8])
                            Pexp_ident "iter" (lib/misc.ml[48,1568+4]..[48,1568+8])
                          [
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[48,1568+9]..[57,1794+5])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/misc.ml[48,1568+14]..[48,1568+15])
                                  Ppat_var "x" (lib/misc.ml[48,1568+14]..[48,1568+15])
                                expression (lib/misc.ml[49,1587+6]..[56,1784+9])
                                  Pexp_ifthenelse
                                  expression (lib/misc.ml[49,1587+9]..[49,1587+15])
                                    Pexp_apply
                                    expression (lib/misc.ml[49,1587+9]..[49,1587+10])
                                      Pexp_ident "!" (lib/misc.ml[49,1587+9]..[49,1587+10])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/misc.ml[49,1587+10]..[49,1587+15])
                                          Pexp_ident "first" (lib/misc.ml[49,1587+10]..[49,1587+15])
                                    ]
                                  expression (lib/misc.ml[49,1587+21]..[52,1678+9])
                                    Pexp_sequence
                                    expression (lib/misc.ml[50,1614+8]..[50,1614+39])
                                      Pexp_apply
                                      expression (lib/misc.ml[50,1614+8]..[50,1614+25])
                                        Pexp_ident "Buffer.add_string" (lib/misc.ml[50,1614+8]..[50,1614+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/misc.ml[50,1614+26]..[50,1614+27])
                                            Pexp_ident "b" (lib/misc.ml[50,1614+26]..[50,1614+27])
                                        <arg>
                                        Nolabel
                                          expression (lib/misc.ml[50,1614+28]..[50,1614+39])
                                            Pexp_apply
                                            expression (lib/misc.ml[50,1614+29]..[50,1614+36])
                                              Pexp_ident "printer" (lib/misc.ml[50,1614+29]..[50,1614+36])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/misc.ml[50,1614+37]..[50,1614+38])
                                                  Pexp_ident "x" (lib/misc.ml[50,1614+37]..[50,1614+38])
                                            ]
                                      ]
                                    expression (lib/misc.ml[51,1655+8]..[51,1655+22])
                                      Pexp_apply
                                      expression (lib/misc.ml[51,1655+14]..[51,1655+16])
                                        Pexp_ident ":=" (lib/misc.ml[51,1655+14]..[51,1655+16])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/misc.ml[51,1655+8]..[51,1655+13])
                                            Pexp_ident "first" (lib/misc.ml[51,1655+8]..[51,1655+13])
                                        <arg>
                                        Nolabel
                                          expression (lib/misc.ml[51,1655+17]..[51,1655+22])
                                            Pexp_construct "false" (lib/misc.ml[51,1655+17]..[51,1655+22])
                                            None
                                      ]
                                  Some
                                    expression (lib/misc.ml[53,1688+11]..[56,1784+9])
                                      Pexp_sequence
                                      expression (lib/misc.ml[54,1705+8]..[54,1705+37])
                                        Pexp_apply
                                        expression (lib/misc.ml[54,1705+8]..[54,1705+25])
                                          Pexp_ident "Buffer.add_string" (lib/misc.ml[54,1705+8]..[54,1705+25])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/misc.ml[54,1705+26]..[54,1705+27])
                                              Pexp_ident "b" (lib/misc.ml[54,1705+26]..[54,1705+27])
                                          <arg>
                                          Nolabel
                                            expression (lib/misc.ml[54,1705+28]..[54,1705+37])
                                              Pexp_ident "separator" (lib/misc.ml[54,1705+28]..[54,1705+37])
                                        ]
                                      expression (lib/misc.ml[55,1744+8]..[55,1744+39])
                                        Pexp_apply
                                        expression (lib/misc.ml[55,1744+8]..[55,1744+25])
                                          Pexp_ident "Buffer.add_string" (lib/misc.ml[55,1744+8]..[55,1744+25])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/misc.ml[55,1744+26]..[55,1744+27])
                                              Pexp_ident "b" (lib/misc.ml[55,1744+26]..[55,1744+27])
                                          <arg>
                                          Nolabel
                                            expression (lib/misc.ml[55,1744+28]..[55,1744+39])
                                              Pexp_apply
                                              expression (lib/misc.ml[55,1744+29]..[55,1744+36])
                                                Pexp_ident "printer" (lib/misc.ml[55,1744+29]..[55,1744+36])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/misc.ml[55,1744+37]..[55,1744+38])
                                                    Pexp_ident "x" (lib/misc.ml[55,1744+37]..[55,1744+38])
                                              ]
                                        ]
                          ]
                ]
    ]
  structure_item (lib/misc.ml[60,1805+0]..[61,1857+70])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[60,1805+4]..[60,1805+28])
          Ppat_var "separated_list_to_string" (lib/misc.ml[60,1805+4]..[60,1805+28])
        expression (lib/misc.ml[60,1805+29]..[61,1857+70]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[60,1805+29]..[60,1805+36])
            Ppat_var "printer" (lib/misc.ml[60,1805+29]..[60,1805+36])
          expression (lib/misc.ml[60,1805+37]..[61,1857+70]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[60,1805+37]..[60,1805+46])
              Ppat_var "separator" (lib/misc.ml[60,1805+37]..[60,1805+46])
            expression (lib/misc.ml[60,1805+47]..[61,1857+70]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/misc.ml[60,1805+47]..[60,1805+49])
                Ppat_var "xs" (lib/misc.ml[60,1805+47]..[60,1805+49])
              expression (lib/misc.ml[61,1857+2]..[61,1857+70])
                Pexp_apply
                expression (lib/misc.ml[61,1857+2]..[61,1857+26])
                  Pexp_ident "separated_iter_to_string" (lib/misc.ml[61,1857+2]..[61,1857+26])
                [
                  <arg>
                  Nolabel
                    expression (lib/misc.ml[61,1857+27]..[61,1857+34])
                      Pexp_ident "printer" (lib/misc.ml[61,1857+27]..[61,1857+34])
                  <arg>
                  Nolabel
                    expression (lib/misc.ml[61,1857+35]..[61,1857+44])
                      Pexp_ident "separator" (lib/misc.ml[61,1857+35]..[61,1857+44])
                  <arg>
                  Nolabel
                    expression (lib/misc.ml[61,1857+45]..[61,1857+70])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lib/misc.ml[61,1857+50]..[61,1857+51])
                        Ppat_var "f" (lib/misc.ml[61,1857+50]..[61,1857+51])
                      expression (lib/misc.ml[61,1857+55]..[61,1857+69])
                        Pexp_apply
                        expression (lib/misc.ml[61,1857+55]..[61,1857+64])
                          Pexp_ident "List.iter" (lib/misc.ml[61,1857+55]..[61,1857+64])
                        [
                          <arg>
                          Nolabel
                            expression (lib/misc.ml[61,1857+65]..[61,1857+66])
                              Pexp_ident "f" (lib/misc.ml[61,1857+65]..[61,1857+66])
                          <arg>
                          Nolabel
                            expression (lib/misc.ml[61,1857+67]..[61,1857+69])
                              Pexp_ident "xs" (lib/misc.ml[61,1857+67]..[61,1857+69])
                        ]
                ]
    ]
  structure_item (lib/misc.ml[63,1929+0]..[73,2201+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[63,1929+4]..[63,1929+11])
          Ppat_var "inverse" (lib/misc.ml[63,1929+4]..[63,1929+11])
        expression (lib/misc.ml[63,1929+12]..[73,2201+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[63,1929+12]..[63,1929+26])
            Ppat_constraint
            pattern (lib/misc.ml[63,1929+13]..[63,1929+14])
              Ppat_var "a" (lib/misc.ml[63,1929+13]..[63,1929+14])
            core_type (lib/misc.ml[63,1929+17]..[63,1929+25])
              Ptyp_constr "array" (lib/misc.ml[63,1929+20]..[63,1929+25])
              [
                core_type (lib/misc.ml[63,1929+17]..[63,1929+19])
                  Ptyp_var a
              ]
          expression (lib/misc.ml[63,1929+27]..[73,2201+18])
            Pexp_constraint
            expression (lib/misc.ml[64,1970+2]..[73,2201+18])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/misc.ml[64,1970+6]..[64,1970+11])
                    Ppat_var "table" (lib/misc.ml[64,1970+6]..[64,1970+11])
                  expression (lib/misc.ml[64,1970+14]..[64,1970+45])
                    Pexp_apply
                    expression (lib/misc.ml[64,1970+14]..[64,1970+28])
                      Pexp_ident "Hashtbl.create" (lib/misc.ml[64,1970+14]..[64,1970+28])
                    [
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[64,1970+29]..[64,1970+45])
                          Pexp_apply
                          expression (lib/misc.ml[64,1970+30]..[64,1970+42])
                            Pexp_ident "Array.length" (lib/misc.ml[64,1970+30]..[64,1970+42])
                          [
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[64,1970+43]..[64,1970+44])
                                Pexp_ident "a" (lib/misc.ml[64,1970+43]..[64,1970+44])
                          ]
                    ]
              ]
              expression (lib/misc.ml[65,2019+2]..[73,2201+18])
                Pexp_sequence
                expression (lib/misc.ml[65,2019+2]..[68,2120+5])
                  Pexp_apply
                  expression (lib/misc.ml[65,2019+2]..[65,2019+13])
                    Pexp_ident "Array.iteri" (lib/misc.ml[65,2019+2]..[65,2019+13])
                  [
                    <arg>
                    Nolabel
                      expression (lib/misc.ml[65,2019+14]..[68,2120+3])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lib/misc.ml[65,2019+19]..[65,2019+20])
                          Ppat_var "i" (lib/misc.ml[65,2019+19]..[65,2019+20])
                        expression (lib/misc.ml[65,2019+21]..[67,2091+28]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lib/misc.ml[65,2019+21]..[65,2019+25])
                            Ppat_var "data" (lib/misc.ml[65,2019+21]..[65,2019+25])
                          expression (lib/misc.ml[66,2048+4]..[67,2091+28])
                            Pexp_sequence
                            expression (lib/misc.ml[66,2048+4]..[66,2048+41])
                              Pexp_assert
                              expression (lib/misc.ml[66,2048+11]..[66,2048+41])
                                Pexp_apply
                                expression (lib/misc.ml[66,2048+12]..[66,2048+15])
                                  Pexp_ident "not" (lib/misc.ml[66,2048+12]..[66,2048+15])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/misc.ml[66,2048+16]..[66,2048+40])
                                      Pexp_apply
                                      expression (lib/misc.ml[66,2048+17]..[66,2048+28])
                                        Pexp_ident "Hashtbl.mem" (lib/misc.ml[66,2048+17]..[66,2048+28])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/misc.ml[66,2048+29]..[66,2048+34])
                                            Pexp_ident "table" (lib/misc.ml[66,2048+29]..[66,2048+34])
                                        <arg>
                                        Nolabel
                                          expression (lib/misc.ml[66,2048+35]..[66,2048+39])
                                            Pexp_ident "data" (lib/misc.ml[66,2048+35]..[66,2048+39])
                                      ]
                                ]
                            expression (lib/misc.ml[67,2091+4]..[67,2091+28])
                              Pexp_apply
                              expression (lib/misc.ml[67,2091+4]..[67,2091+15])
                                Pexp_ident "Hashtbl.add" (lib/misc.ml[67,2091+4]..[67,2091+15])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/misc.ml[67,2091+16]..[67,2091+21])
                                    Pexp_ident "table" (lib/misc.ml[67,2091+16]..[67,2091+21])
                                <arg>
                                Nolabel
                                  expression (lib/misc.ml[67,2091+22]..[67,2091+26])
                                    Pexp_ident "data" (lib/misc.ml[67,2091+22]..[67,2091+26])
                                <arg>
                                Nolabel
                                  expression (lib/misc.ml[67,2091+27]..[67,2091+28])
                                    Pexp_ident "i" (lib/misc.ml[67,2091+27]..[67,2091+28])
                              ]
                    <arg>
                    Nolabel
                      expression (lib/misc.ml[68,2120+4]..[68,2120+5])
                        Pexp_ident "a" (lib/misc.ml[68,2120+4]..[68,2120+5])
                  ]
                expression (lib/misc.ml[69,2127+2]..[73,2201+18])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lib/misc.ml[69,2127+6]..[69,2127+10])
                    Ppat_var "data" (lib/misc.ml[69,2127+6]..[69,2127+10])
                  expression (lib/misc.ml[70,2141+4]..[73,2201+18])
                    Pexp_try
                    expression (lib/misc.ml[71,2149+6]..[71,2149+29])
                      Pexp_apply
                      expression (lib/misc.ml[71,2149+6]..[71,2149+18])
                        Pexp_ident "Hashtbl.find" (lib/misc.ml[71,2149+6]..[71,2149+18])
                      [
                        <arg>
                        Nolabel
                          expression (lib/misc.ml[71,2149+19]..[71,2149+24])
                            Pexp_ident "table" (lib/misc.ml[71,2149+19]..[71,2149+24])
                        <arg>
                        Nolabel
                          expression (lib/misc.ml[71,2149+25]..[71,2149+29])
                            Pexp_ident "data" (lib/misc.ml[71,2149+25]..[71,2149+29])
                      ]
                    [
                      <case>
                        pattern (lib/misc.ml[72,2179+9]..[72,2179+18])
                          Ppat_construct "Not_found" (lib/misc.ml[72,2179+9]..[72,2179+18])
                          None
                        expression (lib/misc.ml[73,2201+6]..[73,2201+18])
                          Pexp_assert
                          expression (lib/misc.ml[73,2201+13]..[73,2201+18])
                            Pexp_construct "false" (lib/misc.ml[73,2201+13]..[73,2201+18])
                            None
                    ]
            core_type (lib/misc.ml[63,1929+29]..[63,1929+38])
              Ptyp_arrow
              Nolabel
              core_type (lib/misc.ml[63,1929+29]..[63,1929+31])
                Ptyp_var a
              core_type (lib/misc.ml[63,1929+35]..[63,1929+38])
                Ptyp_constr "int" (lib/misc.ml[63,1929+35]..[63,1929+38])
                []
    ]
  structure_item (lib/misc.ml[75,2221+0]..[78,2270+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[75,2221+4]..[75,2221+17])
          Ppat_var "support_assoc" (lib/misc.ml[75,2221+4]..[75,2221+17])
        expression (lib/misc.ml[75,2221+18]..[78,2270+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[75,2221+18]..[75,2221+19])
            Ppat_var "l" (lib/misc.ml[75,2221+18]..[75,2221+19])
          expression (lib/misc.ml[75,2221+20]..[78,2270+21]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[75,2221+20]..[75,2221+21])
              Ppat_var "x" (lib/misc.ml[75,2221+20]..[75,2221+21])
            expression (lib/misc.ml[76,2245+2]..[78,2270+21])
              Pexp_try
              expression (lib/misc.ml[77,2251+4]..[77,2251+18])
                Pexp_apply
                expression (lib/misc.ml[77,2251+4]..[77,2251+14])
                  Pexp_ident "List.assoc" (lib/misc.ml[77,2251+4]..[77,2251+14])
                [
                  <arg>
                  Nolabel
                    expression (lib/misc.ml[77,2251+15]..[77,2251+16])
                      Pexp_ident "x" (lib/misc.ml[77,2251+15]..[77,2251+16])
                  <arg>
                  Nolabel
                    expression (lib/misc.ml[77,2251+17]..[77,2251+18])
                      Pexp_ident "l" (lib/misc.ml[77,2251+17]..[77,2251+18])
                ]
              [
                <case>
                  pattern (lib/misc.ml[78,2270+7]..[78,2270+16])
                    Ppat_construct "Not_found" (lib/misc.ml[78,2270+7]..[78,2270+16])
                    None
                  expression (lib/misc.ml[78,2270+20]..[78,2270+21])
                    Pexp_ident "x" (lib/misc.ml[78,2270+20]..[78,2270+21])
              ]
    ]
  structure_item (lib/misc.ml[84,2467+0]..[92,2661+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[84,2467+4]..[84,2467+15])
          Ppat_var "materialize" (lib/misc.ml[84,2467+4]..[84,2467+15])
        expression (lib/misc.ml[84,2467+16]..[92,2661+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[84,2467+16]..[84,2467+51])
            Ppat_constraint
            pattern (lib/misc.ml[84,2467+17]..[84,2467+22])
              Ppat_var "table" (lib/misc.ml[84,2467+17]..[84,2467+22])
            core_type (lib/misc.ml[84,2467+25]..[84,2467+50])
              Ptyp_constr "Hashtbl.t" (lib/misc.ml[84,2467+41]..[84,2467+50])
              [
                core_type (lib/misc.ml[84,2467+26]..[84,2467+28])
                  Ptyp_var a
                core_type (lib/misc.ml[84,2467+30]..[84,2467+39])
                  Ptyp_constr "option" (lib/misc.ml[84,2467+33]..[84,2467+39])
                  [
                    core_type (lib/misc.ml[84,2467+30]..[84,2467+32])
                      Ptyp_var a
                  ]
              ]
          expression (lib/misc.ml[84,2467+52]..[92,2661+8]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[84,2467+52]..[84,2467+60])
              Ppat_constraint
              pattern (lib/misc.ml[84,2467+53]..[84,2467+54])
                Ppat_var "x" (lib/misc.ml[84,2467+53]..[84,2467+54])
              core_type (lib/misc.ml[84,2467+57]..[84,2467+59])
                Ptyp_var a
            expression (lib/misc.ml[84,2467+61]..[92,2661+8])
              Pexp_constraint
              expression (lib/misc.ml[85,2540+2]..[92,2661+8])
                Pexp_let Rec
                [
                  <def>
                    pattern (lib/misc.ml[85,2540+10]..[85,2540+14])
                      Ppat_var "loop" (lib/misc.ml[85,2540+10]..[85,2540+14])
                    expression (lib/misc.ml[85,2540+15]..[90,2636+19]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lib/misc.ml[85,2540+15]..[85,2540+16])
                        Ppat_var "x" (lib/misc.ml[85,2540+15]..[85,2540+16])
                      expression (lib/misc.ml[86,2559+4]..[90,2636+19])
                        Pexp_match
                        expression (lib/misc.ml[86,2559+10]..[86,2559+30])
                          Pexp_apply
                          expression (lib/misc.ml[86,2559+10]..[86,2559+22])
                            Pexp_ident "Hashtbl.find" (lib/misc.ml[86,2559+10]..[86,2559+22])
                          [
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[86,2559+23]..[86,2559+28])
                                Pexp_ident "table" (lib/misc.ml[86,2559+23]..[86,2559+28])
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[86,2559+29]..[86,2559+30])
                                Pexp_ident "x" (lib/misc.ml[86,2559+29]..[86,2559+30])
                          ]
                        [
                          <case>
                            pattern (lib/misc.ml[87,2595+6]..[87,2595+10])
                              Ppat_construct "None" (lib/misc.ml[87,2595+6]..[87,2595+10])
                              None
                            expression (lib/misc.ml[88,2609+8]..[88,2609+10])
                              Pexp_construct "[]" (lib/misc.ml[88,2609+8]..[88,2609+10])
                              None
                          <case>
                            pattern (lib/misc.ml[89,2620+6]..[89,2620+12])
                              Ppat_construct "Some" (lib/misc.ml[89,2620+6]..[89,2620+10])
                              Some
                                []
                                pattern (lib/misc.ml[89,2620+11]..[89,2620+12])
                                  Ppat_var "x" (lib/misc.ml[89,2620+11]..[89,2620+12])
                            expression (lib/misc.ml[90,2636+8]..[90,2636+19])
                              Pexp_construct "::" (lib/misc.ml[90,2636+10]..[90,2636+12])
                              Some
                                expression (lib/misc.ml[90,2636+8]..[90,2636+19]) ghost
                                  Pexp_tuple
                                  [
                                    expression (lib/misc.ml[90,2636+8]..[90,2636+9])
                                      Pexp_ident "x" (lib/misc.ml[90,2636+8]..[90,2636+9])
                                    expression (lib/misc.ml[90,2636+13]..[90,2636+19])
                                      Pexp_apply
                                      expression (lib/misc.ml[90,2636+13]..[90,2636+17])
                                        Pexp_ident "loop" (lib/misc.ml[90,2636+13]..[90,2636+17])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/misc.ml[90,2636+18]..[90,2636+19])
                                            Pexp_ident "x" (lib/misc.ml[90,2636+18]..[90,2636+19])
                                      ]
                                  ]
                        ]
                ]
                expression (lib/misc.ml[92,2661+2]..[92,2661+8])
                  Pexp_apply
                  expression (lib/misc.ml[92,2661+2]..[92,2661+6])
                    Pexp_ident "loop" (lib/misc.ml[92,2661+2]..[92,2661+6])
                  [
                    <arg>
                    Nolabel
                      expression (lib/misc.ml[92,2661+7]..[92,2661+8])
                        Pexp_ident "x" (lib/misc.ml[92,2661+7]..[92,2661+8])
                  ]
              core_type (lib/misc.ml[84,2467+63]..[84,2467+70])
                Ptyp_constr "list" (lib/misc.ml[84,2467+66]..[84,2467+70])
                [
                  core_type (lib/misc.ml[84,2467+63]..[84,2467+65])
                    Ptyp_var a
                ]
    ]
  structure_item (lib/misc.ml[97,2745+0]..[100,2796+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[97,2745+4]..[97,2745+10])
          Ppat_var "iterij" (lib/misc.ml[97,2745+4]..[97,2745+10])
        expression (lib/misc.ml[97,2745+11]..[100,2796+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[97,2745+11]..[97,2745+12])
            Ppat_var "i" (lib/misc.ml[97,2745+11]..[97,2745+12])
          expression (lib/misc.ml[97,2745+13]..[100,2796+6]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[97,2745+13]..[97,2745+14])
              Ppat_var "j" (lib/misc.ml[97,2745+13]..[97,2745+14])
            expression (lib/misc.ml[97,2745+15]..[100,2796+6]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/misc.ml[97,2745+15]..[97,2745+16])
                Ppat_var "f" (lib/misc.ml[97,2745+15]..[97,2745+16])
              expression (lib/misc.ml[98,2764+2]..[100,2796+6])
                Pexp_for Up
                pattern (lib/misc.ml[98,2764+6]..[98,2764+7])
                  Ppat_var "x" (lib/misc.ml[98,2764+6]..[98,2764+7])
                expression (lib/misc.ml[98,2764+10]..[98,2764+11])
                  Pexp_ident "i" (lib/misc.ml[98,2764+10]..[98,2764+11])
                expression (lib/misc.ml[98,2764+15]..[98,2764+20])
                  Pexp_apply
                  expression (lib/misc.ml[98,2764+17]..[98,2764+18])
                    Pexp_ident "-" (lib/misc.ml[98,2764+17]..[98,2764+18])
                  [
                    <arg>
                    Nolabel
                      expression (lib/misc.ml[98,2764+15]..[98,2764+16])
                        Pexp_ident "j" (lib/misc.ml[98,2764+15]..[98,2764+16])
                    <arg>
                    Nolabel
                      expression (lib/misc.ml[98,2764+19]..[98,2764+20])
                        Pexp_constant PConst_int (1,None)
                  ]
                expression (lib/misc.ml[99,2788+4]..[99,2788+7])
                  Pexp_apply
                  expression (lib/misc.ml[99,2788+4]..[99,2788+5])
                    Pexp_ident "f" (lib/misc.ml[99,2788+4]..[99,2788+5])
                  [
                    <arg>
                    Nolabel
                      expression (lib/misc.ml[99,2788+6]..[99,2788+7])
                        Pexp_ident "x" (lib/misc.ml[99,2788+6]..[99,2788+7])
                  ]
    ]
  structure_item (lib/misc.ml[102,2804+0]..[103,2820+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[102,2804+4]..[102,2804+9])
          Ppat_var "iteri" (lib/misc.ml[102,2804+4]..[102,2804+9])
        expression (lib/misc.ml[102,2804+10]..[103,2820+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[102,2804+10]..[102,2804+11])
            Ppat_var "n" (lib/misc.ml[102,2804+10]..[102,2804+11])
          expression (lib/misc.ml[102,2804+12]..[103,2820+14]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[102,2804+12]..[102,2804+13])
              Ppat_var "f" (lib/misc.ml[102,2804+12]..[102,2804+13])
            expression (lib/misc.ml[103,2820+2]..[103,2820+14])
              Pexp_apply
              expression (lib/misc.ml[103,2820+2]..[103,2820+8])
                Pexp_ident "iterij" (lib/misc.ml[103,2820+2]..[103,2820+8])
              [
                <arg>
                Nolabel
                  expression (lib/misc.ml[103,2820+9]..[103,2820+10])
                    Pexp_constant PConst_int (0,None)
                <arg>
                Nolabel
                  expression (lib/misc.ml[103,2820+11]..[103,2820+12])
                    Pexp_ident "n" (lib/misc.ml[103,2820+11]..[103,2820+12])
                <arg>
                Nolabel
                  expression (lib/misc.ml[103,2820+13]..[103,2820+14])
                    Pexp_ident "f" (lib/misc.ml[103,2820+13]..[103,2820+14])
              ]
    ]
  structure_item (lib/misc.ml[105,2836+0]..[109,2921+8])
    Pstr_value Rec
    [
      <def>
        pattern (lib/misc.ml[105,2836+8]..[105,2836+14])
          Ppat_var "foldij" (lib/misc.ml[105,2836+8]..[105,2836+14])
        expression (lib/misc.ml[105,2836+15]..[109,2921+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[105,2836+15]..[105,2836+16])
            Ppat_var "i" (lib/misc.ml[105,2836+15]..[105,2836+16])
          expression (lib/misc.ml[105,2836+17]..[109,2921+8]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[105,2836+17]..[105,2836+18])
              Ppat_var "j" (lib/misc.ml[105,2836+17]..[105,2836+18])
            expression (lib/misc.ml[105,2836+19]..[109,2921+8]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/misc.ml[105,2836+19]..[105,2836+20])
                Ppat_var "f" (lib/misc.ml[105,2836+19]..[105,2836+20])
              expression (lib/misc.ml[105,2836+21]..[109,2921+8]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lib/misc.ml[105,2836+21]..[105,2836+25])
                  Ppat_var "accu" (lib/misc.ml[105,2836+21]..[105,2836+25])
                expression (lib/misc.ml[106,2864+2]..[109,2921+8])
                  Pexp_ifthenelse
                  expression (lib/misc.ml[106,2864+5]..[106,2864+10])
                    Pexp_apply
                    expression (lib/misc.ml[106,2864+7]..[106,2864+8])
                      Pexp_ident "<" (lib/misc.ml[106,2864+7]..[106,2864+8])
                    [
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[106,2864+5]..[106,2864+6])
                          Pexp_ident "i" (lib/misc.ml[106,2864+5]..[106,2864+6])
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[106,2864+9]..[106,2864+10])
                          Pexp_ident "j" (lib/misc.ml[106,2864+9]..[106,2864+10])
                    ]
                  expression (lib/misc.ml[107,2880+4]..[107,2880+33])
                    Pexp_apply
                    expression (lib/misc.ml[107,2880+4]..[107,2880+10])
                      Pexp_ident "foldij" (lib/misc.ml[107,2880+4]..[107,2880+10])
                    [
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[107,2880+11]..[107,2880+18])
                          Pexp_apply
                          expression (lib/misc.ml[107,2880+14]..[107,2880+15])
                            Pexp_ident "+" (lib/misc.ml[107,2880+14]..[107,2880+15])
                          [
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[107,2880+12]..[107,2880+13])
                                Pexp_ident "i" (lib/misc.ml[107,2880+12]..[107,2880+13])
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[107,2880+16]..[107,2880+17])
                                Pexp_constant PConst_int (1,None)
                          ]
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[107,2880+19]..[107,2880+20])
                          Pexp_ident "j" (lib/misc.ml[107,2880+19]..[107,2880+20])
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[107,2880+21]..[107,2880+22])
                          Pexp_ident "f" (lib/misc.ml[107,2880+21]..[107,2880+22])
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[107,2880+23]..[107,2880+33])
                          Pexp_apply
                          expression (lib/misc.ml[107,2880+24]..[107,2880+25])
                            Pexp_ident "f" (lib/misc.ml[107,2880+24]..[107,2880+25])
                          [
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[107,2880+26]..[107,2880+27])
                                Pexp_ident "i" (lib/misc.ml[107,2880+26]..[107,2880+27])
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[107,2880+28]..[107,2880+32])
                                Pexp_ident "accu" (lib/misc.ml[107,2880+28]..[107,2880+32])
                          ]
                    ]
                  Some
                    expression (lib/misc.ml[109,2921+4]..[109,2921+8])
                      Pexp_ident "accu" (lib/misc.ml[109,2921+4]..[109,2921+8])
    ]
  structure_item (lib/misc.ml[111,2931+0]..[112,2952+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[111,2931+4]..[111,2931+9])
          Ppat_var "foldi" (lib/misc.ml[111,2931+4]..[111,2931+9])
        expression (lib/misc.ml[111,2931+10]..[112,2952+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[111,2931+10]..[111,2931+11])
            Ppat_var "n" (lib/misc.ml[111,2931+10]..[111,2931+11])
          expression (lib/misc.ml[111,2931+12]..[112,2952+19]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[111,2931+12]..[111,2931+13])
              Ppat_var "f" (lib/misc.ml[111,2931+12]..[111,2931+13])
            expression (lib/misc.ml[111,2931+14]..[112,2952+19]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/misc.ml[111,2931+14]..[111,2931+18])
                Ppat_var "accu" (lib/misc.ml[111,2931+14]..[111,2931+18])
              expression (lib/misc.ml[112,2952+2]..[112,2952+19])
                Pexp_apply
                expression (lib/misc.ml[112,2952+2]..[112,2952+8])
                  Pexp_ident "foldij" (lib/misc.ml[112,2952+2]..[112,2952+8])
                [
                  <arg>
                  Nolabel
                    expression (lib/misc.ml[112,2952+9]..[112,2952+10])
                      Pexp_constant PConst_int (0,None)
                  <arg>
                  Nolabel
                    expression (lib/misc.ml[112,2952+11]..[112,2952+12])
                      Pexp_ident "n" (lib/misc.ml[112,2952+11]..[112,2952+12])
                  <arg>
                  Nolabel
                    expression (lib/misc.ml[112,2952+13]..[112,2952+14])
                      Pexp_ident "f" (lib/misc.ml[112,2952+13]..[112,2952+14])
                  <arg>
                  Nolabel
                    expression (lib/misc.ml[112,2952+15]..[112,2952+19])
                      Pexp_ident "accu" (lib/misc.ml[112,2952+15]..[112,2952+19])
                ]
    ]
  structure_item (lib/misc.ml[114,2973+0]..[118,3078+8])
    Pstr_value Rec
    [
      <def>
        pattern (lib/misc.ml[114,2973+8]..[114,2973+19])
          Ppat_var "foldij_lazy" (lib/misc.ml[114,2973+8]..[114,2973+19])
        expression (lib/misc.ml[114,2973+20]..[118,3078+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[114,2973+20]..[114,2973+21])
            Ppat_var "i" (lib/misc.ml[114,2973+20]..[114,2973+21])
          expression (lib/misc.ml[114,2973+22]..[118,3078+8]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[114,2973+22]..[114,2973+23])
              Ppat_var "j" (lib/misc.ml[114,2973+22]..[114,2973+23])
            expression (lib/misc.ml[114,2973+24]..[118,3078+8]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/misc.ml[114,2973+24]..[114,2973+25])
                Ppat_var "f" (lib/misc.ml[114,2973+24]..[114,2973+25])
              expression (lib/misc.ml[114,2973+26]..[118,3078+8]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lib/misc.ml[114,2973+26]..[114,2973+30])
                  Ppat_var "accu" (lib/misc.ml[114,2973+26]..[114,2973+30])
                expression (lib/misc.ml[115,3006+2]..[118,3078+8])
                  Pexp_ifthenelse
                  expression (lib/misc.ml[115,3006+5]..[115,3006+10])
                    Pexp_apply
                    expression (lib/misc.ml[115,3006+7]..[115,3006+8])
                      Pexp_ident "<" (lib/misc.ml[115,3006+7]..[115,3006+8])
                    [
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[115,3006+5]..[115,3006+6])
                          Pexp_ident "i" (lib/misc.ml[115,3006+5]..[115,3006+6])
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[115,3006+9]..[115,3006+10])
                          Pexp_ident "j" (lib/misc.ml[115,3006+9]..[115,3006+10])
                    ]
                  expression (lib/misc.ml[116,3022+4]..[116,3022+48])
                    Pexp_apply
                    expression (lib/misc.ml[116,3022+4]..[116,3022+5])
                      Pexp_ident "f" (lib/misc.ml[116,3022+4]..[116,3022+5])
                    [
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[116,3022+6]..[116,3022+7])
                          Pexp_ident "i" (lib/misc.ml[116,3022+6]..[116,3022+7])
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[116,3022+8]..[116,3022+48])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lib/misc.ml[116,3022+13]..[116,3022+15])
                            Ppat_construct "()" (lib/misc.ml[116,3022+13]..[116,3022+15])
                            None
                          expression (lib/misc.ml[116,3022+19]..[116,3022+47])
                            Pexp_apply
                            expression (lib/misc.ml[116,3022+19]..[116,3022+30])
                              Pexp_ident "foldij_lazy" (lib/misc.ml[116,3022+19]..[116,3022+30])
                            [
                              <arg>
                              Nolabel
                                expression (lib/misc.ml[116,3022+31]..[116,3022+38])
                                  Pexp_apply
                                  expression (lib/misc.ml[116,3022+34]..[116,3022+35])
                                    Pexp_ident "+" (lib/misc.ml[116,3022+34]..[116,3022+35])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/misc.ml[116,3022+32]..[116,3022+33])
                                        Pexp_ident "i" (lib/misc.ml[116,3022+32]..[116,3022+33])
                                    <arg>
                                    Nolabel
                                      expression (lib/misc.ml[116,3022+36]..[116,3022+37])
                                        Pexp_constant PConst_int (1,None)
                                  ]
                              <arg>
                              Nolabel
                                expression (lib/misc.ml[116,3022+39]..[116,3022+40])
                                  Pexp_ident "j" (lib/misc.ml[116,3022+39]..[116,3022+40])
                              <arg>
                              Nolabel
                                expression (lib/misc.ml[116,3022+41]..[116,3022+42])
                                  Pexp_ident "f" (lib/misc.ml[116,3022+41]..[116,3022+42])
                              <arg>
                              Nolabel
                                expression (lib/misc.ml[116,3022+43]..[116,3022+47])
                                  Pexp_ident "accu" (lib/misc.ml[116,3022+43]..[116,3022+47])
                            ]
                    ]
                  Some
                    expression (lib/misc.ml[118,3078+4]..[118,3078+8])
                      Pexp_ident "accu" (lib/misc.ml[118,3078+4]..[118,3078+8])
    ]
  structure_item (lib/misc.ml[122,3157+0]..[127,3253+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[122,3157+4]..[122,3157+9])
          Ppat_var "mapij" (lib/misc.ml[122,3157+4]..[122,3157+9])
        expression (lib/misc.ml[122,3157+10]..[127,3253+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[122,3157+10]..[122,3157+15])
            Ppat_var "start" (lib/misc.ml[122,3157+10]..[122,3157+15])
          expression (lib/misc.ml[122,3157+16]..[127,3253+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[122,3157+16]..[122,3157+17])
              Ppat_var "n" (lib/misc.ml[122,3157+16]..[122,3157+17])
            expression (lib/misc.ml[122,3157+18]..[127,3253+3]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/misc.ml[122,3157+18]..[122,3157+19])
                Ppat_var "f" (lib/misc.ml[122,3157+18]..[122,3157+19])
              expression (lib/misc.ml[123,3179+2]..[127,3253+3])
                Pexp_apply
                expression (lib/misc.ml[123,3179+2]..[123,3179+10])
                  Pexp_ident "List.rev" (lib/misc.ml[123,3179+2]..[123,3179+10])
                [
                  <arg>
                  Nolabel
                    expression (lib/misc.ml[123,3179+11]..[127,3253+3])
                      Pexp_apply
                      expression (lib/misc.ml[124,3192+4]..[124,3192+10])
                        Pexp_ident "foldij" (lib/misc.ml[124,3192+4]..[124,3192+10])
                      [
                        <arg>
                        Nolabel
                          expression (lib/misc.ml[124,3192+11]..[124,3192+16])
                            Pexp_ident "start" (lib/misc.ml[124,3192+11]..[124,3192+16])
                        <arg>
                        Nolabel
                          expression (lib/misc.ml[124,3192+17]..[124,3192+18])
                            Pexp_ident "n" (lib/misc.ml[124,3192+17]..[124,3192+18])
                        <arg>
                        Nolabel
                          expression (lib/misc.ml[124,3192+19]..[126,3244+5])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lib/misc.ml[124,3192+24]..[124,3192+25])
                              Ppat_var "i" (lib/misc.ml[124,3192+24]..[124,3192+25])
                            expression (lib/misc.ml[124,3192+26]..[125,3226+17]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/misc.ml[124,3192+26]..[124,3192+30])
                                Ppat_var "accu" (lib/misc.ml[124,3192+26]..[124,3192+30])
                              expression (lib/misc.ml[125,3226+6]..[125,3226+17])
                                Pexp_construct "::" (lib/misc.ml[125,3226+10]..[125,3226+12])
                                Some
                                  expression (lib/misc.ml[125,3226+6]..[125,3226+17]) ghost
                                    Pexp_tuple
                                    [
                                      expression (lib/misc.ml[125,3226+6]..[125,3226+9])
                                        Pexp_apply
                                        expression (lib/misc.ml[125,3226+6]..[125,3226+7])
                                          Pexp_ident "f" (lib/misc.ml[125,3226+6]..[125,3226+7])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/misc.ml[125,3226+8]..[125,3226+9])
                                              Pexp_ident "i" (lib/misc.ml[125,3226+8]..[125,3226+9])
                                        ]
                                      expression (lib/misc.ml[125,3226+13]..[125,3226+17])
                                        Pexp_ident "accu" (lib/misc.ml[125,3226+13]..[125,3226+17])
                                    ]
                        <arg>
                        Nolabel
                          expression (lib/misc.ml[126,3244+6]..[126,3244+8])
                            Pexp_construct "[]" (lib/misc.ml[126,3244+6]..[126,3244+8])
                            None
                      ]
                ]
    ]
  structure_item (lib/misc.ml[131,3316+0]..[132,3331+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[131,3316+4]..[131,3316+8])
          Ppat_var "mapi" (lib/misc.ml[131,3316+4]..[131,3316+8])
        expression (lib/misc.ml[131,3316+9]..[132,3331+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[131,3316+9]..[131,3316+10])
            Ppat_var "n" (lib/misc.ml[131,3316+9]..[131,3316+10])
          expression (lib/misc.ml[131,3316+11]..[132,3331+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[131,3316+11]..[131,3316+12])
              Ppat_var "f" (lib/misc.ml[131,3316+11]..[131,3316+12])
            expression (lib/misc.ml[132,3331+2]..[132,3331+13])
              Pexp_apply
              expression (lib/misc.ml[132,3331+2]..[132,3331+7])
                Pexp_ident "mapij" (lib/misc.ml[132,3331+2]..[132,3331+7])
              [
                <arg>
                Nolabel
                  expression (lib/misc.ml[132,3331+8]..[132,3331+9])
                    Pexp_constant PConst_int (0,None)
                <arg>
                Nolabel
                  expression (lib/misc.ml[132,3331+10]..[132,3331+11])
                    Pexp_ident "n" (lib/misc.ml[132,3331+10]..[132,3331+11])
                <arg>
                Nolabel
                  expression (lib/misc.ml[132,3331+12]..[132,3331+13])
                    Pexp_ident "f" (lib/misc.ml[132,3331+12]..[132,3331+13])
              ]
    ]
  structure_item (lib/misc.ml[140,3623+0]..[150,3785+10])
    Pstr_value Rec
    [
      <def>
        pattern (lib/misc.ml[140,3623+8]..[140,3623+13])
          Ppat_var "qfold" (lib/misc.ml[140,3623+8]..[140,3623+13])
        expression (lib/misc.ml[140,3623+14]..[150,3785+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[140,3623+14]..[140,3623+15])
            Ppat_var "f" (lib/misc.ml[140,3623+14]..[140,3623+15])
          expression (lib/misc.ml[140,3623+16]..[150,3785+10]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[140,3623+16]..[140,3623+20])
              Ppat_var "accu" (lib/misc.ml[140,3623+16]..[140,3623+20])
            expression (lib/misc.ml[140,3623+21]..[150,3785+10]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/misc.ml[140,3623+21]..[140,3623+22])
                Ppat_var "q" (lib/misc.ml[140,3623+21]..[140,3623+22])
              expression (lib/misc.ml[141,3648+2]..[150,3785+10])
                Pexp_match
                expression (lib/misc.ml[142,3656+4]..[145,3714+10])
                  Pexp_try
                  expression (lib/misc.ml[143,3664+6]..[143,3664+25])
                    Pexp_construct "Some" (lib/misc.ml[143,3664+6]..[143,3664+10])
                    Some
                      expression (lib/misc.ml[143,3664+11]..[143,3664+25])
                        Pexp_apply
                        expression (lib/misc.ml[143,3664+12]..[143,3664+22])
                          Pexp_ident "Queue.take" (lib/misc.ml[143,3664+12]..[143,3664+22])
                        [
                          <arg>
                          Nolabel
                            expression (lib/misc.ml[143,3664+23]..[143,3664+24])
                              Pexp_ident "q" (lib/misc.ml[143,3664+23]..[143,3664+24])
                        ]
                  [
                    <case>
                      pattern (lib/misc.ml[144,3690+9]..[144,3690+20])
                        Ppat_construct "Queue.Empty" (lib/misc.ml[144,3690+9]..[144,3690+20])
                        None
                      expression (lib/misc.ml[145,3714+6]..[145,3714+10])
                        Pexp_construct "None" (lib/misc.ml[145,3714+6]..[145,3714+10])
                        None
                  ]
                [
                  <case>
                    pattern (lib/misc.ml[147,3732+4]..[147,3732+10])
                      Ppat_construct "Some" (lib/misc.ml[147,3732+4]..[147,3732+8])
                      Some
                        []
                        pattern (lib/misc.ml[147,3732+9]..[147,3732+10])
                          Ppat_var "x" (lib/misc.ml[147,3732+9]..[147,3732+10])
                    expression (lib/misc.ml[148,3746+6]..[148,3746+26])
                      Pexp_apply
                      expression (lib/misc.ml[148,3746+6]..[148,3746+11])
                        Pexp_ident "qfold" (lib/misc.ml[148,3746+6]..[148,3746+11])
                      [
                        <arg>
                        Nolabel
                          expression (lib/misc.ml[148,3746+12]..[148,3746+13])
                            Pexp_ident "f" (lib/misc.ml[148,3746+12]..[148,3746+13])
                        <arg>
                        Nolabel
                          expression (lib/misc.ml[148,3746+14]..[148,3746+24])
                            Pexp_apply
                            expression (lib/misc.ml[148,3746+15]..[148,3746+16])
                              Pexp_ident "f" (lib/misc.ml[148,3746+15]..[148,3746+16])
                            [
                              <arg>
                              Nolabel
                                expression (lib/misc.ml[148,3746+17]..[148,3746+21])
                                  Pexp_ident "accu" (lib/misc.ml[148,3746+17]..[148,3746+21])
                              <arg>
                              Nolabel
                                expression (lib/misc.ml[148,3746+22]..[148,3746+23])
                                  Pexp_ident "x" (lib/misc.ml[148,3746+22]..[148,3746+23])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/misc.ml[148,3746+25]..[148,3746+26])
                            Pexp_ident "q" (lib/misc.ml[148,3746+25]..[148,3746+26])
                      ]
                  <case>
                    pattern (lib/misc.ml[149,3773+4]..[149,3773+8])
                      Ppat_construct "None" (lib/misc.ml[149,3773+4]..[149,3773+8])
                      None
                    expression (lib/misc.ml[150,3785+6]..[150,3785+10])
                      Pexp_ident "accu" (lib/misc.ml[150,3785+6]..[150,3785+10])
                ]
    ]
  structure_item (lib/misc.ml[156,3978+0]..[162,4072+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[156,3978+4]..[156,3978+9])
          Ppat_var "qiter" (lib/misc.ml[156,3978+4]..[156,3978+9])
        expression (lib/misc.ml[156,3978+10]..[162,4072+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[156,3978+10]..[156,3978+11])
            Ppat_var "f" (lib/misc.ml[156,3978+10]..[156,3978+11])
          expression (lib/misc.ml[156,3978+12]..[162,4072+6]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[156,3978+12]..[156,3978+13])
              Ppat_var "q" (lib/misc.ml[156,3978+12]..[156,3978+13])
            expression (lib/misc.ml[157,3994+2]..[162,4072+6])
              Pexp_try
              expression (lib/misc.ml[158,4000+4]..[160,4041+8])
                Pexp_while
                expression (lib/misc.ml[158,4000+10]..[158,4000+14])
                  Pexp_construct "true" (lib/misc.ml[158,4000+10]..[158,4000+14])
                  None
                expression (lib/misc.ml[159,4018+6]..[159,4018+22])
                  Pexp_apply
                  expression (lib/misc.ml[159,4018+6]..[159,4018+7])
                    Pexp_ident "f" (lib/misc.ml[159,4018+6]..[159,4018+7])
                  [
                    <arg>
                    Nolabel
                      expression (lib/misc.ml[159,4018+8]..[159,4018+22])
                        Pexp_apply
                        expression (lib/misc.ml[159,4018+9]..[159,4018+19])
                          Pexp_ident "Queue.take" (lib/misc.ml[159,4018+9]..[159,4018+19])
                        [
                          <arg>
                          Nolabel
                            expression (lib/misc.ml[159,4018+20]..[159,4018+21])
                              Pexp_ident "q" (lib/misc.ml[159,4018+20]..[159,4018+21])
                        ]
                  ]
              [
                <case>
                  pattern (lib/misc.ml[161,4050+7]..[161,4050+18])
                    Ppat_construct "Queue.Empty" (lib/misc.ml[161,4050+7]..[161,4050+18])
                    None
                  expression (lib/misc.ml[162,4072+4]..[162,4072+6])
                    Pexp_construct "()" (lib/misc.ml[162,4072+4]..[162,4072+6])
                    None
              ]
    ]
  structure_item (lib/misc.ml[164,4080+0]..[173,4251+17])
    Pstr_value Rec
    [
      <def>
        pattern (lib/misc.ml[164,4080+8]..[164,4080+12])
          Ppat_var "smap" (lib/misc.ml[164,4080+8]..[164,4080+12])
        expression (lib/misc.ml[164,4080+13]..[173,4251+17]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[164,4080+13]..[164,4080+14])
            Ppat_var "f" (lib/misc.ml[164,4080+13]..[164,4080+14])
          expression (lib/misc.ml[164,4080+17]..[173,4251+17])
            Pexp_function
            [
              <case>
                pattern (lib/misc.ml[165,4106+4]..[165,4106+6])
                  Ppat_construct "[]" (lib/misc.ml[165,4106+4]..[165,4106+6])
                  None
                expression (lib/misc.ml[166,4116+6]..[166,4116+8])
                  Pexp_construct "[]" (lib/misc.ml[166,4116+6]..[166,4116+8])
                  None
              <case>
                pattern (lib/misc.ml[167,4125+4]..[167,4125+18])
                  Ppat_alias "l" (lib/misc.ml[167,4125+17]..[167,4125+18])
                  pattern (lib/misc.ml[167,4125+4]..[167,4125+13])
                    Ppat_construct "::" (lib/misc.ml[167,4125+7]..[167,4125+9])
                    Some
                      []
                      pattern (lib/misc.ml[167,4125+5]..[167,4125+12]) ghost
                        Ppat_tuple
                        [
                          pattern (lib/misc.ml[167,4125+5]..[167,4125+6])
                            Ppat_var "x" (lib/misc.ml[167,4125+5]..[167,4125+6])
                          pattern (lib/misc.ml[167,4125+10]..[167,4125+12])
                            Ppat_var "xs" (lib/misc.ml[167,4125+10]..[167,4125+12])
                        ]
                expression (lib/misc.ml[168,4147+6]..[173,4251+17])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/misc.ml[168,4147+10]..[168,4147+12])
                        Ppat_var "x'" (lib/misc.ml[168,4147+10]..[168,4147+12])
                      expression (lib/misc.ml[168,4147+15]..[168,4147+18])
                        Pexp_apply
                        expression (lib/misc.ml[168,4147+15]..[168,4147+16])
                          Pexp_ident "f" (lib/misc.ml[168,4147+15]..[168,4147+16])
                        [
                          <arg>
                          Nolabel
                            expression (lib/misc.ml[168,4147+17]..[168,4147+18])
                              Pexp_ident "x" (lib/misc.ml[168,4147+17]..[168,4147+18])
                        ]
                    <def>
                      pattern (lib/misc.ml[169,4166+10]..[169,4166+13])
                        Ppat_var "xs'" (lib/misc.ml[169,4166+10]..[169,4166+13])
                      expression (lib/misc.ml[169,4166+16]..[169,4166+25])
                        Pexp_apply
                        expression (lib/misc.ml[169,4166+16]..[169,4166+20])
                          Pexp_ident "smap" (lib/misc.ml[169,4166+16]..[169,4166+20])
                        [
                          <arg>
                          Nolabel
                            expression (lib/misc.ml[169,4166+21]..[169,4166+22])
                              Pexp_ident "f" (lib/misc.ml[169,4166+21]..[169,4166+22])
                          <arg>
                          Nolabel
                            expression (lib/misc.ml[169,4166+23]..[169,4166+25])
                              Pexp_ident "xs" (lib/misc.ml[169,4166+23]..[169,4166+25])
                        ]
                  ]
                  expression (lib/misc.ml[170,4195+6]..[173,4251+17])
                    Pexp_ifthenelse
                    expression (lib/misc.ml[170,4195+9]..[170,4195+29])
                      Pexp_apply
                      expression (lib/misc.ml[170,4195+17]..[170,4195+19])
                        Pexp_ident "&&" (lib/misc.ml[170,4195+17]..[170,4195+19])
                      [
                        <arg>
                        Nolabel
                          expression (lib/misc.ml[170,4195+9]..[170,4195+16])
                            Pexp_apply
                            expression (lib/misc.ml[170,4195+11]..[170,4195+13])
                              Pexp_ident "==" (lib/misc.ml[170,4195+11]..[170,4195+13])
                            [
                              <arg>
                              Nolabel
                                expression (lib/misc.ml[170,4195+9]..[170,4195+10])
                                  Pexp_ident "x" (lib/misc.ml[170,4195+9]..[170,4195+10])
                              <arg>
                              Nolabel
                                expression (lib/misc.ml[170,4195+14]..[170,4195+16])
                                  Pexp_ident "x'" (lib/misc.ml[170,4195+14]..[170,4195+16])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/misc.ml[170,4195+20]..[170,4195+29])
                            Pexp_apply
                            expression (lib/misc.ml[170,4195+23]..[170,4195+25])
                              Pexp_ident "==" (lib/misc.ml[170,4195+23]..[170,4195+25])
                            [
                              <arg>
                              Nolabel
                                expression (lib/misc.ml[170,4195+20]..[170,4195+22])
                                  Pexp_ident "xs" (lib/misc.ml[170,4195+20]..[170,4195+22])
                              <arg>
                              Nolabel
                                expression (lib/misc.ml[170,4195+26]..[170,4195+29])
                                  Pexp_ident "xs'" (lib/misc.ml[170,4195+26]..[170,4195+29])
                            ]
                      ]
                    expression (lib/misc.ml[171,4230+8]..[171,4230+9])
                      Pexp_ident "l" (lib/misc.ml[171,4230+8]..[171,4230+9])
                    Some
                      expression (lib/misc.ml[173,4251+8]..[173,4251+17])
                        Pexp_construct "::" (lib/misc.ml[173,4251+11]..[173,4251+13])
                        Some
                          expression (lib/misc.ml[173,4251+8]..[173,4251+17]) ghost
                            Pexp_tuple
                            [
                              expression (lib/misc.ml[173,4251+8]..[173,4251+10])
                                Pexp_ident "x'" (lib/misc.ml[173,4251+8]..[173,4251+10])
                              expression (lib/misc.ml[173,4251+14]..[173,4251+17])
                                Pexp_ident "xs'" (lib/misc.ml[173,4251+14]..[173,4251+17])
                            ]
            ]
    ]
  structure_item (lib/misc.ml[175,4270+0]..[185,4491+17])
    Pstr_value Rec
    [
      <def>
        pattern (lib/misc.ml[175,4270+8]..[175,4270+13])
          Ppat_var "smapa" (lib/misc.ml[175,4270+8]..[175,4270+13])
        expression (lib/misc.ml[175,4270+14]..[185,4491+17]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[175,4270+14]..[175,4270+15])
            Ppat_var "f" (lib/misc.ml[175,4270+14]..[175,4270+15])
          expression (lib/misc.ml[175,4270+16]..[185,4491+17]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[175,4270+16]..[175,4270+20])
              Ppat_var "accu" (lib/misc.ml[175,4270+16]..[175,4270+20])
            expression (lib/misc.ml[175,4270+23]..[185,4491+17])
              Pexp_function
              [
                <case>
                  pattern (lib/misc.ml[176,4302+4]..[176,4302+6])
                    Ppat_construct "[]" (lib/misc.ml[176,4302+4]..[176,4302+6])
                    None
                  expression (lib/misc.ml[177,4312+6]..[177,4312+14])
                    Pexp_tuple
                    [
                      expression (lib/misc.ml[177,4312+6]..[177,4312+10])
                        Pexp_ident "accu" (lib/misc.ml[177,4312+6]..[177,4312+10])
                      expression (lib/misc.ml[177,4312+12]..[177,4312+14])
                        Pexp_construct "[]" (lib/misc.ml[177,4312+12]..[177,4312+14])
                        None
                    ]
                <case>
                  pattern (lib/misc.ml[178,4327+4]..[178,4327+18])
                    Ppat_alias "l" (lib/misc.ml[178,4327+17]..[178,4327+18])
                    pattern (lib/misc.ml[178,4327+4]..[178,4327+13])
                      Ppat_construct "::" (lib/misc.ml[178,4327+7]..[178,4327+9])
                      Some
                        []
                        pattern (lib/misc.ml[178,4327+5]..[178,4327+12]) ghost
                          Ppat_tuple
                          [
                            pattern (lib/misc.ml[178,4327+5]..[178,4327+6])
                              Ppat_var "x" (lib/misc.ml[178,4327+5]..[178,4327+6])
                            pattern (lib/misc.ml[178,4327+10]..[178,4327+12])
                              Ppat_var "xs" (lib/misc.ml[178,4327+10]..[178,4327+12])
                          ]
                  expression (lib/misc.ml[179,4349+6]..[185,4491+17])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/misc.ml[179,4349+10]..[179,4349+18])
                          Ppat_tuple
                          [
                            pattern (lib/misc.ml[179,4349+10]..[179,4349+14])
                              Ppat_var "accu" (lib/misc.ml[179,4349+10]..[179,4349+14])
                            pattern (lib/misc.ml[179,4349+16]..[179,4349+18])
                              Ppat_var "x'" (lib/misc.ml[179,4349+16]..[179,4349+18])
                          ]
                        expression (lib/misc.ml[179,4349+21]..[179,4349+29])
                          Pexp_apply
                          expression (lib/misc.ml[179,4349+21]..[179,4349+22])
                            Pexp_ident "f" (lib/misc.ml[179,4349+21]..[179,4349+22])
                          [
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[179,4349+23]..[179,4349+27])
                                Pexp_ident "accu" (lib/misc.ml[179,4349+23]..[179,4349+27])
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[179,4349+28]..[179,4349+29])
                                Pexp_ident "x" (lib/misc.ml[179,4349+28]..[179,4349+29])
                          ]
                    ]
                    expression (lib/misc.ml[180,4382+6]..[185,4491+17])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/misc.ml[180,4382+10]..[180,4382+19])
                            Ppat_tuple
                            [
                              pattern (lib/misc.ml[180,4382+10]..[180,4382+14])
                                Ppat_var "accu" (lib/misc.ml[180,4382+10]..[180,4382+14])
                              pattern (lib/misc.ml[180,4382+16]..[180,4382+19])
                                Ppat_var "xs'" (lib/misc.ml[180,4382+16]..[180,4382+19])
                            ]
                          expression (lib/misc.ml[180,4382+22]..[180,4382+37])
                            Pexp_apply
                            expression (lib/misc.ml[180,4382+22]..[180,4382+27])
                              Pexp_ident "smapa" (lib/misc.ml[180,4382+22]..[180,4382+27])
                            [
                              <arg>
                              Nolabel
                                expression (lib/misc.ml[180,4382+28]..[180,4382+29])
                                  Pexp_ident "f" (lib/misc.ml[180,4382+28]..[180,4382+29])
                              <arg>
                              Nolabel
                                expression (lib/misc.ml[180,4382+30]..[180,4382+34])
                                  Pexp_ident "accu" (lib/misc.ml[180,4382+30]..[180,4382+34])
                              <arg>
                              Nolabel
                                expression (lib/misc.ml[180,4382+35]..[180,4382+37])
                                  Pexp_ident "xs" (lib/misc.ml[180,4382+35]..[180,4382+37])
                            ]
                      ]
                      expression (lib/misc.ml[181,4423+6]..[185,4491+17])
                        Pexp_tuple
                        [
                          expression (lib/misc.ml[181,4423+6]..[181,4423+10])
                            Pexp_ident "accu" (lib/misc.ml[181,4423+6]..[181,4423+10])
                          expression (lib/misc.ml[182,4435+6]..[185,4491+17])
                            Pexp_ifthenelse
                            expression (lib/misc.ml[182,4435+9]..[182,4435+29])
                              Pexp_apply
                              expression (lib/misc.ml[182,4435+17]..[182,4435+19])
                                Pexp_ident "&&" (lib/misc.ml[182,4435+17]..[182,4435+19])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/misc.ml[182,4435+9]..[182,4435+16])
                                    Pexp_apply
                                    expression (lib/misc.ml[182,4435+11]..[182,4435+13])
                                      Pexp_ident "==" (lib/misc.ml[182,4435+11]..[182,4435+13])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/misc.ml[182,4435+9]..[182,4435+10])
                                          Pexp_ident "x" (lib/misc.ml[182,4435+9]..[182,4435+10])
                                      <arg>
                                      Nolabel
                                        expression (lib/misc.ml[182,4435+14]..[182,4435+16])
                                          Pexp_ident "x'" (lib/misc.ml[182,4435+14]..[182,4435+16])
                                    ]
                                <arg>
                                Nolabel
                                  expression (lib/misc.ml[182,4435+20]..[182,4435+29])
                                    Pexp_apply
                                    expression (lib/misc.ml[182,4435+23]..[182,4435+25])
                                      Pexp_ident "==" (lib/misc.ml[182,4435+23]..[182,4435+25])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/misc.ml[182,4435+20]..[182,4435+22])
                                          Pexp_ident "xs" (lib/misc.ml[182,4435+20]..[182,4435+22])
                                      <arg>
                                      Nolabel
                                        expression (lib/misc.ml[182,4435+26]..[182,4435+29])
                                          Pexp_ident "xs'" (lib/misc.ml[182,4435+26]..[182,4435+29])
                                    ]
                              ]
                            expression (lib/misc.ml[183,4470+8]..[183,4470+9])
                              Pexp_ident "l" (lib/misc.ml[183,4470+8]..[183,4470+9])
                            Some
                              expression (lib/misc.ml[185,4491+8]..[185,4491+17])
                                Pexp_construct "::" (lib/misc.ml[185,4491+11]..[185,4491+13])
                                Some
                                  expression (lib/misc.ml[185,4491+8]..[185,4491+17]) ghost
                                    Pexp_tuple
                                    [
                                      expression (lib/misc.ml[185,4491+8]..[185,4491+10])
                                        Pexp_ident "x'" (lib/misc.ml[185,4491+8]..[185,4491+10])
                                      expression (lib/misc.ml[185,4491+14]..[185,4491+17])
                                        Pexp_ident "xs'" (lib/misc.ml[185,4491+14]..[185,4491+17])
                                    ]
                        ]
              ]
    ]
  structure_item (lib/misc.ml[187,4510+0]..[199,4729+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[187,4510+4]..[187,4510+13])
          Ppat_var "normalize" (lib/misc.ml[187,4510+4]..[187,4510+13])
        expression (lib/misc.ml[187,4510+14]..[199,4729+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[187,4510+14]..[187,4510+15])
            Ppat_var "s" (lib/misc.ml[187,4510+14]..[187,4510+15])
          expression (lib/misc.ml[188,4528+2]..[199,4729+26])
            Pexp_let Nonrec
            [
              <def>
                pattern (lib/misc.ml[188,4528+6]..[188,4528+7])
                  Ppat_var "s" (lib/misc.ml[188,4528+6]..[188,4528+7])
                expression (lib/misc.ml[188,4528+10]..[188,4528+27])
                  Pexp_apply
                  expression (lib/misc.ml[188,4528+10]..[188,4528+25])
                    Pexp_ident "Bytes.of_string" (lib/misc.ml[188,4528+10]..[188,4528+25])
                  [
                    <arg>
                    Nolabel
                      expression (lib/misc.ml[188,4528+26]..[188,4528+27])
                        Pexp_ident "s" (lib/misc.ml[188,4528+26]..[188,4528+27])
                  ]
            ]
            expression (lib/misc.ml[189,4559+2]..[199,4729+26])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/misc.ml[189,4559+6]..[189,4559+7])
                    Ppat_var "n" (lib/misc.ml[189,4559+6]..[189,4559+7])
                  expression (lib/misc.ml[189,4559+10]..[189,4559+24])
                    Pexp_apply
                    expression (lib/misc.ml[189,4559+10]..[189,4559+22])
                      Pexp_ident "Bytes.length" (lib/misc.ml[189,4559+10]..[189,4559+22])
                    [
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[189,4559+23]..[189,4559+24])
                          Pexp_ident "s" (lib/misc.ml[189,4559+23]..[189,4559+24])
                    ]
              ]
              expression (lib/misc.ml[190,4587+2]..[199,4729+26])
                Pexp_sequence
                expression (lib/misc.ml[190,4587+2]..[198,4721+6])
                  Pexp_for Up
                  pattern (lib/misc.ml[190,4587+6]..[190,4587+7])
                    Ppat_var "i" (lib/misc.ml[190,4587+6]..[190,4587+7])
                  expression (lib/misc.ml[190,4587+10]..[190,4587+11])
                    Pexp_constant PConst_int (0,None)
                  expression (lib/misc.ml[190,4587+15]..[190,4587+20])
                    Pexp_apply
                    expression (lib/misc.ml[190,4587+17]..[190,4587+18])
                      Pexp_ident "-" (lib/misc.ml[190,4587+17]..[190,4587+18])
                    [
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[190,4587+15]..[190,4587+16])
                          Pexp_ident "n" (lib/misc.ml[190,4587+15]..[190,4587+16])
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[190,4587+19]..[190,4587+20])
                          Pexp_constant PConst_int (1,None)
                    ]
                  expression (lib/misc.ml[191,4611+4]..[197,4710+10])
                    Pexp_match
                    expression (lib/misc.ml[191,4611+10]..[191,4611+23])
                      Pexp_apply
                      expression (lib/misc.ml[191,4611+10]..[191,4611+19])
                        Pexp_ident "Bytes.get" (lib/misc.ml[191,4611+10]..[191,4611+19])
                      [
                        <arg>
                        Nolabel
                          expression (lib/misc.ml[191,4611+20]..[191,4611+21])
                            Pexp_ident "s" (lib/misc.ml[191,4611+20]..[191,4611+21])
                        <arg>
                        Nolabel
                          expression (lib/misc.ml[191,4611+22]..[191,4611+23])
                            Pexp_ident "i" (lib/misc.ml[191,4611+22]..[191,4611+23])
                      ]
                    [
                      <case>
                        pattern (lib/misc.ml[192,4640+6]..[194,4660+9])
                          Ppat_or
                          pattern (lib/misc.ml[192,4640+6]..[193,4650+9])
                            Ppat_or
                            pattern (lib/misc.ml[192,4640+6]..[192,4640+9])
                              Ppat_constant PConst_char 28
                            pattern (lib/misc.ml[193,4650+6]..[193,4650+9])
                              Ppat_constant PConst_char 29
                          pattern (lib/misc.ml[194,4660+6]..[194,4660+9])
                            Ppat_constant PConst_char 2c
                        expression (lib/misc.ml[195,4673+8]..[195,4673+25])
                          Pexp_apply
                          expression (lib/misc.ml[195,4673+8]..[195,4673+17])
                            Pexp_ident "Bytes.set" (lib/misc.ml[195,4673+8]..[195,4673+17])
                          [
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[195,4673+18]..[195,4673+19])
                                Pexp_ident "s" (lib/misc.ml[195,4673+18]..[195,4673+19])
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[195,4673+20]..[195,4673+21])
                                Pexp_ident "i" (lib/misc.ml[195,4673+20]..[195,4673+21])
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[195,4673+22]..[195,4673+25])
                                Pexp_constant PConst_char 5f
                          ]
                      <case>
                        pattern (lib/misc.ml[196,4699+6]..[196,4699+7])
                          Ppat_any
                        expression (lib/misc.ml[197,4710+8]..[197,4710+10])
                          Pexp_construct "()" (lib/misc.ml[197,4710+8]..[197,4710+10])
                          None
                    ]
                expression (lib/misc.ml[199,4729+2]..[199,4729+26])
                  Pexp_apply
                  expression (lib/misc.ml[199,4729+2]..[199,4729+24])
                    Pexp_ident "Bytes.unsafe_to_string" (lib/misc.ml[199,4729+2]..[199,4729+24])
                  [
                    <arg>
                    Nolabel
                      expression (lib/misc.ml[199,4729+25]..[199,4729+26])
                        Pexp_ident "s" (lib/misc.ml[199,4729+25]..[199,4729+26])
                  ]
    ]
  structure_item (lib/misc.ml[203,4829+0]..[206,4881+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[203,4829+4]..[203,4829+17])
          Ppat_var "postincrement" (lib/misc.ml[203,4829+4]..[203,4829+17])
        expression (lib/misc.ml[203,4829+18]..[206,4881+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[203,4829+18]..[203,4829+19])
            Ppat_var "r" (lib/misc.ml[203,4829+18]..[203,4829+19])
          expression (lib/misc.ml[204,4851+2]..[206,4881+3])
            Pexp_let Nonrec
            [
              <def>
                pattern (lib/misc.ml[204,4851+6]..[204,4851+7])
                  Ppat_var "x" (lib/misc.ml[204,4851+6]..[204,4851+7])
                expression (lib/misc.ml[204,4851+10]..[204,4851+12])
                  Pexp_apply
                  expression (lib/misc.ml[204,4851+10]..[204,4851+11])
                    Pexp_ident "!" (lib/misc.ml[204,4851+10]..[204,4851+11])
                  [
                    <arg>
                    Nolabel
                      expression (lib/misc.ml[204,4851+11]..[204,4851+12])
                        Pexp_ident "r" (lib/misc.ml[204,4851+11]..[204,4851+12])
                  ]
            ]
            expression (lib/misc.ml[205,4867+2]..[206,4881+3])
              Pexp_sequence
              expression (lib/misc.ml[205,4867+2]..[205,4867+12])
                Pexp_apply
                expression (lib/misc.ml[205,4867+4]..[205,4867+6])
                  Pexp_ident ":=" (lib/misc.ml[205,4867+4]..[205,4867+6])
                [
                  <arg>
                  Nolabel
                    expression (lib/misc.ml[205,4867+2]..[205,4867+3])
                      Pexp_ident "r" (lib/misc.ml[205,4867+2]..[205,4867+3])
                  <arg>
                  Nolabel
                    expression (lib/misc.ml[205,4867+7]..[205,4867+12])
                      Pexp_apply
                      expression (lib/misc.ml[205,4867+9]..[205,4867+10])
                        Pexp_ident "+" (lib/misc.ml[205,4867+9]..[205,4867+10])
                      [
                        <arg>
                        Nolabel
                          expression (lib/misc.ml[205,4867+7]..[205,4867+8])
                            Pexp_ident "x" (lib/misc.ml[205,4867+7]..[205,4867+8])
                        <arg>
                        Nolabel
                          expression (lib/misc.ml[205,4867+11]..[205,4867+12])
                            Pexp_constant PConst_int (1,None)
                      ]
                ]
              expression (lib/misc.ml[206,4881+2]..[206,4881+3])
                Pexp_ident "x" (lib/misc.ml[206,4881+2]..[206,4881+3])
    ]
  structure_item (lib/misc.ml[210,5024+0]..[215,5145+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[210,5024+4]..[210,5024+14])
          Ppat_var "filter_map" (lib/misc.ml[210,5024+4]..[210,5024+14])
        expression (lib/misc.ml[210,5024+15]..[215,5145+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[210,5024+15]..[210,5024+16])
            Ppat_var "f" (lib/misc.ml[210,5024+15]..[210,5024+16])
          expression (lib/misc.ml[210,5024+17]..[215,5145+10]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[210,5024+17]..[210,5024+18])
              Ppat_var "l" (lib/misc.ml[210,5024+17]..[210,5024+18])
            expression (lib/misc.ml[211,5045+2]..[215,5145+10])
              Pexp_open Fresh
              module_expr (lib/misc.ml[211,5045+2]..[211,5045+6])
                Pmod_ident "List" (lib/misc.ml[211,5045+2]..[211,5045+6])
              expression (lib/misc.ml[211,5045+8]..[215,5145+9])
                Pexp_apply
                expression (lib/misc.ml[211,5045+8]..[211,5045+11])
                  Pexp_ident "rev" (lib/misc.ml[211,5045+8]..[211,5045+11])
                [
                  <arg>
                  Nolabel
                    expression (lib/misc.ml[211,5045+12]..[215,5145+9])
                      Pexp_apply
                      expression (lib/misc.ml[211,5045+13]..[211,5045+22])
                        Pexp_ident "fold_left" (lib/misc.ml[211,5045+13]..[211,5045+22])
                      [
                        <arg>
                        Nolabel
                          expression (lib/misc.ml[211,5045+23]..[215,5145+3])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lib/misc.ml[211,5045+28]..[211,5045+30])
                              Ppat_var "ys" (lib/misc.ml[211,5045+28]..[211,5045+30])
                            expression (lib/misc.ml[211,5045+31]..[214,5119+25]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/misc.ml[211,5045+31]..[211,5045+32])
                                Ppat_var "x" (lib/misc.ml[211,5045+31]..[211,5045+32])
                              expression (lib/misc.ml[212,5081+4]..[214,5119+25])
                                Pexp_match
                                expression (lib/misc.ml[212,5081+10]..[212,5081+13])
                                  Pexp_apply
                                  expression (lib/misc.ml[212,5081+10]..[212,5081+11])
                                    Pexp_ident "f" (lib/misc.ml[212,5081+10]..[212,5081+11])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/misc.ml[212,5081+12]..[212,5081+13])
                                        Pexp_ident "x" (lib/misc.ml[212,5081+12]..[212,5081+13])
                                  ]
                                [
                                  <case>
                                    pattern (lib/misc.ml[213,5100+8]..[213,5100+12])
                                      Ppat_construct "None" (lib/misc.ml[213,5100+8]..[213,5100+12])
                                      None
                                    expression (lib/misc.ml[213,5100+16]..[213,5100+18])
                                      Pexp_ident "ys" (lib/misc.ml[213,5100+16]..[213,5100+18])
                                  <case>
                                    pattern (lib/misc.ml[214,5119+8]..[214,5119+14])
                                      Ppat_construct "Some" (lib/misc.ml[214,5119+8]..[214,5119+12])
                                      Some
                                        []
                                        pattern (lib/misc.ml[214,5119+13]..[214,5119+14])
                                          Ppat_var "y" (lib/misc.ml[214,5119+13]..[214,5119+14])
                                    expression (lib/misc.ml[214,5119+18]..[214,5119+25])
                                      Pexp_construct "::" (lib/misc.ml[214,5119+20]..[214,5119+22])
                                      Some
                                        expression (lib/misc.ml[214,5119+18]..[214,5119+25]) ghost
                                          Pexp_tuple
                                          [
                                            expression (lib/misc.ml[214,5119+18]..[214,5119+19])
                                              Pexp_ident "y" (lib/misc.ml[214,5119+18]..[214,5119+19])
                                            expression (lib/misc.ml[214,5119+23]..[214,5119+25])
                                              Pexp_ident "ys" (lib/misc.ml[214,5119+23]..[214,5119+25])
                                          ]
                                ]
                        <arg>
                        Nolabel
                          expression (lib/misc.ml[215,5145+4]..[215,5145+6])
                            Pexp_construct "[]" (lib/misc.ml[215,5145+4]..[215,5145+6])
                            None
                        <arg>
                        Nolabel
                          expression (lib/misc.ml[215,5145+7]..[215,5145+8])
                            Pexp_ident "l" (lib/misc.ml[215,5145+7]..[215,5145+8])
                      ]
                ]
    ]
  structure_item (lib/misc.ml[217,5157+0]..[249,6222+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[217,5157+4]..[217,5157+21])
          Ppat_var "new_encode_decode" (lib/misc.ml[217,5157+4]..[217,5157+21])
        expression (lib/misc.ml[217,5157+22]..[249,6222+25]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[217,5157+22]..[217,5157+30])
            Ppat_var "capacity" (lib/misc.ml[217,5157+22]..[217,5157+30])
          expression (lib/misc.ml[219,5257+2]..[249,6222+25])
            Pexp_letmodule "H" (lib/misc.ml[219,5257+13]..[219,5257+14])
            module_expr (lib/misc.ml[219,5257+17]..[223,5362+6])
              Pmod_apply
              module_expr (lib/misc.ml[219,5257+17]..[219,5257+29])
                Pmod_ident "Hashtbl.Make" (lib/misc.ml[219,5257+17]..[219,5257+29])
              module_expr (lib/misc.ml[219,5257+30]..[223,5362+5])
                Pmod_structure
                [
                  structure_item (lib/misc.ml[220,5294+4]..[220,5294+19])
                    Pstr_type Rec
                    [
                      type_declaration "t" (lib/misc.ml[220,5294+9]..[220,5294+10]) (lib/misc.ml[220,5294+4]..[220,5294+19])
                        ptype_params =
                          []
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ptype_abstract
                        ptype_private = Public
                        ptype_manifest =
                          Some
                            core_type (lib/misc.ml[220,5294+13]..[220,5294+19])
                              Ptyp_constr "string" (lib/misc.ml[220,5294+13]..[220,5294+19])
                              []
                    ]
                  structure_item (lib/misc.ml[221,5314+4]..[221,5314+19])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (lib/misc.ml[221,5314+8]..[221,5314+13])
                          Ppat_var "equal" (lib/misc.ml[221,5314+8]..[221,5314+13])
                        expression (lib/misc.ml[221,5314+16]..[221,5314+19])
                          Pexp_ident "=" (lib/misc.ml[221,5314+16]..[221,5314+19])
                    ]
                  structure_item (lib/misc.ml[222,5334+4]..[222,5334+27])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (lib/misc.ml[222,5334+8]..[222,5334+12])
                          Ppat_var "hash" (lib/misc.ml[222,5334+8]..[222,5334+12])
                        expression (lib/misc.ml[222,5334+15]..[222,5334+27])
                          Pexp_ident "Hashtbl.hash" (lib/misc.ml[222,5334+15]..[222,5334+27])
                    ]
                ]
            expression (lib/misc.ml[224,5372+2]..[249,6222+25])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/misc.ml[224,5372+6]..[224,5372+11])
                    Ppat_var "table" (lib/misc.ml[224,5372+6]..[224,5372+11])
                  expression (lib/misc.ml[224,5372+14]..[224,5372+31])
                    Pexp_apply
                    expression (lib/misc.ml[224,5372+14]..[224,5372+22])
                      Pexp_ident "H.create" (lib/misc.ml[224,5372+14]..[224,5372+22])
                    [
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[224,5372+23]..[224,5372+31])
                          Pexp_ident "capacity" (lib/misc.ml[224,5372+23]..[224,5372+31])
                    ]
              ]
              expression (lib/misc.ml[226,5470+2]..[249,6222+25])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lib/misc.ml[226,5470+6]..[226,5470+10])
                      Ppat_var "text" (lib/misc.ml[226,5470+6]..[226,5470+10])
                    expression (lib/misc.ml[226,5470+13]..[226,5470+44])
                      Pexp_apply
                      expression (lib/misc.ml[226,5470+13]..[226,5470+41])
                        Pexp_ident "MenhirLib.InfiniteArray.make" (lib/misc.ml[226,5470+13]..[226,5470+41])
                      [
                        <arg>
                        Nolabel
                          expression (lib/misc.ml[226,5470+42]..[226,5470+44])
                            Pexp_constant PConst_string("",(lib/misc.ml[226,5470+43]..[226,5470+43]),None)
                      ]
                ]
                expression (lib/misc.ml[228,5561+2]..[249,6222+25])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/misc.ml[228,5561+6]..[228,5561+7])
                        Ppat_var "c" (lib/misc.ml[228,5561+6]..[228,5561+7])
                      expression (lib/misc.ml[228,5561+10]..[228,5561+15])
                        Pexp_apply
                        expression (lib/misc.ml[228,5561+10]..[228,5561+13])
                          Pexp_ident "ref" (lib/misc.ml[228,5561+10]..[228,5561+13])
                        [
                          <arg>
                          Nolabel
                            expression (lib/misc.ml[228,5561+14]..[228,5561+15])
                              Pexp_constant PConst_int (0,None)
                        ]
                  ]
                  expression (lib/misc.ml[230,5640+2]..[249,6222+25])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/misc.ml[230,5640+6]..[230,5640+12])
                          Ppat_var "encode" (lib/misc.ml[230,5640+6]..[230,5640+12])
                        expression (lib/misc.ml[230,5640+13]..[240,5946+7]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lib/misc.ml[230,5640+13]..[230,5640+25])
                            Ppat_constraint
                            pattern (lib/misc.ml[230,5640+14]..[230,5640+15])
                              Ppat_var "s" (lib/misc.ml[230,5640+14]..[230,5640+15])
                            core_type (lib/misc.ml[230,5640+18]..[230,5640+24])
                              Ptyp_constr "string" (lib/misc.ml[230,5640+18]..[230,5640+24])
                              []
                          expression (lib/misc.ml[230,5640+26]..[240,5946+7])
                            Pexp_constraint
                            expression (lib/misc.ml[231,5674+4]..[240,5946+7])
                              Pexp_sequence
                              expression (lib/misc.ml[231,5674+4]..[231,5674+15])
                                Pexp_apply
                                expression (lib/misc.ml[231,5674+6]..[231,5674+8])
                                  Pexp_ident ":=" (lib/misc.ml[231,5674+6]..[231,5674+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/misc.ml[231,5674+4]..[231,5674+5])
                                      Pexp_ident "c" (lib/misc.ml[231,5674+4]..[231,5674+5])
                                  <arg>
                                  Nolabel
                                    expression (lib/misc.ml[231,5674+9]..[231,5674+15])
                                      Pexp_apply
                                      expression (lib/misc.ml[231,5674+12]..[231,5674+13])
                                        Pexp_ident "+" (lib/misc.ml[231,5674+12]..[231,5674+13])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/misc.ml[231,5674+9]..[231,5674+11])
                                            Pexp_apply
                                            expression (lib/misc.ml[231,5674+9]..[231,5674+10])
                                              Pexp_ident "!" (lib/misc.ml[231,5674+9]..[231,5674+10])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/misc.ml[231,5674+10]..[231,5674+11])
                                                  Pexp_ident "c" (lib/misc.ml[231,5674+10]..[231,5674+11])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/misc.ml[231,5674+14]..[231,5674+15])
                                            Pexp_constant PConst_int (1,None)
                                      ]
                                ]
                              expression (lib/misc.ml[232,5691+4]..[240,5946+7])
                                Pexp_try
                                expression (lib/misc.ml[233,5699+6]..[233,5699+20])
                                  Pexp_apply
                                  expression (lib/misc.ml[233,5699+6]..[233,5699+12])
                                    Pexp_ident "H.find" (lib/misc.ml[233,5699+6]..[233,5699+12])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/misc.ml[233,5699+13]..[233,5699+18])
                                        Pexp_ident "table" (lib/misc.ml[233,5699+13]..[233,5699+18])
                                    <arg>
                                    Nolabel
                                      expression (lib/misc.ml[233,5699+19]..[233,5699+20])
                                        Pexp_ident "s" (lib/misc.ml[233,5699+19]..[233,5699+20])
                                  ]
                                [
                                  <case>
                                    pattern (lib/misc.ml[234,5720+9]..[234,5720+18])
                                      Ppat_construct "Not_found" (lib/misc.ml[234,5720+9]..[234,5720+18])
                                      None
                                    expression (lib/misc.ml[237,5847+6]..[240,5946+7])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lib/misc.ml[237,5847+10]..[237,5847+11])
                                            Ppat_var "i" (lib/misc.ml[237,5847+10]..[237,5847+11])
                                          expression (lib/misc.ml[237,5847+14]..[237,5847+28])
                                            Pexp_apply
                                            expression (lib/misc.ml[237,5847+14]..[237,5847+22])
                                              Pexp_ident "H.length" (lib/misc.ml[237,5847+14]..[237,5847+22])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/misc.ml[237,5847+23]..[237,5847+28])
                                                  Pexp_ident "table" (lib/misc.ml[237,5847+23]..[237,5847+28])
                                            ]
                                      ]
                                      expression (lib/misc.ml[238,5879+6]..[240,5946+7])
                                        Pexp_sequence
                                        expression (lib/misc.ml[238,5879+6]..[238,5879+21])
                                          Pexp_apply
                                          expression (lib/misc.ml[238,5879+6]..[238,5879+11])
                                            Pexp_ident "H.add" (lib/misc.ml[238,5879+6]..[238,5879+11])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/misc.ml[238,5879+12]..[238,5879+17])
                                                Pexp_ident "table" (lib/misc.ml[238,5879+12]..[238,5879+17])
                                            <arg>
                                            Nolabel
                                              expression (lib/misc.ml[238,5879+18]..[238,5879+19])
                                                Pexp_ident "s" (lib/misc.ml[238,5879+18]..[238,5879+19])
                                            <arg>
                                            Nolabel
                                              expression (lib/misc.ml[238,5879+20]..[238,5879+21])
                                                Pexp_ident "i" (lib/misc.ml[238,5879+20]..[238,5879+21])
                                          ]
                                        expression (lib/misc.ml[239,5902+6]..[240,5946+7])
                                          Pexp_sequence
                                          expression (lib/misc.ml[239,5902+6]..[239,5902+42])
                                            Pexp_apply
                                            expression (lib/misc.ml[239,5902+6]..[239,5902+33])
                                              Pexp_ident "MenhirLib.InfiniteArray.set" (lib/misc.ml[239,5902+6]..[239,5902+33])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/misc.ml[239,5902+34]..[239,5902+38])
                                                  Pexp_ident "text" (lib/misc.ml[239,5902+34]..[239,5902+38])
                                              <arg>
                                              Nolabel
                                                expression (lib/misc.ml[239,5902+39]..[239,5902+40])
                                                  Pexp_ident "i" (lib/misc.ml[239,5902+39]..[239,5902+40])
                                              <arg>
                                              Nolabel
                                                expression (lib/misc.ml[239,5902+41]..[239,5902+42])
                                                  Pexp_ident "s" (lib/misc.ml[239,5902+41]..[239,5902+42])
                                            ]
                                          expression (lib/misc.ml[240,5946+6]..[240,5946+7])
                                            Pexp_ident "i" (lib/misc.ml[240,5946+6]..[240,5946+7])
                                ]
                            core_type (lib/misc.ml[230,5640+28]..[230,5640+31])
                              Ptyp_constr "int" (lib/misc.ml[230,5640+28]..[230,5640+31])
                              []
                      <def>
                        pattern (lib/misc.ml[242,6022+6]..[242,6022+12])
                          Ppat_var "decode" (lib/misc.ml[242,6022+6]..[242,6022+12])
                        expression (lib/misc.ml[242,6022+13]..[243,6056+38]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lib/misc.ml[242,6022+13]..[242,6022+22])
                            Ppat_constraint
                            pattern (lib/misc.ml[242,6022+14]..[242,6022+15])
                              Ppat_var "i" (lib/misc.ml[242,6022+14]..[242,6022+15])
                            core_type (lib/misc.ml[242,6022+18]..[242,6022+21])
                              Ptyp_constr "int" (lib/misc.ml[242,6022+18]..[242,6022+21])
                              []
                          expression (lib/misc.ml[242,6022+23]..[243,6056+38])
                            Pexp_constraint
                            expression (lib/misc.ml[243,6056+4]..[243,6056+38])
                              Pexp_apply
                              expression (lib/misc.ml[243,6056+4]..[243,6056+31])
                                Pexp_ident "MenhirLib.InfiniteArray.get" (lib/misc.ml[243,6056+4]..[243,6056+31])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/misc.ml[243,6056+32]..[243,6056+36])
                                    Pexp_ident "text" (lib/misc.ml[243,6056+32]..[243,6056+36])
                                <arg>
                                Nolabel
                                  expression (lib/misc.ml[243,6056+37]..[243,6056+38])
                                    Pexp_ident "i" (lib/misc.ml[243,6056+37]..[243,6056+38])
                              ]
                            core_type (lib/misc.ml[242,6022+25]..[242,6022+31])
                              Ptyp_constr "string" (lib/misc.ml[242,6022+25]..[242,6022+31])
                              []
                      <def>
                        pattern (lib/misc.ml[244,6095+6]..[244,6095+13])
                          Ppat_var "verbose" (lib/misc.ml[244,6095+6]..[244,6095+13])
                        expression (lib/misc.ml[244,6095+14]..[247,6191+25]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lib/misc.ml[244,6095+14]..[244,6095+16])
                            Ppat_construct "()" (lib/misc.ml[244,6095+14]..[244,6095+16])
                            None
                          expression (lib/misc.ml[245,6114+4]..[247,6191+25])
                            Pexp_apply
                            expression (lib/misc.ml[245,6114+4]..[245,6114+18])
                              Pexp_ident "Printf.fprintf" (lib/misc.ml[245,6114+4]..[245,6114+18])
                            [
                              <arg>
                              Nolabel
                                expression (lib/misc.ml[245,6114+19]..[245,6114+25])
                                  Pexp_ident "stderr" (lib/misc.ml[245,6114+19]..[245,6114+25])
                              <arg>
                              Nolabel
                                expression (lib/misc.ml[246,6140+6]..[246,6140+50])
                                  Pexp_constant PConst_string("%d calls to intern; %d unique strings.\n%!",(lib/misc.ml[246,6140+7]..[246,6140+49]),None)
                              <arg>
                              Nolabel
                                expression (lib/misc.ml[247,6191+6]..[247,6191+8])
                                  Pexp_apply
                                  expression (lib/misc.ml[247,6191+6]..[247,6191+7])
                                    Pexp_ident "!" (lib/misc.ml[247,6191+6]..[247,6191+7])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/misc.ml[247,6191+7]..[247,6191+8])
                                        Pexp_ident "c" (lib/misc.ml[247,6191+7]..[247,6191+8])
                                  ]
                              <arg>
                              Nolabel
                                expression (lib/misc.ml[247,6191+9]..[247,6191+25])
                                  Pexp_apply
                                  expression (lib/misc.ml[247,6191+10]..[247,6191+18])
                                    Pexp_ident "H.length" (lib/misc.ml[247,6191+10]..[247,6191+18])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/misc.ml[247,6191+19]..[247,6191+24])
                                        Pexp_ident "table" (lib/misc.ml[247,6191+19]..[247,6191+24])
                                  ]
                            ]
                    ]
                    expression (lib/misc.ml[249,6222+2]..[249,6222+25])
                      Pexp_tuple
                      [
                        expression (lib/misc.ml[249,6222+2]..[249,6222+8])
                          Pexp_ident "encode" (lib/misc.ml[249,6222+2]..[249,6222+8])
                        expression (lib/misc.ml[249,6222+10]..[249,6222+16])
                          Pexp_ident "decode" (lib/misc.ml[249,6222+10]..[249,6222+16])
                        expression (lib/misc.ml[249,6222+18]..[249,6222+25])
                          Pexp_ident "verbose" (lib/misc.ml[249,6222+18]..[249,6222+25])
                      ]
    ]
  structure_item (lib/misc.ml[251,6249+0]..[277,7175+16])
    Pstr_value Rec
    [
      <def>
        pattern (lib/misc.ml[251,6249+8]..[251,6249+12])
          Ppat_var "best" (lib/misc.ml[251,6249+8]..[251,6249+12])
        expression (lib/misc.ml[251,6249+13]..[277,7175+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[251,6249+13]..[251,6249+44])
            Ppat_constraint
            pattern (lib/misc.ml[251,6249+14]..[251,6249+24])
              Ppat_var "preferable" (lib/misc.ml[251,6249+14]..[251,6249+24])
            core_type (lib/misc.ml[251,6249+27]..[251,6249+43])
              Ptyp_arrow
              Nolabel
              core_type (lib/misc.ml[251,6249+27]..[251,6249+29])
                Ptyp_var a
              core_type (lib/misc.ml[251,6249+33]..[251,6249+43])
                Ptyp_arrow
                Nolabel
                core_type (lib/misc.ml[251,6249+33]..[251,6249+35])
                  Ptyp_var a
                core_type (lib/misc.ml[251,6249+39]..[251,6249+43])
                  Ptyp_constr "bool" (lib/misc.ml[251,6249+39]..[251,6249+43])
                  []
          expression (lib/misc.ml[251,6249+45]..[277,7175+16]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[251,6249+45]..[251,6249+59])
              Ppat_constraint
              pattern (lib/misc.ml[251,6249+46]..[251,6249+48])
                Ppat_var "xs" (lib/misc.ml[251,6249+46]..[251,6249+48])
              core_type (lib/misc.ml[251,6249+51]..[251,6249+58])
                Ptyp_constr "list" (lib/misc.ml[251,6249+54]..[251,6249+58])
                [
                  core_type (lib/misc.ml[251,6249+51]..[251,6249+53])
                    Ptyp_var a
                ]
            expression (lib/misc.ml[251,6249+60]..[277,7175+16])
              Pexp_constraint
              expression (lib/misc.ml[252,6323+2]..[277,7175+16])
                Pexp_match
                expression (lib/misc.ml[252,6323+8]..[252,6323+10])
                  Pexp_ident "xs" (lib/misc.ml[252,6323+8]..[252,6323+10])
                [
                  <case>
                    pattern (lib/misc.ml[253,6339+4]..[253,6339+6])
                      Ppat_construct "[]" (lib/misc.ml[253,6339+4]..[253,6339+6])
                      None
                    expression (lib/misc.ml[256,6473+6]..[256,6473+10])
                      Pexp_construct "None" (lib/misc.ml[256,6473+6]..[256,6473+10])
                      None
                  <case>
                    pattern (lib/misc.ml[257,6484+4]..[257,6484+7])
                      Ppat_construct "::" (lib/misc.ml[257,6484+5]..[257,6484+7]) ghost
                      Some
                        []
                        pattern (lib/misc.ml[257,6484+5]..[257,6484+7]) ghost
                          Ppat_tuple
                          [
                            pattern (lib/misc.ml[257,6484+5]..[257,6484+6])
                              Ppat_var "x" (lib/misc.ml[257,6484+5]..[257,6484+6])
                            pattern (lib/misc.ml[257,6484+6]..[257,6484+7]) ghost
                              Ppat_construct "[]" (lib/misc.ml[257,6484+6]..[257,6484+7]) ghost
                              None
                          ]
                    expression (lib/misc.ml[258,6495+6]..[258,6495+12])
                      Pexp_construct "Some" (lib/misc.ml[258,6495+6]..[258,6495+10])
                      Some
                        expression (lib/misc.ml[258,6495+11]..[258,6495+12])
                          Pexp_ident "x" (lib/misc.ml[258,6495+11]..[258,6495+12])
                  <case>
                    pattern (lib/misc.ml[259,6508+4]..[259,6508+11])
                      Ppat_construct "::" (lib/misc.ml[259,6508+6]..[259,6508+8])
                      Some
                        []
                        pattern (lib/misc.ml[259,6508+4]..[259,6508+11]) ghost
                          Ppat_tuple
                          [
                            pattern (lib/misc.ml[259,6508+4]..[259,6508+5])
                              Ppat_var "x" (lib/misc.ml[259,6508+4]..[259,6508+5])
                            pattern (lib/misc.ml[259,6508+9]..[259,6508+11])
                              Ppat_var "xs" (lib/misc.ml[259,6508+9]..[259,6508+11])
                          ]
                    expression (lib/misc.ml[262,6633+6]..[277,7175+16])
                      Pexp_ifthenelse
                      expression (lib/misc.ml[262,6633+9]..[262,6633+39])
                        Pexp_apply
                        expression (lib/misc.ml[262,6633+9]..[262,6633+21])
                          Pexp_ident "List.for_all" (lib/misc.ml[262,6633+9]..[262,6633+21])
                        [
                          <arg>
                          Nolabel
                            expression (lib/misc.ml[262,6633+22]..[262,6633+36])
                              Pexp_apply
                              expression (lib/misc.ml[262,6633+23]..[262,6633+33])
                                Pexp_ident "preferable" (lib/misc.ml[262,6633+23]..[262,6633+33])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/misc.ml[262,6633+34]..[262,6633+35])
                                    Pexp_ident "x" (lib/misc.ml[262,6633+34]..[262,6633+35])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/misc.ml[262,6633+37]..[262,6633+39])
                              Pexp_ident "xs" (lib/misc.ml[262,6633+37]..[262,6633+39])
                        ]
                      expression (lib/misc.ml[263,6678+8]..[263,6678+14])
                        Pexp_construct "Some" (lib/misc.ml[263,6678+8]..[263,6678+12])
                        Some
                          expression (lib/misc.ml[263,6678+13]..[263,6678+14])
                            Pexp_ident "x" (lib/misc.ml[263,6678+13]..[263,6678+14])
                      Some
                        expression (lib/misc.ml[266,6772+8]..[277,7175+16])
                          Pexp_match
                          expression (lib/misc.ml[266,6772+14]..[266,6772+32])
                            Pexp_apply
                            expression (lib/misc.ml[266,6772+14]..[266,6772+18])
                              Pexp_ident "best" (lib/misc.ml[266,6772+14]..[266,6772+18])
                            [
                              <arg>
                              Nolabel
                                expression (lib/misc.ml[266,6772+19]..[266,6772+29])
                                  Pexp_ident "preferable" (lib/misc.ml[266,6772+19]..[266,6772+29])
                              <arg>
                              Nolabel
                                expression (lib/misc.ml[266,6772+30]..[266,6772+32])
                                  Pexp_ident "xs" (lib/misc.ml[266,6772+30]..[266,6772+32])
                            ]
                          [
                            <case>
                              pattern (lib/misc.ml[267,6810+10]..[267,6810+16])
                                Ppat_construct "Some" (lib/misc.ml[267,6810+10]..[267,6810+14])
                                Some
                                  []
                                  pattern (lib/misc.ml[267,6810+15]..[267,6810+16])
                                    Ppat_var "y" (lib/misc.ml[267,6810+15]..[267,6810+16])
                              expression (lib/misc.ml[268,6830+12]..[274,7094+18])
                                Pexp_ifthenelse
                                expression (lib/misc.ml[268,6830+15]..[268,6830+29])
                                  Pexp_apply
                                  expression (lib/misc.ml[268,6830+15]..[268,6830+25])
                                    Pexp_ident "preferable" (lib/misc.ml[268,6830+15]..[268,6830+25])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/misc.ml[268,6830+26]..[268,6830+27])
                                        Pexp_ident "y" (lib/misc.ml[268,6830+26]..[268,6830+27])
                                    <arg>
                                    Nolabel
                                      expression (lib/misc.ml[268,6830+28]..[268,6830+29])
                                        Pexp_ident "x" (lib/misc.ml[268,6830+28]..[268,6830+29])
                                  ]
                                expression (lib/misc.ml[271,7010+14]..[271,7010+20])
                                  Pexp_construct "Some" (lib/misc.ml[271,7010+14]..[271,7010+18])
                                  Some
                                    expression (lib/misc.ml[271,7010+19]..[271,7010+20])
                                      Pexp_ident "y" (lib/misc.ml[271,7010+19]..[271,7010+20])
                                Some
                                  expression (lib/misc.ml[274,7094+14]..[274,7094+18])
                                    Pexp_construct "None" (lib/misc.ml[274,7094+14]..[274,7094+18])
                                    None
                            <case>
                              pattern (lib/misc.ml[275,7113+10]..[275,7113+14])
                                Ppat_construct "None" (lib/misc.ml[275,7113+10]..[275,7113+14])
                                None
                              expression (lib/misc.ml[277,7175+12]..[277,7175+16])
                                Pexp_construct "None" (lib/misc.ml[277,7175+12]..[277,7175+16])
                                None
                          ]
                ]
              core_type (lib/misc.ml[251,6249+62]..[251,6249+71])
                Ptyp_constr "option" (lib/misc.ml[251,6249+65]..[251,6249+71])
                [
                  core_type (lib/misc.ml[251,6249+62]..[251,6249+64])
                    Ptyp_var a
                ]
    ]
  structure_item (lib/misc.ml[279,7193+0]..[288,7382+24])
    Pstr_value Rec
    [
      <def>
        pattern (lib/misc.ml[279,7193+8]..[279,7193+15])
          Ppat_var "levels1" (lib/misc.ml[279,7193+8]..[279,7193+15])
        expression (lib/misc.ml[279,7193+16]..[288,7382+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[279,7193+16]..[279,7193+19])
            Ppat_var "cmp" (lib/misc.ml[279,7193+16]..[279,7193+19])
          expression (lib/misc.ml[279,7193+20]..[288,7382+24]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[279,7193+20]..[279,7193+22])
              Ppat_var "x1" (lib/misc.ml[279,7193+20]..[279,7193+22])
            expression (lib/misc.ml[279,7193+23]..[288,7382+24]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/misc.ml[279,7193+23]..[279,7193+25])
                Ppat_var "xs" (lib/misc.ml[279,7193+23]..[279,7193+25])
              expression (lib/misc.ml[280,7221+2]..[288,7382+24])
                Pexp_match
                expression (lib/misc.ml[280,7221+8]..[280,7221+10])
                  Pexp_ident "xs" (lib/misc.ml[280,7221+8]..[280,7221+10])
                [
                  <case>
                    pattern (lib/misc.ml[281,7237+4]..[281,7237+6])
                      Ppat_construct "[]" (lib/misc.ml[281,7237+4]..[281,7237+6])
                      None
                    expression (lib/misc.ml[282,7247+6]..[282,7247+14])
                      Pexp_tuple
                      [
                        expression (lib/misc.ml[282,7247+6]..[282,7247+10])
                          Pexp_construct "::" (lib/misc.ml[282,7247+7]..[282,7247+10]) ghost
                          Some
                            expression (lib/misc.ml[282,7247+7]..[282,7247+10]) ghost
                              Pexp_tuple
                              [
                                expression (lib/misc.ml[282,7247+7]..[282,7247+9])
                                  Pexp_ident "x1" (lib/misc.ml[282,7247+7]..[282,7247+9])
                                expression (lib/misc.ml[282,7247+9]..[282,7247+10]) ghost
                                  Pexp_construct "[]" (lib/misc.ml[282,7247+9]..[282,7247+10]) ghost
                                  None
                              ]
                        expression (lib/misc.ml[282,7247+12]..[282,7247+14])
                          Pexp_construct "[]" (lib/misc.ml[282,7247+12]..[282,7247+14])
                          None
                      ]
                  <case>
                    pattern (lib/misc.ml[283,7262+4]..[283,7262+12])
                      Ppat_construct "::" (lib/misc.ml[283,7262+7]..[283,7262+9])
                      Some
                        []
                        pattern (lib/misc.ml[283,7262+4]..[283,7262+12]) ghost
                          Ppat_tuple
                          [
                            pattern (lib/misc.ml[283,7262+4]..[283,7262+6])
                              Ppat_var "x2" (lib/misc.ml[283,7262+4]..[283,7262+6])
                            pattern (lib/misc.ml[283,7262+10]..[283,7262+12])
                              Ppat_var "xs" (lib/misc.ml[283,7262+10]..[283,7262+12])
                          ]
                    expression (lib/misc.ml[284,7278+6]..[288,7382+24])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/misc.ml[284,7278+10]..[284,7278+18])
                            Ppat_tuple
                            [
                              pattern (lib/misc.ml[284,7278+10]..[284,7278+13])
                                Ppat_var "ys1" (lib/misc.ml[284,7278+10]..[284,7278+13])
                              pattern (lib/misc.ml[284,7278+15]..[284,7278+18])
                                Ppat_var "yss" (lib/misc.ml[284,7278+15]..[284,7278+18])
                            ]
                          expression (lib/misc.ml[284,7278+21]..[284,7278+38])
                            Pexp_apply
                            expression (lib/misc.ml[284,7278+21]..[284,7278+28])
                              Pexp_ident "levels1" (lib/misc.ml[284,7278+21]..[284,7278+28])
                            [
                              <arg>
                              Nolabel
                                expression (lib/misc.ml[284,7278+29]..[284,7278+32])
                                  Pexp_ident "cmp" (lib/misc.ml[284,7278+29]..[284,7278+32])
                              <arg>
                              Nolabel
                                expression (lib/misc.ml[284,7278+33]..[284,7278+35])
                                  Pexp_ident "x2" (lib/misc.ml[284,7278+33]..[284,7278+35])
                              <arg>
                              Nolabel
                                expression (lib/misc.ml[284,7278+36]..[284,7278+38])
                                  Pexp_ident "xs" (lib/misc.ml[284,7278+36]..[284,7278+38])
                            ]
                      ]
                      expression (lib/misc.ml[285,7320+6]..[288,7382+24])
                        Pexp_ifthenelse
                        expression (lib/misc.ml[285,7320+9]..[285,7320+22])
                          Pexp_apply
                          expression (lib/misc.ml[285,7320+19]..[285,7320+20])
                            Pexp_ident "=" (lib/misc.ml[285,7320+19]..[285,7320+20])
                          [
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[285,7320+9]..[285,7320+18])
                                Pexp_apply
                                expression (lib/misc.ml[285,7320+9]..[285,7320+12])
                                  Pexp_ident "cmp" (lib/misc.ml[285,7320+9]..[285,7320+12])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/misc.ml[285,7320+13]..[285,7320+15])
                                      Pexp_ident "x1" (lib/misc.ml[285,7320+13]..[285,7320+15])
                                  <arg>
                                  Nolabel
                                    expression (lib/misc.ml[285,7320+16]..[285,7320+18])
                                      Pexp_ident "x2" (lib/misc.ml[285,7320+16]..[285,7320+18])
                                ]
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[285,7320+21]..[285,7320+22])
                                Pexp_constant PConst_int (0,None)
                          ]
                        expression (lib/misc.ml[286,7348+8]..[286,7348+22])
                          Pexp_tuple
                          [
                            expression (lib/misc.ml[286,7348+8]..[286,7348+17])
                              Pexp_construct "::" (lib/misc.ml[286,7348+11]..[286,7348+13])
                              Some
                                expression (lib/misc.ml[286,7348+8]..[286,7348+17]) ghost
                                  Pexp_tuple
                                  [
                                    expression (lib/misc.ml[286,7348+8]..[286,7348+10])
                                      Pexp_ident "x1" (lib/misc.ml[286,7348+8]..[286,7348+10])
                                    expression (lib/misc.ml[286,7348+14]..[286,7348+17])
                                      Pexp_ident "ys1" (lib/misc.ml[286,7348+14]..[286,7348+17])
                                  ]
                            expression (lib/misc.ml[286,7348+19]..[286,7348+22])
                              Pexp_ident "yss" (lib/misc.ml[286,7348+19]..[286,7348+22])
                          ]
                        Some
                          expression (lib/misc.ml[288,7382+8]..[288,7382+24])
                            Pexp_tuple
                            [
                              expression (lib/misc.ml[288,7382+8]..[288,7382+12])
                                Pexp_construct "::" (lib/misc.ml[288,7382+9]..[288,7382+12]) ghost
                                Some
                                  expression (lib/misc.ml[288,7382+9]..[288,7382+12]) ghost
                                    Pexp_tuple
                                    [
                                      expression (lib/misc.ml[288,7382+9]..[288,7382+11])
                                        Pexp_ident "x1" (lib/misc.ml[288,7382+9]..[288,7382+11])
                                      expression (lib/misc.ml[288,7382+11]..[288,7382+12]) ghost
                                        Pexp_construct "[]" (lib/misc.ml[288,7382+11]..[288,7382+12]) ghost
                                        None
                                    ]
                              expression (lib/misc.ml[288,7382+14]..[288,7382+24])
                                Pexp_construct "::" (lib/misc.ml[288,7382+18]..[288,7382+20])
                                Some
                                  expression (lib/misc.ml[288,7382+14]..[288,7382+24]) ghost
                                    Pexp_tuple
                                    [
                                      expression (lib/misc.ml[288,7382+14]..[288,7382+17])
                                        Pexp_ident "ys1" (lib/misc.ml[288,7382+14]..[288,7382+17])
                                      expression (lib/misc.ml[288,7382+21]..[288,7382+24])
                                        Pexp_ident "yss" (lib/misc.ml[288,7382+21]..[288,7382+24])
                                    ]
                            ]
                ]
    ]
  structure_item (lib/misc.ml[290,7408+0]..[296,7521+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[290,7408+4]..[290,7408+10])
          Ppat_var "levels" (lib/misc.ml[290,7408+4]..[290,7408+10])
        expression (lib/misc.ml[290,7408+11]..[296,7521+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[290,7408+11]..[290,7408+14])
            Ppat_var "cmp" (lib/misc.ml[290,7408+11]..[290,7408+14])
          expression (lib/misc.ml[290,7408+15]..[296,7521+16]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[290,7408+15]..[290,7408+17])
              Ppat_var "xs" (lib/misc.ml[290,7408+15]..[290,7408+17])
            expression (lib/misc.ml[291,7428+2]..[296,7521+16])
              Pexp_match
              expression (lib/misc.ml[291,7428+8]..[291,7428+10])
                Pexp_ident "xs" (lib/misc.ml[291,7428+8]..[291,7428+10])
              [
                <case>
                  pattern (lib/misc.ml[292,7444+4]..[292,7444+6])
                    Ppat_construct "[]" (lib/misc.ml[292,7444+4]..[292,7444+6])
                    None
                  expression (lib/misc.ml[293,7454+6]..[293,7454+8])
                    Pexp_construct "[]" (lib/misc.ml[293,7454+6]..[293,7454+8])
                    None
                <case>
                  pattern (lib/misc.ml[294,7463+4]..[294,7463+12])
                    Ppat_construct "::" (lib/misc.ml[294,7463+7]..[294,7463+9])
                    Some
                      []
                      pattern (lib/misc.ml[294,7463+4]..[294,7463+12]) ghost
                        Ppat_tuple
                        [
                          pattern (lib/misc.ml[294,7463+4]..[294,7463+6])
                            Ppat_var "x1" (lib/misc.ml[294,7463+4]..[294,7463+6])
                          pattern (lib/misc.ml[294,7463+10]..[294,7463+12])
                            Ppat_var "xs" (lib/misc.ml[294,7463+10]..[294,7463+12])
                        ]
                  expression (lib/misc.ml[295,7479+6]..[296,7521+16])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/misc.ml[295,7479+10]..[295,7479+18])
                          Ppat_tuple
                          [
                            pattern (lib/misc.ml[295,7479+10]..[295,7479+13])
                              Ppat_var "ys1" (lib/misc.ml[295,7479+10]..[295,7479+13])
                            pattern (lib/misc.ml[295,7479+15]..[295,7479+18])
                              Ppat_var "yss" (lib/misc.ml[295,7479+15]..[295,7479+18])
                          ]
                        expression (lib/misc.ml[295,7479+21]..[295,7479+38])
                          Pexp_apply
                          expression (lib/misc.ml[295,7479+21]..[295,7479+28])
                            Pexp_ident "levels1" (lib/misc.ml[295,7479+21]..[295,7479+28])
                          [
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[295,7479+29]..[295,7479+32])
                                Pexp_ident "cmp" (lib/misc.ml[295,7479+29]..[295,7479+32])
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[295,7479+33]..[295,7479+35])
                                Pexp_ident "x1" (lib/misc.ml[295,7479+33]..[295,7479+35])
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[295,7479+36]..[295,7479+38])
                                Pexp_ident "xs" (lib/misc.ml[295,7479+36]..[295,7479+38])
                          ]
                    ]
                    expression (lib/misc.ml[296,7521+6]..[296,7521+16])
                      Pexp_construct "::" (lib/misc.ml[296,7521+10]..[296,7521+12])
                      Some
                        expression (lib/misc.ml[296,7521+6]..[296,7521+16]) ghost
                          Pexp_tuple
                          [
                            expression (lib/misc.ml[296,7521+6]..[296,7521+9])
                              Pexp_ident "ys1" (lib/misc.ml[296,7521+6]..[296,7521+9])
                            expression (lib/misc.ml[296,7521+13]..[296,7521+16])
                              Pexp_ident "yss" (lib/misc.ml[296,7521+13]..[296,7521+16])
                          ]
              ]
    ]
  structure_item (lib/misc.ml[304,7849+0]..[313,8247+47])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[304,7849+4]..[304,7849+10])
          Ppat_var "insert" (lib/misc.ml[304,7849+4]..[304,7849+10])
        expression (lib/misc.ml[304,7849+11]..[313,8247+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[304,7849+11]..[304,7849+15])
            Ppat_var "<=" (lib/misc.ml[304,7849+11]..[304,7849+15])
          expression (lib/misc.ml[304,7849+16]..[313,8247+47]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[304,7849+16]..[304,7849+17])
              Ppat_var "x" (lib/misc.ml[304,7849+16]..[304,7849+17])
            expression (lib/misc.ml[304,7849+18]..[313,8247+47]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/misc.ml[304,7849+18]..[304,7849+20])
                Ppat_var "ys" (lib/misc.ml[304,7849+18]..[304,7849+20])
              expression (lib/misc.ml[308,8083+2]..[313,8247+47])
                Pexp_ifthenelse
                expression (lib/misc.ml[308,8083+5]..[308,8083+37])
                  Pexp_apply
                  expression (lib/misc.ml[308,8083+5]..[308,8083+16])
                    Pexp_ident "List.exists" (lib/misc.ml[308,8083+5]..[308,8083+16])
                  [
                    <arg>
                    Nolabel
                      expression (lib/misc.ml[308,8083+17]..[308,8083+34])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lib/misc.ml[308,8083+22]..[308,8083+23])
                          Ppat_var "y" (lib/misc.ml[308,8083+22]..[308,8083+23])
                        expression (lib/misc.ml[308,8083+27]..[308,8083+33])
                          Pexp_apply
                          expression (lib/misc.ml[308,8083+29]..[308,8083+31])
                            Pexp_ident "<=" (lib/misc.ml[308,8083+29]..[308,8083+31])
                          [
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[308,8083+27]..[308,8083+28])
                                Pexp_ident "x" (lib/misc.ml[308,8083+27]..[308,8083+28])
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[308,8083+32]..[308,8083+33])
                                Pexp_ident "y" (lib/misc.ml[308,8083+32]..[308,8083+33])
                          ]
                    <arg>
                    Nolabel
                      expression (lib/misc.ml[308,8083+35]..[308,8083+37])
                        Pexp_ident "ys" (lib/misc.ml[308,8083+35]..[308,8083+37])
                  ]
                expression (lib/misc.ml[309,8126+4]..[309,8126+6])
                  Pexp_ident "ys" (lib/misc.ml[309,8126+4]..[309,8126+6])
                Some
                  expression (lib/misc.ml[313,8247+4]..[313,8247+47])
                    Pexp_construct "::" (lib/misc.ml[313,8247+6]..[313,8247+8])
                    Some
                      expression (lib/misc.ml[313,8247+4]..[313,8247+47]) ghost
                        Pexp_tuple
                        [
                          expression (lib/misc.ml[313,8247+4]..[313,8247+5])
                            Pexp_ident "x" (lib/misc.ml[313,8247+4]..[313,8247+5])
                          expression (lib/misc.ml[313,8247+9]..[313,8247+47])
                            Pexp_apply
                            expression (lib/misc.ml[313,8247+9]..[313,8247+20])
                              Pexp_ident "List.filter" (lib/misc.ml[313,8247+9]..[313,8247+20])
                            [
                              <arg>
                              Nolabel
                                expression (lib/misc.ml[313,8247+21]..[313,8247+44])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lib/misc.ml[313,8247+26]..[313,8247+27])
                                    Ppat_var "y" (lib/misc.ml[313,8247+26]..[313,8247+27])
                                  expression (lib/misc.ml[313,8247+31]..[313,8247+43])
                                    Pexp_apply
                                    expression (lib/misc.ml[313,8247+31]..[313,8247+34])
                                      Pexp_ident "not" (lib/misc.ml[313,8247+31]..[313,8247+34])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/misc.ml[313,8247+35]..[313,8247+43])
                                          Pexp_apply
                                          expression (lib/misc.ml[313,8247+38]..[313,8247+40])
                                            Pexp_ident "<=" (lib/misc.ml[313,8247+38]..[313,8247+40])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/misc.ml[313,8247+36]..[313,8247+37])
                                                Pexp_ident "y" (lib/misc.ml[313,8247+36]..[313,8247+37])
                                            <arg>
                                            Nolabel
                                              expression (lib/misc.ml[313,8247+41]..[313,8247+42])
                                                Pexp_ident "x" (lib/misc.ml[313,8247+41]..[313,8247+42])
                                          ]
                                    ]
                              <arg>
                              Nolabel
                                expression (lib/misc.ml[313,8247+45]..[313,8247+47])
                                  Pexp_ident "ys" (lib/misc.ml[313,8247+45]..[313,8247+47])
                            ]
                        ]
    ]
  structure_item (lib/misc.ml[325,8826+0]..[326,8845+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[325,8826+4]..[325,8826+8])
          Ppat_var "trim" (lib/misc.ml[325,8826+4]..[325,8826+8])
        expression (lib/misc.ml[325,8826+9]..[326,8845+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[325,8826+9]..[325,8826+13])
            Ppat_var "<=" (lib/misc.ml[325,8826+9]..[325,8826+13])
          expression (lib/misc.ml[325,8826+14]..[326,8845+37]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[325,8826+14]..[325,8826+16])
              Ppat_var "xs" (lib/misc.ml[325,8826+14]..[325,8826+16])
            expression (lib/misc.ml[326,8845+2]..[326,8845+37])
              Pexp_apply
              expression (lib/misc.ml[326,8845+2]..[326,8845+17])
                Pexp_ident "List.fold_right" (lib/misc.ml[326,8845+2]..[326,8845+17])
              [
                <arg>
                Nolabel
                  expression (lib/misc.ml[326,8845+18]..[326,8845+31])
                    Pexp_apply
                    expression (lib/misc.ml[326,8845+19]..[326,8845+25])
                      Pexp_ident "insert" (lib/misc.ml[326,8845+19]..[326,8845+25])
                    [
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[326,8845+26]..[326,8845+30])
                          Pexp_ident "<=" (lib/misc.ml[326,8845+26]..[326,8845+30])
                    ]
                <arg>
                Nolabel
                  expression (lib/misc.ml[326,8845+32]..[326,8845+34])
                    Pexp_ident "xs" (lib/misc.ml[326,8845+32]..[326,8845+34])
                <arg>
                Nolabel
                  expression (lib/misc.ml[326,8845+35]..[326,8845+37])
                    Pexp_construct "[]" (lib/misc.ml[326,8845+35]..[326,8845+37])
                    None
              ]
    ]
  structure_item (lib/misc.ml[328,8884+0]..[336,9012+21])
    Pstr_value Rec
    [
      <def>
        pattern (lib/misc.ml[328,8884+8]..[328,8884+12])
          Ppat_var "dup1" (lib/misc.ml[328,8884+8]..[328,8884+12])
        expression (lib/misc.ml[328,8884+13]..[336,9012+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[328,8884+13]..[328,8884+16])
            Ppat_var "cmp" (lib/misc.ml[328,8884+13]..[328,8884+16])
          expression (lib/misc.ml[328,8884+17]..[336,9012+21]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[328,8884+17]..[328,8884+18])
              Ppat_var "x" (lib/misc.ml[328,8884+17]..[328,8884+18])
            expression (lib/misc.ml[328,8884+19]..[336,9012+21]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/misc.ml[328,8884+19]..[328,8884+21])
                Ppat_var "ys" (lib/misc.ml[328,8884+19]..[328,8884+21])
              expression (lib/misc.ml[329,8908+2]..[336,9012+21])
                Pexp_match
                expression (lib/misc.ml[329,8908+8]..[329,8908+10])
                  Pexp_ident "ys" (lib/misc.ml[329,8908+8]..[329,8908+10])
                [
                  <case>
                    pattern (lib/misc.ml[330,8924+4]..[330,8924+6])
                      Ppat_construct "[]" (lib/misc.ml[330,8924+4]..[330,8924+6])
                      None
                    expression (lib/misc.ml[331,8934+6]..[331,8934+10])
                      Pexp_construct "None" (lib/misc.ml[331,8934+6]..[331,8934+10])
                      None
                  <case>
                    pattern (lib/misc.ml[332,8945+4]..[332,8945+11])
                      Ppat_construct "::" (lib/misc.ml[332,8945+6]..[332,8945+8])
                      Some
                        []
                        pattern (lib/misc.ml[332,8945+4]..[332,8945+11]) ghost
                          Ppat_tuple
                          [
                            pattern (lib/misc.ml[332,8945+4]..[332,8945+5])
                              Ppat_var "y" (lib/misc.ml[332,8945+4]..[332,8945+5])
                            pattern (lib/misc.ml[332,8945+9]..[332,8945+11])
                              Ppat_var "ys" (lib/misc.ml[332,8945+9]..[332,8945+11])
                          ]
                    expression (lib/misc.ml[333,8960+6]..[336,9012+21])
                      Pexp_ifthenelse
                      expression (lib/misc.ml[333,8960+9]..[333,8960+20])
                        Pexp_apply
                        expression (lib/misc.ml[333,8960+17]..[333,8960+18])
                          Pexp_ident "=" (lib/misc.ml[333,8960+17]..[333,8960+18])
                        [
                          <arg>
                          Nolabel
                            expression (lib/misc.ml[333,8960+9]..[333,8960+16])
                              Pexp_apply
                              expression (lib/misc.ml[333,8960+9]..[333,8960+12])
                                Pexp_ident "cmp" (lib/misc.ml[333,8960+9]..[333,8960+12])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/misc.ml[333,8960+13]..[333,8960+14])
                                    Pexp_ident "x" (lib/misc.ml[333,8960+13]..[333,8960+14])
                                <arg>
                                Nolabel
                                  expression (lib/misc.ml[333,8960+15]..[333,8960+16])
                                    Pexp_ident "y" (lib/misc.ml[333,8960+15]..[333,8960+16])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/misc.ml[333,8960+19]..[333,8960+20])
                              Pexp_constant PConst_int (0,None)
                        ]
                      expression (lib/misc.ml[334,8986+8]..[334,8986+14])
                        Pexp_construct "Some" (lib/misc.ml[334,8986+8]..[334,8986+12])
                        Some
                          expression (lib/misc.ml[334,8986+13]..[334,8986+14])
                            Pexp_ident "x" (lib/misc.ml[334,8986+13]..[334,8986+14])
                      Some
                        expression (lib/misc.ml[336,9012+8]..[336,9012+21])
                          Pexp_apply
                          expression (lib/misc.ml[336,9012+8]..[336,9012+12])
                            Pexp_ident "dup1" (lib/misc.ml[336,9012+8]..[336,9012+12])
                          [
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[336,9012+13]..[336,9012+16])
                                Pexp_ident "cmp" (lib/misc.ml[336,9012+13]..[336,9012+16])
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[336,9012+17]..[336,9012+18])
                                Pexp_ident "y" (lib/misc.ml[336,9012+17]..[336,9012+18])
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[336,9012+19]..[336,9012+21])
                                Pexp_ident "ys" (lib/misc.ml[336,9012+19]..[336,9012+21])
                          ]
                ]
    ]
  structure_item (lib/misc.ml[338,9035+0]..[343,9104+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[338,9035+4]..[338,9035+7])
          Ppat_var "dup" (lib/misc.ml[338,9035+4]..[338,9035+7])
        expression (lib/misc.ml[338,9035+8]..[343,9104+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[338,9035+8]..[338,9035+11])
            Ppat_var "cmp" (lib/misc.ml[338,9035+8]..[338,9035+11])
          expression (lib/misc.ml[338,9035+12]..[343,9104+19]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[338,9035+12]..[338,9035+14])
              Ppat_var "xs" (lib/misc.ml[338,9035+12]..[338,9035+14])
            expression (lib/misc.ml[339,9052+2]..[343,9104+19])
              Pexp_match
              expression (lib/misc.ml[339,9052+8]..[339,9052+10])
                Pexp_ident "xs" (lib/misc.ml[339,9052+8]..[339,9052+10])
              [
                <case>
                  pattern (lib/misc.ml[340,9068+4]..[340,9068+6])
                    Ppat_construct "[]" (lib/misc.ml[340,9068+4]..[340,9068+6])
                    None
                  expression (lib/misc.ml[341,9078+6]..[341,9078+10])
                    Pexp_construct "None" (lib/misc.ml[341,9078+6]..[341,9078+10])
                    None
                <case>
                  pattern (lib/misc.ml[342,9089+4]..[342,9089+11])
                    Ppat_construct "::" (lib/misc.ml[342,9089+6]..[342,9089+8])
                    Some
                      []
                      pattern (lib/misc.ml[342,9089+4]..[342,9089+11]) ghost
                        Ppat_tuple
                        [
                          pattern (lib/misc.ml[342,9089+4]..[342,9089+5])
                            Ppat_var "x" (lib/misc.ml[342,9089+4]..[342,9089+5])
                          pattern (lib/misc.ml[342,9089+9]..[342,9089+11])
                            Ppat_var "xs" (lib/misc.ml[342,9089+9]..[342,9089+11])
                        ]
                  expression (lib/misc.ml[343,9104+6]..[343,9104+19])
                    Pexp_apply
                    expression (lib/misc.ml[343,9104+6]..[343,9104+10])
                      Pexp_ident "dup1" (lib/misc.ml[343,9104+6]..[343,9104+10])
                    [
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[343,9104+11]..[343,9104+14])
                          Pexp_ident "cmp" (lib/misc.ml[343,9104+11]..[343,9104+14])
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[343,9104+15]..[343,9104+16])
                          Pexp_ident "x" (lib/misc.ml[343,9104+15]..[343,9104+16])
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[343,9104+17]..[343,9104+19])
                          Pexp_ident "xs" (lib/misc.ml[343,9104+17]..[343,9104+19])
                    ]
              ]
    ]
  structure_item (lib/misc.ml[345,9125+0]..[350,9206+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[345,9125+4]..[345,9125+8])
          Ppat_var "once" (lib/misc.ml[345,9125+4]..[345,9125+8])
        expression (lib/misc.ml[345,9125+9]..[350,9206+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[345,9125+9]..[345,9125+10])
            Ppat_var "x" (lib/misc.ml[345,9125+9]..[345,9125+10])
          expression (lib/misc.ml[345,9125+11]..[350,9206+10]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[345,9125+11]..[345,9125+12])
              Ppat_var "y" (lib/misc.ml[345,9125+11]..[345,9125+12])
            expression (lib/misc.ml[346,9140+2]..[350,9206+10])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/misc.ml[346,9140+6]..[346,9140+7])
                    Ppat_var "s" (lib/misc.ml[346,9140+6]..[346,9140+7])
                  expression (lib/misc.ml[346,9140+10]..[346,9140+15])
                    Pexp_apply
                    expression (lib/misc.ml[346,9140+10]..[346,9140+13])
                      Pexp_ident "ref" (lib/misc.ml[346,9140+10]..[346,9140+13])
                    [
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[346,9140+14]..[346,9140+15])
                          Pexp_ident "x" (lib/misc.ml[346,9140+14]..[346,9140+15])
                    ]
              ]
              expression (lib/misc.ml[347,9159+2]..[350,9206+10])
                Pexp_fun
                Nolabel
                None
                pattern (lib/misc.ml[347,9159+6]..[347,9159+8])
                  Ppat_construct "()" (lib/misc.ml[347,9159+6]..[347,9159+8])
                  None
                expression (lib/misc.ml[348,9171+4]..[350,9206+10])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/misc.ml[348,9171+8]..[348,9171+14])
                        Ppat_var "result" (lib/misc.ml[348,9171+8]..[348,9171+14])
                      expression (lib/misc.ml[348,9171+17]..[348,9171+19])
                        Pexp_apply
                        expression (lib/misc.ml[348,9171+17]..[348,9171+18])
                          Pexp_ident "!" (lib/misc.ml[348,9171+17]..[348,9171+18])
                        [
                          <arg>
                          Nolabel
                            expression (lib/misc.ml[348,9171+18]..[348,9171+19])
                              Pexp_ident "s" (lib/misc.ml[348,9171+18]..[348,9171+19])
                        ]
                  ]
                  expression (lib/misc.ml[349,9194+4]..[350,9206+10])
                    Pexp_sequence
                    expression (lib/misc.ml[349,9194+4]..[349,9194+10])
                      Pexp_apply
                      expression (lib/misc.ml[349,9194+6]..[349,9194+8])
                        Pexp_ident ":=" (lib/misc.ml[349,9194+6]..[349,9194+8])
                      [
                        <arg>
                        Nolabel
                          expression (lib/misc.ml[349,9194+4]..[349,9194+5])
                            Pexp_ident "s" (lib/misc.ml[349,9194+4]..[349,9194+5])
                        <arg>
                        Nolabel
                          expression (lib/misc.ml[349,9194+9]..[349,9194+10])
                            Pexp_ident "y" (lib/misc.ml[349,9194+9]..[349,9194+10])
                      ]
                    expression (lib/misc.ml[350,9206+4]..[350,9206+10])
                      Pexp_ident "result" (lib/misc.ml[350,9206+4]..[350,9206+10])
    ]
  structure_item (lib/misc.ml[352,9218+0]..[364,9491+3])
    Pstr_module
    "ListExtras" (lib/misc.ml[352,9218+7]..[352,9218+17])
      module_expr (lib/misc.ml[352,9218+20]..[364,9491+3])
        Pmod_structure
        [
          structure_item (lib/misc.ml[353,9245+2]..[361,9420+13])
            Pstr_value Rec
            [
              <def>
                pattern (lib/misc.ml[353,9245+10]..[353,9245+15])
                  Ppat_var "equal" (lib/misc.ml[353,9245+10]..[353,9245+15])
                expression (lib/misc.ml[353,9245+16]..[361,9420+13]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lib/misc.ml[353,9245+16]..[353,9245+19])
                    Ppat_var "=" (lib/misc.ml[353,9245+16]..[353,9245+19])
                  expression (lib/misc.ml[353,9245+20]..[361,9420+13]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lib/misc.ml[353,9245+20]..[353,9245+22])
                      Ppat_var "xs" (lib/misc.ml[353,9245+20]..[353,9245+22])
                    expression (lib/misc.ml[353,9245+23]..[361,9420+13]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lib/misc.ml[353,9245+23]..[353,9245+25])
                        Ppat_var "ys" (lib/misc.ml[353,9245+23]..[353,9245+25])
                      expression (lib/misc.ml[354,9273+4]..[361,9420+13])
                        Pexp_match
                        expression (lib/misc.ml[354,9273+10]..[354,9273+16])
                          Pexp_tuple
                          [
                            expression (lib/misc.ml[354,9273+10]..[354,9273+12])
                              Pexp_ident "xs" (lib/misc.ml[354,9273+10]..[354,9273+12])
                            expression (lib/misc.ml[354,9273+14]..[354,9273+16])
                              Pexp_ident "ys" (lib/misc.ml[354,9273+14]..[354,9273+16])
                          ]
                        [
                          <case>
                            pattern (lib/misc.ml[355,9295+6]..[355,9295+12])
                              Ppat_tuple
                              [
                                pattern (lib/misc.ml[355,9295+6]..[355,9295+8])
                                  Ppat_construct "[]" (lib/misc.ml[355,9295+6]..[355,9295+8])
                                  None
                                pattern (lib/misc.ml[355,9295+10]..[355,9295+12])
                                  Ppat_construct "[]" (lib/misc.ml[355,9295+10]..[355,9295+12])
                                  None
                              ]
                            expression (lib/misc.ml[356,9311+8]..[356,9311+12])
                              Pexp_construct "true" (lib/misc.ml[356,9311+8]..[356,9311+12])
                              None
                          <case>
                            pattern (lib/misc.ml[357,9324+6]..[357,9324+22])
                              Ppat_tuple
                              [
                                pattern (lib/misc.ml[357,9324+6]..[357,9324+13])
                                  Ppat_construct "::" (lib/misc.ml[357,9324+8]..[357,9324+10])
                                  Some
                                    []
                                    pattern (lib/misc.ml[357,9324+6]..[357,9324+13]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (lib/misc.ml[357,9324+6]..[357,9324+7])
                                          Ppat_var "x" (lib/misc.ml[357,9324+6]..[357,9324+7])
                                        pattern (lib/misc.ml[357,9324+11]..[357,9324+13])
                                          Ppat_var "xs" (lib/misc.ml[357,9324+11]..[357,9324+13])
                                      ]
                                pattern (lib/misc.ml[357,9324+15]..[357,9324+22])
                                  Ppat_construct "::" (lib/misc.ml[357,9324+17]..[357,9324+19])
                                  Some
                                    []
                                    pattern (lib/misc.ml[357,9324+15]..[357,9324+22]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (lib/misc.ml[357,9324+15]..[357,9324+16])
                                          Ppat_var "y" (lib/misc.ml[357,9324+15]..[357,9324+16])
                                        pattern (lib/misc.ml[357,9324+20]..[357,9324+22])
                                          Ppat_var "ys" (lib/misc.ml[357,9324+20]..[357,9324+22])
                                      ]
                              ]
                            expression (lib/misc.ml[358,9350+8]..[358,9350+32])
                              Pexp_apply
                              expression (lib/misc.ml[358,9350+14]..[358,9350+16])
                                Pexp_ident "&&" (lib/misc.ml[358,9350+14]..[358,9350+16])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/misc.ml[358,9350+8]..[358,9350+13])
                                    Pexp_apply
                                    expression (lib/misc.ml[358,9350+10]..[358,9350+11])
                                      Pexp_ident "=" (lib/misc.ml[358,9350+10]..[358,9350+11])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/misc.ml[358,9350+8]..[358,9350+9])
                                          Pexp_ident "x" (lib/misc.ml[358,9350+8]..[358,9350+9])
                                      <arg>
                                      Nolabel
                                        expression (lib/misc.ml[358,9350+12]..[358,9350+13])
                                          Pexp_ident "y" (lib/misc.ml[358,9350+12]..[358,9350+13])
                                    ]
                                <arg>
                                Nolabel
                                  expression (lib/misc.ml[358,9350+17]..[358,9350+32])
                                    Pexp_apply
                                    expression (lib/misc.ml[358,9350+17]..[358,9350+22])
                                      Pexp_ident "equal" (lib/misc.ml[358,9350+17]..[358,9350+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/misc.ml[358,9350+23]..[358,9350+26])
                                          Pexp_ident "=" (lib/misc.ml[358,9350+23]..[358,9350+26])
                                      <arg>
                                      Nolabel
                                        expression (lib/misc.ml[358,9350+27]..[358,9350+29])
                                          Pexp_ident "xs" (lib/misc.ml[358,9350+27]..[358,9350+29])
                                      <arg>
                                      Nolabel
                                        expression (lib/misc.ml[358,9350+30]..[358,9350+32])
                                          Pexp_ident "ys" (lib/misc.ml[358,9350+30]..[358,9350+32])
                                    ]
                              ]
                          <case>
                            pattern (lib/misc.ml[359,9383+6]..[360,9400+16])
                              Ppat_or
                              pattern (lib/misc.ml[359,9383+6]..[359,9383+16])
                                Ppat_tuple
                                [
                                  pattern (lib/misc.ml[359,9383+6]..[359,9383+12])
                                    Ppat_construct "::" (lib/misc.ml[359,9383+8]..[359,9383+10])
                                    Some
                                      []
                                      pattern (lib/misc.ml[359,9383+6]..[359,9383+12]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (lib/misc.ml[359,9383+6]..[359,9383+7])
                                            Ppat_any
                                          pattern (lib/misc.ml[359,9383+11]..[359,9383+12])
                                            Ppat_any
                                        ]
                                  pattern (lib/misc.ml[359,9383+14]..[359,9383+16])
                                    Ppat_construct "[]" (lib/misc.ml[359,9383+14]..[359,9383+16])
                                    None
                                ]
                              pattern (lib/misc.ml[360,9400+6]..[360,9400+16])
                                Ppat_tuple
                                [
                                  pattern (lib/misc.ml[360,9400+6]..[360,9400+8])
                                    Ppat_construct "[]" (lib/misc.ml[360,9400+6]..[360,9400+8])
                                    None
                                  pattern (lib/misc.ml[360,9400+10]..[360,9400+16])
                                    Ppat_construct "::" (lib/misc.ml[360,9400+12]..[360,9400+14])
                                    Some
                                      []
                                      pattern (lib/misc.ml[360,9400+10]..[360,9400+16]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (lib/misc.ml[360,9400+10]..[360,9400+11])
                                            Ppat_any
                                          pattern (lib/misc.ml[360,9400+15]..[360,9400+16])
                                            Ppat_any
                                        ]
                                ]
                            expression (lib/misc.ml[361,9420+8]..[361,9420+13])
                              Pexp_construct "false" (lib/misc.ml[361,9420+8]..[361,9420+13])
                              None
                        ]
            ]
          structure_item (lib/misc.ml[362,9434+2]..[363,9455+35])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/misc.ml[362,9434+6]..[362,9434+10])
                  Ppat_var "hash" (lib/misc.ml[362,9434+6]..[362,9434+10])
                expression (lib/misc.ml[362,9434+11]..[363,9455+35]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lib/misc.ml[362,9434+11]..[362,9434+15])
                    Ppat_var "hash" (lib/misc.ml[362,9434+11]..[362,9434+15])
                  expression (lib/misc.ml[362,9434+16]..[363,9455+35]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lib/misc.ml[362,9434+16]..[362,9434+18])
                      Ppat_var "xs" (lib/misc.ml[362,9434+16]..[362,9434+18])
                    expression (lib/misc.ml[363,9455+4]..[363,9455+35])
                      Pexp_apply
                      expression (lib/misc.ml[363,9455+4]..[363,9455+16])
                        Pexp_ident "Hashtbl.hash" (lib/misc.ml[363,9455+4]..[363,9455+16])
                      [
                        <arg>
                        Nolabel
                          expression (lib/misc.ml[363,9455+17]..[363,9455+35])
                            Pexp_apply
                            expression (lib/misc.ml[363,9455+18]..[363,9455+26])
                              Pexp_ident "List.map" (lib/misc.ml[363,9455+18]..[363,9455+26])
                            [
                              <arg>
                              Nolabel
                                expression (lib/misc.ml[363,9455+27]..[363,9455+31])
                                  Pexp_ident "hash" (lib/misc.ml[363,9455+27]..[363,9455+31])
                              <arg>
                              Nolabel
                                expression (lib/misc.ml[363,9455+32]..[363,9455+34])
                                  Pexp_ident "xs" (lib/misc.ml[363,9455+32]..[363,9455+34])
                            ]
                      ]
            ]
        ]
  structure_item (lib/misc.ml[366,9496+0]..[370,9567+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[366,9496+4]..[366,9496+7])
          Ppat_var "nth" (lib/misc.ml[366,9496+4]..[366,9496+7])
        expression (lib/misc.ml[366,9496+10]..[370,9567+32])
          Pexp_function
          [
            <case>
              pattern (lib/misc.ml[367,9515+4]..[367,9515+5])
                Ppat_constant PConst_int (1,None)
              expression (lib/misc.ml[367,9515+9]..[367,9515+16])
                Pexp_constant PConst_string("first",(lib/misc.ml[367,9515+10]..[367,9515+15]),None)
            <case>
              pattern (lib/misc.ml[368,9532+4]..[368,9532+5])
                Ppat_constant PConst_int (2,None)
              expression (lib/misc.ml[368,9532+9]..[368,9532+17])
                Pexp_constant PConst_string("second",(lib/misc.ml[368,9532+10]..[368,9532+16]),None)
            <case>
              pattern (lib/misc.ml[369,9550+4]..[369,9550+5])
                Ppat_constant PConst_int (3,None)
              expression (lib/misc.ml[369,9550+9]..[369,9550+16])
                Pexp_constant PConst_string("third",(lib/misc.ml[369,9550+10]..[369,9550+15]),None)
            <case>
              pattern (lib/misc.ml[370,9567+4]..[370,9567+5])
                Ppat_var "i" (lib/misc.ml[370,9567+4]..[370,9567+5])
              expression (lib/misc.ml[370,9567+9]..[370,9567+32])
                Pexp_apply
                expression (lib/misc.ml[370,9567+9]..[370,9567+23])
                  Pexp_ident "Printf.sprintf" (lib/misc.ml[370,9567+9]..[370,9567+23])
                [
                  <arg>
                  Nolabel
                    expression (lib/misc.ml[370,9567+24]..[370,9567+30])
                      Pexp_constant PConst_string("%dth",(lib/misc.ml[370,9567+25]..[370,9567+29]),None)
                  <arg>
                  Nolabel
                    expression (lib/misc.ml[370,9567+31]..[370,9567+32])
                      Pexp_ident "i" (lib/misc.ml[370,9567+31]..[370,9567+32])
                ]
          ]
    ]
  structure_item (lib/misc.ml[372,9601+0]..[376,9669+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[372,9601+4]..[372,9601+9])
          Ppat_var "count" (lib/misc.ml[372,9601+4]..[372,9601+9])
        expression (lib/misc.ml[372,9601+12]..[376,9669+30])
          Pexp_function
          [
            <case>
              pattern (lib/misc.ml[373,9622+4]..[373,9622+5])
                Ppat_constant PConst_int (1,None)
              expression (lib/misc.ml[373,9622+9]..[373,9622+14])
                Pexp_constant PConst_string("one",(lib/misc.ml[373,9622+10]..[373,9622+13]),None)
            <case>
              pattern (lib/misc.ml[374,9637+4]..[374,9637+5])
                Ppat_constant PConst_int (2,None)
              expression (lib/misc.ml[374,9637+9]..[374,9637+14])
                Pexp_constant PConst_string("two",(lib/misc.ml[374,9637+10]..[374,9637+13]),None)
            <case>
              pattern (lib/misc.ml[375,9652+4]..[375,9652+5])
                Ppat_constant PConst_int (3,None)
              expression (lib/misc.ml[375,9652+9]..[375,9652+16])
                Pexp_constant PConst_string("three",(lib/misc.ml[375,9652+10]..[375,9652+15]),None)
            <case>
              pattern (lib/misc.ml[376,9669+4]..[376,9669+5])
                Ppat_var "i" (lib/misc.ml[376,9669+4]..[376,9669+5])
              expression (lib/misc.ml[376,9669+9]..[376,9669+30])
                Pexp_apply
                expression (lib/misc.ml[376,9669+9]..[376,9669+23])
                  Pexp_ident "Printf.sprintf" (lib/misc.ml[376,9669+9]..[376,9669+23])
                [
                  <arg>
                  Nolabel
                    expression (lib/misc.ml[376,9669+24]..[376,9669+28])
                      Pexp_constant PConst_string("%d",(lib/misc.ml[376,9669+25]..[376,9669+27]),None)
                  <arg>
                  Nolabel
                    expression (lib/misc.ml[376,9669+29]..[376,9669+30])
                      Pexp_ident "i" (lib/misc.ml[376,9669+29]..[376,9669+30])
                ]
          ]
    ]
  structure_item (lib/misc.ml[378,9701+0]..[379,9725+48])
    Pstr_value Rec
    [
      <def>
        pattern (lib/misc.ml[378,9701+8]..[378,9701+17])
          Ppat_var "list_make" (lib/misc.ml[378,9701+8]..[378,9701+17])
        expression (lib/misc.ml[378,9701+18]..[379,9725+48]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[378,9701+18]..[378,9701+19])
            Ppat_var "n" (lib/misc.ml[378,9701+18]..[378,9701+19])
          expression (lib/misc.ml[378,9701+20]..[379,9725+48]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[378,9701+20]..[378,9701+21])
              Ppat_var "x" (lib/misc.ml[378,9701+20]..[378,9701+21])
            expression (lib/misc.ml[379,9725+2]..[379,9725+48])
              Pexp_ifthenelse
              expression (lib/misc.ml[379,9725+5]..[379,9725+10])
                Pexp_apply
                expression (lib/misc.ml[379,9725+7]..[379,9725+8])
                  Pexp_ident "=" (lib/misc.ml[379,9725+7]..[379,9725+8])
                [
                  <arg>
                  Nolabel
                    expression (lib/misc.ml[379,9725+5]..[379,9725+6])
                      Pexp_ident "n" (lib/misc.ml[379,9725+5]..[379,9725+6])
                  <arg>
                  Nolabel
                    expression (lib/misc.ml[379,9725+9]..[379,9725+10])
                      Pexp_constant PConst_int (0,None)
                ]
              expression (lib/misc.ml[379,9725+16]..[379,9725+18])
                Pexp_construct "[]" (lib/misc.ml[379,9725+16]..[379,9725+18])
                None
              Some
                expression (lib/misc.ml[379,9725+24]..[379,9725+48])
                  Pexp_construct "::" (lib/misc.ml[379,9725+26]..[379,9725+28])
                  Some
                    expression (lib/misc.ml[379,9725+24]..[379,9725+48]) ghost
                      Pexp_tuple
                      [
                        expression (lib/misc.ml[379,9725+24]..[379,9725+25])
                          Pexp_ident "x" (lib/misc.ml[379,9725+24]..[379,9725+25])
                        expression (lib/misc.ml[379,9725+29]..[379,9725+48])
                          Pexp_apply
                          expression (lib/misc.ml[379,9725+29]..[379,9725+38])
                            Pexp_ident "list_make" (lib/misc.ml[379,9725+29]..[379,9725+38])
                          [
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[379,9725+39]..[379,9725+46])
                                Pexp_apply
                                expression (lib/misc.ml[379,9725+42]..[379,9725+43])
                                  Pexp_ident "-" (lib/misc.ml[379,9725+42]..[379,9725+43])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/misc.ml[379,9725+40]..[379,9725+41])
                                      Pexp_ident "n" (lib/misc.ml[379,9725+40]..[379,9725+41])
                                  <arg>
                                  Nolabel
                                    expression (lib/misc.ml[379,9725+44]..[379,9725+45])
                                      Pexp_constant PConst_int (1,None)
                                ]
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[379,9725+47]..[379,9725+48])
                                Pexp_ident "x" (lib/misc.ml[379,9725+47]..[379,9725+48])
                          ]
                      ]
    ]
  structure_item (lib/misc.ml[384,9892+0]..[391,10010+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[384,9892+4]..[384,9892+10])
          Ppat_var "digits" (lib/misc.ml[384,9892+4]..[384,9892+10])
        expression (lib/misc.ml[384,9892+11]..[391,10010+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[384,9892+11]..[384,9892+12])
            Ppat_var "n" (lib/misc.ml[384,9892+11]..[384,9892+12])
          expression (lib/misc.ml[385,9907+2]..[391,10010+10])
            Pexp_let Rec
            [
              <def>
                pattern (lib/misc.ml[385,9907+10]..[385,9907+14])
                  Ppat_var "loop" (lib/misc.ml[385,9907+10]..[385,9907+14])
                expression (lib/misc.ml[385,9907+15]..[389,9974+30]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lib/misc.ml[385,9907+15]..[385,9907+19])
                    Ppat_var "accu" (lib/misc.ml[385,9907+15]..[385,9907+19])
                  expression (lib/misc.ml[385,9907+20]..[389,9974+30]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lib/misc.ml[385,9907+20]..[385,9907+21])
                      Ppat_var "n" (lib/misc.ml[385,9907+20]..[385,9907+21])
                    expression (lib/misc.ml[386,9931+4]..[389,9974+30])
                      Pexp_ifthenelse
                      expression (lib/misc.ml[386,9931+7]..[386,9931+13])
                        Pexp_apply
                        expression (lib/misc.ml[386,9931+9]..[386,9931+10])
                          Pexp_ident "<" (lib/misc.ml[386,9931+9]..[386,9931+10])
                        [
                          <arg>
                          Nolabel
                            expression (lib/misc.ml[386,9931+7]..[386,9931+8])
                              Pexp_ident "n" (lib/misc.ml[386,9931+7]..[386,9931+8])
                          <arg>
                          Nolabel
                            expression (lib/misc.ml[386,9931+11]..[386,9931+13])
                              Pexp_constant PConst_int (10,None)
                        ]
                      expression (lib/misc.ml[387,9950+6]..[387,9950+14])
                        Pexp_apply
                        expression (lib/misc.ml[387,9950+11]..[387,9950+12])
                          Pexp_ident "+" (lib/misc.ml[387,9950+11]..[387,9950+12])
                        [
                          <arg>
                          Nolabel
                            expression (lib/misc.ml[387,9950+6]..[387,9950+10])
                              Pexp_ident "accu" (lib/misc.ml[387,9950+6]..[387,9950+10])
                          <arg>
                          Nolabel
                            expression (lib/misc.ml[387,9950+13]..[387,9950+14])
                              Pexp_constant PConst_int (1,None)
                        ]
                      Some
                        expression (lib/misc.ml[389,9974+6]..[389,9974+30])
                          Pexp_apply
                          expression (lib/misc.ml[389,9974+6]..[389,9974+10])
                            Pexp_ident "loop" (lib/misc.ml[389,9974+6]..[389,9974+10])
                          [
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[389,9974+11]..[389,9974+21])
                                Pexp_apply
                                expression (lib/misc.ml[389,9974+17]..[389,9974+18])
                                  Pexp_ident "+" (lib/misc.ml[389,9974+17]..[389,9974+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/misc.ml[389,9974+12]..[389,9974+16])
                                      Pexp_ident "accu" (lib/misc.ml[389,9974+12]..[389,9974+16])
                                  <arg>
                                  Nolabel
                                    expression (lib/misc.ml[389,9974+19]..[389,9974+20])
                                      Pexp_constant PConst_int (1,None)
                                ]
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[389,9974+22]..[389,9974+30])
                                Pexp_apply
                                expression (lib/misc.ml[389,9974+25]..[389,9974+26])
                                  Pexp_ident "/" (lib/misc.ml[389,9974+25]..[389,9974+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/misc.ml[389,9974+23]..[389,9974+24])
                                      Pexp_ident "n" (lib/misc.ml[389,9974+23]..[389,9974+24])
                                  <arg>
                                  Nolabel
                                    expression (lib/misc.ml[389,9974+27]..[389,9974+29])
                                      Pexp_constant PConst_int (10,None)
                                ]
                          ]
            ]
            expression (lib/misc.ml[391,10010+2]..[391,10010+10])
              Pexp_apply
              expression (lib/misc.ml[391,10010+2]..[391,10010+6])
                Pexp_ident "loop" (lib/misc.ml[391,10010+2]..[391,10010+6])
              [
                <arg>
                Nolabel
                  expression (lib/misc.ml[391,10010+7]..[391,10010+8])
                    Pexp_constant PConst_int (0,None)
                <arg>
                Nolabel
                  expression (lib/misc.ml[391,10010+9]..[391,10010+10])
                    Pexp_ident "n" (lib/misc.ml[391,10010+9]..[391,10010+10])
              ]
    ]
  structure_item (lib/misc.ml[396,10110+0]..[397,10124+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[396,10110+4]..[396,10110+7])
          Ppat_var "pad" (lib/misc.ml[396,10110+4]..[396,10110+7])
        expression (lib/misc.ml[396,10110+8]..[397,10124+43]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[396,10110+8]..[396,10110+9])
            Ppat_var "n" (lib/misc.ml[396,10110+8]..[396,10110+9])
          expression (lib/misc.ml[396,10110+10]..[397,10124+43]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[396,10110+10]..[396,10110+11])
              Ppat_var "s" (lib/misc.ml[396,10110+10]..[396,10110+11])
            expression (lib/misc.ml[397,10124+2]..[397,10124+43])
              Pexp_apply
              expression (lib/misc.ml[397,10124+40]..[397,10124+41])
                Pexp_ident "^" (lib/misc.ml[397,10124+40]..[397,10124+41])
              [
                <arg>
                Nolabel
                  expression (lib/misc.ml[397,10124+2]..[397,10124+39])
                    Pexp_apply
                    expression (lib/misc.ml[397,10124+2]..[397,10124+13])
                      Pexp_ident "String.make" (lib/misc.ml[397,10124+2]..[397,10124+13])
                    [
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[397,10124+14]..[397,10124+35])
                          Pexp_apply
                          expression (lib/misc.ml[397,10124+17]..[397,10124+18])
                            Pexp_ident "-" (lib/misc.ml[397,10124+17]..[397,10124+18])
                          [
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[397,10124+15]..[397,10124+16])
                                Pexp_ident "n" (lib/misc.ml[397,10124+15]..[397,10124+16])
                            <arg>
                            Nolabel
                              expression (lib/misc.ml[397,10124+19]..[397,10124+34])
                                Pexp_apply
                                expression (lib/misc.ml[397,10124+19]..[397,10124+32])
                                  Pexp_ident "String.length" (lib/misc.ml[397,10124+19]..[397,10124+32])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/misc.ml[397,10124+33]..[397,10124+34])
                                      Pexp_ident "s" (lib/misc.ml[397,10124+33]..[397,10124+34])
                                ]
                          ]
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[397,10124+36]..[397,10124+39])
                          Pexp_constant PConst_char 30
                    ]
                <arg>
                Nolabel
                  expression (lib/misc.ml[397,10124+42]..[397,10124+43])
                    Pexp_ident "s" (lib/misc.ml[397,10124+42]..[397,10124+43])
              ]
    ]
  structure_item (lib/misc.ml[399,10169+0]..[400,10192+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[399,10169+4]..[399,10169+16])
          Ppat_var "padded_index" (lib/misc.ml[399,10169+4]..[399,10169+16])
        expression (lib/misc.ml[399,10169+17]..[400,10192+40]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/misc.ml[399,10169+17]..[399,10169+18])
            Ppat_var "n" (lib/misc.ml[399,10169+17]..[399,10169+18])
          expression (lib/misc.ml[399,10169+19]..[400,10192+40]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/misc.ml[399,10169+19]..[399,10169+20])
              Ppat_var "i" (lib/misc.ml[399,10169+19]..[399,10169+20])
            expression (lib/misc.ml[400,10192+2]..[400,10192+40])
              Pexp_apply
              expression (lib/misc.ml[400,10192+2]..[400,10192+5])
                Pexp_ident "pad" (lib/misc.ml[400,10192+2]..[400,10192+5])
              [
                <arg>
                Nolabel
                  expression (lib/misc.ml[400,10192+6]..[400,10192+16])
                    Pexp_apply
                    expression (lib/misc.ml[400,10192+7]..[400,10192+13])
                      Pexp_ident "digits" (lib/misc.ml[400,10192+7]..[400,10192+13])
                    [
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[400,10192+14]..[400,10192+15])
                          Pexp_ident "n" (lib/misc.ml[400,10192+14]..[400,10192+15])
                    ]
                <arg>
                Nolabel
                  expression (lib/misc.ml[400,10192+17]..[400,10192+40])
                    Pexp_apply
                    expression (lib/misc.ml[400,10192+18]..[400,10192+32])
                      Pexp_ident "Printf.sprintf" (lib/misc.ml[400,10192+18]..[400,10192+32])
                    [
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[400,10192+33]..[400,10192+37])
                          Pexp_constant PConst_string("%d",(lib/misc.ml[400,10192+34]..[400,10192+36]),None)
                      <arg>
                      Nolabel
                        expression (lib/misc.ml[400,10192+38]..[400,10192+39])
                          Pexp_ident "i" (lib/misc.ml[400,10192+38]..[400,10192+39])
                    ]
              ]
    ]
  structure_item (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
          Ppat_construct "()" (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
          None
        expression (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
          Pexp_apply
          expression (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
            Pexp_ident "Ppx_inline_test_lib.unset_lib" (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
          [
            <arg>
            Nolabel
              expression (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/misc.ml[400,10192+40]..[400,10192+40]) ghost,None)
          ]
    ]
  structure_item (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
          Ppat_construct "()" (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
          None
        expression (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
          Pexp_apply
          expression (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
            Pexp_ident "Expect_test_collector.Current_file.unset" (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
          [
            <arg>
            Nolabel
              expression (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
                Pexp_construct "()" (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
                None
          ]
    ]
  structure_item (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
          Ppat_construct "()" (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
          None
        expression (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
          Pexp_apply
          expression (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
            Pexp_ident "Ppx_bench_lib.Benchmark_accumulator.Current_libname.unset" (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
          [
            <arg>
            Nolabel
              expression (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
                Pexp_construct "()" (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
                None
          ]
    ]
  structure_item (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
          Ppat_construct "()" (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
          None
        expression (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
          Pexp_apply
          expression (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
            Pexp_ident "Ppx_module_timer_runtime.record_until" (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
          [
            <arg>
            Nolabel
              expression (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
                Pexp_ident "Ppx_module_timer_runtime.__MODULE__" (lib/misc.ml[400,10192+40]..[400,10192+40]) ghost
          ]
    ]
]

[@@@ocaml.ppx.context
  {
    tool_name = "ppx_driver";
    include_dirs = [];
    load_path = [];
    open_modules = [];
    for_package = None;
    debug = false;
    use_threads = false;
    use_vmthreads = false;
    recursive_types = false;
    principal = false;
    transparent_modules = false;
    unboxed_types = false;
    unsafe_string = false;
    cookies = [("inline_tests", "enabled"); ("library-name", "gbnf_parser")]
  }]
let () =
  Ppx_module_timer_runtime.record_start Ppx_module_timer_runtime.__MODULE__
let () =
  Ppx_bench_lib.Benchmark_accumulator.Current_libname.set "gbnf_parser"
let () =
  Expect_test_collector.Current_file.set ~absolute_filename:"lib/misc.ml"
let () = Ppx_inline_test_lib.set_lib_and_partition "gbnf_parser" "misc.ml"
let single = function | x::[] -> x | _ -> assert false
let rec mapd f =
  function
  | [] -> []
  | x::xs -> let (y1, y2) = f x in y1 :: y2 :: (mapd f xs)
let tabulate n f = let a = Array.init n f in Array.get a
let sum n (f : int -> int) =
  (let sum = ref 0 in
   for x = 0 to n - 1 do sum := ((!sum) + (f x)) done; !sum : int)
let with_buffer n f = let b = Buffer.create n in f b; Buffer.contents b
type 'a iter = ('a -> unit) -> unit
let separated_iter_to_string printer separator iter =
  with_buffer 32
    (fun b ->
       let first = ref true in
       iter
         (fun x ->
            if !first
            then (Buffer.add_string b (printer x); first := false)
            else
              (Buffer.add_string b separator; Buffer.add_string b (printer x))))
let separated_list_to_string printer separator xs =
  separated_iter_to_string printer separator (fun f -> List.iter f xs)
let inverse (a : 'a array) =
  (let table = Hashtbl.create (Array.length a) in
   Array.iteri
     (fun i ->
        fun data ->
          assert (not (Hashtbl.mem table data)); Hashtbl.add table data i) a;
   (fun data -> try Hashtbl.find table data with | Not_found -> assert false) : 
  'a -> int)
let support_assoc l x = try List.assoc x l with | Not_found -> x
let materialize (table : ('a, 'a option) Hashtbl.t) (x : 'a) =
  (let rec loop x =
     match Hashtbl.find table x with | None -> [] | Some x -> x :: (loop x) in
   loop x : 'a list)
let iterij i j f = for x = i to j - 1 do f x done
let iteri n f = iterij 0 n f
let rec foldij i j f accu =
  if i < j then foldij (i + 1) j f (f i accu) else accu
let foldi n f accu = foldij 0 n f accu
let rec foldij_lazy i j f accu =
  if i < j then f i (fun () -> foldij_lazy (i + 1) j f accu) else accu
let mapij start n f =
  List.rev (foldij start n (fun i -> fun accu -> (f i) :: accu) [])
let mapi n f = mapij 0 n f
let rec qfold f accu q =
  match try Some (Queue.take q) with | Queue.Empty -> None with
  | Some x -> qfold f (f accu x) q
  | None -> accu
let qiter f q =
  try while true do f (Queue.take q) done with | Queue.Empty -> ()
let rec smap f =
  function
  | [] -> []
  | x::xs as l ->
      let x' = f x
      and xs' = smap f xs in
      if (x == x') && (xs == xs') then l else x' :: xs'
let rec smapa f accu =
  function
  | [] -> (accu, [])
  | x::xs as l ->
      let (accu, x') = f accu x in
      let (accu, xs') = smapa f accu xs in
      (accu, (if (x == x') && (xs == xs') then l else x' :: xs'))
let normalize s =
  let s = Bytes.of_string s in
  let n = Bytes.length s in
  for i = 0 to n - 1 do
    (match Bytes.get s i with
     | '(' | ')' | ',' -> Bytes.set s i '_'
     | _ -> ())
  done;
  Bytes.unsafe_to_string s
let postincrement r = let x = !r in r := (x + 1); x
let filter_map f l =
  let open List in
    rev
      (fold_left
         (fun ys -> fun x -> match f x with | None -> ys | Some y -> y :: ys)
         [] l)
let new_encode_decode capacity =
  let module H =
    (Hashtbl.Make)(struct
                     type t = string
                     let equal = (=)
                     let hash = Hashtbl.hash
                   end) in
    let table = H.create capacity in
    let text = MenhirLib.InfiniteArray.make "" in
    let c = ref 0 in
    let encode (s : string) =
      (c := ((!c) + 1);
       (try H.find table s
        with
        | Not_found ->
            let i = H.length table in
            (H.add table s i; MenhirLib.InfiniteArray.set text i s; i)) : 
      int)
    and decode (i : int) = (MenhirLib.InfiniteArray.get text i : string)
    and verbose () =
      Printf.fprintf stderr "%d calls to intern; %d unique strings.\n%!" (
        !c) (H.length table) in
    (encode, decode, verbose)
let rec best (preferable : 'a -> 'a -> bool) (xs : 'a list) =
  (match xs with
   | [] -> None
   | x::[] -> Some x
   | x::xs ->
       if List.for_all (preferable x) xs
       then Some x
       else
         (match best preferable xs with
          | Some y -> if preferable y x then Some y else None
          | None -> None) : 'a option)
let rec levels1 cmp x1 xs =
  match xs with
  | [] -> ([x1], [])
  | x2::xs ->
      let (ys1, yss) = levels1 cmp x2 xs in
      if (cmp x1 x2) = 0 then ((x1 :: ys1), yss) else ([x1], (ys1 :: yss))
let levels cmp xs =
  match xs with
  | [] -> []
  | x1::xs -> let (ys1, yss) = levels1 cmp x1 xs in ys1 :: yss
let insert (<=) x ys =
  if List.exists (fun y -> x <= y) ys
  then ys
  else x :: (List.filter (fun y -> not (y <= x)) ys)
let trim (<=) xs = List.fold_right (insert (<=)) xs []
let rec dup1 cmp x ys =
  match ys with
  | [] -> None
  | y::ys -> if (cmp x y) = 0 then Some x else dup1 cmp y ys
let dup cmp xs = match xs with | [] -> None | x::xs -> dup1 cmp x xs
let once x y = let s = ref x in fun () -> let result = !s in s := y; result
module ListExtras =
  struct
    let rec equal (=) xs ys =
      match (xs, ys) with
      | ([], []) -> true
      | (x::xs, y::ys) -> (x = y) && (equal (=) xs ys)
      | (_::_, []) | ([], _::_) -> false
    let hash hash xs = Hashtbl.hash (List.map hash xs)
  end
let nth =
  function
  | 1 -> "first"
  | 2 -> "second"
  | 3 -> "third"
  | i -> Printf.sprintf "%dth" i
let count =
  function
  | 1 -> "one"
  | 2 -> "two"
  | 3 -> "three"
  | i -> Printf.sprintf "%d" i
let rec list_make n x = if n = 0 then [] else x :: (list_make (n - 1) x)
let digits n =
  let rec loop accu n = if n < 10 then accu + 1 else loop (accu + 1) (n / 10) in
  loop 0 n
let pad n s = (String.make (n - (String.length s)) '0') ^ s
let padded_index n i = pad (digits n) (Printf.sprintf "%d" i)
let () = Ppx_inline_test_lib.unset_lib "gbnf_parser"
let () = Expect_test_collector.Current_file.unset ()
let () = Ppx_bench_lib.Benchmark_accumulator.Current_libname.unset ()
let () =
  Ppx_module_timer_runtime.record_until Ppx_module_timer_runtime.__MODULE__
[
  structure_item (_none_[0,0+-1].._none_[0,0+-1]) ghost
    Tstr_attribute "ocaml.ppx.context"
    [
      structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
        Pstr_eval
        expression (_none_[0,0+-1]..[0,0+-1]) ghost
          Pexp_record
          [
            "tool_name" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_constant PConst_string("ppx_driver",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
            "include_dirs" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "load_path" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "open_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "for_package" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "None" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "debug" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_threads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_vmthreads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "recursive_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "principal" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "transparent_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unboxed_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unsafe_string" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "cookies" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                Some
                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                    Pexp_tuple
                    [
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_tuple
                        [
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_constant PConst_string("inline_tests",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                          expression (<command-line>[1,0+0]..[1,0+9])
                            Pexp_constant PConst_string("enabled",(<command-line>[1,0+1]..[1,0+8]),None)
                        ]
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                        Some
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_tuple
                            [
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_tuple
                                [
                                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                    Pexp_constant PConst_string("library-name",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                                  expression (<command-line>[1,0+0]..[1,0+13])
                                    Pexp_constant PConst_string("gbnf_parser",(<command-line>[1,0+1]..[1,0+12]),None)
                                ]
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                                None
                            ]
                    ]
          ]
          None
    ]
  structure_item (lib/misc.ml[14,976+0]..lib/misc.ml[14,976+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[14,976+0]..lib/misc.ml[14,976+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/misc.ml[14,976+0]..lib/misc.ml[14,976+0]) ghost
          Texp_apply
          expression (lib/misc.ml[14,976+0]..lib/misc.ml[14,976+0]) ghost
            Texp_ident "Ppx_module_timer_runtime!.record_start"
          [
            <arg>
              Nolabel
              expression (lib/misc.ml[14,976+0]..lib/misc.ml[14,976+0]) ghost
                Texp_ident "Ppx_module_timer_runtime!.__MODULE__"
          ]
    ]
  structure_item (lib/misc.ml[14,976+0]..lib/misc.ml[14,976+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[14,976+0]..lib/misc.ml[14,976+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/misc.ml[14,976+0]..lib/misc.ml[14,976+0]) ghost
          Texp_apply
          expression (lib/misc.ml[14,976+0]..lib/misc.ml[14,976+0]) ghost
            Texp_ident "Ppx_bench_lib!.Benchmark_accumulator.Current_libname.set"
          [
            <arg>
              Nolabel
              expression (lib/misc.ml[14,976+0]..lib/misc.ml[14,976+0]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/misc.ml[14,976+0]..lib/misc.ml[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/misc.ml[14,976+0]..lib/misc.ml[14,976+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[14,976+0]..lib/misc.ml[14,976+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/misc.ml[14,976+0]..lib/misc.ml[14,976+0]) ghost
          Texp_apply
          expression (lib/misc.ml[14,976+0]..lib/misc.ml[14,976+0]) ghost
            Texp_ident "Expect_test_collector!.Current_file.set"
          [
            <arg>
              Labelled "absolute_filename"
              expression (lib/misc.ml[14,976+0]..lib/misc.ml[14,976+0]) ghost
                Texp_constant Const_string("lib/misc.ml",(lib/misc.ml[14,976+0]..lib/misc.ml[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/misc.ml[14,976+0]..lib/misc.ml[14,976+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[14,976+0]..lib/misc.ml[14,976+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/misc.ml[14,976+0]..lib/misc.ml[14,976+0]) ghost
          Texp_apply
          expression (lib/misc.ml[14,976+0]..lib/misc.ml[14,976+0]) ghost
            Texp_ident "Ppx_inline_test_lib!.set_lib_and_partition"
          [
            <arg>
              Nolabel
              expression (lib/misc.ml[14,976+0]..lib/misc.ml[14,976+0]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/misc.ml[14,976+0]..lib/misc.ml[14,976+0]) ghost,None)
            <arg>
              Nolabel
              expression (lib/misc.ml[14,976+0]..lib/misc.ml[14,976+0]) ghost
                Texp_constant Const_string("misc.ml",(lib/misc.ml[14,976+0]..lib/misc.ml[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/misc.ml[14,976+0]..lib/misc.ml[18,1028+18])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[14,976+4]..lib/misc.ml[14,976+10])
          Tpat_var "single/1132"
        expression (lib/misc.ml[14,976+13]..lib/misc.ml[18,1028+18])
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[15,998+4]..lib/misc.ml[15,998+9])
                Tpat_construct "::"
                [
                  pattern (lib/misc.ml[15,998+6]..lib/misc.ml[15,998+7])
                    Tpat_var "x/1134"
                  pattern (lib/misc.ml[15,998+8]..lib/misc.ml[15,998+9]) ghost
                    Tpat_construct "[]"
                    []
                    None
                ]
                None
              expression (lib/misc.ml[16,1011+6]..lib/misc.ml[16,1011+7])
                Texp_ident "x/1134"
            <case>
              pattern (lib/misc.ml[17,1019+4]..lib/misc.ml[17,1019+5])
                Tpat_any
              expression (lib/misc.ml[18,1028+6]..lib/misc.ml[18,1028+18])
                Texp_assert                expression (lib/misc.ml[18,1028+13]..lib/misc.ml[18,1028+18])
                  Texp_construct "false"
                  []
          ]
    ]
  structure_item (lib/misc.ml[20,1048+0]..lib/misc.ml[25,1134+27])
    Tstr_value Rec
    [
      <def>
        pattern (lib/misc.ml[20,1048+8]..lib/misc.ml[20,1048+12])
          Tpat_var "mapd/1136"
        expression (lib/misc.ml[20,1048+13]..lib/misc.ml[25,1134+27]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[20,1048+13]..lib/misc.ml[20,1048+14])
                Tpat_var "f/1137"
              expression (lib/misc.ml[20,1048+17]..lib/misc.ml[25,1134+27])
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[21,1074+4]..lib/misc.ml[21,1074+6])
                      Tpat_construct "[]"
                      []
                      None
                    expression (lib/misc.ml[22,1084+6]..lib/misc.ml[22,1084+8])
                      Texp_construct "[]"
                      []
                  <case>
                    pattern (lib/misc.ml[23,1093+4]..lib/misc.ml[23,1093+11])
                      Tpat_construct "::"
                      [
                        pattern (lib/misc.ml[23,1093+4]..lib/misc.ml[23,1093+5])
                          Tpat_var "x/1138"
                        pattern (lib/misc.ml[23,1093+9]..lib/misc.ml[23,1093+11])
                          Tpat_var "xs/1139"
                      ]
                      None
                    expression (lib/misc.ml[24,1108+6]..lib/misc.ml[25,1134+27])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/misc.ml[24,1108+10]..lib/misc.ml[24,1108+16])
                            Tpat_tuple
                            [
                              pattern (lib/misc.ml[24,1108+10]..lib/misc.ml[24,1108+12])
                                Tpat_var "y1/1140"
                              pattern (lib/misc.ml[24,1108+14]..lib/misc.ml[24,1108+16])
                                Tpat_var "y2/1141"
                            ]
                          expression (lib/misc.ml[24,1108+19]..lib/misc.ml[24,1108+22])
                            Texp_apply
                            expression (lib/misc.ml[24,1108+19]..lib/misc.ml[24,1108+20])
                              Texp_ident "f/1137"
                            [
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[24,1108+21]..lib/misc.ml[24,1108+22])
                                  Texp_ident "x/1138"
                            ]
                      ]
                      expression (lib/misc.ml[25,1134+6]..lib/misc.ml[25,1134+27])
                        Texp_construct "::"
                        [
                          expression (lib/misc.ml[25,1134+6]..lib/misc.ml[25,1134+8])
                            Texp_ident "y1/1140"
                          expression (lib/misc.ml[25,1134+12]..lib/misc.ml[25,1134+27])
                            Texp_construct "::"
                            [
                              expression (lib/misc.ml[25,1134+12]..lib/misc.ml[25,1134+14])
                                Texp_ident "y2/1141"
                              expression (lib/misc.ml[25,1134+18]..lib/misc.ml[25,1134+27])
                                Texp_apply
                                expression (lib/misc.ml[25,1134+18]..lib/misc.ml[25,1134+22])
                                  Texp_ident "mapd/1136"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/misc.ml[25,1134+23]..lib/misc.ml[25,1134+24])
                                      Texp_ident "f/1137"
                                  <arg>
                                    Nolabel
                                    expression (lib/misc.ml[25,1134+25]..lib/misc.ml[25,1134+27])
                                      Texp_ident "xs/1139"
                                ]
                            ]
                        ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[27,1163+0]..lib/misc.ml[29,1210+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[27,1163+4]..lib/misc.ml[27,1163+12])
          Tpat_var "tabulate/1143"
        expression (lib/misc.ml[27,1163+13]..lib/misc.ml[29,1210+13]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[27,1163+13]..lib/misc.ml[27,1163+14])
                Tpat_var "n/1145"
              expression (lib/misc.ml[27,1163+15]..lib/misc.ml[29,1210+13]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[27,1163+15]..lib/misc.ml[27,1163+16])
                      Tpat_var "f/1146"
                    expression (lib/misc.ml[28,1182+2]..lib/misc.ml[29,1210+13])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/misc.ml[28,1182+6]..lib/misc.ml[28,1182+7])
                            Tpat_var "a/1147"
                          expression (lib/misc.ml[28,1182+10]..lib/misc.ml[28,1182+24])
                            Texp_apply
                            expression (lib/misc.ml[28,1182+10]..lib/misc.ml[28,1182+20])
                              Texp_ident "Stdlib!.Array.init"
                            [
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[28,1182+21]..lib/misc.ml[28,1182+22])
                                  Texp_ident "n/1145"
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[28,1182+23]..lib/misc.ml[28,1182+24])
                                  Texp_ident "f/1146"
                            ]
                      ]
                      expression (lib/misc.ml[29,1210+2]..lib/misc.ml[29,1210+13])
                        Texp_apply
                        expression (lib/misc.ml[29,1210+2]..lib/misc.ml[29,1210+11])
                          Texp_ident "Stdlib!.Array.get"
                        [
                          <arg>
                            Nolabel
                            expression (lib/misc.ml[29,1210+12]..lib/misc.ml[29,1210+13])
                              Texp_ident "a/1147"
                        ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[31,1225+0]..lib/misc.ml[36,1335+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[31,1225+4]..lib/misc.ml[31,1225+7])
          Tpat_var "sum/1196"
        expression (lib/misc.ml[31,1225+8]..lib/misc.ml[36,1335+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[31,1225+8]..lib/misc.ml[31,1225+9])
                Tpat_var "n/1198"
              expression (lib/misc.ml[31,1225+10]..lib/misc.ml[36,1335+6]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[31,1225+11]..lib/misc.ml[31,1225+12])
                      extra
                        Tpat_extra_constraint
                        core_type (lib/misc.ml[31,1225+15]..lib/misc.ml[31,1225+25])
                          Ttyp_arrow
                          Nolabel
                          core_type (lib/misc.ml[31,1225+15]..lib/misc.ml[31,1225+18])
                            Ttyp_constr "int/1!"
                            []
                          core_type (lib/misc.ml[31,1225+22]..lib/misc.ml[31,1225+25])
                            Ttyp_constr "int/1!"
                            []
                      Tpat_alias "f/1199"
                      pattern (lib/misc.ml[31,1225+11]..lib/misc.ml[31,1225+12])
                        Tpat_any
                    expression (lib/misc.ml[32,1260+2]..lib/misc.ml[36,1335+6])
                      extra
                        Texp_constraint
                        core_type (lib/misc.ml[31,1225+29]..lib/misc.ml[31,1225+32])
                          Ttyp_constr "int/1!"
                          []
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/misc.ml[32,1260+6]..lib/misc.ml[32,1260+9])
                            Tpat_var "sum/1200"
                          expression (lib/misc.ml[32,1260+12]..lib/misc.ml[32,1260+17])
                            Texp_apply
                            expression (lib/misc.ml[32,1260+12]..lib/misc.ml[32,1260+15])
                              Texp_ident "Stdlib!.ref"
                            [
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[32,1260+16]..lib/misc.ml[32,1260+17])
                                  Texp_constant Const_int 0
                            ]
                      ]
                      expression (lib/misc.ml[33,1281+2]..lib/misc.ml[36,1335+6])
                        Texp_sequence
                        expression (lib/misc.ml[33,1281+2]..lib/misc.ml[35,1327+6])
                          Texp_for "x/1201" Up
                          expression (lib/misc.ml[33,1281+10]..lib/misc.ml[33,1281+11])
                            Texp_constant Const_int 0
                          expression (lib/misc.ml[33,1281+15]..lib/misc.ml[33,1281+20])
                            Texp_apply
                            expression (lib/misc.ml[33,1281+17]..lib/misc.ml[33,1281+18])
                              Texp_ident "Stdlib!.-"
                            [
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[33,1281+15]..lib/misc.ml[33,1281+16])
                                  Texp_ident "n/1198"
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[33,1281+19]..lib/misc.ml[33,1281+20])
                                  Texp_constant Const_int 1
                            ]
                          expression (lib/misc.ml[34,1305+4]..lib/misc.ml[34,1305+21])
                            Texp_apply
                            expression (lib/misc.ml[34,1305+8]..lib/misc.ml[34,1305+10])
                              Texp_ident "Stdlib!.:="
                            [
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[34,1305+4]..lib/misc.ml[34,1305+7])
                                  Texp_ident "sum/1200"
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[34,1305+11]..lib/misc.ml[34,1305+21])
                                  Texp_apply
                                  expression (lib/misc.ml[34,1305+16]..lib/misc.ml[34,1305+17])
                                    Texp_ident "Stdlib!.+"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/misc.ml[34,1305+11]..lib/misc.ml[34,1305+15])
                                        Texp_apply
                                        expression (lib/misc.ml[34,1305+11]..lib/misc.ml[34,1305+12])
                                          Texp_ident "Stdlib!.!"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/misc.ml[34,1305+12]..lib/misc.ml[34,1305+15])
                                              Texp_ident "sum/1200"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (lib/misc.ml[34,1305+18]..lib/misc.ml[34,1305+21])
                                        Texp_apply
                                        expression (lib/misc.ml[34,1305+18]..lib/misc.ml[34,1305+19])
                                          Texp_ident "f/1199"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/misc.ml[34,1305+20]..lib/misc.ml[34,1305+21])
                                              Texp_ident "x/1201"
                                        ]
                                  ]
                            ]
                        expression (lib/misc.ml[36,1335+2]..lib/misc.ml[36,1335+6])
                          Texp_apply
                          expression (lib/misc.ml[36,1335+2]..lib/misc.ml[36,1335+3])
                            Texp_ident "Stdlib!.!"
                          [
                            <arg>
                              Nolabel
                              expression (lib/misc.ml[36,1335+3]..lib/misc.ml[36,1335+6])
                                Texp_ident "sum/1200"
                          ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[38,1343+0]..lib/misc.ml[41,1401+19])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[38,1343+4]..lib/misc.ml[38,1343+15])
          Tpat_var "with_buffer/1202"
        expression (lib/misc.ml[38,1343+16]..lib/misc.ml[41,1401+19]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[38,1343+16]..lib/misc.ml[38,1343+17])
                Tpat_var "n/1204"
              expression (lib/misc.ml[38,1343+18]..lib/misc.ml[41,1401+19]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[38,1343+18]..lib/misc.ml[38,1343+19])
                      Tpat_var "f/1205"
                    expression (lib/misc.ml[39,1365+2]..lib/misc.ml[41,1401+19])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/misc.ml[39,1365+6]..lib/misc.ml[39,1365+7])
                            Tpat_var "b/1206"
                          expression (lib/misc.ml[39,1365+10]..lib/misc.ml[39,1365+25])
                            Texp_apply
                            expression (lib/misc.ml[39,1365+10]..lib/misc.ml[39,1365+23])
                              Texp_ident "Stdlib!.Buffer.create"
                            [
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[39,1365+24]..lib/misc.ml[39,1365+25])
                                  Texp_ident "n/1204"
                            ]
                      ]
                      expression (lib/misc.ml[40,1394+2]..lib/misc.ml[41,1401+19])
                        Texp_sequence
                        expression (lib/misc.ml[40,1394+2]..lib/misc.ml[40,1394+5])
                          Texp_apply
                          expression (lib/misc.ml[40,1394+2]..lib/misc.ml[40,1394+3])
                            Texp_ident "f/1205"
                          [
                            <arg>
                              Nolabel
                              expression (lib/misc.ml[40,1394+4]..lib/misc.ml[40,1394+5])
                                Texp_ident "b/1206"
                          ]
                        expression (lib/misc.ml[41,1401+2]..lib/misc.ml[41,1401+19])
                          Texp_apply
                          expression (lib/misc.ml[41,1401+2]..lib/misc.ml[41,1401+17])
                            Texp_ident "Stdlib!.Buffer.contents"
                          [
                            <arg>
                              Nolabel
                              expression (lib/misc.ml[41,1401+18]..lib/misc.ml[41,1401+19])
                                Texp_ident "b/1206"
                          ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[43,1422+0]..lib/misc.ml[43,1422+35])
    Tstr_type Rec
    [
      type_declaration iter/1289 (lib/misc.ml[43,1422+0]..lib/misc.ml[43,1422+35])
        ptype_params =
          [
            core_type (lib/misc.ml[43,1422+5]..lib/misc.ml[43,1422+7])
              Ttyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/misc.ml[43,1422+15]..lib/misc.ml[43,1422+35])
              Ttyp_arrow
              Nolabel
              core_type (lib/misc.ml[43,1422+16]..lib/misc.ml[43,1422+26])
                Ttyp_arrow
                Nolabel
                core_type (lib/misc.ml[43,1422+16]..lib/misc.ml[43,1422+18])
                  Ttyp_var a
                core_type (lib/misc.ml[43,1422+22]..lib/misc.ml[43,1422+26])
                  Ttyp_constr "unit/6!"
                  []
              core_type (lib/misc.ml[43,1422+31]..lib/misc.ml[43,1422+35])
                Ttyp_constr "unit/6!"
                []
    ]
  structure_item (lib/misc.ml[45,1459+0]..lib/misc.ml[58,1800+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[45,1459+4]..lib/misc.ml[45,1459+28])
          Tpat_var "separated_iter_to_string/1290"
        expression (lib/misc.ml[45,1459+29]..lib/misc.ml[58,1800+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[45,1459+29]..lib/misc.ml[45,1459+36])
                Tpat_var "printer/1292"
              expression (lib/misc.ml[45,1459+37]..lib/misc.ml[58,1800+3]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[45,1459+37]..lib/misc.ml[45,1459+46])
                      Tpat_var "separator/1293"
                    expression (lib/misc.ml[45,1459+47]..lib/misc.ml[58,1800+3]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/misc.ml[45,1459+47]..lib/misc.ml[45,1459+51])
                            Tpat_var "iter/1294"
                          expression (lib/misc.ml[46,1513+2]..lib/misc.ml[58,1800+3])
                            Texp_apply
                            expression (lib/misc.ml[46,1513+2]..lib/misc.ml[46,1513+13])
                              Texp_ident "with_buffer/1202"
                            [
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[46,1513+14]..lib/misc.ml[46,1513+16])
                                  Texp_constant Const_int 32
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[46,1513+17]..lib/misc.ml[58,1800+3])
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/misc.ml[46,1513+22]..lib/misc.ml[46,1513+23])
                                        Tpat_var "b/1295"
                                      expression (lib/misc.ml[47,1540+4]..lib/misc.ml[57,1794+5])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/misc.ml[47,1540+8]..lib/misc.ml[47,1540+13])
                                              Tpat_var "first/1296"
                                            expression (lib/misc.ml[47,1540+16]..lib/misc.ml[47,1540+24])
                                              Texp_apply
                                              expression (lib/misc.ml[47,1540+16]..lib/misc.ml[47,1540+19])
                                                Texp_ident "Stdlib!.ref"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/misc.ml[47,1540+20]..lib/misc.ml[47,1540+24])
                                                    Texp_construct "true"
                                                    []
                                              ]
                                        ]
                                        expression (lib/misc.ml[48,1568+4]..lib/misc.ml[57,1794+5])
                                          Texp_apply
                                          expression (lib/misc.ml[48,1568+4]..lib/misc.ml[48,1568+8])
                                            Texp_ident "iter/1294"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/misc.ml[48,1568+9]..lib/misc.ml[57,1794+5])
                                                Texp_function
                                                Nolabel
                                                [
                                                  <case>
                                                    pattern (lib/misc.ml[48,1568+14]..lib/misc.ml[48,1568+15])
                                                      Tpat_var "x/1297"
                                                    expression (lib/misc.ml[49,1587+6]..lib/misc.ml[56,1784+9])
                                                      Texp_ifthenelse
                                                      expression (lib/misc.ml[49,1587+9]..lib/misc.ml[49,1587+15])
                                                        Texp_apply
                                                        expression (lib/misc.ml[49,1587+9]..lib/misc.ml[49,1587+10])
                                                          Texp_ident "Stdlib!.!"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/misc.ml[49,1587+10]..lib/misc.ml[49,1587+15])
                                                              Texp_ident "first/1296"
                                                        ]
                                                      expression (lib/misc.ml[49,1587+21]..lib/misc.ml[52,1678+9])
                                                        Texp_sequence
                                                        expression (lib/misc.ml[50,1614+8]..lib/misc.ml[50,1614+39])
                                                          Texp_apply
                                                          expression (lib/misc.ml[50,1614+8]..lib/misc.ml[50,1614+25])
                                                            Texp_ident "Stdlib!.Buffer.add_string"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/misc.ml[50,1614+26]..lib/misc.ml[50,1614+27])
                                                                Texp_ident "b/1295"
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/misc.ml[50,1614+28]..lib/misc.ml[50,1614+39])
                                                                Texp_apply
                                                                expression (lib/misc.ml[50,1614+29]..lib/misc.ml[50,1614+36])
                                                                  Texp_ident "printer/1292"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/misc.ml[50,1614+37]..lib/misc.ml[50,1614+38])
                                                                      Texp_ident "x/1297"
                                                                ]
                                                          ]
                                                        expression (lib/misc.ml[51,1655+8]..lib/misc.ml[51,1655+22])
                                                          Texp_apply
                                                          expression (lib/misc.ml[51,1655+14]..lib/misc.ml[51,1655+16])
                                                            Texp_ident "Stdlib!.:="
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/misc.ml[51,1655+8]..lib/misc.ml[51,1655+13])
                                                                Texp_ident "first/1296"
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/misc.ml[51,1655+17]..lib/misc.ml[51,1655+22])
                                                                Texp_construct "false"
                                                                []
                                                          ]
                                                      Some
                                                        expression (lib/misc.ml[53,1688+11]..lib/misc.ml[56,1784+9])
                                                          Texp_sequence
                                                          expression (lib/misc.ml[54,1705+8]..lib/misc.ml[54,1705+37])
                                                            Texp_apply
                                                            expression (lib/misc.ml[54,1705+8]..lib/misc.ml[54,1705+25])
                                                              Texp_ident "Stdlib!.Buffer.add_string"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/misc.ml[54,1705+26]..lib/misc.ml[54,1705+27])
                                                                  Texp_ident "b/1295"
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/misc.ml[54,1705+28]..lib/misc.ml[54,1705+37])
                                                                  Texp_ident "separator/1293"
                                                            ]
                                                          expression (lib/misc.ml[55,1744+8]..lib/misc.ml[55,1744+39])
                                                            Texp_apply
                                                            expression (lib/misc.ml[55,1744+8]..lib/misc.ml[55,1744+25])
                                                              Texp_ident "Stdlib!.Buffer.add_string"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/misc.ml[55,1744+26]..lib/misc.ml[55,1744+27])
                                                                  Texp_ident "b/1295"
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/misc.ml[55,1744+28]..lib/misc.ml[55,1744+39])
                                                                  Texp_apply
                                                                  expression (lib/misc.ml[55,1744+29]..lib/misc.ml[55,1744+36])
                                                                    Texp_ident "printer/1292"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/misc.ml[55,1744+37]..lib/misc.ml[55,1744+38])
                                                                        Texp_ident "x/1297"
                                                                  ]
                                                            ]
                                                ]
                                          ]
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[60,1805+0]..lib/misc.ml[61,1857+70])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[60,1805+4]..lib/misc.ml[60,1805+28])
          Tpat_var "separated_list_to_string/1298"
        expression (lib/misc.ml[60,1805+29]..lib/misc.ml[61,1857+70]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[60,1805+29]..lib/misc.ml[60,1805+36])
                Tpat_var "printer/1300"
              expression (lib/misc.ml[60,1805+37]..lib/misc.ml[61,1857+70]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[60,1805+37]..lib/misc.ml[60,1805+46])
                      Tpat_var "separator/1301"
                    expression (lib/misc.ml[60,1805+47]..lib/misc.ml[61,1857+70]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/misc.ml[60,1805+47]..lib/misc.ml[60,1805+49])
                            Tpat_var "xs/1302"
                          expression (lib/misc.ml[61,1857+2]..lib/misc.ml[61,1857+70])
                            Texp_apply
                            expression (lib/misc.ml[61,1857+2]..lib/misc.ml[61,1857+26])
                              Texp_ident "separated_iter_to_string/1290"
                            [
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[61,1857+27]..lib/misc.ml[61,1857+34])
                                  Texp_ident "printer/1300"
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[61,1857+35]..lib/misc.ml[61,1857+44])
                                  Texp_ident "separator/1301"
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[61,1857+45]..lib/misc.ml[61,1857+70])
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/misc.ml[61,1857+50]..lib/misc.ml[61,1857+51])
                                        Tpat_var "f/1303"
                                      expression (lib/misc.ml[61,1857+55]..lib/misc.ml[61,1857+69])
                                        Texp_apply
                                        expression (lib/misc.ml[61,1857+55]..lib/misc.ml[61,1857+64])
                                          Texp_ident "Stdlib!.List.iter"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/misc.ml[61,1857+65]..lib/misc.ml[61,1857+66])
                                              Texp_ident "f/1303"
                                          <arg>
                                            Nolabel
                                            expression (lib/misc.ml[61,1857+67]..lib/misc.ml[61,1857+69])
                                              Texp_ident "xs/1302"
                                        ]
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[63,1929+0]..lib/misc.ml[73,2201+18])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[63,1929+4]..lib/misc.ml[63,1929+11])
          Tpat_var "inverse/1370"
        expression (lib/misc.ml[63,1929+12]..lib/misc.ml[73,2201+18]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[63,1929+13]..lib/misc.ml[63,1929+14])
                extra
                  Tpat_extra_constraint
                  core_type (lib/misc.ml[63,1929+17]..lib/misc.ml[63,1929+25])
                    Ttyp_constr "array/8!"
                    [
                      core_type (lib/misc.ml[63,1929+17]..lib/misc.ml[63,1929+19])
                        Ttyp_var a
                    ]
                Tpat_alias "a/1372"
                pattern (lib/misc.ml[63,1929+13]..lib/misc.ml[63,1929+14])
                  Tpat_any
              expression (lib/misc.ml[64,1970+2]..lib/misc.ml[73,2201+18])
                extra
                  Texp_constraint
                  core_type (lib/misc.ml[63,1929+29]..lib/misc.ml[63,1929+38])
                    Ttyp_arrow
                    Nolabel
                    core_type (lib/misc.ml[63,1929+29]..lib/misc.ml[63,1929+31])
                      Ttyp_var a
                    core_type (lib/misc.ml[63,1929+35]..lib/misc.ml[63,1929+38])
                      Ttyp_constr "int/1!"
                      []
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/misc.ml[64,1970+6]..lib/misc.ml[64,1970+11])
                      Tpat_var "table/1373"
                    expression (lib/misc.ml[64,1970+14]..lib/misc.ml[64,1970+45])
                      Texp_apply
                      expression (lib/misc.ml[64,1970+14]..lib/misc.ml[64,1970+28])
                        Texp_ident "Stdlib!.Hashtbl.create"
                      [
                        <arg>
                          Optional "random"
                          expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                            Texp_construct "None"
                            []
                        <arg>
                          Nolabel
                          expression (lib/misc.ml[64,1970+29]..lib/misc.ml[64,1970+45])
                            Texp_apply
                            expression (lib/misc.ml[64,1970+30]..lib/misc.ml[64,1970+42])
                              Texp_ident "Stdlib!.Array.length"
                            [
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[64,1970+43]..lib/misc.ml[64,1970+44])
                                  Texp_ident "a/1372"
                            ]
                      ]
                ]
                expression (lib/misc.ml[65,2019+2]..lib/misc.ml[73,2201+18])
                  Texp_sequence
                  expression (lib/misc.ml[65,2019+2]..lib/misc.ml[68,2120+5])
                    Texp_apply
                    expression (lib/misc.ml[65,2019+2]..lib/misc.ml[65,2019+13])
                      Texp_ident "Stdlib!.Array.iteri"
                    [
                      <arg>
                        Nolabel
                        expression (lib/misc.ml[65,2019+14]..lib/misc.ml[68,2120+3])
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (lib/misc.ml[65,2019+19]..lib/misc.ml[65,2019+20])
                                Tpat_var "i/1454"
                              expression (lib/misc.ml[65,2019+21]..lib/misc.ml[67,2091+28]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/misc.ml[65,2019+21]..lib/misc.ml[65,2019+25])
                                      Tpat_var "data/1455"
                                    expression (lib/misc.ml[66,2048+4]..lib/misc.ml[67,2091+28])
                                      Texp_sequence
                                      expression (lib/misc.ml[66,2048+4]..lib/misc.ml[66,2048+41])
                                        Texp_assert                                        expression (lib/misc.ml[66,2048+11]..lib/misc.ml[66,2048+41])
                                          Texp_apply
                                          expression (lib/misc.ml[66,2048+12]..lib/misc.ml[66,2048+15])
                                            Texp_ident "Stdlib!.not"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/misc.ml[66,2048+16]..lib/misc.ml[66,2048+40])
                                                Texp_apply
                                                expression (lib/misc.ml[66,2048+17]..lib/misc.ml[66,2048+28])
                                                  Texp_ident "Stdlib!.Hashtbl.mem"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/misc.ml[66,2048+29]..lib/misc.ml[66,2048+34])
                                                      Texp_ident "table/1373"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/misc.ml[66,2048+35]..lib/misc.ml[66,2048+39])
                                                      Texp_ident "data/1455"
                                                ]
                                          ]
                                      expression (lib/misc.ml[67,2091+4]..lib/misc.ml[67,2091+28])
                                        Texp_apply
                                        expression (lib/misc.ml[67,2091+4]..lib/misc.ml[67,2091+15])
                                          Texp_ident "Stdlib!.Hashtbl.add"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/misc.ml[67,2091+16]..lib/misc.ml[67,2091+21])
                                              Texp_ident "table/1373"
                                          <arg>
                                            Nolabel
                                            expression (lib/misc.ml[67,2091+22]..lib/misc.ml[67,2091+26])
                                              Texp_ident "data/1455"
                                          <arg>
                                            Nolabel
                                            expression (lib/misc.ml[67,2091+27]..lib/misc.ml[67,2091+28])
                                              Texp_ident "i/1454"
                                        ]
                                ]
                          ]
                      <arg>
                        Nolabel
                        expression (lib/misc.ml[68,2120+4]..lib/misc.ml[68,2120+5])
                          Texp_ident "a/1372"
                    ]
                  expression (lib/misc.ml[69,2127+2]..lib/misc.ml[73,2201+18])
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (lib/misc.ml[69,2127+6]..lib/misc.ml[69,2127+10])
                          Tpat_var "data/1456"
                        expression (lib/misc.ml[70,2141+4]..lib/misc.ml[73,2201+18])
                          Texp_try
                          expression (lib/misc.ml[71,2149+6]..lib/misc.ml[71,2149+29])
                            Texp_apply
                            expression (lib/misc.ml[71,2149+6]..lib/misc.ml[71,2149+18])
                              Texp_ident "Stdlib!.Hashtbl.find"
                            [
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[71,2149+19]..lib/misc.ml[71,2149+24])
                                  Texp_ident "table/1373"
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[71,2149+25]..lib/misc.ml[71,2149+29])
                                  Texp_ident "data/1456"
                            ]
                          [
                            <case>
                              pattern (lib/misc.ml[72,2179+9]..lib/misc.ml[72,2179+18])
                                Tpat_construct "Not_found"
                                []
                                None
                              expression (lib/misc.ml[73,2201+6]..lib/misc.ml[73,2201+18])
                                Texp_assert                                expression (lib/misc.ml[73,2201+13]..lib/misc.ml[73,2201+18])
                                  Texp_construct "false"
                                  []
                          ]
                    ]
          ]
    ]
  structure_item (lib/misc.ml[75,2221+0]..lib/misc.ml[78,2270+21])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[75,2221+4]..lib/misc.ml[75,2221+17])
          Tpat_var "support_assoc/1457"
        expression (lib/misc.ml[75,2221+18]..lib/misc.ml[78,2270+21]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[75,2221+18]..lib/misc.ml[75,2221+19])
                Tpat_var "l/1459"
              expression (lib/misc.ml[75,2221+20]..lib/misc.ml[78,2270+21]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[75,2221+20]..lib/misc.ml[75,2221+21])
                      Tpat_var "x/1460"
                    expression (lib/misc.ml[76,2245+2]..lib/misc.ml[78,2270+21])
                      Texp_try
                      expression (lib/misc.ml[77,2251+4]..lib/misc.ml[77,2251+18])
                        Texp_apply
                        expression (lib/misc.ml[77,2251+4]..lib/misc.ml[77,2251+14])
                          Texp_ident "Stdlib!.List.assoc"
                        [
                          <arg>
                            Nolabel
                            expression (lib/misc.ml[77,2251+15]..lib/misc.ml[77,2251+16])
                              Texp_ident "x/1460"
                          <arg>
                            Nolabel
                            expression (lib/misc.ml[77,2251+17]..lib/misc.ml[77,2251+18])
                              Texp_ident "l/1459"
                        ]
                      [
                        <case>
                          pattern (lib/misc.ml[78,2270+7]..lib/misc.ml[78,2270+16])
                            Tpat_construct "Not_found"
                            []
                            None
                          expression (lib/misc.ml[78,2270+20]..lib/misc.ml[78,2270+21])
                            Texp_ident "x/1460"
                      ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[84,2467+0]..lib/misc.ml[92,2661+8])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[84,2467+4]..lib/misc.ml[84,2467+15])
          Tpat_var "materialize/1461"
        expression (lib/misc.ml[84,2467+16]..lib/misc.ml[92,2661+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[84,2467+17]..lib/misc.ml[84,2467+22])
                extra
                  Tpat_extra_constraint
                  core_type (lib/misc.ml[84,2467+25]..lib/misc.ml[84,2467+50])
                    Ttyp_constr "Stdlib!.Hashtbl.t"
                    [
                      core_type (lib/misc.ml[84,2467+26]..lib/misc.ml[84,2467+28])
                        Ttyp_var a
                      core_type (lib/misc.ml[84,2467+30]..lib/misc.ml[84,2467+39])
                        Ttyp_constr "option/10!"
                        [
                          core_type (lib/misc.ml[84,2467+30]..lib/misc.ml[84,2467+32])
                            Ttyp_var a
                        ]
                    ]
                Tpat_alias "table/1463"
                pattern (lib/misc.ml[84,2467+17]..lib/misc.ml[84,2467+22])
                  Tpat_any
              expression (lib/misc.ml[84,2467+52]..lib/misc.ml[92,2661+8]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[84,2467+53]..lib/misc.ml[84,2467+54])
                      extra
                        Tpat_extra_constraint
                        core_type (lib/misc.ml[84,2467+57]..lib/misc.ml[84,2467+59])
                          Ttyp_var a
                      Tpat_alias "x/1464"
                      pattern (lib/misc.ml[84,2467+53]..lib/misc.ml[84,2467+54])
                        Tpat_any
                    expression (lib/misc.ml[85,2540+2]..lib/misc.ml[92,2661+8])
                      extra
                        Texp_constraint
                        core_type (lib/misc.ml[84,2467+63]..lib/misc.ml[84,2467+70])
                          Ttyp_constr "list/9!"
                          [
                            core_type (lib/misc.ml[84,2467+63]..lib/misc.ml[84,2467+65])
                              Ttyp_var a
                          ]
                      Texp_let Rec
                      [
                        <def>
                          pattern (lib/misc.ml[85,2540+10]..lib/misc.ml[85,2540+14])
                            Tpat_var "loop/1465"
                          expression (lib/misc.ml[85,2540+15]..lib/misc.ml[90,2636+19]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (lib/misc.ml[85,2540+15]..lib/misc.ml[85,2540+16])
                                  Tpat_var "x/1466"
                                expression (lib/misc.ml[86,2559+4]..lib/misc.ml[90,2636+19])
                                  Texp_match
                                  expression (lib/misc.ml[86,2559+10]..lib/misc.ml[86,2559+30])
                                    Texp_apply
                                    expression (lib/misc.ml[86,2559+10]..lib/misc.ml[86,2559+22])
                                      Texp_ident "Stdlib!.Hashtbl.find"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[86,2559+23]..lib/misc.ml[86,2559+28])
                                          Texp_ident "table/1463"
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[86,2559+29]..lib/misc.ml[86,2559+30])
                                          Texp_ident "x/1466"
                                    ]
                                  [
                                    <case>
                                      pattern (lib/misc.ml[87,2595+6]..lib/misc.ml[87,2595+10])
                                        Tpat_value
                                        pattern (lib/misc.ml[87,2595+6]..lib/misc.ml[87,2595+10])
                                          Tpat_construct "None"
                                          []
                                          None
                                      expression (lib/misc.ml[88,2609+8]..lib/misc.ml[88,2609+10])
                                        Texp_construct "[]"
                                        []
                                    <case>
                                      pattern (lib/misc.ml[89,2620+6]..lib/misc.ml[89,2620+12])
                                        Tpat_value
                                        pattern (lib/misc.ml[89,2620+6]..lib/misc.ml[89,2620+12])
                                          Tpat_construct "Some"
                                          [
                                            pattern (lib/misc.ml[89,2620+11]..lib/misc.ml[89,2620+12])
                                              Tpat_var "x/1467"
                                          ]
                                          None
                                      expression (lib/misc.ml[90,2636+8]..lib/misc.ml[90,2636+19])
                                        Texp_construct "::"
                                        [
                                          expression (lib/misc.ml[90,2636+8]..lib/misc.ml[90,2636+9])
                                            Texp_ident "x/1467"
                                          expression (lib/misc.ml[90,2636+13]..lib/misc.ml[90,2636+19])
                                            Texp_apply
                                            expression (lib/misc.ml[90,2636+13]..lib/misc.ml[90,2636+17])
                                              Texp_ident "loop/1465"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/misc.ml[90,2636+18]..lib/misc.ml[90,2636+19])
                                                  Texp_ident "x/1467"
                                            ]
                                        ]
                                  ]
                            ]
                      ]
                      expression (lib/misc.ml[92,2661+2]..lib/misc.ml[92,2661+8])
                        Texp_apply
                        expression (lib/misc.ml[92,2661+2]..lib/misc.ml[92,2661+6])
                          Texp_ident "loop/1465"
                        [
                          <arg>
                            Nolabel
                            expression (lib/misc.ml[92,2661+7]..lib/misc.ml[92,2661+8])
                              Texp_ident "x/1464"
                        ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[97,2745+0]..lib/misc.ml[100,2796+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[97,2745+4]..lib/misc.ml[97,2745+10])
          Tpat_var "iterij/1468"
        expression (lib/misc.ml[97,2745+11]..lib/misc.ml[100,2796+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[97,2745+11]..lib/misc.ml[97,2745+12])
                Tpat_var "i/1470"
              expression (lib/misc.ml[97,2745+13]..lib/misc.ml[100,2796+6]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[97,2745+13]..lib/misc.ml[97,2745+14])
                      Tpat_var "j/1471"
                    expression (lib/misc.ml[97,2745+15]..lib/misc.ml[100,2796+6]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/misc.ml[97,2745+15]..lib/misc.ml[97,2745+16])
                            Tpat_var "f/1472"
                          expression (lib/misc.ml[98,2764+2]..lib/misc.ml[100,2796+6])
                            Texp_for "x/1473" Up
                            expression (lib/misc.ml[98,2764+10]..lib/misc.ml[98,2764+11])
                              Texp_ident "i/1470"
                            expression (lib/misc.ml[98,2764+15]..lib/misc.ml[98,2764+20])
                              Texp_apply
                              expression (lib/misc.ml[98,2764+17]..lib/misc.ml[98,2764+18])
                                Texp_ident "Stdlib!.-"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/misc.ml[98,2764+15]..lib/misc.ml[98,2764+16])
                                    Texp_ident "j/1471"
                                <arg>
                                  Nolabel
                                  expression (lib/misc.ml[98,2764+19]..lib/misc.ml[98,2764+20])
                                    Texp_constant Const_int 1
                              ]
                            expression (lib/misc.ml[99,2788+4]..lib/misc.ml[99,2788+7])
                              Texp_apply
                              expression (lib/misc.ml[99,2788+4]..lib/misc.ml[99,2788+5])
                                Texp_ident "f/1472"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/misc.ml[99,2788+6]..lib/misc.ml[99,2788+7])
                                    Texp_ident "x/1473"
                              ]
                      ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[102,2804+0]..lib/misc.ml[103,2820+14])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[102,2804+4]..lib/misc.ml[102,2804+9])
          Tpat_var "iteri/1474"
        expression (lib/misc.ml[102,2804+10]..lib/misc.ml[103,2820+14]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[102,2804+10]..lib/misc.ml[102,2804+11])
                Tpat_var "n/1476"
              expression (lib/misc.ml[102,2804+12]..lib/misc.ml[103,2820+14]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[102,2804+12]..lib/misc.ml[102,2804+13])
                      Tpat_var "f/1477"
                    expression (lib/misc.ml[103,2820+2]..lib/misc.ml[103,2820+14])
                      Texp_apply
                      expression (lib/misc.ml[103,2820+2]..lib/misc.ml[103,2820+8])
                        Texp_ident "iterij/1468"
                      [
                        <arg>
                          Nolabel
                          expression (lib/misc.ml[103,2820+9]..lib/misc.ml[103,2820+10])
                            Texp_constant Const_int 0
                        <arg>
                          Nolabel
                          expression (lib/misc.ml[103,2820+11]..lib/misc.ml[103,2820+12])
                            Texp_ident "n/1476"
                        <arg>
                          Nolabel
                          expression (lib/misc.ml[103,2820+13]..lib/misc.ml[103,2820+14])
                            Texp_ident "f/1477"
                      ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[105,2836+0]..lib/misc.ml[109,2921+8])
    Tstr_value Rec
    [
      <def>
        pattern (lib/misc.ml[105,2836+8]..lib/misc.ml[105,2836+14])
          Tpat_var "foldij/1478"
        expression (lib/misc.ml[105,2836+15]..lib/misc.ml[109,2921+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[105,2836+15]..lib/misc.ml[105,2836+16])
                Tpat_var "i/1479"
              expression (lib/misc.ml[105,2836+17]..lib/misc.ml[109,2921+8]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[105,2836+17]..lib/misc.ml[105,2836+18])
                      Tpat_var "j/1480"
                    expression (lib/misc.ml[105,2836+19]..lib/misc.ml[109,2921+8]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/misc.ml[105,2836+19]..lib/misc.ml[105,2836+20])
                            Tpat_var "f/1481"
                          expression (lib/misc.ml[105,2836+21]..lib/misc.ml[109,2921+8]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (lib/misc.ml[105,2836+21]..lib/misc.ml[105,2836+25])
                                  Tpat_var "accu/1482"
                                expression (lib/misc.ml[106,2864+2]..lib/misc.ml[109,2921+8])
                                  Texp_ifthenelse
                                  expression (lib/misc.ml[106,2864+5]..lib/misc.ml[106,2864+10])
                                    Texp_apply
                                    expression (lib/misc.ml[106,2864+7]..lib/misc.ml[106,2864+8])
                                      Texp_ident "Stdlib!.<"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[106,2864+5]..lib/misc.ml[106,2864+6])
                                          Texp_ident "i/1479"
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[106,2864+9]..lib/misc.ml[106,2864+10])
                                          Texp_ident "j/1480"
                                    ]
                                  expression (lib/misc.ml[107,2880+4]..lib/misc.ml[107,2880+33])
                                    Texp_apply
                                    expression (lib/misc.ml[107,2880+4]..lib/misc.ml[107,2880+10])
                                      Texp_ident "foldij/1478"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[107,2880+11]..lib/misc.ml[107,2880+18])
                                          Texp_apply
                                          expression (lib/misc.ml[107,2880+14]..lib/misc.ml[107,2880+15])
                                            Texp_ident "Stdlib!.+"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/misc.ml[107,2880+12]..lib/misc.ml[107,2880+13])
                                                Texp_ident "i/1479"
                                            <arg>
                                              Nolabel
                                              expression (lib/misc.ml[107,2880+16]..lib/misc.ml[107,2880+17])
                                                Texp_constant Const_int 1
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[107,2880+19]..lib/misc.ml[107,2880+20])
                                          Texp_ident "j/1480"
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[107,2880+21]..lib/misc.ml[107,2880+22])
                                          Texp_ident "f/1481"
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[107,2880+23]..lib/misc.ml[107,2880+33])
                                          Texp_apply
                                          expression (lib/misc.ml[107,2880+24]..lib/misc.ml[107,2880+25])
                                            Texp_ident "f/1481"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/misc.ml[107,2880+26]..lib/misc.ml[107,2880+27])
                                                Texp_ident "i/1479"
                                            <arg>
                                              Nolabel
                                              expression (lib/misc.ml[107,2880+28]..lib/misc.ml[107,2880+32])
                                                Texp_ident "accu/1482"
                                          ]
                                    ]
                                  Some
                                    expression (lib/misc.ml[109,2921+4]..lib/misc.ml[109,2921+8])
                                      Texp_ident "accu/1482"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[111,2931+0]..lib/misc.ml[112,2952+19])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[111,2931+4]..lib/misc.ml[111,2931+9])
          Tpat_var "foldi/1483"
        expression (lib/misc.ml[111,2931+10]..lib/misc.ml[112,2952+19]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[111,2931+10]..lib/misc.ml[111,2931+11])
                Tpat_var "n/1485"
              expression (lib/misc.ml[111,2931+12]..lib/misc.ml[112,2952+19]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[111,2931+12]..lib/misc.ml[111,2931+13])
                      Tpat_var "f/1486"
                    expression (lib/misc.ml[111,2931+14]..lib/misc.ml[112,2952+19]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/misc.ml[111,2931+14]..lib/misc.ml[111,2931+18])
                            Tpat_var "accu/1487"
                          expression (lib/misc.ml[112,2952+2]..lib/misc.ml[112,2952+19])
                            Texp_apply
                            expression (lib/misc.ml[112,2952+2]..lib/misc.ml[112,2952+8])
                              Texp_ident "foldij/1478"
                            [
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[112,2952+9]..lib/misc.ml[112,2952+10])
                                  Texp_constant Const_int 0
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[112,2952+11]..lib/misc.ml[112,2952+12])
                                  Texp_ident "n/1485"
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[112,2952+13]..lib/misc.ml[112,2952+14])
                                  Texp_ident "f/1486"
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[112,2952+15]..lib/misc.ml[112,2952+19])
                                  Texp_ident "accu/1487"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[114,2973+0]..lib/misc.ml[118,3078+8])
    Tstr_value Rec
    [
      <def>
        pattern (lib/misc.ml[114,2973+8]..lib/misc.ml[114,2973+19])
          Tpat_var "foldij_lazy/1488"
        expression (lib/misc.ml[114,2973+20]..lib/misc.ml[118,3078+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[114,2973+20]..lib/misc.ml[114,2973+21])
                Tpat_var "i/1489"
              expression (lib/misc.ml[114,2973+22]..lib/misc.ml[118,3078+8]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[114,2973+22]..lib/misc.ml[114,2973+23])
                      Tpat_var "j/1490"
                    expression (lib/misc.ml[114,2973+24]..lib/misc.ml[118,3078+8]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/misc.ml[114,2973+24]..lib/misc.ml[114,2973+25])
                            Tpat_var "f/1491"
                          expression (lib/misc.ml[114,2973+26]..lib/misc.ml[118,3078+8]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (lib/misc.ml[114,2973+26]..lib/misc.ml[114,2973+30])
                                  Tpat_var "accu/1492"
                                expression (lib/misc.ml[115,3006+2]..lib/misc.ml[118,3078+8])
                                  Texp_ifthenelse
                                  expression (lib/misc.ml[115,3006+5]..lib/misc.ml[115,3006+10])
                                    Texp_apply
                                    expression (lib/misc.ml[115,3006+7]..lib/misc.ml[115,3006+8])
                                      Texp_ident "Stdlib!.<"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[115,3006+5]..lib/misc.ml[115,3006+6])
                                          Texp_ident "i/1489"
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[115,3006+9]..lib/misc.ml[115,3006+10])
                                          Texp_ident "j/1490"
                                    ]
                                  expression (lib/misc.ml[116,3022+4]..lib/misc.ml[116,3022+48])
                                    Texp_apply
                                    expression (lib/misc.ml[116,3022+4]..lib/misc.ml[116,3022+5])
                                      Texp_ident "f/1491"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[116,3022+6]..lib/misc.ml[116,3022+7])
                                          Texp_ident "i/1489"
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[116,3022+8]..lib/misc.ml[116,3022+48])
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (lib/misc.ml[116,3022+13]..lib/misc.ml[116,3022+15])
                                                Tpat_construct "()"
                                                []
                                                None
                                              expression (lib/misc.ml[116,3022+19]..lib/misc.ml[116,3022+47])
                                                Texp_apply
                                                expression (lib/misc.ml[116,3022+19]..lib/misc.ml[116,3022+30])
                                                  Texp_ident "foldij_lazy/1488"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/misc.ml[116,3022+31]..lib/misc.ml[116,3022+38])
                                                      Texp_apply
                                                      expression (lib/misc.ml[116,3022+34]..lib/misc.ml[116,3022+35])
                                                        Texp_ident "Stdlib!.+"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/misc.ml[116,3022+32]..lib/misc.ml[116,3022+33])
                                                            Texp_ident "i/1489"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/misc.ml[116,3022+36]..lib/misc.ml[116,3022+37])
                                                            Texp_constant Const_int 1
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/misc.ml[116,3022+39]..lib/misc.ml[116,3022+40])
                                                      Texp_ident "j/1490"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/misc.ml[116,3022+41]..lib/misc.ml[116,3022+42])
                                                      Texp_ident "f/1491"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/misc.ml[116,3022+43]..lib/misc.ml[116,3022+47])
                                                      Texp_ident "accu/1492"
                                                ]
                                          ]
                                    ]
                                  Some
                                    expression (lib/misc.ml[118,3078+4]..lib/misc.ml[118,3078+8])
                                      Texp_ident "accu/1492"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[122,3157+0]..lib/misc.ml[127,3253+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[122,3157+4]..lib/misc.ml[122,3157+9])
          Tpat_var "mapij/1494"
        expression (lib/misc.ml[122,3157+10]..lib/misc.ml[127,3253+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[122,3157+10]..lib/misc.ml[122,3157+15])
                Tpat_var "start/1496"
              expression (lib/misc.ml[122,3157+16]..lib/misc.ml[127,3253+3]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[122,3157+16]..lib/misc.ml[122,3157+17])
                      Tpat_var "n/1497"
                    expression (lib/misc.ml[122,3157+18]..lib/misc.ml[127,3253+3]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/misc.ml[122,3157+18]..lib/misc.ml[122,3157+19])
                            Tpat_var "f/1498"
                          expression (lib/misc.ml[123,3179+2]..lib/misc.ml[127,3253+3])
                            Texp_apply
                            expression (lib/misc.ml[123,3179+2]..lib/misc.ml[123,3179+10])
                              Texp_ident "Stdlib!.List.rev"
                            [
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[123,3179+11]..lib/misc.ml[127,3253+3])
                                  Texp_apply
                                  expression (lib/misc.ml[124,3192+4]..lib/misc.ml[124,3192+10])
                                    Texp_ident "foldij/1478"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/misc.ml[124,3192+11]..lib/misc.ml[124,3192+16])
                                        Texp_ident "start/1496"
                                    <arg>
                                      Nolabel
                                      expression (lib/misc.ml[124,3192+17]..lib/misc.ml[124,3192+18])
                                        Texp_ident "n/1497"
                                    <arg>
                                      Nolabel
                                      expression (lib/misc.ml[124,3192+19]..lib/misc.ml[126,3244+5])
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/misc.ml[124,3192+24]..lib/misc.ml[124,3192+25])
                                              Tpat_var "i/1499"
                                            expression (lib/misc.ml[124,3192+26]..lib/misc.ml[125,3226+17]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/misc.ml[124,3192+26]..lib/misc.ml[124,3192+30])
                                                    Tpat_var "accu/1500"
                                                  expression (lib/misc.ml[125,3226+6]..lib/misc.ml[125,3226+17])
                                                    Texp_construct "::"
                                                    [
                                                      expression (lib/misc.ml[125,3226+6]..lib/misc.ml[125,3226+9])
                                                        Texp_apply
                                                        expression (lib/misc.ml[125,3226+6]..lib/misc.ml[125,3226+7])
                                                          Texp_ident "f/1498"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/misc.ml[125,3226+8]..lib/misc.ml[125,3226+9])
                                                              Texp_ident "i/1499"
                                                        ]
                                                      expression (lib/misc.ml[125,3226+13]..lib/misc.ml[125,3226+17])
                                                        Texp_ident "accu/1500"
                                                    ]
                                              ]
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (lib/misc.ml[126,3244+6]..lib/misc.ml[126,3244+8])
                                        Texp_construct "[]"
                                        []
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[131,3316+0]..lib/misc.ml[132,3331+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[131,3316+4]..lib/misc.ml[131,3316+8])
          Tpat_var "mapi/1501"
        expression (lib/misc.ml[131,3316+9]..lib/misc.ml[132,3331+13]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[131,3316+9]..lib/misc.ml[131,3316+10])
                Tpat_var "n/1503"
              expression (lib/misc.ml[131,3316+11]..lib/misc.ml[132,3331+13]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[131,3316+11]..lib/misc.ml[131,3316+12])
                      Tpat_var "f/1504"
                    expression (lib/misc.ml[132,3331+2]..lib/misc.ml[132,3331+13])
                      Texp_apply
                      expression (lib/misc.ml[132,3331+2]..lib/misc.ml[132,3331+7])
                        Texp_ident "mapij/1494"
                      [
                        <arg>
                          Nolabel
                          expression (lib/misc.ml[132,3331+8]..lib/misc.ml[132,3331+9])
                            Texp_constant Const_int 0
                        <arg>
                          Nolabel
                          expression (lib/misc.ml[132,3331+10]..lib/misc.ml[132,3331+11])
                            Texp_ident "n/1503"
                        <arg>
                          Nolabel
                          expression (lib/misc.ml[132,3331+12]..lib/misc.ml[132,3331+13])
                            Texp_ident "f/1504"
                      ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[140,3623+0]..lib/misc.ml[150,3785+10])
    Tstr_value Rec
    [
      <def>
        pattern (lib/misc.ml[140,3623+8]..lib/misc.ml[140,3623+13])
          Tpat_var "qfold/1505"
        expression (lib/misc.ml[140,3623+14]..lib/misc.ml[150,3785+10]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[140,3623+14]..lib/misc.ml[140,3623+15])
                Tpat_var "f/1506"
              expression (lib/misc.ml[140,3623+16]..lib/misc.ml[150,3785+10]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[140,3623+16]..lib/misc.ml[140,3623+20])
                      Tpat_var "accu/1507"
                    expression (lib/misc.ml[140,3623+21]..lib/misc.ml[150,3785+10]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/misc.ml[140,3623+21]..lib/misc.ml[140,3623+22])
                            Tpat_var "q/1508"
                          expression (lib/misc.ml[141,3648+2]..lib/misc.ml[150,3785+10])
                            Texp_match
                            expression (lib/misc.ml[142,3656+4]..lib/misc.ml[145,3714+10])
                              Texp_try
                              expression (lib/misc.ml[143,3664+6]..lib/misc.ml[143,3664+25])
                                Texp_construct "Some"
                                [
                                  expression (lib/misc.ml[143,3664+11]..lib/misc.ml[143,3664+25])
                                    Texp_apply
                                    expression (lib/misc.ml[143,3664+12]..lib/misc.ml[143,3664+22])
                                      Texp_ident "Stdlib!.Queue.take"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[143,3664+23]..lib/misc.ml[143,3664+24])
                                          Texp_ident "q/1508"
                                    ]
                                ]
                              [
                                <case>
                                  pattern (lib/misc.ml[144,3690+9]..lib/misc.ml[144,3690+20])
                                    Tpat_construct "Queue.Empty"
                                    []
                                    None
                                  expression (lib/misc.ml[145,3714+6]..lib/misc.ml[145,3714+10])
                                    Texp_construct "None"
                                    []
                              ]
                            [
                              <case>
                                pattern (lib/misc.ml[147,3732+4]..lib/misc.ml[147,3732+10])
                                  Tpat_value
                                  pattern (lib/misc.ml[147,3732+4]..lib/misc.ml[147,3732+10])
                                    Tpat_construct "Some"
                                    [
                                      pattern (lib/misc.ml[147,3732+9]..lib/misc.ml[147,3732+10])
                                        Tpat_var "x/1551"
                                    ]
                                    None
                                expression (lib/misc.ml[148,3746+6]..lib/misc.ml[148,3746+26])
                                  Texp_apply
                                  expression (lib/misc.ml[148,3746+6]..lib/misc.ml[148,3746+11])
                                    Texp_ident "qfold/1505"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/misc.ml[148,3746+12]..lib/misc.ml[148,3746+13])
                                        Texp_ident "f/1506"
                                    <arg>
                                      Nolabel
                                      expression (lib/misc.ml[148,3746+14]..lib/misc.ml[148,3746+24])
                                        Texp_apply
                                        expression (lib/misc.ml[148,3746+15]..lib/misc.ml[148,3746+16])
                                          Texp_ident "f/1506"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/misc.ml[148,3746+17]..lib/misc.ml[148,3746+21])
                                              Texp_ident "accu/1507"
                                          <arg>
                                            Nolabel
                                            expression (lib/misc.ml[148,3746+22]..lib/misc.ml[148,3746+23])
                                              Texp_ident "x/1551"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (lib/misc.ml[148,3746+25]..lib/misc.ml[148,3746+26])
                                        Texp_ident "q/1508"
                                  ]
                              <case>
                                pattern (lib/misc.ml[149,3773+4]..lib/misc.ml[149,3773+8])
                                  Tpat_value
                                  pattern (lib/misc.ml[149,3773+4]..lib/misc.ml[149,3773+8])
                                    Tpat_construct "None"
                                    []
                                    None
                                expression (lib/misc.ml[150,3785+6]..lib/misc.ml[150,3785+10])
                                  Texp_ident "accu/1507"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[156,3978+0]..lib/misc.ml[162,4072+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[156,3978+4]..lib/misc.ml[156,3978+9])
          Tpat_var "qiter/1552"
        expression (lib/misc.ml[156,3978+10]..lib/misc.ml[162,4072+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[156,3978+10]..lib/misc.ml[156,3978+11])
                Tpat_var "f/1554"
              expression (lib/misc.ml[156,3978+12]..lib/misc.ml[162,4072+6]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[156,3978+12]..lib/misc.ml[156,3978+13])
                      Tpat_var "q/1555"
                    expression (lib/misc.ml[157,3994+2]..lib/misc.ml[162,4072+6])
                      Texp_try
                      expression (lib/misc.ml[158,4000+4]..lib/misc.ml[160,4041+8])
                        Texp_while
                        expression (lib/misc.ml[158,4000+10]..lib/misc.ml[158,4000+14])
                          Texp_construct "true"
                          []
                        expression (lib/misc.ml[159,4018+6]..lib/misc.ml[159,4018+22])
                          Texp_apply
                          expression (lib/misc.ml[159,4018+6]..lib/misc.ml[159,4018+7])
                            Texp_ident "f/1554"
                          [
                            <arg>
                              Nolabel
                              expression (lib/misc.ml[159,4018+8]..lib/misc.ml[159,4018+22])
                                Texp_apply
                                expression (lib/misc.ml[159,4018+9]..lib/misc.ml[159,4018+19])
                                  Texp_ident "Stdlib!.Queue.take"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/misc.ml[159,4018+20]..lib/misc.ml[159,4018+21])
                                      Texp_ident "q/1555"
                                ]
                          ]
                      [
                        <case>
                          pattern (lib/misc.ml[161,4050+7]..lib/misc.ml[161,4050+18])
                            Tpat_construct "Queue.Empty"
                            []
                            None
                          expression (lib/misc.ml[162,4072+4]..lib/misc.ml[162,4072+6])
                            Texp_construct "()"
                            []
                      ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[164,4080+0]..lib/misc.ml[173,4251+17])
    Tstr_value Rec
    [
      <def>
        pattern (lib/misc.ml[164,4080+8]..lib/misc.ml[164,4080+12])
          Tpat_var "smap/1556"
        expression (lib/misc.ml[164,4080+13]..lib/misc.ml[173,4251+17]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[164,4080+13]..lib/misc.ml[164,4080+14])
                Tpat_var "f/1557"
              expression (lib/misc.ml[164,4080+17]..lib/misc.ml[173,4251+17])
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[165,4106+4]..lib/misc.ml[165,4106+6])
                      Tpat_construct "[]"
                      []
                      None
                    expression (lib/misc.ml[166,4116+6]..lib/misc.ml[166,4116+8])
                      Texp_construct "[]"
                      []
                  <case>
                    pattern (lib/misc.ml[167,4125+4]..lib/misc.ml[167,4125+18])
                      Tpat_alias "l/1560"
                      pattern (lib/misc.ml[167,4125+4]..lib/misc.ml[167,4125+13])
                        Tpat_construct "::"
                        [
                          pattern (lib/misc.ml[167,4125+5]..lib/misc.ml[167,4125+6])
                            Tpat_var "x/1558"
                          pattern (lib/misc.ml[167,4125+10]..lib/misc.ml[167,4125+12])
                            Tpat_var "xs/1559"
                        ]
                        None
                    expression (lib/misc.ml[168,4147+6]..lib/misc.ml[173,4251+17])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/misc.ml[168,4147+10]..lib/misc.ml[168,4147+12])
                            Tpat_var "x'/1561"
                          expression (lib/misc.ml[168,4147+15]..lib/misc.ml[168,4147+18])
                            Texp_apply
                            expression (lib/misc.ml[168,4147+15]..lib/misc.ml[168,4147+16])
                              Texp_ident "f/1557"
                            [
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[168,4147+17]..lib/misc.ml[168,4147+18])
                                  Texp_ident "x/1558"
                            ]
                        <def>
                          pattern (lib/misc.ml[169,4166+10]..lib/misc.ml[169,4166+13])
                            Tpat_var "xs'/1562"
                          expression (lib/misc.ml[169,4166+16]..lib/misc.ml[169,4166+25])
                            Texp_apply
                            expression (lib/misc.ml[169,4166+16]..lib/misc.ml[169,4166+20])
                              Texp_ident "smap/1556"
                            [
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[169,4166+21]..lib/misc.ml[169,4166+22])
                                  Texp_ident "f/1557"
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[169,4166+23]..lib/misc.ml[169,4166+25])
                                  Texp_ident "xs/1559"
                            ]
                      ]
                      expression (lib/misc.ml[170,4195+6]..lib/misc.ml[173,4251+17])
                        Texp_ifthenelse
                        expression (lib/misc.ml[170,4195+9]..lib/misc.ml[170,4195+29])
                          Texp_apply
                          expression (lib/misc.ml[170,4195+17]..lib/misc.ml[170,4195+19])
                            Texp_ident "Stdlib!.&&"
                          [
                            <arg>
                              Nolabel
                              expression (lib/misc.ml[170,4195+9]..lib/misc.ml[170,4195+16])
                                Texp_apply
                                expression (lib/misc.ml[170,4195+11]..lib/misc.ml[170,4195+13])
                                  Texp_ident "Stdlib!.=="
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/misc.ml[170,4195+9]..lib/misc.ml[170,4195+10])
                                      Texp_ident "x/1558"
                                  <arg>
                                    Nolabel
                                    expression (lib/misc.ml[170,4195+14]..lib/misc.ml[170,4195+16])
                                      Texp_ident "x'/1561"
                                ]
                            <arg>
                              Nolabel
                              expression (lib/misc.ml[170,4195+20]..lib/misc.ml[170,4195+29])
                                Texp_apply
                                expression (lib/misc.ml[170,4195+23]..lib/misc.ml[170,4195+25])
                                  Texp_ident "Stdlib!.=="
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/misc.ml[170,4195+20]..lib/misc.ml[170,4195+22])
                                      Texp_ident "xs/1559"
                                  <arg>
                                    Nolabel
                                    expression (lib/misc.ml[170,4195+26]..lib/misc.ml[170,4195+29])
                                      Texp_ident "xs'/1562"
                                ]
                          ]
                        expression (lib/misc.ml[171,4230+8]..lib/misc.ml[171,4230+9])
                          Texp_ident "l/1560"
                        Some
                          expression (lib/misc.ml[173,4251+8]..lib/misc.ml[173,4251+17])
                            Texp_construct "::"
                            [
                              expression (lib/misc.ml[173,4251+8]..lib/misc.ml[173,4251+10])
                                Texp_ident "x'/1561"
                              expression (lib/misc.ml[173,4251+14]..lib/misc.ml[173,4251+17])
                                Texp_ident "xs'/1562"
                            ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[175,4270+0]..lib/misc.ml[185,4491+17])
    Tstr_value Rec
    [
      <def>
        pattern (lib/misc.ml[175,4270+8]..lib/misc.ml[175,4270+13])
          Tpat_var "smapa/1563"
        expression (lib/misc.ml[175,4270+14]..lib/misc.ml[185,4491+17]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[175,4270+14]..lib/misc.ml[175,4270+15])
                Tpat_var "f/1564"
              expression (lib/misc.ml[175,4270+16]..lib/misc.ml[185,4491+17]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[175,4270+16]..lib/misc.ml[175,4270+20])
                      Tpat_var "accu/1565"
                    expression (lib/misc.ml[175,4270+23]..lib/misc.ml[185,4491+17])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/misc.ml[176,4302+4]..lib/misc.ml[176,4302+6])
                            Tpat_construct "[]"
                            []
                            None
                          expression (lib/misc.ml[177,4312+6]..lib/misc.ml[177,4312+14])
                            Texp_tuple
                            [
                              expression (lib/misc.ml[177,4312+6]..lib/misc.ml[177,4312+10])
                                Texp_ident "accu/1565"
                              expression (lib/misc.ml[177,4312+12]..lib/misc.ml[177,4312+14])
                                Texp_construct "[]"
                                []
                            ]
                        <case>
                          pattern (lib/misc.ml[178,4327+4]..lib/misc.ml[178,4327+18])
                            Tpat_alias "l/1568"
                            pattern (lib/misc.ml[178,4327+4]..lib/misc.ml[178,4327+13])
                              Tpat_construct "::"
                              [
                                pattern (lib/misc.ml[178,4327+5]..lib/misc.ml[178,4327+6])
                                  Tpat_var "x/1566"
                                pattern (lib/misc.ml[178,4327+10]..lib/misc.ml[178,4327+12])
                                  Tpat_var "xs/1567"
                              ]
                              None
                          expression (lib/misc.ml[179,4349+6]..lib/misc.ml[185,4491+17])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (lib/misc.ml[179,4349+10]..lib/misc.ml[179,4349+18])
                                  Tpat_tuple
                                  [
                                    pattern (lib/misc.ml[179,4349+10]..lib/misc.ml[179,4349+14])
                                      Tpat_var "accu/1569"
                                    pattern (lib/misc.ml[179,4349+16]..lib/misc.ml[179,4349+18])
                                      Tpat_var "x'/1570"
                                  ]
                                expression (lib/misc.ml[179,4349+21]..lib/misc.ml[179,4349+29])
                                  Texp_apply
                                  expression (lib/misc.ml[179,4349+21]..lib/misc.ml[179,4349+22])
                                    Texp_ident "f/1564"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/misc.ml[179,4349+23]..lib/misc.ml[179,4349+27])
                                        Texp_ident "accu/1565"
                                    <arg>
                                      Nolabel
                                      expression (lib/misc.ml[179,4349+28]..lib/misc.ml[179,4349+29])
                                        Texp_ident "x/1566"
                                  ]
                            ]
                            expression (lib/misc.ml[180,4382+6]..lib/misc.ml[185,4491+17])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (lib/misc.ml[180,4382+10]..lib/misc.ml[180,4382+19])
                                    Tpat_tuple
                                    [
                                      pattern (lib/misc.ml[180,4382+10]..lib/misc.ml[180,4382+14])
                                        Tpat_var "accu/1571"
                                      pattern (lib/misc.ml[180,4382+16]..lib/misc.ml[180,4382+19])
                                        Tpat_var "xs'/1572"
                                    ]
                                  expression (lib/misc.ml[180,4382+22]..lib/misc.ml[180,4382+37])
                                    Texp_apply
                                    expression (lib/misc.ml[180,4382+22]..lib/misc.ml[180,4382+27])
                                      Texp_ident "smapa/1563"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[180,4382+28]..lib/misc.ml[180,4382+29])
                                          Texp_ident "f/1564"
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[180,4382+30]..lib/misc.ml[180,4382+34])
                                          Texp_ident "accu/1569"
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[180,4382+35]..lib/misc.ml[180,4382+37])
                                          Texp_ident "xs/1567"
                                    ]
                              ]
                              expression (lib/misc.ml[181,4423+6]..lib/misc.ml[185,4491+17])
                                Texp_tuple
                                [
                                  expression (lib/misc.ml[181,4423+6]..lib/misc.ml[181,4423+10])
                                    Texp_ident "accu/1571"
                                  expression (lib/misc.ml[182,4435+6]..lib/misc.ml[185,4491+17])
                                    Texp_ifthenelse
                                    expression (lib/misc.ml[182,4435+9]..lib/misc.ml[182,4435+29])
                                      Texp_apply
                                      expression (lib/misc.ml[182,4435+17]..lib/misc.ml[182,4435+19])
                                        Texp_ident "Stdlib!.&&"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/misc.ml[182,4435+9]..lib/misc.ml[182,4435+16])
                                            Texp_apply
                                            expression (lib/misc.ml[182,4435+11]..lib/misc.ml[182,4435+13])
                                              Texp_ident "Stdlib!.=="
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/misc.ml[182,4435+9]..lib/misc.ml[182,4435+10])
                                                  Texp_ident "x/1566"
                                              <arg>
                                                Nolabel
                                                expression (lib/misc.ml[182,4435+14]..lib/misc.ml[182,4435+16])
                                                  Texp_ident "x'/1570"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/misc.ml[182,4435+20]..lib/misc.ml[182,4435+29])
                                            Texp_apply
                                            expression (lib/misc.ml[182,4435+23]..lib/misc.ml[182,4435+25])
                                              Texp_ident "Stdlib!.=="
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/misc.ml[182,4435+20]..lib/misc.ml[182,4435+22])
                                                  Texp_ident "xs/1567"
                                              <arg>
                                                Nolabel
                                                expression (lib/misc.ml[182,4435+26]..lib/misc.ml[182,4435+29])
                                                  Texp_ident "xs'/1572"
                                            ]
                                      ]
                                    expression (lib/misc.ml[183,4470+8]..lib/misc.ml[183,4470+9])
                                      Texp_ident "l/1568"
                                    Some
                                      expression (lib/misc.ml[185,4491+8]..lib/misc.ml[185,4491+17])
                                        Texp_construct "::"
                                        [
                                          expression (lib/misc.ml[185,4491+8]..lib/misc.ml[185,4491+10])
                                            Texp_ident "x'/1570"
                                          expression (lib/misc.ml[185,4491+14]..lib/misc.ml[185,4491+17])
                                            Texp_ident "xs'/1572"
                                        ]
                                ]
                      ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[187,4510+0]..lib/misc.ml[199,4729+26])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[187,4510+4]..lib/misc.ml[187,4510+13])
          Tpat_var "normalize/1573"
        expression (lib/misc.ml[187,4510+14]..lib/misc.ml[199,4729+26]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[187,4510+14]..lib/misc.ml[187,4510+15])
                Tpat_var "s/1575"
              expression (lib/misc.ml[188,4528+2]..lib/misc.ml[199,4729+26])
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/misc.ml[188,4528+6]..lib/misc.ml[188,4528+7])
                      Tpat_var "s/1576"
                    expression (lib/misc.ml[188,4528+10]..lib/misc.ml[188,4528+27])
                      Texp_apply
                      expression (lib/misc.ml[188,4528+10]..lib/misc.ml[188,4528+25])
                        Texp_ident "Stdlib!.Bytes.of_string"
                      [
                        <arg>
                          Nolabel
                          expression (lib/misc.ml[188,4528+26]..lib/misc.ml[188,4528+27])
                            Texp_ident "s/1575"
                      ]
                ]
                expression (lib/misc.ml[189,4559+2]..lib/misc.ml[199,4729+26])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (lib/misc.ml[189,4559+6]..lib/misc.ml[189,4559+7])
                        Tpat_var "n/1674"
                      expression (lib/misc.ml[189,4559+10]..lib/misc.ml[189,4559+24])
                        Texp_apply
                        expression (lib/misc.ml[189,4559+10]..lib/misc.ml[189,4559+22])
                          Texp_ident "Stdlib!.Bytes.length"
                        [
                          <arg>
                            Nolabel
                            expression (lib/misc.ml[189,4559+23]..lib/misc.ml[189,4559+24])
                              Texp_ident "s/1576"
                        ]
                  ]
                  expression (lib/misc.ml[190,4587+2]..lib/misc.ml[199,4729+26])
                    Texp_sequence
                    expression (lib/misc.ml[190,4587+2]..lib/misc.ml[198,4721+6])
                      Texp_for "i/1675" Up
                      expression (lib/misc.ml[190,4587+10]..lib/misc.ml[190,4587+11])
                        Texp_constant Const_int 0
                      expression (lib/misc.ml[190,4587+15]..lib/misc.ml[190,4587+20])
                        Texp_apply
                        expression (lib/misc.ml[190,4587+17]..lib/misc.ml[190,4587+18])
                          Texp_ident "Stdlib!.-"
                        [
                          <arg>
                            Nolabel
                            expression (lib/misc.ml[190,4587+15]..lib/misc.ml[190,4587+16])
                              Texp_ident "n/1674"
                          <arg>
                            Nolabel
                            expression (lib/misc.ml[190,4587+19]..lib/misc.ml[190,4587+20])
                              Texp_constant Const_int 1
                        ]
                      expression (lib/misc.ml[191,4611+4]..lib/misc.ml[197,4710+10])
                        Texp_match
                        expression (lib/misc.ml[191,4611+10]..lib/misc.ml[191,4611+23])
                          Texp_apply
                          expression (lib/misc.ml[191,4611+10]..lib/misc.ml[191,4611+19])
                            Texp_ident "Stdlib!.Bytes.get"
                          [
                            <arg>
                              Nolabel
                              expression (lib/misc.ml[191,4611+20]..lib/misc.ml[191,4611+21])
                                Texp_ident "s/1576"
                            <arg>
                              Nolabel
                              expression (lib/misc.ml[191,4611+22]..lib/misc.ml[191,4611+23])
                                Texp_ident "i/1675"
                          ]
                        [
                          <case>
                            pattern (lib/misc.ml[192,4640+6]..lib/misc.ml[194,4660+9])
                              Tpat_or
                              pattern (lib/misc.ml[192,4640+6]..lib/misc.ml[193,4650+9])
                                Tpat_or
                                pattern (lib/misc.ml[192,4640+6]..lib/misc.ml[192,4640+9])
                                  Tpat_value
                                  pattern (lib/misc.ml[192,4640+6]..lib/misc.ml[192,4640+9])
                                    Tpat_constant Const_char 28
                                pattern (lib/misc.ml[193,4650+6]..lib/misc.ml[193,4650+9])
                                  Tpat_value
                                  pattern (lib/misc.ml[193,4650+6]..lib/misc.ml[193,4650+9])
                                    Tpat_constant Const_char 29
                              pattern (lib/misc.ml[194,4660+6]..lib/misc.ml[194,4660+9])
                                Tpat_value
                                pattern (lib/misc.ml[194,4660+6]..lib/misc.ml[194,4660+9])
                                  Tpat_constant Const_char 2c
                            expression (lib/misc.ml[195,4673+8]..lib/misc.ml[195,4673+25])
                              Texp_apply
                              expression (lib/misc.ml[195,4673+8]..lib/misc.ml[195,4673+17])
                                Texp_ident "Stdlib!.Bytes.set"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/misc.ml[195,4673+18]..lib/misc.ml[195,4673+19])
                                    Texp_ident "s/1576"
                                <arg>
                                  Nolabel
                                  expression (lib/misc.ml[195,4673+20]..lib/misc.ml[195,4673+21])
                                    Texp_ident "i/1675"
                                <arg>
                                  Nolabel
                                  expression (lib/misc.ml[195,4673+22]..lib/misc.ml[195,4673+25])
                                    Texp_constant Const_char 5f
                              ]
                          <case>
                            pattern (lib/misc.ml[196,4699+6]..lib/misc.ml[196,4699+7])
                              Tpat_value
                              pattern (lib/misc.ml[196,4699+6]..lib/misc.ml[196,4699+7])
                                Tpat_any
                            expression (lib/misc.ml[197,4710+8]..lib/misc.ml[197,4710+10])
                              Texp_construct "()"
                              []
                        ]
                    expression (lib/misc.ml[199,4729+2]..lib/misc.ml[199,4729+26])
                      Texp_apply
                      expression (lib/misc.ml[199,4729+2]..lib/misc.ml[199,4729+24])
                        Texp_ident "Stdlib!.Bytes.unsafe_to_string"
                      [
                        <arg>
                          Nolabel
                          expression (lib/misc.ml[199,4729+25]..lib/misc.ml[199,4729+26])
                            Texp_ident "s/1576"
                      ]
          ]
    ]
  structure_item (lib/misc.ml[203,4829+0]..lib/misc.ml[206,4881+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[203,4829+4]..lib/misc.ml[203,4829+17])
          Tpat_var "postincrement/1676"
        expression (lib/misc.ml[203,4829+18]..lib/misc.ml[206,4881+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[203,4829+18]..lib/misc.ml[203,4829+19])
                Tpat_var "r/1678"
              expression (lib/misc.ml[204,4851+2]..lib/misc.ml[206,4881+3])
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/misc.ml[204,4851+6]..lib/misc.ml[204,4851+7])
                      Tpat_var "x/1679"
                    expression (lib/misc.ml[204,4851+10]..lib/misc.ml[204,4851+12])
                      Texp_apply
                      expression (lib/misc.ml[204,4851+10]..lib/misc.ml[204,4851+11])
                        Texp_ident "Stdlib!.!"
                      [
                        <arg>
                          Nolabel
                          expression (lib/misc.ml[204,4851+11]..lib/misc.ml[204,4851+12])
                            Texp_ident "r/1678"
                      ]
                ]
                expression (lib/misc.ml[205,4867+2]..lib/misc.ml[206,4881+3])
                  Texp_sequence
                  expression (lib/misc.ml[205,4867+2]..lib/misc.ml[205,4867+12])
                    Texp_apply
                    expression (lib/misc.ml[205,4867+4]..lib/misc.ml[205,4867+6])
                      Texp_ident "Stdlib!.:="
                    [
                      <arg>
                        Nolabel
                        expression (lib/misc.ml[205,4867+2]..lib/misc.ml[205,4867+3])
                          Texp_ident "r/1678"
                      <arg>
                        Nolabel
                        expression (lib/misc.ml[205,4867+7]..lib/misc.ml[205,4867+12])
                          Texp_apply
                          expression (lib/misc.ml[205,4867+9]..lib/misc.ml[205,4867+10])
                            Texp_ident "Stdlib!.+"
                          [
                            <arg>
                              Nolabel
                              expression (lib/misc.ml[205,4867+7]..lib/misc.ml[205,4867+8])
                                Texp_ident "x/1679"
                            <arg>
                              Nolabel
                              expression (lib/misc.ml[205,4867+11]..lib/misc.ml[205,4867+12])
                                Texp_constant Const_int 1
                          ]
                    ]
                  expression (lib/misc.ml[206,4881+2]..lib/misc.ml[206,4881+3])
                    Texp_ident "x/1679"
          ]
    ]
  structure_item (lib/misc.ml[210,5024+0]..lib/misc.ml[215,5145+10])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[210,5024+4]..lib/misc.ml[210,5024+14])
          Tpat_var "filter_map/1680"
        expression (lib/misc.ml[210,5024+15]..lib/misc.ml[215,5145+10]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[210,5024+15]..lib/misc.ml[210,5024+16])
                Tpat_var "f/1682"
              expression (lib/misc.ml[210,5024+17]..lib/misc.ml[215,5145+10]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[210,5024+17]..lib/misc.ml[210,5024+18])
                      Tpat_var "l/1683"
                    expression (lib/misc.ml[211,5045+2]..lib/misc.ml[215,5145+10])
                      Texp_open Fresh
                      module_expr (lib/misc.ml[211,5045+2]..lib/misc.ml[211,5045+6])
                        Tmod_ident "Stdlib!.List"
                      expression (lib/misc.ml[211,5045+8]..lib/misc.ml[215,5145+9])
                        Texp_apply
                        expression (lib/misc.ml[211,5045+8]..lib/misc.ml[211,5045+11])
                          Texp_ident "Stdlib!.List.rev"
                        [
                          <arg>
                            Nolabel
                            expression (lib/misc.ml[211,5045+12]..lib/misc.ml[215,5145+9])
                              Texp_apply
                              expression (lib/misc.ml[211,5045+13]..lib/misc.ml[211,5045+22])
                                Texp_ident "Stdlib!.List.fold_left"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/misc.ml[211,5045+23]..lib/misc.ml[215,5145+3])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (lib/misc.ml[211,5045+28]..lib/misc.ml[211,5045+30])
                                          Tpat_var "ys/1684"
                                        expression (lib/misc.ml[211,5045+31]..lib/misc.ml[214,5119+25]) ghost
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (lib/misc.ml[211,5045+31]..lib/misc.ml[211,5045+32])
                                                Tpat_var "x/1685"
                                              expression (lib/misc.ml[212,5081+4]..lib/misc.ml[214,5119+25])
                                                Texp_match
                                                expression (lib/misc.ml[212,5081+10]..lib/misc.ml[212,5081+13])
                                                  Texp_apply
                                                  expression (lib/misc.ml[212,5081+10]..lib/misc.ml[212,5081+11])
                                                    Texp_ident "f/1682"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/misc.ml[212,5081+12]..lib/misc.ml[212,5081+13])
                                                        Texp_ident "x/1685"
                                                  ]
                                                [
                                                  <case>
                                                    pattern (lib/misc.ml[213,5100+8]..lib/misc.ml[213,5100+12])
                                                      Tpat_value
                                                      pattern (lib/misc.ml[213,5100+8]..lib/misc.ml[213,5100+12])
                                                        Tpat_construct "None"
                                                        []
                                                        None
                                                    expression (lib/misc.ml[213,5100+16]..lib/misc.ml[213,5100+18])
                                                      Texp_ident "ys/1684"
                                                  <case>
                                                    pattern (lib/misc.ml[214,5119+8]..lib/misc.ml[214,5119+14])
                                                      Tpat_value
                                                      pattern (lib/misc.ml[214,5119+8]..lib/misc.ml[214,5119+14])
                                                        Tpat_construct "Some"
                                                        [
                                                          pattern (lib/misc.ml[214,5119+13]..lib/misc.ml[214,5119+14])
                                                            Tpat_var "y/1686"
                                                        ]
                                                        None
                                                    expression (lib/misc.ml[214,5119+18]..lib/misc.ml[214,5119+25])
                                                      Texp_construct "::"
                                                      [
                                                        expression (lib/misc.ml[214,5119+18]..lib/misc.ml[214,5119+19])
                                                          Texp_ident "y/1686"
                                                        expression (lib/misc.ml[214,5119+23]..lib/misc.ml[214,5119+25])
                                                          Texp_ident "ys/1684"
                                                      ]
                                                ]
                                          ]
                                    ]
                                <arg>
                                  Nolabel
                                  expression (lib/misc.ml[215,5145+4]..lib/misc.ml[215,5145+6])
                                    Texp_construct "[]"
                                    []
                                <arg>
                                  Nolabel
                                  expression (lib/misc.ml[215,5145+7]..lib/misc.ml[215,5145+8])
                                    Texp_ident "l/1683"
                              ]
                        ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[217,5157+0]..lib/misc.ml[249,6222+25])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[217,5157+4]..lib/misc.ml[217,5157+21])
          Tpat_var "new_encode_decode/1687"
        expression (lib/misc.ml[217,5157+22]..lib/misc.ml[249,6222+25]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[217,5157+22]..lib/misc.ml[217,5157+30])
                Tpat_var "capacity/1689"
              expression (lib/misc.ml[219,5257+2]..lib/misc.ml[249,6222+25])
                Texp_letmodule "H/1866"
                module_expr (lib/misc.ml[219,5257+17]..lib/misc.ml[223,5362+6])
                  Tmod_apply
                  module_expr (lib/misc.ml[219,5257+17]..lib/misc.ml[219,5257+29])
                    module_expr (lib/misc.ml[219,5257+17]..lib/misc.ml[219,5257+29])
                      Tmod_ident "Stdlib!.Hashtbl.Make"
                  module_expr (lib/misc.ml[219,5257+30]..lib/misc.ml[223,5362+5])
                    Tmod_structure
                    [
                      structure_item (lib/misc.ml[220,5294+4]..lib/misc.ml[220,5294+19])
                        Tstr_type Rec
                        [
                          type_declaration t/1690 (lib/misc.ml[220,5294+4]..lib/misc.ml[220,5294+19])
                            ptype_params =
                              []
                            ptype_cstrs =
                              []
                            ptype_kind =
                              Ttype_abstract
                            ptype_private = Public
                            ptype_manifest =
                              Some
                                core_type (lib/misc.ml[220,5294+13]..lib/misc.ml[220,5294+19])
                                  Ttyp_constr "string/15!"
                                  []
                        ]
                      structure_item (lib/misc.ml[221,5314+4]..lib/misc.ml[221,5314+19])
                        Tstr_value Nonrec
                        [
                          <def>
                            pattern (lib/misc.ml[221,5314+8]..lib/misc.ml[221,5314+13])
                              Tpat_var "equal/1691"
                            expression (lib/misc.ml[221,5314+16]..lib/misc.ml[221,5314+19])
                              Texp_ident "Stdlib!.="
                        ]
                      structure_item (lib/misc.ml[222,5334+4]..lib/misc.ml[222,5334+27])
                        Tstr_value Nonrec
                        [
                          <def>
                            pattern (lib/misc.ml[222,5334+8]..lib/misc.ml[222,5334+12])
                              Tpat_var "hash/1692"
                            expression (lib/misc.ml[222,5334+15]..lib/misc.ml[222,5334+27])
                              Texp_ident "Stdlib!.Hashtbl.hash"
                        ]
                    ]
                expression (lib/misc.ml[224,5372+2]..lib/misc.ml[249,6222+25])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (lib/misc.ml[224,5372+6]..lib/misc.ml[224,5372+11])
                        Tpat_var "table/1867"
                      expression (lib/misc.ml[224,5372+14]..lib/misc.ml[224,5372+31])
                        Texp_apply
                        expression (lib/misc.ml[224,5372+14]..lib/misc.ml[224,5372+22])
                          Texp_ident "H/1866.create"
                        [
                          <arg>
                            Nolabel
                            expression (lib/misc.ml[224,5372+23]..lib/misc.ml[224,5372+31])
                              Texp_ident "capacity/1689"
                        ]
                  ]
                  expression (lib/misc.ml[226,5470+2]..lib/misc.ml[249,6222+25])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (lib/misc.ml[226,5470+6]..lib/misc.ml[226,5470+10])
                          Tpat_var "text/1868"
                        expression (lib/misc.ml[226,5470+13]..lib/misc.ml[226,5470+44])
                          Texp_apply
                          expression (lib/misc.ml[226,5470+13]..lib/misc.ml[226,5470+41])
                            Texp_ident "MenhirLib!.InfiniteArray.make"
                          [
                            <arg>
                              Nolabel
                              expression (lib/misc.ml[226,5470+42]..lib/misc.ml[226,5470+44])
                                Texp_constant Const_string("",(lib/misc.ml[226,5470+43]..lib/misc.ml[226,5470+43]),None)
                          ]
                    ]
                    expression (lib/misc.ml[228,5561+2]..lib/misc.ml[249,6222+25])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/misc.ml[228,5561+6]..lib/misc.ml[228,5561+7])
                            Tpat_var "c/1892"
                          expression (lib/misc.ml[228,5561+10]..lib/misc.ml[228,5561+15])
                            Texp_apply
                            expression (lib/misc.ml[228,5561+10]..lib/misc.ml[228,5561+13])
                              Texp_ident "Stdlib!.ref"
                            [
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[228,5561+14]..lib/misc.ml[228,5561+15])
                                  Texp_constant Const_int 0
                            ]
                      ]
                      expression (lib/misc.ml[230,5640+2]..lib/misc.ml[249,6222+25])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (lib/misc.ml[230,5640+6]..lib/misc.ml[230,5640+12])
                              Tpat_var "encode/1893"
                            expression (lib/misc.ml[230,5640+13]..lib/misc.ml[240,5946+7]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (lib/misc.ml[230,5640+14]..lib/misc.ml[230,5640+15])
                                    extra
                                      Tpat_extra_constraint
                                      core_type (lib/misc.ml[230,5640+18]..lib/misc.ml[230,5640+24])
                                        Ttyp_constr "string/15!"
                                        []
                                    Tpat_alias "s/1899"
                                    pattern (lib/misc.ml[230,5640+14]..lib/misc.ml[230,5640+15])
                                      Tpat_any
                                  expression (lib/misc.ml[231,5674+4]..lib/misc.ml[240,5946+7])
                                    extra
                                      Texp_constraint
                                      core_type (lib/misc.ml[230,5640+28]..lib/misc.ml[230,5640+31])
                                        Ttyp_constr "int/1!"
                                        []
                                    Texp_sequence
                                    expression (lib/misc.ml[231,5674+4]..lib/misc.ml[231,5674+15])
                                      Texp_apply
                                      expression (lib/misc.ml[231,5674+6]..lib/misc.ml[231,5674+8])
                                        Texp_ident "Stdlib!.:="
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/misc.ml[231,5674+4]..lib/misc.ml[231,5674+5])
                                            Texp_ident "c/1892"
                                        <arg>
                                          Nolabel
                                          expression (lib/misc.ml[231,5674+9]..lib/misc.ml[231,5674+15])
                                            Texp_apply
                                            expression (lib/misc.ml[231,5674+12]..lib/misc.ml[231,5674+13])
                                              Texp_ident "Stdlib!.+"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/misc.ml[231,5674+9]..lib/misc.ml[231,5674+11])
                                                  Texp_apply
                                                  expression (lib/misc.ml[231,5674+9]..lib/misc.ml[231,5674+10])
                                                    Texp_ident "Stdlib!.!"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/misc.ml[231,5674+10]..lib/misc.ml[231,5674+11])
                                                        Texp_ident "c/1892"
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (lib/misc.ml[231,5674+14]..lib/misc.ml[231,5674+15])
                                                  Texp_constant Const_int 1
                                            ]
                                      ]
                                    expression (lib/misc.ml[232,5691+4]..lib/misc.ml[240,5946+7])
                                      Texp_try
                                      expression (lib/misc.ml[233,5699+6]..lib/misc.ml[233,5699+20])
                                        Texp_apply
                                        expression (lib/misc.ml[233,5699+6]..lib/misc.ml[233,5699+12])
                                          Texp_ident "H/1866.find"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/misc.ml[233,5699+13]..lib/misc.ml[233,5699+18])
                                              Texp_ident "table/1867"
                                          <arg>
                                            Nolabel
                                            expression (lib/misc.ml[233,5699+19]..lib/misc.ml[233,5699+20])
                                              Texp_ident "s/1899"
                                        ]
                                      [
                                        <case>
                                          pattern (lib/misc.ml[234,5720+9]..lib/misc.ml[234,5720+18])
                                            Tpat_construct "Not_found"
                                            []
                                            None
                                          expression (lib/misc.ml[237,5847+6]..lib/misc.ml[240,5946+7])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (lib/misc.ml[237,5847+10]..lib/misc.ml[237,5847+11])
                                                  Tpat_var "i/1900"
                                                expression (lib/misc.ml[237,5847+14]..lib/misc.ml[237,5847+28])
                                                  Texp_apply
                                                  expression (lib/misc.ml[237,5847+14]..lib/misc.ml[237,5847+22])
                                                    Texp_ident "H/1866.length"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/misc.ml[237,5847+23]..lib/misc.ml[237,5847+28])
                                                        Texp_ident "table/1867"
                                                  ]
                                            ]
                                            expression (lib/misc.ml[238,5879+6]..lib/misc.ml[240,5946+7])
                                              Texp_sequence
                                              expression (lib/misc.ml[238,5879+6]..lib/misc.ml[238,5879+21])
                                                Texp_apply
                                                expression (lib/misc.ml[238,5879+6]..lib/misc.ml[238,5879+11])
                                                  Texp_ident "H/1866.add"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/misc.ml[238,5879+12]..lib/misc.ml[238,5879+17])
                                                      Texp_ident "table/1867"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/misc.ml[238,5879+18]..lib/misc.ml[238,5879+19])
                                                      Texp_ident "s/1899"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/misc.ml[238,5879+20]..lib/misc.ml[238,5879+21])
                                                      Texp_ident "i/1900"
                                                ]
                                              expression (lib/misc.ml[239,5902+6]..lib/misc.ml[240,5946+7])
                                                Texp_sequence
                                                expression (lib/misc.ml[239,5902+6]..lib/misc.ml[239,5902+42])
                                                  Texp_apply
                                                  expression (lib/misc.ml[239,5902+6]..lib/misc.ml[239,5902+33])
                                                    Texp_ident "MenhirLib!.InfiniteArray.set"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/misc.ml[239,5902+34]..lib/misc.ml[239,5902+38])
                                                        Texp_ident "text/1868"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/misc.ml[239,5902+39]..lib/misc.ml[239,5902+40])
                                                        Texp_ident "i/1900"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/misc.ml[239,5902+41]..lib/misc.ml[239,5902+42])
                                                        Texp_ident "s/1899"
                                                  ]
                                                expression (lib/misc.ml[240,5946+6]..lib/misc.ml[240,5946+7])
                                                  Texp_ident "i/1900"
                                      ]
                              ]
                          <def>
                            pattern (lib/misc.ml[242,6022+6]..lib/misc.ml[242,6022+12])
                              Tpat_var "decode/1894"
                            expression (lib/misc.ml[242,6022+13]..lib/misc.ml[243,6056+38]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (lib/misc.ml[242,6022+14]..lib/misc.ml[242,6022+15])
                                    extra
                                      Tpat_extra_constraint
                                      core_type (lib/misc.ml[242,6022+18]..lib/misc.ml[242,6022+21])
                                        Ttyp_constr "int/1!"
                                        []
                                    Tpat_alias "i/1901"
                                    pattern (lib/misc.ml[242,6022+14]..lib/misc.ml[242,6022+15])
                                      Tpat_any
                                  expression (lib/misc.ml[243,6056+4]..lib/misc.ml[243,6056+38])
                                    extra
                                      Texp_constraint
                                      core_type (lib/misc.ml[242,6022+25]..lib/misc.ml[242,6022+31])
                                        Ttyp_constr "string/15!"
                                        []
                                    Texp_apply
                                    expression (lib/misc.ml[243,6056+4]..lib/misc.ml[243,6056+31])
                                      Texp_ident "MenhirLib!.InfiniteArray.get"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[243,6056+32]..lib/misc.ml[243,6056+36])
                                          Texp_ident "text/1868"
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[243,6056+37]..lib/misc.ml[243,6056+38])
                                          Texp_ident "i/1901"
                                    ]
                              ]
                          <def>
                            pattern (lib/misc.ml[244,6095+6]..lib/misc.ml[244,6095+13])
                              Tpat_var "verbose/1895"
                            expression (lib/misc.ml[244,6095+14]..lib/misc.ml[247,6191+25]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (lib/misc.ml[244,6095+14]..lib/misc.ml[244,6095+16])
                                    Tpat_construct "()"
                                    []
                                    None
                                  expression (lib/misc.ml[245,6114+4]..lib/misc.ml[247,6191+25])
                                    Texp_apply
                                    expression (lib/misc.ml[245,6114+4]..lib/misc.ml[245,6114+18])
                                      Texp_ident "Stdlib!.Printf.fprintf"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[245,6114+19]..lib/misc.ml[245,6114+25])
                                          Texp_ident "Stdlib!.stderr"
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[246,6140+6]..lib/misc.ml[246,6140+50])
                                          Texp_construct "CamlinternalFormatBasics.Format"
                                          [
                                            expression (lib/misc.ml[246,6140+6]..lib/misc.ml[246,6140+50]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Int"
                                              [
                                                expression (lib/misc.ml[246,6140+6]..lib/misc.ml[246,6140+50]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Int_d"
                                                  []
                                                expression (lib/misc.ml[246,6140+6]..lib/misc.ml[246,6140+50]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                  []
                                                expression (lib/misc.ml[246,6140+6]..lib/misc.ml[246,6140+50]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.No_precision"
                                                  []
                                                expression (lib/misc.ml[246,6140+6]..lib/misc.ml[246,6140+50]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                  [
                                                    expression (lib/misc.ml[246,6140+6]..lib/misc.ml[246,6140+50]) ghost
                                                      Texp_constant Const_string(" calls to intern; ",(lib/misc.ml[246,6140+6]..lib/misc.ml[246,6140+50]) ghost,None)
                                                    expression (lib/misc.ml[246,6140+6]..lib/misc.ml[246,6140+50]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.Int"
                                                      [
                                                        expression (lib/misc.ml[246,6140+6]..lib/misc.ml[246,6140+50]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.Int_d"
                                                          []
                                                        expression (lib/misc.ml[246,6140+6]..lib/misc.ml[246,6140+50]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                                          []
                                                        expression (lib/misc.ml[246,6140+6]..lib/misc.ml[246,6140+50]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.No_precision"
                                                          []
                                                        expression (lib/misc.ml[246,6140+6]..lib/misc.ml[246,6140+50]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                                          [
                                                            expression (lib/misc.ml[246,6140+6]..lib/misc.ml[246,6140+50]) ghost
                                                              Texp_constant Const_string(" unique strings.\n",(lib/misc.ml[246,6140+6]..lib/misc.ml[246,6140+50]) ghost,None)
                                                            expression (lib/misc.ml[246,6140+6]..lib/misc.ml[246,6140+50]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.Flush"
                                                              [
                                                                expression (lib/misc.ml[246,6140+6]..lib/misc.ml[246,6140+50]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                  []
                                                              ]
                                                          ]
                                                      ]
                                                  ]
                                              ]
                                            expression (lib/misc.ml[246,6140+6]..lib/misc.ml[246,6140+50]) ghost
                                              Texp_constant Const_string("%d calls to intern; %d unique strings.\n%!",(lib/misc.ml[246,6140+6]..lib/misc.ml[246,6140+50]) ghost,None)
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[247,6191+6]..lib/misc.ml[247,6191+8])
                                          Texp_apply
                                          expression (lib/misc.ml[247,6191+6]..lib/misc.ml[247,6191+7])
                                            Texp_ident "Stdlib!.!"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/misc.ml[247,6191+7]..lib/misc.ml[247,6191+8])
                                                Texp_ident "c/1892"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[247,6191+9]..lib/misc.ml[247,6191+25])
                                          Texp_apply
                                          expression (lib/misc.ml[247,6191+10]..lib/misc.ml[247,6191+18])
                                            Texp_ident "H/1866.length"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/misc.ml[247,6191+19]..lib/misc.ml[247,6191+24])
                                                Texp_ident "table/1867"
                                          ]
                                    ]
                              ]
                        ]
                        expression (lib/misc.ml[249,6222+2]..lib/misc.ml[249,6222+25])
                          Texp_tuple
                          [
                            expression (lib/misc.ml[249,6222+2]..lib/misc.ml[249,6222+8])
                              Texp_ident "encode/1893"
                            expression (lib/misc.ml[249,6222+10]..lib/misc.ml[249,6222+16])
                              Texp_ident "decode/1894"
                            expression (lib/misc.ml[249,6222+18]..lib/misc.ml[249,6222+25])
                              Texp_ident "verbose/1895"
                          ]
          ]
    ]
  structure_item (lib/misc.ml[251,6249+0]..lib/misc.ml[277,7175+16])
    Tstr_value Rec
    [
      <def>
        pattern (lib/misc.ml[251,6249+8]..lib/misc.ml[251,6249+12])
          Tpat_var "best/1939"
        expression (lib/misc.ml[251,6249+13]..lib/misc.ml[277,7175+16]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[251,6249+14]..lib/misc.ml[251,6249+24])
                extra
                  Tpat_extra_constraint
                  core_type (lib/misc.ml[251,6249+27]..lib/misc.ml[251,6249+43])
                    Ttyp_arrow
                    Nolabel
                    core_type (lib/misc.ml[251,6249+27]..lib/misc.ml[251,6249+29])
                      Ttyp_var a
                    core_type (lib/misc.ml[251,6249+33]..lib/misc.ml[251,6249+43])
                      Ttyp_arrow
                      Nolabel
                      core_type (lib/misc.ml[251,6249+33]..lib/misc.ml[251,6249+35])
                        Ttyp_var a
                      core_type (lib/misc.ml[251,6249+39]..lib/misc.ml[251,6249+43])
                        Ttyp_constr "bool/5!"
                        []
                Tpat_alias "preferable/1940"
                pattern (lib/misc.ml[251,6249+14]..lib/misc.ml[251,6249+24])
                  Tpat_any
              expression (lib/misc.ml[251,6249+45]..lib/misc.ml[277,7175+16]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[251,6249+46]..lib/misc.ml[251,6249+48])
                      extra
                        Tpat_extra_constraint
                        core_type (lib/misc.ml[251,6249+51]..lib/misc.ml[251,6249+58])
                          Ttyp_constr "list/9!"
                          [
                            core_type (lib/misc.ml[251,6249+51]..lib/misc.ml[251,6249+53])
                              Ttyp_var a
                          ]
                      Tpat_alias "xs/1941"
                      pattern (lib/misc.ml[251,6249+46]..lib/misc.ml[251,6249+48])
                        Tpat_any
                    expression (lib/misc.ml[252,6323+2]..lib/misc.ml[277,7175+16])
                      extra
                        Texp_constraint
                        core_type (lib/misc.ml[251,6249+62]..lib/misc.ml[251,6249+71])
                          Ttyp_constr "option/10!"
                          [
                            core_type (lib/misc.ml[251,6249+62]..lib/misc.ml[251,6249+64])
                              Ttyp_var a
                          ]
                      Texp_match
                      expression (lib/misc.ml[252,6323+8]..lib/misc.ml[252,6323+10])
                        Texp_ident "xs/1941"
                      [
                        <case>
                          pattern (lib/misc.ml[253,6339+4]..lib/misc.ml[253,6339+6])
                            Tpat_value
                            pattern (lib/misc.ml[253,6339+4]..lib/misc.ml[253,6339+6])
                              Tpat_construct "[]"
                              []
                              None
                          expression (lib/misc.ml[256,6473+6]..lib/misc.ml[256,6473+10])
                            Texp_construct "None"
                            []
                        <case>
                          pattern (lib/misc.ml[257,6484+4]..lib/misc.ml[257,6484+7])
                            Tpat_value
                            pattern (lib/misc.ml[257,6484+4]..lib/misc.ml[257,6484+7])
                              Tpat_construct "::"
                              [
                                pattern (lib/misc.ml[257,6484+5]..lib/misc.ml[257,6484+6])
                                  Tpat_var "x/1942"
                                pattern (lib/misc.ml[257,6484+6]..lib/misc.ml[257,6484+7]) ghost
                                  Tpat_construct "[]"
                                  []
                                  None
                              ]
                              None
                          expression (lib/misc.ml[258,6495+6]..lib/misc.ml[258,6495+12])
                            Texp_construct "Some"
                            [
                              expression (lib/misc.ml[258,6495+11]..lib/misc.ml[258,6495+12])
                                Texp_ident "x/1942"
                            ]
                        <case>
                          pattern (lib/misc.ml[259,6508+4]..lib/misc.ml[259,6508+11])
                            Tpat_value
                            pattern (lib/misc.ml[259,6508+4]..lib/misc.ml[259,6508+11])
                              Tpat_construct "::"
                              [
                                pattern (lib/misc.ml[259,6508+4]..lib/misc.ml[259,6508+5])
                                  Tpat_var "x/1943"
                                pattern (lib/misc.ml[259,6508+9]..lib/misc.ml[259,6508+11])
                                  Tpat_var "xs/1944"
                              ]
                              None
                          expression (lib/misc.ml[262,6633+6]..lib/misc.ml[277,7175+16])
                            Texp_ifthenelse
                            expression (lib/misc.ml[262,6633+9]..lib/misc.ml[262,6633+39])
                              Texp_apply
                              expression (lib/misc.ml[262,6633+9]..lib/misc.ml[262,6633+21])
                                Texp_ident "Stdlib!.List.for_all"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/misc.ml[262,6633+22]..lib/misc.ml[262,6633+36])
                                    Texp_apply
                                    expression (lib/misc.ml[262,6633+23]..lib/misc.ml[262,6633+33])
                                      Texp_ident "preferable/1940"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[262,6633+34]..lib/misc.ml[262,6633+35])
                                          Texp_ident "x/1943"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (lib/misc.ml[262,6633+37]..lib/misc.ml[262,6633+39])
                                    Texp_ident "xs/1944"
                              ]
                            expression (lib/misc.ml[263,6678+8]..lib/misc.ml[263,6678+14])
                              Texp_construct "Some"
                              [
                                expression (lib/misc.ml[263,6678+13]..lib/misc.ml[263,6678+14])
                                  Texp_ident "x/1943"
                              ]
                            Some
                              expression (lib/misc.ml[266,6772+8]..lib/misc.ml[277,7175+16])
                                Texp_match
                                expression (lib/misc.ml[266,6772+14]..lib/misc.ml[266,6772+32])
                                  Texp_apply
                                  expression (lib/misc.ml[266,6772+14]..lib/misc.ml[266,6772+18])
                                    Texp_ident "best/1939"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/misc.ml[266,6772+19]..lib/misc.ml[266,6772+29])
                                        Texp_ident "preferable/1940"
                                    <arg>
                                      Nolabel
                                      expression (lib/misc.ml[266,6772+30]..lib/misc.ml[266,6772+32])
                                        Texp_ident "xs/1944"
                                  ]
                                [
                                  <case>
                                    pattern (lib/misc.ml[267,6810+10]..lib/misc.ml[267,6810+16])
                                      Tpat_value
                                      pattern (lib/misc.ml[267,6810+10]..lib/misc.ml[267,6810+16])
                                        Tpat_construct "Some"
                                        [
                                          pattern (lib/misc.ml[267,6810+15]..lib/misc.ml[267,6810+16])
                                            Tpat_var "y/1945"
                                        ]
                                        None
                                    expression (lib/misc.ml[268,6830+12]..lib/misc.ml[274,7094+18])
                                      Texp_ifthenelse
                                      expression (lib/misc.ml[268,6830+15]..lib/misc.ml[268,6830+29])
                                        Texp_apply
                                        expression (lib/misc.ml[268,6830+15]..lib/misc.ml[268,6830+25])
                                          Texp_ident "preferable/1940"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/misc.ml[268,6830+26]..lib/misc.ml[268,6830+27])
                                              Texp_ident "y/1945"
                                          <arg>
                                            Nolabel
                                            expression (lib/misc.ml[268,6830+28]..lib/misc.ml[268,6830+29])
                                              Texp_ident "x/1943"
                                        ]
                                      expression (lib/misc.ml[271,7010+14]..lib/misc.ml[271,7010+20])
                                        Texp_construct "Some"
                                        [
                                          expression (lib/misc.ml[271,7010+19]..lib/misc.ml[271,7010+20])
                                            Texp_ident "y/1945"
                                        ]
                                      Some
                                        expression (lib/misc.ml[274,7094+14]..lib/misc.ml[274,7094+18])
                                          Texp_construct "None"
                                          []
                                  <case>
                                    pattern (lib/misc.ml[275,7113+10]..lib/misc.ml[275,7113+14])
                                      Tpat_value
                                      pattern (lib/misc.ml[275,7113+10]..lib/misc.ml[275,7113+14])
                                        Tpat_construct "None"
                                        []
                                        None
                                    expression (lib/misc.ml[277,7175+12]..lib/misc.ml[277,7175+16])
                                      Texp_construct "None"
                                      []
                                ]
                      ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[279,7193+0]..lib/misc.ml[288,7382+24])
    Tstr_value Rec
    [
      <def>
        pattern (lib/misc.ml[279,7193+8]..lib/misc.ml[279,7193+15])
          Tpat_var "levels1/1946"
        expression (lib/misc.ml[279,7193+16]..lib/misc.ml[288,7382+24]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[279,7193+16]..lib/misc.ml[279,7193+19])
                Tpat_var "cmp/1947"
              expression (lib/misc.ml[279,7193+20]..lib/misc.ml[288,7382+24]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[279,7193+20]..lib/misc.ml[279,7193+22])
                      Tpat_var "x1/1948"
                    expression (lib/misc.ml[279,7193+23]..lib/misc.ml[288,7382+24]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/misc.ml[279,7193+23]..lib/misc.ml[279,7193+25])
                            Tpat_var "xs/1949"
                          expression (lib/misc.ml[280,7221+2]..lib/misc.ml[288,7382+24])
                            Texp_match
                            expression (lib/misc.ml[280,7221+8]..lib/misc.ml[280,7221+10])
                              Texp_ident "xs/1949"
                            [
                              <case>
                                pattern (lib/misc.ml[281,7237+4]..lib/misc.ml[281,7237+6])
                                  Tpat_value
                                  pattern (lib/misc.ml[281,7237+4]..lib/misc.ml[281,7237+6])
                                    Tpat_construct "[]"
                                    []
                                    None
                                expression (lib/misc.ml[282,7247+6]..lib/misc.ml[282,7247+14])
                                  Texp_tuple
                                  [
                                    expression (lib/misc.ml[282,7247+6]..lib/misc.ml[282,7247+10])
                                      Texp_construct "::"
                                      [
                                        expression (lib/misc.ml[282,7247+7]..lib/misc.ml[282,7247+9])
                                          Texp_ident "x1/1948"
                                        expression (lib/misc.ml[282,7247+9]..lib/misc.ml[282,7247+10]) ghost
                                          Texp_construct "[]"
                                          []
                                      ]
                                    expression (lib/misc.ml[282,7247+12]..lib/misc.ml[282,7247+14])
                                      Texp_construct "[]"
                                      []
                                  ]
                              <case>
                                pattern (lib/misc.ml[283,7262+4]..lib/misc.ml[283,7262+12])
                                  Tpat_value
                                  pattern (lib/misc.ml[283,7262+4]..lib/misc.ml[283,7262+12])
                                    Tpat_construct "::"
                                    [
                                      pattern (lib/misc.ml[283,7262+4]..lib/misc.ml[283,7262+6])
                                        Tpat_var "x2/1950"
                                      pattern (lib/misc.ml[283,7262+10]..lib/misc.ml[283,7262+12])
                                        Tpat_var "xs/1951"
                                    ]
                                    None
                                expression (lib/misc.ml[284,7278+6]..lib/misc.ml[288,7382+24])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/misc.ml[284,7278+10]..lib/misc.ml[284,7278+18])
                                        Tpat_tuple
                                        [
                                          pattern (lib/misc.ml[284,7278+10]..lib/misc.ml[284,7278+13])
                                            Tpat_var "ys1/1952"
                                          pattern (lib/misc.ml[284,7278+15]..lib/misc.ml[284,7278+18])
                                            Tpat_var "yss/1953"
                                        ]
                                      expression (lib/misc.ml[284,7278+21]..lib/misc.ml[284,7278+38])
                                        Texp_apply
                                        expression (lib/misc.ml[284,7278+21]..lib/misc.ml[284,7278+28])
                                          Texp_ident "levels1/1946"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/misc.ml[284,7278+29]..lib/misc.ml[284,7278+32])
                                              Texp_ident "cmp/1947"
                                          <arg>
                                            Nolabel
                                            expression (lib/misc.ml[284,7278+33]..lib/misc.ml[284,7278+35])
                                              Texp_ident "x2/1950"
                                          <arg>
                                            Nolabel
                                            expression (lib/misc.ml[284,7278+36]..lib/misc.ml[284,7278+38])
                                              Texp_ident "xs/1951"
                                        ]
                                  ]
                                  expression (lib/misc.ml[285,7320+6]..lib/misc.ml[288,7382+24])
                                    Texp_ifthenelse
                                    expression (lib/misc.ml[285,7320+9]..lib/misc.ml[285,7320+22])
                                      Texp_apply
                                      expression (lib/misc.ml[285,7320+19]..lib/misc.ml[285,7320+20])
                                        Texp_ident "Stdlib!.="
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/misc.ml[285,7320+9]..lib/misc.ml[285,7320+18])
                                            Texp_apply
                                            expression (lib/misc.ml[285,7320+9]..lib/misc.ml[285,7320+12])
                                              Texp_ident "cmp/1947"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/misc.ml[285,7320+13]..lib/misc.ml[285,7320+15])
                                                  Texp_ident "x1/1948"
                                              <arg>
                                                Nolabel
                                                expression (lib/misc.ml[285,7320+16]..lib/misc.ml[285,7320+18])
                                                  Texp_ident "x2/1950"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/misc.ml[285,7320+21]..lib/misc.ml[285,7320+22])
                                            Texp_constant Const_int 0
                                      ]
                                    expression (lib/misc.ml[286,7348+8]..lib/misc.ml[286,7348+22])
                                      Texp_tuple
                                      [
                                        expression (lib/misc.ml[286,7348+8]..lib/misc.ml[286,7348+17])
                                          Texp_construct "::"
                                          [
                                            expression (lib/misc.ml[286,7348+8]..lib/misc.ml[286,7348+10])
                                              Texp_ident "x1/1948"
                                            expression (lib/misc.ml[286,7348+14]..lib/misc.ml[286,7348+17])
                                              Texp_ident "ys1/1952"
                                          ]
                                        expression (lib/misc.ml[286,7348+19]..lib/misc.ml[286,7348+22])
                                          Texp_ident "yss/1953"
                                      ]
                                    Some
                                      expression (lib/misc.ml[288,7382+8]..lib/misc.ml[288,7382+24])
                                        Texp_tuple
                                        [
                                          expression (lib/misc.ml[288,7382+8]..lib/misc.ml[288,7382+12])
                                            Texp_construct "::"
                                            [
                                              expression (lib/misc.ml[288,7382+9]..lib/misc.ml[288,7382+11])
                                                Texp_ident "x1/1948"
                                              expression (lib/misc.ml[288,7382+11]..lib/misc.ml[288,7382+12]) ghost
                                                Texp_construct "[]"
                                                []
                                            ]
                                          expression (lib/misc.ml[288,7382+14]..lib/misc.ml[288,7382+24])
                                            Texp_construct "::"
                                            [
                                              expression (lib/misc.ml[288,7382+14]..lib/misc.ml[288,7382+17])
                                                Texp_ident "ys1/1952"
                                              expression (lib/misc.ml[288,7382+21]..lib/misc.ml[288,7382+24])
                                                Texp_ident "yss/1953"
                                            ]
                                        ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[290,7408+0]..lib/misc.ml[296,7521+16])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[290,7408+4]..lib/misc.ml[290,7408+10])
          Tpat_var "levels/1954"
        expression (lib/misc.ml[290,7408+11]..lib/misc.ml[296,7521+16]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[290,7408+11]..lib/misc.ml[290,7408+14])
                Tpat_var "cmp/1956"
              expression (lib/misc.ml[290,7408+15]..lib/misc.ml[296,7521+16]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[290,7408+15]..lib/misc.ml[290,7408+17])
                      Tpat_var "xs/1957"
                    expression (lib/misc.ml[291,7428+2]..lib/misc.ml[296,7521+16])
                      Texp_match
                      expression (lib/misc.ml[291,7428+8]..lib/misc.ml[291,7428+10])
                        Texp_ident "xs/1957"
                      [
                        <case>
                          pattern (lib/misc.ml[292,7444+4]..lib/misc.ml[292,7444+6])
                            Tpat_value
                            pattern (lib/misc.ml[292,7444+4]..lib/misc.ml[292,7444+6])
                              Tpat_construct "[]"
                              []
                              None
                          expression (lib/misc.ml[293,7454+6]..lib/misc.ml[293,7454+8])
                            Texp_construct "[]"
                            []
                        <case>
                          pattern (lib/misc.ml[294,7463+4]..lib/misc.ml[294,7463+12])
                            Tpat_value
                            pattern (lib/misc.ml[294,7463+4]..lib/misc.ml[294,7463+12])
                              Tpat_construct "::"
                              [
                                pattern (lib/misc.ml[294,7463+4]..lib/misc.ml[294,7463+6])
                                  Tpat_var "x1/1958"
                                pattern (lib/misc.ml[294,7463+10]..lib/misc.ml[294,7463+12])
                                  Tpat_var "xs/1959"
                              ]
                              None
                          expression (lib/misc.ml[295,7479+6]..lib/misc.ml[296,7521+16])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (lib/misc.ml[295,7479+10]..lib/misc.ml[295,7479+18])
                                  Tpat_tuple
                                  [
                                    pattern (lib/misc.ml[295,7479+10]..lib/misc.ml[295,7479+13])
                                      Tpat_var "ys1/1960"
                                    pattern (lib/misc.ml[295,7479+15]..lib/misc.ml[295,7479+18])
                                      Tpat_var "yss/1961"
                                  ]
                                expression (lib/misc.ml[295,7479+21]..lib/misc.ml[295,7479+38])
                                  Texp_apply
                                  expression (lib/misc.ml[295,7479+21]..lib/misc.ml[295,7479+28])
                                    Texp_ident "levels1/1946"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/misc.ml[295,7479+29]..lib/misc.ml[295,7479+32])
                                        Texp_ident "cmp/1956"
                                    <arg>
                                      Nolabel
                                      expression (lib/misc.ml[295,7479+33]..lib/misc.ml[295,7479+35])
                                        Texp_ident "x1/1958"
                                    <arg>
                                      Nolabel
                                      expression (lib/misc.ml[295,7479+36]..lib/misc.ml[295,7479+38])
                                        Texp_ident "xs/1959"
                                  ]
                            ]
                            expression (lib/misc.ml[296,7521+6]..lib/misc.ml[296,7521+16])
                              Texp_construct "::"
                              [
                                expression (lib/misc.ml[296,7521+6]..lib/misc.ml[296,7521+9])
                                  Texp_ident "ys1/1960"
                                expression (lib/misc.ml[296,7521+13]..lib/misc.ml[296,7521+16])
                                  Texp_ident "yss/1961"
                              ]
                      ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[304,7849+0]..lib/misc.ml[313,8247+47])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[304,7849+4]..lib/misc.ml[304,7849+10])
          Tpat_var "insert/1962"
        expression (lib/misc.ml[304,7849+11]..lib/misc.ml[313,8247+47]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[304,7849+11]..lib/misc.ml[304,7849+15])
                Tpat_var "<=/1964"
              expression (lib/misc.ml[304,7849+16]..lib/misc.ml[313,8247+47]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[304,7849+16]..lib/misc.ml[304,7849+17])
                      Tpat_var "x/1965"
                    expression (lib/misc.ml[304,7849+18]..lib/misc.ml[313,8247+47]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/misc.ml[304,7849+18]..lib/misc.ml[304,7849+20])
                            Tpat_var "ys/1966"
                          expression (lib/misc.ml[308,8083+2]..lib/misc.ml[313,8247+47])
                            Texp_ifthenelse
                            expression (lib/misc.ml[308,8083+5]..lib/misc.ml[308,8083+37])
                              Texp_apply
                              expression (lib/misc.ml[308,8083+5]..lib/misc.ml[308,8083+16])
                                Texp_ident "Stdlib!.List.exists"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/misc.ml[308,8083+17]..lib/misc.ml[308,8083+34])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (lib/misc.ml[308,8083+22]..lib/misc.ml[308,8083+23])
                                          Tpat_var "y/1967"
                                        expression (lib/misc.ml[308,8083+27]..lib/misc.ml[308,8083+33])
                                          Texp_apply
                                          expression (lib/misc.ml[308,8083+29]..lib/misc.ml[308,8083+31])
                                            Texp_ident "<=/1964"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/misc.ml[308,8083+27]..lib/misc.ml[308,8083+28])
                                                Texp_ident "x/1965"
                                            <arg>
                                              Nolabel
                                              expression (lib/misc.ml[308,8083+32]..lib/misc.ml[308,8083+33])
                                                Texp_ident "y/1967"
                                          ]
                                    ]
                                <arg>
                                  Nolabel
                                  expression (lib/misc.ml[308,8083+35]..lib/misc.ml[308,8083+37])
                                    Texp_ident "ys/1966"
                              ]
                            expression (lib/misc.ml[309,8126+4]..lib/misc.ml[309,8126+6])
                              Texp_ident "ys/1966"
                            Some
                              expression (lib/misc.ml[313,8247+4]..lib/misc.ml[313,8247+47])
                                Texp_construct "::"
                                [
                                  expression (lib/misc.ml[313,8247+4]..lib/misc.ml[313,8247+5])
                                    Texp_ident "x/1965"
                                  expression (lib/misc.ml[313,8247+9]..lib/misc.ml[313,8247+47])
                                    Texp_apply
                                    expression (lib/misc.ml[313,8247+9]..lib/misc.ml[313,8247+20])
                                      Texp_ident "Stdlib!.List.filter"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[313,8247+21]..lib/misc.ml[313,8247+44])
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (lib/misc.ml[313,8247+26]..lib/misc.ml[313,8247+27])
                                                Tpat_var "y/1968"
                                              expression (lib/misc.ml[313,8247+31]..lib/misc.ml[313,8247+43])
                                                Texp_apply
                                                expression (lib/misc.ml[313,8247+31]..lib/misc.ml[313,8247+34])
                                                  Texp_ident "Stdlib!.not"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/misc.ml[313,8247+35]..lib/misc.ml[313,8247+43])
                                                      Texp_apply
                                                      expression (lib/misc.ml[313,8247+38]..lib/misc.ml[313,8247+40])
                                                        Texp_ident "<=/1964"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/misc.ml[313,8247+36]..lib/misc.ml[313,8247+37])
                                                            Texp_ident "y/1968"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/misc.ml[313,8247+41]..lib/misc.ml[313,8247+42])
                                                            Texp_ident "x/1965"
                                                      ]
                                                ]
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[313,8247+45]..lib/misc.ml[313,8247+47])
                                          Texp_ident "ys/1966"
                                    ]
                                ]
                      ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[325,8826+0]..lib/misc.ml[326,8845+37])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[325,8826+4]..lib/misc.ml[325,8826+8])
          Tpat_var "trim/1969"
        expression (lib/misc.ml[325,8826+9]..lib/misc.ml[326,8845+37]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[325,8826+9]..lib/misc.ml[325,8826+13])
                Tpat_var "<=/1971"
              expression (lib/misc.ml[325,8826+14]..lib/misc.ml[326,8845+37]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[325,8826+14]..lib/misc.ml[325,8826+16])
                      Tpat_var "xs/1972"
                    expression (lib/misc.ml[326,8845+2]..lib/misc.ml[326,8845+37])
                      Texp_apply
                      expression (lib/misc.ml[326,8845+2]..lib/misc.ml[326,8845+17])
                        Texp_ident "Stdlib!.List.fold_right"
                      [
                        <arg>
                          Nolabel
                          expression (lib/misc.ml[326,8845+18]..lib/misc.ml[326,8845+31])
                            Texp_apply
                            expression (lib/misc.ml[326,8845+19]..lib/misc.ml[326,8845+25])
                              Texp_ident "insert/1962"
                            [
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[326,8845+26]..lib/misc.ml[326,8845+30])
                                  Texp_ident "<=/1971"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/misc.ml[326,8845+32]..lib/misc.ml[326,8845+34])
                            Texp_ident "xs/1972"
                        <arg>
                          Nolabel
                          expression (lib/misc.ml[326,8845+35]..lib/misc.ml[326,8845+37])
                            Texp_construct "[]"
                            []
                      ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[328,8884+0]..lib/misc.ml[336,9012+21])
    Tstr_value Rec
    [
      <def>
        pattern (lib/misc.ml[328,8884+8]..lib/misc.ml[328,8884+12])
          Tpat_var "dup1/1973"
        expression (lib/misc.ml[328,8884+13]..lib/misc.ml[336,9012+21]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[328,8884+13]..lib/misc.ml[328,8884+16])
                Tpat_var "cmp/1974"
              expression (lib/misc.ml[328,8884+17]..lib/misc.ml[336,9012+21]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[328,8884+17]..lib/misc.ml[328,8884+18])
                      Tpat_var "x/1975"
                    expression (lib/misc.ml[328,8884+19]..lib/misc.ml[336,9012+21]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/misc.ml[328,8884+19]..lib/misc.ml[328,8884+21])
                            Tpat_var "ys/1976"
                          expression (lib/misc.ml[329,8908+2]..lib/misc.ml[336,9012+21])
                            Texp_match
                            expression (lib/misc.ml[329,8908+8]..lib/misc.ml[329,8908+10])
                              Texp_ident "ys/1976"
                            [
                              <case>
                                pattern (lib/misc.ml[330,8924+4]..lib/misc.ml[330,8924+6])
                                  Tpat_value
                                  pattern (lib/misc.ml[330,8924+4]..lib/misc.ml[330,8924+6])
                                    Tpat_construct "[]"
                                    []
                                    None
                                expression (lib/misc.ml[331,8934+6]..lib/misc.ml[331,8934+10])
                                  Texp_construct "None"
                                  []
                              <case>
                                pattern (lib/misc.ml[332,8945+4]..lib/misc.ml[332,8945+11])
                                  Tpat_value
                                  pattern (lib/misc.ml[332,8945+4]..lib/misc.ml[332,8945+11])
                                    Tpat_construct "::"
                                    [
                                      pattern (lib/misc.ml[332,8945+4]..lib/misc.ml[332,8945+5])
                                        Tpat_var "y/1977"
                                      pattern (lib/misc.ml[332,8945+9]..lib/misc.ml[332,8945+11])
                                        Tpat_var "ys/1978"
                                    ]
                                    None
                                expression (lib/misc.ml[333,8960+6]..lib/misc.ml[336,9012+21])
                                  Texp_ifthenelse
                                  expression (lib/misc.ml[333,8960+9]..lib/misc.ml[333,8960+20])
                                    Texp_apply
                                    expression (lib/misc.ml[333,8960+17]..lib/misc.ml[333,8960+18])
                                      Texp_ident "Stdlib!.="
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[333,8960+9]..lib/misc.ml[333,8960+16])
                                          Texp_apply
                                          expression (lib/misc.ml[333,8960+9]..lib/misc.ml[333,8960+12])
                                            Texp_ident "cmp/1974"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/misc.ml[333,8960+13]..lib/misc.ml[333,8960+14])
                                                Texp_ident "x/1975"
                                            <arg>
                                              Nolabel
                                              expression (lib/misc.ml[333,8960+15]..lib/misc.ml[333,8960+16])
                                                Texp_ident "y/1977"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[333,8960+19]..lib/misc.ml[333,8960+20])
                                          Texp_constant Const_int 0
                                    ]
                                  expression (lib/misc.ml[334,8986+8]..lib/misc.ml[334,8986+14])
                                    Texp_construct "Some"
                                    [
                                      expression (lib/misc.ml[334,8986+13]..lib/misc.ml[334,8986+14])
                                        Texp_ident "x/1975"
                                    ]
                                  Some
                                    expression (lib/misc.ml[336,9012+8]..lib/misc.ml[336,9012+21])
                                      Texp_apply
                                      expression (lib/misc.ml[336,9012+8]..lib/misc.ml[336,9012+12])
                                        Texp_ident "dup1/1973"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/misc.ml[336,9012+13]..lib/misc.ml[336,9012+16])
                                            Texp_ident "cmp/1974"
                                        <arg>
                                          Nolabel
                                          expression (lib/misc.ml[336,9012+17]..lib/misc.ml[336,9012+18])
                                            Texp_ident "y/1977"
                                        <arg>
                                          Nolabel
                                          expression (lib/misc.ml[336,9012+19]..lib/misc.ml[336,9012+21])
                                            Texp_ident "ys/1978"
                                      ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[338,9035+0]..lib/misc.ml[343,9104+19])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[338,9035+4]..lib/misc.ml[338,9035+7])
          Tpat_var "dup/1979"
        expression (lib/misc.ml[338,9035+8]..lib/misc.ml[343,9104+19]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[338,9035+8]..lib/misc.ml[338,9035+11])
                Tpat_var "cmp/1981"
              expression (lib/misc.ml[338,9035+12]..lib/misc.ml[343,9104+19]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[338,9035+12]..lib/misc.ml[338,9035+14])
                      Tpat_var "xs/1982"
                    expression (lib/misc.ml[339,9052+2]..lib/misc.ml[343,9104+19])
                      Texp_match
                      expression (lib/misc.ml[339,9052+8]..lib/misc.ml[339,9052+10])
                        Texp_ident "xs/1982"
                      [
                        <case>
                          pattern (lib/misc.ml[340,9068+4]..lib/misc.ml[340,9068+6])
                            Tpat_value
                            pattern (lib/misc.ml[340,9068+4]..lib/misc.ml[340,9068+6])
                              Tpat_construct "[]"
                              []
                              None
                          expression (lib/misc.ml[341,9078+6]..lib/misc.ml[341,9078+10])
                            Texp_construct "None"
                            []
                        <case>
                          pattern (lib/misc.ml[342,9089+4]..lib/misc.ml[342,9089+11])
                            Tpat_value
                            pattern (lib/misc.ml[342,9089+4]..lib/misc.ml[342,9089+11])
                              Tpat_construct "::"
                              [
                                pattern (lib/misc.ml[342,9089+4]..lib/misc.ml[342,9089+5])
                                  Tpat_var "x/1983"
                                pattern (lib/misc.ml[342,9089+9]..lib/misc.ml[342,9089+11])
                                  Tpat_var "xs/1984"
                              ]
                              None
                          expression (lib/misc.ml[343,9104+6]..lib/misc.ml[343,9104+19])
                            Texp_apply
                            expression (lib/misc.ml[343,9104+6]..lib/misc.ml[343,9104+10])
                              Texp_ident "dup1/1973"
                            [
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[343,9104+11]..lib/misc.ml[343,9104+14])
                                  Texp_ident "cmp/1981"
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[343,9104+15]..lib/misc.ml[343,9104+16])
                                  Texp_ident "x/1983"
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[343,9104+17]..lib/misc.ml[343,9104+19])
                                  Texp_ident "xs/1984"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[345,9125+0]..lib/misc.ml[350,9206+10])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[345,9125+4]..lib/misc.ml[345,9125+8])
          Tpat_var "once/1985"
        expression (lib/misc.ml[345,9125+9]..lib/misc.ml[350,9206+10]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[345,9125+9]..lib/misc.ml[345,9125+10])
                Tpat_var "x/1987"
              expression (lib/misc.ml[345,9125+11]..lib/misc.ml[350,9206+10]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[345,9125+11]..lib/misc.ml[345,9125+12])
                      Tpat_var "y/1988"
                    expression (lib/misc.ml[346,9140+2]..lib/misc.ml[350,9206+10])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/misc.ml[346,9140+6]..lib/misc.ml[346,9140+7])
                            Tpat_var "s/1989"
                          expression (lib/misc.ml[346,9140+10]..lib/misc.ml[346,9140+15])
                            Texp_apply
                            expression (lib/misc.ml[346,9140+10]..lib/misc.ml[346,9140+13])
                              Texp_ident "Stdlib!.ref"
                            [
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[346,9140+14]..lib/misc.ml[346,9140+15])
                                  Texp_ident "x/1987"
                            ]
                      ]
                      expression (lib/misc.ml[347,9159+2]..lib/misc.ml[350,9206+10])
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (lib/misc.ml[347,9159+6]..lib/misc.ml[347,9159+8])
                              Tpat_construct "()"
                              []
                              None
                            expression (lib/misc.ml[348,9171+4]..lib/misc.ml[350,9206+10])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (lib/misc.ml[348,9171+8]..lib/misc.ml[348,9171+14])
                                    Tpat_var "result/1990"
                                  expression (lib/misc.ml[348,9171+17]..lib/misc.ml[348,9171+19])
                                    Texp_apply
                                    expression (lib/misc.ml[348,9171+17]..lib/misc.ml[348,9171+18])
                                      Texp_ident "Stdlib!.!"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[348,9171+18]..lib/misc.ml[348,9171+19])
                                          Texp_ident "s/1989"
                                    ]
                              ]
                              expression (lib/misc.ml[349,9194+4]..lib/misc.ml[350,9206+10])
                                Texp_sequence
                                expression (lib/misc.ml[349,9194+4]..lib/misc.ml[349,9194+10])
                                  Texp_apply
                                  expression (lib/misc.ml[349,9194+6]..lib/misc.ml[349,9194+8])
                                    Texp_ident "Stdlib!.:="
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/misc.ml[349,9194+4]..lib/misc.ml[349,9194+5])
                                        Texp_ident "s/1989"
                                    <arg>
                                      Nolabel
                                      expression (lib/misc.ml[349,9194+9]..lib/misc.ml[349,9194+10])
                                        Texp_ident "y/1988"
                                  ]
                                expression (lib/misc.ml[350,9206+4]..lib/misc.ml[350,9206+10])
                                  Texp_ident "result/1990"
                        ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[352,9218+0]..lib/misc.ml[364,9491+3])
    Tstr_module
    ListExtras/2004
      module_expr (lib/misc.ml[352,9218+20]..lib/misc.ml[364,9491+3])
        Tmod_structure
        [
          structure_item (lib/misc.ml[353,9245+2]..lib/misc.ml[361,9420+13])
            Tstr_value Rec
            [
              <def>
                pattern (lib/misc.ml[353,9245+10]..lib/misc.ml[353,9245+15])
                  Tpat_var "equal/1992"
                expression (lib/misc.ml[353,9245+16]..lib/misc.ml[361,9420+13]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (lib/misc.ml[353,9245+16]..lib/misc.ml[353,9245+19])
                        Tpat_var "=/1993"
                      expression (lib/misc.ml[353,9245+20]..lib/misc.ml[361,9420+13]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (lib/misc.ml[353,9245+20]..lib/misc.ml[353,9245+22])
                              Tpat_var "xs/1994"
                            expression (lib/misc.ml[353,9245+23]..lib/misc.ml[361,9420+13]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (lib/misc.ml[353,9245+23]..lib/misc.ml[353,9245+25])
                                    Tpat_var "ys/1995"
                                  expression (lib/misc.ml[354,9273+4]..lib/misc.ml[361,9420+13])
                                    Texp_match
                                    expression (lib/misc.ml[354,9273+10]..lib/misc.ml[354,9273+16])
                                      Texp_tuple
                                      [
                                        expression (lib/misc.ml[354,9273+10]..lib/misc.ml[354,9273+12])
                                          Texp_ident "xs/1994"
                                        expression (lib/misc.ml[354,9273+14]..lib/misc.ml[354,9273+16])
                                          Texp_ident "ys/1995"
                                      ]
                                    [
                                      <case>
                                        pattern (lib/misc.ml[355,9295+6]..lib/misc.ml[355,9295+12])
                                          Tpat_value
                                          pattern (lib/misc.ml[355,9295+6]..lib/misc.ml[355,9295+12])
                                            Tpat_tuple
                                            [
                                              pattern (lib/misc.ml[355,9295+6]..lib/misc.ml[355,9295+8])
                                                Tpat_construct "[]"
                                                []
                                                None
                                              pattern (lib/misc.ml[355,9295+10]..lib/misc.ml[355,9295+12])
                                                Tpat_construct "[]"
                                                []
                                                None
                                            ]
                                        expression (lib/misc.ml[356,9311+8]..lib/misc.ml[356,9311+12])
                                          Texp_construct "true"
                                          []
                                      <case>
                                        pattern (lib/misc.ml[357,9324+6]..lib/misc.ml[357,9324+22])
                                          Tpat_value
                                          pattern (lib/misc.ml[357,9324+6]..lib/misc.ml[357,9324+22])
                                            Tpat_tuple
                                            [
                                              pattern (lib/misc.ml[357,9324+6]..lib/misc.ml[357,9324+13])
                                                Tpat_construct "::"
                                                [
                                                  pattern (lib/misc.ml[357,9324+6]..lib/misc.ml[357,9324+7])
                                                    Tpat_var "x/1996"
                                                  pattern (lib/misc.ml[357,9324+11]..lib/misc.ml[357,9324+13])
                                                    Tpat_var "xs/1997"
                                                ]
                                                None
                                              pattern (lib/misc.ml[357,9324+15]..lib/misc.ml[357,9324+22])
                                                Tpat_construct "::"
                                                [
                                                  pattern (lib/misc.ml[357,9324+15]..lib/misc.ml[357,9324+16])
                                                    Tpat_var "y/1998"
                                                  pattern (lib/misc.ml[357,9324+20]..lib/misc.ml[357,9324+22])
                                                    Tpat_var "ys/1999"
                                                ]
                                                None
                                            ]
                                        expression (lib/misc.ml[358,9350+8]..lib/misc.ml[358,9350+32])
                                          Texp_apply
                                          expression (lib/misc.ml[358,9350+14]..lib/misc.ml[358,9350+16])
                                            Texp_ident "Stdlib!.&&"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/misc.ml[358,9350+8]..lib/misc.ml[358,9350+13])
                                                Texp_apply
                                                expression (lib/misc.ml[358,9350+10]..lib/misc.ml[358,9350+11])
                                                  Texp_ident "=/1993"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/misc.ml[358,9350+8]..lib/misc.ml[358,9350+9])
                                                      Texp_ident "x/1996"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/misc.ml[358,9350+12]..lib/misc.ml[358,9350+13])
                                                      Texp_ident "y/1998"
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (lib/misc.ml[358,9350+17]..lib/misc.ml[358,9350+32])
                                                Texp_apply
                                                expression (lib/misc.ml[358,9350+17]..lib/misc.ml[358,9350+22])
                                                  Texp_ident "equal/1992"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/misc.ml[358,9350+23]..lib/misc.ml[358,9350+26])
                                                      Texp_ident "=/1993"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/misc.ml[358,9350+27]..lib/misc.ml[358,9350+29])
                                                      Texp_ident "xs/1997"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/misc.ml[358,9350+30]..lib/misc.ml[358,9350+32])
                                                      Texp_ident "ys/1999"
                                                ]
                                          ]
                                      <case>
                                        pattern (lib/misc.ml[359,9383+6]..lib/misc.ml[360,9400+16])
                                          Tpat_or
                                          pattern (lib/misc.ml[359,9383+6]..lib/misc.ml[359,9383+16])
                                            Tpat_value
                                            pattern (lib/misc.ml[359,9383+6]..lib/misc.ml[359,9383+16])
                                              Tpat_tuple
                                              [
                                                pattern (lib/misc.ml[359,9383+6]..lib/misc.ml[359,9383+12])
                                                  Tpat_construct "::"
                                                  [
                                                    pattern (lib/misc.ml[359,9383+6]..lib/misc.ml[359,9383+7])
                                                      Tpat_any
                                                    pattern (lib/misc.ml[359,9383+11]..lib/misc.ml[359,9383+12])
                                                      Tpat_any
                                                  ]
                                                  None
                                                pattern (lib/misc.ml[359,9383+14]..lib/misc.ml[359,9383+16])
                                                  Tpat_construct "[]"
                                                  []
                                                  None
                                              ]
                                          pattern (lib/misc.ml[360,9400+6]..lib/misc.ml[360,9400+16])
                                            Tpat_value
                                            pattern (lib/misc.ml[360,9400+6]..lib/misc.ml[360,9400+16])
                                              Tpat_tuple
                                              [
                                                pattern (lib/misc.ml[360,9400+6]..lib/misc.ml[360,9400+8])
                                                  Tpat_construct "[]"
                                                  []
                                                  None
                                                pattern (lib/misc.ml[360,9400+10]..lib/misc.ml[360,9400+16])
                                                  Tpat_construct "::"
                                                  [
                                                    pattern (lib/misc.ml[360,9400+10]..lib/misc.ml[360,9400+11])
                                                      Tpat_any
                                                    pattern (lib/misc.ml[360,9400+15]..lib/misc.ml[360,9400+16])
                                                      Tpat_any
                                                  ]
                                                  None
                                              ]
                                        expression (lib/misc.ml[361,9420+8]..lib/misc.ml[361,9420+13])
                                          Texp_construct "false"
                                          []
                                    ]
                              ]
                        ]
                  ]
            ]
          structure_item (lib/misc.ml[362,9434+2]..lib/misc.ml[363,9455+35])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/misc.ml[362,9434+6]..lib/misc.ml[362,9434+10])
                  Tpat_var "hash/2000"
                expression (lib/misc.ml[362,9434+11]..lib/misc.ml[363,9455+35]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (lib/misc.ml[362,9434+11]..lib/misc.ml[362,9434+15])
                        Tpat_var "hash/2002"
                      expression (lib/misc.ml[362,9434+16]..lib/misc.ml[363,9455+35]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (lib/misc.ml[362,9434+16]..lib/misc.ml[362,9434+18])
                              Tpat_var "xs/2003"
                            expression (lib/misc.ml[363,9455+4]..lib/misc.ml[363,9455+35])
                              Texp_apply
                              expression (lib/misc.ml[363,9455+4]..lib/misc.ml[363,9455+16])
                                Texp_ident "Stdlib!.Hashtbl.hash"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/misc.ml[363,9455+17]..lib/misc.ml[363,9455+35])
                                    Texp_apply
                                    expression (lib/misc.ml[363,9455+18]..lib/misc.ml[363,9455+26])
                                      Texp_ident "Stdlib!.List.map"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[363,9455+27]..lib/misc.ml[363,9455+31])
                                          Texp_ident "hash/2002"
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[363,9455+32]..lib/misc.ml[363,9455+34])
                                          Texp_ident "xs/2003"
                                    ]
                              ]
                        ]
                  ]
            ]
        ]
  structure_item (lib/misc.ml[366,9496+0]..lib/misc.ml[370,9567+32])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[366,9496+4]..lib/misc.ml[366,9496+7])
          Tpat_var "nth/2005"
        expression (lib/misc.ml[366,9496+10]..lib/misc.ml[370,9567+32])
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[367,9515+4]..lib/misc.ml[367,9515+5])
                Tpat_constant Const_int 1
              expression (lib/misc.ml[367,9515+9]..lib/misc.ml[367,9515+16])
                Texp_constant Const_string("first",(lib/misc.ml[367,9515+10]..lib/misc.ml[367,9515+15]),None)
            <case>
              pattern (lib/misc.ml[368,9532+4]..lib/misc.ml[368,9532+5])
                Tpat_constant Const_int 2
              expression (lib/misc.ml[368,9532+9]..lib/misc.ml[368,9532+17])
                Texp_constant Const_string("second",(lib/misc.ml[368,9532+10]..lib/misc.ml[368,9532+16]),None)
            <case>
              pattern (lib/misc.ml[369,9550+4]..lib/misc.ml[369,9550+5])
                Tpat_constant Const_int 3
              expression (lib/misc.ml[369,9550+9]..lib/misc.ml[369,9550+16])
                Texp_constant Const_string("third",(lib/misc.ml[369,9550+10]..lib/misc.ml[369,9550+15]),None)
            <case>
              pattern (lib/misc.ml[370,9567+4]..lib/misc.ml[370,9567+5])
                Tpat_var "i/2007"
              expression (lib/misc.ml[370,9567+9]..lib/misc.ml[370,9567+32])
                Texp_apply
                expression (lib/misc.ml[370,9567+9]..lib/misc.ml[370,9567+23])
                  Texp_ident "Stdlib!.Printf.sprintf"
                [
                  <arg>
                    Nolabel
                    expression (lib/misc.ml[370,9567+24]..lib/misc.ml[370,9567+30])
                      Texp_construct "CamlinternalFormatBasics.Format"
                      [
                        expression (lib/misc.ml[370,9567+24]..lib/misc.ml[370,9567+30]) ghost
                          Texp_construct "CamlinternalFormatBasics.Int"
                          [
                            expression (lib/misc.ml[370,9567+24]..lib/misc.ml[370,9567+30]) ghost
                              Texp_construct "CamlinternalFormatBasics.Int_d"
                              []
                            expression (lib/misc.ml[370,9567+24]..lib/misc.ml[370,9567+30]) ghost
                              Texp_construct "CamlinternalFormatBasics.No_padding"
                              []
                            expression (lib/misc.ml[370,9567+24]..lib/misc.ml[370,9567+30]) ghost
                              Texp_construct "CamlinternalFormatBasics.No_precision"
                              []
                            expression (lib/misc.ml[370,9567+24]..lib/misc.ml[370,9567+30]) ghost
                              Texp_construct "CamlinternalFormatBasics.String_literal"
                              [
                                expression (lib/misc.ml[370,9567+24]..lib/misc.ml[370,9567+30]) ghost
                                  Texp_constant Const_string("th",(lib/misc.ml[370,9567+24]..lib/misc.ml[370,9567+30]) ghost,None)
                                expression (lib/misc.ml[370,9567+24]..lib/misc.ml[370,9567+30]) ghost
                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                  []
                              ]
                          ]
                        expression (lib/misc.ml[370,9567+24]..lib/misc.ml[370,9567+30]) ghost
                          Texp_constant Const_string("%dth",(lib/misc.ml[370,9567+24]..lib/misc.ml[370,9567+30]) ghost,None)
                      ]
                  <arg>
                    Nolabel
                    expression (lib/misc.ml[370,9567+31]..lib/misc.ml[370,9567+32])
                      Texp_ident "i/2007"
                ]
          ]
    ]
  structure_item (lib/misc.ml[372,9601+0]..lib/misc.ml[376,9669+30])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[372,9601+4]..lib/misc.ml[372,9601+9])
          Tpat_var "count/2008"
        expression (lib/misc.ml[372,9601+12]..lib/misc.ml[376,9669+30])
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[373,9622+4]..lib/misc.ml[373,9622+5])
                Tpat_constant Const_int 1
              expression (lib/misc.ml[373,9622+9]..lib/misc.ml[373,9622+14])
                Texp_constant Const_string("one",(lib/misc.ml[373,9622+10]..lib/misc.ml[373,9622+13]),None)
            <case>
              pattern (lib/misc.ml[374,9637+4]..lib/misc.ml[374,9637+5])
                Tpat_constant Const_int 2
              expression (lib/misc.ml[374,9637+9]..lib/misc.ml[374,9637+14])
                Texp_constant Const_string("two",(lib/misc.ml[374,9637+10]..lib/misc.ml[374,9637+13]),None)
            <case>
              pattern (lib/misc.ml[375,9652+4]..lib/misc.ml[375,9652+5])
                Tpat_constant Const_int 3
              expression (lib/misc.ml[375,9652+9]..lib/misc.ml[375,9652+16])
                Texp_constant Const_string("three",(lib/misc.ml[375,9652+10]..lib/misc.ml[375,9652+15]),None)
            <case>
              pattern (lib/misc.ml[376,9669+4]..lib/misc.ml[376,9669+5])
                Tpat_var "i/2010"
              expression (lib/misc.ml[376,9669+9]..lib/misc.ml[376,9669+30])
                Texp_apply
                expression (lib/misc.ml[376,9669+9]..lib/misc.ml[376,9669+23])
                  Texp_ident "Stdlib!.Printf.sprintf"
                [
                  <arg>
                    Nolabel
                    expression (lib/misc.ml[376,9669+24]..lib/misc.ml[376,9669+28])
                      Texp_construct "CamlinternalFormatBasics.Format"
                      [
                        expression (lib/misc.ml[376,9669+24]..lib/misc.ml[376,9669+28]) ghost
                          Texp_construct "CamlinternalFormatBasics.Int"
                          [
                            expression (lib/misc.ml[376,9669+24]..lib/misc.ml[376,9669+28]) ghost
                              Texp_construct "CamlinternalFormatBasics.Int_d"
                              []
                            expression (lib/misc.ml[376,9669+24]..lib/misc.ml[376,9669+28]) ghost
                              Texp_construct "CamlinternalFormatBasics.No_padding"
                              []
                            expression (lib/misc.ml[376,9669+24]..lib/misc.ml[376,9669+28]) ghost
                              Texp_construct "CamlinternalFormatBasics.No_precision"
                              []
                            expression (lib/misc.ml[376,9669+24]..lib/misc.ml[376,9669+28]) ghost
                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                              []
                          ]
                        expression (lib/misc.ml[376,9669+24]..lib/misc.ml[376,9669+28]) ghost
                          Texp_constant Const_string("%d",(lib/misc.ml[376,9669+24]..lib/misc.ml[376,9669+28]) ghost,None)
                      ]
                  <arg>
                    Nolabel
                    expression (lib/misc.ml[376,9669+29]..lib/misc.ml[376,9669+30])
                      Texp_ident "i/2010"
                ]
          ]
    ]
  structure_item (lib/misc.ml[378,9701+0]..lib/misc.ml[379,9725+48])
    Tstr_value Rec
    [
      <def>
        pattern (lib/misc.ml[378,9701+8]..lib/misc.ml[378,9701+17])
          Tpat_var "list_make/2011"
        expression (lib/misc.ml[378,9701+18]..lib/misc.ml[379,9725+48]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[378,9701+18]..lib/misc.ml[378,9701+19])
                Tpat_var "n/2012"
              expression (lib/misc.ml[378,9701+20]..lib/misc.ml[379,9725+48]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[378,9701+20]..lib/misc.ml[378,9701+21])
                      Tpat_var "x/2013"
                    expression (lib/misc.ml[379,9725+2]..lib/misc.ml[379,9725+48])
                      Texp_ifthenelse
                      expression (lib/misc.ml[379,9725+5]..lib/misc.ml[379,9725+10])
                        Texp_apply
                        expression (lib/misc.ml[379,9725+7]..lib/misc.ml[379,9725+8])
                          Texp_ident "Stdlib!.="
                        [
                          <arg>
                            Nolabel
                            expression (lib/misc.ml[379,9725+5]..lib/misc.ml[379,9725+6])
                              Texp_ident "n/2012"
                          <arg>
                            Nolabel
                            expression (lib/misc.ml[379,9725+9]..lib/misc.ml[379,9725+10])
                              Texp_constant Const_int 0
                        ]
                      expression (lib/misc.ml[379,9725+16]..lib/misc.ml[379,9725+18])
                        Texp_construct "[]"
                        []
                      Some
                        expression (lib/misc.ml[379,9725+24]..lib/misc.ml[379,9725+48])
                          Texp_construct "::"
                          [
                            expression (lib/misc.ml[379,9725+24]..lib/misc.ml[379,9725+25])
                              Texp_ident "x/2013"
                            expression (lib/misc.ml[379,9725+29]..lib/misc.ml[379,9725+48])
                              Texp_apply
                              expression (lib/misc.ml[379,9725+29]..lib/misc.ml[379,9725+38])
                                Texp_ident "list_make/2011"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/misc.ml[379,9725+39]..lib/misc.ml[379,9725+46])
                                    Texp_apply
                                    expression (lib/misc.ml[379,9725+42]..lib/misc.ml[379,9725+43])
                                      Texp_ident "Stdlib!.-"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[379,9725+40]..lib/misc.ml[379,9725+41])
                                          Texp_ident "n/2012"
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[379,9725+44]..lib/misc.ml[379,9725+45])
                                          Texp_constant Const_int 1
                                    ]
                                <arg>
                                  Nolabel
                                  expression (lib/misc.ml[379,9725+47]..lib/misc.ml[379,9725+48])
                                    Texp_ident "x/2013"
                              ]
                          ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[384,9892+0]..lib/misc.ml[391,10010+10])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[384,9892+4]..lib/misc.ml[384,9892+10])
          Tpat_var "digits/2014"
        expression (lib/misc.ml[384,9892+11]..lib/misc.ml[391,10010+10]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[384,9892+11]..lib/misc.ml[384,9892+12])
                Tpat_var "n/2016"
              expression (lib/misc.ml[385,9907+2]..lib/misc.ml[391,10010+10])
                Texp_let Rec
                [
                  <def>
                    pattern (lib/misc.ml[385,9907+10]..lib/misc.ml[385,9907+14])
                      Tpat_var "loop/2017"
                    expression (lib/misc.ml[385,9907+15]..lib/misc.ml[389,9974+30]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/misc.ml[385,9907+15]..lib/misc.ml[385,9907+19])
                            Tpat_var "accu/2018"
                          expression (lib/misc.ml[385,9907+20]..lib/misc.ml[389,9974+30]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (lib/misc.ml[385,9907+20]..lib/misc.ml[385,9907+21])
                                  Tpat_var "n/2019"
                                expression (lib/misc.ml[386,9931+4]..lib/misc.ml[389,9974+30])
                                  Texp_ifthenelse
                                  expression (lib/misc.ml[386,9931+7]..lib/misc.ml[386,9931+13])
                                    Texp_apply
                                    expression (lib/misc.ml[386,9931+9]..lib/misc.ml[386,9931+10])
                                      Texp_ident "Stdlib!.<"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[386,9931+7]..lib/misc.ml[386,9931+8])
                                          Texp_ident "n/2019"
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[386,9931+11]..lib/misc.ml[386,9931+13])
                                          Texp_constant Const_int 10
                                    ]
                                  expression (lib/misc.ml[387,9950+6]..lib/misc.ml[387,9950+14])
                                    Texp_apply
                                    expression (lib/misc.ml[387,9950+11]..lib/misc.ml[387,9950+12])
                                      Texp_ident "Stdlib!.+"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[387,9950+6]..lib/misc.ml[387,9950+10])
                                          Texp_ident "accu/2018"
                                      <arg>
                                        Nolabel
                                        expression (lib/misc.ml[387,9950+13]..lib/misc.ml[387,9950+14])
                                          Texp_constant Const_int 1
                                    ]
                                  Some
                                    expression (lib/misc.ml[389,9974+6]..lib/misc.ml[389,9974+30])
                                      Texp_apply
                                      expression (lib/misc.ml[389,9974+6]..lib/misc.ml[389,9974+10])
                                        Texp_ident "loop/2017"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/misc.ml[389,9974+11]..lib/misc.ml[389,9974+21])
                                            Texp_apply
                                            expression (lib/misc.ml[389,9974+17]..lib/misc.ml[389,9974+18])
                                              Texp_ident "Stdlib!.+"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/misc.ml[389,9974+12]..lib/misc.ml[389,9974+16])
                                                  Texp_ident "accu/2018"
                                              <arg>
                                                Nolabel
                                                expression (lib/misc.ml[389,9974+19]..lib/misc.ml[389,9974+20])
                                                  Texp_constant Const_int 1
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/misc.ml[389,9974+22]..lib/misc.ml[389,9974+30])
                                            Texp_apply
                                            expression (lib/misc.ml[389,9974+25]..lib/misc.ml[389,9974+26])
                                              Texp_ident "Stdlib!./"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/misc.ml[389,9974+23]..lib/misc.ml[389,9974+24])
                                                  Texp_ident "n/2019"
                                              <arg>
                                                Nolabel
                                                expression (lib/misc.ml[389,9974+27]..lib/misc.ml[389,9974+29])
                                                  Texp_constant Const_int 10
                                            ]
                                      ]
                            ]
                      ]
                ]
                expression (lib/misc.ml[391,10010+2]..lib/misc.ml[391,10010+10])
                  Texp_apply
                  expression (lib/misc.ml[391,10010+2]..lib/misc.ml[391,10010+6])
                    Texp_ident "loop/2017"
                  [
                    <arg>
                      Nolabel
                      expression (lib/misc.ml[391,10010+7]..lib/misc.ml[391,10010+8])
                        Texp_constant Const_int 0
                    <arg>
                      Nolabel
                      expression (lib/misc.ml[391,10010+9]..lib/misc.ml[391,10010+10])
                        Texp_ident "n/2016"
                  ]
          ]
    ]
  structure_item (lib/misc.ml[396,10110+0]..lib/misc.ml[397,10124+43])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[396,10110+4]..lib/misc.ml[396,10110+7])
          Tpat_var "pad/2020"
        expression (lib/misc.ml[396,10110+8]..lib/misc.ml[397,10124+43]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[396,10110+8]..lib/misc.ml[396,10110+9])
                Tpat_var "n/2022"
              expression (lib/misc.ml[396,10110+10]..lib/misc.ml[397,10124+43]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[396,10110+10]..lib/misc.ml[396,10110+11])
                      Tpat_var "s/2023"
                    expression (lib/misc.ml[397,10124+2]..lib/misc.ml[397,10124+43])
                      Texp_apply
                      expression (lib/misc.ml[397,10124+40]..lib/misc.ml[397,10124+41])
                        Texp_ident "Stdlib!.^"
                      [
                        <arg>
                          Nolabel
                          expression (lib/misc.ml[397,10124+2]..lib/misc.ml[397,10124+39])
                            Texp_apply
                            expression (lib/misc.ml[397,10124+2]..lib/misc.ml[397,10124+13])
                              Texp_ident "Stdlib!.String.make"
                            [
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[397,10124+14]..lib/misc.ml[397,10124+35])
                                  Texp_apply
                                  expression (lib/misc.ml[397,10124+17]..lib/misc.ml[397,10124+18])
                                    Texp_ident "Stdlib!.-"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/misc.ml[397,10124+15]..lib/misc.ml[397,10124+16])
                                        Texp_ident "n/2022"
                                    <arg>
                                      Nolabel
                                      expression (lib/misc.ml[397,10124+19]..lib/misc.ml[397,10124+34])
                                        Texp_apply
                                        expression (lib/misc.ml[397,10124+19]..lib/misc.ml[397,10124+32])
                                          Texp_ident "Stdlib!.String.length"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/misc.ml[397,10124+33]..lib/misc.ml[397,10124+34])
                                              Texp_ident "s/2023"
                                        ]
                                  ]
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[397,10124+36]..lib/misc.ml[397,10124+39])
                                  Texp_constant Const_char 30
                            ]
                        <arg>
                          Nolabel
                          expression (lib/misc.ml[397,10124+42]..lib/misc.ml[397,10124+43])
                            Texp_ident "s/2023"
                      ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[399,10169+0]..lib/misc.ml[400,10192+40])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[399,10169+4]..lib/misc.ml[399,10169+16])
          Tpat_var "padded_index/2093"
        expression (lib/misc.ml[399,10169+17]..lib/misc.ml[400,10192+40]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/misc.ml[399,10169+17]..lib/misc.ml[399,10169+18])
                Tpat_var "n/2095"
              expression (lib/misc.ml[399,10169+19]..lib/misc.ml[400,10192+40]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/misc.ml[399,10169+19]..lib/misc.ml[399,10169+20])
                      Tpat_var "i/2096"
                    expression (lib/misc.ml[400,10192+2]..lib/misc.ml[400,10192+40])
                      Texp_apply
                      expression (lib/misc.ml[400,10192+2]..lib/misc.ml[400,10192+5])
                        Texp_ident "pad/2020"
                      [
                        <arg>
                          Nolabel
                          expression (lib/misc.ml[400,10192+6]..lib/misc.ml[400,10192+16])
                            Texp_apply
                            expression (lib/misc.ml[400,10192+7]..lib/misc.ml[400,10192+13])
                              Texp_ident "digits/2014"
                            [
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[400,10192+14]..lib/misc.ml[400,10192+15])
                                  Texp_ident "n/2095"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/misc.ml[400,10192+17]..lib/misc.ml[400,10192+40])
                            Texp_apply
                            expression (lib/misc.ml[400,10192+18]..lib/misc.ml[400,10192+32])
                              Texp_ident "Stdlib!.Printf.sprintf"
                            [
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[400,10192+33]..lib/misc.ml[400,10192+37])
                                  Texp_construct "CamlinternalFormatBasics.Format"
                                  [
                                    expression (lib/misc.ml[400,10192+33]..lib/misc.ml[400,10192+37]) ghost
                                      Texp_construct "CamlinternalFormatBasics.Int"
                                      [
                                        expression (lib/misc.ml[400,10192+33]..lib/misc.ml[400,10192+37]) ghost
                                          Texp_construct "CamlinternalFormatBasics.Int_d"
                                          []
                                        expression (lib/misc.ml[400,10192+33]..lib/misc.ml[400,10192+37]) ghost
                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                          []
                                        expression (lib/misc.ml[400,10192+33]..lib/misc.ml[400,10192+37]) ghost
                                          Texp_construct "CamlinternalFormatBasics.No_precision"
                                          []
                                        expression (lib/misc.ml[400,10192+33]..lib/misc.ml[400,10192+37]) ghost
                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                          []
                                      ]
                                    expression (lib/misc.ml[400,10192+33]..lib/misc.ml[400,10192+37]) ghost
                                      Texp_constant Const_string("%d",(lib/misc.ml[400,10192+33]..lib/misc.ml[400,10192+37]) ghost,None)
                                  ]
                              <arg>
                                Nolabel
                                expression (lib/misc.ml[400,10192+38]..lib/misc.ml[400,10192+39])
                                  Texp_ident "i/2096"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/misc.ml[400,10192+40]..lib/misc.ml[400,10192+40]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[400,10192+40]..lib/misc.ml[400,10192+40]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/misc.ml[400,10192+40]..lib/misc.ml[400,10192+40]) ghost
          Texp_apply
          expression (lib/misc.ml[400,10192+40]..lib/misc.ml[400,10192+40]) ghost
            Texp_ident "Ppx_inline_test_lib!.unset_lib"
          [
            <arg>
              Nolabel
              expression (lib/misc.ml[400,10192+40]..lib/misc.ml[400,10192+40]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/misc.ml[400,10192+40]..lib/misc.ml[400,10192+40]) ghost,None)
          ]
    ]
  structure_item (lib/misc.ml[400,10192+40]..lib/misc.ml[400,10192+40]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[400,10192+40]..lib/misc.ml[400,10192+40]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/misc.ml[400,10192+40]..lib/misc.ml[400,10192+40]) ghost
          Texp_apply
          expression (lib/misc.ml[400,10192+40]..lib/misc.ml[400,10192+40]) ghost
            Texp_ident "Expect_test_collector!.Current_file.unset"
          [
            <arg>
              Nolabel
              expression (lib/misc.ml[400,10192+40]..lib/misc.ml[400,10192+40]) ghost
                Texp_construct "()"
                []
          ]
    ]
  structure_item (lib/misc.ml[400,10192+40]..lib/misc.ml[400,10192+40]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[400,10192+40]..lib/misc.ml[400,10192+40]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/misc.ml[400,10192+40]..lib/misc.ml[400,10192+40]) ghost
          Texp_apply
          expression (lib/misc.ml[400,10192+40]..lib/misc.ml[400,10192+40]) ghost
            Texp_ident "Ppx_bench_lib!.Benchmark_accumulator.Current_libname.unset"
          [
            <arg>
              Nolabel
              expression (lib/misc.ml[400,10192+40]..lib/misc.ml[400,10192+40]) ghost
                Texp_construct "()"
                []
          ]
    ]
  structure_item (lib/misc.ml[400,10192+40]..lib/misc.ml[400,10192+40]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/misc.ml[400,10192+40]..lib/misc.ml[400,10192+40]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/misc.ml[400,10192+40]..lib/misc.ml[400,10192+40]) ghost
          Texp_apply
          expression (lib/misc.ml[400,10192+40]..lib/misc.ml[400,10192+40]) ghost
            Texp_ident "Ppx_module_timer_runtime!.record_until"
          [
            <arg>
              Nolabel
              expression (lib/misc.ml[400,10192+40]..lib/misc.ml[400,10192+40]) ghost
                Texp_ident "Ppx_module_timer_runtime!.__MODULE__"
          ]
    ]
]

{<Gbnf_parser__Misc>
 "ListExtras"[module] ->
   {<Gbnf_parser__Misc.192>
    "equal"[value] -> <Gbnf_parser__Misc.181>;
    "hash"[value] -> <Gbnf_parser__Misc.189>;
    };
 "best"[value] -> <Gbnf_parser__Misc.134>;
 "count"[value] -> <Gbnf_parser__Misc.195>;
 "digits"[value] -> <Gbnf_parser__Misc.200>;
 "dup"[value] -> <Gbnf_parser__Misc.171>;
 "dup1"[value] -> <Gbnf_parser__Misc.165>;
 "filter_map"[value] -> <Gbnf_parser__Misc.113>;
 "foldi"[value] -> <Gbnf_parser__Misc.62>;
 "foldij"[value] -> <Gbnf_parser__Misc.57>;
 "foldij_lazy"[value] -> <Gbnf_parser__Misc.66>;
 "insert"[value] -> <Gbnf_parser__Misc.156>;
 "inverse"[value] -> <Gbnf_parser__Misc.34>;
 "iter"[type] -> <Gbnf_parser__Misc.21>;
 "iteri"[value] -> <Gbnf_parser__Misc.54>;
 "iterij"[value] -> <Gbnf_parser__Misc.49>;
 "levels"[value] -> <Gbnf_parser__Misc.149>;
 "levels1"[value] -> <Gbnf_parser__Misc.141>;
 "list_make"[value] -> <Gbnf_parser__Misc.197>;
 "mapd"[value] -> <Gbnf_parser__Misc.2>;
 "mapi"[value] -> <Gbnf_parser__Misc.77>;
 "mapij"[value] -> <Gbnf_parser__Misc.71>;
 "materialize"[value] -> <Gbnf_parser__Misc.43>;
 "new_encode_decode"[value] -> <Gbnf_parser__Misc.119>;
 "normalize"[value] -> <Gbnf_parser__Misc.105>;
 "nth"[value] -> <Gbnf_parser__Misc.193>;
 "once"[value] -> <Gbnf_parser__Misc.176>;
 "pad"[value] -> <Gbnf_parser__Misc.205>;
 "padded_index"[value] -> <Gbnf_parser__Misc.208>;
 "postincrement"[value] -> <Gbnf_parser__Misc.110>;
 "qfold"[value] -> <Gbnf_parser__Misc.80>;
 "qiter"[value] -> <Gbnf_parser__Misc.85>;
 "separated_iter_to_string"[value] -> <Gbnf_parser__Misc.22>;
 "separated_list_to_string"[value] -> <Gbnf_parser__Misc.29>;
 "single"[value] -> <Gbnf_parser__Misc.0>;
 "smap"[value] -> <Gbnf_parser__Misc.88>;
 "smapa"[value] -> <Gbnf_parser__Misc.95>;
 "sum"[value] -> <Gbnf_parser__Misc.12>;
 "support_assoc"[value] -> <Gbnf_parser__Misc.40>;
 "tabulate"[value] -> <Gbnf_parser__Misc.8>;
 "trim"[value] -> <Gbnf_parser__Misc.162>;
 "with_buffer"[value] -> <Gbnf_parser__Misc.17>;
 }

(seq
  (let
    (*match*/3306 =
       (apply (field_imm 3 (global Ppx_module_timer_runtime!))
         #"Gbnf_parser__Misc"))
    0)
  (let
    (*match*/3308 =
       (apply
         (field_imm 0
           (field_imm 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
         "gbnf_parser"))
    0)
  (let
    (*match*/3310 =
       (apply (field_imm 0 (field_imm 5 (global Expect_test_collector!)))
         "lib/misc.ml"))
    0)
  (let
    (*match*/3312 =
       (apply (field_imm 4 (global Ppx_inline_test_lib!)) "gbnf_parser"
         "misc.ml"))
    0)
  (let
    (single/1132 =
       (function param/1135
         (catch
           (if (isint param/1135) (exit 13)
             (let (*match*/3313 =a (field_imm 1 param/1135))
               (if (isint *match*/3313)
                 (let (x/1134 =a (field_imm 0 param/1135)) x/1134) (exit 13))))
          with (13)
           (raise
             (makeblock 0 (global Assert_failure/28!)
               [0: "lib/misc.ml" 18 6])))))
    (setfield_ptr(root-init) 0 (global Gbnf_parser__Misc!) single/1132))
  (letrec
    (mapd/1136
       (function f/1137 param/1142
         (if (isint param/1142) 0
           (let
             (xs/1139 =a (field_imm 1 param/1142)
              x/1138 =a (field_imm 0 param/1142)
              *match*/3317 = (apply f/1137 x/1138)
              y2/1141 =a (field_imm 1 *match*/3317)
              y1/1140 =a (field_imm 0 *match*/3317))
             (makeblock 0 y1/1140
               (makeblock 0 y2/1141 (apply mapd/1136 f/1137 xs/1139)))))))
    (setfield_ptr(root-init) 1 (global Gbnf_parser__Misc!) mapd/1136))
  (let
    (tabulate/1143 =
       (function n/1145[int] f/1146
         (let
           (a/1147 =
              (apply (field_imm 0 (global Stdlib__Array!)) n/1145 f/1146))
           (apply
             (function prim/3319 prim/3318 stub
               (array.get[gen] prim/3319 prim/3318))
             a/1147))))
    (setfield_ptr(root-init) 2 (global Gbnf_parser__Misc!) tabulate/1143))
  (let
    (sum/1196 =
       (function n/1198[int] f/1199 : int
         (let (sum/1200 = (makemutable 0 (int) 0))
           (seq
             (for x/1201 0 to (- n/1198 1)
               (setfield_imm 0 sum/1200
                 (+ (field_int 0 sum/1200) (apply f/1199 x/1201))))
             (field_int 0 sum/1200)))))
    (setfield_ptr(root-init) 3 (global Gbnf_parser__Misc!) sum/1196))
  (let
    (with_buffer/1202 =
       (function n/1204[int] f/1205
         (let
           (b/1206 = (apply (field_imm 0 (global Stdlib__Buffer!)) n/1204))
           (seq (apply f/1205 b/1206)
             (apply (field_imm 1 (global Stdlib__Buffer!)) b/1206)))))
    (setfield_ptr(root-init) 4 (global Gbnf_parser__Misc!) with_buffer/1202))
  (let
    (separated_iter_to_string/1290 =
       (function printer/1292 separator/1293 iter/1294
         (apply (field_imm 4 (global Gbnf_parser__Misc!)) 32
           (function b/1295 : int
             (let (first/1296 = (makemutable 0 (int) 1))
               (apply iter/1294
                 (function x/1297 : int
                   (if (field_int 0 first/1296)
                     (seq
                       (apply (field_imm 15 (global Stdlib__Buffer!)) b/1295
                         (apply printer/1292 x/1297))
                       (setfield_imm 0 first/1296 0))
                     (seq
                       (apply (field_imm 15 (global Stdlib__Buffer!)) b/1295
                         separator/1293)
                       (apply (field_imm 15 (global Stdlib__Buffer!)) b/1295
                         (apply printer/1292 x/1297)))))))))))
    (setfield_ptr(root-init) 5 (global Gbnf_parser__Misc!)
      separated_iter_to_string/1290))
  (let
    (separated_list_to_string/1298 =
       (function printer/1300 separator/1301 xs/1302
         (apply (field_imm 5 (global Gbnf_parser__Misc!)) printer/1300
           separator/1301
           (function f/1303 : int
             (apply (field_imm 17 (global Stdlib__List!)) f/1303 xs/1302)))))
    (setfield_ptr(root-init) 6 (global Gbnf_parser__Misc!)
      separated_list_to_string/1298))
  (let
    (inverse/1370 =
       (function a/1372
         (let
           (table/1373 =
              (apply (field_imm 0 (global Stdlib__Hashtbl!)) 0
                (array.length[gen] a/1372)))
           (seq
             (apply (field_imm 11 (global Stdlib__Array!))
               (function i/1454[int] data/1455 : int
                 (seq
                   (if
                     (not
                       (apply (field_imm 8 (global Stdlib__Hashtbl!))
                         table/1373 data/1455))
                     0
                     (raise
                       (makeblock 0 (global Assert_failure/28!)
                         [0: "lib/misc.ml" 66 4])))
                   (apply (field_imm 4 (global Stdlib__Hashtbl!)) table/1373
                     data/1455 i/1454)))
               a/1372)
             (function data/1456 : int
               (try
                 (apply (field_imm 5 (global Stdlib__Hashtbl!)) table/1373
                   data/1456)
                with exn/3320
                 (catch
                   (if (== exn/3320 (field_imm 7 (global Stdlib!)))
                     (raise
                       (makeblock 0 (global Assert_failure/28!)
                         [0: "lib/misc.ml" 73 6]))
                     (exit 17))
                  with (17) (reraise exn/3320))))))))
    (setfield_ptr(root-init) 7 (global Gbnf_parser__Misc!) inverse/1370))
  (let
    (support_assoc/1457 =
       (function l/1459 x/1460
         (try (apply (field_imm 48 (global Stdlib__List!)) x/1460 l/1459)
          with exn/3321
           (catch
             (if (== exn/3321 (field_imm 7 (global Stdlib!))) x/1460
               (exit 18))
            with (18) (reraise exn/3321)))))
    (setfield_ptr(root-init) 8 (global Gbnf_parser__Misc!)
      support_assoc/1457))
  (let
    (materialize/1461 =
       (function table/1463 x/1464
         (letrec
           (loop/1465
              (function x/1466
                (let
                  (*match*/3322 =
                     (apply (field_imm 5 (global Stdlib__Hashtbl!))
                       table/1463 x/1466))
                  (if (isint *match*/3322) 0
                    (let (x/1467 =a (field_imm 0 *match*/3322))
                      (makeblock 0 x/1467 (apply loop/1465 x/1467)))))))
           (apply loop/1465 x/1464))))
    (setfield_ptr(root-init) 9 (global Gbnf_parser__Misc!) materialize/1461))
  (let
    (iterij/1468 =
       (function i/1470[int] j/1471[int] f/1472 : int
         (for x/1473 i/1470 to (- j/1471 1) (apply f/1472 x/1473))))
    (setfield_ptr(root-init) 10 (global Gbnf_parser__Misc!) iterij/1468))
  (let
    (iteri/1474 =
       (function n/1476[int] f/1477 : int
         (apply (field_imm 10 (global Gbnf_parser__Misc!)) 0 n/1476 f/1477)))
    (setfield_ptr(root-init) 11 (global Gbnf_parser__Misc!) iteri/1474))
  (letrec
    (foldij/1478
       (function i/1479[int] j/1480[int] f/1481 accu/1482
         (if (< i/1479 j/1480)
           (apply foldij/1478 (+ i/1479 1) j/1480 f/1481
             (apply f/1481 i/1479 accu/1482))
           accu/1482)))
    (setfield_ptr(root-init) 12 (global Gbnf_parser__Misc!) foldij/1478))
  (let
    (foldi/1483 =
       (function n/1485[int] f/1486 accu/1487
         (apply (field_imm 12 (global Gbnf_parser__Misc!)) 0 n/1485 f/1486
           accu/1487)))
    (setfield_ptr(root-init) 13 (global Gbnf_parser__Misc!) foldi/1483))
  (letrec
    (foldij_lazy/1488
       (function i/1489[int] j/1490[int] f/1491 accu/1492
         (if (< i/1489 j/1490)
           (apply f/1491 i/1489
             (function param/1493[int]
               (apply foldij_lazy/1488 (+ i/1489 1) j/1490 f/1491 accu/1492)))
           accu/1492)))
    (setfield_ptr(root-init) 14 (global Gbnf_parser__Misc!) foldij_lazy/1488))
  (let
    (mapij/1494 =
       (function start/1496[int] n/1497[int] f/1498
         (apply (field_imm 9 (global Stdlib__List!))
           (apply (field_imm 12 (global Gbnf_parser__Misc!)) start/1496
             n/1497
             (function i/1499[int] accu/1500
               (makeblock 0 (apply f/1498 i/1499) accu/1500))
             0))))
    (setfield_ptr(root-init) 15 (global Gbnf_parser__Misc!) mapij/1494))
  (let
    (mapi/1501 =
       (function n/1503[int] f/1504
         (apply (field_imm 15 (global Gbnf_parser__Misc!)) 0 n/1503 f/1504)))
    (setfield_ptr(root-init) 16 (global Gbnf_parser__Misc!) mapi/1501))
  (letrec
    (qfold/1505
       (function f/1506 accu/1507 q/1508
         (let
           (*match*/3324 =
              (try
                (makeblock 0
                  (apply (field_imm 4 (global Stdlib__Queue!)) q/1508))
               with exn/3323
                (catch
                  (if (== exn/3323 (field_imm 0 (global Stdlib__Queue!))) 0
                    (exit 19))
                 with (19) (reraise exn/3323))))
           (if (isint *match*/3324) accu/1507
             (let (x/1551 =a (field_imm 0 *match*/3324))
               (apply qfold/1505 f/1506 (apply f/1506 accu/1507 x/1551)
                 q/1508))))))
    (setfield_ptr(root-init) 17 (global Gbnf_parser__Misc!) qfold/1505))
  (let
    (qiter/1552 =
       (function f/1554 q/1555 : int
         (try
           (while 1
             (apply f/1554
               (apply (field_imm 4 (global Stdlib__Queue!)) q/1555)))
          with exn/3325
           (catch
             (if (== exn/3325 (field_imm 0 (global Stdlib__Queue!))) 0
               (exit 20))
            with (20) (reraise exn/3325)))))
    (setfield_ptr(root-init) 18 (global Gbnf_parser__Misc!) qiter/1552))
  (letrec
    (smap/1556
       (function f/1557 l/1560
         (if (isint l/1560) 0
           (let
             (xs/1559 =a (field_imm 1 l/1560)
              x/1558 =a (field_imm 0 l/1560)
              x'/1561 = (apply f/1557 x/1558)
              xs'/1562 = (apply smap/1556 f/1557 xs/1559))
             (if (&& (== x/1558 x'/1561) (== xs/1559 xs'/1562)) l/1560
               (makeblock 0 x'/1561 xs'/1562))))))
    (setfield_ptr(root-init) 19 (global Gbnf_parser__Misc!) smap/1556))
  (letrec
    (smapa/1563
       (function f/1564 accu/1565 l/1568
         (if (isint l/1568) (makeblock 0 accu/1565 0)
           (let
             (xs/1567 =a (field_imm 1 l/1568)
              x/1566 =a (field_imm 0 l/1568)
              *match*/3333 = (apply f/1564 accu/1565 x/1566)
              x'/1570 =a (field_imm 1 *match*/3333)
              accu/1569 =a (field_imm 0 *match*/3333)
              *match*/3329 = (apply smapa/1563 f/1564 accu/1569 xs/1567)
              xs'/1572 =a (field_imm 1 *match*/3329)
              accu/1571 =a (field_imm 0 *match*/3329))
             (makeblock 0 accu/1571
               (if (&& (== x/1566 x'/1570) (== xs/1567 xs'/1572)) l/1568
                 (makeblock 0 x'/1570 xs'/1572)))))))
    (setfield_ptr(root-init) 20 (global Gbnf_parser__Misc!) smapa/1563))
  (let
    (normalize/1573 =
       (function s/1575
         (let
           (s/1576 = (apply (field_imm 4 (global Stdlib__Bytes!)) s/1575)
            n/1674 =[int] (bytes.length s/1576))
           (seq
             (for i/1675 0 to (- n/1674 1)
               (let (*match*/3334 = (bytes.get s/1576 i/1675))
                 (catch
                   (catch
                     (if (>= *match*/3334 42)
                       (if (!= *match*/3334 44) (exit 28) (exit 27))
                       (if (>= *match*/3334 40) (exit 27) (exit 28)))
                    with (28) 0)
                  with (27) (bytes.set s/1576 i/1675 '_'))))
             (apply (field_imm 43 (global Stdlib__Bytes!)) s/1576)))))
    (setfield_ptr(root-init) 21 (global Gbnf_parser__Misc!) normalize/1573))
  (let
    (postincrement/1676 =
       (function r/1678 : int
         (let (x/1679 =[int] (field_int 0 r/1678))
           (seq (setfield_imm 0 r/1678 (+ x/1679 1)) x/1679))))
    (setfield_ptr(root-init) 22 (global Gbnf_parser__Misc!)
      postincrement/1676))
  (let
    (filter_map/1680 =
       (function f/1682 l/1683
         (apply (field_imm 9 (global Stdlib__List!))
           (apply (field_imm 25 (global Stdlib__List!))
             (function ys/1684 x/1685
               (let (*match*/3335 = (apply f/1682 x/1685))
                 (if (isint *match*/3335) ys/1684
                   (let (y/1686 =a (field_imm 0 *match*/3335))
                     (makeblock 0 y/1686 ys/1684)))))
             0 l/1683))))
    (setfield_ptr(root-init) 23 (global Gbnf_parser__Misc!) filter_map/1680))
  (let
    (new_encode_decode/1687 =
       (function capacity/1689[int]
         (let
           (H/1866 =
              (apply
                (let (let/3338 = (field_imm 25 (global Stdlib__Hashtbl!)))
                  (field_imm 25 (global Stdlib__Hashtbl!)))
                (let
                  (equal/1691 =
                     (function prim/3337 prim/3336 stub
                       (caml_equal prim/3337 prim/3336))
                   hash/1692 = (field_imm 27 (global Stdlib__Hashtbl!)))
                  (makeblock 0 equal/1691 hash/1692)))
            table/1867 = (apply (field_imm 0 H/1866) capacity/1689)
            text/1868 =
              (apply (field_imm 0 (field_imm 8 (global MenhirLib!))) "")
            c/1892 = (makemutable 0 (int) 0)
            encode/1893 =
              (function s/1899 : int
                (seq (setfield_imm 0 c/1892 (+ (field_int 0 c/1892) 1))
                  (try (apply (field_imm 6 H/1866) table/1867 s/1899)
                   with exn/3339
                    (catch
                      (if (== exn/3339 (field_imm 7 (global Stdlib!)))
                        (let
                          (i/1900 =[int]
                             (apply (field_imm 14 H/1866) table/1867))
                          (seq
                            (apply (field_imm 4 H/1866) table/1867 s/1899
                              i/1900)
                            (apply
                              (field_imm 2 (field_imm 8 (global MenhirLib!)))
                              text/1868 i/1900 s/1899)
                            i/1900))
                        (exit 29))
                     with (29) (reraise exn/3339)))))
            decode/1894 =
              (function i/1901[int]
                (apply (field_imm 1 (field_imm 8 (global MenhirLib!)))
                  text/1868 i/1901))
            verbose/1895 =
              (function param/1938[int] : int
                (apply (field_imm 0 (global Stdlib__Printf!))
                  (field_imm 39 (global Stdlib!))
                  [0:
                   [4:
                    0 0 0
                    [11:
                     " calls to intern; "
                     [4: 0 0 0 [11: " unique strings.\n" [10: 0]]]]]
                   "%d calls to intern; %d unique strings.\n%!"]
                  (field_int 0 c/1892)
                  (apply (field_imm 14 H/1866) table/1867))))
           (makeblock 0 encode/1893 decode/1894 verbose/1895))))
    (setfield_ptr(root-init) 24 (global Gbnf_parser__Misc!)
      new_encode_decode/1687))
  (letrec
    (best/1939
       (function preferable/1940 xs/1941
         (if (isint xs/1941) 0
           (let (x/1942 =a (field_imm 0 xs/1941))
             (catch
               (let (*match*/3341 =a (field_imm 1 xs/1941))
                 (if (isint *match*/3341) (makeblock 0 x/1942) (exit 30)))
              with (30)
               (let (x/1943 =a x/1942 xs/1944 =a (field_imm 1 xs/1941))
                 (if
                   (apply (field_imm 32 (global Stdlib__List!))
                     (apply preferable/1940 x/1943) xs/1944)
                   (makeblock 0 x/1943)
                   (let
                     (*match*/3340 =
                        (apply best/1939 preferable/1940 xs/1944))
                     (if (isint *match*/3340) 0
                       (let (y/1945 =a (field_imm 0 *match*/3340))
                         (if (apply preferable/1940 y/1945 x/1943)
                           (makeblock 0 y/1945) 0)))))))))))
    (setfield_ptr(root-init) 25 (global Gbnf_parser__Misc!) best/1939))
  (letrec
    (levels1/1946
       (function cmp/1947 x1/1948 xs/1949
         (if (isint xs/1949) (makeblock 0 (makeblock 0 x1/1948 0) 0)
           (let
             (xs/1951 =a (field_imm 1 xs/1949)
              x2/1950 =a (field_imm 0 xs/1949)
              *match*/3345 = (apply levels1/1946 cmp/1947 x2/1950 xs/1951)
              yss/1953 =a (field_imm 1 *match*/3345)
              ys1/1952 =a (field_imm 0 *match*/3345))
             (if (== (apply cmp/1947 x1/1948 x2/1950) 0)
               (makeblock 0 (makeblock 0 x1/1948 ys1/1952) yss/1953)
               (makeblock 0 (makeblock 0 x1/1948 0)
                 (makeblock 0 ys1/1952 yss/1953)))))))
    (setfield_ptr(root-init) 26 (global Gbnf_parser__Misc!) levels1/1946))
  (let
    (levels/1954 =
       (function cmp/1956 xs/1957
         (if (isint xs/1957) 0
           (let
             (xs/1959 =a (field_imm 1 xs/1957)
              x1/1958 =a (field_imm 0 xs/1957)
              *match*/3349 =
                (apply (field_imm 26 (global Gbnf_parser__Misc!)) cmp/1956
                  x1/1958 xs/1959)
              yss/1961 =a (field_imm 1 *match*/3349)
              ys1/1960 =a (field_imm 0 *match*/3349))
             (makeblock 0 ys1/1960 yss/1961)))))
    (setfield_ptr(root-init) 27 (global Gbnf_parser__Misc!) levels/1954))
  (let
    (insert/1962 =
       (function <=/1964 x/1965 ys/1966
         (if
           (apply (field_imm 33 (global Stdlib__List!))
             (function y/1967 : int (apply <=/1964 x/1965 y/1967)) ys/1966)
           ys/1966
           (makeblock 0 x/1965
             (apply (field_imm 43 (global Stdlib__List!))
               (function y/1968 : int (not (apply <=/1964 y/1968 x/1965)))
               ys/1966)))))
    (setfield_ptr(root-init) 28 (global Gbnf_parser__Misc!) insert/1962))
  (let
    (trim/1969 =
       (function <=/1971 xs/1972
         (apply (field_imm 26 (global Stdlib__List!))
           (apply (field_imm 28 (global Gbnf_parser__Misc!)) <=/1971) xs/1972
           0)))
    (setfield_ptr(root-init) 29 (global Gbnf_parser__Misc!) trim/1969))
  (letrec
    (dup1/1973
       (function cmp/1974 x/1975 ys/1976
         (if (isint ys/1976) 0
           (let
             (ys/1978 =a (field_imm 1 ys/1976)
              y/1977 =a (field_imm 0 ys/1976))
             (if (== (apply cmp/1974 x/1975 y/1977) 0) (makeblock 0 x/1975)
               (apply dup1/1973 cmp/1974 y/1977 ys/1978))))))
    (setfield_ptr(root-init) 30 (global Gbnf_parser__Misc!) dup1/1973))
  (let
    (dup/1979 =
       (function cmp/1981 xs/1982
         (if (isint xs/1982) 0
           (let
             (xs/1984 =a (field_imm 1 xs/1982)
              x/1983 =a (field_imm 0 xs/1982))
             (apply (field_imm 30 (global Gbnf_parser__Misc!)) cmp/1981
               x/1983 xs/1984)))))
    (setfield_ptr(root-init) 31 (global Gbnf_parser__Misc!) dup/1979))
  (let
    (once/1985 =
       (function x/1987 y/1988
         (let (s/1989 = (makemutable 0 x/1987))
           (function param/1991[int]
             (let (result/1990 = (field_mut 0 s/1989))
               (seq (setfield_ptr 0 s/1989 y/1988) result/1990))))))
    (setfield_ptr(root-init) 32 (global Gbnf_parser__Misc!) once/1985))
  (letrec
    (equal/1992
       (function =/1993 xs/1994 ys/1995 : int
         (catch
           (if (isint xs/1994)
             (if (isint ys/1995) 1
               (let
                 (*match*/3351 =a (field_imm 1 ys/1995)
                  *match*/3350 =a (field_imm 0 ys/1995))
                 (exit 37)))
             (if (isint ys/1995) (exit 37)
               (let
                 (ys/1999 =a (field_imm 1 ys/1995)
                  y/1998 =a (field_imm 0 ys/1995)
                  xs/1997 =a (field_imm 1 xs/1994)
                  x/1996 =a (field_imm 0 xs/1994))
                 (&& (apply =/1993 x/1996 y/1998)
                   (apply equal/1992 =/1993 xs/1997 ys/1999)))))
          with (37) 0)))
    (setfield_ptr(root-init) 40 (global Gbnf_parser__Misc!) equal/1992))
  (let
    (hash/2000 =
       (function hash/2002 xs/2003 : int
         (apply (field_imm 27 (global Stdlib__Hashtbl!))
           (apply (field_imm 19 (global Stdlib__List!)) hash/2002 xs/2003))))
    (setfield_ptr(root-init) 41 (global Gbnf_parser__Misc!) hash/2000))
  0
  (let
    (ListExtras/2004 =
       (makeblock 0 (field_imm 40 (global Gbnf_parser__Misc!))
         (field_imm 41 (global Gbnf_parser__Misc!))))
    (seq
      (setfield_ptr(root-init) 33 (global Gbnf_parser__Misc!)
        ListExtras/2004)
      (let
        (nth/2005 =
           (function i/2007[int]
             (catch
               (let (switcher/3352 =a (-1+ i/2007))
                 (if (isout 2 switcher/3352) (exit 38)
                   (switch* switcher/3352
                    case int 0: "first"
                    case int 1: "second"
                    case int 2: "third")))
              with (38)
               (apply (field_imm 3 (global Stdlib__Printf!))
                 [0: [4: 0 0 0 [11: "th" 0]] "%dth"] i/2007))))
        (setfield_ptr(root-init) 34 (global Gbnf_parser__Misc!) nth/2005))
      (let
        (count/2008 =
           (function i/2010[int]
             (catch
               (let (switcher/3353 =a (-1+ i/2010))
                 (if (isout 2 switcher/3353) (exit 39)
                   (switch* switcher/3353
                    case int 0: "one"
                    case int 1: "two"
                    case int 2: "three")))
              with (39)
               (apply (field_imm 3 (global Stdlib__Printf!))
                 [0: [4: 0 0 0 0] "%d"] i/2010))))
        (setfield_ptr(root-init) 35 (global Gbnf_parser__Misc!) count/2008))
      (letrec
        (list_make/2011
           (function n/2012[int] x/2013
             (if (== n/2012 0) 0
               (makeblock 0 x/2013
                 (apply list_make/2011 (- n/2012 1) x/2013)))))
        (setfield_ptr(root-init) 36 (global Gbnf_parser__Misc!)
          list_make/2011))
      (let
        (digits/2014 =
           (function n/2016[int] : int
             (letrec
               (loop/2017
                  (function accu/2018[int] n/2019[int] : int
                    (if (< n/2019 10) (+ accu/2018 1)
                      (apply loop/2017 (+ accu/2018 1) (/ n/2019 10)))))
               (apply loop/2017 0 n/2016))))
        (setfield_ptr(root-init) 37 (global Gbnf_parser__Misc!) digits/2014))
      (let
        (pad/2020 =
           (function n/2022[int] s/2023
             (apply (field_imm 27 (global Stdlib!))
               (apply (field_imm 0 (global Stdlib__String!))
                 (- n/2022 (string.length s/2023)) '0')
               s/2023)))
        (setfield_ptr(root-init) 38 (global Gbnf_parser__Misc!) pad/2020))
      (let
        (padded_index/2093 =
           (function n/2095[int] i/2096[int]
             (apply (field_imm 38 (global Gbnf_parser__Misc!))
               (apply (field_imm 37 (global Gbnf_parser__Misc!)) n/2095)
               (apply (field_imm 3 (global Stdlib__Printf!))
                 [0: [4: 0 0 0 0] "%d"] i/2096))))
        (setfield_ptr(root-init) 39 (global Gbnf_parser__Misc!)
          padded_index/2093))
      (let
        (*match*/3355 =
           (apply (field_imm 5 (global Ppx_inline_test_lib!)) "gbnf_parser"))
        0)
      (let
        (*match*/3357 =
           (apply (field_imm 1 (field_imm 5 (global Expect_test_collector!)))
             0))
        0)
      (let
        (*match*/3359 =
           (apply
             (field_imm 1
               (field_imm 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
             0))
        0)
      (let
        (*match*/3361 =
           (apply (field_imm 4 (global Ppx_module_timer_runtime!))
             #"Gbnf_parser__Misc"))
        0)
      0)))
(seq
  (let
    (*match*/3306 =
       (apply (field_imm 3 (global Ppx_module_timer_runtime!))
         #"Gbnf_parser__Misc"))
    0)
  (let
    (*match*/3308 =
       (apply
         (field_imm 0
           (field_imm 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
         "gbnf_parser"))
    0)
  (let
    (*match*/3310 =
       (apply (field_imm 0 (field_imm 5 (global Expect_test_collector!)))
         "lib/misc.ml"))
    0)
  (let
    (*match*/3312 =
       (apply (field_imm 4 (global Ppx_inline_test_lib!)) "gbnf_parser"
         "misc.ml"))
    0)
  (let
    (single/1132 =
       (function param/1135
         (catch
           (if (isint param/1135) (exit 13)
             (if (isint (field_imm 1 param/1135)) (field_imm 0 param/1135)
               (exit 13)))
          with (13)
           (raise
             (makeblock 0 (global Assert_failure/28!)
               [0: "lib/misc.ml" 18 6])))))
    (setfield_ptr(root-init) 0 (global Gbnf_parser__Misc!) single/1132))
  (letrec
    (mapd/1136
       (function f/1137 param/1142
         (if (isint param/1142) 0
           (let (*match*/3317 = (apply f/1137 (field_imm 0 param/1142)))
             (makeblock 0 (field_imm 0 *match*/3317)
               (makeblock 0 (field_imm 1 *match*/3317)
                 (apply mapd/1136 f/1137 (field_imm 1 param/1142))))))))
    (setfield_ptr(root-init) 1 (global Gbnf_parser__Misc!) mapd/1136))
  (let
    (tabulate/1143 =
       (function n/1145[int] f/1146
         (let
           (a/1147 =
              (apply (field_imm 0 (global Stdlib__Array!)) n/1145 f/1146))
           (apply
             (function prim/3319 prim/3318 stub
               (array.get[gen] prim/3319 prim/3318))
             a/1147))))
    (setfield_ptr(root-init) 2 (global Gbnf_parser__Misc!) tabulate/1143))
  (let
    (sum/1196 =
       (function n/1198[int] f/1199 : int
         (let (sum/1200 =mut[int] 0)
           (seq
             (for x/1201 0 to (- n/1198 1)
               (assign sum/1200 (+ *sum/1200 (apply f/1199 x/1201))))
             *sum/1200))))
    (setfield_ptr(root-init) 3 (global Gbnf_parser__Misc!) sum/1196))
  (let
    (with_buffer/1202 =
       (function n/1204[int] f/1205
         (let
           (b/1206 = (apply (field_imm 0 (global Stdlib__Buffer!)) n/1204))
           (seq (apply f/1205 b/1206)
             (apply (field_imm 1 (global Stdlib__Buffer!)) b/1206)))))
    (setfield_ptr(root-init) 4 (global Gbnf_parser__Misc!) with_buffer/1202))
  (let
    (separated_iter_to_string/1290 =
       (function printer/1292 separator/1293 iter/1294
         (apply (field_imm 4 (global Gbnf_parser__Misc!)) 32
           (function b/1295 : int
             (let (first/1296 = (makemutable 0 (int) 1))
               (apply iter/1294
                 (function x/1297 : int
                   (if (field_int 0 first/1296)
                     (seq
                       (apply (field_imm 15 (global Stdlib__Buffer!)) b/1295
                         (apply printer/1292 x/1297))
                       (setfield_imm 0 first/1296 0))
                     (seq
                       (apply (field_imm 15 (global Stdlib__Buffer!)) b/1295
                         separator/1293)
                       (apply (field_imm 15 (global Stdlib__Buffer!)) b/1295
                         (apply printer/1292 x/1297)))))))))))
    (setfield_ptr(root-init) 5 (global Gbnf_parser__Misc!)
      separated_iter_to_string/1290))
  (let
    (separated_list_to_string/1298 =
       (function printer/1300 separator/1301 xs/1302
         (apply (field_imm 5 (global Gbnf_parser__Misc!)) printer/1300
           separator/1301
           (function f/1303 : int
             (apply (field_imm 17 (global Stdlib__List!)) f/1303 xs/1302)))))
    (setfield_ptr(root-init) 6 (global Gbnf_parser__Misc!)
      separated_list_to_string/1298))
  (let
    (inverse/1370 =
       (function a/1372
         (let
           (table/1373 =
              (apply (field_imm 0 (global Stdlib__Hashtbl!)) 0
                (array.length[gen] a/1372)))
           (seq
             (apply (field_imm 11 (global Stdlib__Array!))
               (function i/1454[int] data/1455 : int
                 (seq
                   (if
                     (not
                       (apply (field_imm 8 (global Stdlib__Hashtbl!))
                         table/1373 data/1455))
                     0
                     (raise
                       (makeblock 0 (global Assert_failure/28!)
                         [0: "lib/misc.ml" 66 4])))
                   (apply (field_imm 4 (global Stdlib__Hashtbl!)) table/1373
                     data/1455 i/1454)))
               a/1372)
             (function data/1456 : int
               (try
                 (apply (field_imm 5 (global Stdlib__Hashtbl!)) table/1373
                   data/1456)
                with exn/3320
                 (if (== exn/3320 (field_imm 7 (global Stdlib!)))
                   (raise
                     (makeblock 0 (global Assert_failure/28!)
                       [0: "lib/misc.ml" 73 6]))
                   (reraise exn/3320))))))))
    (setfield_ptr(root-init) 7 (global Gbnf_parser__Misc!) inverse/1370))
  (let
    (support_assoc/1457 =
       (function l/1459 x/1460
         (try (apply (field_imm 48 (global Stdlib__List!)) x/1460 l/1459)
          with exn/3321
           (if (== exn/3321 (field_imm 7 (global Stdlib!))) x/1460
             (reraise exn/3321)))))
    (setfield_ptr(root-init) 8 (global Gbnf_parser__Misc!)
      support_assoc/1457))
  (let
    (materialize/1461 =
       (function table/1463 x/1464
         (letrec
           (loop/1465
              (function x/1466
                (let
                  (*match*/3322 =
                     (apply (field_imm 5 (global Stdlib__Hashtbl!))
                       table/1463 x/1466))
                  (if (isint *match*/3322) 0
                    (let (x/1467 =a (field_imm 0 *match*/3322))
                      (makeblock 0 x/1467 (apply loop/1465 x/1467)))))))
           (apply loop/1465 x/1464))))
    (setfield_ptr(root-init) 9 (global Gbnf_parser__Misc!) materialize/1461))
  (let
    (iterij/1468 =
       (function i/1470[int] j/1471[int] f/1472 : int
         (for x/1473 i/1470 to (- j/1471 1) (apply f/1472 x/1473))))
    (setfield_ptr(root-init) 10 (global Gbnf_parser__Misc!) iterij/1468))
  (let
    (iteri/1474 =
       (function n/1476[int] f/1477 : int
         (apply (field_imm 10 (global Gbnf_parser__Misc!)) 0 n/1476 f/1477)))
    (setfield_ptr(root-init) 11 (global Gbnf_parser__Misc!) iteri/1474))
  (letrec
    (foldij/1478
       (function i/1479[int] j/1480[int] f/1481 accu/1482
         (if (< i/1479 j/1480)
           (apply foldij/1478 (+ i/1479 1) j/1480 f/1481
             (apply f/1481 i/1479 accu/1482))
           accu/1482)))
    (setfield_ptr(root-init) 12 (global Gbnf_parser__Misc!) foldij/1478))
  (let
    (foldi/1483 =
       (function n/1485[int] f/1486 accu/1487
         (apply (field_imm 12 (global Gbnf_parser__Misc!)) 0 n/1485 f/1486
           accu/1487)))
    (setfield_ptr(root-init) 13 (global Gbnf_parser__Misc!) foldi/1483))
  (letrec
    (foldij_lazy/1488
       (function i/1489[int] j/1490[int] f/1491 accu/1492
         (if (< i/1489 j/1490)
           (apply f/1491 i/1489
             (function param/1493[int]
               (apply foldij_lazy/1488 (+ i/1489 1) j/1490 f/1491 accu/1492)))
           accu/1492)))
    (setfield_ptr(root-init) 14 (global Gbnf_parser__Misc!) foldij_lazy/1488))
  (let
    (mapij/1494 =
       (function start/1496[int] n/1497[int] f/1498
         (apply (field_imm 9 (global Stdlib__List!))
           (apply (field_imm 12 (global Gbnf_parser__Misc!)) start/1496
             n/1497
             (function i/1499[int] accu/1500
               (makeblock 0 (apply f/1498 i/1499) accu/1500))
             0))))
    (setfield_ptr(root-init) 15 (global Gbnf_parser__Misc!) mapij/1494))
  (let
    (mapi/1501 =
       (function n/1503[int] f/1504
         (apply (field_imm 15 (global Gbnf_parser__Misc!)) 0 n/1503 f/1504)))
    (setfield_ptr(root-init) 16 (global Gbnf_parser__Misc!) mapi/1501))
  (letrec
    (qfold/1505
       (function f/1506 accu/1507 q/1508
         (let
           (*match*/3324 =
              (try
                (makeblock 0
                  (apply (field_imm 4 (global Stdlib__Queue!)) q/1508))
               with exn/3323
                (if (== exn/3323 (field_imm 0 (global Stdlib__Queue!))) 0
                  (reraise exn/3323))))
           (if (isint *match*/3324) accu/1507
             (apply qfold/1505 f/1506
               (apply f/1506 accu/1507 (field_imm 0 *match*/3324)) q/1508)))))
    (setfield_ptr(root-init) 17 (global Gbnf_parser__Misc!) qfold/1505))
  (let
    (qiter/1552 =
       (function f/1554 q/1555 : int
         (try
           (while 1
             (apply f/1554
               (apply (field_imm 4 (global Stdlib__Queue!)) q/1555)))
          with exn/3325
           (if (== exn/3325 (field_imm 0 (global Stdlib__Queue!))) 0
             (reraise exn/3325)))))
    (setfield_ptr(root-init) 18 (global Gbnf_parser__Misc!) qiter/1552))
  (letrec
    (smap/1556
       (function f/1557 l/1560
         (if (isint l/1560) 0
           (let
             (xs/1559 =a (field_imm 1 l/1560)
              x/1558 =a (field_imm 0 l/1560)
              x'/1561 = (apply f/1557 x/1558)
              xs'/1562 = (apply smap/1556 f/1557 xs/1559))
             (if (&& (== x/1558 x'/1561) (== xs/1559 xs'/1562)) l/1560
               (makeblock 0 x'/1561 xs'/1562))))))
    (setfield_ptr(root-init) 19 (global Gbnf_parser__Misc!) smap/1556))
  (letrec
    (smapa/1563
       (function f/1564 accu/1565 l/1568
         (if (isint l/1568) (makeblock 0 accu/1565 0)
           (let
             (xs/1567 =a (field_imm 1 l/1568)
              x/1566 =a (field_imm 0 l/1568)
              *match*/3333 = (apply f/1564 accu/1565 x/1566)
              x'/1570 =a (field_imm 1 *match*/3333)
              *match*/3329 =
                (apply smapa/1563 f/1564 (field_imm 0 *match*/3333) xs/1567)
              xs'/1572 =a (field_imm 1 *match*/3329))
             (makeblock 0 (field_imm 0 *match*/3329)
               (if (&& (== x/1566 x'/1570) (== xs/1567 xs'/1572)) l/1568
                 (makeblock 0 x'/1570 xs'/1572)))))))
    (setfield_ptr(root-init) 20 (global Gbnf_parser__Misc!) smapa/1563))
  (let
    (normalize/1573 =
       (function s/1575
         (let
           (s/1576 = (apply (field_imm 4 (global Stdlib__Bytes!)) s/1575)
            n/1674 =[int] (bytes.length s/1576))
           (seq
             (for i/1675 0 to (- n/1674 1)
               (let (*match*/3334 = (bytes.get s/1576 i/1675))
                 (catch
                   (catch
                     (if (>= *match*/3334 42)
                       (if (!= *match*/3334 44) (exit 28) (exit 27))
                       (if (>= *match*/3334 40) (exit 27) (exit 28)))
                    with (28) 0)
                  with (27) (bytes.set s/1576 i/1675 '_'))))
             (apply (field_imm 43 (global Stdlib__Bytes!)) s/1576)))))
    (setfield_ptr(root-init) 21 (global Gbnf_parser__Misc!) normalize/1573))
  (let
    (postincrement/1676 =
       (function r/1678 : int
         (let (x/1679 =[int] (field_int 0 r/1678))
           (seq (setfield_imm 0 r/1678 (+ x/1679 1)) x/1679))))
    (setfield_ptr(root-init) 22 (global Gbnf_parser__Misc!)
      postincrement/1676))
  (let
    (filter_map/1680 =
       (function f/1682 l/1683
         (apply (field_imm 9 (global Stdlib__List!))
           (apply (field_imm 25 (global Stdlib__List!))
             (function ys/1684 x/1685
               (let (*match*/3335 = (apply f/1682 x/1685))
                 (if (isint *match*/3335) ys/1684
                   (makeblock 0 (field_imm 0 *match*/3335) ys/1684))))
             0 l/1683))))
    (setfield_ptr(root-init) 23 (global Gbnf_parser__Misc!) filter_map/1680))
  (let
    (new_encode_decode/1687 =
       (function capacity/1689[int]
         (let
           (H/1866 =
              (apply
                (let (let/3338 = (field_imm 25 (global Stdlib__Hashtbl!)))
                  (field_imm 25 (global Stdlib__Hashtbl!)))
                (let
                  (equal/1691 =
                     (function prim/3337 prim/3336 stub
                       (caml_equal prim/3337 prim/3336))
                   hash/1692 = (field_imm 27 (global Stdlib__Hashtbl!)))
                  (makeblock 0 equal/1691 hash/1692)))
            table/1867 = (apply (field_imm 0 H/1866) capacity/1689)
            text/1868 =
              (apply (field_imm 0 (field_imm 8 (global MenhirLib!))) "")
            c/1892 = (makemutable 0 (int) 0)
            encode/1893 =
              (function s/1899 : int
                (seq (setfield_imm 0 c/1892 (+ (field_int 0 c/1892) 1))
                  (try (apply (field_imm 6 H/1866) table/1867 s/1899)
                   with exn/3339
                    (if (== exn/3339 (field_imm 7 (global Stdlib!)))
                      (let
                        (i/1900 =[int]
                           (apply (field_imm 14 H/1866) table/1867))
                        (seq
                          (apply (field_imm 4 H/1866) table/1867 s/1899
                            i/1900)
                          (apply
                            (field_imm 2 (field_imm 8 (global MenhirLib!)))
                            text/1868 i/1900 s/1899)
                          i/1900))
                      (reraise exn/3339)))))
            decode/1894 =
              (function i/1901[int]
                (apply (field_imm 1 (field_imm 8 (global MenhirLib!)))
                  text/1868 i/1901))
            verbose/1895 =
              (function param/1938[int] : int
                (apply (field_imm 0 (global Stdlib__Printf!))
                  (field_imm 39 (global Stdlib!))
                  [0:
                   [4:
                    0 0 0
                    [11:
                     " calls to intern; "
                     [4: 0 0 0 [11: " unique strings.\n" [10: 0]]]]]
                   "%d calls to intern; %d unique strings.\n%!"]
                  (field_int 0 c/1892)
                  (apply (field_imm 14 H/1866) table/1867))))
           (makeblock 0 encode/1893 decode/1894 verbose/1895))))
    (setfield_ptr(root-init) 24 (global Gbnf_parser__Misc!)
      new_encode_decode/1687))
  (letrec
    (best/1939
       (function preferable/1940 xs/1941
         (if (isint xs/1941) 0
           (let (x/1942 =a (field_imm 0 xs/1941))
             (if (isint (field_imm 1 xs/1941)) (makeblock 0 x/1942)
               (let (xs/1944 =a (field_imm 1 xs/1941))
                 (if
                   (apply (field_imm 32 (global Stdlib__List!))
                     (apply preferable/1940 x/1942) xs/1944)
                   (makeblock 0 x/1942)
                   (let
                     (*match*/3340 =
                        (apply best/1939 preferable/1940 xs/1944))
                     (if (isint *match*/3340) 0
                       (let (y/1945 =a (field_imm 0 *match*/3340))
                         (if (apply preferable/1940 y/1945 x/1942)
                           (makeblock 0 y/1945) 0)))))))))))
    (setfield_ptr(root-init) 25 (global Gbnf_parser__Misc!) best/1939))
  (letrec
    (levels1/1946
       (function cmp/1947 x1/1948 xs/1949
         (if (isint xs/1949) (makeblock 0 (makeblock 0 x1/1948 0) 0)
           (let
             (x2/1950 =a (field_imm 0 xs/1949)
              *match*/3345 =
                (apply levels1/1946 cmp/1947 x2/1950 (field_imm 1 xs/1949))
              yss/1953 =a (field_imm 1 *match*/3345)
              ys1/1952 =a (field_imm 0 *match*/3345))
             (if (== (apply cmp/1947 x1/1948 x2/1950) 0)
               (makeblock 0 (makeblock 0 x1/1948 ys1/1952) yss/1953)
               (makeblock 0 (makeblock 0 x1/1948 0)
                 (makeblock 0 ys1/1952 yss/1953)))))))
    (setfield_ptr(root-init) 26 (global Gbnf_parser__Misc!) levels1/1946))
  (let
    (levels/1954 =
       (function cmp/1956 xs/1957
         (if (isint xs/1957) 0
           (let
             (*match*/3349 =
                (apply (field_imm 26 (global Gbnf_parser__Misc!)) cmp/1956
                  (field_imm 0 xs/1957) (field_imm 1 xs/1957)))
             (makeblock 0 (field_imm 0 *match*/3349)
               (field_imm 1 *match*/3349))))))
    (setfield_ptr(root-init) 27 (global Gbnf_parser__Misc!) levels/1954))
  (let
    (insert/1962 =
       (function <=/1964 x/1965 ys/1966
         (if
           (apply (field_imm 33 (global Stdlib__List!))
             (function y/1967 : int (apply <=/1964 x/1965 y/1967)) ys/1966)
           ys/1966
           (makeblock 0 x/1965
             (apply (field_imm 43 (global Stdlib__List!))
               (function y/1968 : int (not (apply <=/1964 y/1968 x/1965)))
               ys/1966)))))
    (setfield_ptr(root-init) 28 (global Gbnf_parser__Misc!) insert/1962))
  (let
    (trim/1969 =
       (function <=/1971 xs/1972
         (apply (field_imm 26 (global Stdlib__List!))
           (apply (field_imm 28 (global Gbnf_parser__Misc!)) <=/1971) xs/1972
           0)))
    (setfield_ptr(root-init) 29 (global Gbnf_parser__Misc!) trim/1969))
  (letrec
    (dup1/1973
       (function cmp/1974 x/1975 ys/1976
         (if (isint ys/1976) 0
           (let (y/1977 =a (field_imm 0 ys/1976))
             (if (== (apply cmp/1974 x/1975 y/1977) 0) (makeblock 0 x/1975)
               (apply dup1/1973 cmp/1974 y/1977 (field_imm 1 ys/1976)))))))
    (setfield_ptr(root-init) 30 (global Gbnf_parser__Misc!) dup1/1973))
  (let
    (dup/1979 =
       (function cmp/1981 xs/1982
         (if (isint xs/1982) 0
           (apply (field_imm 30 (global Gbnf_parser__Misc!)) cmp/1981
             (field_imm 0 xs/1982) (field_imm 1 xs/1982)))))
    (setfield_ptr(root-init) 31 (global Gbnf_parser__Misc!) dup/1979))
  (let
    (once/1985 =
       (function x/1987 y/1988
         (let (s/1989 = (makemutable 0 x/1987))
           (function param/1991[int]
             (let (result/1990 = (field_mut 0 s/1989))
               (seq (setfield_ptr 0 s/1989 y/1988) result/1990))))))
    (setfield_ptr(root-init) 32 (global Gbnf_parser__Misc!) once/1985))
  (letrec
    (equal/1992
       (function =/1993 xs/1994 ys/1995 : int
         (catch
           (if (isint xs/1994) (if (isint ys/1995) 1 (exit 37))
             (if (isint ys/1995) (exit 37)
               (&& (apply =/1993 (field_imm 0 xs/1994) (field_imm 0 ys/1995))
                 (apply equal/1992 =/1993 (field_imm 1 xs/1994)
                   (field_imm 1 ys/1995)))))
          with (37) 0)))
    (setfield_ptr(root-init) 40 (global Gbnf_parser__Misc!) equal/1992))
  (let
    (hash/2000 =
       (function hash/2002 xs/2003 : int
         (apply (field_imm 27 (global Stdlib__Hashtbl!))
           (apply (field_imm 19 (global Stdlib__List!)) hash/2002 xs/2003))))
    (setfield_ptr(root-init) 41 (global Gbnf_parser__Misc!) hash/2000))
  0
  (let
    (ListExtras/2004 =
       (makeblock 0 (field_imm 40 (global Gbnf_parser__Misc!))
         (field_imm 41 (global Gbnf_parser__Misc!))))
    (seq
      (setfield_ptr(root-init) 33 (global Gbnf_parser__Misc!)
        ListExtras/2004)
      (let
        (nth/2005 =
           (function i/2007[int]
             (let (switcher/3352 =a (-1+ i/2007))
               (if (isout 2 switcher/3352)
                 (apply (field_imm 3 (global Stdlib__Printf!))
                   [0: [4: 0 0 0 [11: "th" 0]] "%dth"] i/2007)
                 (switch* switcher/3352
                  case int 0: "first"
                  case int 1: "second"
                  case int 2: "third")))))
        (setfield_ptr(root-init) 34 (global Gbnf_parser__Misc!) nth/2005))
      (let
        (count/2008 =
           (function i/2010[int]
             (let (switcher/3353 =a (-1+ i/2010))
               (if (isout 2 switcher/3353)
                 (apply (field_imm 3 (global Stdlib__Printf!))
                   [0: [4: 0 0 0 0] "%d"] i/2010)
                 (switch* switcher/3353
                  case int 0: "one"
                  case int 1: "two"
                  case int 2: "three")))))
        (setfield_ptr(root-init) 35 (global Gbnf_parser__Misc!) count/2008))
      (letrec
        (list_make/2011
           (function n/2012[int] x/2013
             (if (== n/2012 0) 0
               (makeblock 0 x/2013
                 (apply list_make/2011 (- n/2012 1) x/2013)))))
        (setfield_ptr(root-init) 36 (global Gbnf_parser__Misc!)
          list_make/2011))
      (let
        (digits/2014 =
           (function n/2016[int] : int
             (letrec
               (loop/2017
                  (function accu/2018[int] n/2019[int] : int
                    (if (< n/2019 10) (+ accu/2018 1)
                      (apply loop/2017 (+ accu/2018 1) (/ n/2019 10)))))
               (apply loop/2017 0 n/2016))))
        (setfield_ptr(root-init) 37 (global Gbnf_parser__Misc!) digits/2014))
      (let
        (pad/2020 =
           (function n/2022[int] s/2023
             (apply (field_imm 27 (global Stdlib!))
               (apply (field_imm 0 (global Stdlib__String!))
                 (- n/2022 (string.length s/2023)) '0')
               s/2023)))
        (setfield_ptr(root-init) 38 (global Gbnf_parser__Misc!) pad/2020))
      (let
        (padded_index/2093 =
           (function n/2095[int] i/2096[int]
             (apply (field_imm 38 (global Gbnf_parser__Misc!))
               (apply (field_imm 37 (global Gbnf_parser__Misc!)) n/2095)
               (apply (field_imm 3 (global Stdlib__Printf!))
                 [0: [4: 0 0 0 0] "%d"] i/2096))))
        (setfield_ptr(root-init) 39 (global Gbnf_parser__Misc!)
          padded_index/2093))
      (let
        (*match*/3355 =
           (apply (field_imm 5 (global Ppx_inline_test_lib!)) "gbnf_parser"))
        0)
      (let
        (*match*/3357 =
           (apply (field_imm 1 (field_imm 5 (global Expect_test_collector!)))
             0))
        0)
      (let
        (*match*/3359 =
           (apply
             (field_imm 1
               (field_imm 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
             0))
        0)
      (let
        (*match*/3361 =
           (apply (field_imm 4 (global Ppx_module_timer_runtime!))
             #"Gbnf_parser__Misc"))
        0)
      0)))
