[
  structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
    Pstr_attribute "ocaml.ppx.context"
    [
      structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
        Pstr_eval
        expression (_none_[0,0+-1]..[0,0+-1]) ghost
          Pexp_record
          [
            "tool_name" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_constant PConst_string("ppx_driver",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
            "include_dirs" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "load_path" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "open_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "for_package" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "None" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "debug" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_threads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_vmthreads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "recursive_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "principal" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "transparent_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unboxed_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unsafe_string" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "cookies" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                Some
                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                    Pexp_tuple
                    [
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_tuple
                        [
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_constant PConst_string("inline_tests",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                          expression (<command-line>[1,0+0]..[1,0+9])
                            Pexp_constant PConst_string("enabled",(<command-line>[1,0+1]..[1,0+8]),None)
                        ]
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                        Some
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_tuple
                            [
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_tuple
                                [
                                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                    Pexp_constant PConst_string("library-name",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                                  expression (<command-line>[1,0+0]..[1,0+13])
                                    Pexp_constant PConst_string("gbnf_parser",(<command-line>[1,0+1]..[1,0+12]),None)
                                ]
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                                None
                            ]
                    ]
          ]
          None
    ]
  structure_item (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
          Ppat_construct "()" (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
          None
        expression (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
          Pexp_apply
          expression (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
            Pexp_ident "Ppx_module_timer_runtime.record_start" (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
                Pexp_ident "Ppx_module_timer_runtime.__MODULE__" (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
          ]
    ]
  structure_item (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
          Ppat_construct "()" (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
          None
        expression (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
          Pexp_apply
          expression (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
            Pexp_ident "Ppx_bench_lib.Benchmark_accumulator.Current_libname.set" (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
          Ppat_construct "()" (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
          None
        expression (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
          Pexp_apply
          expression (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
            Pexp_ident "Expect_test_collector.Current_file.set" (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
          [
            <arg>
            Labelled "absolute_filename"
              expression (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
                Pexp_constant PConst_string("lib/NatInfinityMax.ml",(lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
          Ppat_construct "()" (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
          None
        expression (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
          Pexp_apply
          expression (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
            Pexp_ident "Ppx_inline_test_lib.set_lib_and_partition" (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost,None)
            <arg>
            Nolabel
              expression (lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost
                Pexp_constant PConst_string("NatInfinityMax.ml",(lib/NatInfinityMax.ml[14,976+0]..[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/NatInfinityMax.ml[14,976+0]..[15,992+5])
    Pstr_type Rec
    [
      type_declaration "property" (lib/NatInfinityMax.ml[14,976+5]..[14,976+13]) (lib/NatInfinityMax.ml[14,976+0]..[15,992+5])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/NatInfinityMax.ml[15,992+2]..[15,992+5])
              Ptyp_constr "int" (lib/NatInfinityMax.ml[15,992+2]..[15,992+5])
              []
    ]
  structure_item (lib/NatInfinityMax.ml[17,999+0]..[18,1012+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[17,999+4]..[17,999+10])
          Ppat_var "bottom" (lib/NatInfinityMax.ml[17,999+4]..[17,999+10])
        expression (lib/NatInfinityMax.ml[18,1012+2]..[18,1012+3])
          Pexp_constant PConst_int (0,None)
    ]
  structure_item (lib/NatInfinityMax.ml[20,1017+0]..[21,1032+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[20,1017+4]..[20,1017+12])
          Ppat_var "infinity" (lib/NatInfinityMax.ml[20,1017+4]..[20,1017+12])
        expression (lib/NatInfinityMax.ml[21,1032+2]..[21,1032+9])
          Pexp_ident "max_int" (lib/NatInfinityMax.ml[21,1032+2]..[21,1032+9])
    ]
  structure_item (lib/NatInfinityMax.ml[23,1043+0]..[25,1093+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[23,1043+4]..[23,1043+10])
          Ppat_var "finite" (lib/NatInfinityMax.ml[23,1043+4]..[23,1043+10])
        expression (lib/NatInfinityMax.ml[23,1043+11]..[25,1093+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/NatInfinityMax.ml[23,1043+11]..[23,1043+12])
            Ppat_var "n" (lib/NatInfinityMax.ml[23,1043+11]..[23,1043+12])
          expression (lib/NatInfinityMax.ml[24,1058+2]..[25,1093+3])
            Pexp_sequence
            expression (lib/NatInfinityMax.ml[24,1058+2]..[24,1058+33])
              Pexp_assert
              expression (lib/NatInfinityMax.ml[24,1058+9]..[24,1058+33])
                Pexp_apply
                expression (lib/NatInfinityMax.ml[24,1058+17]..[24,1058+19])
                  Pexp_ident "&&" (lib/NatInfinityMax.ml[24,1058+17]..[24,1058+19])
                [
                  <arg>
                  Nolabel
                    expression (lib/NatInfinityMax.ml[24,1058+10]..[24,1058+16])
                      Pexp_apply
                      expression (lib/NatInfinityMax.ml[24,1058+12]..[24,1058+14])
                        Pexp_ident "<=" (lib/NatInfinityMax.ml[24,1058+12]..[24,1058+14])
                      [
                        <arg>
                        Nolabel
                          expression (lib/NatInfinityMax.ml[24,1058+10]..[24,1058+11])
                            Pexp_constant PConst_int (0,None)
                        <arg>
                        Nolabel
                          expression (lib/NatInfinityMax.ml[24,1058+15]..[24,1058+16])
                            Pexp_ident "n" (lib/NatInfinityMax.ml[24,1058+15]..[24,1058+16])
                      ]
                  <arg>
                  Nolabel
                    expression (lib/NatInfinityMax.ml[24,1058+20]..[24,1058+32])
                      Pexp_apply
                      expression (lib/NatInfinityMax.ml[24,1058+22]..[24,1058+23])
                        Pexp_ident "<" (lib/NatInfinityMax.ml[24,1058+22]..[24,1058+23])
                      [
                        <arg>
                        Nolabel
                          expression (lib/NatInfinityMax.ml[24,1058+20]..[24,1058+21])
                            Pexp_ident "n" (lib/NatInfinityMax.ml[24,1058+20]..[24,1058+21])
                        <arg>
                        Nolabel
                          expression (lib/NatInfinityMax.ml[24,1058+24]..[24,1058+32])
                            Pexp_ident "infinity" (lib/NatInfinityMax.ml[24,1058+24]..[24,1058+32])
                      ]
                ]
            expression (lib/NatInfinityMax.ml[25,1093+2]..[25,1093+3])
              Pexp_ident "n" (lib/NatInfinityMax.ml[25,1093+2]..[25,1093+3])
    ]
  structure_item (lib/NatInfinityMax.ml[27,1098+0]..[28,1113+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[27,1098+4]..[27,1098+10])
          Ppat_var "to_int" (lib/NatInfinityMax.ml[27,1098+4]..[27,1098+10])
        expression (lib/NatInfinityMax.ml[27,1098+11]..[28,1113+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/NatInfinityMax.ml[27,1098+11]..[27,1098+12])
            Ppat_var "p" (lib/NatInfinityMax.ml[27,1098+11]..[27,1098+12])
          expression (lib/NatInfinityMax.ml[28,1113+2]..[28,1113+3])
            Pexp_ident "p" (lib/NatInfinityMax.ml[28,1113+2]..[28,1113+3])
    ]
  structure_item (lib/NatInfinityMax.ml[30,1118+0]..[31,1161+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[30,1118+4]..[30,1118+9])
          Ppat_var "equal" (lib/NatInfinityMax.ml[30,1118+4]..[30,1118+9])
        core_type (lib/NatInfinityMax.ml[30,1118+12]..[30,1118+40])
          Ptyp_arrow
          Nolabel
          core_type (lib/NatInfinityMax.ml[30,1118+12]..[30,1118+20])
            Ptyp_constr "property" (lib/NatInfinityMax.ml[30,1118+12]..[30,1118+20])
            []
          core_type (lib/NatInfinityMax.ml[30,1118+24]..[30,1118+40])
            Ptyp_arrow
            Nolabel
            core_type (lib/NatInfinityMax.ml[30,1118+24]..[30,1118+32])
              Ptyp_constr "property" (lib/NatInfinityMax.ml[30,1118+24]..[30,1118+32])
              []
            core_type (lib/NatInfinityMax.ml[30,1118+36]..[30,1118+40])
              Ptyp_constr "bool" (lib/NatInfinityMax.ml[30,1118+36]..[30,1118+40])
              []
        expression (lib/NatInfinityMax.ml[31,1161+2]..[31,1161+5])
          Pexp_ident "=" (lib/NatInfinityMax.ml[31,1161+2]..[31,1161+5])
    ]
  structure_item (lib/NatInfinityMax.ml[33,1168+0]..[34,1187+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[33,1168+4]..[33,1168+14])
          Ppat_var "is_maximal" (lib/NatInfinityMax.ml[33,1168+4]..[33,1168+14])
        expression (lib/NatInfinityMax.ml[33,1168+15]..[34,1187+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/NatInfinityMax.ml[33,1168+15]..[33,1168+16])
            Ppat_var "p" (lib/NatInfinityMax.ml[33,1168+15]..[33,1168+16])
          expression (lib/NatInfinityMax.ml[34,1187+2]..[34,1187+14])
            Pexp_apply
            expression (lib/NatInfinityMax.ml[34,1187+4]..[34,1187+5])
              Pexp_ident "=" (lib/NatInfinityMax.ml[34,1187+4]..[34,1187+5])
            [
              <arg>
              Nolabel
                expression (lib/NatInfinityMax.ml[34,1187+2]..[34,1187+3])
                  Pexp_ident "p" (lib/NatInfinityMax.ml[34,1187+2]..[34,1187+3])
              <arg>
              Nolabel
                expression (lib/NatInfinityMax.ml[34,1187+6]..[34,1187+14])
                  Pexp_ident "infinity" (lib/NatInfinityMax.ml[34,1187+6]..[34,1187+14])
            ]
    ]
  structure_item (lib/NatInfinityMax.ml[36,1203+0]..[37,1213+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[36,1203+4]..[36,1203+7])
          Ppat_var "max" (lib/NatInfinityMax.ml[36,1203+4]..[36,1203+7])
        expression (lib/NatInfinityMax.ml[37,1213+2]..[37,1213+5])
          Pexp_ident "max" (lib/NatInfinityMax.ml[37,1213+2]..[37,1213+5])
    ]
  structure_item (lib/NatInfinityMax.ml[39,1220+0]..[40,1239+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[39,1220+4]..[39,1220+12])
          Ppat_var "max_lazy" (lib/NatInfinityMax.ml[39,1220+4]..[39,1220+12])
        expression (lib/NatInfinityMax.ml[39,1220+13]..[40,1239+48]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/NatInfinityMax.ml[39,1220+13]..[39,1220+14])
            Ppat_var "p" (lib/NatInfinityMax.ml[39,1220+13]..[39,1220+14])
          expression (lib/NatInfinityMax.ml[39,1220+15]..[40,1239+48]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/NatInfinityMax.ml[39,1220+15]..[39,1220+16])
              Ppat_var "q" (lib/NatInfinityMax.ml[39,1220+15]..[39,1220+16])
            expression (lib/NatInfinityMax.ml[40,1239+2]..[40,1239+48])
              Pexp_ifthenelse
              expression (lib/NatInfinityMax.ml[40,1239+5]..[40,1239+17])
                Pexp_apply
                expression (lib/NatInfinityMax.ml[40,1239+7]..[40,1239+8])
                  Pexp_ident "=" (lib/NatInfinityMax.ml[40,1239+7]..[40,1239+8])
                [
                  <arg>
                  Nolabel
                    expression (lib/NatInfinityMax.ml[40,1239+5]..[40,1239+6])
                      Pexp_ident "p" (lib/NatInfinityMax.ml[40,1239+5]..[40,1239+6])
                  <arg>
                  Nolabel
                    expression (lib/NatInfinityMax.ml[40,1239+9]..[40,1239+17])
                      Pexp_ident "infinity" (lib/NatInfinityMax.ml[40,1239+9]..[40,1239+17])
                ]
              expression (lib/NatInfinityMax.ml[40,1239+23]..[40,1239+31])
                Pexp_ident "infinity" (lib/NatInfinityMax.ml[40,1239+23]..[40,1239+31])
              Some
                expression (lib/NatInfinityMax.ml[40,1239+37]..[40,1239+48])
                  Pexp_apply
                  expression (lib/NatInfinityMax.ml[40,1239+37]..[40,1239+40])
                    Pexp_ident "max" (lib/NatInfinityMax.ml[40,1239+37]..[40,1239+40])
                  [
                    <arg>
                    Nolabel
                      expression (lib/NatInfinityMax.ml[40,1239+41]..[40,1239+42])
                        Pexp_ident "p" (lib/NatInfinityMax.ml[40,1239+41]..[40,1239+42])
                    <arg>
                    Nolabel
                      expression (lib/NatInfinityMax.ml[40,1239+43]..[40,1239+48])
                        Pexp_apply
                        expression (lib/NatInfinityMax.ml[40,1239+44]..[40,1239+45])
                          Pexp_ident "q" (lib/NatInfinityMax.ml[40,1239+44]..[40,1239+45])
                        [
                          <arg>
                          Nolabel
                            expression (lib/NatInfinityMax.ml[40,1239+45]..[40,1239+47])
                              Pexp_construct "()" (lib/NatInfinityMax.ml[40,1239+45]..[40,1239+47])
                              None
                        ]
                  ]
    ]
  structure_item (lib/NatInfinityMax.ml[42,1289+0]..[43,1303+58])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[42,1289+4]..[42,1289+7])
          Ppat_var "add" (lib/NatInfinityMax.ml[42,1289+4]..[42,1289+7])
        expression (lib/NatInfinityMax.ml[42,1289+8]..[43,1303+58]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/NatInfinityMax.ml[42,1289+8]..[42,1289+9])
            Ppat_var "p" (lib/NatInfinityMax.ml[42,1289+8]..[42,1289+9])
          expression (lib/NatInfinityMax.ml[42,1289+10]..[43,1303+58]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/NatInfinityMax.ml[42,1289+10]..[42,1289+11])
              Ppat_var "q" (lib/NatInfinityMax.ml[42,1289+10]..[42,1289+11])
            expression (lib/NatInfinityMax.ml[43,1303+2]..[43,1303+58])
              Pexp_ifthenelse
              expression (lib/NatInfinityMax.ml[43,1303+5]..[43,1303+33])
                Pexp_apply
                expression (lib/NatInfinityMax.ml[43,1303+18]..[43,1303+20])
                  Pexp_ident "||" (lib/NatInfinityMax.ml[43,1303+18]..[43,1303+20])
                [
                  <arg>
                  Nolabel
                    expression (lib/NatInfinityMax.ml[43,1303+5]..[43,1303+17])
                      Pexp_apply
                      expression (lib/NatInfinityMax.ml[43,1303+7]..[43,1303+8])
                        Pexp_ident "=" (lib/NatInfinityMax.ml[43,1303+7]..[43,1303+8])
                      [
                        <arg>
                        Nolabel
                          expression (lib/NatInfinityMax.ml[43,1303+5]..[43,1303+6])
                            Pexp_ident "p" (lib/NatInfinityMax.ml[43,1303+5]..[43,1303+6])
                        <arg>
                        Nolabel
                          expression (lib/NatInfinityMax.ml[43,1303+9]..[43,1303+17])
                            Pexp_ident "infinity" (lib/NatInfinityMax.ml[43,1303+9]..[43,1303+17])
                      ]
                  <arg>
                  Nolabel
                    expression (lib/NatInfinityMax.ml[43,1303+21]..[43,1303+33])
                      Pexp_apply
                      expression (lib/NatInfinityMax.ml[43,1303+23]..[43,1303+24])
                        Pexp_ident "=" (lib/NatInfinityMax.ml[43,1303+23]..[43,1303+24])
                      [
                        <arg>
                        Nolabel
                          expression (lib/NatInfinityMax.ml[43,1303+21]..[43,1303+22])
                            Pexp_ident "q" (lib/NatInfinityMax.ml[43,1303+21]..[43,1303+22])
                        <arg>
                        Nolabel
                          expression (lib/NatInfinityMax.ml[43,1303+25]..[43,1303+33])
                            Pexp_ident "infinity" (lib/NatInfinityMax.ml[43,1303+25]..[43,1303+33])
                      ]
                ]
              expression (lib/NatInfinityMax.ml[43,1303+39]..[43,1303+47])
                Pexp_ident "infinity" (lib/NatInfinityMax.ml[43,1303+39]..[43,1303+47])
              Some
                expression (lib/NatInfinityMax.ml[43,1303+53]..[43,1303+58])
                  Pexp_apply
                  expression (lib/NatInfinityMax.ml[43,1303+55]..[43,1303+56])
                    Pexp_ident "+" (lib/NatInfinityMax.ml[43,1303+55]..[43,1303+56])
                  [
                    <arg>
                    Nolabel
                      expression (lib/NatInfinityMax.ml[43,1303+53]..[43,1303+54])
                        Pexp_ident "p" (lib/NatInfinityMax.ml[43,1303+53]..[43,1303+54])
                    <arg>
                    Nolabel
                      expression (lib/NatInfinityMax.ml[43,1303+57]..[43,1303+58])
                        Pexp_ident "q" (lib/NatInfinityMax.ml[43,1303+57]..[43,1303+58])
                  ]
    ]
  structure_item (lib/NatInfinityMax.ml[45,1363+0]..[47,1414+62])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[45,1363+4]..[45,1363+12])
          Ppat_var "add_lazy" (lib/NatInfinityMax.ml[45,1363+4]..[45,1363+12])
        expression (lib/NatInfinityMax.ml[45,1363+13]..[47,1414+62]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/NatInfinityMax.ml[45,1363+13]..[45,1363+14])
            Ppat_var "p" (lib/NatInfinityMax.ml[45,1363+13]..[45,1363+14])
          expression (lib/NatInfinityMax.ml[45,1363+15]..[47,1414+62]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/NatInfinityMax.ml[45,1363+15]..[45,1363+16])
              Ppat_var "q" (lib/NatInfinityMax.ml[45,1363+15]..[45,1363+16])
            expression (lib/NatInfinityMax.ml[46,1382+2]..[47,1414+62])
              Pexp_ifthenelse
              expression (lib/NatInfinityMax.ml[46,1382+5]..[46,1382+17])
                Pexp_apply
                expression (lib/NatInfinityMax.ml[46,1382+7]..[46,1382+8])
                  Pexp_ident "=" (lib/NatInfinityMax.ml[46,1382+7]..[46,1382+8])
                [
                  <arg>
                  Nolabel
                    expression (lib/NatInfinityMax.ml[46,1382+5]..[46,1382+6])
                      Pexp_ident "p" (lib/NatInfinityMax.ml[46,1382+5]..[46,1382+6])
                  <arg>
                  Nolabel
                    expression (lib/NatInfinityMax.ml[46,1382+9]..[46,1382+17])
                      Pexp_ident "infinity" (lib/NatInfinityMax.ml[46,1382+9]..[46,1382+17])
                ]
              expression (lib/NatInfinityMax.ml[46,1382+23]..[46,1382+31])
                Pexp_ident "infinity" (lib/NatInfinityMax.ml[46,1382+23]..[46,1382+31])
              Some
                expression (lib/NatInfinityMax.ml[47,1414+7]..[47,1414+62])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/NatInfinityMax.ml[47,1414+11]..[47,1414+12])
                        Ppat_var "q" (lib/NatInfinityMax.ml[47,1414+11]..[47,1414+12])
                      expression (lib/NatInfinityMax.ml[47,1414+15]..[47,1414+18])
                        Pexp_apply
                        expression (lib/NatInfinityMax.ml[47,1414+15]..[47,1414+16])
                          Pexp_ident "q" (lib/NatInfinityMax.ml[47,1414+15]..[47,1414+16])
                        [
                          <arg>
                          Nolabel
                            expression (lib/NatInfinityMax.ml[47,1414+16]..[47,1414+18])
                              Pexp_construct "()" (lib/NatInfinityMax.ml[47,1414+16]..[47,1414+18])
                              None
                        ]
                  ]
                  expression (lib/NatInfinityMax.ml[47,1414+22]..[47,1414+62])
                    Pexp_ifthenelse
                    expression (lib/NatInfinityMax.ml[47,1414+25]..[47,1414+37])
                      Pexp_apply
                      expression (lib/NatInfinityMax.ml[47,1414+27]..[47,1414+28])
                        Pexp_ident "=" (lib/NatInfinityMax.ml[47,1414+27]..[47,1414+28])
                      [
                        <arg>
                        Nolabel
                          expression (lib/NatInfinityMax.ml[47,1414+25]..[47,1414+26])
                            Pexp_ident "q" (lib/NatInfinityMax.ml[47,1414+25]..[47,1414+26])
                        <arg>
                        Nolabel
                          expression (lib/NatInfinityMax.ml[47,1414+29]..[47,1414+37])
                            Pexp_ident "infinity" (lib/NatInfinityMax.ml[47,1414+29]..[47,1414+37])
                      ]
                    expression (lib/NatInfinityMax.ml[47,1414+43]..[47,1414+51])
                      Pexp_ident "infinity" (lib/NatInfinityMax.ml[47,1414+43]..[47,1414+51])
                    Some
                      expression (lib/NatInfinityMax.ml[47,1414+57]..[47,1414+62])
                        Pexp_apply
                        expression (lib/NatInfinityMax.ml[47,1414+59]..[47,1414+60])
                          Pexp_ident "+" (lib/NatInfinityMax.ml[47,1414+59]..[47,1414+60])
                        [
                          <arg>
                          Nolabel
                            expression (lib/NatInfinityMax.ml[47,1414+57]..[47,1414+58])
                              Pexp_ident "p" (lib/NatInfinityMax.ml[47,1414+57]..[47,1414+58])
                          <arg>
                          Nolabel
                            expression (lib/NatInfinityMax.ml[47,1414+61]..[47,1414+62])
                              Pexp_ident "q" (lib/NatInfinityMax.ml[47,1414+61]..[47,1414+62])
                        ]
    ]
  structure_item (lib/NatInfinityMax.ml[49,1478+0]..[50,1492+54])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[49,1478+4]..[49,1478+9])
          Ppat_var "print" (lib/NatInfinityMax.ml[49,1478+4]..[49,1478+9])
        expression (lib/NatInfinityMax.ml[49,1478+10]..[50,1492+54]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/NatInfinityMax.ml[49,1478+10]..[49,1478+11])
            Ppat_var "p" (lib/NatInfinityMax.ml[49,1478+10]..[49,1478+11])
          expression (lib/NatInfinityMax.ml[50,1492+2]..[50,1492+54])
            Pexp_ifthenelse
            expression (lib/NatInfinityMax.ml[50,1492+5]..[50,1492+17])
              Pexp_apply
              expression (lib/NatInfinityMax.ml[50,1492+7]..[50,1492+8])
                Pexp_ident "=" (lib/NatInfinityMax.ml[50,1492+7]..[50,1492+8])
              [
                <arg>
                Nolabel
                  expression (lib/NatInfinityMax.ml[50,1492+5]..[50,1492+6])
                    Pexp_ident "p" (lib/NatInfinityMax.ml[50,1492+5]..[50,1492+6])
                <arg>
                Nolabel
                  expression (lib/NatInfinityMax.ml[50,1492+9]..[50,1492+17])
                    Pexp_ident "infinity" (lib/NatInfinityMax.ml[50,1492+9]..[50,1492+17])
              ]
            expression (lib/NatInfinityMax.ml[50,1492+23]..[50,1492+33])
              Pexp_constant PConst_string("infinity",(lib/NatInfinityMax.ml[50,1492+24]..[50,1492+32]),None)
            Some
              expression (lib/NatInfinityMax.ml[50,1492+39]..[50,1492+54])
                Pexp_apply
                expression (lib/NatInfinityMax.ml[50,1492+39]..[50,1492+52])
                  Pexp_ident "string_of_int" (lib/NatInfinityMax.ml[50,1492+39]..[50,1492+52])
                [
                  <arg>
                  Nolabel
                    expression (lib/NatInfinityMax.ml[50,1492+53]..[50,1492+54])
                      Pexp_ident "p" (lib/NatInfinityMax.ml[50,1492+53]..[50,1492+54])
                ]
    ]
  structure_item (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
          Ppat_construct "()" (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
          None
        expression (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
          Pexp_apply
          expression (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
            Pexp_ident "Ppx_inline_test_lib.unset_lib" (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
          [
            <arg>
            Nolabel
              expression (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost,None)
          ]
    ]
  structure_item (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
          Ppat_construct "()" (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
          None
        expression (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
          Pexp_apply
          expression (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
            Pexp_ident "Expect_test_collector.Current_file.unset" (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
          [
            <arg>
            Nolabel
              expression (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
                Pexp_construct "()" (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
                None
          ]
    ]
  structure_item (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
          Ppat_construct "()" (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
          None
        expression (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
          Pexp_apply
          expression (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
            Pexp_ident "Ppx_bench_lib.Benchmark_accumulator.Current_libname.unset" (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
          [
            <arg>
            Nolabel
              expression (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
                Pexp_construct "()" (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
                None
          ]
    ]
  structure_item (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
          Ppat_construct "()" (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
          None
        expression (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
          Pexp_apply
          expression (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
            Pexp_ident "Ppx_module_timer_runtime.record_until" (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
          [
            <arg>
            Nolabel
              expression (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
                Pexp_ident "Ppx_module_timer_runtime.__MODULE__" (lib/NatInfinityMax.ml[50,1492+54]..[50,1492+54]) ghost
          ]
    ]
]

[@@@ocaml.ppx.context
  {
    tool_name = "ppx_driver";
    include_dirs = [];
    load_path = [];
    open_modules = [];
    for_package = None;
    debug = false;
    use_threads = false;
    use_vmthreads = false;
    recursive_types = false;
    principal = false;
    transparent_modules = false;
    unboxed_types = false;
    unsafe_string = false;
    cookies = [("inline_tests", "enabled"); ("library-name", "gbnf_parser")]
  }]
let () =
  Ppx_module_timer_runtime.record_start Ppx_module_timer_runtime.__MODULE__
let () =
  Ppx_bench_lib.Benchmark_accumulator.Current_libname.set "gbnf_parser"
let () =
  Expect_test_collector.Current_file.set
    ~absolute_filename:"lib/NatInfinityMax.ml"
let () =
  Ppx_inline_test_lib.set_lib_and_partition "gbnf_parser" "NatInfinityMax.ml"
type property = int
let bottom = 0
let infinity = max_int
let finite n = assert ((0 <= n) && (n < infinity)); n
let to_int p = p
let equal : property -> property -> bool = (=)
let is_maximal p = p = infinity
let max = max
let max_lazy p q = if p = infinity then infinity else max p (q ())
let add p q = if (p = infinity) || (q = infinity) then infinity else p + q
let add_lazy p q =
  if p = infinity
  then infinity
  else (let q = q () in if q = infinity then infinity else p + q)
let print p = if p = infinity then "infinity" else string_of_int p
let () = Ppx_inline_test_lib.unset_lib "gbnf_parser"
let () = Expect_test_collector.Current_file.unset ()
let () = Ppx_bench_lib.Benchmark_accumulator.Current_libname.unset ()
let () =
  Ppx_module_timer_runtime.record_until Ppx_module_timer_runtime.__MODULE__
[
  structure_item (_none_[0,0+-1].._none_[0,0+-1]) ghost
    Tstr_attribute "ocaml.ppx.context"
    [
      structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
        Pstr_eval
        expression (_none_[0,0+-1]..[0,0+-1]) ghost
          Pexp_record
          [
            "tool_name" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_constant PConst_string("ppx_driver",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
            "include_dirs" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "load_path" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "open_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "for_package" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "None" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "debug" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_threads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_vmthreads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "recursive_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "principal" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "transparent_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unboxed_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unsafe_string" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "cookies" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                Some
                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                    Pexp_tuple
                    [
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_tuple
                        [
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_constant PConst_string("inline_tests",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                          expression (<command-line>[1,0+0]..[1,0+9])
                            Pexp_constant PConst_string("enabled",(<command-line>[1,0+1]..[1,0+8]),None)
                        ]
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                        Some
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_tuple
                            [
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_tuple
                                [
                                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                    Pexp_constant PConst_string("library-name",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                                  expression (<command-line>[1,0+0]..[1,0+13])
                                    Pexp_constant PConst_string("gbnf_parser",(<command-line>[1,0+1]..[1,0+12]),None)
                                ]
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                                None
                            ]
                    ]
          ]
          None
    ]
  structure_item (lib/NatInfinityMax.ml[14,976+0]..lib/NatInfinityMax.ml[14,976+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[14,976+0]..lib/NatInfinityMax.ml[14,976+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/NatInfinityMax.ml[14,976+0]..lib/NatInfinityMax.ml[14,976+0]) ghost
          Texp_apply
          expression (lib/NatInfinityMax.ml[14,976+0]..lib/NatInfinityMax.ml[14,976+0]) ghost
            Texp_ident "Ppx_module_timer_runtime!.record_start"
          [
            <arg>
              Nolabel
              expression (lib/NatInfinityMax.ml[14,976+0]..lib/NatInfinityMax.ml[14,976+0]) ghost
                Texp_ident "Ppx_module_timer_runtime!.__MODULE__"
          ]
    ]
  structure_item (lib/NatInfinityMax.ml[14,976+0]..lib/NatInfinityMax.ml[14,976+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[14,976+0]..lib/NatInfinityMax.ml[14,976+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/NatInfinityMax.ml[14,976+0]..lib/NatInfinityMax.ml[14,976+0]) ghost
          Texp_apply
          expression (lib/NatInfinityMax.ml[14,976+0]..lib/NatInfinityMax.ml[14,976+0]) ghost
            Texp_ident "Ppx_bench_lib!.Benchmark_accumulator.Current_libname.set"
          [
            <arg>
              Nolabel
              expression (lib/NatInfinityMax.ml[14,976+0]..lib/NatInfinityMax.ml[14,976+0]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/NatInfinityMax.ml[14,976+0]..lib/NatInfinityMax.ml[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/NatInfinityMax.ml[14,976+0]..lib/NatInfinityMax.ml[14,976+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[14,976+0]..lib/NatInfinityMax.ml[14,976+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/NatInfinityMax.ml[14,976+0]..lib/NatInfinityMax.ml[14,976+0]) ghost
          Texp_apply
          expression (lib/NatInfinityMax.ml[14,976+0]..lib/NatInfinityMax.ml[14,976+0]) ghost
            Texp_ident "Expect_test_collector!.Current_file.set"
          [
            <arg>
              Labelled "absolute_filename"
              expression (lib/NatInfinityMax.ml[14,976+0]..lib/NatInfinityMax.ml[14,976+0]) ghost
                Texp_constant Const_string("lib/NatInfinityMax.ml",(lib/NatInfinityMax.ml[14,976+0]..lib/NatInfinityMax.ml[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/NatInfinityMax.ml[14,976+0]..lib/NatInfinityMax.ml[14,976+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[14,976+0]..lib/NatInfinityMax.ml[14,976+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/NatInfinityMax.ml[14,976+0]..lib/NatInfinityMax.ml[14,976+0]) ghost
          Texp_apply
          expression (lib/NatInfinityMax.ml[14,976+0]..lib/NatInfinityMax.ml[14,976+0]) ghost
            Texp_ident "Ppx_inline_test_lib!.set_lib_and_partition"
          [
            <arg>
              Nolabel
              expression (lib/NatInfinityMax.ml[14,976+0]..lib/NatInfinityMax.ml[14,976+0]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/NatInfinityMax.ml[14,976+0]..lib/NatInfinityMax.ml[14,976+0]) ghost,None)
            <arg>
              Nolabel
              expression (lib/NatInfinityMax.ml[14,976+0]..lib/NatInfinityMax.ml[14,976+0]) ghost
                Texp_constant Const_string("NatInfinityMax.ml",(lib/NatInfinityMax.ml[14,976+0]..lib/NatInfinityMax.ml[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/NatInfinityMax.ml[14,976+0]..lib/NatInfinityMax.ml[15,992+5])
    Tstr_type Rec
    [
      type_declaration property/1132 (lib/NatInfinityMax.ml[14,976+0]..lib/NatInfinityMax.ml[15,992+5])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/NatInfinityMax.ml[15,992+2]..lib/NatInfinityMax.ml[15,992+5])
              Ttyp_constr "int/1!"
              []
    ]
  structure_item (lib/NatInfinityMax.ml[17,999+0]..lib/NatInfinityMax.ml[18,1012+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[17,999+4]..lib/NatInfinityMax.ml[17,999+10])
          Tpat_var "bottom/1133"
        expression (lib/NatInfinityMax.ml[18,1012+2]..lib/NatInfinityMax.ml[18,1012+3])
          Texp_constant Const_int 0
    ]
  structure_item (lib/NatInfinityMax.ml[20,1017+0]..lib/NatInfinityMax.ml[21,1032+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[20,1017+4]..lib/NatInfinityMax.ml[20,1017+12])
          Tpat_var "infinity/1134"
        expression (lib/NatInfinityMax.ml[21,1032+2]..lib/NatInfinityMax.ml[21,1032+9])
          Texp_ident "Stdlib!.max_int"
    ]
  structure_item (lib/NatInfinityMax.ml[23,1043+0]..lib/NatInfinityMax.ml[25,1093+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[23,1043+4]..lib/NatInfinityMax.ml[23,1043+10])
          Tpat_var "finite/1135"
        expression (lib/NatInfinityMax.ml[23,1043+11]..lib/NatInfinityMax.ml[25,1093+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/NatInfinityMax.ml[23,1043+11]..lib/NatInfinityMax.ml[23,1043+12])
                Tpat_var "n/1137"
              expression (lib/NatInfinityMax.ml[24,1058+2]..lib/NatInfinityMax.ml[25,1093+3])
                Texp_sequence
                expression (lib/NatInfinityMax.ml[24,1058+2]..lib/NatInfinityMax.ml[24,1058+33])
                  Texp_assert                  expression (lib/NatInfinityMax.ml[24,1058+9]..lib/NatInfinityMax.ml[24,1058+33])
                    Texp_apply
                    expression (lib/NatInfinityMax.ml[24,1058+17]..lib/NatInfinityMax.ml[24,1058+19])
                      Texp_ident "Stdlib!.&&"
                    [
                      <arg>
                        Nolabel
                        expression (lib/NatInfinityMax.ml[24,1058+10]..lib/NatInfinityMax.ml[24,1058+16])
                          Texp_apply
                          expression (lib/NatInfinityMax.ml[24,1058+12]..lib/NatInfinityMax.ml[24,1058+14])
                            Texp_ident "Stdlib!.<="
                          [
                            <arg>
                              Nolabel
                              expression (lib/NatInfinityMax.ml[24,1058+10]..lib/NatInfinityMax.ml[24,1058+11])
                                Texp_constant Const_int 0
                            <arg>
                              Nolabel
                              expression (lib/NatInfinityMax.ml[24,1058+15]..lib/NatInfinityMax.ml[24,1058+16])
                                Texp_ident "n/1137"
                          ]
                      <arg>
                        Nolabel
                        expression (lib/NatInfinityMax.ml[24,1058+20]..lib/NatInfinityMax.ml[24,1058+32])
                          Texp_apply
                          expression (lib/NatInfinityMax.ml[24,1058+22]..lib/NatInfinityMax.ml[24,1058+23])
                            Texp_ident "Stdlib!.<"
                          [
                            <arg>
                              Nolabel
                              expression (lib/NatInfinityMax.ml[24,1058+20]..lib/NatInfinityMax.ml[24,1058+21])
                                Texp_ident "n/1137"
                            <arg>
                              Nolabel
                              expression (lib/NatInfinityMax.ml[24,1058+24]..lib/NatInfinityMax.ml[24,1058+32])
                                Texp_ident "infinity/1134"
                          ]
                    ]
                expression (lib/NatInfinityMax.ml[25,1093+2]..lib/NatInfinityMax.ml[25,1093+3])
                  Texp_ident "n/1137"
          ]
    ]
  structure_item (lib/NatInfinityMax.ml[27,1098+0]..lib/NatInfinityMax.ml[28,1113+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[27,1098+4]..lib/NatInfinityMax.ml[27,1098+10])
          Tpat_var "to_int/1138"
        expression (lib/NatInfinityMax.ml[27,1098+11]..lib/NatInfinityMax.ml[28,1113+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/NatInfinityMax.ml[27,1098+11]..lib/NatInfinityMax.ml[27,1098+12])
                Tpat_var "p/1140"
              expression (lib/NatInfinityMax.ml[28,1113+2]..lib/NatInfinityMax.ml[28,1113+3])
                Texp_ident "p/1140"
          ]
    ]
  structure_item (lib/NatInfinityMax.ml[30,1118+0]..lib/NatInfinityMax.ml[31,1161+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[30,1118+4]..lib/NatInfinityMax.ml[30,1118+9])
          extra
            Tpat_extra_constraint
            core_type (lib/NatInfinityMax.ml[30,1118+12]..lib/NatInfinityMax.ml[30,1118+40])
              Ttyp_arrow
              Nolabel
              core_type (lib/NatInfinityMax.ml[30,1118+12]..lib/NatInfinityMax.ml[30,1118+20])
                Ttyp_constr "property/1132"
                []
              core_type (lib/NatInfinityMax.ml[30,1118+24]..lib/NatInfinityMax.ml[30,1118+40])
                Ttyp_arrow
                Nolabel
                core_type (lib/NatInfinityMax.ml[30,1118+24]..lib/NatInfinityMax.ml[30,1118+32])
                  Ttyp_constr "property/1132"
                  []
                core_type (lib/NatInfinityMax.ml[30,1118+36]..lib/NatInfinityMax.ml[30,1118+40])
                  Ttyp_constr "bool/5!"
                  []
          Tpat_alias "equal/1141"
          pattern (lib/NatInfinityMax.ml[30,1118+4]..lib/NatInfinityMax.ml[30,1118+9])
            Tpat_any
        expression (lib/NatInfinityMax.ml[31,1161+2]..lib/NatInfinityMax.ml[31,1161+5])
          extra
            Texp_constraint
            core_type (lib/NatInfinityMax.ml[30,1118+12]..lib/NatInfinityMax.ml[30,1118+40])
              Ttyp_arrow
              Nolabel
              core_type (lib/NatInfinityMax.ml[30,1118+12]..lib/NatInfinityMax.ml[30,1118+20])
                Ttyp_constr "property/1132"
                []
              core_type (lib/NatInfinityMax.ml[30,1118+24]..lib/NatInfinityMax.ml[30,1118+40])
                Ttyp_arrow
                Nolabel
                core_type (lib/NatInfinityMax.ml[30,1118+24]..lib/NatInfinityMax.ml[30,1118+32])
                  Ttyp_constr "property/1132"
                  []
                core_type (lib/NatInfinityMax.ml[30,1118+36]..lib/NatInfinityMax.ml[30,1118+40])
                  Ttyp_constr "bool/5!"
                  []
          Texp_ident "Stdlib!.="
    ]
  structure_item (lib/NatInfinityMax.ml[33,1168+0]..lib/NatInfinityMax.ml[34,1187+14])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[33,1168+4]..lib/NatInfinityMax.ml[33,1168+14])
          Tpat_var "is_maximal/1142"
        expression (lib/NatInfinityMax.ml[33,1168+15]..lib/NatInfinityMax.ml[34,1187+14]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/NatInfinityMax.ml[33,1168+15]..lib/NatInfinityMax.ml[33,1168+16])
                Tpat_var "p/1144"
              expression (lib/NatInfinityMax.ml[34,1187+2]..lib/NatInfinityMax.ml[34,1187+14])
                Texp_apply
                expression (lib/NatInfinityMax.ml[34,1187+4]..lib/NatInfinityMax.ml[34,1187+5])
                  Texp_ident "Stdlib!.="
                [
                  <arg>
                    Nolabel
                    expression (lib/NatInfinityMax.ml[34,1187+2]..lib/NatInfinityMax.ml[34,1187+3])
                      Texp_ident "p/1144"
                  <arg>
                    Nolabel
                    expression (lib/NatInfinityMax.ml[34,1187+6]..lib/NatInfinityMax.ml[34,1187+14])
                      Texp_ident "infinity/1134"
                ]
          ]
    ]
  structure_item (lib/NatInfinityMax.ml[36,1203+0]..lib/NatInfinityMax.ml[37,1213+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[36,1203+4]..lib/NatInfinityMax.ml[36,1203+7])
          Tpat_var "max/1145"
        expression (lib/NatInfinityMax.ml[37,1213+2]..lib/NatInfinityMax.ml[37,1213+5])
          Texp_ident "Stdlib!.max"
    ]
  structure_item (lib/NatInfinityMax.ml[39,1220+0]..lib/NatInfinityMax.ml[40,1239+48])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[39,1220+4]..lib/NatInfinityMax.ml[39,1220+12])
          Tpat_var "max_lazy/1146"
        expression (lib/NatInfinityMax.ml[39,1220+13]..lib/NatInfinityMax.ml[40,1239+48]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/NatInfinityMax.ml[39,1220+13]..lib/NatInfinityMax.ml[39,1220+14])
                Tpat_var "p/1148"
              expression (lib/NatInfinityMax.ml[39,1220+15]..lib/NatInfinityMax.ml[40,1239+48]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/NatInfinityMax.ml[39,1220+15]..lib/NatInfinityMax.ml[39,1220+16])
                      Tpat_var "q/1149"
                    expression (lib/NatInfinityMax.ml[40,1239+2]..lib/NatInfinityMax.ml[40,1239+48])
                      Texp_ifthenelse
                      expression (lib/NatInfinityMax.ml[40,1239+5]..lib/NatInfinityMax.ml[40,1239+17])
                        Texp_apply
                        expression (lib/NatInfinityMax.ml[40,1239+7]..lib/NatInfinityMax.ml[40,1239+8])
                          Texp_ident "Stdlib!.="
                        [
                          <arg>
                            Nolabel
                            expression (lib/NatInfinityMax.ml[40,1239+5]..lib/NatInfinityMax.ml[40,1239+6])
                              Texp_ident "p/1148"
                          <arg>
                            Nolabel
                            expression (lib/NatInfinityMax.ml[40,1239+9]..lib/NatInfinityMax.ml[40,1239+17])
                              Texp_ident "infinity/1134"
                        ]
                      expression (lib/NatInfinityMax.ml[40,1239+23]..lib/NatInfinityMax.ml[40,1239+31])
                        Texp_ident "infinity/1134"
                      Some
                        expression (lib/NatInfinityMax.ml[40,1239+37]..lib/NatInfinityMax.ml[40,1239+48])
                          Texp_apply
                          expression (lib/NatInfinityMax.ml[40,1239+37]..lib/NatInfinityMax.ml[40,1239+40])
                            Texp_ident "max/1145"
                          [
                            <arg>
                              Nolabel
                              expression (lib/NatInfinityMax.ml[40,1239+41]..lib/NatInfinityMax.ml[40,1239+42])
                                Texp_ident "p/1148"
                            <arg>
                              Nolabel
                              expression (lib/NatInfinityMax.ml[40,1239+43]..lib/NatInfinityMax.ml[40,1239+48])
                                Texp_apply
                                expression (lib/NatInfinityMax.ml[40,1239+44]..lib/NatInfinityMax.ml[40,1239+45])
                                  Texp_ident "q/1149"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/NatInfinityMax.ml[40,1239+45]..lib/NatInfinityMax.ml[40,1239+47])
                                      Texp_construct "()"
                                      []
                                ]
                          ]
                ]
          ]
    ]
  structure_item (lib/NatInfinityMax.ml[42,1289+0]..lib/NatInfinityMax.ml[43,1303+58])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[42,1289+4]..lib/NatInfinityMax.ml[42,1289+7])
          Tpat_var "add/1150"
        expression (lib/NatInfinityMax.ml[42,1289+8]..lib/NatInfinityMax.ml[43,1303+58]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/NatInfinityMax.ml[42,1289+8]..lib/NatInfinityMax.ml[42,1289+9])
                Tpat_var "p/1152"
              expression (lib/NatInfinityMax.ml[42,1289+10]..lib/NatInfinityMax.ml[43,1303+58]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/NatInfinityMax.ml[42,1289+10]..lib/NatInfinityMax.ml[42,1289+11])
                      Tpat_var "q/1153"
                    expression (lib/NatInfinityMax.ml[43,1303+2]..lib/NatInfinityMax.ml[43,1303+58])
                      Texp_ifthenelse
                      expression (lib/NatInfinityMax.ml[43,1303+5]..lib/NatInfinityMax.ml[43,1303+33])
                        Texp_apply
                        expression (lib/NatInfinityMax.ml[43,1303+18]..lib/NatInfinityMax.ml[43,1303+20])
                          Texp_ident "Stdlib!.||"
                        [
                          <arg>
                            Nolabel
                            expression (lib/NatInfinityMax.ml[43,1303+5]..lib/NatInfinityMax.ml[43,1303+17])
                              Texp_apply
                              expression (lib/NatInfinityMax.ml[43,1303+7]..lib/NatInfinityMax.ml[43,1303+8])
                                Texp_ident "Stdlib!.="
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/NatInfinityMax.ml[43,1303+5]..lib/NatInfinityMax.ml[43,1303+6])
                                    Texp_ident "p/1152"
                                <arg>
                                  Nolabel
                                  expression (lib/NatInfinityMax.ml[43,1303+9]..lib/NatInfinityMax.ml[43,1303+17])
                                    Texp_ident "infinity/1134"
                              ]
                          <arg>
                            Nolabel
                            expression (lib/NatInfinityMax.ml[43,1303+21]..lib/NatInfinityMax.ml[43,1303+33])
                              Texp_apply
                              expression (lib/NatInfinityMax.ml[43,1303+23]..lib/NatInfinityMax.ml[43,1303+24])
                                Texp_ident "Stdlib!.="
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/NatInfinityMax.ml[43,1303+21]..lib/NatInfinityMax.ml[43,1303+22])
                                    Texp_ident "q/1153"
                                <arg>
                                  Nolabel
                                  expression (lib/NatInfinityMax.ml[43,1303+25]..lib/NatInfinityMax.ml[43,1303+33])
                                    Texp_ident "infinity/1134"
                              ]
                        ]
                      expression (lib/NatInfinityMax.ml[43,1303+39]..lib/NatInfinityMax.ml[43,1303+47])
                        Texp_ident "infinity/1134"
                      Some
                        expression (lib/NatInfinityMax.ml[43,1303+53]..lib/NatInfinityMax.ml[43,1303+58])
                          Texp_apply
                          expression (lib/NatInfinityMax.ml[43,1303+55]..lib/NatInfinityMax.ml[43,1303+56])
                            Texp_ident "Stdlib!.+"
                          [
                            <arg>
                              Nolabel
                              expression (lib/NatInfinityMax.ml[43,1303+53]..lib/NatInfinityMax.ml[43,1303+54])
                                Texp_ident "p/1152"
                            <arg>
                              Nolabel
                              expression (lib/NatInfinityMax.ml[43,1303+57]..lib/NatInfinityMax.ml[43,1303+58])
                                Texp_ident "q/1153"
                          ]
                ]
          ]
    ]
  structure_item (lib/NatInfinityMax.ml[45,1363+0]..lib/NatInfinityMax.ml[47,1414+62])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[45,1363+4]..lib/NatInfinityMax.ml[45,1363+12])
          Tpat_var "add_lazy/1154"
        expression (lib/NatInfinityMax.ml[45,1363+13]..lib/NatInfinityMax.ml[47,1414+62]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/NatInfinityMax.ml[45,1363+13]..lib/NatInfinityMax.ml[45,1363+14])
                Tpat_var "p/1156"
              expression (lib/NatInfinityMax.ml[45,1363+15]..lib/NatInfinityMax.ml[47,1414+62]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/NatInfinityMax.ml[45,1363+15]..lib/NatInfinityMax.ml[45,1363+16])
                      Tpat_var "q/1157"
                    expression (lib/NatInfinityMax.ml[46,1382+2]..lib/NatInfinityMax.ml[47,1414+62])
                      Texp_ifthenelse
                      expression (lib/NatInfinityMax.ml[46,1382+5]..lib/NatInfinityMax.ml[46,1382+17])
                        Texp_apply
                        expression (lib/NatInfinityMax.ml[46,1382+7]..lib/NatInfinityMax.ml[46,1382+8])
                          Texp_ident "Stdlib!.="
                        [
                          <arg>
                            Nolabel
                            expression (lib/NatInfinityMax.ml[46,1382+5]..lib/NatInfinityMax.ml[46,1382+6])
                              Texp_ident "p/1156"
                          <arg>
                            Nolabel
                            expression (lib/NatInfinityMax.ml[46,1382+9]..lib/NatInfinityMax.ml[46,1382+17])
                              Texp_ident "infinity/1134"
                        ]
                      expression (lib/NatInfinityMax.ml[46,1382+23]..lib/NatInfinityMax.ml[46,1382+31])
                        Texp_ident "infinity/1134"
                      Some
                        expression (lib/NatInfinityMax.ml[47,1414+7]..lib/NatInfinityMax.ml[47,1414+62])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (lib/NatInfinityMax.ml[47,1414+11]..lib/NatInfinityMax.ml[47,1414+12])
                                Tpat_var "q/1158"
                              expression (lib/NatInfinityMax.ml[47,1414+15]..lib/NatInfinityMax.ml[47,1414+18])
                                Texp_apply
                                expression (lib/NatInfinityMax.ml[47,1414+15]..lib/NatInfinityMax.ml[47,1414+16])
                                  Texp_ident "q/1157"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/NatInfinityMax.ml[47,1414+16]..lib/NatInfinityMax.ml[47,1414+18])
                                      Texp_construct "()"
                                      []
                                ]
                          ]
                          expression (lib/NatInfinityMax.ml[47,1414+22]..lib/NatInfinityMax.ml[47,1414+62])
                            Texp_ifthenelse
                            expression (lib/NatInfinityMax.ml[47,1414+25]..lib/NatInfinityMax.ml[47,1414+37])
                              Texp_apply
                              expression (lib/NatInfinityMax.ml[47,1414+27]..lib/NatInfinityMax.ml[47,1414+28])
                                Texp_ident "Stdlib!.="
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/NatInfinityMax.ml[47,1414+25]..lib/NatInfinityMax.ml[47,1414+26])
                                    Texp_ident "q/1158"
                                <arg>
                                  Nolabel
                                  expression (lib/NatInfinityMax.ml[47,1414+29]..lib/NatInfinityMax.ml[47,1414+37])
                                    Texp_ident "infinity/1134"
                              ]
                            expression (lib/NatInfinityMax.ml[47,1414+43]..lib/NatInfinityMax.ml[47,1414+51])
                              Texp_ident "infinity/1134"
                            Some
                              expression (lib/NatInfinityMax.ml[47,1414+57]..lib/NatInfinityMax.ml[47,1414+62])
                                Texp_apply
                                expression (lib/NatInfinityMax.ml[47,1414+59]..lib/NatInfinityMax.ml[47,1414+60])
                                  Texp_ident "Stdlib!.+"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/NatInfinityMax.ml[47,1414+57]..lib/NatInfinityMax.ml[47,1414+58])
                                      Texp_ident "p/1156"
                                  <arg>
                                    Nolabel
                                    expression (lib/NatInfinityMax.ml[47,1414+61]..lib/NatInfinityMax.ml[47,1414+62])
                                      Texp_ident "q/1158"
                                ]
                ]
          ]
    ]
  structure_item (lib/NatInfinityMax.ml[49,1478+0]..lib/NatInfinityMax.ml[50,1492+54])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[49,1478+4]..lib/NatInfinityMax.ml[49,1478+9])
          Tpat_var "print/1159"
        expression (lib/NatInfinityMax.ml[49,1478+10]..lib/NatInfinityMax.ml[50,1492+54]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/NatInfinityMax.ml[49,1478+10]..lib/NatInfinityMax.ml[49,1478+11])
                Tpat_var "p/1161"
              expression (lib/NatInfinityMax.ml[50,1492+2]..lib/NatInfinityMax.ml[50,1492+54])
                Texp_ifthenelse
                expression (lib/NatInfinityMax.ml[50,1492+5]..lib/NatInfinityMax.ml[50,1492+17])
                  Texp_apply
                  expression (lib/NatInfinityMax.ml[50,1492+7]..lib/NatInfinityMax.ml[50,1492+8])
                    Texp_ident "Stdlib!.="
                  [
                    <arg>
                      Nolabel
                      expression (lib/NatInfinityMax.ml[50,1492+5]..lib/NatInfinityMax.ml[50,1492+6])
                        Texp_ident "p/1161"
                    <arg>
                      Nolabel
                      expression (lib/NatInfinityMax.ml[50,1492+9]..lib/NatInfinityMax.ml[50,1492+17])
                        Texp_ident "infinity/1134"
                  ]
                expression (lib/NatInfinityMax.ml[50,1492+23]..lib/NatInfinityMax.ml[50,1492+33])
                  Texp_constant Const_string("infinity",(lib/NatInfinityMax.ml[50,1492+24]..lib/NatInfinityMax.ml[50,1492+32]),None)
                Some
                  expression (lib/NatInfinityMax.ml[50,1492+39]..lib/NatInfinityMax.ml[50,1492+54])
                    Texp_apply
                    expression (lib/NatInfinityMax.ml[50,1492+39]..lib/NatInfinityMax.ml[50,1492+52])
                      Texp_ident "Stdlib!.string_of_int"
                    [
                      <arg>
                        Nolabel
                        expression (lib/NatInfinityMax.ml[50,1492+53]..lib/NatInfinityMax.ml[50,1492+54])
                          Texp_ident "p/1161"
                    ]
          ]
    ]
  structure_item (lib/NatInfinityMax.ml[50,1492+54]..lib/NatInfinityMax.ml[50,1492+54]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[50,1492+54]..lib/NatInfinityMax.ml[50,1492+54]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/NatInfinityMax.ml[50,1492+54]..lib/NatInfinityMax.ml[50,1492+54]) ghost
          Texp_apply
          expression (lib/NatInfinityMax.ml[50,1492+54]..lib/NatInfinityMax.ml[50,1492+54]) ghost
            Texp_ident "Ppx_inline_test_lib!.unset_lib"
          [
            <arg>
              Nolabel
              expression (lib/NatInfinityMax.ml[50,1492+54]..lib/NatInfinityMax.ml[50,1492+54]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/NatInfinityMax.ml[50,1492+54]..lib/NatInfinityMax.ml[50,1492+54]) ghost,None)
          ]
    ]
  structure_item (lib/NatInfinityMax.ml[50,1492+54]..lib/NatInfinityMax.ml[50,1492+54]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[50,1492+54]..lib/NatInfinityMax.ml[50,1492+54]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/NatInfinityMax.ml[50,1492+54]..lib/NatInfinityMax.ml[50,1492+54]) ghost
          Texp_apply
          expression (lib/NatInfinityMax.ml[50,1492+54]..lib/NatInfinityMax.ml[50,1492+54]) ghost
            Texp_ident "Expect_test_collector!.Current_file.unset"
          [
            <arg>
              Nolabel
              expression (lib/NatInfinityMax.ml[50,1492+54]..lib/NatInfinityMax.ml[50,1492+54]) ghost
                Texp_construct "()"
                []
          ]
    ]
  structure_item (lib/NatInfinityMax.ml[50,1492+54]..lib/NatInfinityMax.ml[50,1492+54]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[50,1492+54]..lib/NatInfinityMax.ml[50,1492+54]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/NatInfinityMax.ml[50,1492+54]..lib/NatInfinityMax.ml[50,1492+54]) ghost
          Texp_apply
          expression (lib/NatInfinityMax.ml[50,1492+54]..lib/NatInfinityMax.ml[50,1492+54]) ghost
            Texp_ident "Ppx_bench_lib!.Benchmark_accumulator.Current_libname.unset"
          [
            <arg>
              Nolabel
              expression (lib/NatInfinityMax.ml[50,1492+54]..lib/NatInfinityMax.ml[50,1492+54]) ghost
                Texp_construct "()"
                []
          ]
    ]
  structure_item (lib/NatInfinityMax.ml[50,1492+54]..lib/NatInfinityMax.ml[50,1492+54]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/NatInfinityMax.ml[50,1492+54]..lib/NatInfinityMax.ml[50,1492+54]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/NatInfinityMax.ml[50,1492+54]..lib/NatInfinityMax.ml[50,1492+54]) ghost
          Texp_apply
          expression (lib/NatInfinityMax.ml[50,1492+54]..lib/NatInfinityMax.ml[50,1492+54]) ghost
            Texp_ident "Ppx_module_timer_runtime!.record_until"
          [
            <arg>
              Nolabel
              expression (lib/NatInfinityMax.ml[50,1492+54]..lib/NatInfinityMax.ml[50,1492+54]) ghost
                Texp_ident "Ppx_module_timer_runtime!.__MODULE__"
          ]
    ]
]

{<Gbnf_parser__NatInfinityMax>
 "add"[value] -> <Gbnf_parser__NatInfinityMax.14>;
 "add_lazy"[value] -> <Gbnf_parser__NatInfinityMax.17>;
 "bottom"[value] -> <Gbnf_parser__NatInfinityMax.1>;
 "equal"[value] -> <Gbnf_parser__NatInfinityMax.7>;
 "finite"[value] -> <Gbnf_parser__NatInfinityMax.3>;
 "infinity"[value] -> <Gbnf_parser__NatInfinityMax.2>;
 "is_maximal"[value] -> <Gbnf_parser__NatInfinityMax.8>;
 "max"[value] -> <Gbnf_parser__NatInfinityMax.10>;
 "max_lazy"[value] -> <Gbnf_parser__NatInfinityMax.11>;
 "print"[value] -> <Gbnf_parser__NatInfinityMax.21>;
 "property"[type] -> <Gbnf_parser__NatInfinityMax.0>;
 "to_int"[value] -> <Gbnf_parser__NatInfinityMax.5>;
 }

(seq
  (let
    (*match*/1456 =
       (apply (field_imm 3 (global Ppx_module_timer_runtime!))
         #"Gbnf_parser__NatInfinityMax"))
    0)
  (let
    (*match*/1458 =
       (apply
         (field_imm 0
           (field_imm 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
         "gbnf_parser"))
    0)
  (let
    (*match*/1460 =
       (apply (field_imm 0 (field_imm 5 (global Expect_test_collector!)))
         "lib/NatInfinityMax.ml"))
    0)
  (let
    (*match*/1462 =
       (apply (field_imm 4 (global Ppx_inline_test_lib!)) "gbnf_parser"
         "NatInfinityMax.ml"))
    0)
  (let (bottom/1133 =[int] 0)
    (setfield_ptr(root-init) 0 (global Gbnf_parser__NatInfinityMax!)
      bottom/1133))
  (let (infinity/1134 =[int] (field_imm 18 (global Stdlib!)))
    (setfield_ptr(root-init) 1 (global Gbnf_parser__NatInfinityMax!)
      infinity/1134))
  (let
    (finite/1135 =
       (function n/1137[int] : int
         (seq
           (if
             (&& (<= 0 n/1137)
               (< n/1137 (field_imm 1 (global Gbnf_parser__NatInfinityMax!))))
             0
             (raise
               (makeblock 0 (global Assert_failure/28!)
                 [0: "lib/NatInfinityMax.ml" 24 2])))
           n/1137)))
    (setfield_ptr(root-init) 2 (global Gbnf_parser__NatInfinityMax!)
      finite/1135))
  (let (to_int/1138 = (function p/1140 p/1140))
    (setfield_ptr(root-init) 3 (global Gbnf_parser__NatInfinityMax!)
      to_int/1138))
  (let
    (equal/1141 =
       (function prim/1464 prim/1463 stub (== prim/1464 prim/1463)))
    (setfield_ptr(root-init) 4 (global Gbnf_parser__NatInfinityMax!)
      equal/1141))
  (let
    (is_maximal/1142 =
       (function p/1144[int] : int
         (== p/1144 (field_imm 1 (global Gbnf_parser__NatInfinityMax!)))))
    (setfield_ptr(root-init) 5 (global Gbnf_parser__NatInfinityMax!)
      is_maximal/1142))
  (let (max/1145 = (field_imm 16 (global Stdlib!)))
    (setfield_ptr(root-init) 6 (global Gbnf_parser__NatInfinityMax!)
      max/1145))
  (let
    (max_lazy/1146 =
       (function p/1148[int] q/1149 : int
         (if (== p/1148 (field_imm 1 (global Gbnf_parser__NatInfinityMax!)))
           (field_imm 1 (global Gbnf_parser__NatInfinityMax!))
           (apply (field_imm 6 (global Gbnf_parser__NatInfinityMax!)) p/1148
             (apply q/1149 0)))))
    (setfield_ptr(root-init) 7 (global Gbnf_parser__NatInfinityMax!)
      max_lazy/1146))
  (let
    (add/1150 =
       (function p/1152[int] q/1153[int] : int
         (if
           (||
             (== p/1152 (field_imm 1 (global Gbnf_parser__NatInfinityMax!)))
             (== q/1153 (field_imm 1 (global Gbnf_parser__NatInfinityMax!))))
           (field_imm 1 (global Gbnf_parser__NatInfinityMax!))
           (+ p/1152 q/1153))))
    (setfield_ptr(root-init) 8 (global Gbnf_parser__NatInfinityMax!)
      add/1150))
  (let
    (add_lazy/1154 =
       (function p/1156[int] q/1157 : int
         (if (== p/1156 (field_imm 1 (global Gbnf_parser__NatInfinityMax!)))
           (field_imm 1 (global Gbnf_parser__NatInfinityMax!))
           (let (q/1158 =[int] (apply q/1157 0))
             (if
               (== q/1158
                 (field_imm 1 (global Gbnf_parser__NatInfinityMax!)))
               (field_imm 1 (global Gbnf_parser__NatInfinityMax!))
               (+ p/1156 q/1158))))))
    (setfield_ptr(root-init) 9 (global Gbnf_parser__NatInfinityMax!)
      add_lazy/1154))
  (let
    (print/1159 =
       (function p/1161[int]
         (if (== p/1161 (field_imm 1 (global Gbnf_parser__NatInfinityMax!)))
           "infinity" (apply (field_imm 32 (global Stdlib!)) p/1161))))
    (setfield_ptr(root-init) 10 (global Gbnf_parser__NatInfinityMax!)
      print/1159))
  (let
    (*match*/1467 =
       (apply (field_imm 5 (global Ppx_inline_test_lib!)) "gbnf_parser"))
    0)
  (let
    (*match*/1469 =
       (apply (field_imm 1 (field_imm 5 (global Expect_test_collector!))) 0))
    0)
  (let
    (*match*/1471 =
       (apply
         (field_imm 1
           (field_imm 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
         0))
    0)
  (let
    (*match*/1473 =
       (apply (field_imm 4 (global Ppx_module_timer_runtime!))
         #"Gbnf_parser__NatInfinityMax"))
    0)
  0)
(seq
  (let
    (*match*/1456 =
       (apply (field_imm 3 (global Ppx_module_timer_runtime!))
         #"Gbnf_parser__NatInfinityMax"))
    0)
  (let
    (*match*/1458 =
       (apply
         (field_imm 0
           (field_imm 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
         "gbnf_parser"))
    0)
  (let
    (*match*/1460 =
       (apply (field_imm 0 (field_imm 5 (global Expect_test_collector!)))
         "lib/NatInfinityMax.ml"))
    0)
  (let
    (*match*/1462 =
       (apply (field_imm 4 (global Ppx_inline_test_lib!)) "gbnf_parser"
         "NatInfinityMax.ml"))
    0)
  (let (bottom/1133 =[int] 0)
    (setfield_ptr(root-init) 0 (global Gbnf_parser__NatInfinityMax!)
      bottom/1133))
  (let (infinity/1134 =[int] (field_imm 18 (global Stdlib!)))
    (setfield_ptr(root-init) 1 (global Gbnf_parser__NatInfinityMax!)
      infinity/1134))
  (let
    (finite/1135 =
       (function n/1137[int] : int
         (seq
           (if
             (&& (<= 0 n/1137)
               (< n/1137 (field_imm 1 (global Gbnf_parser__NatInfinityMax!))))
             0
             (raise
               (makeblock 0 (global Assert_failure/28!)
                 [0: "lib/NatInfinityMax.ml" 24 2])))
           n/1137)))
    (setfield_ptr(root-init) 2 (global Gbnf_parser__NatInfinityMax!)
      finite/1135))
  (let (to_int/1138 = (function p/1140 p/1140))
    (setfield_ptr(root-init) 3 (global Gbnf_parser__NatInfinityMax!)
      to_int/1138))
  (let
    (equal/1141 =
       (function prim/1464 prim/1463 stub (== prim/1464 prim/1463)))
    (setfield_ptr(root-init) 4 (global Gbnf_parser__NatInfinityMax!)
      equal/1141))
  (let
    (is_maximal/1142 =
       (function p/1144[int] : int
         (== p/1144 (field_imm 1 (global Gbnf_parser__NatInfinityMax!)))))
    (setfield_ptr(root-init) 5 (global Gbnf_parser__NatInfinityMax!)
      is_maximal/1142))
  (let (max/1145 = (field_imm 16 (global Stdlib!)))
    (setfield_ptr(root-init) 6 (global Gbnf_parser__NatInfinityMax!)
      max/1145))
  (let
    (max_lazy/1146 =
       (function p/1148[int] q/1149 : int
         (if (== p/1148 (field_imm 1 (global Gbnf_parser__NatInfinityMax!)))
           (field_imm 1 (global Gbnf_parser__NatInfinityMax!))
           (apply (field_imm 6 (global Gbnf_parser__NatInfinityMax!)) p/1148
             (apply q/1149 0)))))
    (setfield_ptr(root-init) 7 (global Gbnf_parser__NatInfinityMax!)
      max_lazy/1146))
  (let
    (add/1150 =
       (function p/1152[int] q/1153[int] : int
         (if
           (||
             (== p/1152 (field_imm 1 (global Gbnf_parser__NatInfinityMax!)))
             (== q/1153 (field_imm 1 (global Gbnf_parser__NatInfinityMax!))))
           (field_imm 1 (global Gbnf_parser__NatInfinityMax!))
           (+ p/1152 q/1153))))
    (setfield_ptr(root-init) 8 (global Gbnf_parser__NatInfinityMax!)
      add/1150))
  (let
    (add_lazy/1154 =
       (function p/1156[int] q/1157 : int
         (if (== p/1156 (field_imm 1 (global Gbnf_parser__NatInfinityMax!)))
           (field_imm 1 (global Gbnf_parser__NatInfinityMax!))
           (let (q/1158 =[int] (apply q/1157 0))
             (if
               (== q/1158
                 (field_imm 1 (global Gbnf_parser__NatInfinityMax!)))
               (field_imm 1 (global Gbnf_parser__NatInfinityMax!))
               (+ p/1156 q/1158))))))
    (setfield_ptr(root-init) 9 (global Gbnf_parser__NatInfinityMax!)
      add_lazy/1154))
  (let
    (print/1159 =
       (function p/1161[int]
         (if (== p/1161 (field_imm 1 (global Gbnf_parser__NatInfinityMax!)))
           "infinity" (apply (field_imm 32 (global Stdlib!)) p/1161))))
    (setfield_ptr(root-init) 10 (global Gbnf_parser__NatInfinityMax!)
      print/1159))
  (let
    (*match*/1467 =
       (apply (field_imm 5 (global Ppx_inline_test_lib!)) "gbnf_parser"))
    0)
  (let
    (*match*/1469 =
       (apply (field_imm 1 (field_imm 5 (global Expect_test_collector!))) 0))
    0)
  (let
    (*match*/1471 =
       (apply
         (field_imm 1
           (field_imm 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
         0))
    0)
  (let
    (*match*/1473 =
       (apply (field_imm 4 (global Ppx_module_timer_runtime!))
         #"Gbnf_parser__NatInfinityMax"))
    0)
  0)
