[
  structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
    Pstr_attribute "ocaml.ppx.context"
    [
      structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
        Pstr_eval
        expression (_none_[0,0+-1]..[0,0+-1]) ghost
          Pexp_record
          [
            "tool_name" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_constant PConst_string("ppx_driver",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
            "include_dirs" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "load_path" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "open_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "for_package" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "None" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "debug" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_threads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_vmthreads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "recursive_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "principal" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "transparent_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unboxed_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unsafe_string" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "cookies" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                Some
                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                    Pexp_tuple
                    [
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_tuple
                        [
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_constant PConst_string("inline_tests",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                          expression (<command-line>[1,0+0]..[1,0+9])
                            Pexp_constant PConst_string("enabled",(<command-line>[1,0+1]..[1,0+8]),None)
                        ]
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                        Some
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_tuple
                            [
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_tuple
                                [
                                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                    Pexp_constant PConst_string("library-name",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                                  expression (<command-line>[1,0+0]..[1,0+13])
                                    Pexp_constant PConst_string("gbnf_parser",(<command-line>[1,0+1]..[1,0+12]),None)
                                ]
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                                None
                            ]
                    ]
          ]
          None
    ]
  structure_item (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
          Ppat_construct "()" (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
          None
        expression (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
          Pexp_apply
          expression (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
            Pexp_ident "Ppx_module_timer_runtime.record_start" (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
          [
            <arg>
            Nolabel
              expression (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
                Pexp_ident "Ppx_module_timer_runtime.__MODULE__" (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
          ]
    ]
  structure_item (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
          Ppat_construct "()" (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
          None
        expression (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
          Pexp_apply
          expression (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
            Pexp_ident "Ppx_bench_lib.Benchmark_accumulator.Current_libname.set" (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
          [
            <arg>
            Nolabel
              expression (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost,None)
          ]
    ]
  structure_item (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
          Ppat_construct "()" (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
          None
        expression (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
          Pexp_apply
          expression (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
            Pexp_ident "Expect_test_collector.Current_file.set" (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
          [
            <arg>
            Labelled "absolute_filename"
              expression (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
                Pexp_constant PConst_string("lib/lexpointfree.mll",(lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost,None)
          ]
    ]
  structure_item (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
          Ppat_construct "()" (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
          None
        expression (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
          Pexp_apply
          expression (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
            Pexp_ident "Ppx_inline_test_lib.set_lib_and_partition" (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
          [
            <arg>
            Nolabel
              expression (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost,None)
            <arg>
            Nolabel
              expression (lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost
                Pexp_constant PConst_string("lexpointfree.ml",(lib/lexpointfree.mll[16,31+2]..[16,31+2]) ghost,None)
          ]
    ]
  structure_item (lib/lexpointfree.mll[16,31+2]..[16,31+34])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (lib/lexpointfree.mll[16,31+2]..[16,31+34])
          pext_name = "InvalidPointFreeAction"
          pext_kind =
            Pext_decl
              []
              None
  structure_item (lib/lexpointfree.ml[8,94+0]..[461,30671+1])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/lexpointfree.ml[8,94+4]..[8,94+22])
          Ppat_var "__ocaml_lex_tables" (lib/lexpointfree.ml[8,94+4]..[8,94+22])
        expression (lib/lexpointfree.ml[8,94+25]..[461,30671+1])
          Pexp_record
          [
            "Lexing.lex_base" (lib/lexpointfree.ml[9,121+2]..[9,121+17])
              expression (lib/lexpointfree.ml[10,141+3]..[12,281+21])
                Pexp_constant PConst_string("\000\000\253\255\254\255\000\000\248\000\240\001\240\001\232\002\224\003\255\255\003\000\224\003\007\000\002\004\254\255\210\004\255\255\163\005",(lib/lexpointfree.ml[10,141+4]..[12,281+20]),None)
            "Lexing.lex_backtrk" (lib/lexpointfree.ml[13,304+2]..[13,304+20])
              expression (lib/lexpointfree.ml[14,327+3]..[16,467+21])
                Pexp_constant PConst_string("\255\255\255\255\255\255\002\000\002\000\002\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\001\000\255\255\255\255",(lib/lexpointfree.ml[14,327+4]..[16,467+20]),None)
            "Lexing.lex_default" (lib/lexpointfree.ml[17,490+2]..[17,490+20])
              expression (lib/lexpointfree.ml[18,513+3]..[20,653+21])
                Pexp_constant PConst_string("\001\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\255\255\255\255\014\000\000\000\255\255\000\000\255\255",(lib/lexpointfree.ml[18,513+4]..[20,653+20]),None)
            "Lexing.lex_trans" (lib/lexpointfree.ml[21,676+2]..[21,676+18])
              expression (lib/lexpointfree.ml[22,697+3]..[234,15537+37])
                Pexp_constant PConst_string("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\000\005\000\000\000\n\000\n\000\000\000\000\000\012\000\012\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\000\011\000\000\000\nn\000\n\000\t\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\nt\000\b\000\b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\bn\000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\nt\000\b\000\b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\blib/lexpointfree.ml[22,697+4]..[234,15537+36]),None)
            "Lexing.lex_check" (lib/lexpointfree.ml[235,15576+2]..[235,15576+18])
              expression (lib/lexpointfree.ml[236,15597+3]..[448,30437+37])
                Pexp_constant PConst_string("\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\000\000\255\255\n\000\n\000\255\255\255\255\012\000\012\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\003\000\255\255\nnb\000\b\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\b\000\011\000\255\255\255\255\011\000\011\000\011\000\255\255\b\000\011\000\011\000\011\000\255\255\011\000\011\000\011\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\011\000\255\255\011\000\011\000\011\000\011\000\011\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\255\255\255\255\255\255\011\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\255\255\011\000\255\255\011\000\255\255\255\255\r\000\255\255\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\255\255\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\255\255\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\255\255\r\000\r\000\r\000\r\000\r\000\r\000\r\000\rlib/lexpointfree.ml[236,15597+4]..[448,30437+36]),None)
            "Lexing.lex_base_code" (lib/lexpointfree.ml[449,30476+2]..[449,30476+22])
              expression (lib/lexpointfree.ml[450,30501+3]..[450,30501+5])
                Pexp_constant PConst_string("",(lib/lexpointfree.ml[450,30501+4]..[450,30501+4]),None)
            "Lexing.lex_backtrk_code" (lib/lexpointfree.ml[451,30508+2]..[451,30508+25])
              expression (lib/lexpointfree.ml[452,30536+3]..[452,30536+5])
                Pexp_constant PConst_string("",(lib/lexpointfree.ml[452,30536+4]..[452,30536+4]),None)
            "Lexing.lex_default_code" (lib/lexpointfree.ml[453,30543+2]..[453,30543+25])
              expression (lib/lexpointfree.ml[454,30571+3]..[454,30571+5])
                Pexp_constant PConst_string("",(lib/lexpointfree.ml[454,30571+4]..[454,30571+4]),None)
            "Lexing.lex_trans_code" (lib/lexpointfree.ml[455,30578+2]..[455,30578+23])
              expression (lib/lexpointfree.ml[456,30604+3]..[456,30604+5])
                Pexp_constant PConst_string("",(lib/lexpointfree.ml[456,30604+4]..[456,30604+4]),None)
            "Lexing.lex_check_code" (lib/lexpointfree.ml[457,30611+2]..[457,30611+23])
              expression (lib/lexpointfree.ml[458,30637+3]..[458,30637+5])
                Pexp_constant PConst_string("",(lib/lexpointfree.ml[458,30637+4]..[458,30637+4]),None)
            "Lexing.lex_code" (lib/lexpointfree.ml[459,30644+2]..[459,30644+17])
              expression (lib/lexpointfree.ml[460,30664+3]..[460,30664+5])
                Pexp_constant PConst_string("",(lib/lexpointfree.ml[460,30664+4]..[460,30664+4]),None)
          ]
          None
    ]
  structure_item (lib/lexpointfree.ml[463,30674+0]..[500,31765+69])
    Pstr_value Rec
    [
      <def>
        pattern (lib/lexpointfree.ml[463,30674+8]..[463,30674+33])
          Ppat_var "validate_pointfree_action" (lib/lexpointfree.ml[463,30674+8]..[463,30674+33])
        expression (lib/lexpointfree.ml[463,30674+34]..[464,30717+53]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/lexpointfree.ml[463,30674+34]..[463,30674+40])
            Ppat_var "lexbuf" (lib/lexpointfree.ml[463,30674+34]..[463,30674+40])
          expression (lib/lexpointfree.ml[464,30717+3]..[464,30717+53])
            Pexp_apply
            expression (lib/lexpointfree.ml[464,30717+3]..[464,30717+44])
              Pexp_ident "__ocaml_lex_validate_pointfree_action_rec" (lib/lexpointfree.ml[464,30717+3]..[464,30717+44])
            [
              <arg>
              Nolabel
                expression (lib/lexpointfree.ml[464,30717+45]..[464,30717+51])
                  Pexp_ident "lexbuf" (lib/lexpointfree.ml[464,30717+45]..[464,30717+51])
              <arg>
              Nolabel
                expression (lib/lexpointfree.ml[464,30717+52]..[464,30717+53])
                  Pexp_constant PConst_int (0,None)
            ]
      <def>
        pattern (lib/lexpointfree.ml[465,30771+4]..[465,30771+45])
          Ppat_var "__ocaml_lex_validate_pointfree_action_rec" (lib/lexpointfree.ml[465,30771+4]..[465,30771+45])
        expression (lib/lexpointfree.ml[465,30771+46]..[483,31240+72]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/lexpointfree.ml[465,30771+46]..[465,30771+52])
            Ppat_var "lexbuf" (lib/lexpointfree.ml[465,30771+46]..[465,30771+52])
          expression (lib/lexpointfree.ml[465,30771+53]..[483,31240+72]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/lexpointfree.ml[465,30771+53]..[465,30771+70])
              Ppat_var "__ocaml_lex_state" (lib/lexpointfree.ml[465,30771+53]..[465,30771+70])
            expression (lib/lexpointfree.ml[466,30844+2]..[483,31240+72])
              Pexp_match
              expression (lib/lexpointfree.ml[466,30844+8]..[466,30844+65])
                Pexp_apply
                expression (lib/lexpointfree.ml[466,30844+8]..[466,30844+21])
                  Pexp_ident "Lexing.engine" (lib/lexpointfree.ml[466,30844+8]..[466,30844+21])
                [
                  <arg>
                  Nolabel
                    expression (lib/lexpointfree.ml[466,30844+22]..[466,30844+40])
                      Pexp_ident "__ocaml_lex_tables" (lib/lexpointfree.ml[466,30844+22]..[466,30844+40])
                  <arg>
                  Nolabel
                    expression (lib/lexpointfree.ml[466,30844+41]..[466,30844+58])
                      Pexp_ident "__ocaml_lex_state" (lib/lexpointfree.ml[466,30844+41]..[466,30844+58])
                  <arg>
                  Nolabel
                    expression (lib/lexpointfree.ml[466,30844+59]..[466,30844+65])
                      Pexp_ident "lexbuf" (lib/lexpointfree.ml[466,30844+59]..[466,30844+65])
                ]
              [
                <case>
                  pattern (lib/lexpointfree.ml[467,30915+8]..[467,30915+9])
                    Ppat_constant PConst_int (0,None)
                  expression (lib/lexpointfree.mll[41,30956+4]..[41,30956+12])
                    Pexp_construct "true" (lib/lexpointfree.mll[41,30956+6]..[41,30956+10])
                    None
                <case>
                  pattern (lib/lexpointfree.ml[472,30998+4]..[472,30998+5])
                    Ppat_constant PConst_int (1,None)
                  expression (lib/lexpointfree.mll[44,31035+4]..[44,31035+13])
                    Pexp_construct "false" (lib/lexpointfree.mll[44,31035+6]..[44,31035+11])
                    None
                <case>
                  pattern (lib/lexpointfree.ml[477,31078+4]..[477,31078+5])
                    Ppat_constant PConst_int (2,None)
                  expression (lib/lexpointfree.mll[46,31115+4]..[46,31115+36])
                    Pexp_apply
                    expression (lib/lexpointfree.mll[46,31115+6]..[46,31115+11])
                      Pexp_ident "raise" (lib/lexpointfree.mll[46,31115+6]..[46,31115+11])
                    [
                      <arg>
                      Nolabel
                        expression (lib/lexpointfree.mll[46,31115+12]..[46,31115+34])
                          Pexp_construct "InvalidPointFreeAction" (lib/lexpointfree.mll[46,31115+12]..[46,31115+34])
                          None
                    ]
                <case>
                  pattern (lib/lexpointfree.ml[482,31181+4]..[482,31181+21])
                    Ppat_var "__ocaml_lex_state" (lib/lexpointfree.ml[482,31181+4]..[482,31181+21])
                  expression (lib/lexpointfree.ml[482,31181+25]..[483,31240+72])
                    Pexp_sequence
                    expression (lib/lexpointfree.ml[482,31181+25]..[482,31181+57])
                      Pexp_apply
                      expression (lib/lexpointfree.ml[482,31181+25]..[482,31181+50])
                        Pexp_field
                        expression (lib/lexpointfree.ml[482,31181+25]..[482,31181+31])
                          Pexp_ident "lexbuf" (lib/lexpointfree.ml[482,31181+25]..[482,31181+31])
                        "Lexing.refill_buff" (lib/lexpointfree.ml[482,31181+32]..[482,31181+50])
                      [
                        <arg>
                        Nolabel
                          expression (lib/lexpointfree.ml[482,31181+51]..[482,31181+57])
                            Pexp_ident "lexbuf" (lib/lexpointfree.ml[482,31181+51]..[482,31181+57])
                      ]
                    expression (lib/lexpointfree.ml[483,31240+6]..[483,31240+72])
                      Pexp_apply
                      expression (lib/lexpointfree.ml[483,31240+6]..[483,31240+47])
                        Pexp_ident "__ocaml_lex_validate_pointfree_action_rec" (lib/lexpointfree.ml[483,31240+6]..[483,31240+47])
                      [
                        <arg>
                        Nolabel
                          expression (lib/lexpointfree.ml[483,31240+48]..[483,31240+54])
                            Pexp_ident "lexbuf" (lib/lexpointfree.ml[483,31240+48]..[483,31240+54])
                        <arg>
                        Nolabel
                          expression (lib/lexpointfree.ml[483,31240+55]..[483,31240+72])
                            Pexp_ident "__ocaml_lex_state" (lib/lexpointfree.ml[483,31240+55]..[483,31240+72])
                      ]
              ]
      <def>
        pattern (lib/lexpointfree.ml[485,31314+4]..[485,31314+26])
          Ppat_var "valid_ocaml_identifier" (lib/lexpointfree.ml[485,31314+4]..[485,31314+26])
        expression (lib/lexpointfree.ml[485,31314+27]..[486,31350+51]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/lexpointfree.ml[485,31314+27]..[485,31314+33])
            Ppat_var "lexbuf" (lib/lexpointfree.ml[485,31314+27]..[485,31314+33])
          expression (lib/lexpointfree.ml[486,31350+3]..[486,31350+51])
            Pexp_apply
            expression (lib/lexpointfree.ml[486,31350+3]..[486,31350+41])
              Pexp_ident "__ocaml_lex_valid_ocaml_identifier_rec" (lib/lexpointfree.ml[486,31350+3]..[486,31350+41])
            [
              <arg>
              Nolabel
                expression (lib/lexpointfree.ml[486,31350+42]..[486,31350+48])
                  Pexp_ident "lexbuf" (lib/lexpointfree.ml[486,31350+42]..[486,31350+48])
              <arg>
              Nolabel
                expression (lib/lexpointfree.ml[486,31350+49]..[486,31350+51])
                  Pexp_constant PConst_int (13,None)
            ]
      <def>
        pattern (lib/lexpointfree.ml[487,31402+4]..[487,31402+42])
          Ppat_var "__ocaml_lex_valid_ocaml_identifier_rec" (lib/lexpointfree.ml[487,31402+4]..[487,31402+42])
        expression (lib/lexpointfree.ml[487,31402+43]..[500,31765+69]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/lexpointfree.ml[487,31402+43]..[487,31402+49])
            Ppat_var "lexbuf" (lib/lexpointfree.ml[487,31402+43]..[487,31402+49])
          expression (lib/lexpointfree.ml[487,31402+50]..[500,31765+69]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/lexpointfree.ml[487,31402+50]..[487,31402+67])
              Ppat_var "__ocaml_lex_state" (lib/lexpointfree.ml[487,31402+50]..[487,31402+67])
            expression (lib/lexpointfree.ml[488,31472+2]..[500,31765+69])
              Pexp_match
              expression (lib/lexpointfree.ml[488,31472+8]..[488,31472+65])
                Pexp_apply
                expression (lib/lexpointfree.ml[488,31472+8]..[488,31472+21])
                  Pexp_ident "Lexing.engine" (lib/lexpointfree.ml[488,31472+8]..[488,31472+21])
                [
                  <arg>
                  Nolabel
                    expression (lib/lexpointfree.ml[488,31472+22]..[488,31472+40])
                      Pexp_ident "__ocaml_lex_tables" (lib/lexpointfree.ml[488,31472+22]..[488,31472+40])
                  <arg>
                  Nolabel
                    expression (lib/lexpointfree.ml[488,31472+41]..[488,31472+58])
                      Pexp_ident "__ocaml_lex_state" (lib/lexpointfree.ml[488,31472+41]..[488,31472+58])
                  <arg>
                  Nolabel
                    expression (lib/lexpointfree.ml[488,31472+59]..[488,31472+65])
                      Pexp_ident "lexbuf" (lib/lexpointfree.ml[488,31472+59]..[488,31472+65])
                ]
              [
                <case>
                  pattern (lib/lexpointfree.ml[489,31543+8]..[489,31543+9])
                    Ppat_constant PConst_int (0,None)
                  expression (lib/lexpointfree.mll[52,31584+4]..[52,31584+12])
                    Pexp_construct "true" (lib/lexpointfree.mll[52,31584+6]..[52,31584+10])
                    None
                <case>
                  pattern (lib/lexpointfree.ml[494,31626+4]..[494,31626+5])
                    Ppat_constant PConst_int (1,None)
                  expression (lib/lexpointfree.mll[55,31663+4]..[55,31663+13])
                    Pexp_construct "false" (lib/lexpointfree.mll[55,31663+6]..[55,31663+11])
                    None
                <case>
                  pattern (lib/lexpointfree.ml[499,31706+4]..[499,31706+21])
                    Ppat_var "__ocaml_lex_state" (lib/lexpointfree.ml[499,31706+4]..[499,31706+21])
                  expression (lib/lexpointfree.ml[499,31706+25]..[500,31765+69])
                    Pexp_sequence
                    expression (lib/lexpointfree.ml[499,31706+25]..[499,31706+57])
                      Pexp_apply
                      expression (lib/lexpointfree.ml[499,31706+25]..[499,31706+50])
                        Pexp_field
                        expression (lib/lexpointfree.ml[499,31706+25]..[499,31706+31])
                          Pexp_ident "lexbuf" (lib/lexpointfree.ml[499,31706+25]..[499,31706+31])
                        "Lexing.refill_buff" (lib/lexpointfree.ml[499,31706+32]..[499,31706+50])
                      [
                        <arg>
                        Nolabel
                          expression (lib/lexpointfree.ml[499,31706+51]..[499,31706+57])
                            Pexp_ident "lexbuf" (lib/lexpointfree.ml[499,31706+51]..[499,31706+57])
                      ]
                    expression (lib/lexpointfree.ml[500,31765+6]..[500,31765+69])
                      Pexp_apply
                      expression (lib/lexpointfree.ml[500,31765+6]..[500,31765+44])
                        Pexp_ident "__ocaml_lex_valid_ocaml_identifier_rec" (lib/lexpointfree.ml[500,31765+6]..[500,31765+44])
                      [
                        <arg>
                        Nolabel
                          expression (lib/lexpointfree.ml[500,31765+45]..[500,31765+51])
                            Pexp_ident "lexbuf" (lib/lexpointfree.ml[500,31765+45]..[500,31765+51])
                        <arg>
                        Nolabel
                          expression (lib/lexpointfree.ml[500,31765+52]..[500,31765+69])
                            Pexp_ident "__ocaml_lex_state" (lib/lexpointfree.ml[500,31765+52]..[500,31765+69])
                      ]
              ]
    ]
  structure_item (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
          Ppat_construct "()" (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
          None
        expression (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
          Pexp_apply
          expression (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
            Pexp_ident "Ppx_inline_test_lib.unset_lib" (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
          [
            <arg>
            Nolabel
              expression (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost,None)
          ]
    ]
  structure_item (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
          Ppat_construct "()" (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
          None
        expression (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
          Pexp_apply
          expression (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
            Pexp_ident "Expect_test_collector.Current_file.unset" (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
          [
            <arg>
            Nolabel
              expression (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
                Pexp_construct "()" (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
                None
          ]
    ]
  structure_item (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
          Ppat_construct "()" (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
          None
        expression (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
          Pexp_apply
          expression (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
            Pexp_ident "Ppx_bench_lib.Benchmark_accumulator.Current_libname.unset" (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
          [
            <arg>
            Nolabel
              expression (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
                Pexp_construct "()" (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
                None
          ]
    ]
  structure_item (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
          Ppat_construct "()" (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
          None
        expression (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
          Pexp_apply
          expression (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
            Pexp_ident "Ppx_module_timer_runtime.record_until" (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
          [
            <arg>
            Nolabel
              expression (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
                Pexp_ident "Ppx_module_timer_runtime.__MODULE__" (lib/lexpointfree.ml[500,31765+69]..[500,31765+69]) ghost
          ]
    ]
]

[@@@ocaml.ppx.context
  {
    tool_name = "ppx_driver";
    include_dirs = [];
    load_path = [];
    open_modules = [];
    for_package = None;
    debug = false;
    use_threads = false;
    use_vmthreads = false;
    recursive_types = false;
    principal = false;
    transparent_modules = false;
    unboxed_types = false;
    unsafe_string = false;
    cookies = [("inline_tests", "enabled"); ("library-name", "gbnf_parser")]
  }]
let () =
  Ppx_module_timer_runtime.record_start Ppx_module_timer_runtime.__MODULE__
let () =
  Ppx_bench_lib.Benchmark_accumulator.Current_libname.set "gbnf_parser"
let () =
  Expect_test_collector.Current_file.set
    ~absolute_filename:"lib/lexpointfree.mll"
let () =
  Ppx_inline_test_lib.set_lib_and_partition "gbnf_parser" "lexpointfree.ml"
exception InvalidPointFreeAction 
let __ocaml_lex_tables =
  {
    Lexing.lex_base =
      "\000\000\253\255\254\255\000\000\248\000\240\001\240\001\232\002\224\003\255\255\003\000\224\003\007\000\002\004\254\255\210\004\255\255\163\005";
    Lexing.lex_backtrk =
      "\255\255\255\255\255\255\002\000\002\000\002\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\001\000\255\255\255\255";
    Lexing.lex_default =
      "\001\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\255\255\255\255\014\000\000\000\255\255\000\000\255\255";
    Lexing.lex_trans =
      "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\000\005\000\000\000\n\000\n\000\000\000\000\000\012\000\012\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\000\011\000\000\000\nn\000\n\000\t\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\nt\000\b\000\b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\bn\000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\nt\000\b\000\b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\b
    Lexing.lex_check =
      "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\000\000\255\255\n\000\n\000\255\255\255\255\012\000\012\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\003\000\255\255\n\000\003\000\003\000\003\000\012\000\000\000\255\255\003\000\003\000\255\255\003\000\003\000\003\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\003\000\255\255\003\000\003\000\003\000\003\000\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\255\255\255\255\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\003\000\255\255\003\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\000\004\000\nb\000\b\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\b\000\011\000\255\255\255\255\011\000\011\000\011\000\255\255\b\000\011\000\011\000\011\000\255\255\011\000\011\000\011\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\011\000\255\255\011\000\011\000\011\000\011\000\011\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\255\255\255\255\255\255\011\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\255\255\011\000\255\255\011\000\255\255\255\255\r\000\255\255\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\255\255\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\255\255\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\255\255\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r
    Lexing.lex_base_code = "";
    Lexing.lex_backtrk_code = "";
    Lexing.lex_default_code = "";
    Lexing.lex_trans_code = "";
    Lexing.lex_check_code = "";
    Lexing.lex_code = ""
  }
let rec validate_pointfree_action lexbuf =
  __ocaml_lex_validate_pointfree_action_rec lexbuf 0
and __ocaml_lex_validate_pointfree_action_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
  | 0 -> true
  | 1 -> false
  | 2 -> raise InvalidPointFreeAction
  | __ocaml_lex_state ->
      (lexbuf.Lexing.refill_buff lexbuf;
       __ocaml_lex_validate_pointfree_action_rec lexbuf __ocaml_lex_state)
and valid_ocaml_identifier lexbuf =
  __ocaml_lex_valid_ocaml_identifier_rec lexbuf 13
and __ocaml_lex_valid_ocaml_identifier_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
  | 0 -> true
  | 1 -> false
  | __ocaml_lex_state ->
      (lexbuf.Lexing.refill_buff lexbuf;
       __ocaml_lex_valid_ocaml_identifier_rec lexbuf __ocaml_lex_state)
let () = Ppx_inline_test_lib.unset_lib "gbnf_parser"
let () = Expect_test_collector.Current_file.unset ()
let () = Ppx_bench_lib.Benchmark_accumulator.Current_libname.unset ()
let () =
  Ppx_module_timer_runtime.record_until Ppx_module_timer_runtime.__MODULE__
[
  structure_item (_none_[0,0+-1].._none_[0,0+-1]) ghost
    Tstr_attribute "ocaml.ppx.context"
    [
      structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
        Pstr_eval
        expression (_none_[0,0+-1]..[0,0+-1]) ghost
          Pexp_record
          [
            "tool_name" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_constant PConst_string("ppx_driver",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
            "include_dirs" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "load_path" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "open_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "for_package" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "None" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "debug" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_threads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_vmthreads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "recursive_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "principal" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "transparent_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unboxed_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unsafe_string" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "cookies" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                Some
                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                    Pexp_tuple
                    [
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_tuple
                        [
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_constant PConst_string("inline_tests",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                          expression (<command-line>[1,0+0]..[1,0+9])
                            Pexp_constant PConst_string("enabled",(<command-line>[1,0+1]..[1,0+8]),None)
                        ]
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                        Some
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_tuple
                            [
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_tuple
                                [
                                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                    Pexp_constant PConst_string("library-name",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                                  expression (<command-line>[1,0+0]..[1,0+13])
                                    Pexp_constant PConst_string("gbnf_parser",(<command-line>[1,0+1]..[1,0+12]),None)
                                ]
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                                None
                            ]
                    ]
          ]
          None
    ]
  structure_item (lib/lexpointfree.mll[16,31+2]..lib/lexpointfree.mll[16,31+2]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/lexpointfree.mll[16,31+2]..lib/lexpointfree.mll[16,31+2]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/lexpointfree.mll[16,31+2]..lib/lexpointfree.mll[16,31+2]) ghost
          Texp_apply
          expression (lib/lexpointfree.mll[16,31+2]..lib/lexpointfree.mll[16,31+2]) ghost
            Texp_ident "Ppx_module_timer_runtime!.record_start"
          [
            <arg>
              Nolabel
              expression (lib/lexpointfree.mll[16,31+2]..lib/lexpointfree.mll[16,31+2]) ghost
                Texp_ident "Ppx_module_timer_runtime!.__MODULE__"
          ]
    ]
  structure_item (lib/lexpointfree.mll[16,31+2]..lib/lexpointfree.mll[16,31+2]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/lexpointfree.mll[16,31+2]..lib/lexpointfree.mll[16,31+2]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/lexpointfree.mll[16,31+2]..lib/lexpointfree.mll[16,31+2]) ghost
          Texp_apply
          expression (lib/lexpointfree.mll[16,31+2]..lib/lexpointfree.mll[16,31+2]) ghost
            Texp_ident "Ppx_bench_lib!.Benchmark_accumulator.Current_libname.set"
          [
            <arg>
              Nolabel
              expression (lib/lexpointfree.mll[16,31+2]..lib/lexpointfree.mll[16,31+2]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/lexpointfree.mll[16,31+2]..lib/lexpointfree.mll[16,31+2]) ghost,None)
          ]
    ]
  structure_item (lib/lexpointfree.mll[16,31+2]..lib/lexpointfree.mll[16,31+2]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/lexpointfree.mll[16,31+2]..lib/lexpointfree.mll[16,31+2]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/lexpointfree.mll[16,31+2]..lib/lexpointfree.mll[16,31+2]) ghost
          Texp_apply
          expression (lib/lexpointfree.mll[16,31+2]..lib/lexpointfree.mll[16,31+2]) ghost
            Texp_ident "Expect_test_collector!.Current_file.set"
          [
            <arg>
              Labelled "absolute_filename"
              expression (lib/lexpointfree.mll[16,31+2]..lib/lexpointfree.mll[16,31+2]) ghost
                Texp_constant Const_string("lib/lexpointfree.mll",(lib/lexpointfree.mll[16,31+2]..lib/lexpointfree.mll[16,31+2]) ghost,None)
          ]
    ]
  structure_item (lib/lexpointfree.mll[16,31+2]..lib/lexpointfree.mll[16,31+2]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/lexpointfree.mll[16,31+2]..lib/lexpointfree.mll[16,31+2]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/lexpointfree.mll[16,31+2]..lib/lexpointfree.mll[16,31+2]) ghost
          Texp_apply
          expression (lib/lexpointfree.mll[16,31+2]..lib/lexpointfree.mll[16,31+2]) ghost
            Texp_ident "Ppx_inline_test_lib!.set_lib_and_partition"
          [
            <arg>
              Nolabel
              expression (lib/lexpointfree.mll[16,31+2]..lib/lexpointfree.mll[16,31+2]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/lexpointfree.mll[16,31+2]..lib/lexpointfree.mll[16,31+2]) ghost,None)
            <arg>
              Nolabel
              expression (lib/lexpointfree.mll[16,31+2]..lib/lexpointfree.mll[16,31+2]) ghost
                Texp_constant Const_string("lexpointfree.ml",(lib/lexpointfree.mll[16,31+2]..lib/lexpointfree.mll[16,31+2]) ghost,None)
          ]
    ]
  structure_item (lib/lexpointfree.mll[16,31+2]..lib/lexpointfree.mll[16,31+34])
    Tstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (lib/lexpointfree.mll[16,31+2]..lib/lexpointfree.mll[16,31+34])
          pext_name = "InvalidPointFreeAction/1128"
          pext_kind =
            Text_decl
              []
              None
  structure_item (lib/lexpointfree.ml[8,94+0]..lib/lexpointfree.ml[461,30671+1])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/lexpointfree.ml[8,94+4]..lib/lexpointfree.ml[8,94+22])
          Tpat_var "__ocaml_lex_tables/1129"
        expression (lib/lexpointfree.ml[8,94+25]..lib/lexpointfree.ml[461,30671+1])
          Texp_record
            fields =
              [
                "Lexing.lex_base"
                  expression (lib/lexpointfree.ml[10,141+3]..lib/lexpointfree.ml[12,281+21])
                    Texp_constant Const_string("\000\000\253\255\254\255\000\000\248\000\240\001\240\001\232\002\224\003\255\255\003\000\224\003\007\000\002\004\254\255\210\004\255\255\163\005",(lib/lexpointfree.ml[10,141+4]..lib/lexpointfree.ml[12,281+20]),None)
                "Lexing.lex_backtrk"
                  expression (lib/lexpointfree.ml[14,327+3]..lib/lexpointfree.ml[16,467+21])
                    Texp_constant Const_string("\255\255\255\255\255\255\002\000\002\000\002\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\001\000\255\255\255\255",(lib/lexpointfree.ml[14,327+4]..lib/lexpointfree.ml[16,467+20]),None)
                "Lexing.lex_default"
                  expression (lib/lexpointfree.ml[18,513+3]..lib/lexpointfree.ml[20,653+21])
                    Texp_constant Const_string("\001\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\255\255\255\255\014\000\000\000\255\255\000\000\255\255",(lib/lexpointfree.ml[18,513+4]..lib/lexpointfree.ml[20,653+20]),None)
                "Lexing.lex_trans"
                  expression (lib/lexpointfree.ml[22,697+3]..lib/lexpointfree.ml[234,15537+37])
                    Texp_constant Const_string("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\000\005\000\000\000\n\000\n\000\000\000\000\000\012\000\012\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\000\011\000\000\000\nn\000\n\000\t\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\000\000\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\000\000\000\000\000\000\000\000\007\000\000\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\000\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\000\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\t\000\b\000\b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\bn\000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\000\000\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\000\000\000\000\000\000\000\000\007\000\000\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\000\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\000\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\t\000\b\000\b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\blib/lexpointfree.ml[22,697+4]..lib/lexpointfree.ml[234,15537+36]),None)
                "Lexing.lex_check"
                  expression (lib/lexpointfree.ml[236,15597+3]..lib/lexpointfree.ml[448,30437+37])
                    Texp_constant Const_string("\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\000\000\255\255\n\000\n\000\255\255\255\255\012\000\012\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\003\000\255\255\n\000\003\000\003\000\003\000\012\000\000\000\255\255\003\000\003\000\255\255\003\000\003\000\003\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\003\000\255\255\003\000\003\000\003\000\003\000\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\255\255\255\255\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\003\000\255\255\003\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\000\004\000\nb\000\b\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\b\000\011\000\255\255\255\255\011\000\011\000\011\000\255\255\b\000\011\000\011\000\011\000\255\255\011\000\011\000\011\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\011\000\255\255\011\000\011\000\011\000\011\000\011\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\255\255\255\255\255\255\011\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\255\255\011\000\255\255\011\000\255\255\255\255\r\000\255\255\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\255\255\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\255\255\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\255\255\r\000\r\000\r\000\r\000\r\000\r\000\r\000\rlib/lexpointfree.ml[236,15597+4]..lib/lexpointfree.ml[448,30437+36]),None)
                "Lexing.lex_base_code"
                  expression (lib/lexpointfree.ml[450,30501+3]..lib/lexpointfree.ml[450,30501+5])
                    Texp_constant Const_string("",(lib/lexpointfree.ml[450,30501+4]..lib/lexpointfree.ml[450,30501+4]),None)
                "Lexing.lex_backtrk_code"
                  expression (lib/lexpointfree.ml[452,30536+3]..lib/lexpointfree.ml[452,30536+5])
                    Texp_constant Const_string("",(lib/lexpointfree.ml[452,30536+4]..lib/lexpointfree.ml[452,30536+4]),None)
                "Lexing.lex_default_code"
                  expression (lib/lexpointfree.ml[454,30571+3]..lib/lexpointfree.ml[454,30571+5])
                    Texp_constant Const_string("",(lib/lexpointfree.ml[454,30571+4]..lib/lexpointfree.ml[454,30571+4]),None)
                "Lexing.lex_trans_code"
                  expression (lib/lexpointfree.ml[456,30604+3]..lib/lexpointfree.ml[456,30604+5])
                    Texp_constant Const_string("",(lib/lexpointfree.ml[456,30604+4]..lib/lexpointfree.ml[456,30604+4]),None)
                "Lexing.lex_check_code"
                  expression (lib/lexpointfree.ml[458,30637+3]..lib/lexpointfree.ml[458,30637+5])
                    Texp_constant Const_string("",(lib/lexpointfree.ml[458,30637+4]..lib/lexpointfree.ml[458,30637+4]),None)
                "Lexing.lex_code"
                  expression (lib/lexpointfree.ml[460,30664+3]..lib/lexpointfree.ml[460,30664+5])
                    Texp_constant Const_string("",(lib/lexpointfree.ml[460,30664+4]..lib/lexpointfree.ml[460,30664+4]),None)
              ]
            representation =
              Record_regular
            extended_expression =
              None
    ]
  structure_item (lib/lexpointfree.ml[463,30674+0]..lib/lexpointfree.ml[500,31765+69])
    Tstr_value Rec
    [
      <def>
        pattern (lib/lexpointfree.ml[463,30674+8]..lib/lexpointfree.ml[463,30674+33])
          Tpat_var "validate_pointfree_action/1154"
        expression (lib/lexpointfree.ml[463,30674+34]..lib/lexpointfree.ml[464,30717+53]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/lexpointfree.ml[463,30674+34]..lib/lexpointfree.ml[463,30674+40])
                Tpat_var "lexbuf/1158"
              expression (lib/lexpointfree.ml[464,30717+3]..lib/lexpointfree.ml[464,30717+53])
                Texp_apply
                expression (lib/lexpointfree.ml[464,30717+3]..lib/lexpointfree.ml[464,30717+44])
                  Texp_ident "__ocaml_lex_validate_pointfree_action_rec/1155"
                [
                  <arg>
                    Nolabel
                    expression (lib/lexpointfree.ml[464,30717+45]..lib/lexpointfree.ml[464,30717+51])
                      Texp_ident "lexbuf/1158"
                  <arg>
                    Nolabel
                    expression (lib/lexpointfree.ml[464,30717+52]..lib/lexpointfree.ml[464,30717+53])
                      Texp_constant Const_int 0
                ]
          ]
      <def>
        pattern (lib/lexpointfree.ml[465,30771+4]..lib/lexpointfree.ml[465,30771+45])
          Tpat_var "__ocaml_lex_validate_pointfree_action_rec/1155"
        expression (lib/lexpointfree.ml[465,30771+46]..lib/lexpointfree.ml[483,31240+72]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/lexpointfree.ml[465,30771+46]..lib/lexpointfree.ml[465,30771+52])
                Tpat_var "lexbuf/1159"
              expression (lib/lexpointfree.ml[465,30771+53]..lib/lexpointfree.ml[483,31240+72]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/lexpointfree.ml[465,30771+53]..lib/lexpointfree.ml[465,30771+70])
                      Tpat_var "__ocaml_lex_state/1160"
                    expression (lib/lexpointfree.ml[466,30844+2]..lib/lexpointfree.ml[483,31240+72])
                      Texp_match
                      expression (lib/lexpointfree.ml[466,30844+8]..lib/lexpointfree.ml[466,30844+65])
                        Texp_apply
                        expression (lib/lexpointfree.ml[466,30844+8]..lib/lexpointfree.ml[466,30844+21])
                          Texp_ident "Stdlib!.Lexing.engine"
                        [
                          <arg>
                            Nolabel
                            expression (lib/lexpointfree.ml[466,30844+22]..lib/lexpointfree.ml[466,30844+40])
                              Texp_ident "__ocaml_lex_tables/1129"
                          <arg>
                            Nolabel
                            expression (lib/lexpointfree.ml[466,30844+41]..lib/lexpointfree.ml[466,30844+58])
                              Texp_ident "__ocaml_lex_state/1160"
                          <arg>
                            Nolabel
                            expression (lib/lexpointfree.ml[466,30844+59]..lib/lexpointfree.ml[466,30844+65])
                              Texp_ident "lexbuf/1159"
                        ]
                      [
                        <case>
                          pattern (lib/lexpointfree.ml[467,30915+8]..lib/lexpointfree.ml[467,30915+9])
                            Tpat_value
                            pattern (lib/lexpointfree.ml[467,30915+8]..lib/lexpointfree.ml[467,30915+9])
                              Tpat_constant Const_int 0
                          expression (lib/lexpointfree.mll[41,30956+4]..lib/lexpointfree.mll[41,30956+12])
                            Texp_construct "true"
                            []
                        <case>
                          pattern (lib/lexpointfree.ml[472,30998+4]..lib/lexpointfree.ml[472,30998+5])
                            Tpat_value
                            pattern (lib/lexpointfree.ml[472,30998+4]..lib/lexpointfree.ml[472,30998+5])
                              Tpat_constant Const_int 1
                          expression (lib/lexpointfree.mll[44,31035+4]..lib/lexpointfree.mll[44,31035+13])
                            Texp_construct "false"
                            []
                        <case>
                          pattern (lib/lexpointfree.ml[477,31078+4]..lib/lexpointfree.ml[477,31078+5])
                            Tpat_value
                            pattern (lib/lexpointfree.ml[477,31078+4]..lib/lexpointfree.ml[477,31078+5])
                              Tpat_constant Const_int 2
                          expression (lib/lexpointfree.mll[46,31115+4]..lib/lexpointfree.mll[46,31115+36])
                            Texp_apply
                            expression (lib/lexpointfree.mll[46,31115+6]..lib/lexpointfree.mll[46,31115+11])
                              Texp_ident "Stdlib!.raise"
                            [
                              <arg>
                                Nolabel
                                expression (lib/lexpointfree.mll[46,31115+12]..lib/lexpointfree.mll[46,31115+34])
                                  Texp_construct "InvalidPointFreeAction"
                                  []
                            ]
                        <case>
                          pattern (lib/lexpointfree.ml[482,31181+4]..lib/lexpointfree.ml[482,31181+21])
                            Tpat_value
                            pattern (lib/lexpointfree.ml[482,31181+4]..lib/lexpointfree.ml[482,31181+21])
                              Tpat_var "__ocaml_lex_state/1185"
                          expression (lib/lexpointfree.ml[482,31181+25]..lib/lexpointfree.ml[483,31240+72])
                            Texp_sequence
                            expression (lib/lexpointfree.ml[482,31181+25]..lib/lexpointfree.ml[482,31181+57])
                              Texp_apply
                              expression (lib/lexpointfree.ml[482,31181+25]..lib/lexpointfree.ml[482,31181+50])
                                Texp_field
                                expression (lib/lexpointfree.ml[482,31181+25]..lib/lexpointfree.ml[482,31181+31])
                                  Texp_ident "lexbuf/1159"
                                "Lexing.refill_buff"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/lexpointfree.ml[482,31181+51]..lib/lexpointfree.ml[482,31181+57])
                                    Texp_ident "lexbuf/1159"
                              ]
                            expression (lib/lexpointfree.ml[483,31240+6]..lib/lexpointfree.ml[483,31240+72])
                              Texp_apply
                              expression (lib/lexpointfree.ml[483,31240+6]..lib/lexpointfree.ml[483,31240+47])
                                Texp_ident "__ocaml_lex_validate_pointfree_action_rec/1155"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/lexpointfree.ml[483,31240+48]..lib/lexpointfree.ml[483,31240+54])
                                    Texp_ident "lexbuf/1159"
                                <arg>
                                  Nolabel
                                  expression (lib/lexpointfree.ml[483,31240+55]..lib/lexpointfree.ml[483,31240+72])
                                    Texp_ident "__ocaml_lex_state/1185"
                              ]
                      ]
                ]
          ]
      <def>
        pattern (lib/lexpointfree.ml[485,31314+4]..lib/lexpointfree.ml[485,31314+26])
          Tpat_var "valid_ocaml_identifier/1156"
        expression (lib/lexpointfree.ml[485,31314+27]..lib/lexpointfree.ml[486,31350+51]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/lexpointfree.ml[485,31314+27]..lib/lexpointfree.ml[485,31314+33])
                Tpat_var "lexbuf/1186"
              expression (lib/lexpointfree.ml[486,31350+3]..lib/lexpointfree.ml[486,31350+51])
                Texp_apply
                expression (lib/lexpointfree.ml[486,31350+3]..lib/lexpointfree.ml[486,31350+41])
                  Texp_ident "__ocaml_lex_valid_ocaml_identifier_rec/1157"
                [
                  <arg>
                    Nolabel
                    expression (lib/lexpointfree.ml[486,31350+42]..lib/lexpointfree.ml[486,31350+48])
                      Texp_ident "lexbuf/1186"
                  <arg>
                    Nolabel
                    expression (lib/lexpointfree.ml[486,31350+49]..lib/lexpointfree.ml[486,31350+51])
                      Texp_constant Const_int 13
                ]
          ]
      <def>
        pattern (lib/lexpointfree.ml[487,31402+4]..lib/lexpointfree.ml[487,31402+42])
          Tpat_var "__ocaml_lex_valid_ocaml_identifier_rec/1157"
        expression (lib/lexpointfree.ml[487,31402+43]..lib/lexpointfree.ml[500,31765+69]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/lexpointfree.ml[487,31402+43]..lib/lexpointfree.ml[487,31402+49])
                Tpat_var "lexbuf/1187"
              expression (lib/lexpointfree.ml[487,31402+50]..lib/lexpointfree.ml[500,31765+69]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/lexpointfree.ml[487,31402+50]..lib/lexpointfree.ml[487,31402+67])
                      Tpat_var "__ocaml_lex_state/1188"
                    expression (lib/lexpointfree.ml[488,31472+2]..lib/lexpointfree.ml[500,31765+69])
                      Texp_match
                      expression (lib/lexpointfree.ml[488,31472+8]..lib/lexpointfree.ml[488,31472+65])
                        Texp_apply
                        expression (lib/lexpointfree.ml[488,31472+8]..lib/lexpointfree.ml[488,31472+21])
                          Texp_ident "Stdlib!.Lexing.engine"
                        [
                          <arg>
                            Nolabel
                            expression (lib/lexpointfree.ml[488,31472+22]..lib/lexpointfree.ml[488,31472+40])
                              Texp_ident "__ocaml_lex_tables/1129"
                          <arg>
                            Nolabel
                            expression (lib/lexpointfree.ml[488,31472+41]..lib/lexpointfree.ml[488,31472+58])
                              Texp_ident "__ocaml_lex_state/1188"
                          <arg>
                            Nolabel
                            expression (lib/lexpointfree.ml[488,31472+59]..lib/lexpointfree.ml[488,31472+65])
                              Texp_ident "lexbuf/1187"
                        ]
                      [
                        <case>
                          pattern (lib/lexpointfree.ml[489,31543+8]..lib/lexpointfree.ml[489,31543+9])
                            Tpat_value
                            pattern (lib/lexpointfree.ml[489,31543+8]..lib/lexpointfree.ml[489,31543+9])
                              Tpat_constant Const_int 0
                          expression (lib/lexpointfree.mll[52,31584+4]..lib/lexpointfree.mll[52,31584+12])
                            Texp_construct "true"
                            []
                        <case>
                          pattern (lib/lexpointfree.ml[494,31626+4]..lib/lexpointfree.ml[494,31626+5])
                            Tpat_value
                            pattern (lib/lexpointfree.ml[494,31626+4]..lib/lexpointfree.ml[494,31626+5])
                              Tpat_constant Const_int 1
                          expression (lib/lexpointfree.mll[55,31663+4]..lib/lexpointfree.mll[55,31663+13])
                            Texp_construct "false"
                            []
                        <case>
                          pattern (lib/lexpointfree.ml[499,31706+4]..lib/lexpointfree.ml[499,31706+21])
                            Tpat_value
                            pattern (lib/lexpointfree.ml[499,31706+4]..lib/lexpointfree.ml[499,31706+21])
                              Tpat_var "__ocaml_lex_state/1189"
                          expression (lib/lexpointfree.ml[499,31706+25]..lib/lexpointfree.ml[500,31765+69])
                            Texp_sequence
                            expression (lib/lexpointfree.ml[499,31706+25]..lib/lexpointfree.ml[499,31706+57])
                              Texp_apply
                              expression (lib/lexpointfree.ml[499,31706+25]..lib/lexpointfree.ml[499,31706+50])
                                Texp_field
                                expression (lib/lexpointfree.ml[499,31706+25]..lib/lexpointfree.ml[499,31706+31])
                                  Texp_ident "lexbuf/1187"
                                "Lexing.refill_buff"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/lexpointfree.ml[499,31706+51]..lib/lexpointfree.ml[499,31706+57])
                                    Texp_ident "lexbuf/1187"
                              ]
                            expression (lib/lexpointfree.ml[500,31765+6]..lib/lexpointfree.ml[500,31765+69])
                              Texp_apply
                              expression (lib/lexpointfree.ml[500,31765+6]..lib/lexpointfree.ml[500,31765+44])
                                Texp_ident "__ocaml_lex_valid_ocaml_identifier_rec/1157"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/lexpointfree.ml[500,31765+45]..lib/lexpointfree.ml[500,31765+51])
                                    Texp_ident "lexbuf/1187"
                                <arg>
                                  Nolabel
                                  expression (lib/lexpointfree.ml[500,31765+52]..lib/lexpointfree.ml[500,31765+69])
                                    Texp_ident "__ocaml_lex_state/1189"
                              ]
                      ]
                ]
          ]
    ]
  structure_item (lib/lexpointfree.ml[500,31765+69]..lib/lexpointfree.ml[500,31765+69]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/lexpointfree.ml[500,31765+69]..lib/lexpointfree.ml[500,31765+69]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/lexpointfree.ml[500,31765+69]..lib/lexpointfree.ml[500,31765+69]) ghost
          Texp_apply
          expression (lib/lexpointfree.ml[500,31765+69]..lib/lexpointfree.ml[500,31765+69]) ghost
            Texp_ident "Ppx_inline_test_lib!.unset_lib"
          [
            <arg>
              Nolabel
              expression (lib/lexpointfree.ml[500,31765+69]..lib/lexpointfree.ml[500,31765+69]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/lexpointfree.ml[500,31765+69]..lib/lexpointfree.ml[500,31765+69]) ghost,None)
          ]
    ]
  structure_item (lib/lexpointfree.ml[500,31765+69]..lib/lexpointfree.ml[500,31765+69]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/lexpointfree.ml[500,31765+69]..lib/lexpointfree.ml[500,31765+69]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/lexpointfree.ml[500,31765+69]..lib/lexpointfree.ml[500,31765+69]) ghost
          Texp_apply
          expression (lib/lexpointfree.ml[500,31765+69]..lib/lexpointfree.ml[500,31765+69]) ghost
            Texp_ident "Expect_test_collector!.Current_file.unset"
          [
            <arg>
              Nolabel
              expression (lib/lexpointfree.ml[500,31765+69]..lib/lexpointfree.ml[500,31765+69]) ghost
                Texp_construct "()"
                []
          ]
    ]
  structure_item (lib/lexpointfree.ml[500,31765+69]..lib/lexpointfree.ml[500,31765+69]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/lexpointfree.ml[500,31765+69]..lib/lexpointfree.ml[500,31765+69]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/lexpointfree.ml[500,31765+69]..lib/lexpointfree.ml[500,31765+69]) ghost
          Texp_apply
          expression (lib/lexpointfree.ml[500,31765+69]..lib/lexpointfree.ml[500,31765+69]) ghost
            Texp_ident "Ppx_bench_lib!.Benchmark_accumulator.Current_libname.unset"
          [
            <arg>
              Nolabel
              expression (lib/lexpointfree.ml[500,31765+69]..lib/lexpointfree.ml[500,31765+69]) ghost
                Texp_construct "()"
                []
          ]
    ]
  structure_item (lib/lexpointfree.ml[500,31765+69]..lib/lexpointfree.ml[500,31765+69]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/lexpointfree.ml[500,31765+69]..lib/lexpointfree.ml[500,31765+69]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/lexpointfree.ml[500,31765+69]..lib/lexpointfree.ml[500,31765+69]) ghost
          Texp_apply
          expression (lib/lexpointfree.ml[500,31765+69]..lib/lexpointfree.ml[500,31765+69]) ghost
            Texp_ident "Ppx_module_timer_runtime!.record_until"
          [
            <arg>
              Nolabel
              expression (lib/lexpointfree.ml[500,31765+69]..lib/lexpointfree.ml[500,31765+69]) ghost
                Texp_ident "Ppx_module_timer_runtime!.__MODULE__"
          ]
    ]
]

{<Gbnf_parser__Lexpointfree>
 "InvalidPointFreeAction"[extension constructor] ->
     <Gbnf_parser__Lexpointfree.0>;
 "__ocaml_lex_tables"[value] -> <Gbnf_parser__Lexpointfree.1>;
 "__ocaml_lex_valid_ocaml_identifier_rec"[value] ->
     <Gbnf_parser__Lexpointfree.5>;
 "__ocaml_lex_validate_pointfree_action_rec"[value] ->
     <Gbnf_parser__Lexpointfree.3>;
 "valid_ocaml_identifier"[value] -> <Gbnf_parser__Lexpointfree.4>;
 "validate_pointfree_action"[value] -> <Gbnf_parser__Lexpointfree.2>;
 }

(seq
  (let
    (*match*/1478 =
       (apply (field 3 (global Ppx_module_timer_runtime!))
         #"Gbnf_parser__Lexpointfree"))
    0)
  (let
    (*match*/1480 =
       (apply
         (field 0 (field 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
         "gbnf_parser"))
    0)
  (let
    (*match*/1482 =
       (apply (field 0 (field 5 (global Expect_test_collector!)))
         "lib/lexpointfree.mll"))
    0)
  (let
    (*match*/1484 =
       (apply (field 4 (global Ppx_inline_test_lib!)) "gbnf_parser"
         "lexpointfree.ml"))
    0)
  (let
    (InvalidPointFreeAction/1128 =
       (makeblock 248 "Gbnf_parser.Lexpointfree.InvalidPointFreeAction"
         (caml_fresh_oo_id 0)))
    (setfield_ptr(root-init) 0 (global Gbnf_parser__Lexpointfree!)
      InvalidPointFreeAction/1128))
  (let
    (__ocaml_lex_tables/1129 =
       [0:
        "\000\000\253\255\254\255\000\000\248\000\240\001\240\001\232\002\224\003\255\255\003\000\224\003\007\000\002\004\254\255\210\004\255\255\163\005"
        "\255\255\255\255\255\255\002\000\002\000\002\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\001\000\255\255\255\255"
        "\001\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\255\255\255\255\014\000\000\000\255\255\000\000\255\255"
        "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\000\005\000\000\000\n\000\n\000\000\000\000\000\012\000\012\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\000\011\000\000\000\n\000\011\000\011\000\011\000\012\000\003\000\000\000\011\000\011\000\000\000\011\000\011\000\011\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\011\000\000\000\011\000\011\000\011\000\011\000\011\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\000\000\000\000\000\000\011\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\000\000\011\000\000\000\011\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\000\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\000\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\002\000\n\000\n\000\t\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\nt\000\b\000\b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\b\000\011\000\000\000\000\000\011\000\011\000\011\000\000\000\006\000\000\000\011\000\011\000\000\000\011\000\011\000\011\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\011\000\000\000\011\000\011\000\011\000\011\000\011\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\000\000\000\000\000\000\011\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\000\000\011\000\000\000\011\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\000\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\000\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\002\000\n\000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\nt\000\b\000\b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\b
        "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\000\000\255\255\n\000\n\000\255\255\255\255\012\000\012\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\003\000\255\255\nnb\000\b\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\b\000\011\000\255\255\255\255\011\000\011\000\011\000\255\255\b\000\011\000\011\000\011\000\255\255\011\000\011\000\011\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\011\000\255\255\011\000\011\000\011\000\011\000\011\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\255\255\255\255\255\255\011\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\255\255\011\000\255\255\011\000\255\255\255\255\r\000\255\255\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\255\255\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\255\255\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\255\255\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r
        "" "" "" "" "" ""])
    (setfield_ptr(root-init) 1 (global Gbnf_parser__Lexpointfree!)
      __ocaml_lex_tables/1129))
  (letrec
    (validate_pointfree_action/1154
       (function lexbuf/1158 : int
         (apply __ocaml_lex_validate_pointfree_action_rec/1155 lexbuf/1158 0))
      __ocaml_lex_validate_pointfree_action_rec/1155
        (function lexbuf/1159 __ocaml_lex_state/1160[int] : int
          (let
            (__ocaml_lex_state/1185 =
               (apply (field 19 (global Stdlib__Lexing!))
                 (field 1 (global Gbnf_parser__Lexpointfree!))
                 __ocaml_lex_state/1160 lexbuf/1159))
            (catch
              (if (isout 2 __ocaml_lex_state/1185) (exit 13)
                (switch* __ocaml_lex_state/1185
                 case int 0: 1
                 case int 1: 0
                 case int 2:
                  (raise (field 0 (global Gbnf_parser__Lexpointfree!)))))
             with (13)
              (seq (apply (field 0 lexbuf/1159) lexbuf/1159)
                (apply __ocaml_lex_validate_pointfree_action_rec/1155
                  lexbuf/1159 __ocaml_lex_state/1185)))))
      valid_ocaml_identifier/1156
        (function lexbuf/1186 : int
          (apply __ocaml_lex_valid_ocaml_identifier_rec/1157 lexbuf/1186 13))
      __ocaml_lex_valid_ocaml_identifier_rec/1157
        (function lexbuf/1187 __ocaml_lex_state/1188[int] : int
          (let
            (__ocaml_lex_state/1189 =
               (apply (field 19 (global Stdlib__Lexing!))
                 (field 1 (global Gbnf_parser__Lexpointfree!))
                 __ocaml_lex_state/1188 lexbuf/1187))
            (catch
              (if (!= __ocaml_lex_state/1189 0)
                (if (!= __ocaml_lex_state/1189 1) (exit 14) 0) 1)
             with (14)
              (seq (apply (field 0 lexbuf/1187) lexbuf/1187)
                (apply __ocaml_lex_valid_ocaml_identifier_rec/1157
                  lexbuf/1187 __ocaml_lex_state/1189))))))
    (seq
      (setfield_ptr(root-init) 2 (global Gbnf_parser__Lexpointfree!)
        validate_pointfree_action/1154)
      (setfield_ptr(root-init) 3 (global Gbnf_parser__Lexpointfree!)
        __ocaml_lex_validate_pointfree_action_rec/1155)
      (setfield_ptr(root-init) 4 (global Gbnf_parser__Lexpointfree!)
        valid_ocaml_identifier/1156)
      (setfield_ptr(root-init) 5 (global Gbnf_parser__Lexpointfree!)
        __ocaml_lex_valid_ocaml_identifier_rec/1157)))
  (let
    (*match*/1487 =
       (apply (field 5 (global Ppx_inline_test_lib!)) "gbnf_parser"))
    0)
  (let
    (*match*/1489 =
       (apply (field 1 (field 5 (global Expect_test_collector!))) 0))
    0)
  (let
    (*match*/1491 =
       (apply
         (field 1 (field 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
         0))
    0)
  (let
    (*match*/1493 =
       (apply (field 4 (global Ppx_module_timer_runtime!))
         #"Gbnf_parser__Lexpointfree"))
    0)
  0)
(seq
  (let
    (*match*/1478 =
       (apply (field 3 (global Ppx_module_timer_runtime!))
         #"Gbnf_parser__Lexpointfree"))
    0)
  (let
    (*match*/1480 =
       (apply
         (field 0 (field 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
         "gbnf_parser"))
    0)
  (let
    (*match*/1482 =
       (apply (field 0 (field 5 (global Expect_test_collector!)))
         "lib/lexpointfree.mll"))
    0)
  (let
    (*match*/1484 =
       (apply (field 4 (global Ppx_inline_test_lib!)) "gbnf_parser"
         "lexpointfree.ml"))
    0)
  (let
    (InvalidPointFreeAction/1128 =
       (makeblock 248 "Gbnf_parser.Lexpointfree.InvalidPointFreeAction"
         (caml_fresh_oo_id 0)))
    (setfield_ptr(root-init) 0 (global Gbnf_parser__Lexpointfree!)
      InvalidPointFreeAction/1128))
  (let
    (__ocaml_lex_tables/1129 =
       [0:
        "\000\000\253\255\254\255\000\000\248\000\240\001\240\001\232\002\224\003\255\255\003\000\224\003\007\000\002\004\254\255\210\004\255\255\163\005"
        "\255\255\255\255\255\255\002\000\002\000\002\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\001\000\255\255\255\255"
        "\001\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\255\255\255\255\014\000\000\000\255\255\000\000\255\255"
        "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\000\005\000\000\000\n\000\n\000\000\000\000\000\012\000\012\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\000\011\000\000\000\nn\000\n\000\t\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\nt\000\b\000\b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\bn\000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\nt\000\b\000\b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\b
        "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\000\000\255\255\n\000\n\000\255\255\255\255\012\000\012\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\003\000\255\255\nnb\000\b\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\b\000\011\000\255\255\255\255\011\000\011\000\011\000\255\255\b\000\011\000\011\000\011\000\255\255\011\000\011\000\011\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\011\000\255\255\011\000\011\000\011\000\011\000\011\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\255\255\255\255\255\255\011\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\255\255\011\000\255\255\011\000\255\255\255\255\r\000\255\255\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\255\255\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\255\255\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\b\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r\000\255\255\r\000\r\000\r\000\r\000\r\000\r\000\r\000\r
        "" "" "" "" "" ""])
    (setfield_ptr(root-init) 1 (global Gbnf_parser__Lexpointfree!)
      __ocaml_lex_tables/1129))
  (letrec
    (validate_pointfree_action/1154
       (function lexbuf/1158 : int
         (apply __ocaml_lex_validate_pointfree_action_rec/1155 lexbuf/1158 0))
      __ocaml_lex_validate_pointfree_action_rec/1155
        (function lexbuf/1159 __ocaml_lex_state/1160[int] : int
          (let
            (__ocaml_lex_state/1185 =
               (apply (field 19 (global Stdlib__Lexing!))
                 (field 1 (global Gbnf_parser__Lexpointfree!))
                 __ocaml_lex_state/1160 lexbuf/1159))
            (if (isout 2 __ocaml_lex_state/1185)
              (seq (apply (field 0 lexbuf/1159) lexbuf/1159)
                (apply __ocaml_lex_validate_pointfree_action_rec/1155
                  lexbuf/1159 __ocaml_lex_state/1185))
              (switch* __ocaml_lex_state/1185
               case int 0: 1
               case int 1: 0
               case int 2:
                (raise (field 0 (global Gbnf_parser__Lexpointfree!)))))))
      valid_ocaml_identifier/1156
        (function lexbuf/1186 : int
          (apply __ocaml_lex_valid_ocaml_identifier_rec/1157 lexbuf/1186 13))
      __ocaml_lex_valid_ocaml_identifier_rec/1157
        (function lexbuf/1187 __ocaml_lex_state/1188[int] : int
          (let
            (__ocaml_lex_state/1189 =
               (apply (field 19 (global Stdlib__Lexing!))
                 (field 1 (global Gbnf_parser__Lexpointfree!))
                 __ocaml_lex_state/1188 lexbuf/1187))
            (if (!= __ocaml_lex_state/1189 0)
              (if (!= __ocaml_lex_state/1189 1)
                (seq (apply (field 0 lexbuf/1187) lexbuf/1187)
                  (apply __ocaml_lex_valid_ocaml_identifier_rec/1157
                    lexbuf/1187 __ocaml_lex_state/1189))
                0)
              1))))
    (seq
      (setfield_ptr(root-init) 2 (global Gbnf_parser__Lexpointfree!)
        validate_pointfree_action/1154)
      (setfield_ptr(root-init) 3 (global Gbnf_parser__Lexpointfree!)
        __ocaml_lex_validate_pointfree_action_rec/1155)
      (setfield_ptr(root-init) 4 (global Gbnf_parser__Lexpointfree!)
        valid_ocaml_identifier/1156)
      (setfield_ptr(root-init) 5 (global Gbnf_parser__Lexpointfree!)
        __ocaml_lex_valid_ocaml_identifier_rec/1157)))
  (let
    (*match*/1487 =
       (apply (field 5 (global Ppx_inline_test_lib!)) "gbnf_parser"))
    0)
  (let
    (*match*/1489 =
       (apply (field 1 (field 5 (global Expect_test_collector!))) 0))
    0)
  (let
    (*match*/1491 =
       (apply
         (field 1 (field 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
         0))
    0)
  (let
    (*match*/1493 =
       (apply (field 4 (global Ppx_module_timer_runtime!))
         #"Gbnf_parser__Lexpointfree"))
    0)
  0)
