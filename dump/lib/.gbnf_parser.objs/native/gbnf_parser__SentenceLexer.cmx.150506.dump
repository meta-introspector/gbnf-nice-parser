[
  structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
    Pstr_attribute "ocaml.ppx.context"
    [
      structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
        Pstr_eval
        expression (_none_[0,0+-1]..[0,0+-1]) ghost
          Pexp_record
          [
            "tool_name" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_constant PConst_string("ppx_driver",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
            "include_dirs" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "load_path" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "open_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "for_package" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "None" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "debug" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_threads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_vmthreads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "recursive_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "principal" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "transparent_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unboxed_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unsafe_string" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "cookies" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                Some
                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                    Pexp_tuple
                    [
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_tuple
                        [
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_constant PConst_string("inline_tests",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                          expression (<command-line>[1,0+0]..[1,0+9])
                            Pexp_constant PConst_string("enabled",(<command-line>[1,0+1]..[1,0+8]),None)
                        ]
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                        Some
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_tuple
                            [
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_tuple
                                [
                                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                    Pexp_constant PConst_string("library-name",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                                  expression (<command-line>[1,0+0]..[1,0+13])
                                    Pexp_constant PConst_string("gbnf_parser",(<command-line>[1,0+1]..[1,0+12]),None)
                                ]
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                                None
                            ]
                    ]
          ]
          None
    ]
  structure_item (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
          Ppat_construct "()" (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
          None
        expression (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
          Pexp_apply
          expression (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
            Pexp_ident "Ppx_module_timer_runtime.record_start" (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
                Pexp_ident "Ppx_module_timer_runtime.__MODULE__" (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
          ]
    ]
  structure_item (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
          Ppat_construct "()" (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
          None
        expression (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
          Pexp_apply
          expression (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
            Pexp_ident "Ppx_bench_lib.Benchmark_accumulator.Current_libname.set" (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost,None)
          ]
    ]
  structure_item (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
          Ppat_construct "()" (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
          None
        expression (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
          Pexp_apply
          expression (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
            Pexp_ident "Expect_test_collector.Current_file.set" (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
          [
            <arg>
            Labelled "absolute_filename"
              expression (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
                Pexp_constant PConst_string("lib/sentenceLexer.mll",(lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost,None)
          ]
    ]
  structure_item (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
          Ppat_construct "()" (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
          None
        expression (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
          Pexp_apply
          expression (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
            Pexp_ident "Ppx_inline_test_lib.set_lib_and_partition" (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost,None)
            <arg>
            Nolabel
              expression (lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost
                Pexp_constant PConst_string("sentenceLexer.ml",(lib/sentenceLexer.mll[16,32+0]..[16,32+0]) ghost,None)
          ]
    ]
  structure_item (lib/sentenceLexer.mll[16,32+0]..[16,32+11])
    Pstr_open Fresh
    module_expr (lib/sentenceLexer.mll[16,32+5]..[16,32+11])
      Pmod_ident "Lexing" (lib/sentenceLexer.mll[16,32+5]..[16,32+11])
  structure_item (lib/sentenceLexer.mll[17,44+0]..[17,44+19])
    Pstr_open Fresh
    module_expr (lib/sentenceLexer.mll[17,44+5]..[17,44+19])
      Pmod_ident "SentenceParser" (lib/sentenceLexer.mll[17,44+5]..[17,44+19])
  structure_item (lib/sentenceLexer.mll[18,64+0]..[18,64+14])
    Pstr_open Fresh
    module_expr (lib/sentenceLexer.mll[18,64+5]..[18,64+14])
      Pmod_ident "Positions" (lib/sentenceLexer.mll[18,64+5]..[18,64+14])
  structure_item (lib/sentenceLexer.mll[19,79+0]..[19,79+12])
    Pstr_open Fresh
    module_expr (lib/sentenceLexer.mll[19,79+5]..[19,79+12])
      Pmod_ident "Keyword" (lib/sentenceLexer.mll[19,79+5]..[19,79+12])
  structure_item (lib/sentenceLexer.mll[25,193+0]..[26,210+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[25,193+4]..[25,193+10])
          Ppat_var "error1" (lib/sentenceLexer.mll[25,193+4]..[25,193+10])
        expression (lib/sentenceLexer.mll[25,193+11]..[26,210+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/sentenceLexer.mll[25,193+11]..[25,193+14])
            Ppat_var "pos" (lib/sentenceLexer.mll[25,193+11]..[25,193+14])
          expression (lib/sentenceLexer.mll[26,210+2]..[26,210+33])
            Pexp_apply
            expression (lib/sentenceLexer.mll[26,210+2]..[26,210+13])
              Pexp_ident "Error.error" (lib/sentenceLexer.mll[26,210+2]..[26,210+13])
            [
              <arg>
              Nolabel
                expression (lib/sentenceLexer.mll[26,210+14]..[26,210+33])
                  Pexp_apply
                  expression (lib/sentenceLexer.mll[26,210+15]..[26,210+28])
                    Pexp_ident "Positions.one" (lib/sentenceLexer.mll[26,210+15]..[26,210+28])
                  [
                    <arg>
                    Nolabel
                      expression (lib/sentenceLexer.mll[26,210+29]..[26,210+32])
                        Pexp_ident "pos" (lib/sentenceLexer.mll[26,210+29]..[26,210+32])
                  ]
            ]
    ]
  structure_item (lib/sentenceLexer.mll[28,245+0]..[29,265+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[28,245+4]..[28,245+10])
          Ppat_var "error2" (lib/sentenceLexer.mll[28,245+4]..[28,245+10])
        expression (lib/sentenceLexer.mll[28,245+11]..[29,265+39]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/sentenceLexer.mll[28,245+11]..[28,245+17])
            Ppat_var "lexbuf" (lib/sentenceLexer.mll[28,245+11]..[28,245+17])
          expression (lib/sentenceLexer.mll[29,265+2]..[29,265+39])
            Pexp_apply
            expression (lib/sentenceLexer.mll[29,265+2]..[29,265+13])
              Pexp_ident "Error.error" (lib/sentenceLexer.mll[29,265+2]..[29,265+13])
            [
              <arg>
              Nolabel
                expression (lib/sentenceLexer.mll[29,265+14]..[29,265+39])
                  Pexp_apply
                  expression (lib/sentenceLexer.mll[29,265+15]..[29,265+31])
                    Pexp_ident "Positions.lexbuf" (lib/sentenceLexer.mll[29,265+15]..[29,265+31])
                  [
                    <arg>
                    Nolabel
                      expression (lib/sentenceLexer.mll[29,265+32]..[29,265+38])
                        Pexp_ident "lexbuf" (lib/sentenceLexer.mll[29,265+32]..[29,265+38])
                  ]
            ]
    ]
  structure_item (lib/sentenceLexer.mll[37,588+0]..[41,680+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[37,588+4]..[37,588+17])
          Ppat_var "int_of_string" (lib/sentenceLexer.mll[37,588+4]..[37,588+17])
        expression (lib/sentenceLexer.mll[37,588+18]..[41,680+44]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/sentenceLexer.mll[37,588+18]..[37,588+41])
            Ppat_constraint
            pattern (lib/sentenceLexer.mll[37,588+19]..[37,588+22])
              Ppat_var "pos" (lib/sentenceLexer.mll[37,588+19]..[37,588+22])
            core_type (lib/sentenceLexer.mll[37,588+25]..[37,588+40])
              Ptyp_constr "Lexing.position" (lib/sentenceLexer.mll[37,588+25]..[37,588+40])
              []
          expression (lib/sentenceLexer.mll[37,588+42]..[41,680+44]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/sentenceLexer.mll[37,588+42]..[37,588+43])
              Ppat_var "i" (lib/sentenceLexer.mll[37,588+42]..[37,588+43])
            expression (lib/sentenceLexer.mll[38,634+2]..[41,680+44])
              Pexp_try
              expression (lib/sentenceLexer.mll[39,640+4]..[39,640+19])
                Pexp_apply
                expression (lib/sentenceLexer.mll[39,640+4]..[39,640+17])
                  Pexp_ident "int_of_string" (lib/sentenceLexer.mll[39,640+4]..[39,640+17])
                [
                  <arg>
                  Nolabel
                    expression (lib/sentenceLexer.mll[39,640+18]..[39,640+19])
                      Pexp_ident "i" (lib/sentenceLexer.mll[39,640+18]..[39,640+19])
                ]
              [
                <case>
                  pattern (lib/sentenceLexer.mll[40,660+7]..[40,660+16])
                    Ppat_construct "Failure" (lib/sentenceLexer.mll[40,660+7]..[40,660+14])
                    Some
                      []
                      pattern (lib/sentenceLexer.mll[40,660+15]..[40,660+16])
                        Ppat_any
                  expression (lib/sentenceLexer.mll[41,680+4]..[41,680+44])
                    Pexp_apply
                    expression (lib/sentenceLexer.mll[41,680+4]..[41,680+10])
                      Pexp_ident "error1" (lib/sentenceLexer.mll[41,680+4]..[41,680+10])
                    [
                      <arg>
                      Nolabel
                        expression (lib/sentenceLexer.mll[41,680+11]..[41,680+14])
                          Pexp_ident "pos" (lib/sentenceLexer.mll[41,680+11]..[41,680+14])
                      <arg>
                      Nolabel
                        expression (lib/sentenceLexer.mll[41,680+15]..[41,680+44])
                          Pexp_constant PConst_string("unreasonably large integer.",(lib/sentenceLexer.mll[41,680+16]..[41,680+43]),None)
                    ]
              ]
    ]
  structure_item (lib/sentenceLexer.mll[49,960+0]..[53,1080+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[49,960+4]..[49,960+13])
          Ppat_var "savestart" (lib/sentenceLexer.mll[49,960+4]..[49,960+13])
        expression (lib/sentenceLexer.mll[49,960+14]..[53,1080+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/sentenceLexer.mll[49,960+14]..[49,960+20])
            Ppat_var "lexbuf" (lib/sentenceLexer.mll[49,960+14]..[49,960+20])
          expression (lib/sentenceLexer.mll[49,960+21]..[53,1080+7]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/sentenceLexer.mll[49,960+21]..[49,960+22])
              Ppat_var "f" (lib/sentenceLexer.mll[49,960+21]..[49,960+22])
            expression (lib/sentenceLexer.mll[50,985+2]..[53,1080+7])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/sentenceLexer.mll[50,985+6]..[50,985+12])
                    Ppat_var "startp" (lib/sentenceLexer.mll[50,985+6]..[50,985+12])
                  expression (lib/sentenceLexer.mll[50,985+15]..[50,985+33])
                    Pexp_field
                    expression (lib/sentenceLexer.mll[50,985+15]..[50,985+21])
                      Pexp_ident "lexbuf" (lib/sentenceLexer.mll[50,985+15]..[50,985+21])
                    "lex_start_p" (lib/sentenceLexer.mll[50,985+22]..[50,985+33])
              ]
              expression (lib/sentenceLexer.mll[51,1022+2]..[53,1080+7])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lib/sentenceLexer.mll[51,1022+6]..[51,1022+11])
                      Ppat_var "token" (lib/sentenceLexer.mll[51,1022+6]..[51,1022+11])
                    expression (lib/sentenceLexer.mll[51,1022+14]..[51,1022+22])
                      Pexp_apply
                      expression (lib/sentenceLexer.mll[51,1022+14]..[51,1022+15])
                        Pexp_ident "f" (lib/sentenceLexer.mll[51,1022+14]..[51,1022+15])
                      [
                        <arg>
                        Nolabel
                          expression (lib/sentenceLexer.mll[51,1022+16]..[51,1022+22])
                            Pexp_ident "lexbuf" (lib/sentenceLexer.mll[51,1022+16]..[51,1022+22])
                      ]
                ]
                expression (lib/sentenceLexer.mll[52,1048+2]..[53,1080+7])
                  Pexp_sequence
                  expression (lib/sentenceLexer.mll[52,1048+2]..[52,1048+30])
                    Pexp_setfield
                    expression (lib/sentenceLexer.mll[52,1048+2]..[52,1048+8])
                      Pexp_ident "lexbuf" (lib/sentenceLexer.mll[52,1048+2]..[52,1048+8])
                    "lex_start_p" (lib/sentenceLexer.mll[52,1048+9]..[52,1048+20])
                    expression (lib/sentenceLexer.mll[52,1048+24]..[52,1048+30])
                      Pexp_ident "startp" (lib/sentenceLexer.mll[52,1048+24]..[52,1048+30])
                  expression (lib/sentenceLexer.mll[53,1080+2]..[53,1080+7])
                    Pexp_ident "token" (lib/sentenceLexer.mll[53,1080+2]..[53,1080+7])
    ]
  structure_item (lib/sentenceLexer.mll[60,1265+0]..[62,1344+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[60,1265+4]..[60,1265+13])
          Ppat_var "overwrite" (lib/sentenceLexer.mll[60,1265+4]..[60,1265+13])
        expression (lib/sentenceLexer.mll[60,1265+14]..[62,1344+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/sentenceLexer.mll[60,1265+14]..[60,1265+21])
            Ppat_var "content" (lib/sentenceLexer.mll[60,1265+14]..[60,1265+21])
          expression (lib/sentenceLexer.mll[60,1265+22]..[62,1344+29]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/sentenceLexer.mll[60,1265+22]..[60,1265+28])
              Ppat_var "offset" (lib/sentenceLexer.mll[60,1265+22]..[60,1265+28])
            expression (lib/sentenceLexer.mll[60,1265+29]..[62,1344+29]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/sentenceLexer.mll[60,1265+29]..[60,1265+31])
                Ppat_var "c1" (lib/sentenceLexer.mll[60,1265+29]..[60,1265+31])
              expression (lib/sentenceLexer.mll[60,1265+32]..[62,1344+29]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lib/sentenceLexer.mll[60,1265+32]..[60,1265+34])
                  Ppat_var "c2" (lib/sentenceLexer.mll[60,1265+32]..[60,1265+34])
                expression (lib/sentenceLexer.mll[61,1302+2]..[62,1344+29])
                  Pexp_sequence
                  expression (lib/sentenceLexer.mll[61,1302+2]..[61,1302+40])
                    Pexp_assert
                    expression (lib/sentenceLexer.mll[61,1302+9]..[61,1302+40])
                      Pexp_apply
                      expression (lib/sentenceLexer.mll[61,1302+35]..[61,1302+36])
                        Pexp_ident "=" (lib/sentenceLexer.mll[61,1302+35]..[61,1302+36])
                      [
                        <arg>
                        Nolabel
                          expression (lib/sentenceLexer.mll[61,1302+10]..[61,1302+34])
                            Pexp_apply
                            expression (lib/sentenceLexer.mll[61,1302+10]..[61,1302+19])
                              Pexp_ident "Bytes.get" (lib/sentenceLexer.mll[61,1302+10]..[61,1302+19])
                            [
                              <arg>
                              Nolabel
                                expression (lib/sentenceLexer.mll[61,1302+20]..[61,1302+27])
                                  Pexp_ident "content" (lib/sentenceLexer.mll[61,1302+20]..[61,1302+27])
                              <arg>
                              Nolabel
                                expression (lib/sentenceLexer.mll[61,1302+28]..[61,1302+34])
                                  Pexp_ident "offset" (lib/sentenceLexer.mll[61,1302+28]..[61,1302+34])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/sentenceLexer.mll[61,1302+37]..[61,1302+39])
                            Pexp_ident "c1" (lib/sentenceLexer.mll[61,1302+37]..[61,1302+39])
                      ]
                  expression (lib/sentenceLexer.mll[62,1344+2]..[62,1344+29])
                    Pexp_apply
                    expression (lib/sentenceLexer.mll[62,1344+2]..[62,1344+11])
                      Pexp_ident "Bytes.set" (lib/sentenceLexer.mll[62,1344+2]..[62,1344+11])
                    [
                      <arg>
                      Nolabel
                        expression (lib/sentenceLexer.mll[62,1344+12]..[62,1344+19])
                          Pexp_ident "content" (lib/sentenceLexer.mll[62,1344+12]..[62,1344+19])
                      <arg>
                      Nolabel
                        expression (lib/sentenceLexer.mll[62,1344+20]..[62,1344+26])
                          Pexp_ident "offset" (lib/sentenceLexer.mll[62,1344+20]..[62,1344+26])
                      <arg>
                      Nolabel
                        expression (lib/sentenceLexer.mll[62,1344+27]..[62,1344+29])
                          Pexp_ident "c2" (lib/sentenceLexer.mll[62,1344+27]..[62,1344+29])
                    ]
    ]
  structure_item (lib/sentenceLexer.mll[71,1648+0]..[97,2527+29])
    Pstr_type Rec
    [
      type_declaration "monster" (lib/sentenceLexer.mll[71,1648+5]..[71,1648+12]) (lib/sentenceLexer.mll[71,1648+0]..[94,2512+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/sentenceLexer.mll[74,1703+2]..[74,1703+19])
                Immutable
                "pos" (lib/sentenceLexer.mll[74,1703+2]..[74,1703+5])                core_type (lib/sentenceLexer.mll[74,1703+7]..[74,1703+18])
                  Ptyp_constr "Positions.t" (lib/sentenceLexer.mll[74,1703+7]..[74,1703+18])
                  []
              (lib/sentenceLexer.mll[80,2010+2]..[80,2010+15])
                Immutable
                "check" (lib/sentenceLexer.mll[80,2010+2]..[80,2010+7])                core_type (lib/sentenceLexer.mll[80,2010+9]..[80,2010+14])
                  Ptyp_constr "check" (lib/sentenceLexer.mll[80,2010+9]..[80,2010+14])
                  []
              (lib/sentenceLexer.mll[86,2300+2]..[86,2300+34])
                Immutable
                "transform" (lib/sentenceLexer.mll[86,2300+2]..[86,2300+11])                core_type (lib/sentenceLexer.mll[86,2300+13]..[86,2300+33])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/sentenceLexer.mll[86,2300+13]..[86,2300+16])
                    Ptyp_constr "int" (lib/sentenceLexer.mll[86,2300+13]..[86,2300+16])
                    []
                  core_type (lib/sentenceLexer.mll[86,2300+20]..[86,2300+33])
                    Ptyp_arrow
                    Nolabel
                    core_type (lib/sentenceLexer.mll[86,2300+20]..[86,2300+25])
                      Ptyp_constr "bytes" (lib/sentenceLexer.mll[86,2300+20]..[86,2300+25])
                      []
                    core_type (lib/sentenceLexer.mll[86,2300+29]..[86,2300+33])
                      Ptyp_constr "unit" (lib/sentenceLexer.mll[86,2300+29]..[86,2300+33])
                      []
              (lib/sentenceLexer.mll[89,2385+2]..[89,2385+26])
                Immutable
                "keyword" (lib/sentenceLexer.mll[89,2385+2]..[89,2385+9])                core_type (lib/sentenceLexer.mll[89,2385+11]..[89,2385+25])
                  Ptyp_constr "option" (lib/sentenceLexer.mll[89,2385+19]..[89,2385+25])
                  [
                    core_type (lib/sentenceLexer.mll[89,2385+11]..[89,2385+18])
                      Ptyp_constr "keyword" (lib/sentenceLexer.mll[89,2385+11]..[89,2385+18])
                      []
                  ]
              (lib/sentenceLexer.mll[92,2489+2]..[92,2489+21])
                Immutable
                "oid" (lib/sentenceLexer.mll[92,2489+2]..[92,2489+5])                core_type (lib/sentenceLexer.mll[92,2489+7]..[92,2489+20])
                  Ptyp_constr "option" (lib/sentenceLexer.mll[92,2489+14]..[92,2489+20])
                  [
                    core_type (lib/sentenceLexer.mll[92,2489+7]..[92,2489+13])
                      Ptyp_constr "string" (lib/sentenceLexer.mll[92,2489+7]..[92,2489+13])
                      []
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "check" (lib/sentenceLexer.mll[96,2515+4]..[96,2515+9]) (lib/sentenceLexer.mll[96,2515+0]..[97,2527+29])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/sentenceLexer.mll[97,2527+2]..[97,2527+29])
              Ptyp_arrow
              Nolabel
              core_type (lib/sentenceLexer.mll[97,2527+2]..[97,2527+21])
                Ptyp_constr "array" (lib/sentenceLexer.mll[97,2527+16]..[97,2527+21])
                [
                  core_type (lib/sentenceLexer.mll[97,2527+2]..[97,2527+15])
                    Ptyp_constr "option" (lib/sentenceLexer.mll[97,2527+9]..[97,2527+15])
                    [
                      core_type (lib/sentenceLexer.mll[97,2527+2]..[97,2527+8])
                        Ptyp_constr "string" (lib/sentenceLexer.mll[97,2527+2]..[97,2527+8])
                        []
                    ]
                ]
              core_type (lib/sentenceLexer.mll[97,2527+25]..[97,2527+29])
                Ptyp_constr "unit" (lib/sentenceLexer.mll[97,2527+25]..[97,2527+29])
                []
    ]
  structure_item (lib/sentenceLexer.mll[101,2575+0]..[102,2594+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[101,2575+4]..[101,2575+8])
          Ppat_var "none" (lib/sentenceLexer.mll[101,2575+4]..[101,2575+8])
        core_type (lib/sentenceLexer.mll[101,2575+11]..[101,2575+16])
          Ptyp_constr "check" (lib/sentenceLexer.mll[101,2575+11]..[101,2575+16])
          []
        expression (lib/sentenceLexer.mll[102,2594+2]..[102,2594+13])
          Pexp_fun
          Nolabel
          None
          pattern (lib/sentenceLexer.mll[102,2594+6]..[102,2594+7])
            Ppat_any
          expression (lib/sentenceLexer.mll[102,2594+11]..[102,2594+13])
            Pexp_construct "()" (lib/sentenceLexer.mll[102,2594+11]..[102,2594+13])
            None
    ]
  structure_item (lib/sentenceLexer.mll[108,2724+0]..[123,3128+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[108,2724+4]..[108,2724+15])
          Ppat_var "syntaxerror" (lib/sentenceLexer.mll[108,2724+4]..[108,2724+15])
        expression (lib/sentenceLexer.mll[108,2724+16]..[123,3128+41]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/sentenceLexer.mll[108,2724+16]..[108,2724+19])
            Ppat_var "pos" (lib/sentenceLexer.mll[108,2724+16]..[108,2724+19])
          expression (lib/sentenceLexer.mll[108,2724+20]..[123,3128+41])
            Pexp_constraint
            expression (lib/sentenceLexer.mll[109,2756+2]..[123,3128+41])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/sentenceLexer.mll[109,2756+6]..[109,2756+11])
                    Ppat_var "check" (lib/sentenceLexer.mll[109,2756+6]..[109,2756+11])
                  expression (lib/sentenceLexer.mll[110,2770+4]..[110,2770+8])
                    Pexp_ident "none" (lib/sentenceLexer.mll[110,2770+4]..[110,2770+8])
                <def>
                  pattern (lib/sentenceLexer.mll[111,2779+6]..[111,2779+15])
                    Ppat_var "transform" (lib/sentenceLexer.mll[111,2779+6]..[111,2779+15])
                  expression (lib/sentenceLexer.mll[111,2779+16]..[117,2999+65]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lib/sentenceLexer.mll[111,2779+16]..[111,2779+20])
                      Ppat_var "ofs1" (lib/sentenceLexer.mll[111,2779+16]..[111,2779+20])
                    expression (lib/sentenceLexer.mll[111,2779+21]..[117,2999+65]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lib/sentenceLexer.mll[111,2779+21]..[111,2779+28])
                        Ppat_var "content" (lib/sentenceLexer.mll[111,2779+21]..[111,2779+28])
                      expression (lib/sentenceLexer.mll[114,2888+4]..[117,2999+65])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/sentenceLexer.mll[114,2888+8]..[114,2888+11])
                              Ppat_var "pos" (lib/sentenceLexer.mll[114,2888+8]..[114,2888+11])
                            expression (lib/sentenceLexer.mll[114,2888+14]..[114,2888+35])
                              Pexp_apply
                              expression (lib/sentenceLexer.mll[114,2888+14]..[114,2888+31])
                                Pexp_ident "start_of_position" (lib/sentenceLexer.mll[114,2888+14]..[114,2888+31])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[114,2888+32]..[114,2888+35])
                                    Pexp_ident "pos" (lib/sentenceLexer.mll[114,2888+32]..[114,2888+35])
                              ]
                        ]
                        expression (lib/sentenceLexer.mll[115,2927+4]..[117,2999+65])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lib/sentenceLexer.mll[115,2927+8]..[115,2927+11])
                                Ppat_var "ofs" (lib/sentenceLexer.mll[115,2927+8]..[115,2927+11])
                              expression (lib/sentenceLexer.mll[115,2927+14]..[115,2927+33])
                                Pexp_apply
                                expression (lib/sentenceLexer.mll[115,2927+27]..[115,2927+28])
                                  Pexp_ident "-" (lib/sentenceLexer.mll[115,2927+27]..[115,2927+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/sentenceLexer.mll[115,2927+14]..[115,2927+26])
                                      Pexp_field
                                      expression (lib/sentenceLexer.mll[115,2927+14]..[115,2927+17])
                                        Pexp_ident "pos" (lib/sentenceLexer.mll[115,2927+14]..[115,2927+17])
                                      "pos_cnum" (lib/sentenceLexer.mll[115,2927+18]..[115,2927+26])
                                  <arg>
                                  Nolabel
                                    expression (lib/sentenceLexer.mll[115,2927+29]..[115,2927+33])
                                      Pexp_ident "ofs1" (lib/sentenceLexer.mll[115,2927+29]..[115,2927+33])
                                ]
                          ]
                          expression (lib/sentenceLexer.mll[116,2964+4]..[117,2999+65])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/sentenceLexer.mll[116,2964+8]..[116,2964+14])
                                  Ppat_var "source" (lib/sentenceLexer.mll[116,2964+8]..[116,2964+14])
                                expression (lib/sentenceLexer.mll[116,2964+17]..[116,2964+31])
                                  Pexp_constant PConst_string("(raise _eRR)",(lib/sentenceLexer.mll[116,2964+18]..[116,2964+30]),None)
                            ]
                            expression (lib/sentenceLexer.mll[117,2999+4]..[117,2999+65])
                              Pexp_apply
                              expression (lib/sentenceLexer.mll[117,2999+4]..[117,2999+21])
                                Pexp_ident "Bytes.blit_string" (lib/sentenceLexer.mll[117,2999+4]..[117,2999+21])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[117,2999+22]..[117,2999+28])
                                    Pexp_ident "source" (lib/sentenceLexer.mll[117,2999+22]..[117,2999+28])
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[117,2999+29]..[117,2999+30])
                                    Pexp_constant PConst_int (0,None)
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[117,2999+31]..[117,2999+38])
                                    Pexp_ident "content" (lib/sentenceLexer.mll[117,2999+31]..[117,2999+38])
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[117,2999+39]..[117,2999+42])
                                    Pexp_ident "ofs" (lib/sentenceLexer.mll[117,2999+39]..[117,2999+42])
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[117,2999+43]..[117,2999+65])
                                    Pexp_apply
                                    expression (lib/sentenceLexer.mll[117,2999+44]..[117,2999+57])
                                      Pexp_ident "String.length" (lib/sentenceLexer.mll[117,2999+44]..[117,2999+57])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/sentenceLexer.mll[117,2999+58]..[117,2999+64])
                                          Pexp_ident "source" (lib/sentenceLexer.mll[117,2999+58]..[117,2999+64])
                                    ]
                              ]
                <def>
                  pattern (lib/sentenceLexer.mll[118,3065+6]..[118,3065+13])
                    Ppat_var "keyword" (lib/sentenceLexer.mll[118,3065+6]..[118,3065+13])
                  expression (lib/sentenceLexer.mll[119,3081+4]..[119,3081+20])
                    Pexp_construct "Some" (lib/sentenceLexer.mll[119,3081+4]..[119,3081+8])
                    Some
                      expression (lib/sentenceLexer.mll[119,3081+9]..[119,3081+20])
                        Pexp_construct "SyntaxError" (lib/sentenceLexer.mll[119,3081+9]..[119,3081+20])
                        None
                <def>
                  pattern (lib/sentenceLexer.mll[120,3102+6]..[120,3102+9])
                    Ppat_var "oid" (lib/sentenceLexer.mll[120,3102+6]..[120,3102+9])
                  expression (lib/sentenceLexer.mll[121,3114+4]..[121,3114+8])
                    Pexp_construct "None" (lib/sentenceLexer.mll[121,3114+4]..[121,3114+8])
                    None
              ]
              expression (lib/sentenceLexer.mll[123,3128+2]..[123,3128+41])
                Pexp_record
                [
                  "pos" (lib/sentenceLexer.mll[123,3128+4]..[123,3128+7]) ghost
                    expression (lib/sentenceLexer.mll[123,3128+4]..[123,3128+7])
                      Pexp_ident "pos" (lib/sentenceLexer.mll[123,3128+4]..[123,3128+7])
                  "check" (lib/sentenceLexer.mll[123,3128+9]..[123,3128+14]) ghost
                    expression (lib/sentenceLexer.mll[123,3128+9]..[123,3128+14])
                      Pexp_ident "check" (lib/sentenceLexer.mll[123,3128+9]..[123,3128+14])
                  "transform" (lib/sentenceLexer.mll[123,3128+16]..[123,3128+25]) ghost
                    expression (lib/sentenceLexer.mll[123,3128+16]..[123,3128+25])
                      Pexp_ident "transform" (lib/sentenceLexer.mll[123,3128+16]..[123,3128+25])
                  "keyword" (lib/sentenceLexer.mll[123,3128+27]..[123,3128+34]) ghost
                    expression (lib/sentenceLexer.mll[123,3128+27]..[123,3128+34])
                      Pexp_ident "keyword" (lib/sentenceLexer.mll[123,3128+27]..[123,3128+34])
                  "oid" (lib/sentenceLexer.mll[123,3128+36]..[123,3128+39]) ghost
                    expression (lib/sentenceLexer.mll[123,3128+36]..[123,3128+39])
                      Pexp_ident "oid" (lib/sentenceLexer.mll[123,3128+36]..[123,3128+39])
                ]
                None
            core_type (lib/sentenceLexer.mll[108,2724+22]..[108,2724+29])
              Ptyp_constr "monster" (lib/sentenceLexer.mll[108,2724+22]..[108,2724+29])
              []
    ]
  structure_item (lib/sentenceLexer.mll[176,5300+0]..[246,7429+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[176,5300+4]..[176,5300+12])
          Ppat_var "position" (lib/sentenceLexer.mll[176,5300+4]..[176,5300+12])
        expression (lib/sentenceLexer.mll[176,5300+13]..[246,7429+41]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/sentenceLexer.mll[176,5300+13]..[176,5300+16])
            Ppat_var "pos" (lib/sentenceLexer.mll[176,5300+13]..[176,5300+16])
          expression (lib/sentenceLexer.mll[177,5317+2]..[246,7429+41]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/sentenceLexer.mll[177,5317+2]..[177,5317+18])
              Ppat_constraint
              pattern (lib/sentenceLexer.mll[177,5317+3]..[177,5317+8])
                Ppat_var "where" (lib/sentenceLexer.mll[177,5317+3]..[177,5317+8])
              core_type (lib/sentenceLexer.mll[177,5317+11]..[177,5317+17])
                Ptyp_constr "string" (lib/sentenceLexer.mll[177,5317+11]..[177,5317+17])
                []
            expression (lib/sentenceLexer.mll[178,5336+2]..[246,7429+41]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/sentenceLexer.mll[178,5336+2]..[178,5336+19])
                Ppat_constraint
                pattern (lib/sentenceLexer.mll[178,5336+3]..[178,5336+9])
                  Ppat_var "flavor" (lib/sentenceLexer.mll[178,5336+3]..[178,5336+9])
                core_type (lib/sentenceLexer.mll[178,5336+12]..[178,5336+18])
                  Ptyp_constr "string" (lib/sentenceLexer.mll[178,5336+12]..[178,5336+18])
                  []
              expression (lib/sentenceLexer.mll[179,5356+2]..[246,7429+41]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lib/sentenceLexer.mll[179,5356+2]..[179,5356+21])
                  Ppat_constraint
                  pattern (lib/sentenceLexer.mll[179,5356+3]..[179,5356+4])
                    Ppat_var "i" (lib/sentenceLexer.mll[179,5356+3]..[179,5356+4])
                  core_type (lib/sentenceLexer.mll[179,5356+7]..[179,5356+20])
                    Ptyp_constr "option" (lib/sentenceLexer.mll[179,5356+14]..[179,5356+20])
                    [
                      core_type (lib/sentenceLexer.mll[179,5356+7]..[179,5356+13])
                        Ptyp_constr "string" (lib/sentenceLexer.mll[179,5356+7]..[179,5356+13])
                        []
                    ]
                expression (lib/sentenceLexer.mll[179,5356+22]..[246,7429+41]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lib/sentenceLexer.mll[179,5356+22]..[179,5356+41])
                    Ppat_constraint
                    pattern (lib/sentenceLexer.mll[179,5356+23]..[179,5356+24])
                      Ppat_var "x" (lib/sentenceLexer.mll[179,5356+23]..[179,5356+24])
                    core_type (lib/sentenceLexer.mll[179,5356+27]..[179,5356+40])
                      Ptyp_constr "option" (lib/sentenceLexer.mll[179,5356+34]..[179,5356+40])
                      [
                        core_type (lib/sentenceLexer.mll[179,5356+27]..[179,5356+33])
                          Ptyp_constr "string" (lib/sentenceLexer.mll[179,5356+27]..[179,5356+33])
                          []
                      ]
                  expression (lib/sentenceLexer.mll[181,5400+2]..[246,7429+41])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/sentenceLexer.mll[181,5400+6]..[181,5400+24])
                          Ppat_var "check_no_parameter" (lib/sentenceLexer.mll[181,5400+6]..[181,5400+24])
                        expression (lib/sentenceLexer.mll[181,5400+25]..[183,5465+71]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lib/sentenceLexer.mll[181,5400+25]..[181,5400+27])
                            Ppat_construct "()" (lib/sentenceLexer.mll[181,5400+25]..[181,5400+27])
                            None
                          expression (lib/sentenceLexer.mll[182,5430+4]..[183,5465+71])
                            Pexp_ifthenelse
                            expression (lib/sentenceLexer.mll[182,5430+7]..[182,5430+29])
                              Pexp_apply
                              expression (lib/sentenceLexer.mll[182,5430+17]..[182,5430+19])
                                Pexp_ident "||" (lib/sentenceLexer.mll[182,5430+17]..[182,5430+19])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[182,5430+7]..[182,5430+16])
                                    Pexp_apply
                                    expression (lib/sentenceLexer.mll[182,5430+9]..[182,5430+11])
                                      Pexp_ident "<>" (lib/sentenceLexer.mll[182,5430+9]..[182,5430+11])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/sentenceLexer.mll[182,5430+7]..[182,5430+8])
                                          Pexp_ident "i" (lib/sentenceLexer.mll[182,5430+7]..[182,5430+8])
                                      <arg>
                                      Nolabel
                                        expression (lib/sentenceLexer.mll[182,5430+12]..[182,5430+16])
                                          Pexp_construct "None" (lib/sentenceLexer.mll[182,5430+12]..[182,5430+16])
                                          None
                                    ]
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[182,5430+20]..[182,5430+29])
                                    Pexp_apply
                                    expression (lib/sentenceLexer.mll[182,5430+22]..[182,5430+24])
                                      Pexp_ident "<>" (lib/sentenceLexer.mll[182,5430+22]..[182,5430+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/sentenceLexer.mll[182,5430+20]..[182,5430+21])
                                          Pexp_ident "x" (lib/sentenceLexer.mll[182,5430+20]..[182,5430+21])
                                      <arg>
                                      Nolabel
                                        expression (lib/sentenceLexer.mll[182,5430+25]..[182,5430+29])
                                          Pexp_construct "None" (lib/sentenceLexer.mll[182,5430+25]..[182,5430+29])
                                          None
                                    ]
                              ]
                            expression (lib/sentenceLexer.mll[183,5465+6]..[183,5465+71])
                              Pexp_apply
                              expression (lib/sentenceLexer.mll[183,5465+6]..[183,5465+17])
                                Pexp_ident "Error.error" (lib/sentenceLexer.mll[183,5465+6]..[183,5465+17])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[183,5465+18]..[183,5465+23])
                                    Pexp_construct "::" (lib/sentenceLexer.mll[183,5465+19]..[183,5465+23]) ghost
                                    Some
                                      expression (lib/sentenceLexer.mll[183,5465+19]..[183,5465+23]) ghost
                                        Pexp_tuple
                                        [
                                          expression (lib/sentenceLexer.mll[183,5465+19]..[183,5465+22])
                                            Pexp_ident "pos" (lib/sentenceLexer.mll[183,5465+19]..[183,5465+22])
                                          expression (lib/sentenceLexer.mll[183,5465+22]..[183,5465+23]) ghost
                                            Pexp_construct "[]" (lib/sentenceLexer.mll[183,5465+22]..[183,5465+23]) ghost
                                            None
                                        ]
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[183,5465+24]..[183,5465+58])
                                    Pexp_constant PConst_string("$%s%s does not take a parameter.",(lib/sentenceLexer.mll[183,5465+25]..[183,5465+57]),None)
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[183,5465+59]..[183,5465+64])
                                    Pexp_ident "where" (lib/sentenceLexer.mll[183,5465+59]..[183,5465+64])
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[183,5465+65]..[183,5465+71])
                                    Pexp_ident "flavor" (lib/sentenceLexer.mll[183,5465+65]..[183,5465+71])
                              ]
                            None
                    ]
                    expression (lib/sentenceLexer.mll[185,5542+2]..[246,7429+41])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/sentenceLexer.mll[185,5542+6]..[185,5542+13])
                            Ppat_var "ofslpar" (lib/sentenceLexer.mll[185,5542+6]..[185,5542+13])
                          expression (lib/sentenceLexer.mll[186,5615+4]..[188,5675+5])
                            Pexp_apply
                            expression (lib/sentenceLexer.mll[187,5649+24]..[187,5649+25])
                              Pexp_ident "+" (lib/sentenceLexer.mll[187,5649+24]..[187,5649+25])
                            [
                              <arg>
                              Nolabel
                                expression (lib/sentenceLexer.mll[186,5615+4]..[187,5649+23])
                                  Pexp_apply
                                  expression (lib/sentenceLexer.mll[186,5615+6]..[186,5615+7])
                                    Pexp_ident "+" (lib/sentenceLexer.mll[186,5615+6]..[186,5615+7])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/sentenceLexer.mll[186,5615+4]..[186,5615+5])
                                        Pexp_constant PConst_int (1,None)
                                    <arg>
                                    Nolabel
                                      expression (lib/sentenceLexer.mll[187,5649+4]..[187,5649+23])
                                        Pexp_apply
                                        expression (lib/sentenceLexer.mll[187,5649+4]..[187,5649+17])
                                          Pexp_ident "String.length" (lib/sentenceLexer.mll[187,5649+4]..[187,5649+17])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/sentenceLexer.mll[187,5649+18]..[187,5649+23])
                                              Pexp_ident "where" (lib/sentenceLexer.mll[187,5649+18]..[187,5649+23])
                                        ]
                                  ]
                              <arg>
                              Nolabel
                                expression (lib/sentenceLexer.mll[188,5675+4]..[188,5675+5])
                                  Pexp_constant PConst_int (3,None)
                            ]
                      ]
                      expression (lib/sentenceLexer.mll[190,5722+2]..[246,7429+41])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/sentenceLexer.mll[190,5722+6]..[190,5722+11])
                              Ppat_var "where" (lib/sentenceLexer.mll[190,5722+6]..[190,5722+11])
                            expression (lib/sentenceLexer.mll[191,5736+4]..[197,5939+35])
                              Pexp_match
                              expression (lib/sentenceLexer.mll[191,5736+10]..[191,5736+15])
                                Pexp_ident "where" (lib/sentenceLexer.mll[191,5736+10]..[191,5736+15])
                              [
                                <case>
                                  pattern (lib/sentenceLexer.mll[192,5757+6]..[193,5777+9])
                                    Ppat_or
                                    pattern (lib/sentenceLexer.mll[192,5757+6]..[192,5757+19])
                                      Ppat_constant PConst_string("symbolstart",(lib/sentenceLexer.mll[192,5757+7]..[192,5757+18]),None)
                                    pattern (lib/sentenceLexer.mll[193,5777+6]..[193,5777+9])
                                      Ppat_constant PConst_string("s",(lib/sentenceLexer.mll[193,5777+7]..[193,5777+8]),None)
                                  expression (lib/sentenceLexer.mll[193,5777+23]..[193,5777+61])
                                    Pexp_sequence
                                    expression (lib/sentenceLexer.mll[193,5777+23]..[193,5777+43])
                                      Pexp_apply
                                      expression (lib/sentenceLexer.mll[193,5777+23]..[193,5777+41])
                                        Pexp_ident "check_no_parameter" (lib/sentenceLexer.mll[193,5777+23]..[193,5777+41])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/sentenceLexer.mll[193,5777+41]..[193,5777+43])
                                            Pexp_construct "()" (lib/sentenceLexer.mll[193,5777+41]..[193,5777+43])
                                            None
                                      ]
                                    expression (lib/sentenceLexer.mll[193,5777+45]..[193,5777+61])
                                      Pexp_construct "WhereSymbolStart" (lib/sentenceLexer.mll[193,5777+45]..[193,5777+61])
                                      None
                                <case>
                                  pattern (lib/sentenceLexer.mll[194,5839+6]..[194,5839+13])
                                    Ppat_constant PConst_string("start",(lib/sentenceLexer.mll[194,5839+7]..[194,5839+12]),None)
                                  expression (lib/sentenceLexer.mll[194,5839+23]..[194,5839+33])
                                    Pexp_construct "WhereStart" (lib/sentenceLexer.mll[194,5839+23]..[194,5839+33])
                                    None
                                <case>
                                  pattern (lib/sentenceLexer.mll[195,5873+6]..[195,5873+11])
                                    Ppat_constant PConst_string("end",(lib/sentenceLexer.mll[195,5873+7]..[195,5873+10]),None)
                                  expression (lib/sentenceLexer.mll[195,5873+23]..[195,5873+31])
                                    Pexp_construct "WhereEnd" (lib/sentenceLexer.mll[195,5873+23]..[195,5873+31])
                                    None
                                <case>
                                  pattern (lib/sentenceLexer.mll[196,5905+6]..[196,5905+8])
                                    Ppat_constant PConst_string("",(lib/sentenceLexer.mll[196,5905+7]..[196,5905+7]),None)
                                  expression (lib/sentenceLexer.mll[196,5905+23]..[196,5905+33])
                                    Pexp_construct "WhereStart" (lib/sentenceLexer.mll[196,5905+23]..[196,5905+33])
                                    None
                                <case>
                                  pattern (lib/sentenceLexer.mll[197,5939+6]..[197,5939+7])
                                    Ppat_any
                                  expression (lib/sentenceLexer.mll[197,5939+23]..[197,5939+35])
                                    Pexp_assert
                                    expression (lib/sentenceLexer.mll[197,5939+30]..[197,5939+35])
                                      Pexp_construct "false" (lib/sentenceLexer.mll[197,5939+30]..[197,5939+35])
                                      None
                              ]
                        ]
                        expression (lib/sentenceLexer.mll[199,5980+2]..[246,7429+41])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lib/sentenceLexer.mll[199,5980+6]..[199,5980+12])
                                Ppat_var "flavor" (lib/sentenceLexer.mll[199,5980+6]..[199,5980+12])
                              expression (lib/sentenceLexer.mll[200,5995+4]..[204,6111+29])
                                Pexp_match
                                expression (lib/sentenceLexer.mll[200,5995+10]..[200,5995+16])
                                  Pexp_ident "flavor" (lib/sentenceLexer.mll[200,5995+10]..[200,5995+16])
                                [
                                  <case>
                                    pattern (lib/sentenceLexer.mll[201,6017+6]..[201,6017+11])
                                      Ppat_constant PConst_string("pos",(lib/sentenceLexer.mll[201,6017+7]..[201,6017+10]),None)
                                    expression (lib/sentenceLexer.mll[201,6017+17]..[201,6017+31])
                                      Pexp_construct "FlavorPosition" (lib/sentenceLexer.mll[201,6017+17]..[201,6017+31])
                                      None
                                  <case>
                                    pattern (lib/sentenceLexer.mll[202,6049+6]..[202,6049+11])
                                      Ppat_constant PConst_string("ofs",(lib/sentenceLexer.mll[202,6049+7]..[202,6049+10]),None)
                                    expression (lib/sentenceLexer.mll[202,6049+17]..[202,6049+29])
                                      Pexp_construct "FlavorOffset" (lib/sentenceLexer.mll[202,6049+17]..[202,6049+29])
                                      None
                                  <case>
                                    pattern (lib/sentenceLexer.mll[203,6079+6]..[203,6079+11])
                                      Ppat_constant PConst_string("loc",(lib/sentenceLexer.mll[203,6079+7]..[203,6079+10]),None)
                                    expression (lib/sentenceLexer.mll[203,6079+17]..[203,6079+31])
                                      Pexp_construct "FlavorLocation" (lib/sentenceLexer.mll[203,6079+17]..[203,6079+31])
                                      None
                                  <case>
                                    pattern (lib/sentenceLexer.mll[204,6111+6]..[204,6111+7])
                                      Ppat_any
                                    expression (lib/sentenceLexer.mll[204,6111+17]..[204,6111+29])
                                      Pexp_assert
                                      expression (lib/sentenceLexer.mll[204,6111+24]..[204,6111+29])
                                        Pexp_construct "false" (lib/sentenceLexer.mll[204,6111+24]..[204,6111+29])
                                        None
                                ]
                          ]
                          expression (lib/sentenceLexer.mll[206,6146+2]..[246,7429+41])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/sentenceLexer.mll[206,6146+6]..[206,6146+20])
                                  Ppat_tuple
                                  [
                                    pattern (lib/sentenceLexer.mll[206,6146+6]..[206,6146+13])
                                      Ppat_var "subject" (lib/sentenceLexer.mll[206,6146+6]..[206,6146+13])
                                    pattern (lib/sentenceLexer.mll[206,6146+15]..[206,6146+20])
                                      Ppat_var "check" (lib/sentenceLexer.mll[206,6146+15]..[206,6146+20])
                                  ]
                                expression (lib/sentenceLexer.mll[207,6169+4]..[223,6778+20])
                                  Pexp_match
                                  expression (lib/sentenceLexer.mll[207,6169+10]..[207,6169+14])
                                    Pexp_tuple
                                    [
                                      expression (lib/sentenceLexer.mll[207,6169+10]..[207,6169+11])
                                        Pexp_ident "i" (lib/sentenceLexer.mll[207,6169+10]..[207,6169+11])
                                      expression (lib/sentenceLexer.mll[207,6169+13]..[207,6169+14])
                                        Pexp_ident "x" (lib/sentenceLexer.mll[207,6169+13]..[207,6169+14])
                                    ]
                                  [
                                    <case>
                                      pattern (lib/sentenceLexer.mll[219,6689+6]..[219,6689+16])
                                        Ppat_tuple
                                        [
                                          pattern (lib/sentenceLexer.mll[219,6689+6]..[219,6689+10])
                                            Ppat_construct "None" (lib/sentenceLexer.mll[219,6689+6]..[219,6689+10])
                                            None
                                          pattern (lib/sentenceLexer.mll[219,6689+12]..[219,6689+16])
                                            Ppat_construct "None" (lib/sentenceLexer.mll[219,6689+12]..[219,6689+16])
                                            None
                                        ]
                                      expression (lib/sentenceLexer.mll[221,6735+8]..[221,6735+18])
                                        Pexp_tuple
                                        [
                                          expression (lib/sentenceLexer.mll[221,6735+8]..[221,6735+12])
                                            Pexp_construct "Left" (lib/sentenceLexer.mll[221,6735+8]..[221,6735+12])
                                            None
                                          expression (lib/sentenceLexer.mll[221,6735+14]..[221,6735+18])
                                            Pexp_ident "none" (lib/sentenceLexer.mll[221,6735+14]..[221,6735+18])
                                        ]
                                    <case>
                                      pattern (lib/sentenceLexer.mll[222,6754+6]..[222,6754+20])
                                        Ppat_tuple
                                        [
                                          pattern (lib/sentenceLexer.mll[222,6754+6]..[222,6754+12])
                                            Ppat_construct "Some" (lib/sentenceLexer.mll[222,6754+6]..[222,6754+10])
                                            Some
                                              []
                                              pattern (lib/sentenceLexer.mll[222,6754+11]..[222,6754+12])
                                                Ppat_any
                                          pattern (lib/sentenceLexer.mll[222,6754+14]..[222,6754+20])
                                            Ppat_construct "Some" (lib/sentenceLexer.mll[222,6754+14]..[222,6754+18])
                                            Some
                                              []
                                              pattern (lib/sentenceLexer.mll[222,6754+19]..[222,6754+20])
                                                Ppat_any
                                        ]
                                      expression (lib/sentenceLexer.mll[223,6778+8]..[223,6778+20])
                                        Pexp_assert
                                        expression (lib/sentenceLexer.mll[223,6778+15]..[223,6778+20])
                                          Pexp_construct "false" (lib/sentenceLexer.mll[223,6778+15]..[223,6778+20])
                                          None
                                  ]
                            ]
                            expression (lib/sentenceLexer.mll[225,6804+2]..[246,7429+41])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/sentenceLexer.mll[225,6804+6]..[225,6804+15])
                                    Ppat_var "transform" (lib/sentenceLexer.mll[225,6804+6]..[225,6804+15])
                                  expression (lib/sentenceLexer.mll[225,6804+16]..[239,7326+10]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lib/sentenceLexer.mll[225,6804+16]..[225,6804+20])
                                      Ppat_var "ofs1" (lib/sentenceLexer.mll[225,6804+16]..[225,6804+20])
                                    expression (lib/sentenceLexer.mll[225,6804+21]..[239,7326+10]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lib/sentenceLexer.mll[225,6804+21]..[225,6804+28])
                                        Ppat_var "content" (lib/sentenceLexer.mll[225,6804+21]..[225,6804+28])
                                      expression (lib/sentenceLexer.mll[226,6835+4]..[239,7326+10])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/sentenceLexer.mll[226,6835+8]..[226,6835+11])
                                              Ppat_var "pos" (lib/sentenceLexer.mll[226,6835+8]..[226,6835+11])
                                            expression (lib/sentenceLexer.mll[226,6835+14]..[226,6835+35])
                                              Pexp_apply
                                              expression (lib/sentenceLexer.mll[226,6835+14]..[226,6835+31])
                                                Pexp_ident "start_of_position" (lib/sentenceLexer.mll[226,6835+14]..[226,6835+31])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/sentenceLexer.mll[226,6835+32]..[226,6835+35])
                                                    Pexp_ident "pos" (lib/sentenceLexer.mll[226,6835+32]..[226,6835+35])
                                              ]
                                        ]
                                        expression (lib/sentenceLexer.mll[227,6874+4]..[239,7326+10])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/sentenceLexer.mll[227,6874+8]..[227,6874+11])
                                                Ppat_var "ofs" (lib/sentenceLexer.mll[227,6874+8]..[227,6874+11])
                                              expression (lib/sentenceLexer.mll[227,6874+14]..[227,6874+33])
                                                Pexp_apply
                                                expression (lib/sentenceLexer.mll[227,6874+27]..[227,6874+28])
                                                  Pexp_ident "-" (lib/sentenceLexer.mll[227,6874+27]..[227,6874+28])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/sentenceLexer.mll[227,6874+14]..[227,6874+26])
                                                      Pexp_field
                                                      expression (lib/sentenceLexer.mll[227,6874+14]..[227,6874+17])
                                                        Pexp_ident "pos" (lib/sentenceLexer.mll[227,6874+14]..[227,6874+17])
                                                      "pos_cnum" (lib/sentenceLexer.mll[227,6874+18]..[227,6874+26])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/sentenceLexer.mll[227,6874+29]..[227,6874+33])
                                                      Pexp_ident "ofs1" (lib/sentenceLexer.mll[227,6874+29]..[227,6874+33])
                                                ]
                                          ]
                                          expression (lib/sentenceLexer.mll[228,6911+4]..[239,7326+10])
                                            Pexp_sequence
                                            expression (lib/sentenceLexer.mll[228,6911+4]..[228,6911+33])
                                              Pexp_apply
                                              expression (lib/sentenceLexer.mll[228,6911+4]..[228,6911+13])
                                                Pexp_ident "overwrite" (lib/sentenceLexer.mll[228,6911+4]..[228,6911+13])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/sentenceLexer.mll[228,6911+14]..[228,6911+21])
                                                    Pexp_ident "content" (lib/sentenceLexer.mll[228,6911+14]..[228,6911+21])
                                                <arg>
                                                Nolabel
                                                  expression (lib/sentenceLexer.mll[228,6911+22]..[228,6911+25])
                                                    Pexp_ident "ofs" (lib/sentenceLexer.mll[228,6911+22]..[228,6911+25])
                                                <arg>
                                                Nolabel
                                                  expression (lib/sentenceLexer.mll[228,6911+26]..[228,6911+29])
                                                    Pexp_constant PConst_char 24
                                                <arg>
                                                Nolabel
                                                  expression (lib/sentenceLexer.mll[228,6911+30]..[228,6911+33])
                                                    Pexp_constant PConst_char 5f
                                              ]
                                            expression (lib/sentenceLexer.mll[229,6946+4]..[239,7326+10])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (lib/sentenceLexer.mll[229,6946+8]..[229,6946+15])
                                                    Ppat_var "ofslpar" (lib/sentenceLexer.mll[229,6946+8]..[229,6946+15])
                                                  expression (lib/sentenceLexer.mll[229,6946+18]..[229,6946+31])
                                                    Pexp_apply
                                                    expression (lib/sentenceLexer.mll[229,6946+22]..[229,6946+23])
                                                      Pexp_ident "+" (lib/sentenceLexer.mll[229,6946+22]..[229,6946+23])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/sentenceLexer.mll[229,6946+18]..[229,6946+21])
                                                          Pexp_ident "ofs" (lib/sentenceLexer.mll[229,6946+18]..[229,6946+21])
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/sentenceLexer.mll[229,6946+24]..[229,6946+31])
                                                          Pexp_ident "ofslpar" (lib/sentenceLexer.mll[229,6946+24]..[229,6946+31])
                                                    ]
                                              ]
                                              expression (lib/sentenceLexer.mll[230,6981+4]..[239,7326+10])
                                                Pexp_match
                                                expression (lib/sentenceLexer.mll[230,6981+10]..[230,6981+14])
                                                  Pexp_tuple
                                                  [
                                                    expression (lib/sentenceLexer.mll[230,6981+10]..[230,6981+11])
                                                      Pexp_ident "i" (lib/sentenceLexer.mll[230,6981+10]..[230,6981+11])
                                                    expression (lib/sentenceLexer.mll[230,6981+13]..[230,6981+14])
                                                      Pexp_ident "x" (lib/sentenceLexer.mll[230,6981+13]..[230,6981+14])
                                                  ]
                                                [
                                                  <case>
                                                    pattern (lib/sentenceLexer.mll[231,7001+6]..[231,7001+18])
                                                      Ppat_tuple
                                                      [
                                                        pattern (lib/sentenceLexer.mll[231,7001+6]..[231,7001+10])
                                                          Ppat_construct "None" (lib/sentenceLexer.mll[231,7001+6]..[231,7001+10])
                                                          None
                                                        pattern (lib/sentenceLexer.mll[231,7001+12]..[231,7001+18])
                                                          Ppat_construct "Some" (lib/sentenceLexer.mll[231,7001+12]..[231,7001+16])
                                                          Some
                                                            []
                                                            pattern (lib/sentenceLexer.mll[231,7001+17]..[231,7001+18])
                                                              Ppat_var "x" (lib/sentenceLexer.mll[231,7001+17]..[231,7001+18])
                                                      ]
                                                    expression (lib/sentenceLexer.mll[232,7023+8]..[233,7066+65])
                                                      Pexp_sequence
                                                      expression (lib/sentenceLexer.mll[232,7023+8]..[232,7023+41])
                                                        Pexp_apply
                                                        expression (lib/sentenceLexer.mll[232,7023+8]..[232,7023+17])
                                                          Pexp_ident "overwrite" (lib/sentenceLexer.mll[232,7023+8]..[232,7023+17])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/sentenceLexer.mll[232,7023+18]..[232,7023+25])
                                                              Pexp_ident "content" (lib/sentenceLexer.mll[232,7023+18]..[232,7023+25])
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/sentenceLexer.mll[232,7023+26]..[232,7023+33])
                                                              Pexp_ident "ofslpar" (lib/sentenceLexer.mll[232,7023+26]..[232,7023+33])
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/sentenceLexer.mll[232,7023+34]..[232,7023+37])
                                                              Pexp_constant PConst_char 28
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/sentenceLexer.mll[232,7023+38]..[232,7023+41])
                                                              Pexp_constant PConst_char 5f
                                                        ]
                                                      expression (lib/sentenceLexer.mll[233,7066+8]..[233,7066+65])
                                                        Pexp_apply
                                                        expression (lib/sentenceLexer.mll[233,7066+8]..[233,7066+17])
                                                          Pexp_ident "overwrite" (lib/sentenceLexer.mll[233,7066+8]..[233,7066+17])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/sentenceLexer.mll[233,7066+18]..[233,7066+25])
                                                              Pexp_ident "content" (lib/sentenceLexer.mll[233,7066+18]..[233,7066+25])
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/sentenceLexer.mll[233,7066+26]..[233,7066+57])
                                                              Pexp_apply
                                                              expression (lib/sentenceLexer.mll[233,7066+39]..[233,7066+40])
                                                                Pexp_ident "+" (lib/sentenceLexer.mll[233,7066+39]..[233,7066+40])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/sentenceLexer.mll[233,7066+27]..[233,7066+38])
                                                                    Pexp_apply
                                                                    expression (lib/sentenceLexer.mll[233,7066+35]..[233,7066+36])
                                                                      Pexp_ident "+" (lib/sentenceLexer.mll[233,7066+35]..[233,7066+36])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (lib/sentenceLexer.mll[233,7066+27]..[233,7066+34])
  Pexp_ident "ofslpar" (lib/sentenceLexer.mll[233,7066+27]..[233,7066+34])
                                                                      <arg>
                                                                      Nolabel
expression (lib/sentenceLexer.mll[233,7066+37]..[233,7066+38])
  Pexp_constant PConst_int (1,None)
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/sentenceLexer.mll[233,7066+41]..[233,7066+56])
                                                                    Pexp_apply
                                                                    expression (lib/sentenceLexer.mll[233,7066+41]..[233,7066+54])
                                                                      Pexp_ident "String.length" (lib/sentenceLexer.mll[233,7066+41]..[233,7066+54])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (lib/sentenceLexer.mll[233,7066+55]..[233,7066+56])
  Pexp_ident "x" (lib/sentenceLexer.mll[233,7066+55]..[233,7066+56])
                                                                    ]
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/sentenceLexer.mll[233,7066+58]..[233,7066+61])
                                                              Pexp_constant PConst_char 29
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/sentenceLexer.mll[233,7066+62]..[233,7066+65])
                                                              Pexp_constant PConst_char 5f
                                                        ]
                                                  <case>
                                                    pattern (lib/sentenceLexer.mll[234,7132+6]..[234,7132+18])
                                                      Ppat_tuple
                                                      [
                                                        pattern (lib/sentenceLexer.mll[234,7132+6]..[234,7132+12])
                                                          Ppat_construct "Some" (lib/sentenceLexer.mll[234,7132+6]..[234,7132+10])
                                                          Some
                                                            []
                                                            pattern (lib/sentenceLexer.mll[234,7132+11]..[234,7132+12])
                                                              Ppat_var "i" (lib/sentenceLexer.mll[234,7132+11]..[234,7132+12])
                                                        pattern (lib/sentenceLexer.mll[234,7132+14]..[234,7132+18])
                                                          Ppat_construct "None" (lib/sentenceLexer.mll[234,7132+14]..[234,7132+18])
                                                          None
                                                      ]
                                                    expression (lib/sentenceLexer.mll[235,7154+8]..[237,7246+65])
                                                      Pexp_sequence
                                                      expression (lib/sentenceLexer.mll[235,7154+8]..[235,7154+41])
                                                        Pexp_apply
                                                        expression (lib/sentenceLexer.mll[235,7154+8]..[235,7154+17])
                                                          Pexp_ident "overwrite" (lib/sentenceLexer.mll[235,7154+8]..[235,7154+17])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/sentenceLexer.mll[235,7154+18]..[235,7154+25])
                                                              Pexp_ident "content" (lib/sentenceLexer.mll[235,7154+18]..[235,7154+25])
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/sentenceLexer.mll[235,7154+26]..[235,7154+33])
                                                              Pexp_ident "ofslpar" (lib/sentenceLexer.mll[235,7154+26]..[235,7154+33])
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/sentenceLexer.mll[235,7154+34]..[235,7154+37])
                                                              Pexp_constant PConst_char 28
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/sentenceLexer.mll[235,7154+38]..[235,7154+41])
                                                              Pexp_constant PConst_char 5f
                                                        ]
                                                      expression (lib/sentenceLexer.mll[236,7197+8]..[237,7246+65])
                                                        Pexp_sequence
                                                        expression (lib/sentenceLexer.mll[236,7197+8]..[236,7197+47])
                                                          Pexp_apply
                                                          expression (lib/sentenceLexer.mll[236,7197+8]..[236,7197+17])
                                                            Pexp_ident "overwrite" (lib/sentenceLexer.mll[236,7197+8]..[236,7197+17])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/sentenceLexer.mll[236,7197+18]..[236,7197+25])
                                                                Pexp_ident "content" (lib/sentenceLexer.mll[236,7197+18]..[236,7197+25])
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/sentenceLexer.mll[236,7197+26]..[236,7197+39])
                                                                Pexp_apply
                                                                expression (lib/sentenceLexer.mll[236,7197+35]..[236,7197+36])
                                                                  Pexp_ident "+" (lib/sentenceLexer.mll[236,7197+35]..[236,7197+36])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lib/sentenceLexer.mll[236,7197+27]..[236,7197+34])
                                                                      Pexp_ident "ofslpar" (lib/sentenceLexer.mll[236,7197+27]..[236,7197+34])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lib/sentenceLexer.mll[236,7197+37]..[236,7197+38])
                                                                      Pexp_constant PConst_int (1,None)
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/sentenceLexer.mll[236,7197+40]..[236,7197+43])
                                                                Pexp_constant PConst_char 24
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/sentenceLexer.mll[236,7197+44]..[236,7197+47])
                                                                Pexp_constant PConst_char 5f
                                                          ]
                                                        expression (lib/sentenceLexer.mll[237,7246+8]..[237,7246+65])
                                                          Pexp_apply
                                                          expression (lib/sentenceLexer.mll[237,7246+8]..[237,7246+17])
                                                            Pexp_ident "overwrite" (lib/sentenceLexer.mll[237,7246+8]..[237,7246+17])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/sentenceLexer.mll[237,7246+18]..[237,7246+25])
                                                                Pexp_ident "content" (lib/sentenceLexer.mll[237,7246+18]..[237,7246+25])
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/sentenceLexer.mll[237,7246+26]..[237,7246+57])
                                                                Pexp_apply
                                                                expression (lib/sentenceLexer.mll[237,7246+39]..[237,7246+40])
                                                                  Pexp_ident "+" (lib/sentenceLexer.mll[237,7246+39]..[237,7246+40])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lib/sentenceLexer.mll[237,7246+27]..[237,7246+38])
                                                                      Pexp_apply
                                                                      expression (lib/sentenceLexer.mll[237,7246+35]..[237,7246+36])
Pexp_ident "+" (lib/sentenceLexer.mll[237,7246+35]..[237,7246+36])
                                                                      [
<arg>
Nolabel
  expression (lib/sentenceLexer.mll[237,7246+27]..[237,7246+34])
    Pexp_ident "ofslpar" (lib/sentenceLexer.mll[237,7246+27]..[237,7246+34])
<arg>
Nolabel
  expression (lib/sentenceLexer.mll[237,7246+37]..[237,7246+38])
    Pexp_constant PConst_int (2,None)
                                                                      ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lib/sentenceLexer.mll[237,7246+41]..[237,7246+56])
                                                                      Pexp_apply
                                                                      expression (lib/sentenceLexer.mll[237,7246+41]..[237,7246+54])
Pexp_ident "String.length" (lib/sentenceLexer.mll[237,7246+41]..[237,7246+54])
                                                                      [
<arg>
Nolabel
  expression (lib/sentenceLexer.mll[237,7246+55]..[237,7246+56])
    Pexp_ident "i" (lib/sentenceLexer.mll[237,7246+55]..[237,7246+56])
                                                                      ]
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/sentenceLexer.mll[237,7246+58]..[237,7246+61])
                                                                Pexp_constant PConst_char 29
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/sentenceLexer.mll[237,7246+62]..[237,7246+65])
                                                                Pexp_constant PConst_char 5f
                                                          ]
                                                  <case>
                                                    pattern (lib/sentenceLexer.mll[238,7312+6]..[238,7312+10])
                                                      Ppat_tuple
                                                      [
                                                        pattern (lib/sentenceLexer.mll[238,7312+6]..[238,7312+7])
                                                          Ppat_any
                                                        pattern (lib/sentenceLexer.mll[238,7312+9]..[238,7312+10])
                                                          Ppat_any
                                                      ]
                                                    expression (lib/sentenceLexer.mll[239,7326+8]..[239,7326+10])
                                                      Pexp_construct "()" (lib/sentenceLexer.mll[239,7326+8]..[239,7326+10])
                                                      None
                                                ]
                              ]
                              expression (lib/sentenceLexer.mll[241,7342+2]..[246,7429+41])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/sentenceLexer.mll[241,7342+6]..[241,7342+13])
                                      Ppat_var "keyword" (lib/sentenceLexer.mll[241,7342+6]..[241,7342+13])
                                    expression (lib/sentenceLexer.mll[242,7358+4]..[242,7358+44])
                                      Pexp_construct "Some" (lib/sentenceLexer.mll[242,7358+4]..[242,7358+8])
                                      Some
                                        expression (lib/sentenceLexer.mll[242,7358+9]..[242,7358+44])
                                          Pexp_construct "Position" (lib/sentenceLexer.mll[242,7358+10]..[242,7358+18])
                                          Some
                                            expression (lib/sentenceLexer.mll[242,7358+19]..[242,7358+43])
                                              Pexp_tuple
                                              [
                                                expression (lib/sentenceLexer.mll[242,7358+20]..[242,7358+27])
                                                  Pexp_ident "subject" (lib/sentenceLexer.mll[242,7358+20]..[242,7358+27])
                                                expression (lib/sentenceLexer.mll[242,7358+29]..[242,7358+34])
                                                  Pexp_ident "where" (lib/sentenceLexer.mll[242,7358+29]..[242,7358+34])
                                                expression (lib/sentenceLexer.mll[242,7358+36]..[242,7358+42])
                                                  Pexp_ident "flavor" (lib/sentenceLexer.mll[242,7358+36]..[242,7358+42])
                                              ]
                                  <def>
                                    pattern (lib/sentenceLexer.mll[243,7403+6]..[243,7403+9])
                                      Ppat_var "oid" (lib/sentenceLexer.mll[243,7403+6]..[243,7403+9])
                                    expression (lib/sentenceLexer.mll[244,7415+4]..[244,7415+8])
                                      Pexp_construct "None" (lib/sentenceLexer.mll[244,7415+4]..[244,7415+8])
                                      None
                                ]
                                expression (lib/sentenceLexer.mll[246,7429+2]..[246,7429+41])
                                  Pexp_record
                                  [
                                    "pos" (lib/sentenceLexer.mll[246,7429+4]..[246,7429+7]) ghost
                                      expression (lib/sentenceLexer.mll[246,7429+4]..[246,7429+7])
                                        Pexp_ident "pos" (lib/sentenceLexer.mll[246,7429+4]..[246,7429+7])
                                    "check" (lib/sentenceLexer.mll[246,7429+9]..[246,7429+14]) ghost
                                      expression (lib/sentenceLexer.mll[246,7429+9]..[246,7429+14])
                                        Pexp_ident "check" (lib/sentenceLexer.mll[246,7429+9]..[246,7429+14])
                                    "transform" (lib/sentenceLexer.mll[246,7429+16]..[246,7429+25]) ghost
                                      expression (lib/sentenceLexer.mll[246,7429+16]..[246,7429+25])
                                        Pexp_ident "transform" (lib/sentenceLexer.mll[246,7429+16]..[246,7429+25])
                                    "keyword" (lib/sentenceLexer.mll[246,7429+27]..[246,7429+34]) ghost
                                      expression (lib/sentenceLexer.mll[246,7429+27]..[246,7429+34])
                                        Pexp_ident "keyword" (lib/sentenceLexer.mll[246,7429+27]..[246,7429+34])
                                    "oid" (lib/sentenceLexer.mll[246,7429+36]..[246,7429+39]) ghost
                                      expression (lib/sentenceLexer.mll[246,7429+36]..[246,7429+39])
                                        Pexp_ident "oid" (lib/sentenceLexer.mll[246,7429+36]..[246,7429+39])
                                  ]
                                  None
    ]
  structure_item (lib/sentenceLexer.mll[253,7640+0]..[259,7760+61])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[253,7640+4]..[253,7640+15])
          Ppat_var "no_monsters" (lib/sentenceLexer.mll[253,7640+4]..[253,7640+15])
        expression (lib/sentenceLexer.mll[253,7640+16]..[259,7760+61]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/sentenceLexer.mll[253,7640+16]..[253,7640+24])
            Ppat_var "monsters" (lib/sentenceLexer.mll[253,7640+16]..[253,7640+24])
          expression (lib/sentenceLexer.mll[254,7667+2]..[259,7760+61])
            Pexp_match
            expression (lib/sentenceLexer.mll[254,7667+8]..[254,7667+16])
              Pexp_ident "monsters" (lib/sentenceLexer.mll[254,7667+8]..[254,7667+16])
            [
              <case>
                pattern (lib/sentenceLexer.mll[255,7689+4]..[255,7689+6])
                  Ppat_construct "[]" (lib/sentenceLexer.mll[255,7689+4]..[255,7689+6])
                  None
                expression (lib/sentenceLexer.mll[256,7699+6]..[256,7699+8])
                  Pexp_construct "()" (lib/sentenceLexer.mll[256,7699+6]..[256,7699+8])
                  None
              <case>
                pattern (lib/sentenceLexer.mll[257,7708+4]..[257,7708+16])
                  Ppat_construct "::" (lib/sentenceLexer.mll[257,7708+12]..[257,7708+14])
                  Some
                    []
                    pattern (lib/sentenceLexer.mll[257,7708+4]..[257,7708+16]) ghost
                      Ppat_tuple
                      [
                        pattern (lib/sentenceLexer.mll[257,7708+4]..[257,7708+11])
                          Ppat_var "monster" (lib/sentenceLexer.mll[257,7708+4]..[257,7708+11])
                        pattern (lib/sentenceLexer.mll[257,7708+15]..[257,7708+16])
                          Ppat_any
                      ]
                expression (lib/sentenceLexer.mll[258,7728+6]..[259,7760+61])
                  Pexp_apply
                  expression (lib/sentenceLexer.mll[258,7728+6]..[258,7728+17])
                    Pexp_ident "Error.error" (lib/sentenceLexer.mll[258,7728+6]..[258,7728+17])
                  [
                    <arg>
                    Nolabel
                      expression (lib/sentenceLexer.mll[258,7728+18]..[258,7728+31])
                        Pexp_construct "::" (lib/sentenceLexer.mll[258,7728+19]..[258,7728+31]) ghost
                        Some
                          expression (lib/sentenceLexer.mll[258,7728+19]..[258,7728+31]) ghost
                            Pexp_tuple
                            [
                              expression (lib/sentenceLexer.mll[258,7728+19]..[258,7728+30])
                                Pexp_field
                                expression (lib/sentenceLexer.mll[258,7728+19]..[258,7728+26])
                                  Pexp_ident "monster" (lib/sentenceLexer.mll[258,7728+19]..[258,7728+26])
                                "pos" (lib/sentenceLexer.mll[258,7728+27]..[258,7728+30])
                              expression (lib/sentenceLexer.mll[258,7728+30]..[258,7728+31]) ghost
                                Pexp_construct "[]" (lib/sentenceLexer.mll[258,7728+30]..[258,7728+31]) ghost
                                None
                            ]
                    <arg>
                    Nolabel
                      expression (lib/sentenceLexer.mll[259,7760+8]..[259,7760+61])
                        Pexp_constant PConst_string("a Menhir keyword cannot be used in an OCaml header.",(lib/sentenceLexer.mll[259,7760+9]..[259,7760+60]),None)
                  ]
            ]
    ]
  structure_item (lib/sentenceLexer.mll[265,7980+0]..[270,8072+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[265,7980+4]..[265,7980+14])
          Ppat_var "gather_oid" (lib/sentenceLexer.mll[265,7980+4]..[265,7980+14])
        expression (lib/sentenceLexer.mll[265,7980+15]..[270,8072+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/sentenceLexer.mll[265,7980+15]..[265,7980+17])
            Ppat_var "xs" (lib/sentenceLexer.mll[265,7980+15]..[265,7980+17])
          expression (lib/sentenceLexer.mll[265,7980+18]..[270,8072+8]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/sentenceLexer.mll[265,7980+18]..[265,7980+21])
              Ppat_var "oid" (lib/sentenceLexer.mll[265,7980+18]..[265,7980+21])
            expression (lib/sentenceLexer.mll[266,8004+2]..[270,8072+8])
              Pexp_match
              expression (lib/sentenceLexer.mll[266,8004+8]..[266,8004+11])
                Pexp_ident "oid" (lib/sentenceLexer.mll[266,8004+8]..[266,8004+11])
              [
                <case>
                  pattern (lib/sentenceLexer.mll[267,8021+4]..[267,8021+10])
                    Ppat_construct "Some" (lib/sentenceLexer.mll[267,8021+4]..[267,8021+8])
                    Some
                      []
                      pattern (lib/sentenceLexer.mll[267,8021+9]..[267,8021+10])
                        Ppat_var "x" (lib/sentenceLexer.mll[267,8021+9]..[267,8021+10])
                  expression (lib/sentenceLexer.mll[268,8035+6]..[268,8035+24])
                    Pexp_apply
                    expression (lib/sentenceLexer.mll[268,8035+6]..[268,8035+19])
                      Pexp_ident "StringSet.add" (lib/sentenceLexer.mll[268,8035+6]..[268,8035+19])
                    [
                      <arg>
                      Nolabel
                        expression (lib/sentenceLexer.mll[268,8035+20]..[268,8035+21])
                          Pexp_ident "x" (lib/sentenceLexer.mll[268,8035+20]..[268,8035+21])
                      <arg>
                      Nolabel
                        expression (lib/sentenceLexer.mll[268,8035+22]..[268,8035+24])
                          Pexp_ident "xs" (lib/sentenceLexer.mll[268,8035+22]..[268,8035+24])
                    ]
                <case>
                  pattern (lib/sentenceLexer.mll[269,8060+4]..[269,8060+8])
                    Ppat_construct "None" (lib/sentenceLexer.mll[269,8060+4]..[269,8060+8])
                    None
                  expression (lib/sentenceLexer.mll[270,8072+6]..[270,8072+8])
                    Pexp_ident "xs" (lib/sentenceLexer.mll[270,8072+6]..[270,8072+8])
              ]
    ]
  structure_item (lib/sentenceLexer.mll[272,8082+0]..[273,8105+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[272,8082+4]..[272,8082+15])
          Ppat_var "gather_oids" (lib/sentenceLexer.mll[272,8082+4]..[272,8082+15])
        expression (lib/sentenceLexer.mll[272,8082+16]..[273,8105+49]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/sentenceLexer.mll[272,8082+16]..[272,8082+20])
            Ppat_var "oids" (lib/sentenceLexer.mll[272,8082+16]..[272,8082+20])
          expression (lib/sentenceLexer.mll[273,8105+2]..[273,8105+49])
            Pexp_apply
            expression (lib/sentenceLexer.mll[273,8105+2]..[273,8105+17])
              Pexp_ident "Array.fold_left" (lib/sentenceLexer.mll[273,8105+2]..[273,8105+17])
            [
              <arg>
              Nolabel
                expression (lib/sentenceLexer.mll[273,8105+18]..[273,8105+28])
                  Pexp_ident "gather_oid" (lib/sentenceLexer.mll[273,8105+18]..[273,8105+28])
              <arg>
              Nolabel
                expression (lib/sentenceLexer.mll[273,8105+29]..[273,8105+44])
                  Pexp_ident "StringSet.empty" (lib/sentenceLexer.mll[273,8105+29]..[273,8105+44])
              <arg>
              Nolabel
                expression (lib/sentenceLexer.mll[273,8105+45]..[273,8105+49])
                  Pexp_ident "oids" (lib/sentenceLexer.mll[273,8105+45]..[273,8105+49])
            ]
    ]
  structure_item (lib/sentenceLexer.mll[277,8225+0]..[280,8322+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[277,8225+4]..[277,8225+19])
          Ppat_var "gather_monsters" (lib/sentenceLexer.mll[277,8225+4]..[277,8225+19])
        expression (lib/sentenceLexer.mll[277,8225+20]..[280,8322+28]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/sentenceLexer.mll[277,8225+20]..[277,8225+28])
            Ppat_var "monsters" (lib/sentenceLexer.mll[277,8225+20]..[277,8225+28])
          expression (lib/sentenceLexer.mll[278,8256+2]..[280,8322+28])
            Pexp_apply
            expression (lib/sentenceLexer.mll[278,8256+2]..[278,8256+16])
              Pexp_ident "List.fold_left" (lib/sentenceLexer.mll[278,8256+2]..[278,8256+16])
            [
              <arg>
              Nolabel
                expression (lib/sentenceLexer.mll[278,8256+17]..[280,8322+3])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lib/sentenceLexer.mll[278,8256+22]..[278,8256+24])
                    Ppat_var "xs" (lib/sentenceLexer.mll[278,8256+22]..[278,8256+24])
                  expression (lib/sentenceLexer.mll[278,8256+25]..[279,8292+29]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lib/sentenceLexer.mll[278,8256+25]..[278,8256+32])
                      Ppat_var "monster" (lib/sentenceLexer.mll[278,8256+25]..[278,8256+32])
                    expression (lib/sentenceLexer.mll[279,8292+4]..[279,8292+29])
                      Pexp_apply
                      expression (lib/sentenceLexer.mll[279,8292+4]..[279,8292+14])
                        Pexp_ident "gather_oid" (lib/sentenceLexer.mll[279,8292+4]..[279,8292+14])
                      [
                        <arg>
                        Nolabel
                          expression (lib/sentenceLexer.mll[279,8292+15]..[279,8292+17])
                            Pexp_ident "xs" (lib/sentenceLexer.mll[279,8292+15]..[279,8292+17])
                        <arg>
                        Nolabel
                          expression (lib/sentenceLexer.mll[279,8292+18]..[279,8292+29])
                            Pexp_field
                            expression (lib/sentenceLexer.mll[279,8292+18]..[279,8292+25])
                              Pexp_ident "monster" (lib/sentenceLexer.mll[279,8292+18]..[279,8292+25])
                            "oid" (lib/sentenceLexer.mll[279,8292+26]..[279,8292+29])
                      ]
              <arg>
              Nolabel
                expression (lib/sentenceLexer.mll[280,8322+4]..[280,8322+19])
                  Pexp_ident "StringSet.empty" (lib/sentenceLexer.mll[280,8322+4]..[280,8322+19])
              <arg>
              Nolabel
                expression (lib/sentenceLexer.mll[280,8322+20]..[280,8322+28])
                  Pexp_ident "monsters" (lib/sentenceLexer.mll[280,8322+20]..[280,8322+28])
            ]
    ]
  structure_item (lib/sentenceLexer.mll[286,8458+0]..[320,10028+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[286,8458+4]..[286,8458+14])
          Ppat_var "mk_stretch" (lib/sentenceLexer.mll[286,8458+4]..[286,8458+14])
        expression (lib/sentenceLexer.mll[286,8458+15]..[320,10028+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/sentenceLexer.mll[286,8458+15]..[286,8458+19])
            Ppat_var "pos1" (lib/sentenceLexer.mll[286,8458+15]..[286,8458+19])
          expression (lib/sentenceLexer.mll[286,8458+20]..[320,10028+4]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/sentenceLexer.mll[286,8458+20]..[286,8458+24])
              Ppat_var "pos2" (lib/sentenceLexer.mll[286,8458+20]..[286,8458+24])
            expression (lib/sentenceLexer.mll[286,8458+25]..[320,10028+4]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/sentenceLexer.mll[286,8458+25]..[286,8458+37])
                Ppat_var "parenthesize" (lib/sentenceLexer.mll[286,8458+25]..[286,8458+37])
              expression (lib/sentenceLexer.mll[286,8458+38]..[320,10028+4]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lib/sentenceLexer.mll[286,8458+38]..[286,8458+46])
                  Ppat_var "monsters" (lib/sentenceLexer.mll[286,8458+38]..[286,8458+46])
                expression (lib/sentenceLexer.mll[288,8553+2]..[320,10028+4])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/sentenceLexer.mll[288,8553+6]..[288,8553+17])
                        Ppat_var "raw_content" (lib/sentenceLexer.mll[288,8553+6]..[288,8553+17])
                      core_type (lib/sentenceLexer.mll[288,8553+20]..[288,8553+26])
                        Ptyp_constr "string" (lib/sentenceLexer.mll[288,8553+20]..[288,8553+26])
                        []
                      expression (lib/sentenceLexer.mll[288,8553+29]..[288,8553+57])
                        Pexp_apply
                        expression (lib/sentenceLexer.mll[288,8553+29]..[288,8553+44])
                          Pexp_ident "InputFile.chunk" (lib/sentenceLexer.mll[288,8553+29]..[288,8553+44])
                        [
                          <arg>
                          Nolabel
                            expression (lib/sentenceLexer.mll[288,8553+45]..[288,8553+57])
                              Pexp_tuple
                              [
                                expression (lib/sentenceLexer.mll[288,8553+46]..[288,8553+50])
                                  Pexp_ident "pos1" (lib/sentenceLexer.mll[288,8553+46]..[288,8553+50])
                                expression (lib/sentenceLexer.mll[288,8553+52]..[288,8553+56])
                                  Pexp_ident "pos2" (lib/sentenceLexer.mll[288,8553+52]..[288,8553+56])
                              ]
                        ]
                  ]
                  expression (lib/sentenceLexer.mll[291,8752+2]..[320,10028+4])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/sentenceLexer.mll[291,8752+6]..[291,8752+13])
                          Ppat_var "content" (lib/sentenceLexer.mll[291,8752+6]..[291,8752+13])
                        core_type (lib/sentenceLexer.mll[291,8752+16]..[291,8752+22])
                          Ptyp_constr "string" (lib/sentenceLexer.mll[291,8752+16]..[291,8752+22])
                          []
                        expression (lib/sentenceLexer.mll[292,8777+4]..[298,8995+38])
                          Pexp_match
                          expression (lib/sentenceLexer.mll[292,8777+10]..[292,8777+18])
                            Pexp_ident "monsters" (lib/sentenceLexer.mll[292,8777+10]..[292,8777+18])
                          [
                            <case>
                              pattern (lib/sentenceLexer.mll[293,8801+6]..[293,8801+8])
                                Ppat_construct "[]" (lib/sentenceLexer.mll[293,8801+6]..[293,8801+8])
                                None
                              expression (lib/sentenceLexer.mll[294,8813+8]..[294,8813+19])
                                Pexp_ident "raw_content" (lib/sentenceLexer.mll[294,8813+8]..[294,8813+19])
                            <case>
                              pattern (lib/sentenceLexer.mll[295,8833+6]..[295,8833+12])
                                Ppat_construct "::" (lib/sentenceLexer.mll[295,8833+8]..[295,8833+10])
                                Some
                                  []
                                  pattern (lib/sentenceLexer.mll[295,8833+6]..[295,8833+12]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (lib/sentenceLexer.mll[295,8833+6]..[295,8833+7])
                                        Ppat_any
                                      pattern (lib/sentenceLexer.mll[295,8833+11]..[295,8833+12])
                                        Ppat_any
                                    ]
                              expression (lib/sentenceLexer.mll[296,8849+8]..[298,8995+38])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/sentenceLexer.mll[296,8849+12]..[296,8849+19])
                                      Ppat_var "content" (lib/sentenceLexer.mll[296,8849+12]..[296,8849+19])
                                    core_type (lib/sentenceLexer.mll[296,8849+22]..[296,8849+27])
                                      Ptyp_constr "bytes" (lib/sentenceLexer.mll[296,8849+22]..[296,8849+27])
                                      []
                                    expression (lib/sentenceLexer.mll[296,8849+30]..[296,8849+57])
                                      Pexp_apply
                                      expression (lib/sentenceLexer.mll[296,8849+30]..[296,8849+45])
                                        Pexp_ident "Bytes.of_string" (lib/sentenceLexer.mll[296,8849+30]..[296,8849+45])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/sentenceLexer.mll[296,8849+46]..[296,8849+57])
                                            Pexp_ident "raw_content" (lib/sentenceLexer.mll[296,8849+46]..[296,8849+57])
                                      ]
                                ]
                                expression (lib/sentenceLexer.mll[297,8910+8]..[298,8995+38])
                                  Pexp_sequence
                                  expression (lib/sentenceLexer.mll[297,8910+8]..[297,8910+83])
                                    Pexp_apply
                                    expression (lib/sentenceLexer.mll[297,8910+8]..[297,8910+17])
                                      Pexp_ident "List.iter" (lib/sentenceLexer.mll[297,8910+8]..[297,8910+17])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/sentenceLexer.mll[297,8910+18]..[297,8910+74])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (lib/sentenceLexer.mll[297,8910+23]..[297,8910+30])
                                            Ppat_var "monster" (lib/sentenceLexer.mll[297,8910+23]..[297,8910+30])
                                          expression (lib/sentenceLexer.mll[297,8910+34]..[297,8910+73])
                                            Pexp_apply
                                            expression (lib/sentenceLexer.mll[297,8910+34]..[297,8910+51])
                                              Pexp_field
                                              expression (lib/sentenceLexer.mll[297,8910+34]..[297,8910+41])
                                                Pexp_ident "monster" (lib/sentenceLexer.mll[297,8910+34]..[297,8910+41])
                                              "transform" (lib/sentenceLexer.mll[297,8910+42]..[297,8910+51])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/sentenceLexer.mll[297,8910+52]..[297,8910+65])
                                                  Pexp_field
                                                  expression (lib/sentenceLexer.mll[297,8910+52]..[297,8910+56])
                                                    Pexp_ident "pos1" (lib/sentenceLexer.mll[297,8910+52]..[297,8910+56])
                                                  "pos_cnum" (lib/sentenceLexer.mll[297,8910+57]..[297,8910+65])
                                              <arg>
                                              Nolabel
                                                expression (lib/sentenceLexer.mll[297,8910+66]..[297,8910+73])
                                                  Pexp_ident "content" (lib/sentenceLexer.mll[297,8910+66]..[297,8910+73])
                                            ]
                                      <arg>
                                      Nolabel
                                        expression (lib/sentenceLexer.mll[297,8910+75]..[297,8910+83])
                                          Pexp_ident "monsters" (lib/sentenceLexer.mll[297,8910+75]..[297,8910+83])
                                    ]
                                  expression (lib/sentenceLexer.mll[298,8995+8]..[298,8995+38])
                                    Pexp_apply
                                    expression (lib/sentenceLexer.mll[298,8995+8]..[298,8995+30])
                                      Pexp_ident "Bytes.unsafe_to_string" (lib/sentenceLexer.mll[298,8995+8]..[298,8995+30])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/sentenceLexer.mll[298,8995+31]..[298,8995+38])
                                          Pexp_ident "content" (lib/sentenceLexer.mll[298,8995+31]..[298,8995+38])
                                    ]
                          ]
                    ]
                    expression (lib/sentenceLexer.mll[303,9240+2]..[320,10028+4])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/sentenceLexer.mll[303,9240+6]..[303,9240+13])
                            Ppat_var "content" (lib/sentenceLexer.mll[303,9240+6]..[303,9240+13])
                          expression (lib/sentenceLexer.mll[304,9256+4]..[311,9646+64])
                            Pexp_ifthenelse
                            expression (lib/sentenceLexer.mll[304,9256+7]..[304,9256+19])
                              Pexp_ident "parenthesize" (lib/sentenceLexer.mll[304,9256+7]..[304,9256+19])
                            expression (lib/sentenceLexer.mll[309,9556+6]..[309,9556+80])
                              Pexp_apply
                              expression (lib/sentenceLexer.mll[309,9556+59]..[309,9556+60])
                                Pexp_ident "^" (lib/sentenceLexer.mll[309,9556+59]..[309,9556+60])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[309,9556+6]..[309,9556+58])
                                    Pexp_apply
                                    expression (lib/sentenceLexer.mll[309,9556+7]..[309,9556+18])
                                      Pexp_ident "String.make" (lib/sentenceLexer.mll[309,9556+7]..[309,9556+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/sentenceLexer.mll[309,9556+19]..[309,9556+53])
                                          Pexp_apply
                                          expression (lib/sentenceLexer.mll[309,9556+49]..[309,9556+50])
                                            Pexp_ident "-" (lib/sentenceLexer.mll[309,9556+49]..[309,9556+50])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/sentenceLexer.mll[309,9556+20]..[309,9556+48])
                                                Pexp_apply
                                                expression (lib/sentenceLexer.mll[309,9556+34]..[309,9556+35])
                                                  Pexp_ident "-" (lib/sentenceLexer.mll[309,9556+34]..[309,9556+35])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/sentenceLexer.mll[309,9556+20]..[309,9556+33])
                                                      Pexp_field
                                                      expression (lib/sentenceLexer.mll[309,9556+20]..[309,9556+24])
                                                        Pexp_ident "pos1" (lib/sentenceLexer.mll[309,9556+20]..[309,9556+24])
                                                      "pos_cnum" (lib/sentenceLexer.mll[309,9556+25]..[309,9556+33])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/sentenceLexer.mll[309,9556+36]..[309,9556+48])
                                                      Pexp_field
                                                      expression (lib/sentenceLexer.mll[309,9556+36]..[309,9556+40])
                                                        Pexp_ident "pos1" (lib/sentenceLexer.mll[309,9556+36]..[309,9556+40])
                                                      "pos_bol" (lib/sentenceLexer.mll[309,9556+41]..[309,9556+48])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lib/sentenceLexer.mll[309,9556+51]..[309,9556+52])
                                                Pexp_constant PConst_int (1,None)
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lib/sentenceLexer.mll[309,9556+54]..[309,9556+57])
                                          Pexp_constant PConst_char 20
                                    ]
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[309,9556+61]..[309,9556+80])
                                    Pexp_apply
                                    expression (lib/sentenceLexer.mll[309,9556+65]..[309,9556+66])
                                      Pexp_ident "^" (lib/sentenceLexer.mll[309,9556+65]..[309,9556+66])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/sentenceLexer.mll[309,9556+61]..[309,9556+64])
                                          Pexp_constant PConst_string("(",(lib/sentenceLexer.mll[309,9556+62]..[309,9556+63]),None)
                                      <arg>
                                      Nolabel
                                        expression (lib/sentenceLexer.mll[309,9556+67]..[309,9556+80])
                                          Pexp_apply
                                          expression (lib/sentenceLexer.mll[309,9556+75]..[309,9556+76])
                                            Pexp_ident "^" (lib/sentenceLexer.mll[309,9556+75]..[309,9556+76])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/sentenceLexer.mll[309,9556+67]..[309,9556+74])
                                                Pexp_ident "content" (lib/sentenceLexer.mll[309,9556+67]..[309,9556+74])
                                            <arg>
                                            Nolabel
                                              expression (lib/sentenceLexer.mll[309,9556+77]..[309,9556+80])
                                                Pexp_constant PConst_string(")",(lib/sentenceLexer.mll[309,9556+78]..[309,9556+79]),None)
                                          ]
                                    ]
                              ]
                            Some
                              expression (lib/sentenceLexer.mll[311,9646+6]..[311,9646+64])
                                Pexp_apply
                                expression (lib/sentenceLexer.mll[311,9646+55]..[311,9646+56])
                                  Pexp_ident "^" (lib/sentenceLexer.mll[311,9646+55]..[311,9646+56])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/sentenceLexer.mll[311,9646+6]..[311,9646+54])
                                      Pexp_apply
                                      expression (lib/sentenceLexer.mll[311,9646+7]..[311,9646+18])
                                        Pexp_ident "String.make" (lib/sentenceLexer.mll[311,9646+7]..[311,9646+18])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/sentenceLexer.mll[311,9646+19]..[311,9646+49])
                                            Pexp_apply
                                            expression (lib/sentenceLexer.mll[311,9646+34]..[311,9646+35])
                                              Pexp_ident "-" (lib/sentenceLexer.mll[311,9646+34]..[311,9646+35])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/sentenceLexer.mll[311,9646+20]..[311,9646+33])
                                                  Pexp_field
                                                  expression (lib/sentenceLexer.mll[311,9646+20]..[311,9646+24])
                                                    Pexp_ident "pos1" (lib/sentenceLexer.mll[311,9646+20]..[311,9646+24])
                                                  "pos_cnum" (lib/sentenceLexer.mll[311,9646+25]..[311,9646+33])
                                              <arg>
                                              Nolabel
                                                expression (lib/sentenceLexer.mll[311,9646+36]..[311,9646+48])
                                                  Pexp_field
                                                  expression (lib/sentenceLexer.mll[311,9646+36]..[311,9646+40])
                                                    Pexp_ident "pos1" (lib/sentenceLexer.mll[311,9646+36]..[311,9646+40])
                                                  "pos_bol" (lib/sentenceLexer.mll[311,9646+41]..[311,9646+48])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/sentenceLexer.mll[311,9646+50]..[311,9646+53])
                                            Pexp_constant PConst_char 20
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lib/sentenceLexer.mll[311,9646+57]..[311,9646+64])
                                      Pexp_ident "content" (lib/sentenceLexer.mll[311,9646+57]..[311,9646+64])
                                ]
                      ]
                      expression (lib/sentenceLexer.mll[313,9716+2]..[320,10028+4])
                        Pexp_open Fresh
                        module_expr (lib/sentenceLexer.mll[313,9716+2]..[313,9716+9])
                          Pmod_ident "Stretch" (lib/sentenceLexer.mll[313,9716+2]..[313,9716+9])
                        expression (lib/sentenceLexer.mll[313,9716+11]..[320,10028+3])
                          Pexp_record
                          [
                            "stretch_filename" (lib/sentenceLexer.mll[314,9729+4]..[314,9729+20])
                              expression (lib/sentenceLexer.mll[314,9729+23]..[314,9729+54])
                                Pexp_apply
                                expression (lib/sentenceLexer.mll[314,9729+23]..[314,9729+52])
                                  Pexp_ident "InputFile.get_input_file_name" (lib/sentenceLexer.mll[314,9729+23]..[314,9729+52])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/sentenceLexer.mll[314,9729+52]..[314,9729+54])
                                      Pexp_construct "()" (lib/sentenceLexer.mll[314,9729+52]..[314,9729+54])
                                      None
                                ]
                            "stretch_linenum" (lib/sentenceLexer.mll[315,9785+4]..[315,9785+19])
                              expression (lib/sentenceLexer.mll[315,9785+22]..[315,9785+35])
                                Pexp_field
                                expression (lib/sentenceLexer.mll[315,9785+22]..[315,9785+26])
                                  Pexp_ident "pos1" (lib/sentenceLexer.mll[315,9785+22]..[315,9785+26])
                                "pos_lnum" (lib/sentenceLexer.mll[315,9785+27]..[315,9785+35])
                            "stretch_linecount" (lib/sentenceLexer.mll[316,9822+4]..[316,9822+21])
                              expression (lib/sentenceLexer.mll[316,9822+24]..[316,9822+53])
                                Pexp_apply
                                expression (lib/sentenceLexer.mll[316,9822+38]..[316,9822+39])
                                  Pexp_ident "-" (lib/sentenceLexer.mll[316,9822+38]..[316,9822+39])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/sentenceLexer.mll[316,9822+24]..[316,9822+37])
                                      Pexp_field
                                      expression (lib/sentenceLexer.mll[316,9822+24]..[316,9822+28])
                                        Pexp_ident "pos2" (lib/sentenceLexer.mll[316,9822+24]..[316,9822+28])
                                      "pos_lnum" (lib/sentenceLexer.mll[316,9822+29]..[316,9822+37])
                                  <arg>
                                  Nolabel
                                    expression (lib/sentenceLexer.mll[316,9822+40]..[316,9822+53])
                                      Pexp_field
                                      expression (lib/sentenceLexer.mll[316,9822+40]..[316,9822+44])
                                        Pexp_ident "pos1" (lib/sentenceLexer.mll[316,9822+40]..[316,9822+44])
                                      "pos_lnum" (lib/sentenceLexer.mll[316,9822+45]..[316,9822+53])
                                ]
                            "stretch_content" (lib/sentenceLexer.mll[317,9877+4]..[317,9877+19])
                              expression (lib/sentenceLexer.mll[317,9877+22]..[317,9877+29])
                                Pexp_ident "content" (lib/sentenceLexer.mll[317,9877+22]..[317,9877+29])
                            "stretch_raw_content" (lib/sentenceLexer.mll[318,9908+4]..[318,9908+23])
                              expression (lib/sentenceLexer.mll[318,9908+26]..[318,9908+37])
                                Pexp_ident "raw_content" (lib/sentenceLexer.mll[318,9908+26]..[318,9908+37])
                            "stretch_keywords" (lib/sentenceLexer.mll[319,9947+4]..[319,9947+20])
                              expression (lib/sentenceLexer.mll[319,9947+23]..[319,9947+80])
                                Pexp_apply
                                expression (lib/sentenceLexer.mll[319,9947+23]..[319,9947+38])
                                  Pexp_ident "Misc.filter_map" (lib/sentenceLexer.mll[319,9947+23]..[319,9947+38])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/sentenceLexer.mll[319,9947+39]..[319,9947+71])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lib/sentenceLexer.mll[319,9947+44]..[319,9947+51])
                                        Ppat_var "monster" (lib/sentenceLexer.mll[319,9947+44]..[319,9947+51])
                                      expression (lib/sentenceLexer.mll[319,9947+55]..[319,9947+70])
                                        Pexp_field
                                        expression (lib/sentenceLexer.mll[319,9947+55]..[319,9947+62])
                                          Pexp_ident "monster" (lib/sentenceLexer.mll[319,9947+55]..[319,9947+62])
                                        "keyword" (lib/sentenceLexer.mll[319,9947+63]..[319,9947+70])
                                  <arg>
                                  Nolabel
                                    expression (lib/sentenceLexer.mll[319,9947+72]..[319,9947+80])
                                      Pexp_ident "monsters" (lib/sentenceLexer.mll[319,9947+72]..[319,9947+80])
                                ]
                          ]
                          None
    ]
  structure_item (lib/sentenceLexer.mll[326,10219+0]..[341,10831+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[326,10219+4]..[326,10219+17])
          Ppat_var "stretch_of_id" (lib/sentenceLexer.mll[326,10219+4]..[326,10219+17])
        expression (lib/sentenceLexer.mll[326,10219+18]..[341,10831+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/sentenceLexer.mll[326,10219+18]..[326,10219+39])
            Ppat_constraint
            pattern (lib/sentenceLexer.mll[326,10219+19]..[326,10219+21])
              Ppat_var "id" (lib/sentenceLexer.mll[326,10219+19]..[326,10219+21])
            core_type (lib/sentenceLexer.mll[326,10219+24]..[326,10219+38])
              Ptyp_constr "located" (lib/sentenceLexer.mll[326,10219+31]..[326,10219+38])
              [
                core_type (lib/sentenceLexer.mll[326,10219+24]..[326,10219+30])
                  Ptyp_constr "string" (lib/sentenceLexer.mll[326,10219+24]..[326,10219+30])
                  []
              ]
          expression (lib/sentenceLexer.mll[327,10261+2]..[341,10831+4])
            Pexp_let Nonrec
            [
              <def>
                pattern (lib/sentenceLexer.mll[327,10261+6]..[327,10261+22])
                  Ppat_tuple
                  [
                    pattern (lib/sentenceLexer.mll[327,10261+6]..[327,10261+17])
                      Ppat_var "raw_content" (lib/sentenceLexer.mll[327,10261+6]..[327,10261+17])
                    pattern (lib/sentenceLexer.mll[327,10261+19]..[327,10261+22])
                      Ppat_var "pos" (lib/sentenceLexer.mll[327,10261+19]..[327,10261+22])
                  ]
                expression (lib/sentenceLexer.mll[327,10261+25]..[327,10261+47])
                  Pexp_apply
                  expression (lib/sentenceLexer.mll[327,10261+25]..[327,10261+44])
                    Pexp_ident "Positions.decompose" (lib/sentenceLexer.mll[327,10261+25]..[327,10261+44])
                  [
                    <arg>
                    Nolabel
                      expression (lib/sentenceLexer.mll[327,10261+45]..[327,10261+47])
                        Pexp_ident "id" (lib/sentenceLexer.mll[327,10261+45]..[327,10261+47])
                  ]
            ]
            expression (lib/sentenceLexer.mll[328,10312+2]..[341,10831+4])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/sentenceLexer.mll[328,10312+6]..[328,10312+10])
                    Ppat_var "pos1" (lib/sentenceLexer.mll[328,10312+6]..[328,10312+10])
                  expression (lib/sentenceLexer.mll[328,10312+13]..[328,10312+44])
                    Pexp_apply
                    expression (lib/sentenceLexer.mll[328,10312+13]..[328,10312+40])
                      Pexp_ident "Positions.start_of_position" (lib/sentenceLexer.mll[328,10312+13]..[328,10312+40])
                    [
                      <arg>
                      Nolabel
                        expression (lib/sentenceLexer.mll[328,10312+41]..[328,10312+44])
                          Pexp_ident "pos" (lib/sentenceLexer.mll[328,10312+41]..[328,10312+44])
                    ]
                <def>
                  pattern (lib/sentenceLexer.mll[329,10357+6]..[329,10357+10])
                    Ppat_var "pos2" (lib/sentenceLexer.mll[329,10357+6]..[329,10357+10])
                  expression (lib/sentenceLexer.mll[329,10357+13]..[329,10357+42])
                    Pexp_apply
                    expression (lib/sentenceLexer.mll[329,10357+13]..[329,10357+38])
                      Pexp_ident "Positions.end_of_position" (lib/sentenceLexer.mll[329,10357+13]..[329,10357+38])
                    [
                      <arg>
                      Nolabel
                        expression (lib/sentenceLexer.mll[329,10357+39]..[329,10357+42])
                          Pexp_ident "pos" (lib/sentenceLexer.mll[329,10357+39]..[329,10357+42])
                    ]
                <def>
                  pattern (lib/sentenceLexer.mll[330,10400+6]..[330,10400+14])
                    Ppat_var "filename" (lib/sentenceLexer.mll[330,10400+6]..[330,10400+14])
                  expression (lib/sentenceLexer.mll[330,10400+17]..[330,10400+51])
                    Pexp_apply
                    expression (lib/sentenceLexer.mll[330,10400+17]..[330,10400+47])
                      Pexp_ident "Positions.filename_of_position" (lib/sentenceLexer.mll[330,10400+17]..[330,10400+47])
                    [
                      <arg>
                      Nolabel
                        expression (lib/sentenceLexer.mll[330,10400+48]..[330,10400+51])
                          Pexp_ident "pos" (lib/sentenceLexer.mll[330,10400+48]..[330,10400+51])
                    ]
              ]
              expression (lib/sentenceLexer.mll[331,10455+2]..[341,10831+4])
                Pexp_sequence
                expression (lib/sentenceLexer.mll[331,10455+2]..[331,10455+35])
                  Pexp_assert
                  expression (lib/sentenceLexer.mll[331,10455+9]..[331,10455+35])
                    Pexp_apply
                    expression (lib/sentenceLexer.mll[331,10455+15]..[331,10455+17])
                      Pexp_ident "!=" (lib/sentenceLexer.mll[331,10455+15]..[331,10455+17])
                    [
                      <arg>
                      Nolabel
                        expression (lib/sentenceLexer.mll[331,10455+10]..[331,10455+14])
                          Pexp_ident "pos1" (lib/sentenceLexer.mll[331,10455+10]..[331,10455+14])
                      <arg>
                      Nolabel
                        expression (lib/sentenceLexer.mll[331,10455+18]..[331,10455+34])
                          Pexp_ident "Lexing.dummy_pos" (lib/sentenceLexer.mll[331,10455+18]..[331,10455+34])
                    ]
                expression (lib/sentenceLexer.mll[332,10492+2]..[341,10831+4])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/sentenceLexer.mll[332,10492+6]..[332,10492+13])
                        Ppat_var "padding" (lib/sentenceLexer.mll[332,10492+6]..[332,10492+13])
                      expression (lib/sentenceLexer.mll[332,10492+16]..[332,10492+44])
                        Pexp_apply
                        expression (lib/sentenceLexer.mll[332,10492+30]..[332,10492+31])
                          Pexp_ident "-" (lib/sentenceLexer.mll[332,10492+30]..[332,10492+31])
                        [
                          <arg>
                          Nolabel
                            expression (lib/sentenceLexer.mll[332,10492+16]..[332,10492+29])
                              Pexp_field
                              expression (lib/sentenceLexer.mll[332,10492+16]..[332,10492+20])
                                Pexp_ident "pos1" (lib/sentenceLexer.mll[332,10492+16]..[332,10492+20])
                              "pos_cnum" (lib/sentenceLexer.mll[332,10492+21]..[332,10492+29])
                          <arg>
                          Nolabel
                            expression (lib/sentenceLexer.mll[332,10492+32]..[332,10492+44])
                              Pexp_field
                              expression (lib/sentenceLexer.mll[332,10492+32]..[332,10492+36])
                                Pexp_ident "pos1" (lib/sentenceLexer.mll[332,10492+32]..[332,10492+36])
                              "pos_bol" (lib/sentenceLexer.mll[332,10492+37]..[332,10492+44])
                        ]
                  ]
                  expression (lib/sentenceLexer.mll[333,10540+2]..[341,10831+4])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/sentenceLexer.mll[333,10540+6]..[333,10540+13])
                          Ppat_var "content" (lib/sentenceLexer.mll[333,10540+6]..[333,10540+13])
                        expression (lib/sentenceLexer.mll[333,10540+16]..[333,10540+53])
                          Pexp_apply
                          expression (lib/sentenceLexer.mll[333,10540+40]..[333,10540+41])
                            Pexp_ident "^" (lib/sentenceLexer.mll[333,10540+40]..[333,10540+41])
                          [
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.mll[333,10540+16]..[333,10540+39])
                                Pexp_apply
                                expression (lib/sentenceLexer.mll[333,10540+16]..[333,10540+27])
                                  Pexp_ident "String.make" (lib/sentenceLexer.mll[333,10540+16]..[333,10540+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/sentenceLexer.mll[333,10540+28]..[333,10540+35])
                                      Pexp_ident "padding" (lib/sentenceLexer.mll[333,10540+28]..[333,10540+35])
                                  <arg>
                                  Nolabel
                                    expression (lib/sentenceLexer.mll[333,10540+36]..[333,10540+39])
                                      Pexp_constant PConst_char 20
                                ]
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.mll[333,10540+42]..[333,10540+53])
                                Pexp_ident "raw_content" (lib/sentenceLexer.mll[333,10540+42]..[333,10540+53])
                          ]
                    ]
                    expression (lib/sentenceLexer.mll[334,10597+2]..[341,10831+4])
                      Pexp_open Fresh
                      module_expr (lib/sentenceLexer.mll[334,10597+2]..[334,10597+9])
                        Pmod_ident "Stretch" (lib/sentenceLexer.mll[334,10597+2]..[334,10597+9])
                      expression (lib/sentenceLexer.mll[334,10597+11]..[341,10831+3])
                        Pexp_record
                        [
                          "stretch_filename" (lib/sentenceLexer.mll[335,10610+4]..[335,10610+20])
                            expression (lib/sentenceLexer.mll[335,10610+23]..[335,10610+31])
                              Pexp_ident "filename" (lib/sentenceLexer.mll[335,10610+23]..[335,10610+31])
                          "stretch_linenum" (lib/sentenceLexer.mll[336,10643+4]..[336,10643+19])
                            expression (lib/sentenceLexer.mll[336,10643+22]..[336,10643+35])
                              Pexp_field
                              expression (lib/sentenceLexer.mll[336,10643+22]..[336,10643+26])
                                Pexp_ident "pos1" (lib/sentenceLexer.mll[336,10643+22]..[336,10643+26])
                              "pos_lnum" (lib/sentenceLexer.mll[336,10643+27]..[336,10643+35])
                          "stretch_linecount" (lib/sentenceLexer.mll[337,10680+4]..[337,10680+21])
                            expression (lib/sentenceLexer.mll[337,10680+24]..[337,10680+53])
                              Pexp_apply
                              expression (lib/sentenceLexer.mll[337,10680+38]..[337,10680+39])
                                Pexp_ident "-" (lib/sentenceLexer.mll[337,10680+38]..[337,10680+39])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[337,10680+24]..[337,10680+37])
                                    Pexp_field
                                    expression (lib/sentenceLexer.mll[337,10680+24]..[337,10680+28])
                                      Pexp_ident "pos2" (lib/sentenceLexer.mll[337,10680+24]..[337,10680+28])
                                    "pos_lnum" (lib/sentenceLexer.mll[337,10680+29]..[337,10680+37])
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[337,10680+40]..[337,10680+53])
                                    Pexp_field
                                    expression (lib/sentenceLexer.mll[337,10680+40]..[337,10680+44])
                                      Pexp_ident "pos1" (lib/sentenceLexer.mll[337,10680+40]..[337,10680+44])
                                    "pos_lnum" (lib/sentenceLexer.mll[337,10680+45]..[337,10680+53])
                              ]
                          "stretch_content" (lib/sentenceLexer.mll[338,10735+4]..[338,10735+19])
                            expression (lib/sentenceLexer.mll[338,10735+22]..[338,10735+29])
                              Pexp_ident "content" (lib/sentenceLexer.mll[338,10735+22]..[338,10735+29])
                          "stretch_raw_content" (lib/sentenceLexer.mll[339,10766+4]..[339,10766+23])
                            expression (lib/sentenceLexer.mll[339,10766+26]..[339,10766+37])
                              Pexp_ident "raw_content" (lib/sentenceLexer.mll[339,10766+26]..[339,10766+37])
                          "stretch_keywords" (lib/sentenceLexer.mll[340,10805+4]..[340,10805+20])
                            expression (lib/sentenceLexer.mll[340,10805+23]..[340,10805+25])
                              Pexp_construct "[]" (lib/sentenceLexer.mll[340,10805+23]..[340,10805+25])
                              None
                        ]
                        None
    ]
  structure_item (lib/sentenceLexer.mll[347,10948+0]..[350,11061+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[347,10948+4]..[347,10948+9])
          Ppat_var "table" (lib/sentenceLexer.mll[347,10948+4]..[347,10948+9])
        expression (lib/sentenceLexer.mll[347,10948+10]..[350,11061+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/sentenceLexer.mll[347,10948+10]..[347,10948+15])
            Ppat_var "words" (lib/sentenceLexer.mll[347,10948+10]..[347,10948+15])
          expression (lib/sentenceLexer.mll[348,10966+2]..[350,11061+7])
            Pexp_let Nonrec
            [
              <def>
                pattern (lib/sentenceLexer.mll[348,10966+6]..[348,10966+11])
                  Ppat_var "table" (lib/sentenceLexer.mll[348,10966+6]..[348,10966+11])
                expression (lib/sentenceLexer.mll[348,10966+14]..[348,10966+32])
                  Pexp_apply
                  expression (lib/sentenceLexer.mll[348,10966+14]..[348,10966+28])
                    Pexp_ident "Hashtbl.create" (lib/sentenceLexer.mll[348,10966+14]..[348,10966+28])
                  [
                    <arg>
                    Nolabel
                      expression (lib/sentenceLexer.mll[348,10966+29]..[348,10966+32])
                        Pexp_constant PConst_int (149,None)
                  ]
            ]
            expression (lib/sentenceLexer.mll[349,11002+2]..[350,11061+7])
              Pexp_sequence
              expression (lib/sentenceLexer.mll[349,11002+2]..[349,11002+57])
                Pexp_apply
                expression (lib/sentenceLexer.mll[349,11002+2]..[349,11002+11])
                  Pexp_ident "List.iter" (lib/sentenceLexer.mll[349,11002+2]..[349,11002+11])
                [
                  <arg>
                  Nolabel
                    expression (lib/sentenceLexer.mll[349,11002+12]..[349,11002+51])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lib/sentenceLexer.mll[349,11002+17]..[349,11002+21])
                        Ppat_var "word" (lib/sentenceLexer.mll[349,11002+17]..[349,11002+21])
                      expression (lib/sentenceLexer.mll[349,11002+25]..[349,11002+50])
                        Pexp_apply
                        expression (lib/sentenceLexer.mll[349,11002+25]..[349,11002+36])
                          Pexp_ident "Hashtbl.add" (lib/sentenceLexer.mll[349,11002+25]..[349,11002+36])
                        [
                          <arg>
                          Nolabel
                            expression (lib/sentenceLexer.mll[349,11002+37]..[349,11002+42])
                              Pexp_ident "table" (lib/sentenceLexer.mll[349,11002+37]..[349,11002+42])
                          <arg>
                          Nolabel
                            expression (lib/sentenceLexer.mll[349,11002+43]..[349,11002+47])
                              Pexp_ident "word" (lib/sentenceLexer.mll[349,11002+43]..[349,11002+47])
                          <arg>
                          Nolabel
                            expression (lib/sentenceLexer.mll[349,11002+48]..[349,11002+50])
                              Pexp_construct "()" (lib/sentenceLexer.mll[349,11002+48]..[349,11002+50])
                              None
                        ]
                  <arg>
                  Nolabel
                    expression (lib/sentenceLexer.mll[349,11002+52]..[349,11002+57])
                      Pexp_ident "words" (lib/sentenceLexer.mll[349,11002+52]..[349,11002+57])
                ]
              expression (lib/sentenceLexer.mll[350,11061+2]..[350,11061+7])
                Pexp_ident "table" (lib/sentenceLexer.mll[350,11061+2]..[350,11061+7])
    ]
  structure_item (lib/sentenceLexer.mll[352,11070+0]..[410,11801+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[352,11070+4]..[352,11070+12])
          Ppat_var "reserved" (lib/sentenceLexer.mll[352,11070+4]..[352,11070+12])
        expression (lib/sentenceLexer.mll[353,11085+2]..[410,11801+3])
          Pexp_apply
          expression (lib/sentenceLexer.mll[353,11085+2]..[353,11085+7])
            Pexp_ident "table" (lib/sentenceLexer.mll[353,11085+2]..[353,11085+7])
          [
            <arg>
            Nolabel
              expression (lib/sentenceLexer.mll[353,11085+8]..[410,11801+3])
                Pexp_construct "::" (lib/sentenceLexer.mll[354,11095+4]..[410,11801+3]) ghost
                Some
                  expression (lib/sentenceLexer.mll[354,11095+4]..[410,11801+3]) ghost
                    Pexp_tuple
                    [
                      expression (lib/sentenceLexer.mll[354,11095+4]..[354,11095+9])
                        Pexp_constant PConst_string("and",(lib/sentenceLexer.mll[354,11095+5]..[354,11095+8]),None)
                      expression (lib/sentenceLexer.mll[355,11106+4]..[410,11801+3]) ghost
                        Pexp_construct "::" (lib/sentenceLexer.mll[355,11106+4]..[410,11801+3]) ghost
                        Some
                          expression (lib/sentenceLexer.mll[355,11106+4]..[410,11801+3]) ghost
                            Pexp_tuple
                            [
                              expression (lib/sentenceLexer.mll[355,11106+4]..[355,11106+8])
                                Pexp_constant PConst_string("as",(lib/sentenceLexer.mll[355,11106+5]..[355,11106+7]),None)
                              expression (lib/sentenceLexer.mll[356,11116+4]..[410,11801+3]) ghost
                                Pexp_construct "::" (lib/sentenceLexer.mll[356,11116+4]..[410,11801+3]) ghost
                                Some
                                  expression (lib/sentenceLexer.mll[356,11116+4]..[410,11801+3]) ghost
                                    Pexp_tuple
                                    [
                                      expression (lib/sentenceLexer.mll[356,11116+4]..[356,11116+12])
                                        Pexp_constant PConst_string("assert",(lib/sentenceLexer.mll[356,11116+5]..[356,11116+11]),None)
                                      expression (lib/sentenceLexer.mll[357,11130+4]..[410,11801+3]) ghost
                                        Pexp_construct "::" (lib/sentenceLexer.mll[357,11130+4]..[410,11801+3]) ghost
                                        Some
                                          expression (lib/sentenceLexer.mll[357,11130+4]..[410,11801+3]) ghost
                                            Pexp_tuple
                                            [
                                              expression (lib/sentenceLexer.mll[357,11130+4]..[357,11130+11])
                                                Pexp_constant PConst_string("begin",(lib/sentenceLexer.mll[357,11130+5]..[357,11130+10]),None)
                                              expression (lib/sentenceLexer.mll[358,11143+4]..[410,11801+3]) ghost
                                                Pexp_construct "::" (lib/sentenceLexer.mll[358,11143+4]..[410,11801+3]) ghost
                                                Some
                                                  expression (lib/sentenceLexer.mll[358,11143+4]..[410,11801+3]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (lib/sentenceLexer.mll[358,11143+4]..[358,11143+11])
                                                        Pexp_constant PConst_string("class",(lib/sentenceLexer.mll[358,11143+5]..[358,11143+10]),None)
                                                      expression (lib/sentenceLexer.mll[359,11156+4]..[410,11801+3]) ghost
                                                        Pexp_construct "::" (lib/sentenceLexer.mll[359,11156+4]..[410,11801+3]) ghost
                                                        Some
                                                          expression (lib/sentenceLexer.mll[359,11156+4]..[410,11801+3]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (lib/sentenceLexer.mll[359,11156+4]..[359,11156+16])
                                                                Pexp_constant PConst_string("constraint",(lib/sentenceLexer.mll[359,11156+5]..[359,11156+15]),None)
                                                              expression (lib/sentenceLexer.mll[360,11174+4]..[410,11801+3]) ghost
                                                                Pexp_construct "::" (lib/sentenceLexer.mll[360,11174+4]..[410,11801+3]) ghost
                                                                Some
                                                                  expression (lib/sentenceLexer.mll[360,11174+4]..[410,11801+3]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lib/sentenceLexer.mll[360,11174+4]..[360,11174+8])
Pexp_constant PConst_string("do",(lib/sentenceLexer.mll[360,11174+5]..[360,11174+7]),None)
                                                                      expression (lib/sentenceLexer.mll[361,11184+4]..[410,11801+3]) ghost
Pexp_construct "::" (lib/sentenceLexer.mll[361,11184+4]..[410,11801+3]) ghost
Some
  expression (lib/sentenceLexer.mll[361,11184+4]..[410,11801+3]) ghost
    Pexp_tuple
    [
      expression (lib/sentenceLexer.mll[361,11184+4]..[361,11184+10])
        Pexp_constant PConst_string("done",(lib/sentenceLexer.mll[361,11184+5]..[361,11184+9]),None)
      expression (lib/sentenceLexer.mll[362,11196+4]..[410,11801+3]) ghost
        Pexp_construct "::" (lib/sentenceLexer.mll[362,11196+4]..[410,11801+3]) ghost
        Some
          expression (lib/sentenceLexer.mll[362,11196+4]..[410,11801+3]) ghost
            Pexp_tuple
            [
              expression (lib/sentenceLexer.mll[362,11196+4]..[362,11196+12])
                Pexp_constant PConst_string("downto",(lib/sentenceLexer.mll[362,11196+5]..[362,11196+11]),None)
              expression (lib/sentenceLexer.mll[363,11210+4]..[410,11801+3]) ghost
                Pexp_construct "::" (lib/sentenceLexer.mll[363,11210+4]..[410,11801+3]) ghost
                Some
                  expression (lib/sentenceLexer.mll[363,11210+4]..[410,11801+3]) ghost
                    Pexp_tuple
                    [
                      expression (lib/sentenceLexer.mll[363,11210+4]..[363,11210+10])
                        Pexp_constant PConst_string("else",(lib/sentenceLexer.mll[363,11210+5]..[363,11210+9]),None)
                      expression (lib/sentenceLexer.mll[364,11222+4]..[410,11801+3]) ghost
                        Pexp_construct "::" (lib/sentenceLexer.mll[364,11222+4]..[410,11801+3]) ghost
                        Some
                          expression (lib/sentenceLexer.mll[364,11222+4]..[410,11801+3]) ghost
                            Pexp_tuple
                            [
                              expression (lib/sentenceLexer.mll[364,11222+4]..[364,11222+9])
                                Pexp_constant PConst_string("end",(lib/sentenceLexer.mll[364,11222+5]..[364,11222+8]),None)
                              expression (lib/sentenceLexer.mll[365,11233+4]..[410,11801+3]) ghost
                                Pexp_construct "::" (lib/sentenceLexer.mll[365,11233+4]..[410,11801+3]) ghost
                                Some
                                  expression (lib/sentenceLexer.mll[365,11233+4]..[410,11801+3]) ghost
                                    Pexp_tuple
                                    [
                                      expression (lib/sentenceLexer.mll[365,11233+4]..[365,11233+15])
                                        Pexp_constant PConst_string("exception",(lib/sentenceLexer.mll[365,11233+5]..[365,11233+14]),None)
                                      expression (lib/sentenceLexer.mll[366,11250+4]..[410,11801+3]) ghost
                                        Pexp_construct "::" (lib/sentenceLexer.mll[366,11250+4]..[410,11801+3]) ghost
                                        Some
                                          expression (lib/sentenceLexer.mll[366,11250+4]..[410,11801+3]) ghost
                                            Pexp_tuple
                                            [
                                              expression (lib/sentenceLexer.mll[366,11250+4]..[366,11250+14])
                                                Pexp_constant PConst_string("external",(lib/sentenceLexer.mll[366,11250+5]..[366,11250+13]),None)
                                              expression (lib/sentenceLexer.mll[367,11266+4]..[410,11801+3]) ghost
                                                Pexp_construct "::" (lib/sentenceLexer.mll[367,11266+4]..[410,11801+3]) ghost
                                                Some
                                                  expression (lib/sentenceLexer.mll[367,11266+4]..[410,11801+3]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (lib/sentenceLexer.mll[367,11266+4]..[367,11266+11])
                                                        Pexp_constant PConst_string("false",(lib/sentenceLexer.mll[367,11266+5]..[367,11266+10]),None)
                                                      expression (lib/sentenceLexer.mll[368,11279+4]..[410,11801+3]) ghost
                                                        Pexp_construct "::" (lib/sentenceLexer.mll[368,11279+4]..[410,11801+3]) ghost
                                                        Some
                                                          expression (lib/sentenceLexer.mll[368,11279+4]..[410,11801+3]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (lib/sentenceLexer.mll[368,11279+4]..[368,11279+9])
                                                                Pexp_constant PConst_string("for",(lib/sentenceLexer.mll[368,11279+5]..[368,11279+8]),None)
                                                              expression (lib/sentenceLexer.mll[369,11290+4]..[410,11801+3]) ghost
                                                                Pexp_construct "::" (lib/sentenceLexer.mll[369,11290+4]..[410,11801+3]) ghost
                                                                Some
                                                                  expression (lib/sentenceLexer.mll[369,11290+4]..[410,11801+3]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lib/sentenceLexer.mll[369,11290+4]..[369,11290+9])
Pexp_constant PConst_string("fun",(lib/sentenceLexer.mll[369,11290+5]..[369,11290+8]),None)
                                                                      expression (lib/sentenceLexer.mll[370,11301+4]..[410,11801+3]) ghost
Pexp_construct "::" (lib/sentenceLexer.mll[370,11301+4]..[410,11801+3]) ghost
Some
  expression (lib/sentenceLexer.mll[370,11301+4]..[410,11801+3]) ghost
    Pexp_tuple
    [
      expression (lib/sentenceLexer.mll[370,11301+4]..[370,11301+14])
        Pexp_constant PConst_string("function",(lib/sentenceLexer.mll[370,11301+5]..[370,11301+13]),None)
      expression (lib/sentenceLexer.mll[371,11317+4]..[410,11801+3]) ghost
        Pexp_construct "::" (lib/sentenceLexer.mll[371,11317+4]..[410,11801+3]) ghost
        Some
          expression (lib/sentenceLexer.mll[371,11317+4]..[410,11801+3]) ghost
            Pexp_tuple
            [
              expression (lib/sentenceLexer.mll[371,11317+4]..[371,11317+13])
                Pexp_constant PConst_string("functor",(lib/sentenceLexer.mll[371,11317+5]..[371,11317+12]),None)
              expression (lib/sentenceLexer.mll[372,11332+4]..[410,11801+3]) ghost
                Pexp_construct "::" (lib/sentenceLexer.mll[372,11332+4]..[410,11801+3]) ghost
                Some
                  expression (lib/sentenceLexer.mll[372,11332+4]..[410,11801+3]) ghost
                    Pexp_tuple
                    [
                      expression (lib/sentenceLexer.mll[372,11332+4]..[372,11332+8])
                        Pexp_constant PConst_string("if",(lib/sentenceLexer.mll[372,11332+5]..[372,11332+7]),None)
                      expression (lib/sentenceLexer.mll[373,11342+4]..[410,11801+3]) ghost
                        Pexp_construct "::" (lib/sentenceLexer.mll[373,11342+4]..[410,11801+3]) ghost
                        Some
                          expression (lib/sentenceLexer.mll[373,11342+4]..[410,11801+3]) ghost
                            Pexp_tuple
                            [
                              expression (lib/sentenceLexer.mll[373,11342+4]..[373,11342+8])
                                Pexp_constant PConst_string("in",(lib/sentenceLexer.mll[373,11342+5]..[373,11342+7]),None)
                              expression (lib/sentenceLexer.mll[374,11352+4]..[410,11801+3]) ghost
                                Pexp_construct "::" (lib/sentenceLexer.mll[374,11352+4]..[410,11801+3]) ghost
                                Some
                                  expression (lib/sentenceLexer.mll[374,11352+4]..[410,11801+3]) ghost
                                    Pexp_tuple
                                    [
                                      expression (lib/sentenceLexer.mll[374,11352+4]..[374,11352+13])
                                        Pexp_constant PConst_string("include",(lib/sentenceLexer.mll[374,11352+5]..[374,11352+12]),None)
                                      expression (lib/sentenceLexer.mll[375,11367+4]..[410,11801+3]) ghost
                                        Pexp_construct "::" (lib/sentenceLexer.mll[375,11367+4]..[410,11801+3]) ghost
                                        Some
                                          expression (lib/sentenceLexer.mll[375,11367+4]..[410,11801+3]) ghost
                                            Pexp_tuple
                                            [
                                              expression (lib/sentenceLexer.mll[375,11367+4]..[375,11367+13])
                                                Pexp_constant PConst_string("inherit",(lib/sentenceLexer.mll[375,11367+5]..[375,11367+12]),None)
                                              expression (lib/sentenceLexer.mll[376,11382+4]..[410,11801+3]) ghost
                                                Pexp_construct "::" (lib/sentenceLexer.mll[376,11382+4]..[410,11801+3]) ghost
                                                Some
                                                  expression (lib/sentenceLexer.mll[376,11382+4]..[410,11801+3]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (lib/sentenceLexer.mll[376,11382+4]..[376,11382+17])
                                                        Pexp_constant PConst_string("initializer",(lib/sentenceLexer.mll[376,11382+5]..[376,11382+16]),None)
                                                      expression (lib/sentenceLexer.mll[377,11401+4]..[410,11801+3]) ghost
                                                        Pexp_construct "::" (lib/sentenceLexer.mll[377,11401+4]..[410,11801+3]) ghost
                                                        Some
                                                          expression (lib/sentenceLexer.mll[377,11401+4]..[410,11801+3]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (lib/sentenceLexer.mll[377,11401+4]..[377,11401+10])
                                                                Pexp_constant PConst_string("lazy",(lib/sentenceLexer.mll[377,11401+5]..[377,11401+9]),None)
                                                              expression (lib/sentenceLexer.mll[378,11413+4]..[410,11801+3]) ghost
                                                                Pexp_construct "::" (lib/sentenceLexer.mll[378,11413+4]..[410,11801+3]) ghost
                                                                Some
                                                                  expression (lib/sentenceLexer.mll[378,11413+4]..[410,11801+3]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lib/sentenceLexer.mll[378,11413+4]..[378,11413+9])
Pexp_constant PConst_string("let",(lib/sentenceLexer.mll[378,11413+5]..[378,11413+8]),None)
                                                                      expression (lib/sentenceLexer.mll[379,11424+4]..[410,11801+3]) ghost
Pexp_construct "::" (lib/sentenceLexer.mll[379,11424+4]..[410,11801+3]) ghost
Some
  expression (lib/sentenceLexer.mll[379,11424+4]..[410,11801+3]) ghost
    Pexp_tuple
    [
      expression (lib/sentenceLexer.mll[379,11424+4]..[379,11424+11])
        Pexp_constant PConst_string("match",(lib/sentenceLexer.mll[379,11424+5]..[379,11424+10]),None)
      expression (lib/sentenceLexer.mll[380,11437+4]..[410,11801+3]) ghost
        Pexp_construct "::" (lib/sentenceLexer.mll[380,11437+4]..[410,11801+3]) ghost
        Some
          expression (lib/sentenceLexer.mll[380,11437+4]..[410,11801+3]) ghost
            Pexp_tuple
            [
              expression (lib/sentenceLexer.mll[380,11437+4]..[380,11437+12])
                Pexp_constant PConst_string("method",(lib/sentenceLexer.mll[380,11437+5]..[380,11437+11]),None)
              expression (lib/sentenceLexer.mll[381,11451+4]..[410,11801+3]) ghost
                Pexp_construct "::" (lib/sentenceLexer.mll[381,11451+4]..[410,11801+3]) ghost
                Some
                  expression (lib/sentenceLexer.mll[381,11451+4]..[410,11801+3]) ghost
                    Pexp_tuple
                    [
                      expression (lib/sentenceLexer.mll[381,11451+4]..[381,11451+12])
                        Pexp_constant PConst_string("module",(lib/sentenceLexer.mll[381,11451+5]..[381,11451+11]),None)
                      expression (lib/sentenceLexer.mll[382,11465+4]..[410,11801+3]) ghost
                        Pexp_construct "::" (lib/sentenceLexer.mll[382,11465+4]..[410,11801+3]) ghost
                        Some
                          expression (lib/sentenceLexer.mll[382,11465+4]..[410,11801+3]) ghost
                            Pexp_tuple
                            [
                              expression (lib/sentenceLexer.mll[382,11465+4]..[382,11465+13])
                                Pexp_constant PConst_string("mutable",(lib/sentenceLexer.mll[382,11465+5]..[382,11465+12]),None)
                              expression (lib/sentenceLexer.mll[383,11480+4]..[410,11801+3]) ghost
                                Pexp_construct "::" (lib/sentenceLexer.mll[383,11480+4]..[410,11801+3]) ghost
                                Some
                                  expression (lib/sentenceLexer.mll[383,11480+4]..[410,11801+3]) ghost
                                    Pexp_tuple
                                    [
                                      expression (lib/sentenceLexer.mll[383,11480+4]..[383,11480+9])
                                        Pexp_constant PConst_string("new",(lib/sentenceLexer.mll[383,11480+5]..[383,11480+8]),None)
                                      expression (lib/sentenceLexer.mll[384,11491+4]..[410,11801+3]) ghost
                                        Pexp_construct "::" (lib/sentenceLexer.mll[384,11491+4]..[410,11801+3]) ghost
                                        Some
                                          expression (lib/sentenceLexer.mll[384,11491+4]..[410,11801+3]) ghost
                                            Pexp_tuple
                                            [
                                              expression (lib/sentenceLexer.mll[384,11491+4]..[384,11491+12])
                                                Pexp_constant PConst_string("object",(lib/sentenceLexer.mll[384,11491+5]..[384,11491+11]),None)
                                              expression (lib/sentenceLexer.mll[385,11505+4]..[410,11801+3]) ghost
                                                Pexp_construct "::" (lib/sentenceLexer.mll[385,11505+4]..[410,11801+3]) ghost
                                                Some
                                                  expression (lib/sentenceLexer.mll[385,11505+4]..[410,11801+3]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (lib/sentenceLexer.mll[385,11505+4]..[385,11505+8])
                                                        Pexp_constant PConst_string("of",(lib/sentenceLexer.mll[385,11505+5]..[385,11505+7]),None)
                                                      expression (lib/sentenceLexer.mll[386,11515+4]..[410,11801+3]) ghost
                                                        Pexp_construct "::" (lib/sentenceLexer.mll[386,11515+4]..[410,11801+3]) ghost
                                                        Some
                                                          expression (lib/sentenceLexer.mll[386,11515+4]..[410,11801+3]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (lib/sentenceLexer.mll[386,11515+4]..[386,11515+10])
                                                                Pexp_constant PConst_string("open",(lib/sentenceLexer.mll[386,11515+5]..[386,11515+9]),None)
                                                              expression (lib/sentenceLexer.mll[387,11527+4]..[410,11801+3]) ghost
                                                                Pexp_construct "::" (lib/sentenceLexer.mll[387,11527+4]..[410,11801+3]) ghost
                                                                Some
                                                                  expression (lib/sentenceLexer.mll[387,11527+4]..[410,11801+3]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lib/sentenceLexer.mll[387,11527+4]..[387,11527+8])
Pexp_constant PConst_string("or",(lib/sentenceLexer.mll[387,11527+5]..[387,11527+7]),None)
                                                                      expression (lib/sentenceLexer.mll[388,11537+4]..[410,11801+3]) ghost
Pexp_construct "::" (lib/sentenceLexer.mll[388,11537+4]..[410,11801+3]) ghost
Some
  expression (lib/sentenceLexer.mll[388,11537+4]..[410,11801+3]) ghost
    Pexp_tuple
    [
      expression (lib/sentenceLexer.mll[388,11537+4]..[388,11537+12])
        Pexp_constant PConst_string("parser",(lib/sentenceLexer.mll[388,11537+5]..[388,11537+11]),None)
      expression (lib/sentenceLexer.mll[389,11551+4]..[410,11801+3]) ghost
        Pexp_construct "::" (lib/sentenceLexer.mll[389,11551+4]..[410,11801+3]) ghost
        Some
          expression (lib/sentenceLexer.mll[389,11551+4]..[410,11801+3]) ghost
            Pexp_tuple
            [
              expression (lib/sentenceLexer.mll[389,11551+4]..[389,11551+13])
                Pexp_constant PConst_string("private",(lib/sentenceLexer.mll[389,11551+5]..[389,11551+12]),None)
              expression (lib/sentenceLexer.mll[390,11566+4]..[410,11801+3]) ghost
                Pexp_construct "::" (lib/sentenceLexer.mll[390,11566+4]..[410,11801+3]) ghost
                Some
                  expression (lib/sentenceLexer.mll[390,11566+4]..[410,11801+3]) ghost
                    Pexp_tuple
                    [
                      expression (lib/sentenceLexer.mll[390,11566+4]..[390,11566+9])
                        Pexp_constant PConst_string("rec",(lib/sentenceLexer.mll[390,11566+5]..[390,11566+8]),None)
                      expression (lib/sentenceLexer.mll[391,11577+4]..[410,11801+3]) ghost
                        Pexp_construct "::" (lib/sentenceLexer.mll[391,11577+4]..[410,11801+3]) ghost
                        Some
                          expression (lib/sentenceLexer.mll[391,11577+4]..[410,11801+3]) ghost
                            Pexp_tuple
                            [
                              expression (lib/sentenceLexer.mll[391,11577+4]..[391,11577+9])
                                Pexp_constant PConst_string("sig",(lib/sentenceLexer.mll[391,11577+5]..[391,11577+8]),None)
                              expression (lib/sentenceLexer.mll[392,11588+4]..[410,11801+3]) ghost
                                Pexp_construct "::" (lib/sentenceLexer.mll[392,11588+4]..[410,11801+3]) ghost
                                Some
                                  expression (lib/sentenceLexer.mll[392,11588+4]..[410,11801+3]) ghost
                                    Pexp_tuple
                                    [
                                      expression (lib/sentenceLexer.mll[392,11588+4]..[392,11588+12])
                                        Pexp_constant PConst_string("struct",(lib/sentenceLexer.mll[392,11588+5]..[392,11588+11]),None)
                                      expression (lib/sentenceLexer.mll[393,11602+4]..[410,11801+3]) ghost
                                        Pexp_construct "::" (lib/sentenceLexer.mll[393,11602+4]..[410,11801+3]) ghost
                                        Some
                                          expression (lib/sentenceLexer.mll[393,11602+4]..[410,11801+3]) ghost
                                            Pexp_tuple
                                            [
                                              expression (lib/sentenceLexer.mll[393,11602+4]..[393,11602+10])
                                                Pexp_constant PConst_string("then",(lib/sentenceLexer.mll[393,11602+5]..[393,11602+9]),None)
                                              expression (lib/sentenceLexer.mll[394,11614+4]..[410,11801+3]) ghost
                                                Pexp_construct "::" (lib/sentenceLexer.mll[394,11614+4]..[410,11801+3]) ghost
                                                Some
                                                  expression (lib/sentenceLexer.mll[394,11614+4]..[410,11801+3]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (lib/sentenceLexer.mll[394,11614+4]..[394,11614+8])
                                                        Pexp_constant PConst_string("to",(lib/sentenceLexer.mll[394,11614+5]..[394,11614+7]),None)
                                                      expression (lib/sentenceLexer.mll[395,11624+4]..[410,11801+3]) ghost
                                                        Pexp_construct "::" (lib/sentenceLexer.mll[395,11624+4]..[410,11801+3]) ghost
                                                        Some
                                                          expression (lib/sentenceLexer.mll[395,11624+4]..[410,11801+3]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (lib/sentenceLexer.mll[395,11624+4]..[395,11624+10])
                                                                Pexp_constant PConst_string("true",(lib/sentenceLexer.mll[395,11624+5]..[395,11624+9]),None)
                                                              expression (lib/sentenceLexer.mll[396,11636+4]..[410,11801+3]) ghost
                                                                Pexp_construct "::" (lib/sentenceLexer.mll[396,11636+4]..[410,11801+3]) ghost
                                                                Some
                                                                  expression (lib/sentenceLexer.mll[396,11636+4]..[410,11801+3]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lib/sentenceLexer.mll[396,11636+4]..[396,11636+9])
Pexp_constant PConst_string("try",(lib/sentenceLexer.mll[396,11636+5]..[396,11636+8]),None)
                                                                      expression (lib/sentenceLexer.mll[397,11647+4]..[410,11801+3]) ghost
Pexp_construct "::" (lib/sentenceLexer.mll[397,11647+4]..[410,11801+3]) ghost
Some
  expression (lib/sentenceLexer.mll[397,11647+4]..[410,11801+3]) ghost
    Pexp_tuple
    [
      expression (lib/sentenceLexer.mll[397,11647+4]..[397,11647+10])
        Pexp_constant PConst_string("type",(lib/sentenceLexer.mll[397,11647+5]..[397,11647+9]),None)
      expression (lib/sentenceLexer.mll[398,11659+4]..[410,11801+3]) ghost
        Pexp_construct "::" (lib/sentenceLexer.mll[398,11659+4]..[410,11801+3]) ghost
        Some
          expression (lib/sentenceLexer.mll[398,11659+4]..[410,11801+3]) ghost
            Pexp_tuple
            [
              expression (lib/sentenceLexer.mll[398,11659+4]..[398,11659+9])
                Pexp_constant PConst_string("val",(lib/sentenceLexer.mll[398,11659+5]..[398,11659+8]),None)
              expression (lib/sentenceLexer.mll[399,11670+4]..[410,11801+3]) ghost
                Pexp_construct "::" (lib/sentenceLexer.mll[399,11670+4]..[410,11801+3]) ghost
                Some
                  expression (lib/sentenceLexer.mll[399,11670+4]..[410,11801+3]) ghost
                    Pexp_tuple
                    [
                      expression (lib/sentenceLexer.mll[399,11670+4]..[399,11670+13])
                        Pexp_constant PConst_string("virtual",(lib/sentenceLexer.mll[399,11670+5]..[399,11670+12]),None)
                      expression (lib/sentenceLexer.mll[400,11685+4]..[410,11801+3]) ghost
                        Pexp_construct "::" (lib/sentenceLexer.mll[400,11685+4]..[410,11801+3]) ghost
                        Some
                          expression (lib/sentenceLexer.mll[400,11685+4]..[410,11801+3]) ghost
                            Pexp_tuple
                            [
                              expression (lib/sentenceLexer.mll[400,11685+4]..[400,11685+10])
                                Pexp_constant PConst_string("when",(lib/sentenceLexer.mll[400,11685+5]..[400,11685+9]),None)
                              expression (lib/sentenceLexer.mll[401,11697+4]..[410,11801+3]) ghost
                                Pexp_construct "::" (lib/sentenceLexer.mll[401,11697+4]..[410,11801+3]) ghost
                                Some
                                  expression (lib/sentenceLexer.mll[401,11697+4]..[410,11801+3]) ghost
                                    Pexp_tuple
                                    [
                                      expression (lib/sentenceLexer.mll[401,11697+4]..[401,11697+11])
                                        Pexp_constant PConst_string("while",(lib/sentenceLexer.mll[401,11697+5]..[401,11697+10]),None)
                                      expression (lib/sentenceLexer.mll[402,11710+4]..[410,11801+3]) ghost
                                        Pexp_construct "::" (lib/sentenceLexer.mll[402,11710+4]..[410,11801+3]) ghost
                                        Some
                                          expression (lib/sentenceLexer.mll[402,11710+4]..[410,11801+3]) ghost
                                            Pexp_tuple
                                            [
                                              expression (lib/sentenceLexer.mll[402,11710+4]..[402,11710+10])
                                                Pexp_constant PConst_string("with",(lib/sentenceLexer.mll[402,11710+5]..[402,11710+9]),None)
                                              expression (lib/sentenceLexer.mll[403,11722+4]..[410,11801+3]) ghost
                                                Pexp_construct "::" (lib/sentenceLexer.mll[403,11722+4]..[410,11801+3]) ghost
                                                Some
                                                  expression (lib/sentenceLexer.mll[403,11722+4]..[410,11801+3]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (lib/sentenceLexer.mll[403,11722+4]..[403,11722+9])
                                                        Pexp_constant PConst_string("mod",(lib/sentenceLexer.mll[403,11722+5]..[403,11722+8]),None)
                                                      expression (lib/sentenceLexer.mll[404,11733+4]..[410,11801+3]) ghost
                                                        Pexp_construct "::" (lib/sentenceLexer.mll[404,11733+4]..[410,11801+3]) ghost
                                                        Some
                                                          expression (lib/sentenceLexer.mll[404,11733+4]..[410,11801+3]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (lib/sentenceLexer.mll[404,11733+4]..[404,11733+10])
                                                                Pexp_constant PConst_string("land",(lib/sentenceLexer.mll[404,11733+5]..[404,11733+9]),None)
                                                              expression (lib/sentenceLexer.mll[405,11745+4]..[410,11801+3]) ghost
                                                                Pexp_construct "::" (lib/sentenceLexer.mll[405,11745+4]..[410,11801+3]) ghost
                                                                Some
                                                                  expression (lib/sentenceLexer.mll[405,11745+4]..[410,11801+3]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lib/sentenceLexer.mll[405,11745+4]..[405,11745+9])
Pexp_constant PConst_string("lor",(lib/sentenceLexer.mll[405,11745+5]..[405,11745+8]),None)
                                                                      expression (lib/sentenceLexer.mll[406,11756+4]..[410,11801+3]) ghost
Pexp_construct "::" (lib/sentenceLexer.mll[406,11756+4]..[410,11801+3]) ghost
Some
  expression (lib/sentenceLexer.mll[406,11756+4]..[410,11801+3]) ghost
    Pexp_tuple
    [
      expression (lib/sentenceLexer.mll[406,11756+4]..[406,11756+10])
        Pexp_constant PConst_string("lxor",(lib/sentenceLexer.mll[406,11756+5]..[406,11756+9]),None)
      expression (lib/sentenceLexer.mll[407,11768+4]..[410,11801+3]) ghost
        Pexp_construct "::" (lib/sentenceLexer.mll[407,11768+4]..[410,11801+3]) ghost
        Some
          expression (lib/sentenceLexer.mll[407,11768+4]..[410,11801+3]) ghost
            Pexp_tuple
            [
              expression (lib/sentenceLexer.mll[407,11768+4]..[407,11768+9])
                Pexp_constant PConst_string("lsl",(lib/sentenceLexer.mll[407,11768+5]..[407,11768+8]),None)
              expression (lib/sentenceLexer.mll[408,11779+4]..[410,11801+3]) ghost
                Pexp_construct "::" (lib/sentenceLexer.mll[408,11779+4]..[410,11801+3]) ghost
                Some
                  expression (lib/sentenceLexer.mll[408,11779+4]..[410,11801+3]) ghost
                    Pexp_tuple
                    [
                      expression (lib/sentenceLexer.mll[408,11779+4]..[408,11779+9])
                        Pexp_constant PConst_string("lsr",(lib/sentenceLexer.mll[408,11779+5]..[408,11779+8]),None)
                      expression (lib/sentenceLexer.mll[409,11790+4]..[410,11801+3]) ghost
                        Pexp_construct "::" (lib/sentenceLexer.mll[409,11790+4]..[410,11801+3]) ghost
                        Some
                          expression (lib/sentenceLexer.mll[409,11790+4]..[410,11801+3]) ghost
                            Pexp_tuple
                            [
                              expression (lib/sentenceLexer.mll[409,11790+4]..[409,11790+9])
                                Pexp_constant PConst_string("asr",(lib/sentenceLexer.mll[409,11790+5]..[409,11790+8]),None)
                              expression (lib/sentenceLexer.mll[410,11801+2]..[410,11801+3]) ghost
                                Pexp_construct "[]" (lib/sentenceLexer.mll[410,11801+2]..[410,11801+3]) ghost
                                None
                            ]
                    ]
            ]
    ]
                                                                    ]
                                                            ]
                                                    ]
                                            ]
                                    ]
                            ]
                    ]
            ]
    ]
                                                                    ]
                                                            ]
                                                    ]
                                            ]
                                    ]
                            ]
                    ]
            ]
    ]
                                                                    ]
                                                            ]
                                                    ]
                                            ]
                                    ]
                            ]
                    ]
            ]
    ]
                                                                    ]
                                                            ]
                                                    ]
                                            ]
                                    ]
                            ]
                    ]
            ]
    ]
                                                                    ]
                                                            ]
                                                    ]
                                            ]
                                    ]
                            ]
                    ]
            ]
    ]
                                                                    ]
                                                            ]
                                                    ]
                                            ]
                                    ]
                            ]
                    ]
          ]
    ]
  structure_item (lib/sentenceLexer.mll[416,11922+0]..[421,12028+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[416,11922+4]..[416,11922+22])
          Ppat_var "char_for_backslash" (lib/sentenceLexer.mll[416,11922+4]..[416,11922+22])
        expression (lib/sentenceLexer.mll[416,11922+25]..[421,12028+12])
          Pexp_function
          [
            <case>
              pattern (lib/sentenceLexer.mll[417,11956+4]..[417,11956+7])
                Ppat_constant PConst_char 6e
              expression (lib/sentenceLexer.mll[417,11956+11]..[417,11956+17])
                Pexp_constant PConst_char 0a
            <case>
              pattern (lib/sentenceLexer.mll[418,11974+4]..[418,11974+7])
                Ppat_constant PConst_char 72
              expression (lib/sentenceLexer.mll[418,11974+11]..[418,11974+17])
                Pexp_constant PConst_char 0d
            <case>
              pattern (lib/sentenceLexer.mll[419,11992+4]..[419,11992+7])
                Ppat_constant PConst_char 62
              expression (lib/sentenceLexer.mll[419,11992+11]..[419,11992+17])
                Pexp_constant PConst_char 08
            <case>
              pattern (lib/sentenceLexer.mll[420,12010+4]..[420,12010+7])
                Ppat_constant PConst_char 74
              expression (lib/sentenceLexer.mll[420,12010+11]..[420,12010+17])
                Pexp_constant PConst_char 09
            <case>
              pattern (lib/sentenceLexer.mll[421,12028+4]..[421,12028+5])
                Ppat_var "c" (lib/sentenceLexer.mll[421,12028+4]..[421,12028+5])
              expression (lib/sentenceLexer.mll[421,12028+11]..[421,12028+12])
                Pexp_ident "c" (lib/sentenceLexer.mll[421,12028+11]..[421,12028+12])
          ]
    ]
  structure_item (lib/sentenceLexer.ml[413,12072+0]..[681,29755+1])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.ml[413,12072+4]..[413,12072+22])
          Ppat_var "__ocaml_lex_tables" (lib/sentenceLexer.ml[413,12072+4]..[413,12072+22])
        expression (lib/sentenceLexer.ml[413,12072+25]..[681,29755+1])
          Pexp_record
          [
            "Lexing.lex_base" (lib/sentenceLexer.ml[414,12099+2]..[414,12099+17])
              expression (lib/sentenceLexer.ml[415,12119+3]..[420,12469+45])
                Pexp_constant PConst_string("\000\000\239\255\240\255'\000'\000(\000\243\255\004\000\244\255\231\000\007\000\247\255\186\001\249\255\250\255\251\255\252\255\253\255\254\255\255\255\005\000\246\255B\000+\000,\000\242\255C\000\232\000\251\255\252\255-\000\253\255\154\002\255\255\254\255\006\000\252\255\253\255\254\255\002\000\255\255\016\000\253\255\254\255\255\255",(lib/sentenceLexer.ml[415,12119+4]..[420,12469+44]),None)
            "Lexing.lex_backtrk" (lib/sentenceLexer.ml[421,12516+2]..[421,12516+20])
              expression (lib/sentenceLexer.ml[422,12539+3]..[427,12889+45])
                Pexp_constant PConst_string("\n\000\255\255\255\255\014\000\016\000\012\000\255\255\016\000\255\255\n\000\016\000\255\255\007\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\012\000\r\000\255\255\255\255\255\255\255\255\255\255\002\000\255\255\004\000\255\255\255\255\255\255\255\255\255\255\255\255\003\000\255\255\255\255\255\255\255\255\255\255",(lib/sentenceLexer.ml[422,12539+4]..[427,12889+44]),None)
            "Lexing.lex_default" (lib/sentenceLexer.ml[428,12936+2]..[428,12936+20])
              expression (lib/sentenceLexer.ml[429,12959+3]..[434,13309+45])
                Pexp_constant PConst_string("\t\000\000\000\000\000\255\255\026\000\255\255\000\000\255\255\000\000\255\255\255\255\000\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\022\000\255\255\255\255\000\000\026\000\028\000\000\000\000\000\255\255\000\000\255\255\000\000\000\000$\000\000\000\000\000\000\000\255\255\000\000*\000\000\000\000\000\000\000",(lib/sentenceLexer.ml[429,12959+4]..[434,13309+44]),None)
            "Lexing.lex_trans" (lib/sentenceLexer.ml[435,13356+2]..[435,13356+18])
              expression (lib/sentenceLexer.ml[436,13377+3]..[551,21427+29])
                Pexp_constant PConst_string("\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\003\000\006\000\001\000\001\000\005\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\003\000\001\000\b\000\004\000\001\000\001\000\001\000\001\000\019\000\018\000\014\000\r\000\001\000\012\000\001\000\007\000\003\000\025\000\006\000\022\000\024\000\006\000\025\000\031\000+\000,\000\n\000\001\000\001\000\001\000\001\000\015\000\001\000\020\000\021\000\000\000\000\000\000\000\000\000\003\000\000\000\000\000\000\000\000\000\006\000\025\000\000\000\023\000\024\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\000\001\000\001\000\011\000(\000\001\000%\000'\000&\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\016\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\000\000\000\000\000\030\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000\000\000!\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000\000\000\t\000\000\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\255\255\255\255 \000\000\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\tt\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\029\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\000\000\000\000\000\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\tt\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\tlib/sentenceLexer.ml[436,13377+4]..[551,21427+28]),None)
            "Lexing.lex_check" (lib/sentenceLexer.ml[552,21458+2]..[552,21458+18])
              expression (lib/sentenceLexer.ml[553,21479+3]..[668,29529+29])
                Pexp_constant PConst_stringnt\000\255\255\255\255\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\255\255\255\255\255\255\255\255\255\255\255\255\004\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\022\000\026\000\027\000\255\255\t\000\255\255\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\tt\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\255\255\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\255\255\t\000\t\000\t\000\t\000\t\000\t\000\t\000\tlib/sentenceLexer.ml[553,21479+4]..[668,29529+28]),None)
            "Lexing.lex_base_code" (lib/sentenceLexer.ml[669,29560+2]..[669,29560+22])
              expression (lib/sentenceLexer.ml[670,29585+3]..[670,29585+5])
                Pexp_constant PConst_string("",(lib/sentenceLexer.ml[670,29585+4]..[670,29585+4]),None)
            "Lexing.lex_backtrk_code" (lib/sentenceLexer.ml[671,29592+2]..[671,29592+25])
              expression (lib/sentenceLexer.ml[672,29620+3]..[672,29620+5])
                Pexp_constant PConst_string("",(lib/sentenceLexer.ml[672,29620+4]..[672,29620+4]),None)
            "Lexing.lex_default_code" (lib/sentenceLexer.ml[673,29627+2]..[673,29627+25])
              expression (lib/sentenceLexer.ml[674,29655+3]..[674,29655+5])
                Pexp_constant PConst_string("",(lib/sentenceLexer.ml[674,29655+4]..[674,29655+4]),None)
            "Lexing.lex_trans_code" (lib/sentenceLexer.ml[675,29662+2]..[675,29662+23])
              expression (lib/sentenceLexer.ml[676,29688+3]..[676,29688+5])
                Pexp_constant PConst_string("",(lib/sentenceLexer.ml[676,29688+4]..[676,29688+4]),None)
            "Lexing.lex_check_code" (lib/sentenceLexer.ml[677,29695+2]..[677,29695+23])
              expression (lib/sentenceLexer.ml[678,29721+3]..[678,29721+5])
                Pexp_constant PConst_string("",(lib/sentenceLexer.ml[678,29721+4]..[678,29721+4]),None)
            "Lexing.lex_code" (lib/sentenceLexer.ml[679,29728+2]..[679,29728+17])
              expression (lib/sentenceLexer.ml[680,29748+3]..[680,29748+5])
                Pexp_constant PConst_string("",(lib/sentenceLexer.ml[680,29748+4]..[680,29748+4]),None)
          ]
          None
    ]
  structure_item (lib/sentenceLexer.ml[683,29758+0]..[929,36726+73])
    Pstr_value Rec
    [
      <def>
        pattern (lib/sentenceLexer.ml[683,29758+8]..[683,29758+12])
          Ppat_var "main" (lib/sentenceLexer.ml[683,29758+8]..[683,29758+12])
        expression (lib/sentenceLexer.ml[683,29758+13]..[684,29780+32]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/sentenceLexer.ml[683,29758+13]..[683,29758+19])
            Ppat_var "lexbuf" (lib/sentenceLexer.ml[683,29758+13]..[683,29758+19])
          expression (lib/sentenceLexer.ml[684,29780+3]..[684,29780+32])
            Pexp_apply
            expression (lib/sentenceLexer.ml[684,29780+3]..[684,29780+23])
              Pexp_ident "__ocaml_lex_main_rec" (lib/sentenceLexer.ml[684,29780+3]..[684,29780+23])
            [
              <arg>
              Nolabel
                expression (lib/sentenceLexer.ml[684,29780+24]..[684,29780+30])
                  Pexp_ident "lexbuf" (lib/sentenceLexer.ml[684,29780+24]..[684,29780+30])
              <arg>
              Nolabel
                expression (lib/sentenceLexer.ml[684,29780+31]..[684,29780+32])
                  Pexp_constant PConst_int (0,None)
            ]
      <def>
        pattern (lib/sentenceLexer.ml[685,29813+4]..[685,29813+24])
          Ppat_var "__ocaml_lex_main_rec" (lib/sentenceLexer.ml[685,29813+4]..[685,29813+24])
        expression (lib/sentenceLexer.ml[685,29813+25]..[809,32908+51]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/sentenceLexer.ml[685,29813+25]..[685,29813+31])
            Ppat_var "lexbuf" (lib/sentenceLexer.ml[685,29813+25]..[685,29813+31])
          expression (lib/sentenceLexer.ml[685,29813+32]..[809,32908+51]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/sentenceLexer.ml[685,29813+32]..[685,29813+49])
              Ppat_var "__ocaml_lex_state" (lib/sentenceLexer.ml[685,29813+32]..[685,29813+49])
            expression (lib/sentenceLexer.ml[686,29865+2]..[809,32908+51])
              Pexp_match
              expression (lib/sentenceLexer.ml[686,29865+8]..[686,29865+65])
                Pexp_apply
                expression (lib/sentenceLexer.ml[686,29865+8]..[686,29865+21])
                  Pexp_ident "Lexing.engine" (lib/sentenceLexer.ml[686,29865+8]..[686,29865+21])
                [
                  <arg>
                  Nolabel
                    expression (lib/sentenceLexer.ml[686,29865+22]..[686,29865+40])
                      Pexp_ident "__ocaml_lex_tables" (lib/sentenceLexer.ml[686,29865+22]..[686,29865+40])
                  <arg>
                  Nolabel
                    expression (lib/sentenceLexer.ml[686,29865+41]..[686,29865+58])
                      Pexp_ident "__ocaml_lex_state" (lib/sentenceLexer.ml[686,29865+41]..[686,29865+58])
                  <arg>
                  Nolabel
                    expression (lib/sentenceLexer.ml[686,29865+59]..[686,29865+65])
                      Pexp_ident "lexbuf" (lib/sentenceLexer.ml[686,29865+59]..[686,29865+65])
                ]
              [
                <case>
                  pattern (lib/sentenceLexer.ml[687,29936+8]..[687,29936+9])
                    Ppat_constant PConst_int (0,None)
                  expression (lib/sentenceLexer.mll[469,29979+1]..[469,29979+78])
                    Pexp_sequence
                    expression (lib/sentenceLexer.mll[469,29979+9]..[469,29979+68])
                      Pexp_apply
                      expression (lib/sentenceLexer.mll[469,29979+10]..[469,29979+23])
                        Pexp_ident "print_endline" (lib/sentenceLexer.mll[469,29979+10]..[469,29979+23])
                      [
                        <arg>
                        Nolabel
                          expression (lib/sentenceLexer.mll[469,29979+24]..[469,29979+67])
                            Pexp_apply
                            expression (lib/sentenceLexer.mll[469,29979+25]..[469,29979+39])
                              Pexp_ident "Batteries.dump" (lib/sentenceLexer.mll[469,29979+25]..[469,29979+39])
                            [
                              <arg>
                              Nolabel
                                expression (lib/sentenceLexer.mll[469,29979+40]..[469,29979+66])
                                  Pexp_apply
                                  expression (lib/sentenceLexer.mll[469,29979+43]..[469,29979+56])
                                    Pexp_ident "Lexing.lexeme" (lib/sentenceLexer.mll[469,29979+43]..[469,29979+56])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/sentenceLexer.mll[469,29979+57]..[469,29979+63])
                                        Pexp_ident "lexbuf" (lib/sentenceLexer.mll[469,29979+57]..[469,29979+63])
                                  ]
                            ]
                      ]
                    expression (lib/sentenceLexer.mll[469,29979+70]..[469,29979+76])
                      Pexp_construct "LPAREN" (lib/sentenceLexer.mll[469,29979+70]..[469,29979+76])
                      None
                <case>
                  pattern (lib/sentenceLexer.ml[692,30088+4]..[692,30088+5])
                    Ppat_constant PConst_int (1,None)
                  expression (lib/sentenceLexer.mll[483,30127+4]..[483,30127+14])
                    Pexp_construct "RPAREN" (lib/sentenceLexer.mll[483,30127+6]..[483,30127+12])
                    None
                <case>
                  pattern (lib/sentenceLexer.ml[697,30172+4]..[697,30172+5])
                    Ppat_constant PConst_int (2,None)
                  expression (lib/sentenceLexer.mll[485,30211+4]..[494,30637+5])
                    Pexp_sequence
                    expression (lib/sentenceLexer.mll[487,30285+6]..[487,30285+65])
                      Pexp_apply
                      expression (lib/sentenceLexer.mll[487,30285+7]..[487,30285+20])
                        Pexp_ident "print_endline" (lib/sentenceLexer.mll[487,30285+7]..[487,30285+20])
                      [
                        <arg>
                        Nolabel
                          expression (lib/sentenceLexer.mll[487,30285+21]..[487,30285+64])
                            Pexp_apply
                            expression (lib/sentenceLexer.mll[487,30285+22]..[487,30285+36])
                              Pexp_ident "Batteries.dump" (lib/sentenceLexer.mll[487,30285+22]..[487,30285+36])
                            [
                              <arg>
                              Nolabel
                                expression (lib/sentenceLexer.mll[487,30285+37]..[487,30285+63])
                                  Pexp_apply
                                  expression (lib/sentenceLexer.mll[487,30285+40]..[487,30285+53])
                                    Pexp_ident "Lexing.lexeme" (lib/sentenceLexer.mll[487,30285+40]..[487,30285+53])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/sentenceLexer.mll[487,30285+54]..[487,30285+60])
                                        Pexp_ident "lexbuf" (lib/sentenceLexer.mll[487,30285+54]..[487,30285+60])
                                  ]
                            ]
                      ]
                    expression (lib/sentenceLexer.mll[488,30352+6]..[493,30607+29])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/sentenceLexer.mll[488,30352+10]..[488,30352+16])
                            Ppat_var "buffer" (lib/sentenceLexer.mll[488,30352+10]..[488,30352+16])
                          expression (lib/sentenceLexer.mll[488,30352+19]..[488,30352+36])
                            Pexp_apply
                            expression (lib/sentenceLexer.mll[488,30352+19]..[488,30352+32])
                              Pexp_ident "Buffer.create" (lib/sentenceLexer.mll[488,30352+19]..[488,30352+32])
                            [
                              <arg>
                              Nolabel
                                expression (lib/sentenceLexer.mll[488,30352+33]..[488,30352+36])
                                  Pexp_constant PConst_int (256,None)
                            ]
                      ]
                      expression (lib/sentenceLexer.mll[489,30392+6]..[493,30607+29])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/sentenceLexer.mll[489,30392+10]..[489,30392+20])
                              Ppat_var "openingpos" (lib/sentenceLexer.mll[489,30392+10]..[489,30392+20])
                            expression (lib/sentenceLexer.mll[489,30392+23]..[489,30392+44])
                              Pexp_apply
                              expression (lib/sentenceLexer.mll[489,30392+23]..[489,30392+37])
                                Pexp_ident "lexeme_start_p" (lib/sentenceLexer.mll[489,30392+23]..[489,30392+37])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[489,30392+38]..[489,30392+44])
                                    Pexp_ident "lexbuf" (lib/sentenceLexer.mll[489,30392+38]..[489,30392+44])
                              ]
                        ]
                        expression (lib/sentenceLexer.mll[490,30440+6]..[493,30607+29])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lib/sentenceLexer.mll[490,30440+10]..[490,30440+17])
                                Ppat_var "content" (lib/sentenceLexer.mll[490,30440+10]..[490,30440+17])
                              expression (lib/sentenceLexer.mll[490,30440+20]..[490,30440+55])
                                Pexp_apply
                                expression (lib/sentenceLexer.mll[490,30440+20]..[490,30440+29])
                                  Pexp_ident "charclass" (lib/sentenceLexer.mll[490,30440+20]..[490,30440+29])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/sentenceLexer.mll[490,30440+31]..[490,30440+41])
                                      Pexp_ident "openingpos" (lib/sentenceLexer.mll[490,30440+31]..[490,30440+41])
                                  <arg>
                                  Nolabel
                                    expression (lib/sentenceLexer.mll[490,30440+42]..[490,30440+48])
                                      Pexp_ident "buffer" (lib/sentenceLexer.mll[490,30440+42]..[490,30440+48])
                                  <arg>
                                  Nolabel
                                    expression (lib/sentenceLexer.mll[490,30440+49]..[490,30440+55])
                                      Pexp_ident "lexbuf" (lib/sentenceLexer.mll[490,30440+49]..[490,30440+55])
                                ]
                          ]
                          expression (lib/sentenceLexer.mll[491,30499+6]..[493,30607+29])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/sentenceLexer.mll[491,30499+10]..[491,30499+12])
                                  Ppat_var "id" (lib/sentenceLexer.mll[491,30499+10]..[491,30499+12])
                                expression (lib/sentenceLexer.mll[491,30499+15]..[491,30499+46])
                                  Pexp_apply
                                  expression (lib/sentenceLexer.mll[491,30499+15]..[491,30499+29])
                                    Pexp_ident "Printf.sprintf" (lib/sentenceLexer.mll[491,30499+15]..[491,30499+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/sentenceLexer.mll[491,30499+30]..[491,30499+38])
                                        Pexp_constant PConst_string("\"%s\"",(lib/sentenceLexer.mll[491,30499+31]..[491,30499+37]),None)
                                    <arg>
                                    Nolabel
                                      expression (lib/sentenceLexer.mll[491,30499+39]..[491,30499+46])
                                        Pexp_ident "content" (lib/sentenceLexer.mll[491,30499+39]..[491,30499+46])
                                  ]
                            ]
                            expression (lib/sentenceLexer.mll[492,30549+6]..[493,30607+29])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/sentenceLexer.mll[492,30549+10]..[492,30549+13])
                                    Ppat_var "pos" (lib/sentenceLexer.mll[492,30549+10]..[492,30549+13])
                                  expression (lib/sentenceLexer.mll[492,30549+16]..[492,30549+54])
                                    Pexp_apply
                                    expression (lib/sentenceLexer.mll[492,30549+16]..[492,30549+22])
                                      Pexp_ident "import" (lib/sentenceLexer.mll[492,30549+16]..[492,30549+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/sentenceLexer.mll[492,30549+23]..[492,30549+54])
                                          Pexp_tuple
                                          [
                                            expression (lib/sentenceLexer.mll[492,30549+24]..[492,30549+34])
                                              Pexp_ident "openingpos" (lib/sentenceLexer.mll[492,30549+24]..[492,30549+34])
                                            expression (lib/sentenceLexer.mll[492,30549+36]..[492,30549+53])
                                              Pexp_field
                                              expression (lib/sentenceLexer.mll[492,30549+36]..[492,30549+42])
                                                Pexp_ident "lexbuf" (lib/sentenceLexer.mll[492,30549+36]..[492,30549+42])
                                              "lex_curr_p" (lib/sentenceLexer.mll[492,30549+43]..[492,30549+53])
                                          ]
                                    ]
                              ]
                              expression (lib/sentenceLexer.mll[493,30607+6]..[493,30607+29])
                                Pexp_construct "REGEX" (lib/sentenceLexer.mll[493,30607+6]..[493,30607+11])
                                Some
                                  expression (lib/sentenceLexer.mll[493,30607+12]..[493,30607+29])
                                    Pexp_apply
                                    expression (lib/sentenceLexer.mll[493,30607+13]..[493,30607+21])
                                      Pexp_ident "with_pos" (lib/sentenceLexer.mll[493,30607+13]..[493,30607+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/sentenceLexer.mll[493,30607+22]..[493,30607+25])
                                          Pexp_ident "pos" (lib/sentenceLexer.mll[493,30607+22]..[493,30607+25])
                                      <arg>
                                      Nolabel
                                        expression (lib/sentenceLexer.mll[493,30607+26]..[493,30607+28])
                                          Pexp_ident "id" (lib/sentenceLexer.mll[493,30607+26]..[493,30607+28])
                                    ]
                <case>
                  pattern (lib/sentenceLexer.ml[711,30673+4]..[711,30673+5])
                    Ppat_constant PConst_int (3,None)
                  expression (lib/sentenceLexer.mll[499,30712+4]..[499,30712+11])
                    Pexp_construct "BAR" (lib/sentenceLexer.mll[499,30712+6]..[499,30712+9])
                    None
                <case>
                  pattern (lib/sentenceLexer.ml[716,30754+4]..[716,30754+5])
                    Ppat_constant PConst_int (4,None)
                  expression (lib/sentenceLexer.mll[501,30793+4]..[501,30793+16])
                    Pexp_construct "QUESTION" (lib/sentenceLexer.mll[501,30793+6]..[501,30793+14])
                    None
                <case>
                  pattern (lib/sentenceLexer.ml[721,30840+4]..[721,30840+5])
                    Ppat_constant PConst_int (5,None)
                  expression (lib/sentenceLexer.mll[503,30879+4]..[503,30879+12])
                    Pexp_construct "STAR" (lib/sentenceLexer.mll[503,30879+6]..[503,30879+10])
                    None
                <case>
                  pattern (lib/sentenceLexer.ml[726,30922+4]..[726,30922+5])
                    Ppat_constant PConst_int (6,None)
                  expression (lib/sentenceLexer.mll[505,30961+4]..[505,30961+12])
                    Pexp_construct "PLUS" (lib/sentenceLexer.mll[505,30961+6]..[505,30961+10])
                    None
                <case>
                  pattern (lib/sentenceLexer.ml[731,31004+4]..[731,31004+5])
                    Ppat_constant PConst_int (7,None)
                  expression (lib/sentenceLexer.mll[507,31043+4]..[507,31043+12])
                    Pexp_construct "DASH" (lib/sentenceLexer.mll[507,31043+6]..[507,31043+10])
                    None
                <case>
                  pattern (lib/sentenceLexer.ml[736,31086+4]..[736,31086+5])
                    Ppat_constant PConst_int (8,None)
                  expression (lib/sentenceLexer.mll[509,31125+4]..[509,31125+13])
                    Pexp_construct "CARET" (lib/sentenceLexer.mll[509,31125+6]..[509,31125+11])
                    None
                <case>
                  pattern (lib/sentenceLexer.ml[741,31169+4]..[741,31169+5])
                    Ppat_constant PConst_int (9,None)
                  expression (lib/sentenceLexer.mll[511,31208+4]..[519,31463+23])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/sentenceLexer.mll[513,31215+10]..[513,31215+14])
                          Ppat_var "curr" (lib/sentenceLexer.mll[513,31215+10]..[513,31215+14])
                        expression (lib/sentenceLexer.mll[513,31215+17]..[513,31215+41])
                          Pexp_field
                          expression (lib/sentenceLexer.mll[513,31215+17]..[513,31215+23])
                            Pexp_ident "lexbuf" (lib/sentenceLexer.mll[513,31215+17]..[513,31215+23])
                          "Lexing.lex_curr_p" (lib/sentenceLexer.mll[513,31215+24]..[513,31215+41])
                    ]
                    expression (lib/sentenceLexer.mll[514,31260+6]..[519,31463+21])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/sentenceLexer.mll[514,31260+10]..[514,31260+14])
                            Ppat_var "line" (lib/sentenceLexer.mll[514,31260+10]..[514,31260+14])
                          expression (lib/sentenceLexer.mll[514,31260+17]..[514,31260+37])
                            Pexp_field
                            expression (lib/sentenceLexer.mll[514,31260+17]..[514,31260+21])
                              Pexp_ident "curr" (lib/sentenceLexer.mll[514,31260+17]..[514,31260+21])
                            "Lexing.pos_lnum" (lib/sentenceLexer.mll[514,31260+22]..[514,31260+37])
                      ]
                      expression (lib/sentenceLexer.mll[515,31301+6]..[519,31463+21])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/sentenceLexer.mll[515,31301+10]..[515,31301+14])
                              Ppat_var "cnum" (lib/sentenceLexer.mll[515,31301+10]..[515,31301+14])
                            expression (lib/sentenceLexer.mll[515,31301+17]..[515,31301+59])
                              Pexp_apply
                              expression (lib/sentenceLexer.mll[515,31301+38]..[515,31301+39])
                                Pexp_ident "-" (lib/sentenceLexer.mll[515,31301+38]..[515,31301+39])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[515,31301+17]..[515,31301+37])
                                    Pexp_field
                                    expression (lib/sentenceLexer.mll[515,31301+17]..[515,31301+21])
                                      Pexp_ident "curr" (lib/sentenceLexer.mll[515,31301+17]..[515,31301+21])
                                    "Lexing.pos_cnum" (lib/sentenceLexer.mll[515,31301+22]..[515,31301+37])
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[515,31301+40]..[515,31301+59])
                                    Pexp_field
                                    expression (lib/sentenceLexer.mll[515,31301+40]..[515,31301+44])
                                      Pexp_ident "curr" (lib/sentenceLexer.mll[515,31301+40]..[515,31301+44])
                                    "Lexing.pos_bol" (lib/sentenceLexer.mll[515,31301+45]..[515,31301+59])
                              ]
                        ]
                        expression (lib/sentenceLexer.mll[516,31364+6]..[519,31463+21])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lib/sentenceLexer.mll[516,31364+10]..[516,31364+13])
                                Ppat_var "tok" (lib/sentenceLexer.mll[516,31364+10]..[516,31364+13])
                              expression (lib/sentenceLexer.mll[516,31364+16]..[516,31364+36])
                                Pexp_apply
                                expression (lib/sentenceLexer.mll[516,31364+16]..[516,31364+29])
                                  Pexp_ident "Lexing.lexeme" (lib/sentenceLexer.mll[516,31364+16]..[516,31364+29])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/sentenceLexer.mll[516,31364+30]..[516,31364+36])
                                      Pexp_ident "lexbuf" (lib/sentenceLexer.mll[516,31364+30]..[516,31364+36])
                                ]
                          ]
                          expression (lib/sentenceLexer.mll[517,31404+6]..[519,31463+21])
                            Pexp_sequence
                            expression (lib/sentenceLexer.mll[517,31404+6]..[517,31404+56])
                              Pexp_apply
                              expression (lib/sentenceLexer.mll[517,31404+7]..[517,31404+20])
                                Pexp_ident "print_endline" (lib/sentenceLexer.mll[517,31404+7]..[517,31404+20])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[517,31404+21]..[517,31404+55])
                                    Pexp_apply
                                    expression (lib/sentenceLexer.mll[517,31404+22]..[517,31404+36])
                                      Pexp_ident "Batteries.dump" (lib/sentenceLexer.mll[517,31404+22]..[517,31404+36])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/sentenceLexer.mll[517,31404+37]..[517,31404+54])
                                          Pexp_tuple
                                          [
                                            expression (lib/sentenceLexer.mll[517,31404+39]..[517,31404+43])
                                              Pexp_ident "line" (lib/sentenceLexer.mll[517,31404+39]..[517,31404+43])
                                            expression (lib/sentenceLexer.mll[517,31404+44]..[517,31404+48])
                                              Pexp_ident "cnum" (lib/sentenceLexer.mll[517,31404+44]..[517,31404+48])
                                            expression (lib/sentenceLexer.mll[517,31404+49]..[517,31404+52])
                                              Pexp_ident "tok" (lib/sentenceLexer.mll[517,31404+49]..[517,31404+52])
                                          ]
                                    ]
                              ]
                            expression (lib/sentenceLexer.mll[519,31463+6]..[519,31463+21])
                              Pexp_construct "COLONCOLONEQUAL" (lib/sentenceLexer.mll[519,31463+6]..[519,31463+21])
                              None
                <case>
                  pattern (lib/sentenceLexer.ml[754,31517+4]..[754,31517+6])
                    Ppat_constant PConst_int (10,None)
                  expression (lib/sentenceLexer.ml[755,31527+0]..lib/sentenceLexer.mll[524,31773+5])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/sentenceLexer.mll[521,31561+20]..[521,31561+22])
                          Ppat_var "id" (lib/sentenceLexer.mll[521,31561+20]..[521,31561+22])
                        expression (lib/sentenceLexer.ml[759,31613+2]..[759,31613+81])
                          Pexp_apply
                          expression (lib/sentenceLexer.ml[759,31613+2]..[759,31613+19])
                            Pexp_ident "Lexing.sub_lexeme" (lib/sentenceLexer.ml[759,31613+2]..[759,31613+19])
                          [
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.ml[759,31613+20]..[759,31613+26])
                                Pexp_ident "lexbuf" (lib/sentenceLexer.ml[759,31613+20]..[759,31613+26])
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.ml[759,31613+27]..[759,31613+54])
                                Pexp_field
                                expression (lib/sentenceLexer.ml[759,31613+27]..[759,31613+33])
                                  Pexp_ident "lexbuf" (lib/sentenceLexer.ml[759,31613+27]..[759,31613+33])
                                "Lexing.lex_start_pos" (lib/sentenceLexer.ml[759,31613+34]..[759,31613+54])
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.ml[759,31613+55]..[759,31613+81])
                                Pexp_field
                                expression (lib/sentenceLexer.ml[759,31613+55]..[759,31613+61])
                                  Pexp_ident "lexbuf" (lib/sentenceLexer.ml[759,31613+55]..[759,31613+61])
                                "Lexing.lex_curr_pos" (lib/sentenceLexer.ml[759,31613+62]..[759,31613+81])
                          ]
                    ]
                    expression (lib/sentenceLexer.mll[522,31728+4]..[524,31773+5])
                      Pexp_construct "LID" (lib/sentenceLexer.mll[523,31735+6]..[523,31735+9])
                      Some
                        expression (lib/sentenceLexer.mll[523,31735+10]..[523,31735+37])
                          Pexp_apply
                          expression (lib/sentenceLexer.mll[523,31735+11]..[523,31735+19])
                            Pexp_ident "with_pos" (lib/sentenceLexer.mll[523,31735+11]..[523,31735+19])
                          [
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.mll[523,31735+20]..[523,31735+33])
                                Pexp_apply
                                expression (lib/sentenceLexer.mll[523,31735+21]..[523,31735+25])
                                  Pexp_ident "cpos" (lib/sentenceLexer.mll[523,31735+21]..[523,31735+25])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/sentenceLexer.mll[523,31735+26]..[523,31735+32])
                                      Pexp_ident "lexbuf" (lib/sentenceLexer.mll[523,31735+26]..[523,31735+32])
                                ]
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.mll[523,31735+34]..[523,31735+36])
                                Pexp_ident "id" (lib/sentenceLexer.mll[523,31735+34]..[523,31735+36])
                          ]
                <case>
                  pattern (lib/sentenceLexer.ml[766,31809+4]..[766,31809+6])
                    Ppat_constant PConst_int (11,None)
                  expression (lib/sentenceLexer.mll[530,31849+4]..[535,32106+29])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/sentenceLexer.mll[530,31849+10]..[530,31849+16])
                          Ppat_var "buffer" (lib/sentenceLexer.mll[530,31849+10]..[530,31849+16])
                        expression (lib/sentenceLexer.mll[530,31849+19]..[530,31849+35])
                          Pexp_apply
                          expression (lib/sentenceLexer.mll[530,31849+19]..[530,31849+32])
                            Pexp_ident "Buffer.create" (lib/sentenceLexer.mll[530,31849+19]..[530,31849+32])
                          [
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.mll[530,31849+33]..[530,31849+35])
                                Pexp_constant PConst_int (16,None)
                          ]
                    ]
                    expression (lib/sentenceLexer.mll[531,31888+6]..[535,32106+27])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/sentenceLexer.mll[531,31888+10]..[531,31888+20])
                            Ppat_var "openingpos" (lib/sentenceLexer.mll[531,31888+10]..[531,31888+20])
                          expression (lib/sentenceLexer.mll[531,31888+23]..[531,31888+44])
                            Pexp_apply
                            expression (lib/sentenceLexer.mll[531,31888+23]..[531,31888+37])
                              Pexp_ident "lexeme_start_p" (lib/sentenceLexer.mll[531,31888+23]..[531,31888+37])
                            [
                              <arg>
                              Nolabel
                                expression (lib/sentenceLexer.mll[531,31888+38]..[531,31888+44])
                                  Pexp_ident "lexbuf" (lib/sentenceLexer.mll[531,31888+38]..[531,31888+44])
                            ]
                      ]
                      expression (lib/sentenceLexer.mll[532,31936+6]..[535,32106+27])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/sentenceLexer.mll[532,31936+10]..[532,31936+17])
                              Ppat_var "content" (lib/sentenceLexer.mll[532,31936+10]..[532,31936+17])
                            expression (lib/sentenceLexer.mll[532,31936+20]..[532,31936+58])
                              Pexp_apply
                              expression (lib/sentenceLexer.mll[532,31936+20]..[532,31936+33])
                                Pexp_ident "record_string" (lib/sentenceLexer.mll[532,31936+20]..[532,31936+33])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[532,31936+34]..[532,31936+44])
                                    Pexp_ident "openingpos" (lib/sentenceLexer.mll[532,31936+34]..[532,31936+44])
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[532,31936+45]..[532,31936+51])
                                    Pexp_ident "buffer" (lib/sentenceLexer.mll[532,31936+45]..[532,31936+51])
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[532,31936+52]..[532,31936+58])
                                    Pexp_ident "lexbuf" (lib/sentenceLexer.mll[532,31936+52]..[532,31936+58])
                              ]
                        ]
                        expression (lib/sentenceLexer.mll[533,31998+6]..[535,32106+27])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lib/sentenceLexer.mll[533,31998+10]..[533,31998+12])
                                Ppat_var "id" (lib/sentenceLexer.mll[533,31998+10]..[533,31998+12])
                              expression (lib/sentenceLexer.mll[533,31998+15]..[533,31998+46])
                                Pexp_apply
                                expression (lib/sentenceLexer.mll[533,31998+15]..[533,31998+29])
                                  Pexp_ident "Printf.sprintf" (lib/sentenceLexer.mll[533,31998+15]..[533,31998+29])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/sentenceLexer.mll[533,31998+30]..[533,31998+38])
                                      Pexp_constant PConst_string("\"%s\"",(lib/sentenceLexer.mll[533,31998+31]..[533,31998+37]),None)
                                  <arg>
                                  Nolabel
                                    expression (lib/sentenceLexer.mll[533,31998+39]..[533,31998+46])
                                      Pexp_ident "content" (lib/sentenceLexer.mll[533,31998+39]..[533,31998+46])
                                ]
                          ]
                          expression (lib/sentenceLexer.mll[534,32048+6]..[535,32106+27])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/sentenceLexer.mll[534,32048+10]..[534,32048+13])
                                  Ppat_var "pos" (lib/sentenceLexer.mll[534,32048+10]..[534,32048+13])
                                expression (lib/sentenceLexer.mll[534,32048+16]..[534,32048+54])
                                  Pexp_apply
                                  expression (lib/sentenceLexer.mll[534,32048+16]..[534,32048+22])
                                    Pexp_ident "import" (lib/sentenceLexer.mll[534,32048+16]..[534,32048+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/sentenceLexer.mll[534,32048+23]..[534,32048+54])
                                        Pexp_tuple
                                        [
                                          expression (lib/sentenceLexer.mll[534,32048+24]..[534,32048+34])
                                            Pexp_ident "openingpos" (lib/sentenceLexer.mll[534,32048+24]..[534,32048+34])
                                          expression (lib/sentenceLexer.mll[534,32048+36]..[534,32048+53])
                                            Pexp_field
                                            expression (lib/sentenceLexer.mll[534,32048+36]..[534,32048+42])
                                              Pexp_ident "lexbuf" (lib/sentenceLexer.mll[534,32048+36]..[534,32048+42])
                                            "lex_curr_p" (lib/sentenceLexer.mll[534,32048+43]..[534,32048+53])
                                        ]
                                  ]
                            ]
                            expression (lib/sentenceLexer.mll[535,32106+6]..[535,32106+27])
                              Pexp_construct "QID" (lib/sentenceLexer.mll[535,32106+6]..[535,32106+9])
                              Some
                                expression (lib/sentenceLexer.mll[535,32106+10]..[535,32106+27])
                                  Pexp_apply
                                  expression (lib/sentenceLexer.mll[535,32106+11]..[535,32106+19])
                                    Pexp_ident "with_pos" (lib/sentenceLexer.mll[535,32106+11]..[535,32106+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/sentenceLexer.mll[535,32106+20]..[535,32106+23])
                                        Pexp_ident "pos" (lib/sentenceLexer.mll[535,32106+20]..[535,32106+23])
                                    <arg>
                                    Nolabel
                                      expression (lib/sentenceLexer.mll[535,32106+24]..[535,32106+26])
                                        Pexp_ident "id" (lib/sentenceLexer.mll[535,32106+24]..[535,32106+26])
                                  ]
                <case>
                  pattern (lib/sentenceLexer.ml[776,32166+4]..[776,32166+6])
                    Ppat_constant PConst_int (12,None)
                  expression (lib/sentenceLexer.mll[538,32206+5]..[538,32206+16])
                    Pexp_construct "NEWLINE" (lib/sentenceLexer.mll[538,32206+7]..[538,32206+14])
                    None
                <case>
                  pattern (lib/sentenceLexer.ml[781,32253+4]..[781,32253+6])
                    Ppat_constant PConst_int (13,None)
                  expression (lib/sentenceLexer.mll[539,32293+31]..[539,32293+42])
                    Pexp_construct "NEWLINE" (lib/sentenceLexer.mll[539,32293+33]..[539,32293+40])
                    None
                <case>
                  pattern (lib/sentenceLexer.ml[786,32366+4]..[786,32366+6])
                    Ppat_constant PConst_int (14,None)
                  expression (lib/sentenceLexer.mll[545,32406+4]..[552,32612+5])
                    Pexp_apply
                    expression (lib/sentenceLexer.mll[551,32591+6]..[551,32591+10])
                      Pexp_ident "main" (lib/sentenceLexer.mll[551,32591+6]..[551,32591+10])
                    [
                      <arg>
                      Nolabel
                        expression (lib/sentenceLexer.mll[551,32591+11]..[551,32591+17])
                          Pexp_ident "lexbuf" (lib/sentenceLexer.mll[551,32591+11]..[551,32591+17])
                    ]
                <case>
                  pattern (lib/sentenceLexer.ml[798,32648+4]..[798,32648+6])
                    Ppat_constant PConst_int (15,None)
                  expression (lib/sentenceLexer.mll[554,32688+4]..[554,32688+11])
                    Pexp_construct "EOF" (lib/sentenceLexer.mll[554,32688+6]..[554,32688+9])
                    None
                <case>
                  pattern (lib/sentenceLexer.ml[803,32730+4]..[803,32730+6])
                    Ppat_constant PConst_int (16,None)
                  expression (lib/sentenceLexer.mll[557,32770+4]..[557,32770+48])
                    Pexp_apply
                    expression (lib/sentenceLexer.mll[557,32770+6]..[557,32770+12])
                      Pexp_ident "error2" (lib/sentenceLexer.mll[557,32770+6]..[557,32770+12])
                    [
                      <arg>
                      Nolabel
                        expression (lib/sentenceLexer.mll[557,32770+13]..[557,32770+19])
                          Pexp_ident "lexbuf" (lib/sentenceLexer.mll[557,32770+13]..[557,32770+19])
                      <arg>
                      Nolabel
                        expression (lib/sentenceLexer.mll[557,32770+20]..[557,32770+46])
                          Pexp_constant PConst_string("unexpected character(s).",(lib/sentenceLexer.mll[557,32770+21]..[557,32770+45]),None)
                    ]
                <case>
                  pattern (lib/sentenceLexer.ml[808,32849+4]..[808,32849+21])
                    Ppat_var "__ocaml_lex_state" (lib/sentenceLexer.ml[808,32849+4]..[808,32849+21])
                  expression (lib/sentenceLexer.ml[808,32849+25]..[809,32908+51])
                    Pexp_sequence
                    expression (lib/sentenceLexer.ml[808,32849+25]..[808,32849+57])
                      Pexp_apply
                      expression (lib/sentenceLexer.ml[808,32849+25]..[808,32849+50])
                        Pexp_field
                        expression (lib/sentenceLexer.ml[808,32849+25]..[808,32849+31])
                          Pexp_ident "lexbuf" (lib/sentenceLexer.ml[808,32849+25]..[808,32849+31])
                        "Lexing.refill_buff" (lib/sentenceLexer.ml[808,32849+32]..[808,32849+50])
                      [
                        <arg>
                        Nolabel
                          expression (lib/sentenceLexer.ml[808,32849+51]..[808,32849+57])
                            Pexp_ident "lexbuf" (lib/sentenceLexer.ml[808,32849+51]..[808,32849+57])
                      ]
                    expression (lib/sentenceLexer.ml[809,32908+6]..[809,32908+51])
                      Pexp_apply
                      expression (lib/sentenceLexer.ml[809,32908+6]..[809,32908+26])
                        Pexp_ident "__ocaml_lex_main_rec" (lib/sentenceLexer.ml[809,32908+6]..[809,32908+26])
                      [
                        <arg>
                        Nolabel
                          expression (lib/sentenceLexer.ml[809,32908+27]..[809,32908+33])
                            Pexp_ident "lexbuf" (lib/sentenceLexer.ml[809,32908+27]..[809,32908+33])
                        <arg>
                        Nolabel
                          expression (lib/sentenceLexer.ml[809,32908+34]..[809,32908+51])
                            Pexp_ident "__ocaml_lex_state" (lib/sentenceLexer.ml[809,32908+34]..[809,32908+51])
                      ]
              ]
      <def>
        pattern (lib/sentenceLexer.ml[811,32961+4]..[811,32961+17])
          Ppat_var "record_string" (lib/sentenceLexer.ml[811,32961+4]..[811,32961+17])
        expression (lib/sentenceLexer.ml[811,32961+18]..[812,33006+60]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/sentenceLexer.ml[811,32961+18]..[811,32961+28])
            Ppat_var "openingpos" (lib/sentenceLexer.ml[811,32961+18]..[811,32961+28])
          expression (lib/sentenceLexer.ml[811,32961+29]..[812,33006+60]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/sentenceLexer.ml[811,32961+29]..[811,32961+35])
              Ppat_var "buffer" (lib/sentenceLexer.ml[811,32961+29]..[811,32961+35])
            expression (lib/sentenceLexer.ml[811,32961+36]..[812,33006+60]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/sentenceLexer.ml[811,32961+36]..[811,32961+42])
                Ppat_var "lexbuf" (lib/sentenceLexer.ml[811,32961+36]..[811,32961+42])
              expression (lib/sentenceLexer.ml[812,33006+3]..[812,33006+60])
                Pexp_apply
                expression (lib/sentenceLexer.ml[812,33006+3]..[812,33006+32])
                  Pexp_ident "__ocaml_lex_record_string_rec" (lib/sentenceLexer.ml[812,33006+3]..[812,33006+32])
                [
                  <arg>
                  Nolabel
                    expression (lib/sentenceLexer.ml[812,33006+33]..[812,33006+43])
                      Pexp_ident "openingpos" (lib/sentenceLexer.ml[812,33006+33]..[812,33006+43])
                  <arg>
                  Nolabel
                    expression (lib/sentenceLexer.ml[812,33006+44]..[812,33006+50])
                      Pexp_ident "buffer" (lib/sentenceLexer.ml[812,33006+44]..[812,33006+50])
                  <arg>
                  Nolabel
                    expression (lib/sentenceLexer.ml[812,33006+51]..[812,33006+57])
                      Pexp_ident "lexbuf" (lib/sentenceLexer.ml[812,33006+51]..[812,33006+57])
                  <arg>
                  Nolabel
                    expression (lib/sentenceLexer.ml[812,33006+58]..[812,33006+60])
                      Pexp_constant PConst_int (27,None)
                ]
      <def>
        pattern (lib/sentenceLexer.ml[813,33067+4]..[813,33067+33])
          Ppat_var "__ocaml_lex_record_string_rec" (lib/sentenceLexer.ml[813,33067+4]..[813,33067+33])
        expression (lib/sentenceLexer.ml[813,33067+34]..[856,34480+78]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/sentenceLexer.ml[813,33067+34]..[813,33067+44])
            Ppat_var "openingpos" (lib/sentenceLexer.ml[813,33067+34]..[813,33067+44])
          expression (lib/sentenceLexer.ml[813,33067+45]..[856,34480+78]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/sentenceLexer.ml[813,33067+45]..[813,33067+51])
              Ppat_var "buffer" (lib/sentenceLexer.ml[813,33067+45]..[813,33067+51])
            expression (lib/sentenceLexer.ml[813,33067+52]..[856,34480+78]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/sentenceLexer.ml[813,33067+52]..[813,33067+58])
                Ppat_var "lexbuf" (lib/sentenceLexer.ml[813,33067+52]..[813,33067+58])
              expression (lib/sentenceLexer.ml[813,33067+59]..[856,34480+78]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lib/sentenceLexer.ml[813,33067+59]..[813,33067+76])
                  Ppat_var "__ocaml_lex_state" (lib/sentenceLexer.ml[813,33067+59]..[813,33067+76])
                expression (lib/sentenceLexer.ml[814,33146+2]..[856,34480+78])
                  Pexp_match
                  expression (lib/sentenceLexer.ml[814,33146+8]..[814,33146+65])
                    Pexp_apply
                    expression (lib/sentenceLexer.ml[814,33146+8]..[814,33146+21])
                      Pexp_ident "Lexing.engine" (lib/sentenceLexer.ml[814,33146+8]..[814,33146+21])
                    [
                      <arg>
                      Nolabel
                        expression (lib/sentenceLexer.ml[814,33146+22]..[814,33146+40])
                          Pexp_ident "__ocaml_lex_tables" (lib/sentenceLexer.ml[814,33146+22]..[814,33146+40])
                      <arg>
                      Nolabel
                        expression (lib/sentenceLexer.ml[814,33146+41]..[814,33146+58])
                          Pexp_ident "__ocaml_lex_state" (lib/sentenceLexer.ml[814,33146+41]..[814,33146+58])
                      <arg>
                      Nolabel
                        expression (lib/sentenceLexer.ml[814,33146+59]..[814,33146+65])
                          Pexp_ident "lexbuf" (lib/sentenceLexer.ml[814,33146+59]..[814,33146+65])
                    ]
                  [
                    <case>
                      pattern (lib/sentenceLexer.ml[815,33217+8]..[815,33217+9])
                        Ppat_constant PConst_int (0,None)
                      expression (lib/sentenceLexer.mll[561,33260+4]..[561,33260+30])
                        Pexp_apply
                        expression (lib/sentenceLexer.mll[561,33260+6]..[561,33260+21])
                          Pexp_ident "Buffer.contents" (lib/sentenceLexer.mll[561,33260+6]..[561,33260+21])
                        [
                          <arg>
                          Nolabel
                            expression (lib/sentenceLexer.mll[561,33260+22]..[561,33260+28])
                              Pexp_ident "buffer" (lib/sentenceLexer.mll[561,33260+22]..[561,33260+28])
                        ]
                    <case>
                      pattern (lib/sentenceLexer.ml[820,33321+4]..[820,33321+5])
                        Ppat_constant PConst_int (1,None)
                      expression (lib/sentenceLexer.ml[821,33330+0]..lib/sentenceLexer.mll[566,33756+46])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/sentenceLexer.mll[562,33364+56]..[562,33364+64])
                              Ppat_var "sequence" (lib/sentenceLexer.mll[562,33364+56]..[562,33364+64])
                            expression (lib/sentenceLexer.ml[825,33458+2]..[825,33458+88])
                              Pexp_apply
                              expression (lib/sentenceLexer.ml[825,33458+2]..[825,33458+19])
                                Pexp_ident "Lexing.sub_lexeme" (lib/sentenceLexer.ml[825,33458+2]..[825,33458+19])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.ml[825,33458+20]..[825,33458+26])
                                    Pexp_ident "lexbuf" (lib/sentenceLexer.ml[825,33458+20]..[825,33458+26])
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.ml[825,33458+27]..[825,33458+54])
                                    Pexp_field
                                    expression (lib/sentenceLexer.ml[825,33458+27]..[825,33458+33])
                                      Pexp_ident "lexbuf" (lib/sentenceLexer.ml[825,33458+27]..[825,33458+33])
                                    "Lexing.lex_start_pos" (lib/sentenceLexer.ml[825,33458+34]..[825,33458+54])
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.ml[825,33458+55]..[825,33458+88])
                                    Pexp_apply
                                    expression (lib/sentenceLexer.ml[825,33458+84]..[825,33458+85])
                                      Pexp_ident "+" (lib/sentenceLexer.ml[825,33458+84]..[825,33458+85])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/sentenceLexer.ml[825,33458+56]..[825,33458+83])
                                          Pexp_field
                                          expression (lib/sentenceLexer.ml[825,33458+56]..[825,33458+62])
                                            Pexp_ident "lexbuf" (lib/sentenceLexer.ml[825,33458+56]..[825,33458+62])
                                          "Lexing.lex_start_pos" (lib/sentenceLexer.ml[825,33458+63]..[825,33458+83])
                                      <arg>
                                      Nolabel
                                        expression (lib/sentenceLexer.ml[825,33458+86]..[825,33458+87])
                                          Pexp_constant PConst_int (2,None)
                                    ]
                              ]
                        ]
                        expression (lib/sentenceLexer.mll[563,33580+4]..[566,33756+46])
                          Pexp_sequence
                          expression (lib/sentenceLexer.mll[564,33653+6]..[564,33653+39])
                            Pexp_apply
                            expression (lib/sentenceLexer.mll[564,33653+6]..[564,33653+23])
                              Pexp_ident "Buffer.add_string" (lib/sentenceLexer.mll[564,33653+6]..[564,33653+23])
                            [
                              <arg>
                              Nolabel
                                expression (lib/sentenceLexer.mll[564,33653+24]..[564,33653+30])
                                  Pexp_ident "buffer" (lib/sentenceLexer.mll[564,33653+24]..[564,33653+30])
                              <arg>
                              Nolabel
                                expression (lib/sentenceLexer.mll[564,33653+31]..[564,33653+39])
                                  Pexp_ident "sequence" (lib/sentenceLexer.mll[564,33653+31]..[564,33653+39])
                            ]
                          expression (lib/sentenceLexer.mll[565,33694+6]..[566,33756+44])
                            Pexp_sequence
                            expression (lib/sentenceLexer.mll[565,33694+6]..[565,33694+60])
                              Pexp_apply
                              expression (lib/sentenceLexer.mll[565,33694+7]..[565,33694+20])
                                Pexp_ident "print_endline" (lib/sentenceLexer.mll[565,33694+7]..[565,33694+20])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[565,33694+21]..[565,33694+59])
                                    Pexp_apply
                                    expression (lib/sentenceLexer.mll[565,33694+22]..[565,33694+36])
                                      Pexp_ident "Batteries.dump" (lib/sentenceLexer.mll[565,33694+22]..[565,33694+36])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/sentenceLexer.mll[565,33694+37]..[565,33694+58])
                                          Pexp_tuple
                                          [
                                            expression (lib/sentenceLexer.mll[565,33694+38]..[565,33694+48])
                                              Pexp_constant PConst_string("DEBUG:rs",(lib/sentenceLexer.mll[565,33694+39]..[565,33694+47]),None)
                                            expression (lib/sentenceLexer.mll[565,33694+49]..[565,33694+57])
                                              Pexp_ident "sequence" (lib/sentenceLexer.mll[565,33694+49]..[565,33694+57])
                                          ]
                                    ]
                              ]
                            expression (lib/sentenceLexer.mll[566,33756+6]..[566,33756+44])
                              Pexp_apply
                              expression (lib/sentenceLexer.mll[566,33756+6]..[566,33756+19])
                                Pexp_ident "record_string" (lib/sentenceLexer.mll[566,33756+6]..[566,33756+19])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[566,33756+20]..[566,33756+30])
                                    Pexp_ident "openingpos" (lib/sentenceLexer.mll[566,33756+20]..[566,33756+30])
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[566,33756+31]..[566,33756+37])
                                    Pexp_ident "buffer" (lib/sentenceLexer.mll[566,33756+31]..[566,33756+37])
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[566,33756+38]..[566,33756+44])
                                    Pexp_ident "lexbuf" (lib/sentenceLexer.mll[566,33756+38]..[566,33756+44])
                              ]
                    <case>
                      pattern (lib/sentenceLexer.ml[833,33833+4]..[833,33833+5])
                        Ppat_constant PConst_int (2,None)
                      expression (lib/sentenceLexer.mll[568,33872+4]..[568,33872+50])
                        Pexp_apply
                        expression (lib/sentenceLexer.mll[568,33872+6]..[568,33872+12])
                          Pexp_ident "error2" (lib/sentenceLexer.mll[568,33872+6]..[568,33872+12])
                        [
                          <arg>
                          Nolabel
                            expression (lib/sentenceLexer.mll[568,33872+13]..[568,33872+19])
                              Pexp_ident "lexbuf" (lib/sentenceLexer.mll[568,33872+13]..[568,33872+19])
                          <arg>
                          Nolabel
                            expression (lib/sentenceLexer.mll[568,33872+20]..[568,33872+48])
                              Pexp_constant PConst_string("illegal newline in string.",(lib/sentenceLexer.mll[568,33872+21]..[568,33872+47]),None)
                        ]
                    <case>
                      pattern (lib/sentenceLexer.ml[838,33953+4]..[838,33953+5])
                        Ppat_constant PConst_int (3,None)
                      expression (lib/sentenceLexer.mll[570,33992+4]..[570,33992+48])
                        Pexp_apply
                        expression (lib/sentenceLexer.mll[570,33992+6]..[570,33992+12])
                          Pexp_ident "error1" (lib/sentenceLexer.mll[570,33992+6]..[570,33992+12])
                        [
                          <arg>
                          Nolabel
                            expression (lib/sentenceLexer.mll[570,33992+13]..[570,33992+23])
                              Pexp_ident "openingpos" (lib/sentenceLexer.mll[570,33992+13]..[570,33992+23])
                          <arg>
                          Nolabel
                            expression (lib/sentenceLexer.mll[570,33992+24]..[570,33992+46])
                              Pexp_constant PConst_string("unterminated string.",(lib/sentenceLexer.mll[570,33992+25]..[570,33992+45]),None)
                        ]
                    <case>
                      pattern (lib/sentenceLexer.ml[843,34071+4]..[843,34071+5])
                        Ppat_constant PConst_int (4,None)
                      expression (lib/sentenceLexer.ml[844,34080+0]..lib/sentenceLexer.mll[574,34344+46])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/sentenceLexer.mll[571,34114+7]..[571,34114+8])
                              Ppat_var "c" (lib/sentenceLexer.mll[571,34114+7]..[571,34114+8])
                            expression (lib/sentenceLexer.ml[848,34152+2]..[848,34152+59])
                              Pexp_apply
                              expression (lib/sentenceLexer.ml[848,34152+2]..[848,34152+24])
                                Pexp_ident "Lexing.sub_lexeme_char" (lib/sentenceLexer.ml[848,34152+2]..[848,34152+24])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.ml[848,34152+25]..[848,34152+31])
                                    Pexp_ident "lexbuf" (lib/sentenceLexer.ml[848,34152+25]..[848,34152+31])
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.ml[848,34152+32]..[848,34152+59])
                                    Pexp_field
                                    expression (lib/sentenceLexer.ml[848,34152+32]..[848,34152+38])
                                      Pexp_ident "lexbuf" (lib/sentenceLexer.ml[848,34152+32]..[848,34152+38])
                                    "Lexing.lex_start_pos" (lib/sentenceLexer.ml[848,34152+39]..[848,34152+59])
                              ]
                        ]
                        expression (lib/sentenceLexer.mll[572,34245+9]..[574,34344+46])
                          Pexp_sequence
                          expression (lib/sentenceLexer.mll[572,34245+11]..[572,34245+35])
                            Pexp_apply
                            expression (lib/sentenceLexer.mll[572,34245+11]..[572,34245+26])
                              Pexp_ident "Buffer.add_char" (lib/sentenceLexer.mll[572,34245+11]..[572,34245+26])
                            [
                              <arg>
                              Nolabel
                                expression (lib/sentenceLexer.mll[572,34245+27]..[572,34245+33])
                                  Pexp_ident "buffer" (lib/sentenceLexer.mll[572,34245+27]..[572,34245+33])
                              <arg>
                              Nolabel
                                expression (lib/sentenceLexer.mll[572,34245+34]..[572,34245+35])
                                  Pexp_ident "c" (lib/sentenceLexer.mll[572,34245+34]..[572,34245+35])
                            ]
                          expression (lib/sentenceLexer.mll[573,34282+11]..[574,34344+44])
                            Pexp_sequence
                            expression (lib/sentenceLexer.mll[573,34282+11]..[573,34282+60])
                              Pexp_apply
                              expression (lib/sentenceLexer.mll[573,34282+12]..[573,34282+25])
                                Pexp_ident "print_endline" (lib/sentenceLexer.mll[573,34282+12]..[573,34282+25])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[573,34282+26]..[573,34282+59])
                                    Pexp_apply
                                    expression (lib/sentenceLexer.mll[573,34282+27]..[573,34282+41])
                                      Pexp_ident "Batteries.dump" (lib/sentenceLexer.mll[573,34282+27]..[573,34282+41])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/sentenceLexer.mll[573,34282+42]..[573,34282+58])
                                          Pexp_tuple
                                          [
                                            expression (lib/sentenceLexer.mll[573,34282+43]..[573,34282+54])
                                              Pexp_constant PConst_string("DEBUG2:rs",(lib/sentenceLexer.mll[573,34282+44]..[573,34282+53]),None)
                                            expression (lib/sentenceLexer.mll[573,34282+56]..[573,34282+57])
                                              Pexp_ident "c" (lib/sentenceLexer.mll[573,34282+56]..[573,34282+57])
                                          ]
                                    ]
                              ]
                            expression (lib/sentenceLexer.mll[574,34344+6]..[574,34344+44])
                              Pexp_apply
                              expression (lib/sentenceLexer.mll[574,34344+6]..[574,34344+19])
                                Pexp_ident "record_string" (lib/sentenceLexer.mll[574,34344+6]..[574,34344+19])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[574,34344+20]..[574,34344+30])
                                    Pexp_ident "openingpos" (lib/sentenceLexer.mll[574,34344+20]..[574,34344+30])
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[574,34344+31]..[574,34344+37])
                                    Pexp_ident "buffer" (lib/sentenceLexer.mll[574,34344+31]..[574,34344+37])
                                <arg>
                                Nolabel
                                  expression (lib/sentenceLexer.mll[574,34344+38]..[574,34344+44])
                                    Pexp_ident "lexbuf" (lib/sentenceLexer.mll[574,34344+38]..[574,34344+44])
                              ]
                    <case>
                      pattern (lib/sentenceLexer.ml[855,34421+4]..[855,34421+21])
                        Ppat_var "__ocaml_lex_state" (lib/sentenceLexer.ml[855,34421+4]..[855,34421+21])
                      expression (lib/sentenceLexer.ml[855,34421+25]..[856,34480+78])
                        Pexp_sequence
                        expression (lib/sentenceLexer.ml[855,34421+25]..[855,34421+57])
                          Pexp_apply
                          expression (lib/sentenceLexer.ml[855,34421+25]..[855,34421+50])
                            Pexp_field
                            expression (lib/sentenceLexer.ml[855,34421+25]..[855,34421+31])
                              Pexp_ident "lexbuf" (lib/sentenceLexer.ml[855,34421+25]..[855,34421+31])
                            "Lexing.refill_buff" (lib/sentenceLexer.ml[855,34421+32]..[855,34421+50])
                          [
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.ml[855,34421+51]..[855,34421+57])
                                Pexp_ident "lexbuf" (lib/sentenceLexer.ml[855,34421+51]..[855,34421+57])
                          ]
                        expression (lib/sentenceLexer.ml[856,34480+6]..[856,34480+78])
                          Pexp_apply
                          expression (lib/sentenceLexer.ml[856,34480+6]..[856,34480+35])
                            Pexp_ident "__ocaml_lex_record_string_rec" (lib/sentenceLexer.ml[856,34480+6]..[856,34480+35])
                          [
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.ml[856,34480+36]..[856,34480+46])
                                Pexp_ident "openingpos" (lib/sentenceLexer.ml[856,34480+36]..[856,34480+46])
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.ml[856,34480+47]..[856,34480+53])
                                Pexp_ident "buffer" (lib/sentenceLexer.ml[856,34480+47]..[856,34480+53])
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.ml[856,34480+54]..[856,34480+60])
                                Pexp_ident "lexbuf" (lib/sentenceLexer.ml[856,34480+54]..[856,34480+60])
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.ml[856,34480+61]..[856,34480+78])
                                Pexp_ident "__ocaml_lex_state" (lib/sentenceLexer.ml[856,34480+61]..[856,34480+78])
                          ]
                  ]
      <def>
        pattern (lib/sentenceLexer.ml[858,34560+4]..[858,34560+13])
          Ppat_var "charclass" (lib/sentenceLexer.ml[858,34560+4]..[858,34560+13])
        expression (lib/sentenceLexer.ml[858,34560+14]..[859,34601+56]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/sentenceLexer.ml[858,34560+14]..[858,34560+24])
            Ppat_var "openingpos" (lib/sentenceLexer.ml[858,34560+14]..[858,34560+24])
          expression (lib/sentenceLexer.ml[858,34560+25]..[859,34601+56]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/sentenceLexer.ml[858,34560+25]..[858,34560+31])
              Ppat_var "buffer" (lib/sentenceLexer.ml[858,34560+25]..[858,34560+31])
            expression (lib/sentenceLexer.ml[858,34560+32]..[859,34601+56]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/sentenceLexer.ml[858,34560+32]..[858,34560+38])
                Ppat_var "lexbuf" (lib/sentenceLexer.ml[858,34560+32]..[858,34560+38])
              expression (lib/sentenceLexer.ml[859,34601+3]..[859,34601+56])
                Pexp_apply
                expression (lib/sentenceLexer.ml[859,34601+3]..[859,34601+28])
                  Pexp_ident "__ocaml_lex_charclass_rec" (lib/sentenceLexer.ml[859,34601+3]..[859,34601+28])
                [
                  <arg>
                  Nolabel
                    expression (lib/sentenceLexer.ml[859,34601+29]..[859,34601+39])
                      Pexp_ident "openingpos" (lib/sentenceLexer.ml[859,34601+29]..[859,34601+39])
                  <arg>
                  Nolabel
                    expression (lib/sentenceLexer.ml[859,34601+40]..[859,34601+46])
                      Pexp_ident "buffer" (lib/sentenceLexer.ml[859,34601+40]..[859,34601+46])
                  <arg>
                  Nolabel
                    expression (lib/sentenceLexer.ml[859,34601+47]..[859,34601+53])
                      Pexp_ident "lexbuf" (lib/sentenceLexer.ml[859,34601+47]..[859,34601+53])
                  <arg>
                  Nolabel
                    expression (lib/sentenceLexer.ml[859,34601+54]..[859,34601+56])
                      Pexp_constant PConst_int (35,None)
                ]
      <def>
        pattern (lib/sentenceLexer.ml[860,34658+4]..[860,34658+29])
          Ppat_var "__ocaml_lex_charclass_rec" (lib/sentenceLexer.ml[860,34658+4]..[860,34658+29])
        expression (lib/sentenceLexer.ml[860,34658+30]..[896,35701+74]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/sentenceLexer.ml[860,34658+30]..[860,34658+40])
            Ppat_var "openingpos" (lib/sentenceLexer.ml[860,34658+30]..[860,34658+40])
          expression (lib/sentenceLexer.ml[860,34658+41]..[896,35701+74]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/sentenceLexer.ml[860,34658+41]..[860,34658+47])
              Ppat_var "buffer" (lib/sentenceLexer.ml[860,34658+41]..[860,34658+47])
            expression (lib/sentenceLexer.ml[860,34658+48]..[896,35701+74]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/sentenceLexer.ml[860,34658+48]..[860,34658+54])
                Ppat_var "lexbuf" (lib/sentenceLexer.ml[860,34658+48]..[860,34658+54])
              expression (lib/sentenceLexer.ml[860,34658+55]..[896,35701+74]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lib/sentenceLexer.ml[860,34658+55]..[860,34658+72])
                  Ppat_var "__ocaml_lex_state" (lib/sentenceLexer.ml[860,34658+55]..[860,34658+72])
                expression (lib/sentenceLexer.ml[861,34733+2]..[896,35701+74])
                  Pexp_match
                  expression (lib/sentenceLexer.ml[861,34733+8]..[861,34733+65])
                    Pexp_apply
                    expression (lib/sentenceLexer.ml[861,34733+8]..[861,34733+21])
                      Pexp_ident "Lexing.engine" (lib/sentenceLexer.ml[861,34733+8]..[861,34733+21])
                    [
                      <arg>
                      Nolabel
                        expression (lib/sentenceLexer.ml[861,34733+22]..[861,34733+40])
                          Pexp_ident "__ocaml_lex_tables" (lib/sentenceLexer.ml[861,34733+22]..[861,34733+40])
                      <arg>
                      Nolabel
                        expression (lib/sentenceLexer.ml[861,34733+41]..[861,34733+58])
                          Pexp_ident "__ocaml_lex_state" (lib/sentenceLexer.ml[861,34733+41]..[861,34733+58])
                      <arg>
                      Nolabel
                        expression (lib/sentenceLexer.ml[861,34733+59]..[861,34733+65])
                          Pexp_ident "lexbuf" (lib/sentenceLexer.ml[861,34733+59]..[861,34733+65])
                    ]
                  [
                    <case>
                      pattern (lib/sentenceLexer.ml[862,34804+8]..[862,34804+9])
                        Ppat_constant PConst_int (0,None)
                      expression (lib/sentenceLexer.mll[577,34847+8]..[579,34963+1])
                        Pexp_sequence
                        expression (lib/sentenceLexer.mll[577,34847+10]..[577,34847+69])
                          Pexp_apply
                          expression (lib/sentenceLexer.mll[577,34847+11]..[577,34847+24])
                            Pexp_ident "print_endline" (lib/sentenceLexer.mll[577,34847+11]..[577,34847+24])
                          [
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.mll[577,34847+25]..[577,34847+68])
                                Pexp_apply
                                expression (lib/sentenceLexer.mll[577,34847+26]..[577,34847+40])
                                  Pexp_ident "Batteries.dump" (lib/sentenceLexer.mll[577,34847+26]..[577,34847+40])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/sentenceLexer.mll[577,34847+41]..[577,34847+67])
                                      Pexp_apply
                                      expression (lib/sentenceLexer.mll[577,34847+44]..[577,34847+57])
                                        Pexp_ident "Lexing.lexeme" (lib/sentenceLexer.mll[577,34847+44]..[577,34847+57])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/sentenceLexer.mll[577,34847+58]..[577,34847+64])
                                            Pexp_ident "lexbuf" (lib/sentenceLexer.mll[577,34847+58]..[577,34847+64])
                                      ]
                                ]
                          ]
                        expression (lib/sentenceLexer.mll[578,34918+10]..[578,34918+44])
                          Pexp_apply
                          expression (lib/sentenceLexer.mll[578,34918+10]..[578,34918+19])
                            Pexp_ident "charclass" (lib/sentenceLexer.mll[578,34918+10]..[578,34918+19])
                          [
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.mll[578,34918+20]..[578,34918+30])
                                Pexp_ident "openingpos" (lib/sentenceLexer.mll[578,34918+20]..[578,34918+30])
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.mll[578,34918+31]..[578,34918+37])
                                Pexp_ident "buffer" (lib/sentenceLexer.mll[578,34918+31]..[578,34918+37])
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.mll[578,34918+38]..[578,34918+44])
                                Pexp_ident "lexbuf" (lib/sentenceLexer.mll[578,34918+38]..[578,34918+44])
                          ]
                    <case>
                      pattern (lib/sentenceLexer.ml[869,34995+4]..[869,34995+5])
                        Ppat_constant PConst_int (1,None)
                      expression (lib/sentenceLexer.mll[581,35034+6]..[584,35144+1])
                        Pexp_sequence
                        expression (lib/sentenceLexer.mll[581,35034+8]..[581,35034+67])
                          Pexp_apply
                          expression (lib/sentenceLexer.mll[581,35034+9]..[581,35034+22])
                            Pexp_ident "print_endline" (lib/sentenceLexer.mll[581,35034+9]..[581,35034+22])
                          [
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.mll[581,35034+23]..[581,35034+66])
                                Pexp_apply
                                expression (lib/sentenceLexer.mll[581,35034+24]..[581,35034+38])
                                  Pexp_ident "Batteries.dump" (lib/sentenceLexer.mll[581,35034+24]..[581,35034+38])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/sentenceLexer.mll[581,35034+39]..[581,35034+65])
                                      Pexp_apply
                                      expression (lib/sentenceLexer.mll[581,35034+42]..[581,35034+55])
                                        Pexp_ident "Lexing.lexeme" (lib/sentenceLexer.mll[581,35034+42]..[581,35034+55])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/sentenceLexer.mll[581,35034+56]..[581,35034+62])
                                            Pexp_ident "lexbuf" (lib/sentenceLexer.mll[581,35034+56]..[581,35034+62])
                                      ]
                                ]
                          ]
                        expression (lib/sentenceLexer.mll[583,35129+8]..[583,35129+14])
                          Pexp_constant PConst_string("TODO",(lib/sentenceLexer.mll[583,35129+9]..[583,35129+13]),None)
                    <case>
                      pattern (lib/sentenceLexer.ml[877,35176+4]..[877,35176+5])
                        Ppat_constant PConst_int (2,None)
                      expression (lib/sentenceLexer.mll[585,35215+6]..[589,35357+1])
                        Pexp_sequence
                        expression (lib/sentenceLexer.mll[585,35215+8]..[585,35215+67])
                          Pexp_apply
                          expression (lib/sentenceLexer.mll[585,35215+9]..[585,35215+22])
                            Pexp_ident "print_endline" (lib/sentenceLexer.mll[585,35215+9]..[585,35215+22])
                          [
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.mll[585,35215+23]..[585,35215+66])
                                Pexp_apply
                                expression (lib/sentenceLexer.mll[585,35215+24]..[585,35215+38])
                                  Pexp_ident "Batteries.dump" (lib/sentenceLexer.mll[585,35215+24]..[585,35215+38])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/sentenceLexer.mll[585,35215+39]..[585,35215+65])
                                      Pexp_apply
                                      expression (lib/sentenceLexer.mll[585,35215+42]..[585,35215+55])
                                        Pexp_ident "Lexing.lexeme" (lib/sentenceLexer.mll[585,35215+42]..[585,35215+55])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/sentenceLexer.mll[585,35215+56]..[585,35215+62])
                                            Pexp_ident "lexbuf" (lib/sentenceLexer.mll[585,35215+56]..[585,35215+62])
                                      ]
                                ]
                          ]
                        expression (lib/sentenceLexer.mll[588,35314+8]..[588,35314+42])
                          Pexp_apply
                          expression (lib/sentenceLexer.mll[588,35314+8]..[588,35314+17])
                            Pexp_ident "charclass" (lib/sentenceLexer.mll[588,35314+8]..[588,35314+17])
                          [
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.mll[588,35314+18]..[588,35314+28])
                                Pexp_ident "openingpos" (lib/sentenceLexer.mll[588,35314+18]..[588,35314+28])
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.mll[588,35314+29]..[588,35314+35])
                                Pexp_ident "buffer" (lib/sentenceLexer.mll[588,35314+29]..[588,35314+35])
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.mll[588,35314+36]..[588,35314+42])
                                Pexp_ident "lexbuf" (lib/sentenceLexer.mll[588,35314+36]..[588,35314+42])
                          ]
                    <case>
                      pattern (lib/sentenceLexer.ml[886,35389+4]..[886,35389+5])
                        Ppat_constant PConst_int (3,None)
                      expression (lib/sentenceLexer.mll[590,35428+4]..[594,35606+5])
                        Pexp_sequence
                        expression (lib/sentenceLexer.mll[591,35434+6]..[591,35434+65])
                          Pexp_apply
                          expression (lib/sentenceLexer.mll[591,35434+7]..[591,35434+20])
                            Pexp_ident "print_endline" (lib/sentenceLexer.mll[591,35434+7]..[591,35434+20])
                          [
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.mll[591,35434+21]..[591,35434+64])
                                Pexp_apply
                                expression (lib/sentenceLexer.mll[591,35434+22]..[591,35434+36])
                                  Pexp_ident "Batteries.dump" (lib/sentenceLexer.mll[591,35434+22]..[591,35434+36])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/sentenceLexer.mll[591,35434+37]..[591,35434+63])
                                      Pexp_apply
                                      expression (lib/sentenceLexer.mll[591,35434+40]..[591,35434+53])
                                        Pexp_ident "Lexing.lexeme" (lib/sentenceLexer.mll[591,35434+40]..[591,35434+53])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/sentenceLexer.mll[591,35434+54]..[591,35434+60])
                                            Pexp_ident "lexbuf" (lib/sentenceLexer.mll[591,35434+54]..[591,35434+60])
                                      ]
                                ]
                          ]
                        expression (lib/sentenceLexer.mll[593,35563+8]..[593,35563+42])
                          Pexp_apply
                          expression (lib/sentenceLexer.mll[593,35563+8]..[593,35563+17])
                            Pexp_ident "charclass" (lib/sentenceLexer.mll[593,35563+8]..[593,35563+17])
                          [
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.mll[593,35563+18]..[593,35563+28])
                                Pexp_ident "openingpos" (lib/sentenceLexer.mll[593,35563+18]..[593,35563+28])
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.mll[593,35563+29]..[593,35563+35])
                                Pexp_ident "buffer" (lib/sentenceLexer.mll[593,35563+29]..[593,35563+35])
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.mll[593,35563+36]..[593,35563+42])
                                Pexp_ident "lexbuf" (lib/sentenceLexer.mll[593,35563+36]..[593,35563+42])
                          ]
                    <case>
                      pattern (lib/sentenceLexer.ml[895,35642+4]..[895,35642+21])
                        Ppat_var "__ocaml_lex_state" (lib/sentenceLexer.ml[895,35642+4]..[895,35642+21])
                      expression (lib/sentenceLexer.ml[895,35642+25]..[896,35701+74])
                        Pexp_sequence
                        expression (lib/sentenceLexer.ml[895,35642+25]..[895,35642+57])
                          Pexp_apply
                          expression (lib/sentenceLexer.ml[895,35642+25]..[895,35642+50])
                            Pexp_field
                            expression (lib/sentenceLexer.ml[895,35642+25]..[895,35642+31])
                              Pexp_ident "lexbuf" (lib/sentenceLexer.ml[895,35642+25]..[895,35642+31])
                            "Lexing.refill_buff" (lib/sentenceLexer.ml[895,35642+32]..[895,35642+50])
                          [
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.ml[895,35642+51]..[895,35642+57])
                                Pexp_ident "lexbuf" (lib/sentenceLexer.ml[895,35642+51]..[895,35642+57])
                          ]
                        expression (lib/sentenceLexer.ml[896,35701+6]..[896,35701+74])
                          Pexp_apply
                          expression (lib/sentenceLexer.ml[896,35701+6]..[896,35701+31])
                            Pexp_ident "__ocaml_lex_charclass_rec" (lib/sentenceLexer.ml[896,35701+6]..[896,35701+31])
                          [
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.ml[896,35701+32]..[896,35701+42])
                                Pexp_ident "openingpos" (lib/sentenceLexer.ml[896,35701+32]..[896,35701+42])
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.ml[896,35701+43]..[896,35701+49])
                                Pexp_ident "buffer" (lib/sentenceLexer.ml[896,35701+43]..[896,35701+49])
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.ml[896,35701+50]..[896,35701+56])
                                Pexp_ident "lexbuf" (lib/sentenceLexer.ml[896,35701+50]..[896,35701+56])
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.ml[896,35701+57]..[896,35701+74])
                                Pexp_ident "__ocaml_lex_state" (lib/sentenceLexer.ml[896,35701+57]..[896,35701+74])
                          ]
                  ]
      <def>
        pattern (lib/sentenceLexer.ml[898,35777+4]..[898,35777+12])
          Ppat_var "subgroup" (lib/sentenceLexer.ml[898,35777+4]..[898,35777+12])
        expression (lib/sentenceLexer.ml[898,35777+13]..[899,35817+55]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/sentenceLexer.ml[898,35777+13]..[898,35777+23])
            Ppat_var "openingpos" (lib/sentenceLexer.ml[898,35777+13]..[898,35777+23])
          expression (lib/sentenceLexer.ml[898,35777+24]..[899,35817+55]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/sentenceLexer.ml[898,35777+24]..[898,35777+30])
              Ppat_var "buffer" (lib/sentenceLexer.ml[898,35777+24]..[898,35777+30])
            expression (lib/sentenceLexer.ml[898,35777+31]..[899,35817+55]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/sentenceLexer.ml[898,35777+31]..[898,35777+37])
                Ppat_var "lexbuf" (lib/sentenceLexer.ml[898,35777+31]..[898,35777+37])
              expression (lib/sentenceLexer.ml[899,35817+3]..[899,35817+55])
                Pexp_apply
                expression (lib/sentenceLexer.ml[899,35817+3]..[899,35817+27])
                  Pexp_ident "__ocaml_lex_subgroup_rec" (lib/sentenceLexer.ml[899,35817+3]..[899,35817+27])
                [
                  <arg>
                  Nolabel
                    expression (lib/sentenceLexer.ml[899,35817+28]..[899,35817+38])
                      Pexp_ident "openingpos" (lib/sentenceLexer.ml[899,35817+28]..[899,35817+38])
                  <arg>
                  Nolabel
                    expression (lib/sentenceLexer.ml[899,35817+39]..[899,35817+45])
                      Pexp_ident "buffer" (lib/sentenceLexer.ml[899,35817+39]..[899,35817+45])
                  <arg>
                  Nolabel
                    expression (lib/sentenceLexer.ml[899,35817+46]..[899,35817+52])
                      Pexp_ident "lexbuf" (lib/sentenceLexer.ml[899,35817+46]..[899,35817+52])
                  <arg>
                  Nolabel
                    expression (lib/sentenceLexer.ml[899,35817+53]..[899,35817+55])
                      Pexp_constant PConst_int (41,None)
                ]
      <def>
        pattern (lib/sentenceLexer.ml[900,35873+4]..[900,35873+28])
          Ppat_var "__ocaml_lex_subgroup_rec" (lib/sentenceLexer.ml[900,35873+4]..[900,35873+28])
        expression (lib/sentenceLexer.ml[900,35873+29]..[929,36726+73]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/sentenceLexer.ml[900,35873+29]..[900,35873+39])
            Ppat_var "openingpos" (lib/sentenceLexer.ml[900,35873+29]..[900,35873+39])
          expression (lib/sentenceLexer.ml[900,35873+40]..[929,36726+73]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/sentenceLexer.ml[900,35873+40]..[900,35873+46])
              Ppat_var "buffer" (lib/sentenceLexer.ml[900,35873+40]..[900,35873+46])
            expression (lib/sentenceLexer.ml[900,35873+47]..[929,36726+73]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/sentenceLexer.ml[900,35873+47]..[900,35873+53])
                Ppat_var "lexbuf" (lib/sentenceLexer.ml[900,35873+47]..[900,35873+53])
              expression (lib/sentenceLexer.ml[900,35873+54]..[929,36726+73]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lib/sentenceLexer.ml[900,35873+54]..[900,35873+71])
                  Ppat_var "__ocaml_lex_state" (lib/sentenceLexer.ml[900,35873+54]..[900,35873+71])
                expression (lib/sentenceLexer.ml[901,35947+2]..[929,36726+73])
                  Pexp_match
                  expression (lib/sentenceLexer.ml[901,35947+8]..[901,35947+65])
                    Pexp_apply
                    expression (lib/sentenceLexer.ml[901,35947+8]..[901,35947+21])
                      Pexp_ident "Lexing.engine" (lib/sentenceLexer.ml[901,35947+8]..[901,35947+21])
                    [
                      <arg>
                      Nolabel
                        expression (lib/sentenceLexer.ml[901,35947+22]..[901,35947+40])
                          Pexp_ident "__ocaml_lex_tables" (lib/sentenceLexer.ml[901,35947+22]..[901,35947+40])
                      <arg>
                      Nolabel
                        expression (lib/sentenceLexer.ml[901,35947+41]..[901,35947+58])
                          Pexp_ident "__ocaml_lex_state" (lib/sentenceLexer.ml[901,35947+41]..[901,35947+58])
                      <arg>
                      Nolabel
                        expression (lib/sentenceLexer.ml[901,35947+59]..[901,35947+65])
                          Pexp_ident "lexbuf" (lib/sentenceLexer.ml[901,35947+59]..[901,35947+65])
                    ]
                  [
                    <case>
                      pattern (lib/sentenceLexer.ml[902,36018+8]..[902,36018+9])
                        Ppat_constant PConst_int (0,None)
                      expression (lib/sentenceLexer.mll[597,36061+6]..[600,36171+1])
                        Pexp_sequence
                        expression (lib/sentenceLexer.mll[597,36061+8]..[597,36061+67])
                          Pexp_apply
                          expression (lib/sentenceLexer.mll[597,36061+9]..[597,36061+22])
                            Pexp_ident "print_endline" (lib/sentenceLexer.mll[597,36061+9]..[597,36061+22])
                          [
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.mll[597,36061+23]..[597,36061+66])
                                Pexp_apply
                                expression (lib/sentenceLexer.mll[597,36061+24]..[597,36061+38])
                                  Pexp_ident "Batteries.dump" (lib/sentenceLexer.mll[597,36061+24]..[597,36061+38])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/sentenceLexer.mll[597,36061+39]..[597,36061+65])
                                      Pexp_apply
                                      expression (lib/sentenceLexer.mll[597,36061+42]..[597,36061+55])
                                        Pexp_ident "Lexing.lexeme" (lib/sentenceLexer.mll[597,36061+42]..[597,36061+55])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/sentenceLexer.mll[597,36061+56]..[597,36061+62])
                                            Pexp_ident "lexbuf" (lib/sentenceLexer.mll[597,36061+56]..[597,36061+62])
                                      ]
                                ]
                          ]
                        expression (lib/sentenceLexer.mll[599,36156+8]..[599,36156+14])
                          Pexp_constant PConst_string("TODO",(lib/sentenceLexer.mll[599,36156+9]..[599,36156+13]),None)
                    <case>
                      pattern (lib/sentenceLexer.ml[910,36203+4]..[910,36203+5])
                        Ppat_constant PConst_int (1,None)
                      expression (lib/sentenceLexer.mll[601,36242+6]..[605,36383+1])
                        Pexp_sequence
                        expression (lib/sentenceLexer.mll[601,36242+8]..[601,36242+67])
                          Pexp_apply
                          expression (lib/sentenceLexer.mll[601,36242+9]..[601,36242+22])
                            Pexp_ident "print_endline" (lib/sentenceLexer.mll[601,36242+9]..[601,36242+22])
                          [
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.mll[601,36242+23]..[601,36242+66])
                                Pexp_apply
                                expression (lib/sentenceLexer.mll[601,36242+24]..[601,36242+38])
                                  Pexp_ident "Batteries.dump" (lib/sentenceLexer.mll[601,36242+24]..[601,36242+38])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/sentenceLexer.mll[601,36242+39]..[601,36242+65])
                                      Pexp_apply
                                      expression (lib/sentenceLexer.mll[601,36242+42]..[601,36242+55])
                                        Pexp_ident "Lexing.lexeme" (lib/sentenceLexer.mll[601,36242+42]..[601,36242+55])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/sentenceLexer.mll[601,36242+56]..[601,36242+62])
                                            Pexp_ident "lexbuf" (lib/sentenceLexer.mll[601,36242+56]..[601,36242+62])
                                      ]
                                ]
                          ]
                        expression (lib/sentenceLexer.mll[604,36341+8]..[604,36341+41])
                          Pexp_apply
                          expression (lib/sentenceLexer.mll[604,36341+8]..[604,36341+16])
                            Pexp_ident "subgroup" (lib/sentenceLexer.mll[604,36341+8]..[604,36341+16])
                          [
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.mll[604,36341+17]..[604,36341+27])
                                Pexp_ident "openingpos" (lib/sentenceLexer.mll[604,36341+17]..[604,36341+27])
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.mll[604,36341+28]..[604,36341+34])
                                Pexp_ident "buffer" (lib/sentenceLexer.mll[604,36341+28]..[604,36341+34])
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.mll[604,36341+35]..[604,36341+41])
                                Pexp_ident "lexbuf" (lib/sentenceLexer.mll[604,36341+35]..[604,36341+41])
                          ]
                    <case>
                      pattern (lib/sentenceLexer.ml[919,36415+4]..[919,36415+5])
                        Ppat_constant PConst_int (2,None)
                      expression (lib/sentenceLexer.mll[606,36454+4]..[610,36631+5])
                        Pexp_sequence
                        expression (lib/sentenceLexer.mll[607,36460+6]..[607,36460+65])
                          Pexp_apply
                          expression (lib/sentenceLexer.mll[607,36460+7]..[607,36460+20])
                            Pexp_ident "print_endline" (lib/sentenceLexer.mll[607,36460+7]..[607,36460+20])
                          [
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.mll[607,36460+21]..[607,36460+64])
                                Pexp_apply
                                expression (lib/sentenceLexer.mll[607,36460+22]..[607,36460+36])
                                  Pexp_ident "Batteries.dump" (lib/sentenceLexer.mll[607,36460+22]..[607,36460+36])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/sentenceLexer.mll[607,36460+37]..[607,36460+63])
                                      Pexp_apply
                                      expression (lib/sentenceLexer.mll[607,36460+40]..[607,36460+53])
                                        Pexp_ident "Lexing.lexeme" (lib/sentenceLexer.mll[607,36460+40]..[607,36460+53])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/sentenceLexer.mll[607,36460+54]..[607,36460+60])
                                            Pexp_ident "lexbuf" (lib/sentenceLexer.mll[607,36460+54]..[607,36460+60])
                                      ]
                                ]
                          ]
                        expression (lib/sentenceLexer.mll[609,36589+8]..[609,36589+41])
                          Pexp_apply
                          expression (lib/sentenceLexer.mll[609,36589+8]..[609,36589+16])
                            Pexp_ident "subgroup" (lib/sentenceLexer.mll[609,36589+8]..[609,36589+16])
                          [
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.mll[609,36589+17]..[609,36589+27])
                                Pexp_ident "openingpos" (lib/sentenceLexer.mll[609,36589+17]..[609,36589+27])
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.mll[609,36589+28]..[609,36589+34])
                                Pexp_ident "buffer" (lib/sentenceLexer.mll[609,36589+28]..[609,36589+34])
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.mll[609,36589+35]..[609,36589+41])
                                Pexp_ident "lexbuf" (lib/sentenceLexer.mll[609,36589+35]..[609,36589+41])
                          ]
                    <case>
                      pattern (lib/sentenceLexer.ml[928,36667+4]..[928,36667+21])
                        Ppat_var "__ocaml_lex_state" (lib/sentenceLexer.ml[928,36667+4]..[928,36667+21])
                      expression (lib/sentenceLexer.ml[928,36667+25]..[929,36726+73])
                        Pexp_sequence
                        expression (lib/sentenceLexer.ml[928,36667+25]..[928,36667+57])
                          Pexp_apply
                          expression (lib/sentenceLexer.ml[928,36667+25]..[928,36667+50])
                            Pexp_field
                            expression (lib/sentenceLexer.ml[928,36667+25]..[928,36667+31])
                              Pexp_ident "lexbuf" (lib/sentenceLexer.ml[928,36667+25]..[928,36667+31])
                            "Lexing.refill_buff" (lib/sentenceLexer.ml[928,36667+32]..[928,36667+50])
                          [
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.ml[928,36667+51]..[928,36667+57])
                                Pexp_ident "lexbuf" (lib/sentenceLexer.ml[928,36667+51]..[928,36667+57])
                          ]
                        expression (lib/sentenceLexer.ml[929,36726+6]..[929,36726+73])
                          Pexp_apply
                          expression (lib/sentenceLexer.ml[929,36726+6]..[929,36726+30])
                            Pexp_ident "__ocaml_lex_subgroup_rec" (lib/sentenceLexer.ml[929,36726+6]..[929,36726+30])
                          [
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.ml[929,36726+31]..[929,36726+41])
                                Pexp_ident "openingpos" (lib/sentenceLexer.ml[929,36726+31]..[929,36726+41])
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.ml[929,36726+42]..[929,36726+48])
                                Pexp_ident "buffer" (lib/sentenceLexer.ml[929,36726+42]..[929,36726+48])
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.ml[929,36726+49]..[929,36726+55])
                                Pexp_ident "lexbuf" (lib/sentenceLexer.ml[929,36726+49]..[929,36726+55])
                            <arg>
                            Nolabel
                              expression (lib/sentenceLexer.ml[929,36726+56]..[929,36726+73])
                                Pexp_ident "__ocaml_lex_state" (lib/sentenceLexer.ml[929,36726+56]..[929,36726+73])
                          ]
                  ]
    ]
  structure_item (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
          Ppat_construct "()" (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
          None
        expression (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
          Pexp_apply
          expression (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
            Pexp_ident "Ppx_inline_test_lib.unset_lib" (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
          [
            <arg>
            Nolabel
              expression (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost,None)
          ]
    ]
  structure_item (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
          Ppat_construct "()" (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
          None
        expression (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
          Pexp_apply
          expression (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
            Pexp_ident "Expect_test_collector.Current_file.unset" (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
          [
            <arg>
            Nolabel
              expression (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
                Pexp_construct "()" (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
                None
          ]
    ]
  structure_item (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
          Ppat_construct "()" (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
          None
        expression (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
          Pexp_apply
          expression (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
            Pexp_ident "Ppx_bench_lib.Benchmark_accumulator.Current_libname.unset" (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
          [
            <arg>
            Nolabel
              expression (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
                Pexp_construct "()" (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
                None
          ]
    ]
  structure_item (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
          Ppat_construct "()" (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
          None
        expression (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
          Pexp_apply
          expression (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
            Pexp_ident "Ppx_module_timer_runtime.record_until" (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
          [
            <arg>
            Nolabel
              expression (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
                Pexp_ident "Ppx_module_timer_runtime.__MODULE__" (lib/sentenceLexer.ml[929,36726+73]..[929,36726+73]) ghost
          ]
    ]
]

[@@@ocaml.ppx.context
  {
    tool_name = "ppx_driver";
    include_dirs = [];
    load_path = [];
    open_modules = [];
    for_package = None;
    debug = false;
    use_threads = false;
    use_vmthreads = false;
    recursive_types = false;
    principal = false;
    transparent_modules = false;
    unboxed_types = false;
    unsafe_string = false;
    cookies = [("inline_tests", "enabled"); ("library-name", "gbnf_parser")]
  }]
let () =
  Ppx_module_timer_runtime.record_start Ppx_module_timer_runtime.__MODULE__
let () =
  Ppx_bench_lib.Benchmark_accumulator.Current_libname.set "gbnf_parser"
let () =
  Expect_test_collector.Current_file.set
    ~absolute_filename:"lib/sentenceLexer.mll"
let () =
  Ppx_inline_test_lib.set_lib_and_partition "gbnf_parser" "sentenceLexer.ml"
open Lexing
open SentenceParser
open Positions
open Keyword
let error1 pos = Error.error (Positions.one pos)
let error2 lexbuf = Error.error (Positions.lexbuf lexbuf)
let int_of_string (pos : Lexing.position) i =
  try int_of_string i
  with | Failure _ -> error1 pos "unreasonably large integer."
let savestart lexbuf f =
  let startp = lexbuf.lex_start_p in
  let token = f lexbuf in lexbuf.lex_start_p <- startp; token
let overwrite content offset c1 c2 =
  assert ((Bytes.get content offset) = c1); Bytes.set content offset c2
type monster =
  {
  pos: Positions.t ;
  check: check ;
  transform: int -> bytes -> unit ;
  keyword: keyword option ;
  oid: string option }
and check = string option array -> unit
let none : check = fun _ -> ()
let syntaxerror pos =
  (let check = none
   and transform ofs1 content =
     let pos = start_of_position pos in
     let ofs = pos.pos_cnum - ofs1 in
     let source = "(raise _eRR)" in
     Bytes.blit_string source 0 content ofs (String.length source)
   and keyword = Some SyntaxError
   and oid = None in { pos; check; transform; keyword; oid } : monster)
let position pos (where : string) (flavor : string) (i : string option)
  (x : string option) =
  let check_no_parameter () =
    if (i <> None) || (x <> None)
    then Error.error [pos] "$%s%s does not take a parameter." where flavor in
  let ofslpar = (1 + (String.length where)) + 3 in
  let where =
    match where with
    | "symbolstart" | "s" -> (check_no_parameter (); WhereSymbolStart)
    | "start" -> WhereStart
    | "end" -> WhereEnd
    | "" -> WhereStart
    | _ -> assert false in
  let flavor =
    match flavor with
    | "pos" -> FlavorPosition
    | "ofs" -> FlavorOffset
    | "loc" -> FlavorLocation
    | _ -> assert false in
  let (subject, check) =
    match (i, x) with
    | (None, None) -> (Left, none)
    | (Some _, Some _) -> assert false in
  let transform ofs1 content =
    let pos = start_of_position pos in
    let ofs = pos.pos_cnum - ofs1 in
    overwrite content ofs '$' '_';
    (let ofslpar = ofs + ofslpar in
     match (i, x) with
     | (None, Some x) ->
         (overwrite content ofslpar '(' '_';
          overwrite content ((ofslpar + 1) + (String.length x)) ')' '_')
     | (Some i, None) ->
         (overwrite content ofslpar '(' '_';
          overwrite content (ofslpar + 1) '$' '_';
          overwrite content ((ofslpar + 2) + (String.length i)) ')' '_')
     | (_, _) -> ()) in
  let keyword = Some (Position (subject, where, flavor))
  and oid = None in { pos; check; transform; keyword; oid }
let no_monsters monsters =
  match monsters with
  | [] -> ()
  | monster::_ ->
      Error.error [monster.pos]
        "a Menhir keyword cannot be used in an OCaml header."
let gather_oid xs oid =
  match oid with | Some x -> StringSet.add x xs | None -> xs
let gather_oids oids = Array.fold_left gather_oid StringSet.empty oids
let gather_monsters monsters =
  List.fold_left (fun xs -> fun monster -> gather_oid xs monster.oid)
    StringSet.empty monsters
let mk_stretch pos1 pos2 parenthesize monsters =
  let raw_content : string = InputFile.chunk (pos1, pos2) in
  let content : string =
    match monsters with
    | [] -> raw_content
    | _::_ ->
        let content : bytes = Bytes.of_string raw_content in
        (List.iter (fun monster -> monster.transform pos1.pos_cnum content)
           monsters;
         Bytes.unsafe_to_string content) in
  let content =
    if parenthesize
    then
      (String.make ((pos1.pos_cnum - pos1.pos_bol) - 1) ' ') ^
        ("(" ^ (content ^ ")"))
    else (String.make (pos1.pos_cnum - pos1.pos_bol) ' ') ^ content in
  let open Stretch in
    {
      stretch_filename = (InputFile.get_input_file_name ());
      stretch_linenum = (pos1.pos_lnum);
      stretch_linecount = (pos2.pos_lnum - pos1.pos_lnum);
      stretch_content = content;
      stretch_raw_content = raw_content;
      stretch_keywords =
        (Misc.filter_map (fun monster -> monster.keyword) monsters)
    }
let stretch_of_id (id : string located) =
  let (raw_content, pos) = Positions.decompose id in
  let pos1 = Positions.start_of_position pos
  and pos2 = Positions.end_of_position pos
  and filename = Positions.filename_of_position pos in
  assert (pos1 != Lexing.dummy_pos);
  (let padding = pos1.pos_cnum - pos1.pos_bol in
   let content = (String.make padding ' ') ^ raw_content in
   let open Stretch in
     {
       stretch_filename = filename;
       stretch_linenum = (pos1.pos_lnum);
       stretch_linecount = (pos2.pos_lnum - pos1.pos_lnum);
       stretch_content = content;
       stretch_raw_content = raw_content;
       stretch_keywords = []
     })
let table words =
  let table = Hashtbl.create 149 in
  List.iter (fun word -> Hashtbl.add table word ()) words; table
let reserved =
  table
    ["and";
    "as";
    "assert";
    "begin";
    "class";
    "constraint";
    "do";
    "done";
    "downto";
    "else";
    "end";
    "exception";
    "external";
    "false";
    "for";
    "fun";
    "function";
    "functor";
    "if";
    "in";
    "include";
    "inherit";
    "initializer";
    "lazy";
    "let";
    "match";
    "method";
    "module";
    "mutable";
    "new";
    "object";
    "of";
    "open";
    "or";
    "parser";
    "private";
    "rec";
    "sig";
    "struct";
    "then";
    "to";
    "true";
    "try";
    "type";
    "val";
    "virtual";
    "when";
    "while";
    "with";
    "mod";
    "land";
    "lor";
    "lxor";
    "lsl";
    "lsr";
    "asr"]
let char_for_backslash =
  function | 'n' -> '\n' | 'r' -> '\r' | 'b' -> '\b' | 't' -> '\t' | c -> c
let __ocaml_lex_tables =
  {
    Lexing.lex_base =
      "\000\000\239\255\240\255'\000'\000(\000\243\255\004\000\244\255\231\000\007\000\247\255\186\001\249\255\250\255\251\255\252\255\253\255\254\255\255\255\005\000\246\255B\000+\000,\000\242\255C\000\232\000\251\255\252\255-\000\253\255\154\002\255\255\254\255\006\000\252\255\253\255\254\255\002\000\255\255\016\000\253\255\254\255\255\255";
    Lexing.lex_backtrk =
      "\n\000\255\255\255\255\014\000\016\000\012\000\255\255\016\000\255\255\n\000\016\000\255\255\007\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\012\000\r\000\255\255\255\255\255\255\255\255\255\255\002\000\255\255\004\000\255\255\255\255\255\255\255\255\255\255\255\255\003\000\255\255\255\255\255\255\255\255\255\255";
    Lexing.lex_default =
      "\t\000\000\000\000\000\255\255\026\000\255\255\000\000\255\255\000\000\255\255\255\255\000\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\022\000\255\255\255\255\000\000\026\000\028\000\000\000\000\000\255\255\000\000\255\255\000\000\000\000$\000\000\000\000\000\000\000\255\255\000\000*\000\000\000\000\000\000\000";
    Lexing.lex_trans =
      "\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\003\000\006\000\001\000\001\000\005\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\003\000\001\000\b\000\004\000\001\000\001\000\001\000\001\000\019\000\018\000\014\000\r\000\001\000\012\000\001\000\007\000\003\000\025\000\006\000\022\000\024\000\006\000\025\000\031\000+\000,\000\nt\000\000\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\255\255\255\255 \000\000\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\tt\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\029\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\000\000\000\000\000\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\tt\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t
    Lexing.lex_check =
n\000\020\000\255\255\255\255\255\255\255\255\003\000\255\255\255\255\255\255\255\255\022\000\026\000\255\255\022\000\026\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\000\000\000\000\000\000'\000\000\000#\000#\000#\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\027\000\255\255\255\255\027\000\255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255#\000\255\255\255\255\255\255\027\000\255\255\255\255\255\255\255\255\255\255)\000\255\255\255\255\255\255\t\000\255\255\255\255\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\255\255\255\255\255\255\255\255\255\255\255\255\004\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\022\000\026\000\027\000\255\255\t\000\255\255\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\tt\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\255\255\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\255\255\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t
    Lexing.lex_base_code = "";
    Lexing.lex_backtrk_code = "";
    Lexing.lex_default_code = "";
    Lexing.lex_trans_code = "";
    Lexing.lex_check_code = "";
    Lexing.lex_code = ""
  }
let rec main lexbuf = __ocaml_lex_main_rec lexbuf 0
and __ocaml_lex_main_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
  | 0 -> (print_endline (Batteries.dump (Lexing.lexeme lexbuf)); LPAREN)
  | 1 -> RPAREN
  | 2 ->
      (print_endline (Batteries.dump (Lexing.lexeme lexbuf));
       (let buffer = Buffer.create 256 in
        let openingpos = lexeme_start_p lexbuf in
        let content = charclass openingpos buffer lexbuf in
        let id = Printf.sprintf "\"%s\"" content in
        let pos = import (openingpos, (lexbuf.lex_curr_p)) in
        REGEX (with_pos pos id)))
  | 3 -> BAR
  | 4 -> QUESTION
  | 5 -> STAR
  | 6 -> PLUS
  | 7 -> DASH
  | 8 -> CARET
  | 9 ->
      let curr = lexbuf.Lexing.lex_curr_p in
      let line = curr.Lexing.pos_lnum in
      let cnum = curr.Lexing.pos_cnum - curr.Lexing.pos_bol in
      let tok = Lexing.lexeme lexbuf in
      (print_endline (Batteries.dump (line, cnum, tok)); COLONCOLONEQUAL)
  | 10 ->
      let id =
        Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos
          lexbuf.Lexing.lex_curr_pos in
      LID (with_pos (cpos lexbuf) id)
  | 11 ->
      let buffer = Buffer.create 16 in
      let openingpos = lexeme_start_p lexbuf in
      let content = record_string openingpos buffer lexbuf in
      let id = Printf.sprintf "\"%s\"" content in
      let pos = import (openingpos, (lexbuf.lex_curr_p)) in
      QID (with_pos pos id)
  | 12 -> NEWLINE
  | 13 -> NEWLINE
  | 14 -> main lexbuf
  | 15 -> EOF
  | 16 -> error2 lexbuf "unexpected character(s)."
  | __ocaml_lex_state ->
      (lexbuf.Lexing.refill_buff lexbuf;
       __ocaml_lex_main_rec lexbuf __ocaml_lex_state)
and record_string openingpos buffer lexbuf =
  __ocaml_lex_record_string_rec openingpos buffer lexbuf 27
and __ocaml_lex_record_string_rec openingpos buffer lexbuf __ocaml_lex_state
  =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
  | 0 -> Buffer.contents buffer
  | 1 ->
      let sequence =
        Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos
          (lexbuf.Lexing.lex_start_pos + 2) in
      (Buffer.add_string buffer sequence;
       print_endline (Batteries.dump ("DEBUG:rs", sequence));
       record_string openingpos buffer lexbuf)
  | 2 -> error2 lexbuf "illegal newline in string."
  | 3 -> error1 openingpos "unterminated string."
  | 4 ->
      let c = Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
      (Buffer.add_char buffer c;
       print_endline (Batteries.dump ("DEBUG2:rs", c));
       record_string openingpos buffer lexbuf)
  | __ocaml_lex_state ->
      (lexbuf.Lexing.refill_buff lexbuf;
       __ocaml_lex_record_string_rec openingpos buffer lexbuf
         __ocaml_lex_state)
and charclass openingpos buffer lexbuf =
  __ocaml_lex_charclass_rec openingpos buffer lexbuf 35
and __ocaml_lex_charclass_rec openingpos buffer lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
  | 0 ->
      (print_endline (Batteries.dump (Lexing.lexeme lexbuf));
       charclass openingpos buffer lexbuf)
  | 1 -> (print_endline (Batteries.dump (Lexing.lexeme lexbuf)); "TODO")
  | 2 ->
      (print_endline (Batteries.dump (Lexing.lexeme lexbuf));
       charclass openingpos buffer lexbuf)
  | 3 ->
      (print_endline (Batteries.dump (Lexing.lexeme lexbuf));
       charclass openingpos buffer lexbuf)
  | __ocaml_lex_state ->
      (lexbuf.Lexing.refill_buff lexbuf;
       __ocaml_lex_charclass_rec openingpos buffer lexbuf __ocaml_lex_state)
and subgroup openingpos buffer lexbuf =
  __ocaml_lex_subgroup_rec openingpos buffer lexbuf 41
and __ocaml_lex_subgroup_rec openingpos buffer lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
  | 0 -> (print_endline (Batteries.dump (Lexing.lexeme lexbuf)); "TODO")
  | 1 ->
      (print_endline (Batteries.dump (Lexing.lexeme lexbuf));
       subgroup openingpos buffer lexbuf)
  | 2 ->
      (print_endline (Batteries.dump (Lexing.lexeme lexbuf));
       subgroup openingpos buffer lexbuf)
  | __ocaml_lex_state ->
      (lexbuf.Lexing.refill_buff lexbuf;
       __ocaml_lex_subgroup_rec openingpos buffer lexbuf __ocaml_lex_state)
let () = Ppx_inline_test_lib.unset_lib "gbnf_parser"
let () = Expect_test_collector.Current_file.unset ()
let () = Ppx_bench_lib.Benchmark_accumulator.Current_libname.unset ()
let () =
  Ppx_module_timer_runtime.record_until Ppx_module_timer_runtime.__MODULE__
[
  structure_item (_none_[0,0+-1].._none_[0,0+-1]) ghost
    Tstr_attribute "ocaml.ppx.context"
    [
      structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
        Pstr_eval
        expression (_none_[0,0+-1]..[0,0+-1]) ghost
          Pexp_record
          [
            "tool_name" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_constant PConst_string("ppx_driver",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
            "include_dirs" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "load_path" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "open_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "for_package" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "None" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "debug" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_threads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_vmthreads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "recursive_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "principal" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "transparent_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unboxed_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unsafe_string" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "cookies" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                Some
                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                    Pexp_tuple
                    [
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_tuple
                        [
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_constant PConst_string("inline_tests",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                          expression (<command-line>[1,0+0]..[1,0+9])
                            Pexp_constant PConst_string("enabled",(<command-line>[1,0+1]..[1,0+8]),None)
                        ]
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                        Some
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_tuple
                            [
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_tuple
                                [
                                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                    Pexp_constant PConst_string("library-name",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                                  expression (<command-line>[1,0+0]..[1,0+13])
                                    Pexp_constant PConst_string("gbnf_parser",(<command-line>[1,0+1]..[1,0+12]),None)
                                ]
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                                None
                            ]
                    ]
          ]
          None
    ]
  structure_item (lib/sentenceLexer.mll[16,32+0]..lib/sentenceLexer.mll[16,32+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[16,32+0]..lib/sentenceLexer.mll[16,32+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/sentenceLexer.mll[16,32+0]..lib/sentenceLexer.mll[16,32+0]) ghost
          Texp_apply
          expression (lib/sentenceLexer.mll[16,32+0]..lib/sentenceLexer.mll[16,32+0]) ghost
            Texp_ident "Ppx_module_timer_runtime!.record_start"
          [
            <arg>
              Nolabel
              expression (lib/sentenceLexer.mll[16,32+0]..lib/sentenceLexer.mll[16,32+0]) ghost
                Texp_ident "Ppx_module_timer_runtime!.__MODULE__"
          ]
    ]
  structure_item (lib/sentenceLexer.mll[16,32+0]..lib/sentenceLexer.mll[16,32+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[16,32+0]..lib/sentenceLexer.mll[16,32+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/sentenceLexer.mll[16,32+0]..lib/sentenceLexer.mll[16,32+0]) ghost
          Texp_apply
          expression (lib/sentenceLexer.mll[16,32+0]..lib/sentenceLexer.mll[16,32+0]) ghost
            Texp_ident "Ppx_bench_lib!.Benchmark_accumulator.Current_libname.set"
          [
            <arg>
              Nolabel
              expression (lib/sentenceLexer.mll[16,32+0]..lib/sentenceLexer.mll[16,32+0]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/sentenceLexer.mll[16,32+0]..lib/sentenceLexer.mll[16,32+0]) ghost,None)
          ]
    ]
  structure_item (lib/sentenceLexer.mll[16,32+0]..lib/sentenceLexer.mll[16,32+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[16,32+0]..lib/sentenceLexer.mll[16,32+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/sentenceLexer.mll[16,32+0]..lib/sentenceLexer.mll[16,32+0]) ghost
          Texp_apply
          expression (lib/sentenceLexer.mll[16,32+0]..lib/sentenceLexer.mll[16,32+0]) ghost
            Texp_ident "Expect_test_collector!.Current_file.set"
          [
            <arg>
              Labelled "absolute_filename"
              expression (lib/sentenceLexer.mll[16,32+0]..lib/sentenceLexer.mll[16,32+0]) ghost
                Texp_constant Const_string("lib/sentenceLexer.mll",(lib/sentenceLexer.mll[16,32+0]..lib/sentenceLexer.mll[16,32+0]) ghost,None)
          ]
    ]
  structure_item (lib/sentenceLexer.mll[16,32+0]..lib/sentenceLexer.mll[16,32+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[16,32+0]..lib/sentenceLexer.mll[16,32+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/sentenceLexer.mll[16,32+0]..lib/sentenceLexer.mll[16,32+0]) ghost
          Texp_apply
          expression (lib/sentenceLexer.mll[16,32+0]..lib/sentenceLexer.mll[16,32+0]) ghost
            Texp_ident "Ppx_inline_test_lib!.set_lib_and_partition"
          [
            <arg>
              Nolabel
              expression (lib/sentenceLexer.mll[16,32+0]..lib/sentenceLexer.mll[16,32+0]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/sentenceLexer.mll[16,32+0]..lib/sentenceLexer.mll[16,32+0]) ghost,None)
            <arg>
              Nolabel
              expression (lib/sentenceLexer.mll[16,32+0]..lib/sentenceLexer.mll[16,32+0]) ghost
                Texp_constant Const_string("sentenceLexer.ml",(lib/sentenceLexer.mll[16,32+0]..lib/sentenceLexer.mll[16,32+0]) ghost,None)
          ]
    ]
  structure_item (lib/sentenceLexer.mll[16,32+0]..lib/sentenceLexer.mll[16,32+11])
    Tstr_open Fresh
    module_expr (lib/sentenceLexer.mll[16,32+5]..lib/sentenceLexer.mll[16,32+11])
      Tmod_ident "Stdlib!.Lexing"
  structure_item (lib/sentenceLexer.mll[17,44+0]..lib/sentenceLexer.mll[17,44+19])
    Tstr_open Fresh
    module_expr (lib/sentenceLexer.mll[17,44+5]..lib/sentenceLexer.mll[17,44+19])
      Tmod_ident "Gbnf_parser!.SentenceParser"
  structure_item (lib/sentenceLexer.mll[18,64+0]..lib/sentenceLexer.mll[18,64+14])
    Tstr_open Fresh
    module_expr (lib/sentenceLexer.mll[18,64+5]..lib/sentenceLexer.mll[18,64+14])
      Tmod_ident "Gbnf_parser!.Positions"
  structure_item (lib/sentenceLexer.mll[19,79+0]..lib/sentenceLexer.mll[19,79+12])
    Tstr_open Fresh
    module_expr (lib/sentenceLexer.mll[19,79+5]..lib/sentenceLexer.mll[19,79+12])
      Tmod_ident "Gbnf_parser!.Keyword"
  structure_item (lib/sentenceLexer.mll[25,193+0]..lib/sentenceLexer.mll[26,210+33])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[25,193+4]..lib/sentenceLexer.mll[25,193+10])
          Tpat_var "error1/1205"
        expression (lib/sentenceLexer.mll[25,193+11]..lib/sentenceLexer.mll[26,210+33]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/sentenceLexer.mll[25,193+11]..lib/sentenceLexer.mll[25,193+14])
                Tpat_var "pos/1207"
              expression (lib/sentenceLexer.mll[26,210+2]..lib/sentenceLexer.mll[26,210+33])
                Texp_apply
                expression (lib/sentenceLexer.mll[26,210+2]..lib/sentenceLexer.mll[26,210+13])
                  Texp_ident "Gbnf_parser!.Error.error"
                [
                  <arg>
                    Nolabel
                    expression (lib/sentenceLexer.mll[26,210+14]..lib/sentenceLexer.mll[26,210+33])
                      Texp_apply
                      expression (lib/sentenceLexer.mll[26,210+15]..lib/sentenceLexer.mll[26,210+28])
                        Texp_ident "Gbnf_parser!.Positions.one"
                      [
                        <arg>
                          Nolabel
                          expression (lib/sentenceLexer.mll[26,210+29]..lib/sentenceLexer.mll[26,210+32])
                            Texp_ident "pos/1207"
                      ]
                ]
          ]
    ]
  structure_item (lib/sentenceLexer.mll[28,245+0]..lib/sentenceLexer.mll[29,265+39])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[28,245+4]..lib/sentenceLexer.mll[28,245+10])
          Tpat_var "error2/1247"
        expression (lib/sentenceLexer.mll[28,245+11]..lib/sentenceLexer.mll[29,265+39]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/sentenceLexer.mll[28,245+11]..lib/sentenceLexer.mll[28,245+17])
                Tpat_var "lexbuf/1249"
              expression (lib/sentenceLexer.mll[29,265+2]..lib/sentenceLexer.mll[29,265+39])
                Texp_apply
                expression (lib/sentenceLexer.mll[29,265+2]..lib/sentenceLexer.mll[29,265+13])
                  Texp_ident "Gbnf_parser!.Error.error"
                [
                  <arg>
                    Nolabel
                    expression (lib/sentenceLexer.mll[29,265+14]..lib/sentenceLexer.mll[29,265+39])
                      Texp_apply
                      expression (lib/sentenceLexer.mll[29,265+15]..lib/sentenceLexer.mll[29,265+31])
                        Texp_ident "Gbnf_parser!.Positions.lexbuf"
                      [
                        <arg>
                          Nolabel
                          expression (lib/sentenceLexer.mll[29,265+32]..lib/sentenceLexer.mll[29,265+38])
                            Texp_ident "lexbuf/1249"
                      ]
                ]
          ]
    ]
  structure_item (lib/sentenceLexer.mll[37,588+0]..lib/sentenceLexer.mll[41,680+44])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[37,588+4]..lib/sentenceLexer.mll[37,588+17])
          Tpat_var "int_of_string/1250"
        expression (lib/sentenceLexer.mll[37,588+18]..lib/sentenceLexer.mll[41,680+44]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/sentenceLexer.mll[37,588+19]..lib/sentenceLexer.mll[37,588+22])
                extra
                  Tpat_extra_constraint
                  core_type (lib/sentenceLexer.mll[37,588+25]..lib/sentenceLexer.mll[37,588+40])
                    Ttyp_constr "Stdlib!.Lexing.position"
                    []
                Tpat_alias "pos/1251"
                pattern (lib/sentenceLexer.mll[37,588+19]..lib/sentenceLexer.mll[37,588+22])
                  Tpat_any
              expression (lib/sentenceLexer.mll[37,588+42]..lib/sentenceLexer.mll[41,680+44]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/sentenceLexer.mll[37,588+42]..lib/sentenceLexer.mll[37,588+43])
                      Tpat_var "i/1252"
                    expression (lib/sentenceLexer.mll[38,634+2]..lib/sentenceLexer.mll[41,680+44])
                      Texp_try
                      expression (lib/sentenceLexer.mll[39,640+4]..lib/sentenceLexer.mll[39,640+19])
                        Texp_apply
                        expression (lib/sentenceLexer.mll[39,640+4]..lib/sentenceLexer.mll[39,640+17])
                          Texp_ident "Stdlib!.int_of_string"
                        [
                          <arg>
                            Nolabel
                            expression (lib/sentenceLexer.mll[39,640+18]..lib/sentenceLexer.mll[39,640+19])
                              Texp_ident "i/1252"
                        ]
                      [
                        <case>
                          pattern (lib/sentenceLexer.mll[40,660+7]..lib/sentenceLexer.mll[40,660+16])
                            Tpat_construct "Failure"
                            [
                              pattern (lib/sentenceLexer.mll[40,660+15]..lib/sentenceLexer.mll[40,660+16])
                                Tpat_any
                            ]
                            None
                          expression (lib/sentenceLexer.mll[41,680+4]..lib/sentenceLexer.mll[41,680+44])
                            Texp_apply
                            expression (lib/sentenceLexer.mll[41,680+4]..lib/sentenceLexer.mll[41,680+10])
                              Texp_ident "error1/1205"
                            [
                              <arg>
                                Nolabel
                                expression (lib/sentenceLexer.mll[41,680+11]..lib/sentenceLexer.mll[41,680+14])
                                  Texp_ident "pos/1251"
                              <arg>
                                Nolabel
                                expression (lib/sentenceLexer.mll[41,680+15]..lib/sentenceLexer.mll[41,680+44])
                                  Texp_construct "CamlinternalFormatBasics.Format"
                                  [
                                    expression (lib/sentenceLexer.mll[41,680+15]..lib/sentenceLexer.mll[41,680+44]) ghost
                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                      [
                                        expression (lib/sentenceLexer.mll[41,680+15]..lib/sentenceLexer.mll[41,680+44]) ghost
                                          Texp_constant Const_string("unreasonably large integer.",(lib/sentenceLexer.mll[41,680+15]..lib/sentenceLexer.mll[41,680+44]) ghost,None)
                                        expression (lib/sentenceLexer.mll[41,680+15]..lib/sentenceLexer.mll[41,680+44]) ghost
                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                          []
                                      ]
                                    expression (lib/sentenceLexer.mll[41,680+15]..lib/sentenceLexer.mll[41,680+44]) ghost
                                      Texp_constant Const_string("unreasonably large integer.",(lib/sentenceLexer.mll[41,680+15]..lib/sentenceLexer.mll[41,680+44]) ghost,None)
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/sentenceLexer.mll[49,960+0]..lib/sentenceLexer.mll[53,1080+7])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[49,960+4]..lib/sentenceLexer.mll[49,960+13])
          Tpat_var "savestart/1276"
        expression (lib/sentenceLexer.mll[49,960+14]..lib/sentenceLexer.mll[53,1080+7]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/sentenceLexer.mll[49,960+14]..lib/sentenceLexer.mll[49,960+20])
                Tpat_var "lexbuf/1278"
              expression (lib/sentenceLexer.mll[49,960+21]..lib/sentenceLexer.mll[53,1080+7]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/sentenceLexer.mll[49,960+21]..lib/sentenceLexer.mll[49,960+22])
                      Tpat_var "f/1279"
                    expression (lib/sentenceLexer.mll[50,985+2]..lib/sentenceLexer.mll[53,1080+7])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/sentenceLexer.mll[50,985+6]..lib/sentenceLexer.mll[50,985+12])
                            Tpat_var "startp/1280"
                          expression (lib/sentenceLexer.mll[50,985+15]..lib/sentenceLexer.mll[50,985+33])
                            Texp_field
                            expression (lib/sentenceLexer.mll[50,985+15]..lib/sentenceLexer.mll[50,985+21])
                              Texp_ident "lexbuf/1278"
                            "lex_start_p"
                      ]
                      expression (lib/sentenceLexer.mll[51,1022+2]..lib/sentenceLexer.mll[53,1080+7])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (lib/sentenceLexer.mll[51,1022+6]..lib/sentenceLexer.mll[51,1022+11])
                              Tpat_var "token/1281"
                            expression (lib/sentenceLexer.mll[51,1022+14]..lib/sentenceLexer.mll[51,1022+22])
                              Texp_apply
                              expression (lib/sentenceLexer.mll[51,1022+14]..lib/sentenceLexer.mll[51,1022+15])
                                Texp_ident "f/1279"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/sentenceLexer.mll[51,1022+16]..lib/sentenceLexer.mll[51,1022+22])
                                    Texp_ident "lexbuf/1278"
                              ]
                        ]
                        expression (lib/sentenceLexer.mll[52,1048+2]..lib/sentenceLexer.mll[53,1080+7])
                          Texp_sequence
                          expression (lib/sentenceLexer.mll[52,1048+2]..lib/sentenceLexer.mll[52,1048+30])
                            Texp_setfield
                            expression (lib/sentenceLexer.mll[52,1048+2]..lib/sentenceLexer.mll[52,1048+8])
                              Texp_ident "lexbuf/1278"
                            "lex_start_p"
                            expression (lib/sentenceLexer.mll[52,1048+24]..lib/sentenceLexer.mll[52,1048+30])
                              Texp_ident "startp/1280"
                          expression (lib/sentenceLexer.mll[53,1080+2]..lib/sentenceLexer.mll[53,1080+7])
                            Texp_ident "token/1281"
                ]
          ]
    ]
  structure_item (lib/sentenceLexer.mll[60,1265+0]..lib/sentenceLexer.mll[62,1344+29])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[60,1265+4]..lib/sentenceLexer.mll[60,1265+13])
          Tpat_var "overwrite/1282"
        expression (lib/sentenceLexer.mll[60,1265+14]..lib/sentenceLexer.mll[62,1344+29]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/sentenceLexer.mll[60,1265+14]..lib/sentenceLexer.mll[60,1265+21])
                Tpat_var "content/1284"
              expression (lib/sentenceLexer.mll[60,1265+22]..lib/sentenceLexer.mll[62,1344+29]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/sentenceLexer.mll[60,1265+22]..lib/sentenceLexer.mll[60,1265+28])
                      Tpat_var "offset/1285"
                    expression (lib/sentenceLexer.mll[60,1265+29]..lib/sentenceLexer.mll[62,1344+29]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/sentenceLexer.mll[60,1265+29]..lib/sentenceLexer.mll[60,1265+31])
                            Tpat_var "c1/1286"
                          expression (lib/sentenceLexer.mll[60,1265+32]..lib/sentenceLexer.mll[62,1344+29]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (lib/sentenceLexer.mll[60,1265+32]..lib/sentenceLexer.mll[60,1265+34])
                                  Tpat_var "c2/1287"
                                expression (lib/sentenceLexer.mll[61,1302+2]..lib/sentenceLexer.mll[62,1344+29])
                                  Texp_sequence
                                  expression (lib/sentenceLexer.mll[61,1302+2]..lib/sentenceLexer.mll[61,1302+40])
                                    Texp_assert                                    expression (lib/sentenceLexer.mll[61,1302+9]..lib/sentenceLexer.mll[61,1302+40])
                                      Texp_apply
                                      expression (lib/sentenceLexer.mll[61,1302+35]..lib/sentenceLexer.mll[61,1302+36])
                                        Texp_ident "Stdlib!.="
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/sentenceLexer.mll[61,1302+10]..lib/sentenceLexer.mll[61,1302+34])
                                            Texp_apply
                                            expression (lib/sentenceLexer.mll[61,1302+10]..lib/sentenceLexer.mll[61,1302+19])
                                              Texp_ident "Stdlib!.Bytes.get"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/sentenceLexer.mll[61,1302+20]..lib/sentenceLexer.mll[61,1302+27])
                                                  Texp_ident "content/1284"
                                              <arg>
                                                Nolabel
                                                expression (lib/sentenceLexer.mll[61,1302+28]..lib/sentenceLexer.mll[61,1302+34])
                                                  Texp_ident "offset/1285"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/sentenceLexer.mll[61,1302+37]..lib/sentenceLexer.mll[61,1302+39])
                                            Texp_ident "c1/1286"
                                      ]
                                  expression (lib/sentenceLexer.mll[62,1344+2]..lib/sentenceLexer.mll[62,1344+29])
                                    Texp_apply
                                    expression (lib/sentenceLexer.mll[62,1344+2]..lib/sentenceLexer.mll[62,1344+11])
                                      Texp_ident "Stdlib!.Bytes.set"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/sentenceLexer.mll[62,1344+12]..lib/sentenceLexer.mll[62,1344+19])
                                          Texp_ident "content/1284"
                                      <arg>
                                        Nolabel
                                        expression (lib/sentenceLexer.mll[62,1344+20]..lib/sentenceLexer.mll[62,1344+26])
                                          Texp_ident "offset/1285"
                                      <arg>
                                        Nolabel
                                        expression (lib/sentenceLexer.mll[62,1344+27]..lib/sentenceLexer.mll[62,1344+29])
                                          Texp_ident "c2/1287"
                                    ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/sentenceLexer.mll[71,1648+0]..lib/sentenceLexer.mll[97,2527+29])
    Tstr_type Rec
    [
      type_declaration monster/1385 (lib/sentenceLexer.mll[71,1648+0]..lib/sentenceLexer.mll[94,2512+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/sentenceLexer.mll[74,1703+2]..lib/sentenceLexer.mll[74,1703+19])
                Immutable
                pos/1387                core_type (lib/sentenceLexer.mll[74,1703+7]..lib/sentenceLexer.mll[74,1703+18])
                  Ttyp_poly
                  core_type (lib/sentenceLexer.mll[74,1703+7]..lib/sentenceLexer.mll[74,1703+18])
                    Ttyp_constr "Gbnf_parser!.Positions.t"
                    []
              (lib/sentenceLexer.mll[80,2010+2]..lib/sentenceLexer.mll[80,2010+15])
                Immutable
                check/1388                core_type (lib/sentenceLexer.mll[80,2010+9]..lib/sentenceLexer.mll[80,2010+14])
                  Ttyp_poly
                  core_type (lib/sentenceLexer.mll[80,2010+9]..lib/sentenceLexer.mll[80,2010+14])
                    Ttyp_constr "check/1386"
                    []
              (lib/sentenceLexer.mll[86,2300+2]..lib/sentenceLexer.mll[86,2300+34])
                Immutable
                transform/1389                core_type (lib/sentenceLexer.mll[86,2300+13]..lib/sentenceLexer.mll[86,2300+33])
                  Ttyp_poly
                  core_type (lib/sentenceLexer.mll[86,2300+13]..lib/sentenceLexer.mll[86,2300+33])
                    Ttyp_arrow
                    Nolabel
                    core_type (lib/sentenceLexer.mll[86,2300+13]..lib/sentenceLexer.mll[86,2300+16])
                      Ttyp_constr "int/1!"
                      []
                    core_type (lib/sentenceLexer.mll[86,2300+20]..lib/sentenceLexer.mll[86,2300+33])
                      Ttyp_arrow
                      Nolabel
                      core_type (lib/sentenceLexer.mll[86,2300+20]..lib/sentenceLexer.mll[86,2300+25])
                        Ttyp_constr "bytes/3!"
                        []
                      core_type (lib/sentenceLexer.mll[86,2300+29]..lib/sentenceLexer.mll[86,2300+33])
                        Ttyp_constr "unit/6!"
                        []
              (lib/sentenceLexer.mll[89,2385+2]..lib/sentenceLexer.mll[89,2385+26])
                Immutable
                keyword/1390                core_type (lib/sentenceLexer.mll[89,2385+11]..lib/sentenceLexer.mll[89,2385+25])
                  Ttyp_poly
                  core_type (lib/sentenceLexer.mll[89,2385+11]..lib/sentenceLexer.mll[89,2385+25])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/sentenceLexer.mll[89,2385+11]..lib/sentenceLexer.mll[89,2385+18])
                        Ttyp_constr "Gbnf_parser!.Keyword.keyword"
                        []
                    ]
              (lib/sentenceLexer.mll[92,2489+2]..lib/sentenceLexer.mll[92,2489+21])
                Immutable
                oid/1391                core_type (lib/sentenceLexer.mll[92,2489+7]..lib/sentenceLexer.mll[92,2489+20])
                  Ttyp_poly
                  core_type (lib/sentenceLexer.mll[92,2489+7]..lib/sentenceLexer.mll[92,2489+20])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/sentenceLexer.mll[92,2489+7]..lib/sentenceLexer.mll[92,2489+13])
                        Ttyp_constr "string/15!"
                        []
                    ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration check/1386 (lib/sentenceLexer.mll[96,2515+0]..lib/sentenceLexer.mll[97,2527+29])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/sentenceLexer.mll[97,2527+2]..lib/sentenceLexer.mll[97,2527+29])
              Ttyp_arrow
              Nolabel
              core_type (lib/sentenceLexer.mll[97,2527+2]..lib/sentenceLexer.mll[97,2527+21])
                Ttyp_constr "array/8!"
                [
                  core_type (lib/sentenceLexer.mll[97,2527+2]..lib/sentenceLexer.mll[97,2527+15])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/sentenceLexer.mll[97,2527+2]..lib/sentenceLexer.mll[97,2527+8])
                        Ttyp_constr "string/15!"
                        []
                    ]
                ]
              core_type (lib/sentenceLexer.mll[97,2527+25]..lib/sentenceLexer.mll[97,2527+29])
                Ttyp_constr "unit/6!"
                []
    ]
  structure_item (lib/sentenceLexer.mll[101,2575+0]..lib/sentenceLexer.mll[102,2594+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[101,2575+4]..lib/sentenceLexer.mll[101,2575+8])
          extra
            Tpat_extra_constraint
            core_type (lib/sentenceLexer.mll[101,2575+11]..lib/sentenceLexer.mll[101,2575+16])
              Ttyp_constr "check/1386"
              []
          Tpat_alias "none/1401"
          pattern (lib/sentenceLexer.mll[101,2575+4]..lib/sentenceLexer.mll[101,2575+8])
            Tpat_any
        expression (lib/sentenceLexer.mll[102,2594+2]..lib/sentenceLexer.mll[102,2594+13])
          extra
            Texp_constraint
            core_type (lib/sentenceLexer.mll[101,2575+11]..lib/sentenceLexer.mll[101,2575+16])
              Ttyp_constr "check/1386"
              []
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/sentenceLexer.mll[102,2594+6]..lib/sentenceLexer.mll[102,2594+7])
                Tpat_any
              expression (lib/sentenceLexer.mll[102,2594+11]..lib/sentenceLexer.mll[102,2594+13])
                Texp_construct "()"
                []
          ]
    ]
  structure_item (lib/sentenceLexer.mll[108,2724+0]..lib/sentenceLexer.mll[123,3128+41])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[108,2724+4]..lib/sentenceLexer.mll[108,2724+15])
          Tpat_var "syntaxerror/1404"
        expression (lib/sentenceLexer.mll[108,2724+16]..lib/sentenceLexer.mll[123,3128+41]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/sentenceLexer.mll[108,2724+16]..lib/sentenceLexer.mll[108,2724+19])
                Tpat_var "pos/1406"
              expression (lib/sentenceLexer.mll[109,2756+2]..lib/sentenceLexer.mll[123,3128+41])
                extra
                  Texp_constraint
                  core_type (lib/sentenceLexer.mll[108,2724+22]..lib/sentenceLexer.mll[108,2724+29])
                    Ttyp_constr "monster/1385"
                    []
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/sentenceLexer.mll[109,2756+6]..lib/sentenceLexer.mll[109,2756+11])
                      Tpat_var "check/1407"
                    expression (lib/sentenceLexer.mll[110,2770+4]..lib/sentenceLexer.mll[110,2770+8])
                      Texp_ident "none/1401"
                  <def>
                    pattern (lib/sentenceLexer.mll[111,2779+6]..lib/sentenceLexer.mll[111,2779+15])
                      Tpat_var "transform/1408"
                    expression (lib/sentenceLexer.mll[111,2779+16]..lib/sentenceLexer.mll[117,2999+65]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/sentenceLexer.mll[111,2779+16]..lib/sentenceLexer.mll[111,2779+20])
                            Tpat_var "ofs1/1411"
                          expression (lib/sentenceLexer.mll[111,2779+21]..lib/sentenceLexer.mll[117,2999+65]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (lib/sentenceLexer.mll[111,2779+21]..lib/sentenceLexer.mll[111,2779+28])
                                  Tpat_var "content/1412"
                                expression (lib/sentenceLexer.mll[114,2888+4]..lib/sentenceLexer.mll[117,2999+65])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/sentenceLexer.mll[114,2888+8]..lib/sentenceLexer.mll[114,2888+11])
                                        Tpat_var "pos/1413"
                                      expression (lib/sentenceLexer.mll[114,2888+14]..lib/sentenceLexer.mll[114,2888+35])
                                        Texp_apply
                                        expression (lib/sentenceLexer.mll[114,2888+14]..lib/sentenceLexer.mll[114,2888+31])
                                          Texp_ident "Gbnf_parser!.Positions.start_of_position"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/sentenceLexer.mll[114,2888+32]..lib/sentenceLexer.mll[114,2888+35])
                                              Texp_ident "pos/1406"
                                        ]
                                  ]
                                  expression (lib/sentenceLexer.mll[115,2927+4]..lib/sentenceLexer.mll[117,2999+65])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/sentenceLexer.mll[115,2927+8]..lib/sentenceLexer.mll[115,2927+11])
                                          Tpat_var "ofs/1414"
                                        expression (lib/sentenceLexer.mll[115,2927+14]..lib/sentenceLexer.mll[115,2927+33])
                                          Texp_apply
                                          expression (lib/sentenceLexer.mll[115,2927+27]..lib/sentenceLexer.mll[115,2927+28])
                                            Texp_ident "Stdlib!.-"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[115,2927+14]..lib/sentenceLexer.mll[115,2927+26])
                                                Texp_field
                                                expression (lib/sentenceLexer.mll[115,2927+14]..lib/sentenceLexer.mll[115,2927+17])
                                                  Texp_ident "pos/1413"
                                                "pos_cnum"
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[115,2927+29]..lib/sentenceLexer.mll[115,2927+33])
                                                Texp_ident "ofs1/1411"
                                          ]
                                    ]
                                    expression (lib/sentenceLexer.mll[116,2964+4]..lib/sentenceLexer.mll[117,2999+65])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (lib/sentenceLexer.mll[116,2964+8]..lib/sentenceLexer.mll[116,2964+14])
                                            Tpat_var "source/1415"
                                          expression (lib/sentenceLexer.mll[116,2964+17]..lib/sentenceLexer.mll[116,2964+31])
                                            Texp_constant Const_string("(raise _eRR)",(lib/sentenceLexer.mll[116,2964+18]..lib/sentenceLexer.mll[116,2964+30]),None)
                                      ]
                                      expression (lib/sentenceLexer.mll[117,2999+4]..lib/sentenceLexer.mll[117,2999+65])
                                        Texp_apply
                                        expression (lib/sentenceLexer.mll[117,2999+4]..lib/sentenceLexer.mll[117,2999+21])
                                          Texp_ident "Stdlib!.Bytes.blit_string"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/sentenceLexer.mll[117,2999+22]..lib/sentenceLexer.mll[117,2999+28])
                                              Texp_ident "source/1415"
                                          <arg>
                                            Nolabel
                                            expression (lib/sentenceLexer.mll[117,2999+29]..lib/sentenceLexer.mll[117,2999+30])
                                              Texp_constant Const_int 0
                                          <arg>
                                            Nolabel
                                            expression (lib/sentenceLexer.mll[117,2999+31]..lib/sentenceLexer.mll[117,2999+38])
                                              Texp_ident "content/1412"
                                          <arg>
                                            Nolabel
                                            expression (lib/sentenceLexer.mll[117,2999+39]..lib/sentenceLexer.mll[117,2999+42])
                                              Texp_ident "ofs/1414"
                                          <arg>
                                            Nolabel
                                            expression (lib/sentenceLexer.mll[117,2999+43]..lib/sentenceLexer.mll[117,2999+65])
                                              Texp_apply
                                              expression (lib/sentenceLexer.mll[117,2999+44]..lib/sentenceLexer.mll[117,2999+57])
                                                Texp_ident "Stdlib!.String.length"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/sentenceLexer.mll[117,2999+58]..lib/sentenceLexer.mll[117,2999+64])
                                                    Texp_ident "source/1415"
                                              ]
                                        ]
                            ]
                      ]
                  <def>
                    pattern (lib/sentenceLexer.mll[118,3065+6]..lib/sentenceLexer.mll[118,3065+13])
                      Tpat_var "keyword/1409"
                    expression (lib/sentenceLexer.mll[119,3081+4]..lib/sentenceLexer.mll[119,3081+20])
                      Texp_construct "Some"
                      [
                        expression (lib/sentenceLexer.mll[119,3081+9]..lib/sentenceLexer.mll[119,3081+20])
                          Texp_construct "SyntaxError"
                          []
                      ]
                  <def>
                    pattern (lib/sentenceLexer.mll[120,3102+6]..lib/sentenceLexer.mll[120,3102+9])
                      Tpat_var "oid/1410"
                    expression (lib/sentenceLexer.mll[121,3114+4]..lib/sentenceLexer.mll[121,3114+8])
                      Texp_construct "None"
                      []
                ]
                expression (lib/sentenceLexer.mll[123,3128+2]..lib/sentenceLexer.mll[123,3128+41])
                  Texp_record
                    fields =
                      [
                        "pos"
                          expression (lib/sentenceLexer.mll[123,3128+4]..lib/sentenceLexer.mll[123,3128+7])
                            Texp_ident "pos/1406"
                        "check"
                          expression (lib/sentenceLexer.mll[123,3128+9]..lib/sentenceLexer.mll[123,3128+14])
                            Texp_ident "check/1407"
                        "transform"
                          expression (lib/sentenceLexer.mll[123,3128+16]..lib/sentenceLexer.mll[123,3128+25])
                            Texp_ident "transform/1408"
                        "keyword"
                          expression (lib/sentenceLexer.mll[123,3128+27]..lib/sentenceLexer.mll[123,3128+34])
                            Texp_ident "keyword/1409"
                        "oid"
                          expression (lib/sentenceLexer.mll[123,3128+36]..lib/sentenceLexer.mll[123,3128+39])
                            Texp_ident "oid/1410"
                      ]
                    representation =
                      Record_regular
                    extended_expression =
                      None
          ]
    ]
  structure_item (lib/sentenceLexer.mll[176,5300+0]..lib/sentenceLexer.mll[246,7429+41])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[176,5300+4]..lib/sentenceLexer.mll[176,5300+12])
          Tpat_var "position/1485"
        expression (lib/sentenceLexer.mll[176,5300+13]..lib/sentenceLexer.mll[246,7429+41]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/sentenceLexer.mll[176,5300+13]..lib/sentenceLexer.mll[176,5300+16])
                Tpat_var "pos/1486"
              expression (lib/sentenceLexer.mll[177,5317+2]..lib/sentenceLexer.mll[246,7429+41]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/sentenceLexer.mll[177,5317+3]..lib/sentenceLexer.mll[177,5317+8])
                      extra
                        Tpat_extra_constraint
                        core_type (lib/sentenceLexer.mll[177,5317+11]..lib/sentenceLexer.mll[177,5317+17])
                          Ttyp_constr "string/15!"
                          []
                      Tpat_alias "where/1487"
                      pattern (lib/sentenceLexer.mll[177,5317+3]..lib/sentenceLexer.mll[177,5317+8])
                        Tpat_any
                    expression (lib/sentenceLexer.mll[178,5336+2]..lib/sentenceLexer.mll[246,7429+41]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/sentenceLexer.mll[178,5336+3]..lib/sentenceLexer.mll[178,5336+9])
                            extra
                              Tpat_extra_constraint
                              core_type (lib/sentenceLexer.mll[178,5336+12]..lib/sentenceLexer.mll[178,5336+18])
                                Ttyp_constr "string/15!"
                                []
                            Tpat_alias "flavor/1488"
                            pattern (lib/sentenceLexer.mll[178,5336+3]..lib/sentenceLexer.mll[178,5336+9])
                              Tpat_any
                          expression (lib/sentenceLexer.mll[179,5356+2]..lib/sentenceLexer.mll[246,7429+41]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (lib/sentenceLexer.mll[179,5356+3]..lib/sentenceLexer.mll[179,5356+4])
                                  extra
                                    Tpat_extra_constraint
                                    core_type (lib/sentenceLexer.mll[179,5356+7]..lib/sentenceLexer.mll[179,5356+20])
                                      Ttyp_constr "option/10!"
                                      [
                                        core_type (lib/sentenceLexer.mll[179,5356+7]..lib/sentenceLexer.mll[179,5356+13])
                                          Ttyp_constr "string/15!"
                                          []
                                      ]
                                  Tpat_alias "i/1489"
                                  pattern (lib/sentenceLexer.mll[179,5356+3]..lib/sentenceLexer.mll[179,5356+4])
                                    Tpat_any
                                expression (lib/sentenceLexer.mll[179,5356+22]..lib/sentenceLexer.mll[246,7429+41]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/sentenceLexer.mll[179,5356+23]..lib/sentenceLexer.mll[179,5356+24])
                                        extra
                                          Tpat_extra_constraint
                                          core_type (lib/sentenceLexer.mll[179,5356+27]..lib/sentenceLexer.mll[179,5356+40])
                                            Ttyp_constr "option/10!"
                                            [
                                              core_type (lib/sentenceLexer.mll[179,5356+27]..lib/sentenceLexer.mll[179,5356+33])
                                                Ttyp_constr "string/15!"
                                                []
                                            ]
                                        Tpat_alias "x/1490"
                                        pattern (lib/sentenceLexer.mll[179,5356+23]..lib/sentenceLexer.mll[179,5356+24])
                                          Tpat_any
                                      expression (lib/sentenceLexer.mll[181,5400+2]..lib/sentenceLexer.mll[246,7429+41])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/sentenceLexer.mll[181,5400+6]..lib/sentenceLexer.mll[181,5400+24])
                                              Tpat_var "check_no_parameter/1491"
                                            expression (lib/sentenceLexer.mll[181,5400+25]..lib/sentenceLexer.mll[183,5465+71]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/sentenceLexer.mll[181,5400+25]..lib/sentenceLexer.mll[181,5400+27])
                                                    Tpat_construct "()"
                                                    []
                                                    None
                                                  expression (lib/sentenceLexer.mll[182,5430+4]..lib/sentenceLexer.mll[183,5465+71])
                                                    Texp_ifthenelse
                                                    expression (lib/sentenceLexer.mll[182,5430+7]..lib/sentenceLexer.mll[182,5430+29])
                                                      Texp_apply
                                                      expression (lib/sentenceLexer.mll[182,5430+17]..lib/sentenceLexer.mll[182,5430+19])
                                                        Texp_ident "Stdlib!.||"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/sentenceLexer.mll[182,5430+7]..lib/sentenceLexer.mll[182,5430+16])
                                                            Texp_apply
                                                            expression (lib/sentenceLexer.mll[182,5430+9]..lib/sentenceLexer.mll[182,5430+11])
                                                              Texp_ident "Stdlib!.<>"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/sentenceLexer.mll[182,5430+7]..lib/sentenceLexer.mll[182,5430+8])
                                                                  Texp_ident "i/1489"
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/sentenceLexer.mll[182,5430+12]..lib/sentenceLexer.mll[182,5430+16])
                                                                  Texp_construct "None"
                                                                  []
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/sentenceLexer.mll[182,5430+20]..lib/sentenceLexer.mll[182,5430+29])
                                                            Texp_apply
                                                            expression (lib/sentenceLexer.mll[182,5430+22]..lib/sentenceLexer.mll[182,5430+24])
                                                              Texp_ident "Stdlib!.<>"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/sentenceLexer.mll[182,5430+20]..lib/sentenceLexer.mll[182,5430+21])
                                                                  Texp_ident "x/1490"
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/sentenceLexer.mll[182,5430+25]..lib/sentenceLexer.mll[182,5430+29])
                                                                  Texp_construct "None"
                                                                  []
                                                            ]
                                                      ]
                                                    expression (lib/sentenceLexer.mll[183,5465+6]..lib/sentenceLexer.mll[183,5465+71])
                                                      Texp_apply
                                                      expression (lib/sentenceLexer.mll[183,5465+6]..lib/sentenceLexer.mll[183,5465+17])
                                                        Texp_ident "Gbnf_parser!.Error.error"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/sentenceLexer.mll[183,5465+18]..lib/sentenceLexer.mll[183,5465+23])
                                                            Texp_construct "::"
                                                            [
                                                              expression (lib/sentenceLexer.mll[183,5465+19]..lib/sentenceLexer.mll[183,5465+22])
                                                                Texp_ident "pos/1486"
                                                              expression (lib/sentenceLexer.mll[183,5465+22]..lib/sentenceLexer.mll[183,5465+23]) ghost
                                                                Texp_construct "[]"
                                                                []
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/sentenceLexer.mll[183,5465+24]..lib/sentenceLexer.mll[183,5465+58])
                                                            Texp_construct "CamlinternalFormatBasics.Format"
                                                            [
                                                              expression (lib/sentenceLexer.mll[183,5465+24]..lib/sentenceLexer.mll[183,5465+58]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                [
                                                                  expression (lib/sentenceLexer.mll[183,5465+24]..lib/sentenceLexer.mll[183,5465+58]) ghost
                                                                    Texp_constant Const_char 24
                                                                  expression (lib/sentenceLexer.mll[183,5465+24]..lib/sentenceLexer.mll[183,5465+58]) ghost
                                                                    Texp_construct "CamlinternalFormatBasics.String"
                                                                    [
                                                                      expression (lib/sentenceLexer.mll[183,5465+24]..lib/sentenceLexer.mll[183,5465+58]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                        []
                                                                      expression (lib/sentenceLexer.mll[183,5465+24]..lib/sentenceLexer.mll[183,5465+58]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.String"
                                                                        [
                                                                          expression (lib/sentenceLexer.mll[183,5465+24]..lib/sentenceLexer.mll[183,5465+58]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                            []
                                                                          expression (lib/sentenceLexer.mll[183,5465+24]..lib/sentenceLexer.mll[183,5465+58]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                            [
                                                                              expression (lib/sentenceLexer.mll[183,5465+24]..lib/sentenceLexer.mll[183,5465+58]) ghost
                                                                                Texp_constant Const_string(" does not take a parameter.",(lib/sentenceLexer.mll[183,5465+24]..lib/sentenceLexer.mll[183,5465+58]) ghost,None)
                                                                              expression (lib/sentenceLexer.mll[183,5465+24]..lib/sentenceLexer.mll[183,5465+58]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                []
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                              expression (lib/sentenceLexer.mll[183,5465+24]..lib/sentenceLexer.mll[183,5465+58]) ghost
                                                                Texp_constant Const_string("$%s%s does not take a parameter.",(lib/sentenceLexer.mll[183,5465+24]..lib/sentenceLexer.mll[183,5465+58]) ghost,None)
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/sentenceLexer.mll[183,5465+59]..lib/sentenceLexer.mll[183,5465+64])
                                                            Texp_ident "where/1487"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/sentenceLexer.mll[183,5465+65]..lib/sentenceLexer.mll[183,5465+71])
                                                            Texp_ident "flavor/1488"
                                                      ]
                                                    None
                                              ]
                                        ]
                                        expression (lib/sentenceLexer.mll[185,5542+2]..lib/sentenceLexer.mll[246,7429+41])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/sentenceLexer.mll[185,5542+6]..lib/sentenceLexer.mll[185,5542+13])
                                                Tpat_var "ofslpar/1494"
                                              expression (lib/sentenceLexer.mll[186,5615+4]..lib/sentenceLexer.mll[188,5675+5])
                                                Texp_apply
                                                expression (lib/sentenceLexer.mll[187,5649+24]..lib/sentenceLexer.mll[187,5649+25])
                                                  Texp_ident "Stdlib!.+"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/sentenceLexer.mll[186,5615+4]..lib/sentenceLexer.mll[187,5649+23])
                                                      Texp_apply
                                                      expression (lib/sentenceLexer.mll[186,5615+6]..lib/sentenceLexer.mll[186,5615+7])
                                                        Texp_ident "Stdlib!.+"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/sentenceLexer.mll[186,5615+4]..lib/sentenceLexer.mll[186,5615+5])
                                                            Texp_constant Const_int 1
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/sentenceLexer.mll[187,5649+4]..lib/sentenceLexer.mll[187,5649+23])
                                                            Texp_apply
                                                            expression (lib/sentenceLexer.mll[187,5649+4]..lib/sentenceLexer.mll[187,5649+17])
                                                              Texp_ident "Stdlib!.String.length"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/sentenceLexer.mll[187,5649+18]..lib/sentenceLexer.mll[187,5649+23])
                                                                  Texp_ident "where/1487"
                                                            ]
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/sentenceLexer.mll[188,5675+4]..lib/sentenceLexer.mll[188,5675+5])
                                                      Texp_constant Const_int 3
                                                ]
                                          ]
                                          expression (lib/sentenceLexer.mll[190,5722+2]..lib/sentenceLexer.mll[246,7429+41])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (lib/sentenceLexer.mll[190,5722+6]..lib/sentenceLexer.mll[190,5722+11])
                                                  Tpat_var "where/1495"
                                                expression (lib/sentenceLexer.mll[191,5736+4]..lib/sentenceLexer.mll[197,5939+35])
                                                  Texp_match
                                                  expression (lib/sentenceLexer.mll[191,5736+10]..lib/sentenceLexer.mll[191,5736+15])
                                                    Texp_ident "where/1487"
                                                  [
                                                    <case>
                                                      pattern (lib/sentenceLexer.mll[192,5757+6]..lib/sentenceLexer.mll[193,5777+9])
                                                        Tpat_or
                                                        pattern (lib/sentenceLexer.mll[192,5757+6]..lib/sentenceLexer.mll[192,5757+19])
                                                          Tpat_value
                                                          pattern (lib/sentenceLexer.mll[192,5757+6]..lib/sentenceLexer.mll[192,5757+19])
                                                            Tpat_constant Const_string("symbolstart",(lib/sentenceLexer.mll[192,5757+7]..lib/sentenceLexer.mll[192,5757+18]),None)
                                                        pattern (lib/sentenceLexer.mll[193,5777+6]..lib/sentenceLexer.mll[193,5777+9])
                                                          Tpat_value
                                                          pattern (lib/sentenceLexer.mll[193,5777+6]..lib/sentenceLexer.mll[193,5777+9])
                                                            Tpat_constant Const_string("s",(lib/sentenceLexer.mll[193,5777+7]..lib/sentenceLexer.mll[193,5777+8]),None)
                                                      expression (lib/sentenceLexer.mll[193,5777+23]..lib/sentenceLexer.mll[193,5777+61])
                                                        Texp_sequence
                                                        expression (lib/sentenceLexer.mll[193,5777+23]..lib/sentenceLexer.mll[193,5777+43])
                                                          Texp_apply
                                                          expression (lib/sentenceLexer.mll[193,5777+23]..lib/sentenceLexer.mll[193,5777+41])
                                                            Texp_ident "check_no_parameter/1491"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/sentenceLexer.mll[193,5777+41]..lib/sentenceLexer.mll[193,5777+43])
                                                                Texp_construct "()"
                                                                []
                                                          ]
                                                        expression (lib/sentenceLexer.mll[193,5777+45]..lib/sentenceLexer.mll[193,5777+61])
                                                          Texp_construct "WhereSymbolStart"
                                                          []
                                                    <case>
                                                      pattern (lib/sentenceLexer.mll[194,5839+6]..lib/sentenceLexer.mll[194,5839+13])
                                                        Tpat_value
                                                        pattern (lib/sentenceLexer.mll[194,5839+6]..lib/sentenceLexer.mll[194,5839+13])
                                                          Tpat_constant Const_string("start",(lib/sentenceLexer.mll[194,5839+7]..lib/sentenceLexer.mll[194,5839+12]),None)
                                                      expression (lib/sentenceLexer.mll[194,5839+23]..lib/sentenceLexer.mll[194,5839+33])
                                                        Texp_construct "WhereStart"
                                                        []
                                                    <case>
                                                      pattern (lib/sentenceLexer.mll[195,5873+6]..lib/sentenceLexer.mll[195,5873+11])
                                                        Tpat_value
                                                        pattern (lib/sentenceLexer.mll[195,5873+6]..lib/sentenceLexer.mll[195,5873+11])
                                                          Tpat_constant Const_string("end",(lib/sentenceLexer.mll[195,5873+7]..lib/sentenceLexer.mll[195,5873+10]),None)
                                                      expression (lib/sentenceLexer.mll[195,5873+23]..lib/sentenceLexer.mll[195,5873+31])
                                                        Texp_construct "WhereEnd"
                                                        []
                                                    <case>
                                                      pattern (lib/sentenceLexer.mll[196,5905+6]..lib/sentenceLexer.mll[196,5905+8])
                                                        Tpat_value
                                                        pattern (lib/sentenceLexer.mll[196,5905+6]..lib/sentenceLexer.mll[196,5905+8])
                                                          Tpat_constant Const_string("",(lib/sentenceLexer.mll[196,5905+7]..lib/sentenceLexer.mll[196,5905+7]),None)
                                                      expression (lib/sentenceLexer.mll[196,5905+23]..lib/sentenceLexer.mll[196,5905+33])
                                                        Texp_construct "WhereStart"
                                                        []
                                                    <case>
                                                      pattern (lib/sentenceLexer.mll[197,5939+6]..lib/sentenceLexer.mll[197,5939+7])
                                                        Tpat_value
                                                        pattern (lib/sentenceLexer.mll[197,5939+6]..lib/sentenceLexer.mll[197,5939+7])
                                                          Tpat_any
                                                      expression (lib/sentenceLexer.mll[197,5939+23]..lib/sentenceLexer.mll[197,5939+35])
                                                        Texp_assert                                                        expression (lib/sentenceLexer.mll[197,5939+30]..lib/sentenceLexer.mll[197,5939+35])
                                                          Texp_construct "false"
                                                          []
                                                  ]
                                            ]
                                            expression (lib/sentenceLexer.mll[199,5980+2]..lib/sentenceLexer.mll[246,7429+41])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (lib/sentenceLexer.mll[199,5980+6]..lib/sentenceLexer.mll[199,5980+12])
                                                    Tpat_var "flavor/1496"
                                                  expression (lib/sentenceLexer.mll[200,5995+4]..lib/sentenceLexer.mll[204,6111+29])
                                                    Texp_match
                                                    expression (lib/sentenceLexer.mll[200,5995+10]..lib/sentenceLexer.mll[200,5995+16])
                                                      Texp_ident "flavor/1488"
                                                    [
                                                      <case>
                                                        pattern (lib/sentenceLexer.mll[201,6017+6]..lib/sentenceLexer.mll[201,6017+11])
                                                          Tpat_value
                                                          pattern (lib/sentenceLexer.mll[201,6017+6]..lib/sentenceLexer.mll[201,6017+11])
                                                            Tpat_constant Const_string("pos",(lib/sentenceLexer.mll[201,6017+7]..lib/sentenceLexer.mll[201,6017+10]),None)
                                                        expression (lib/sentenceLexer.mll[201,6017+17]..lib/sentenceLexer.mll[201,6017+31])
                                                          Texp_construct "FlavorPosition"
                                                          []
                                                      <case>
                                                        pattern (lib/sentenceLexer.mll[202,6049+6]..lib/sentenceLexer.mll[202,6049+11])
                                                          Tpat_value
                                                          pattern (lib/sentenceLexer.mll[202,6049+6]..lib/sentenceLexer.mll[202,6049+11])
                                                            Tpat_constant Const_string("ofs",(lib/sentenceLexer.mll[202,6049+7]..lib/sentenceLexer.mll[202,6049+10]),None)
                                                        expression (lib/sentenceLexer.mll[202,6049+17]..lib/sentenceLexer.mll[202,6049+29])
                                                          Texp_construct "FlavorOffset"
                                                          []
                                                      <case>
                                                        pattern (lib/sentenceLexer.mll[203,6079+6]..lib/sentenceLexer.mll[203,6079+11])
                                                          Tpat_value
                                                          pattern (lib/sentenceLexer.mll[203,6079+6]..lib/sentenceLexer.mll[203,6079+11])
                                                            Tpat_constant Const_string("loc",(lib/sentenceLexer.mll[203,6079+7]..lib/sentenceLexer.mll[203,6079+10]),None)
                                                        expression (lib/sentenceLexer.mll[203,6079+17]..lib/sentenceLexer.mll[203,6079+31])
                                                          Texp_construct "FlavorLocation"
                                                          []
                                                      <case>
                                                        pattern (lib/sentenceLexer.mll[204,6111+6]..lib/sentenceLexer.mll[204,6111+7])
                                                          Tpat_value
                                                          pattern (lib/sentenceLexer.mll[204,6111+6]..lib/sentenceLexer.mll[204,6111+7])
                                                            Tpat_any
                                                        expression (lib/sentenceLexer.mll[204,6111+17]..lib/sentenceLexer.mll[204,6111+29])
                                                          Texp_assert                                                          expression (lib/sentenceLexer.mll[204,6111+24]..lib/sentenceLexer.mll[204,6111+29])
                                                            Texp_construct "false"
                                                            []
                                                    ]
                                              ]
                                              expression (lib/sentenceLexer.mll[206,6146+2]..lib/sentenceLexer.mll[246,7429+41])
                                                Texp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (lib/sentenceLexer.mll[206,6146+6]..lib/sentenceLexer.mll[206,6146+20])
                                                      Tpat_tuple
                                                      [
                                                        pattern (lib/sentenceLexer.mll[206,6146+6]..lib/sentenceLexer.mll[206,6146+13])
                                                          Tpat_var "subject/1497"
                                                        pattern (lib/sentenceLexer.mll[206,6146+15]..lib/sentenceLexer.mll[206,6146+20])
                                                          Tpat_var "check/1498"
                                                      ]
                                                    expression (lib/sentenceLexer.mll[207,6169+4]..lib/sentenceLexer.mll[223,6778+20])
                                                      Texp_match
                                                      expression (lib/sentenceLexer.mll[207,6169+10]..lib/sentenceLexer.mll[207,6169+14])
                                                        Texp_tuple
                                                        [
                                                          expression (lib/sentenceLexer.mll[207,6169+10]..lib/sentenceLexer.mll[207,6169+11])
                                                            Texp_ident "i/1489"
                                                          expression (lib/sentenceLexer.mll[207,6169+13]..lib/sentenceLexer.mll[207,6169+14])
                                                            Texp_ident "x/1490"
                                                        ]
                                                      [
                                                        <case>
                                                          pattern (lib/sentenceLexer.mll[219,6689+6]..lib/sentenceLexer.mll[219,6689+16])
                                                            Tpat_value
                                                            pattern (lib/sentenceLexer.mll[219,6689+6]..lib/sentenceLexer.mll[219,6689+16])
                                                              Tpat_tuple
                                                              [
                                                                pattern (lib/sentenceLexer.mll[219,6689+6]..lib/sentenceLexer.mll[219,6689+10])
                                                                  Tpat_construct "None"
                                                                  []
                                                                  None
                                                                pattern (lib/sentenceLexer.mll[219,6689+12]..lib/sentenceLexer.mll[219,6689+16])
                                                                  Tpat_construct "None"
                                                                  []
                                                                  None
                                                              ]
                                                          expression (lib/sentenceLexer.mll[221,6735+8]..lib/sentenceLexer.mll[221,6735+18])
                                                            Texp_tuple
                                                            [
                                                              expression (lib/sentenceLexer.mll[221,6735+8]..lib/sentenceLexer.mll[221,6735+12])
                                                                Texp_construct "Left"
                                                                []
                                                              expression (lib/sentenceLexer.mll[221,6735+14]..lib/sentenceLexer.mll[221,6735+18])
                                                                Texp_ident "none/1401"
                                                            ]
                                                        <case>
                                                          pattern (lib/sentenceLexer.mll[222,6754+6]..lib/sentenceLexer.mll[222,6754+20])
                                                            Tpat_value
                                                            pattern (lib/sentenceLexer.mll[222,6754+6]..lib/sentenceLexer.mll[222,6754+20])
                                                              Tpat_tuple
                                                              [
                                                                pattern (lib/sentenceLexer.mll[222,6754+6]..lib/sentenceLexer.mll[222,6754+12])
                                                                  Tpat_construct "Some"
                                                                  [
                                                                    pattern (lib/sentenceLexer.mll[222,6754+11]..lib/sentenceLexer.mll[222,6754+12])
                                                                      Tpat_any
                                                                  ]
                                                                  None
                                                                pattern (lib/sentenceLexer.mll[222,6754+14]..lib/sentenceLexer.mll[222,6754+20])
                                                                  Tpat_construct "Some"
                                                                  [
                                                                    pattern (lib/sentenceLexer.mll[222,6754+19]..lib/sentenceLexer.mll[222,6754+20])
                                                                      Tpat_any
                                                                  ]
                                                                  None
                                                              ]
                                                          expression (lib/sentenceLexer.mll[223,6778+8]..lib/sentenceLexer.mll[223,6778+20])
                                                            Texp_assert                                                            expression (lib/sentenceLexer.mll[223,6778+15]..lib/sentenceLexer.mll[223,6778+20])
                                                              Texp_construct "false"
                                                              []
                                                      ]
                                                ]
                                                expression (lib/sentenceLexer.mll[225,6804+2]..lib/sentenceLexer.mll[246,7429+41])
                                                  Texp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (lib/sentenceLexer.mll[225,6804+6]..lib/sentenceLexer.mll[225,6804+15])
                                                        Tpat_var "transform/1499"
                                                      expression (lib/sentenceLexer.mll[225,6804+16]..lib/sentenceLexer.mll[239,7326+10]) ghost
                                                        Texp_function
                                                        Nolabel
                                                        [
                                                          <case>
                                                            pattern (lib/sentenceLexer.mll[225,6804+16]..lib/sentenceLexer.mll[225,6804+20])
                                                              Tpat_var "ofs1/1501"
                                                            expression (lib/sentenceLexer.mll[225,6804+21]..lib/sentenceLexer.mll[239,7326+10]) ghost
                                                              Texp_function
                                                              Nolabel
                                                              [
                                                                <case>
                                                                  pattern (lib/sentenceLexer.mll[225,6804+21]..lib/sentenceLexer.mll[225,6804+28])
                                                                    Tpat_var "content/1502"
                                                                  expression (lib/sentenceLexer.mll[226,6835+4]..lib/sentenceLexer.mll[239,7326+10])
                                                                    Texp_let Nonrec
                                                                    [
                                                                      <def>
                                                                        pattern (lib/sentenceLexer.mll[226,6835+8]..lib/sentenceLexer.mll[226,6835+11])
                                                                          Tpat_var "pos/1503"
                                                                        expression (lib/sentenceLexer.mll[226,6835+14]..lib/sentenceLexer.mll[226,6835+35])
                                                                          Texp_apply
                                                                          expression (lib/sentenceLexer.mll[226,6835+14]..lib/sentenceLexer.mll[226,6835+31])
                                                                            Texp_ident "Gbnf_parser!.Positions.start_of_position"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (lib/sentenceLexer.mll[226,6835+32]..lib/sentenceLexer.mll[226,6835+35])
                                                                                Texp_ident "pos/1486"
                                                                          ]
                                                                    ]
                                                                    expression (lib/sentenceLexer.mll[227,6874+4]..lib/sentenceLexer.mll[239,7326+10])
                                                                      Texp_let Nonrec
                                                                      [
                                                                        <def>
                                                                          pattern (lib/sentenceLexer.mll[227,6874+8]..lib/sentenceLexer.mll[227,6874+11])
                                                                            Tpat_var "ofs/1504"
                                                                          expression (lib/sentenceLexer.mll[227,6874+14]..lib/sentenceLexer.mll[227,6874+33])
                                                                            Texp_apply
                                                                            expression (lib/sentenceLexer.mll[227,6874+27]..lib/sentenceLexer.mll[227,6874+28])
                                                                              Texp_ident "Stdlib!.-"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (lib/sentenceLexer.mll[227,6874+14]..lib/sentenceLexer.mll[227,6874+26])
                                                                                  Texp_field
                                                                                  expression (lib/sentenceLexer.mll[227,6874+14]..lib/sentenceLexer.mll[227,6874+17])
                                                                                    Texp_ident "pos/1503"
                                                                                  "pos_cnum"
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (lib/sentenceLexer.mll[227,6874+29]..lib/sentenceLexer.mll[227,6874+33])
                                                                                  Texp_ident "ofs1/1501"
                                                                            ]
                                                                      ]
                                                                      expression (lib/sentenceLexer.mll[228,6911+4]..lib/sentenceLexer.mll[239,7326+10])
                                                                        Texp_sequence
                                                                        expression (lib/sentenceLexer.mll[228,6911+4]..lib/sentenceLexer.mll[228,6911+33])
                                                                          Texp_apply
                                                                          expression (lib/sentenceLexer.mll[228,6911+4]..lib/sentenceLexer.mll[228,6911+13])
                                                                            Texp_ident "overwrite/1282"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (lib/sentenceLexer.mll[228,6911+14]..lib/sentenceLexer.mll[228,6911+21])
                                                                                Texp_ident "content/1502"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (lib/sentenceLexer.mll[228,6911+22]..lib/sentenceLexer.mll[228,6911+25])
                                                                                Texp_ident "ofs/1504"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (lib/sentenceLexer.mll[228,6911+26]..lib/sentenceLexer.mll[228,6911+29])
                                                                                Texp_constant Const_char 24
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (lib/sentenceLexer.mll[228,6911+30]..lib/sentenceLexer.mll[228,6911+33])
                                                                                Texp_constant Const_char 5f
                                                                          ]
                                                                        expression (lib/sentenceLexer.mll[229,6946+4]..lib/sentenceLexer.mll[239,7326+10])
                                                                          Texp_let Nonrec
                                                                          [
                                                                            <def>
                                                                              pattern (lib/sentenceLexer.mll[229,6946+8]..lib/sentenceLexer.mll[229,6946+15])
                                                                                Tpat_var "ofslpar/1505"
                                                                              expression (lib/sentenceLexer.mll[229,6946+18]..lib/sentenceLexer.mll[229,6946+31])
                                                                                Texp_apply
                                                                                expression (lib/sentenceLexer.mll[229,6946+22]..lib/sentenceLexer.mll[229,6946+23])
                                                                                  Texp_ident "Stdlib!.+"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (lib/sentenceLexer.mll[229,6946+18]..lib/sentenceLexer.mll[229,6946+21])
                                                                                      Texp_ident "ofs/1504"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (lib/sentenceLexer.mll[229,6946+24]..lib/sentenceLexer.mll[229,6946+31])
                                                                                      Texp_ident "ofslpar/1494"
                                                                                ]
                                                                          ]
                                                                          expression (lib/sentenceLexer.mll[230,6981+4]..lib/sentenceLexer.mll[239,7326+10])
                                                                            Texp_match
                                                                            expression (lib/sentenceLexer.mll[230,6981+10]..lib/sentenceLexer.mll[230,6981+14])
                                                                              Texp_tuple
                                                                              [
                                                                                expression (lib/sentenceLexer.mll[230,6981+10]..lib/sentenceLexer.mll[230,6981+11])
                                                                                  Texp_ident "i/1489"
                                                                                expression (lib/sentenceLexer.mll[230,6981+13]..lib/sentenceLexer.mll[230,6981+14])
                                                                                  Texp_ident "x/1490"
                                                                              ]
                                                                            [
                                                                              <case>
                                                                                pattern (lib/sentenceLexer.mll[231,7001+6]..lib/sentenceLexer.mll[231,7001+18])
                                                                                  Tpat_value
                                                                                  pattern (lib/sentenceLexer.mll[231,7001+6]..lib/sentenceLexer.mll[231,7001+18])
                                                                                    Tpat_tuple
                                                                                    [
                                                                                      pattern (lib/sentenceLexer.mll[231,7001+6]..lib/sentenceLexer.mll[231,7001+10])
                                                                                        Tpat_construct "None"
                                                                                        []
                                                                                        None
                                                                                      pattern (lib/sentenceLexer.mll[231,7001+12]..lib/sentenceLexer.mll[231,7001+18])
                                                                                        Tpat_construct "Some"
                                                                                        [
                                                                                          pattern (lib/sentenceLexer.mll[231,7001+17]..lib/sentenceLexer.mll[231,7001+18])
                                                                                            Tpat_var "x/1506"
                                                                                        ]
                                                                                        None
                                                                                    ]
                                                                                expression (lib/sentenceLexer.mll[232,7023+8]..lib/sentenceLexer.mll[233,7066+65])
                                                                                  Texp_sequence
                                                                                  expression (lib/sentenceLexer.mll[232,7023+8]..lib/sentenceLexer.mll[232,7023+41])
                                                                                    Texp_apply
                                                                                    expression (lib/sentenceLexer.mll[232,7023+8]..lib/sentenceLexer.mll[232,7023+17])
                                                                                      Texp_ident "overwrite/1282"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/sentenceLexer.mll[232,7023+18]..lib/sentenceLexer.mll[232,7023+25])
                                                                                          Texp_ident "content/1502"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/sentenceLexer.mll[232,7023+26]..lib/sentenceLexer.mll[232,7023+33])
                                                                                          Texp_ident "ofslpar/1505"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/sentenceLexer.mll[232,7023+34]..lib/sentenceLexer.mll[232,7023+37])
                                                                                          Texp_constant Const_char 28
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/sentenceLexer.mll[232,7023+38]..lib/sentenceLexer.mll[232,7023+41])
                                                                                          Texp_constant Const_char 5f
                                                                                    ]
                                                                                  expression (lib/sentenceLexer.mll[233,7066+8]..lib/sentenceLexer.mll[233,7066+65])
                                                                                    Texp_apply
                                                                                    expression (lib/sentenceLexer.mll[233,7066+8]..lib/sentenceLexer.mll[233,7066+17])
                                                                                      Texp_ident "overwrite/1282"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/sentenceLexer.mll[233,7066+18]..lib/sentenceLexer.mll[233,7066+25])
                                                                                          Texp_ident "content/1502"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/sentenceLexer.mll[233,7066+26]..lib/sentenceLexer.mll[233,7066+57])
                                                                                          Texp_apply
                                                                                          expression (lib/sentenceLexer.mll[233,7066+39]..lib/sentenceLexer.mll[233,7066+40])
                                                                                            Texp_ident "Stdlib!.+"
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (lib/sentenceLexer.mll[233,7066+27]..lib/sentenceLexer.mll[233,7066+38])
                                                                                                Texp_apply
                                                                                                expression (lib/sentenceLexer.mll[233,7066+35]..lib/sentenceLexer.mll[233,7066+36])
                                                                                                  Texp_ident "Stdlib!.+"
                                                                                                [
                                                                                                  <arg>
                                                                                                    Nolabel
                                                                                                    expression (lib/sentenceLexer.mll[233,7066+27]..lib/sentenceLexer.mll[233,7066+34])
                                                                                                      Texp_ident "ofslpar/1505"
                                                                                                  <arg>
                                                                                                    Nolabel
                                                                                                    expression (lib/sentenceLexer.mll[233,7066+37]..lib/sentenceLexer.mll[233,7066+38])
                                                                                                      Texp_constant Const_int 1
                                                                                                ]
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (lib/sentenceLexer.mll[233,7066+41]..lib/sentenceLexer.mll[233,7066+56])
                                                                                                Texp_apply
                                                                                                expression (lib/sentenceLexer.mll[233,7066+41]..lib/sentenceLexer.mll[233,7066+54])
                                                                                                  Texp_ident "Stdlib!.String.length"
                                                                                                [
                                                                                                  <arg>
                                                                                                    Nolabel
                                                                                                    expression (lib/sentenceLexer.mll[233,7066+55]..lib/sentenceLexer.mll[233,7066+56])
                                                                                                      Texp_ident "x/1506"
                                                                                                ]
                                                                                          ]
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/sentenceLexer.mll[233,7066+58]..lib/sentenceLexer.mll[233,7066+61])
                                                                                          Texp_constant Const_char 29
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/sentenceLexer.mll[233,7066+62]..lib/sentenceLexer.mll[233,7066+65])
                                                                                          Texp_constant Const_char 5f
                                                                                    ]
                                                                              <case>
                                                                                pattern (lib/sentenceLexer.mll[234,7132+6]..lib/sentenceLexer.mll[234,7132+18])
                                                                                  Tpat_value
                                                                                  pattern (lib/sentenceLexer.mll[234,7132+6]..lib/sentenceLexer.mll[234,7132+18])
                                                                                    Tpat_tuple
                                                                                    [
                                                                                      pattern (lib/sentenceLexer.mll[234,7132+6]..lib/sentenceLexer.mll[234,7132+12])
                                                                                        Tpat_construct "Some"
                                                                                        [
                                                                                          pattern (lib/sentenceLexer.mll[234,7132+11]..lib/sentenceLexer.mll[234,7132+12])
                                                                                            Tpat_var "i/1507"
                                                                                        ]
                                                                                        None
                                                                                      pattern (lib/sentenceLexer.mll[234,7132+14]..lib/sentenceLexer.mll[234,7132+18])
                                                                                        Tpat_construct "None"
                                                                                        []
                                                                                        None
                                                                                    ]
                                                                                expression (lib/sentenceLexer.mll[235,7154+8]..lib/sentenceLexer.mll[237,7246+65])
                                                                                  Texp_sequence
                                                                                  expression (lib/sentenceLexer.mll[235,7154+8]..lib/sentenceLexer.mll[235,7154+41])
                                                                                    Texp_apply
                                                                                    expression (lib/sentenceLexer.mll[235,7154+8]..lib/sentenceLexer.mll[235,7154+17])
                                                                                      Texp_ident "overwrite/1282"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/sentenceLexer.mll[235,7154+18]..lib/sentenceLexer.mll[235,7154+25])
                                                                                          Texp_ident "content/1502"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/sentenceLexer.mll[235,7154+26]..lib/sentenceLexer.mll[235,7154+33])
                                                                                          Texp_ident "ofslpar/1505"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/sentenceLexer.mll[235,7154+34]..lib/sentenceLexer.mll[235,7154+37])
                                                                                          Texp_constant Const_char 28
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/sentenceLexer.mll[235,7154+38]..lib/sentenceLexer.mll[235,7154+41])
                                                                                          Texp_constant Const_char 5f
                                                                                    ]
                                                                                  expression (lib/sentenceLexer.mll[236,7197+8]..lib/sentenceLexer.mll[237,7246+65])
                                                                                    Texp_sequence
                                                                                    expression (lib/sentenceLexer.mll[236,7197+8]..lib/sentenceLexer.mll[236,7197+47])
                                                                                      Texp_apply
                                                                                      expression (lib/sentenceLexer.mll[236,7197+8]..lib/sentenceLexer.mll[236,7197+17])
                                                                                        Texp_ident "overwrite/1282"
                                                                                      [
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (lib/sentenceLexer.mll[236,7197+18]..lib/sentenceLexer.mll[236,7197+25])
                                                                                            Texp_ident "content/1502"
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (lib/sentenceLexer.mll[236,7197+26]..lib/sentenceLexer.mll[236,7197+39])
                                                                                            Texp_apply
                                                                                            expression (lib/sentenceLexer.mll[236,7197+35]..lib/sentenceLexer.mll[236,7197+36])
                                                                                              Texp_ident "Stdlib!.+"
                                                                                            [
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (lib/sentenceLexer.mll[236,7197+27]..lib/sentenceLexer.mll[236,7197+34])
                                                                                                  Texp_ident "ofslpar/1505"
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (lib/sentenceLexer.mll[236,7197+37]..lib/sentenceLexer.mll[236,7197+38])
                                                                                                  Texp_constant Const_int 1
                                                                                            ]
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (lib/sentenceLexer.mll[236,7197+40]..lib/sentenceLexer.mll[236,7197+43])
                                                                                            Texp_constant Const_char 24
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (lib/sentenceLexer.mll[236,7197+44]..lib/sentenceLexer.mll[236,7197+47])
                                                                                            Texp_constant Const_char 5f
                                                                                      ]
                                                                                    expression (lib/sentenceLexer.mll[237,7246+8]..lib/sentenceLexer.mll[237,7246+65])
                                                                                      Texp_apply
                                                                                      expression (lib/sentenceLexer.mll[237,7246+8]..lib/sentenceLexer.mll[237,7246+17])
                                                                                        Texp_ident "overwrite/1282"
                                                                                      [
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (lib/sentenceLexer.mll[237,7246+18]..lib/sentenceLexer.mll[237,7246+25])
                                                                                            Texp_ident "content/1502"
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (lib/sentenceLexer.mll[237,7246+26]..lib/sentenceLexer.mll[237,7246+57])
                                                                                            Texp_apply
                                                                                            expression (lib/sentenceLexer.mll[237,7246+39]..lib/sentenceLexer.mll[237,7246+40])
                                                                                              Texp_ident "Stdlib!.+"
                                                                                            [
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (lib/sentenceLexer.mll[237,7246+27]..lib/sentenceLexer.mll[237,7246+38])
                                                                                                  Texp_apply
                                                                                                  expression (lib/sentenceLexer.mll[237,7246+35]..lib/sentenceLexer.mll[237,7246+36])
                                                                                                    Texp_ident "Stdlib!.+"
                                                                                                  [
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (lib/sentenceLexer.mll[237,7246+27]..lib/sentenceLexer.mll[237,7246+34])
                                                                                                        Texp_ident "ofslpar/1505"
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (lib/sentenceLexer.mll[237,7246+37]..lib/sentenceLexer.mll[237,7246+38])
                                                                                                        Texp_constant Const_int 2
                                                                                                  ]
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (lib/sentenceLexer.mll[237,7246+41]..lib/sentenceLexer.mll[237,7246+56])
                                                                                                  Texp_apply
                                                                                                  expression (lib/sentenceLexer.mll[237,7246+41]..lib/sentenceLexer.mll[237,7246+54])
                                                                                                    Texp_ident "Stdlib!.String.length"
                                                                                                  [
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (lib/sentenceLexer.mll[237,7246+55]..lib/sentenceLexer.mll[237,7246+56])
                                                                                                        Texp_ident "i/1507"
                                                                                                  ]
                                                                                            ]
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (lib/sentenceLexer.mll[237,7246+58]..lib/sentenceLexer.mll[237,7246+61])
                                                                                            Texp_constant Const_char 29
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (lib/sentenceLexer.mll[237,7246+62]..lib/sentenceLexer.mll[237,7246+65])
                                                                                            Texp_constant Const_char 5f
                                                                                      ]
                                                                              <case>
                                                                                pattern (lib/sentenceLexer.mll[238,7312+6]..lib/sentenceLexer.mll[238,7312+10])
                                                                                  Tpat_value
                                                                                  pattern (lib/sentenceLexer.mll[238,7312+6]..lib/sentenceLexer.mll[238,7312+10])
                                                                                    Tpat_tuple
                                                                                    [
                                                                                      pattern (lib/sentenceLexer.mll[238,7312+6]..lib/sentenceLexer.mll[238,7312+7])
                                                                                        Tpat_any
                                                                                      pattern (lib/sentenceLexer.mll[238,7312+9]..lib/sentenceLexer.mll[238,7312+10])
                                                                                        Tpat_any
                                                                                    ]
                                                                                expression (lib/sentenceLexer.mll[239,7326+8]..lib/sentenceLexer.mll[239,7326+10])
                                                                                  Texp_construct "()"
                                                                                  []
                                                                            ]
                                                              ]
                                                        ]
                                                  ]
                                                  expression (lib/sentenceLexer.mll[241,7342+2]..lib/sentenceLexer.mll[246,7429+41])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (lib/sentenceLexer.mll[241,7342+6]..lib/sentenceLexer.mll[241,7342+13])
                                                          Tpat_var "keyword/1508"
                                                        expression (lib/sentenceLexer.mll[242,7358+4]..lib/sentenceLexer.mll[242,7358+44])
                                                          Texp_construct "Some"
                                                          [
                                                            expression (lib/sentenceLexer.mll[242,7358+9]..lib/sentenceLexer.mll[242,7358+44])
                                                              Texp_construct "Position"
                                                              [
                                                                expression (lib/sentenceLexer.mll[242,7358+20]..lib/sentenceLexer.mll[242,7358+27])
                                                                  Texp_ident "subject/1497"
                                                                expression (lib/sentenceLexer.mll[242,7358+29]..lib/sentenceLexer.mll[242,7358+34])
                                                                  Texp_ident "where/1495"
                                                                expression (lib/sentenceLexer.mll[242,7358+36]..lib/sentenceLexer.mll[242,7358+42])
                                                                  Texp_ident "flavor/1496"
                                                              ]
                                                          ]
                                                      <def>
                                                        pattern (lib/sentenceLexer.mll[243,7403+6]..lib/sentenceLexer.mll[243,7403+9])
                                                          Tpat_var "oid/1509"
                                                        expression (lib/sentenceLexer.mll[244,7415+4]..lib/sentenceLexer.mll[244,7415+8])
                                                          Texp_construct "None"
                                                          []
                                                    ]
                                                    expression (lib/sentenceLexer.mll[246,7429+2]..lib/sentenceLexer.mll[246,7429+41])
                                                      Texp_record
                                                        fields =
                                                          [
                                                            "pos"
                                                              expression (lib/sentenceLexer.mll[246,7429+4]..lib/sentenceLexer.mll[246,7429+7])
                                                                Texp_ident "pos/1486"
                                                            "check"
                                                              expression (lib/sentenceLexer.mll[246,7429+9]..lib/sentenceLexer.mll[246,7429+14])
                                                                Texp_ident "check/1498"
                                                            "transform"
                                                              expression (lib/sentenceLexer.mll[246,7429+16]..lib/sentenceLexer.mll[246,7429+25])
                                                                Texp_ident "transform/1499"
                                                            "keyword"
                                                              expression (lib/sentenceLexer.mll[246,7429+27]..lib/sentenceLexer.mll[246,7429+34])
                                                                Texp_ident "keyword/1508"
                                                            "oid"
                                                              expression (lib/sentenceLexer.mll[246,7429+36]..lib/sentenceLexer.mll[246,7429+39])
                                                                Texp_ident "oid/1509"
                                                          ]
                                                        representation =
                                                          Record_regular
                                                        extended_expression =
                                                          None
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/sentenceLexer.mll[253,7640+0]..lib/sentenceLexer.mll[259,7760+61])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[253,7640+4]..lib/sentenceLexer.mll[253,7640+15])
          Tpat_var "no_monsters/1510"
        expression (lib/sentenceLexer.mll[253,7640+16]..lib/sentenceLexer.mll[259,7760+61]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/sentenceLexer.mll[253,7640+16]..lib/sentenceLexer.mll[253,7640+24])
                Tpat_var "monsters/1512"
              expression (lib/sentenceLexer.mll[254,7667+2]..lib/sentenceLexer.mll[259,7760+61])
                Texp_match
                expression (lib/sentenceLexer.mll[254,7667+8]..lib/sentenceLexer.mll[254,7667+16])
                  Texp_ident "monsters/1512"
                [
                  <case>
                    pattern (lib/sentenceLexer.mll[255,7689+4]..lib/sentenceLexer.mll[255,7689+6])
                      Tpat_value
                      pattern (lib/sentenceLexer.mll[255,7689+4]..lib/sentenceLexer.mll[255,7689+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (lib/sentenceLexer.mll[256,7699+6]..lib/sentenceLexer.mll[256,7699+8])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (lib/sentenceLexer.mll[257,7708+4]..lib/sentenceLexer.mll[257,7708+16])
                      Tpat_value
                      pattern (lib/sentenceLexer.mll[257,7708+4]..lib/sentenceLexer.mll[257,7708+16])
                        Tpat_construct "::"
                        [
                          pattern (lib/sentenceLexer.mll[257,7708+4]..lib/sentenceLexer.mll[257,7708+11])
                            Tpat_var "monster/1513"
                          pattern (lib/sentenceLexer.mll[257,7708+15]..lib/sentenceLexer.mll[257,7708+16])
                            Tpat_any
                        ]
                        None
                    expression (lib/sentenceLexer.mll[258,7728+6]..lib/sentenceLexer.mll[259,7760+61])
                      Texp_apply
                      expression (lib/sentenceLexer.mll[258,7728+6]..lib/sentenceLexer.mll[258,7728+17])
                        Texp_ident "Gbnf_parser!.Error.error"
                      [
                        <arg>
                          Nolabel
                          expression (lib/sentenceLexer.mll[258,7728+18]..lib/sentenceLexer.mll[258,7728+31])
                            Texp_construct "::"
                            [
                              expression (lib/sentenceLexer.mll[258,7728+19]..lib/sentenceLexer.mll[258,7728+30])
                                Texp_field
                                expression (lib/sentenceLexer.mll[258,7728+19]..lib/sentenceLexer.mll[258,7728+26])
                                  Texp_ident "monster/1513"
                                "pos"
                              expression (lib/sentenceLexer.mll[258,7728+30]..lib/sentenceLexer.mll[258,7728+31]) ghost
                                Texp_construct "[]"
                                []
                            ]
                        <arg>
                          Nolabel
                          expression (lib/sentenceLexer.mll[259,7760+8]..lib/sentenceLexer.mll[259,7760+61])
                            Texp_construct "CamlinternalFormatBasics.Format"
                            [
                              expression (lib/sentenceLexer.mll[259,7760+8]..lib/sentenceLexer.mll[259,7760+61]) ghost
                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                [
                                  expression (lib/sentenceLexer.mll[259,7760+8]..lib/sentenceLexer.mll[259,7760+61]) ghost
                                    Texp_constant Const_string("a Menhir keyword cannot be used in an OCaml header.",(lib/sentenceLexer.mll[259,7760+8]..lib/sentenceLexer.mll[259,7760+61]) ghost,None)
                                  expression (lib/sentenceLexer.mll[259,7760+8]..lib/sentenceLexer.mll[259,7760+61]) ghost
                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                    []
                                ]
                              expression (lib/sentenceLexer.mll[259,7760+8]..lib/sentenceLexer.mll[259,7760+61]) ghost
                                Texp_constant Const_string("a Menhir keyword cannot be used in an OCaml header.",(lib/sentenceLexer.mll[259,7760+8]..lib/sentenceLexer.mll[259,7760+61]) ghost,None)
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/sentenceLexer.mll[265,7980+0]..lib/sentenceLexer.mll[270,8072+8])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[265,7980+4]..lib/sentenceLexer.mll[265,7980+14])
          Tpat_var "gather_oid/1514"
        expression (lib/sentenceLexer.mll[265,7980+15]..lib/sentenceLexer.mll[270,8072+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/sentenceLexer.mll[265,7980+15]..lib/sentenceLexer.mll[265,7980+17])
                Tpat_var "xs/1516"
              expression (lib/sentenceLexer.mll[265,7980+18]..lib/sentenceLexer.mll[270,8072+8]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/sentenceLexer.mll[265,7980+18]..lib/sentenceLexer.mll[265,7980+21])
                      Tpat_var "oid/1517"
                    expression (lib/sentenceLexer.mll[266,8004+2]..lib/sentenceLexer.mll[270,8072+8])
                      Texp_match
                      expression (lib/sentenceLexer.mll[266,8004+8]..lib/sentenceLexer.mll[266,8004+11])
                        Texp_ident "oid/1517"
                      [
                        <case>
                          pattern (lib/sentenceLexer.mll[267,8021+4]..lib/sentenceLexer.mll[267,8021+10])
                            Tpat_value
                            pattern (lib/sentenceLexer.mll[267,8021+4]..lib/sentenceLexer.mll[267,8021+10])
                              Tpat_construct "Some"
                              [
                                pattern (lib/sentenceLexer.mll[267,8021+9]..lib/sentenceLexer.mll[267,8021+10])
                                  Tpat_var "x/1518"
                              ]
                              None
                          expression (lib/sentenceLexer.mll[268,8035+6]..lib/sentenceLexer.mll[268,8035+24])
                            Texp_apply
                            expression (lib/sentenceLexer.mll[268,8035+6]..lib/sentenceLexer.mll[268,8035+19])
                              Texp_ident "Gbnf_parser!.StringSet.add"
                            [
                              <arg>
                                Nolabel
                                expression (lib/sentenceLexer.mll[268,8035+20]..lib/sentenceLexer.mll[268,8035+21])
                                  Texp_ident "x/1518"
                              <arg>
                                Nolabel
                                expression (lib/sentenceLexer.mll[268,8035+22]..lib/sentenceLexer.mll[268,8035+24])
                                  Texp_ident "xs/1516"
                            ]
                        <case>
                          pattern (lib/sentenceLexer.mll[269,8060+4]..lib/sentenceLexer.mll[269,8060+8])
                            Tpat_value
                            pattern (lib/sentenceLexer.mll[269,8060+4]..lib/sentenceLexer.mll[269,8060+8])
                              Tpat_construct "None"
                              []
                              None
                          expression (lib/sentenceLexer.mll[270,8072+6]..lib/sentenceLexer.mll[270,8072+8])
                            Texp_ident "xs/1516"
                      ]
                ]
          ]
    ]
  structure_item (lib/sentenceLexer.mll[272,8082+0]..lib/sentenceLexer.mll[273,8105+49])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[272,8082+4]..lib/sentenceLexer.mll[272,8082+15])
          Tpat_var "gather_oids/1705"
        expression (lib/sentenceLexer.mll[272,8082+16]..lib/sentenceLexer.mll[273,8105+49]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/sentenceLexer.mll[272,8082+16]..lib/sentenceLexer.mll[272,8082+20])
                Tpat_var "oids/1707"
              expression (lib/sentenceLexer.mll[273,8105+2]..lib/sentenceLexer.mll[273,8105+49])
                Texp_apply
                expression (lib/sentenceLexer.mll[273,8105+2]..lib/sentenceLexer.mll[273,8105+17])
                  Texp_ident "Stdlib!.Array.fold_left"
                [
                  <arg>
                    Nolabel
                    expression (lib/sentenceLexer.mll[273,8105+18]..lib/sentenceLexer.mll[273,8105+28])
                      Texp_ident "gather_oid/1514"
                  <arg>
                    Nolabel
                    expression (lib/sentenceLexer.mll[273,8105+29]..lib/sentenceLexer.mll[273,8105+44])
                      Texp_ident "Gbnf_parser!.StringSet.empty"
                  <arg>
                    Nolabel
                    expression (lib/sentenceLexer.mll[273,8105+45]..lib/sentenceLexer.mll[273,8105+49])
                      Texp_ident "oids/1707"
                ]
          ]
    ]
  structure_item (lib/sentenceLexer.mll[277,8225+0]..lib/sentenceLexer.mll[280,8322+28])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[277,8225+4]..lib/sentenceLexer.mll[277,8225+19])
          Tpat_var "gather_monsters/1756"
        expression (lib/sentenceLexer.mll[277,8225+20]..lib/sentenceLexer.mll[280,8322+28]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/sentenceLexer.mll[277,8225+20]..lib/sentenceLexer.mll[277,8225+28])
                Tpat_var "monsters/1758"
              expression (lib/sentenceLexer.mll[278,8256+2]..lib/sentenceLexer.mll[280,8322+28])
                Texp_apply
                expression (lib/sentenceLexer.mll[278,8256+2]..lib/sentenceLexer.mll[278,8256+16])
                  Texp_ident "Stdlib!.List.fold_left"
                [
                  <arg>
                    Nolabel
                    expression (lib/sentenceLexer.mll[278,8256+17]..lib/sentenceLexer.mll[280,8322+3])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/sentenceLexer.mll[278,8256+22]..lib/sentenceLexer.mll[278,8256+24])
                            Tpat_var "xs/1825"
                          expression (lib/sentenceLexer.mll[278,8256+25]..lib/sentenceLexer.mll[279,8292+29]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (lib/sentenceLexer.mll[278,8256+25]..lib/sentenceLexer.mll[278,8256+32])
                                  Tpat_var "monster/1826"
                                expression (lib/sentenceLexer.mll[279,8292+4]..lib/sentenceLexer.mll[279,8292+29])
                                  Texp_apply
                                  expression (lib/sentenceLexer.mll[279,8292+4]..lib/sentenceLexer.mll[279,8292+14])
                                    Texp_ident "gather_oid/1514"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/sentenceLexer.mll[279,8292+15]..lib/sentenceLexer.mll[279,8292+17])
                                        Texp_ident "xs/1825"
                                    <arg>
                                      Nolabel
                                      expression (lib/sentenceLexer.mll[279,8292+18]..lib/sentenceLexer.mll[279,8292+29])
                                        Texp_field
                                        expression (lib/sentenceLexer.mll[279,8292+18]..lib/sentenceLexer.mll[279,8292+25])
                                          Texp_ident "monster/1826"
                                        "oid"
                                  ]
                            ]
                      ]
                  <arg>
                    Nolabel
                    expression (lib/sentenceLexer.mll[280,8322+4]..lib/sentenceLexer.mll[280,8322+19])
                      Texp_ident "Gbnf_parser!.StringSet.empty"
                  <arg>
                    Nolabel
                    expression (lib/sentenceLexer.mll[280,8322+20]..lib/sentenceLexer.mll[280,8322+28])
                      Texp_ident "monsters/1758"
                ]
          ]
    ]
  structure_item (lib/sentenceLexer.mll[286,8458+0]..lib/sentenceLexer.mll[320,10028+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[286,8458+4]..lib/sentenceLexer.mll[286,8458+14])
          Tpat_var "mk_stretch/1827"
        expression (lib/sentenceLexer.mll[286,8458+15]..lib/sentenceLexer.mll[320,10028+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/sentenceLexer.mll[286,8458+15]..lib/sentenceLexer.mll[286,8458+19])
                Tpat_var "pos1/1829"
              expression (lib/sentenceLexer.mll[286,8458+20]..lib/sentenceLexer.mll[320,10028+4]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/sentenceLexer.mll[286,8458+20]..lib/sentenceLexer.mll[286,8458+24])
                      Tpat_var "pos2/1830"
                    expression (lib/sentenceLexer.mll[286,8458+25]..lib/sentenceLexer.mll[320,10028+4]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/sentenceLexer.mll[286,8458+25]..lib/sentenceLexer.mll[286,8458+37])
                            Tpat_var "parenthesize/1831"
                          expression (lib/sentenceLexer.mll[286,8458+38]..lib/sentenceLexer.mll[320,10028+4]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (lib/sentenceLexer.mll[286,8458+38]..lib/sentenceLexer.mll[286,8458+46])
                                  Tpat_var "monsters/1832"
                                expression (lib/sentenceLexer.mll[288,8553+2]..lib/sentenceLexer.mll[320,10028+4])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/sentenceLexer.mll[288,8553+6]..lib/sentenceLexer.mll[288,8553+17])
                                        extra
                                          Tpat_extra_constraint
                                          core_type (lib/sentenceLexer.mll[288,8553+20]..lib/sentenceLexer.mll[288,8553+26])
                                            Ttyp_constr "string/15!"
                                            []
                                        Tpat_alias "raw_content/1833"
                                        pattern (lib/sentenceLexer.mll[288,8553+6]..lib/sentenceLexer.mll[288,8553+17])
                                          Tpat_any
                                      expression (lib/sentenceLexer.mll[288,8553+29]..lib/sentenceLexer.mll[288,8553+57])
                                        extra
                                          Texp_constraint
                                          core_type (lib/sentenceLexer.mll[288,8553+20]..lib/sentenceLexer.mll[288,8553+26])
                                            Ttyp_constr "string/15!"
                                            []
                                        Texp_apply
                                        expression (lib/sentenceLexer.mll[288,8553+29]..lib/sentenceLexer.mll[288,8553+44])
                                          Texp_ident "Gbnf_parser!.InputFile.chunk"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/sentenceLexer.mll[288,8553+45]..lib/sentenceLexer.mll[288,8553+57])
                                              Texp_tuple
                                              [
                                                expression (lib/sentenceLexer.mll[288,8553+46]..lib/sentenceLexer.mll[288,8553+50])
                                                  Texp_ident "pos1/1829"
                                                expression (lib/sentenceLexer.mll[288,8553+52]..lib/sentenceLexer.mll[288,8553+56])
                                                  Texp_ident "pos2/1830"
                                              ]
                                        ]
                                  ]
                                  expression (lib/sentenceLexer.mll[291,8752+2]..lib/sentenceLexer.mll[320,10028+4])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/sentenceLexer.mll[291,8752+6]..lib/sentenceLexer.mll[291,8752+13])
                                          extra
                                            Tpat_extra_constraint
                                            core_type (lib/sentenceLexer.mll[291,8752+16]..lib/sentenceLexer.mll[291,8752+22])
                                              Ttyp_constr "string/15!"
                                              []
                                          Tpat_alias "content/1848"
                                          pattern (lib/sentenceLexer.mll[291,8752+6]..lib/sentenceLexer.mll[291,8752+13])
                                            Tpat_any
                                        expression (lib/sentenceLexer.mll[292,8777+4]..lib/sentenceLexer.mll[298,8995+38])
                                          extra
                                            Texp_constraint
                                            core_type (lib/sentenceLexer.mll[291,8752+16]..lib/sentenceLexer.mll[291,8752+22])
                                              Ttyp_constr "string/15!"
                                              []
                                          Texp_match
                                          expression (lib/sentenceLexer.mll[292,8777+10]..lib/sentenceLexer.mll[292,8777+18])
                                            Texp_ident "monsters/1832"
                                          [
                                            <case>
                                              pattern (lib/sentenceLexer.mll[293,8801+6]..lib/sentenceLexer.mll[293,8801+8])
                                                Tpat_value
                                                pattern (lib/sentenceLexer.mll[293,8801+6]..lib/sentenceLexer.mll[293,8801+8])
                                                  Tpat_construct "[]"
                                                  []
                                                  None
                                              expression (lib/sentenceLexer.mll[294,8813+8]..lib/sentenceLexer.mll[294,8813+19])
                                                Texp_ident "raw_content/1833"
                                            <case>
                                              pattern (lib/sentenceLexer.mll[295,8833+6]..lib/sentenceLexer.mll[295,8833+12])
                                                Tpat_value
                                                pattern (lib/sentenceLexer.mll[295,8833+6]..lib/sentenceLexer.mll[295,8833+12])
                                                  Tpat_construct "::"
                                                  [
                                                    pattern (lib/sentenceLexer.mll[295,8833+6]..lib/sentenceLexer.mll[295,8833+7])
                                                      Tpat_any
                                                    pattern (lib/sentenceLexer.mll[295,8833+11]..lib/sentenceLexer.mll[295,8833+12])
                                                      Tpat_any
                                                  ]
                                                  None
                                              expression (lib/sentenceLexer.mll[296,8849+8]..lib/sentenceLexer.mll[298,8995+38])
                                                Texp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (lib/sentenceLexer.mll[296,8849+12]..lib/sentenceLexer.mll[296,8849+19])
                                                      extra
                                                        Tpat_extra_constraint
                                                        core_type (lib/sentenceLexer.mll[296,8849+22]..lib/sentenceLexer.mll[296,8849+27])
                                                          Ttyp_constr "bytes/3!"
                                                          []
                                                      Tpat_alias "content/1849"
                                                      pattern (lib/sentenceLexer.mll[296,8849+12]..lib/sentenceLexer.mll[296,8849+19])
                                                        Tpat_any
                                                    expression (lib/sentenceLexer.mll[296,8849+30]..lib/sentenceLexer.mll[296,8849+57])
                                                      extra
                                                        Texp_constraint
                                                        core_type (lib/sentenceLexer.mll[296,8849+22]..lib/sentenceLexer.mll[296,8849+27])
                                                          Ttyp_constr "bytes/3!"
                                                          []
                                                      Texp_apply
                                                      expression (lib/sentenceLexer.mll[296,8849+30]..lib/sentenceLexer.mll[296,8849+45])
                                                        Texp_ident "Stdlib!.Bytes.of_string"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/sentenceLexer.mll[296,8849+46]..lib/sentenceLexer.mll[296,8849+57])
                                                            Texp_ident "raw_content/1833"
                                                      ]
                                                ]
                                                expression (lib/sentenceLexer.mll[297,8910+8]..lib/sentenceLexer.mll[298,8995+38])
                                                  Texp_sequence
                                                  expression (lib/sentenceLexer.mll[297,8910+8]..lib/sentenceLexer.mll[297,8910+83])
                                                    Texp_apply
                                                    expression (lib/sentenceLexer.mll[297,8910+8]..lib/sentenceLexer.mll[297,8910+17])
                                                      Texp_ident "Stdlib!.List.iter"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/sentenceLexer.mll[297,8910+18]..lib/sentenceLexer.mll[297,8910+74])
                                                          Texp_function
                                                          Nolabel
                                                          [
                                                            <case>
                                                              pattern (lib/sentenceLexer.mll[297,8910+23]..lib/sentenceLexer.mll[297,8910+30])
                                                                Tpat_var "monster/1850"
                                                              expression (lib/sentenceLexer.mll[297,8910+34]..lib/sentenceLexer.mll[297,8910+73])
                                                                Texp_apply
                                                                expression (lib/sentenceLexer.mll[297,8910+34]..lib/sentenceLexer.mll[297,8910+51])
                                                                  Texp_field
                                                                  expression (lib/sentenceLexer.mll[297,8910+34]..lib/sentenceLexer.mll[297,8910+41])
                                                                    Texp_ident "monster/1850"
                                                                  "transform"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/sentenceLexer.mll[297,8910+52]..lib/sentenceLexer.mll[297,8910+65])
                                                                      Texp_field
                                                                      expression (lib/sentenceLexer.mll[297,8910+52]..lib/sentenceLexer.mll[297,8910+56])
                                                                        Texp_ident "pos1/1829"
                                                                      "pos_cnum"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/sentenceLexer.mll[297,8910+66]..lib/sentenceLexer.mll[297,8910+73])
                                                                      Texp_ident "content/1849"
                                                                ]
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/sentenceLexer.mll[297,8910+75]..lib/sentenceLexer.mll[297,8910+83])
                                                          Texp_ident "monsters/1832"
                                                    ]
                                                  expression (lib/sentenceLexer.mll[298,8995+8]..lib/sentenceLexer.mll[298,8995+38])
                                                    Texp_apply
                                                    expression (lib/sentenceLexer.mll[298,8995+8]..lib/sentenceLexer.mll[298,8995+30])
                                                      Texp_ident "Stdlib!.Bytes.unsafe_to_string"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/sentenceLexer.mll[298,8995+31]..lib/sentenceLexer.mll[298,8995+38])
                                                          Texp_ident "content/1849"
                                                    ]
                                          ]
                                    ]
                                    expression (lib/sentenceLexer.mll[303,9240+2]..lib/sentenceLexer.mll[320,10028+4])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (lib/sentenceLexer.mll[303,9240+6]..lib/sentenceLexer.mll[303,9240+13])
                                            Tpat_var "content/1851"
                                          expression (lib/sentenceLexer.mll[304,9256+4]..lib/sentenceLexer.mll[311,9646+64])
                                            Texp_ifthenelse
                                            expression (lib/sentenceLexer.mll[304,9256+7]..lib/sentenceLexer.mll[304,9256+19])
                                              Texp_ident "parenthesize/1831"
                                            expression (lib/sentenceLexer.mll[309,9556+6]..lib/sentenceLexer.mll[309,9556+80])
                                              Texp_apply
                                              expression (lib/sentenceLexer.mll[309,9556+59]..lib/sentenceLexer.mll[309,9556+60])
                                                Texp_ident "Stdlib!.^"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/sentenceLexer.mll[309,9556+6]..lib/sentenceLexer.mll[309,9556+58])
                                                    Texp_apply
                                                    expression (lib/sentenceLexer.mll[309,9556+7]..lib/sentenceLexer.mll[309,9556+18])
                                                      Texp_ident "Stdlib!.String.make"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/sentenceLexer.mll[309,9556+19]..lib/sentenceLexer.mll[309,9556+53])
                                                          Texp_apply
                                                          expression (lib/sentenceLexer.mll[309,9556+49]..lib/sentenceLexer.mll[309,9556+50])
                                                            Texp_ident "Stdlib!.-"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/sentenceLexer.mll[309,9556+20]..lib/sentenceLexer.mll[309,9556+48])
                                                                Texp_apply
                                                                expression (lib/sentenceLexer.mll[309,9556+34]..lib/sentenceLexer.mll[309,9556+35])
                                                                  Texp_ident "Stdlib!.-"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/sentenceLexer.mll[309,9556+20]..lib/sentenceLexer.mll[309,9556+33])
                                                                      Texp_field
                                                                      expression (lib/sentenceLexer.mll[309,9556+20]..lib/sentenceLexer.mll[309,9556+24])
                                                                        Texp_ident "pos1/1829"
                                                                      "pos_cnum"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/sentenceLexer.mll[309,9556+36]..lib/sentenceLexer.mll[309,9556+48])
                                                                      Texp_field
                                                                      expression (lib/sentenceLexer.mll[309,9556+36]..lib/sentenceLexer.mll[309,9556+40])
                                                                        Texp_ident "pos1/1829"
                                                                      "pos_bol"
                                                                ]
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/sentenceLexer.mll[309,9556+51]..lib/sentenceLexer.mll[309,9556+52])
                                                                Texp_constant Const_int 1
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/sentenceLexer.mll[309,9556+54]..lib/sentenceLexer.mll[309,9556+57])
                                                          Texp_constant Const_char 20
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (lib/sentenceLexer.mll[309,9556+61]..lib/sentenceLexer.mll[309,9556+80])
                                                    Texp_apply
                                                    expression (lib/sentenceLexer.mll[309,9556+65]..lib/sentenceLexer.mll[309,9556+66])
                                                      Texp_ident "Stdlib!.^"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/sentenceLexer.mll[309,9556+61]..lib/sentenceLexer.mll[309,9556+64])
                                                          Texp_constant Const_string("(",(lib/sentenceLexer.mll[309,9556+62]..lib/sentenceLexer.mll[309,9556+63]),None)
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/sentenceLexer.mll[309,9556+67]..lib/sentenceLexer.mll[309,9556+80])
                                                          Texp_apply
                                                          expression (lib/sentenceLexer.mll[309,9556+75]..lib/sentenceLexer.mll[309,9556+76])
                                                            Texp_ident "Stdlib!.^"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/sentenceLexer.mll[309,9556+67]..lib/sentenceLexer.mll[309,9556+74])
                                                                Texp_ident "content/1848"
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/sentenceLexer.mll[309,9556+77]..lib/sentenceLexer.mll[309,9556+80])
                                                                Texp_constant Const_string(")",(lib/sentenceLexer.mll[309,9556+78]..lib/sentenceLexer.mll[309,9556+79]),None)
                                                          ]
                                                    ]
                                              ]
                                            Some
                                              expression (lib/sentenceLexer.mll[311,9646+6]..lib/sentenceLexer.mll[311,9646+64])
                                                Texp_apply
                                                expression (lib/sentenceLexer.mll[311,9646+55]..lib/sentenceLexer.mll[311,9646+56])
                                                  Texp_ident "Stdlib!.^"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/sentenceLexer.mll[311,9646+6]..lib/sentenceLexer.mll[311,9646+54])
                                                      Texp_apply
                                                      expression (lib/sentenceLexer.mll[311,9646+7]..lib/sentenceLexer.mll[311,9646+18])
                                                        Texp_ident "Stdlib!.String.make"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/sentenceLexer.mll[311,9646+19]..lib/sentenceLexer.mll[311,9646+49])
                                                            Texp_apply
                                                            expression (lib/sentenceLexer.mll[311,9646+34]..lib/sentenceLexer.mll[311,9646+35])
                                                              Texp_ident "Stdlib!.-"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/sentenceLexer.mll[311,9646+20]..lib/sentenceLexer.mll[311,9646+33])
                                                                  Texp_field
                                                                  expression (lib/sentenceLexer.mll[311,9646+20]..lib/sentenceLexer.mll[311,9646+24])
                                                                    Texp_ident "pos1/1829"
                                                                  "pos_cnum"
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/sentenceLexer.mll[311,9646+36]..lib/sentenceLexer.mll[311,9646+48])
                                                                  Texp_field
                                                                  expression (lib/sentenceLexer.mll[311,9646+36]..lib/sentenceLexer.mll[311,9646+40])
                                                                    Texp_ident "pos1/1829"
                                                                  "pos_bol"
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/sentenceLexer.mll[311,9646+50]..lib/sentenceLexer.mll[311,9646+53])
                                                            Texp_constant Const_char 20
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/sentenceLexer.mll[311,9646+57]..lib/sentenceLexer.mll[311,9646+64])
                                                      Texp_ident "content/1848"
                                                ]
                                      ]
                                      expression (lib/sentenceLexer.mll[313,9716+2]..lib/sentenceLexer.mll[320,10028+4])
                                        Texp_open Fresh
                                        module_expr (lib/sentenceLexer.mll[313,9716+2]..lib/sentenceLexer.mll[313,9716+9])
                                          Tmod_ident "Gbnf_parser!.Stretch"
                                        expression (lib/sentenceLexer.mll[313,9716+11]..lib/sentenceLexer.mll[320,10028+3])
                                          Texp_record
                                            fields =
                                              [
                                                "stretch_filename"
                                                  expression (lib/sentenceLexer.mll[314,9729+23]..lib/sentenceLexer.mll[314,9729+54])
                                                    Texp_apply
                                                    expression (lib/sentenceLexer.mll[314,9729+23]..lib/sentenceLexer.mll[314,9729+52])
                                                      Texp_ident "Gbnf_parser!.InputFile.get_input_file_name"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/sentenceLexer.mll[314,9729+52]..lib/sentenceLexer.mll[314,9729+54])
                                                          Texp_construct "()"
                                                          []
                                                    ]
                                                "stretch_linenum"
                                                  expression (lib/sentenceLexer.mll[315,9785+22]..lib/sentenceLexer.mll[315,9785+35])
                                                    Texp_field
                                                    expression (lib/sentenceLexer.mll[315,9785+22]..lib/sentenceLexer.mll[315,9785+26])
                                                      Texp_ident "pos1/1829"
                                                    "pos_lnum"
                                                "stretch_linecount"
                                                  expression (lib/sentenceLexer.mll[316,9822+24]..lib/sentenceLexer.mll[316,9822+53])
                                                    Texp_apply
                                                    expression (lib/sentenceLexer.mll[316,9822+38]..lib/sentenceLexer.mll[316,9822+39])
                                                      Texp_ident "Stdlib!.-"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/sentenceLexer.mll[316,9822+24]..lib/sentenceLexer.mll[316,9822+37])
                                                          Texp_field
                                                          expression (lib/sentenceLexer.mll[316,9822+24]..lib/sentenceLexer.mll[316,9822+28])
                                                            Texp_ident "pos2/1830"
                                                          "pos_lnum"
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/sentenceLexer.mll[316,9822+40]..lib/sentenceLexer.mll[316,9822+53])
                                                          Texp_field
                                                          expression (lib/sentenceLexer.mll[316,9822+40]..lib/sentenceLexer.mll[316,9822+44])
                                                            Texp_ident "pos1/1829"
                                                          "pos_lnum"
                                                    ]
                                                "stretch_raw_content"
                                                  expression (lib/sentenceLexer.mll[318,9908+26]..lib/sentenceLexer.mll[318,9908+37])
                                                    Texp_ident "raw_content/1833"
                                                "stretch_content"
                                                  expression (lib/sentenceLexer.mll[317,9877+22]..lib/sentenceLexer.mll[317,9877+29])
                                                    Texp_ident "content/1851"
                                                "stretch_keywords"
                                                  expression (lib/sentenceLexer.mll[319,9947+23]..lib/sentenceLexer.mll[319,9947+80])
                                                    Texp_apply
                                                    expression (lib/sentenceLexer.mll[319,9947+23]..lib/sentenceLexer.mll[319,9947+38])
                                                      Texp_ident "Gbnf_parser!.Misc.filter_map"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/sentenceLexer.mll[319,9947+39]..lib/sentenceLexer.mll[319,9947+71])
                                                          Texp_function
                                                          Nolabel
                                                          [
                                                            <case>
                                                              pattern (lib/sentenceLexer.mll[319,9947+44]..lib/sentenceLexer.mll[319,9947+51])
                                                                Tpat_var "monster/1895"
                                                              expression (lib/sentenceLexer.mll[319,9947+55]..lib/sentenceLexer.mll[319,9947+70])
                                                                Texp_field
                                                                expression (lib/sentenceLexer.mll[319,9947+55]..lib/sentenceLexer.mll[319,9947+62])
                                                                  Texp_ident "monster/1895"
                                                                "keyword"
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/sentenceLexer.mll[319,9947+72]..lib/sentenceLexer.mll[319,9947+80])
                                                          Texp_ident "monsters/1832"
                                                    ]
                                              ]
                                            representation =
                                              Record_regular
                                            extended_expression =
                                              None
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/sentenceLexer.mll[326,10219+0]..lib/sentenceLexer.mll[341,10831+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[326,10219+4]..lib/sentenceLexer.mll[326,10219+17])
          Tpat_var "stretch_of_id/1896"
        expression (lib/sentenceLexer.mll[326,10219+18]..lib/sentenceLexer.mll[341,10831+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/sentenceLexer.mll[326,10219+19]..lib/sentenceLexer.mll[326,10219+21])
                extra
                  Tpat_extra_constraint
                  core_type (lib/sentenceLexer.mll[326,10219+24]..lib/sentenceLexer.mll[326,10219+38])
                    Ttyp_constr "Gbnf_parser!.Positions.located"
                    [
                      core_type (lib/sentenceLexer.mll[326,10219+24]..lib/sentenceLexer.mll[326,10219+30])
                        Ttyp_constr "string/15!"
                        []
                    ]
                Tpat_alias "id/1898"
                pattern (lib/sentenceLexer.mll[326,10219+19]..lib/sentenceLexer.mll[326,10219+21])
                  Tpat_any
              expression (lib/sentenceLexer.mll[327,10261+2]..lib/sentenceLexer.mll[341,10831+4])
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/sentenceLexer.mll[327,10261+6]..lib/sentenceLexer.mll[327,10261+22])
                      Tpat_tuple
                      [
                        pattern (lib/sentenceLexer.mll[327,10261+6]..lib/sentenceLexer.mll[327,10261+17])
                          Tpat_var "raw_content/1899"
                        pattern (lib/sentenceLexer.mll[327,10261+19]..lib/sentenceLexer.mll[327,10261+22])
                          Tpat_var "pos/1900"
                      ]
                    expression (lib/sentenceLexer.mll[327,10261+25]..lib/sentenceLexer.mll[327,10261+47])
                      Texp_apply
                      expression (lib/sentenceLexer.mll[327,10261+25]..lib/sentenceLexer.mll[327,10261+44])
                        Texp_ident "Gbnf_parser!.Positions.decompose"
                      [
                        <arg>
                          Nolabel
                          expression (lib/sentenceLexer.mll[327,10261+45]..lib/sentenceLexer.mll[327,10261+47])
                            Texp_ident "id/1898"
                      ]
                ]
                expression (lib/sentenceLexer.mll[328,10312+2]..lib/sentenceLexer.mll[341,10831+4])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (lib/sentenceLexer.mll[328,10312+6]..lib/sentenceLexer.mll[328,10312+10])
                        Tpat_var "pos1/1936"
                      expression (lib/sentenceLexer.mll[328,10312+13]..lib/sentenceLexer.mll[328,10312+44])
                        Texp_apply
                        expression (lib/sentenceLexer.mll[328,10312+13]..lib/sentenceLexer.mll[328,10312+40])
                          Texp_ident "Gbnf_parser!.Positions.start_of_position"
                        [
                          <arg>
                            Nolabel
                            expression (lib/sentenceLexer.mll[328,10312+41]..lib/sentenceLexer.mll[328,10312+44])
                              Texp_ident "pos/1900"
                        ]
                    <def>
                      pattern (lib/sentenceLexer.mll[329,10357+6]..lib/sentenceLexer.mll[329,10357+10])
                        Tpat_var "pos2/1937"
                      expression (lib/sentenceLexer.mll[329,10357+13]..lib/sentenceLexer.mll[329,10357+42])
                        Texp_apply
                        expression (lib/sentenceLexer.mll[329,10357+13]..lib/sentenceLexer.mll[329,10357+38])
                          Texp_ident "Gbnf_parser!.Positions.end_of_position"
                        [
                          <arg>
                            Nolabel
                            expression (lib/sentenceLexer.mll[329,10357+39]..lib/sentenceLexer.mll[329,10357+42])
                              Texp_ident "pos/1900"
                        ]
                    <def>
                      pattern (lib/sentenceLexer.mll[330,10400+6]..lib/sentenceLexer.mll[330,10400+14])
                        Tpat_var "filename/1938"
                      expression (lib/sentenceLexer.mll[330,10400+17]..lib/sentenceLexer.mll[330,10400+51])
                        Texp_apply
                        expression (lib/sentenceLexer.mll[330,10400+17]..lib/sentenceLexer.mll[330,10400+47])
                          Texp_ident "Gbnf_parser!.Positions.filename_of_position"
                        [
                          <arg>
                            Nolabel
                            expression (lib/sentenceLexer.mll[330,10400+48]..lib/sentenceLexer.mll[330,10400+51])
                              Texp_ident "pos/1900"
                        ]
                  ]
                  expression (lib/sentenceLexer.mll[331,10455+2]..lib/sentenceLexer.mll[341,10831+4])
                    Texp_sequence
                    expression (lib/sentenceLexer.mll[331,10455+2]..lib/sentenceLexer.mll[331,10455+35])
                      Texp_assert                      expression (lib/sentenceLexer.mll[331,10455+9]..lib/sentenceLexer.mll[331,10455+35])
                        Texp_apply
                        expression (lib/sentenceLexer.mll[331,10455+15]..lib/sentenceLexer.mll[331,10455+17])
                          Texp_ident "Stdlib!.!="
                        [
                          <arg>
                            Nolabel
                            expression (lib/sentenceLexer.mll[331,10455+10]..lib/sentenceLexer.mll[331,10455+14])
                              Texp_ident "pos1/1936"
                          <arg>
                            Nolabel
                            expression (lib/sentenceLexer.mll[331,10455+18]..lib/sentenceLexer.mll[331,10455+34])
                              Texp_ident "Stdlib!.Lexing.dummy_pos"
                        ]
                    expression (lib/sentenceLexer.mll[332,10492+2]..lib/sentenceLexer.mll[341,10831+4])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/sentenceLexer.mll[332,10492+6]..lib/sentenceLexer.mll[332,10492+13])
                            Tpat_var "padding/1939"
                          expression (lib/sentenceLexer.mll[332,10492+16]..lib/sentenceLexer.mll[332,10492+44])
                            Texp_apply
                            expression (lib/sentenceLexer.mll[332,10492+30]..lib/sentenceLexer.mll[332,10492+31])
                              Texp_ident "Stdlib!.-"
                            [
                              <arg>
                                Nolabel
                                expression (lib/sentenceLexer.mll[332,10492+16]..lib/sentenceLexer.mll[332,10492+29])
                                  Texp_field
                                  expression (lib/sentenceLexer.mll[332,10492+16]..lib/sentenceLexer.mll[332,10492+20])
                                    Texp_ident "pos1/1936"
                                  "pos_cnum"
                              <arg>
                                Nolabel
                                expression (lib/sentenceLexer.mll[332,10492+32]..lib/sentenceLexer.mll[332,10492+44])
                                  Texp_field
                                  expression (lib/sentenceLexer.mll[332,10492+32]..lib/sentenceLexer.mll[332,10492+36])
                                    Texp_ident "pos1/1936"
                                  "pos_bol"
                            ]
                      ]
                      expression (lib/sentenceLexer.mll[333,10540+2]..lib/sentenceLexer.mll[341,10831+4])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (lib/sentenceLexer.mll[333,10540+6]..lib/sentenceLexer.mll[333,10540+13])
                              Tpat_var "content/1940"
                            expression (lib/sentenceLexer.mll[333,10540+16]..lib/sentenceLexer.mll[333,10540+53])
                              Texp_apply
                              expression (lib/sentenceLexer.mll[333,10540+40]..lib/sentenceLexer.mll[333,10540+41])
                                Texp_ident "Stdlib!.^"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/sentenceLexer.mll[333,10540+16]..lib/sentenceLexer.mll[333,10540+39])
                                    Texp_apply
                                    expression (lib/sentenceLexer.mll[333,10540+16]..lib/sentenceLexer.mll[333,10540+27])
                                      Texp_ident "Stdlib!.String.make"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/sentenceLexer.mll[333,10540+28]..lib/sentenceLexer.mll[333,10540+35])
                                          Texp_ident "padding/1939"
                                      <arg>
                                        Nolabel
                                        expression (lib/sentenceLexer.mll[333,10540+36]..lib/sentenceLexer.mll[333,10540+39])
                                          Texp_constant Const_char 20
                                    ]
                                <arg>
                                  Nolabel
                                  expression (lib/sentenceLexer.mll[333,10540+42]..lib/sentenceLexer.mll[333,10540+53])
                                    Texp_ident "raw_content/1899"
                              ]
                        ]
                        expression (lib/sentenceLexer.mll[334,10597+2]..lib/sentenceLexer.mll[341,10831+4])
                          Texp_open Fresh
                          module_expr (lib/sentenceLexer.mll[334,10597+2]..lib/sentenceLexer.mll[334,10597+9])
                            Tmod_ident "Gbnf_parser!.Stretch"
                          expression (lib/sentenceLexer.mll[334,10597+11]..lib/sentenceLexer.mll[341,10831+3])
                            Texp_record
                              fields =
                                [
                                  "stretch_filename"
                                    expression (lib/sentenceLexer.mll[335,10610+23]..lib/sentenceLexer.mll[335,10610+31])
                                      Texp_ident "filename/1938"
                                  "stretch_linenum"
                                    expression (lib/sentenceLexer.mll[336,10643+22]..lib/sentenceLexer.mll[336,10643+35])
                                      Texp_field
                                      expression (lib/sentenceLexer.mll[336,10643+22]..lib/sentenceLexer.mll[336,10643+26])
                                        Texp_ident "pos1/1936"
                                      "pos_lnum"
                                  "stretch_linecount"
                                    expression (lib/sentenceLexer.mll[337,10680+24]..lib/sentenceLexer.mll[337,10680+53])
                                      Texp_apply
                                      expression (lib/sentenceLexer.mll[337,10680+38]..lib/sentenceLexer.mll[337,10680+39])
                                        Texp_ident "Stdlib!.-"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/sentenceLexer.mll[337,10680+24]..lib/sentenceLexer.mll[337,10680+37])
                                            Texp_field
                                            expression (lib/sentenceLexer.mll[337,10680+24]..lib/sentenceLexer.mll[337,10680+28])
                                              Texp_ident "pos2/1937"
                                            "pos_lnum"
                                        <arg>
                                          Nolabel
                                          expression (lib/sentenceLexer.mll[337,10680+40]..lib/sentenceLexer.mll[337,10680+53])
                                            Texp_field
                                            expression (lib/sentenceLexer.mll[337,10680+40]..lib/sentenceLexer.mll[337,10680+44])
                                              Texp_ident "pos1/1936"
                                            "pos_lnum"
                                      ]
                                  "stretch_raw_content"
                                    expression (lib/sentenceLexer.mll[339,10766+26]..lib/sentenceLexer.mll[339,10766+37])
                                      Texp_ident "raw_content/1899"
                                  "stretch_content"
                                    expression (lib/sentenceLexer.mll[338,10735+22]..lib/sentenceLexer.mll[338,10735+29])
                                      Texp_ident "content/1940"
                                  "stretch_keywords"
                                    expression (lib/sentenceLexer.mll[340,10805+23]..lib/sentenceLexer.mll[340,10805+25])
                                      Texp_construct "[]"
                                      []
                                ]
                              representation =
                                Record_regular
                              extended_expression =
                                None
          ]
    ]
  structure_item (lib/sentenceLexer.mll[347,10948+0]..lib/sentenceLexer.mll[350,11061+7])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[347,10948+4]..lib/sentenceLexer.mll[347,10948+9])
          Tpat_var "table/1941"
        expression (lib/sentenceLexer.mll[347,10948+10]..lib/sentenceLexer.mll[350,11061+7]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/sentenceLexer.mll[347,10948+10]..lib/sentenceLexer.mll[347,10948+15])
                Tpat_var "words/1943"
              expression (lib/sentenceLexer.mll[348,10966+2]..lib/sentenceLexer.mll[350,11061+7])
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/sentenceLexer.mll[348,10966+6]..lib/sentenceLexer.mll[348,10966+11])
                      Tpat_var "table/1944"
                    expression (lib/sentenceLexer.mll[348,10966+14]..lib/sentenceLexer.mll[348,10966+32])
                      Texp_apply
                      expression (lib/sentenceLexer.mll[348,10966+14]..lib/sentenceLexer.mll[348,10966+28])
                        Texp_ident "Stdlib!.Hashtbl.create"
                      [
                        <arg>
                          Optional "random"
                          expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                            Texp_construct "None"
                            []
                        <arg>
                          Nolabel
                          expression (lib/sentenceLexer.mll[348,10966+29]..lib/sentenceLexer.mll[348,10966+32])
                            Texp_constant Const_int 149
                      ]
                ]
                expression (lib/sentenceLexer.mll[349,11002+2]..lib/sentenceLexer.mll[350,11061+7])
                  Texp_sequence
                  expression (lib/sentenceLexer.mll[349,11002+2]..lib/sentenceLexer.mll[349,11002+57])
                    Texp_apply
                    expression (lib/sentenceLexer.mll[349,11002+2]..lib/sentenceLexer.mll[349,11002+11])
                      Texp_ident "Stdlib!.List.iter"
                    [
                      <arg>
                        Nolabel
                        expression (lib/sentenceLexer.mll[349,11002+12]..lib/sentenceLexer.mll[349,11002+51])
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (lib/sentenceLexer.mll[349,11002+17]..lib/sentenceLexer.mll[349,11002+21])
                                Tpat_var "word/2025"
                              expression (lib/sentenceLexer.mll[349,11002+25]..lib/sentenceLexer.mll[349,11002+50])
                                Texp_apply
                                expression (lib/sentenceLexer.mll[349,11002+25]..lib/sentenceLexer.mll[349,11002+36])
                                  Texp_ident "Stdlib!.Hashtbl.add"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/sentenceLexer.mll[349,11002+37]..lib/sentenceLexer.mll[349,11002+42])
                                      Texp_ident "table/1944"
                                  <arg>
                                    Nolabel
                                    expression (lib/sentenceLexer.mll[349,11002+43]..lib/sentenceLexer.mll[349,11002+47])
                                      Texp_ident "word/2025"
                                  <arg>
                                    Nolabel
                                    expression (lib/sentenceLexer.mll[349,11002+48]..lib/sentenceLexer.mll[349,11002+50])
                                      Texp_construct "()"
                                      []
                                ]
                          ]
                      <arg>
                        Nolabel
                        expression (lib/sentenceLexer.mll[349,11002+52]..lib/sentenceLexer.mll[349,11002+57])
                          Texp_ident "words/1943"
                    ]
                  expression (lib/sentenceLexer.mll[350,11061+2]..lib/sentenceLexer.mll[350,11061+7])
                    Texp_ident "table/1944"
          ]
    ]
  structure_item (lib/sentenceLexer.mll[352,11070+0]..lib/sentenceLexer.mll[410,11801+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[352,11070+4]..lib/sentenceLexer.mll[352,11070+12])
          Tpat_var "reserved/2026"
        expression (lib/sentenceLexer.mll[353,11085+2]..lib/sentenceLexer.mll[410,11801+3])
          Texp_apply
          expression (lib/sentenceLexer.mll[353,11085+2]..lib/sentenceLexer.mll[353,11085+7])
            Texp_ident "table/1941"
          [
            <arg>
              Nolabel
              expression (lib/sentenceLexer.mll[353,11085+8]..lib/sentenceLexer.mll[410,11801+3])
                Texp_construct "::"
                [
                  expression (lib/sentenceLexer.mll[354,11095+4]..lib/sentenceLexer.mll[354,11095+9])
                    Texp_constant Const_string("and",(lib/sentenceLexer.mll[354,11095+5]..lib/sentenceLexer.mll[354,11095+8]),None)
                  expression (lib/sentenceLexer.mll[355,11106+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                    Texp_construct "::"
                    [
                      expression (lib/sentenceLexer.mll[355,11106+4]..lib/sentenceLexer.mll[355,11106+8])
                        Texp_constant Const_string("as",(lib/sentenceLexer.mll[355,11106+5]..lib/sentenceLexer.mll[355,11106+7]),None)
                      expression (lib/sentenceLexer.mll[356,11116+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                        Texp_construct "::"
                        [
                          expression (lib/sentenceLexer.mll[356,11116+4]..lib/sentenceLexer.mll[356,11116+12])
                            Texp_constant Const_string("assert",(lib/sentenceLexer.mll[356,11116+5]..lib/sentenceLexer.mll[356,11116+11]),None)
                          expression (lib/sentenceLexer.mll[357,11130+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                            Texp_construct "::"
                            [
                              expression (lib/sentenceLexer.mll[357,11130+4]..lib/sentenceLexer.mll[357,11130+11])
                                Texp_constant Const_string("begin",(lib/sentenceLexer.mll[357,11130+5]..lib/sentenceLexer.mll[357,11130+10]),None)
                              expression (lib/sentenceLexer.mll[358,11143+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                Texp_construct "::"
                                [
                                  expression (lib/sentenceLexer.mll[358,11143+4]..lib/sentenceLexer.mll[358,11143+11])
                                    Texp_constant Const_string("class",(lib/sentenceLexer.mll[358,11143+5]..lib/sentenceLexer.mll[358,11143+10]),None)
                                  expression (lib/sentenceLexer.mll[359,11156+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                    Texp_construct "::"
                                    [
                                      expression (lib/sentenceLexer.mll[359,11156+4]..lib/sentenceLexer.mll[359,11156+16])
                                        Texp_constant Const_string("constraint",(lib/sentenceLexer.mll[359,11156+5]..lib/sentenceLexer.mll[359,11156+15]),None)
                                      expression (lib/sentenceLexer.mll[360,11174+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                        Texp_construct "::"
                                        [
                                          expression (lib/sentenceLexer.mll[360,11174+4]..lib/sentenceLexer.mll[360,11174+8])
                                            Texp_constant Const_string("do",(lib/sentenceLexer.mll[360,11174+5]..lib/sentenceLexer.mll[360,11174+7]),None)
                                          expression (lib/sentenceLexer.mll[361,11184+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                            Texp_construct "::"
                                            [
                                              expression (lib/sentenceLexer.mll[361,11184+4]..lib/sentenceLexer.mll[361,11184+10])
                                                Texp_constant Const_string("done",(lib/sentenceLexer.mll[361,11184+5]..lib/sentenceLexer.mll[361,11184+9]),None)
                                              expression (lib/sentenceLexer.mll[362,11196+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                Texp_construct "::"
                                                [
                                                  expression (lib/sentenceLexer.mll[362,11196+4]..lib/sentenceLexer.mll[362,11196+12])
                                                    Texp_constant Const_string("downto",(lib/sentenceLexer.mll[362,11196+5]..lib/sentenceLexer.mll[362,11196+11]),None)
                                                  expression (lib/sentenceLexer.mll[363,11210+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                    Texp_construct "::"
                                                    [
                                                      expression (lib/sentenceLexer.mll[363,11210+4]..lib/sentenceLexer.mll[363,11210+10])
                                                        Texp_constant Const_string("else",(lib/sentenceLexer.mll[363,11210+5]..lib/sentenceLexer.mll[363,11210+9]),None)
                                                      expression (lib/sentenceLexer.mll[364,11222+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                        Texp_construct "::"
                                                        [
                                                          expression (lib/sentenceLexer.mll[364,11222+4]..lib/sentenceLexer.mll[364,11222+9])
                                                            Texp_constant Const_string("end",(lib/sentenceLexer.mll[364,11222+5]..lib/sentenceLexer.mll[364,11222+8]),None)
                                                          expression (lib/sentenceLexer.mll[365,11233+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                            Texp_construct "::"
                                                            [
                                                              expression (lib/sentenceLexer.mll[365,11233+4]..lib/sentenceLexer.mll[365,11233+15])
                                                                Texp_constant Const_string("exception",(lib/sentenceLexer.mll[365,11233+5]..lib/sentenceLexer.mll[365,11233+14]),None)
                                                              expression (lib/sentenceLexer.mll[366,11250+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                Texp_construct "::"
                                                                [
                                                                  expression (lib/sentenceLexer.mll[366,11250+4]..lib/sentenceLexer.mll[366,11250+14])
                                                                    Texp_constant Const_string("external",(lib/sentenceLexer.mll[366,11250+5]..lib/sentenceLexer.mll[366,11250+13]),None)
                                                                  expression (lib/sentenceLexer.mll[367,11266+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                    Texp_construct "::"
                                                                    [
                                                                      expression (lib/sentenceLexer.mll[367,11266+4]..lib/sentenceLexer.mll[367,11266+11])
                                                                        Texp_constant Const_string("false",(lib/sentenceLexer.mll[367,11266+5]..lib/sentenceLexer.mll[367,11266+10]),None)
                                                                      expression (lib/sentenceLexer.mll[368,11279+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                        Texp_construct "::"
                                                                        [
                                                                          expression (lib/sentenceLexer.mll[368,11279+4]..lib/sentenceLexer.mll[368,11279+9])
                                                                            Texp_constant Const_string("for",(lib/sentenceLexer.mll[368,11279+5]..lib/sentenceLexer.mll[368,11279+8]),None)
                                                                          expression (lib/sentenceLexer.mll[369,11290+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                            Texp_construct "::"
                                                                            [
                                                                              expression (lib/sentenceLexer.mll[369,11290+4]..lib/sentenceLexer.mll[369,11290+9])
                                                                                Texp_constant Const_string("fun",(lib/sentenceLexer.mll[369,11290+5]..lib/sentenceLexer.mll[369,11290+8]),None)
                                                                              expression (lib/sentenceLexer.mll[370,11301+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                Texp_construct "::"
                                                                                [
                                                                                  expression (lib/sentenceLexer.mll[370,11301+4]..lib/sentenceLexer.mll[370,11301+14])
                                                                                    Texp_constant Const_string("function",(lib/sentenceLexer.mll[370,11301+5]..lib/sentenceLexer.mll[370,11301+13]),None)
                                                                                  expression (lib/sentenceLexer.mll[371,11317+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                    Texp_construct "::"
                                                                                    [
                                                                                      expression (lib/sentenceLexer.mll[371,11317+4]..lib/sentenceLexer.mll[371,11317+13])
                                                                                        Texp_constant Const_string("functor",(lib/sentenceLexer.mll[371,11317+5]..lib/sentenceLexer.mll[371,11317+12]),None)
                                                                                      expression (lib/sentenceLexer.mll[372,11332+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                        Texp_construct "::"
                                                                                        [
                                                                                          expression (lib/sentenceLexer.mll[372,11332+4]..lib/sentenceLexer.mll[372,11332+8])
                                                                                            Texp_constant Const_string("if",(lib/sentenceLexer.mll[372,11332+5]..lib/sentenceLexer.mll[372,11332+7]),None)
                                                                                          expression (lib/sentenceLexer.mll[373,11342+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                            Texp_construct "::"
                                                                                            [
                                                                                              expression (lib/sentenceLexer.mll[373,11342+4]..lib/sentenceLexer.mll[373,11342+8])
                                                                                                Texp_constant Const_string("in",(lib/sentenceLexer.mll[373,11342+5]..lib/sentenceLexer.mll[373,11342+7]),None)
                                                                                              expression (lib/sentenceLexer.mll[374,11352+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                Texp_construct "::"
                                                                                                [
                                                                                                  expression (lib/sentenceLexer.mll[374,11352+4]..lib/sentenceLexer.mll[374,11352+13])
                                                                                                    Texp_constant Const_string("include",(lib/sentenceLexer.mll[374,11352+5]..lib/sentenceLexer.mll[374,11352+12]),None)
                                                                                                  expression (lib/sentenceLexer.mll[375,11367+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                    Texp_construct "::"
                                                                                                    [
                                                                                                      expression (lib/sentenceLexer.mll[375,11367+4]..lib/sentenceLexer.mll[375,11367+13])
                                                                                                        Texp_constant Const_string("inherit",(lib/sentenceLexer.mll[375,11367+5]..lib/sentenceLexer.mll[375,11367+12]),None)
                                                                                                      expression (lib/sentenceLexer.mll[376,11382+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                        Texp_construct "::"
                                                                                                        [
                                                                                                          expression (lib/sentenceLexer.mll[376,11382+4]..lib/sentenceLexer.mll[376,11382+17])
                                                                                                            Texp_constant Const_string("initializer",(lib/sentenceLexer.mll[376,11382+5]..lib/sentenceLexer.mll[376,11382+16]),None)
                                                                                                          expression (lib/sentenceLexer.mll[377,11401+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                            Texp_construct "::"
                                                                                                            [
                                                                                                              expression (lib/sentenceLexer.mll[377,11401+4]..lib/sentenceLexer.mll[377,11401+10])
                                                                                                                Texp_constant Const_string("lazy",(lib/sentenceLexer.mll[377,11401+5]..lib/sentenceLexer.mll[377,11401+9]),None)
                                                                                                              expression (lib/sentenceLexer.mll[378,11413+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                Texp_construct "::"
                                                                                                                [
                                                                                                                  expression (lib/sentenceLexer.mll[378,11413+4]..lib/sentenceLexer.mll[378,11413+9])
                                                                                                                    Texp_constant Const_string("let",(lib/sentenceLexer.mll[378,11413+5]..lib/sentenceLexer.mll[378,11413+8]),None)
                                                                                                                  expression (lib/sentenceLexer.mll[379,11424+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                    Texp_construct "::"
                                                                                                                    [
                                                                                                                      expression (lib/sentenceLexer.mll[379,11424+4]..lib/sentenceLexer.mll[379,11424+11])
                                                                                                                        Texp_constant Const_string("match",(lib/sentenceLexer.mll[379,11424+5]..lib/sentenceLexer.mll[379,11424+10]),None)
                                                                                                                      expression (lib/sentenceLexer.mll[380,11437+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                        Texp_construct "::"
                                                                                                                        [
                                                                                                                          expression (lib/sentenceLexer.mll[380,11437+4]..lib/sentenceLexer.mll[380,11437+12])
                                                                                                                            Texp_constant Const_string("method",(lib/sentenceLexer.mll[380,11437+5]..lib/sentenceLexer.mll[380,11437+11]),None)
                                                                                                                          expression (lib/sentenceLexer.mll[381,11451+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                            Texp_construct "::"
                                                                                                                            [
                                                                                                                              expression (lib/sentenceLexer.mll[381,11451+4]..lib/sentenceLexer.mll[381,11451+12])
                                                                                                                                Texp_constant Const_string("module",(lib/sentenceLexer.mll[381,11451+5]..lib/sentenceLexer.mll[381,11451+11]),None)
                                                                                                                              expression (lib/sentenceLexer.mll[382,11465+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                Texp_construct "::"
                                                                                                                                [
                                                                                                                                  expression (lib/sentenceLexer.mll[382,11465+4]..lib/sentenceLexer.mll[382,11465+13])
                                                                                                                                    Texp_constant Const_string("mutable",(lib/sentenceLexer.mll[382,11465+5]..lib/sentenceLexer.mll[382,11465+12]),None)
                                                                                                                                  expression (lib/sentenceLexer.mll[383,11480+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                    Texp_construct "::"
                                                                                                                                    [
                                                                                                                                      expression (lib/sentenceLexer.mll[383,11480+4]..lib/sentenceLexer.mll[383,11480+9])
                                                                                                                                        Texp_constant Const_string("new",(lib/sentenceLexer.mll[383,11480+5]..lib/sentenceLexer.mll[383,11480+8]),None)
                                                                                                                                      expression (lib/sentenceLexer.mll[384,11491+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                        Texp_construct "::"
                                                                                                                                        [
                                                                                                                                          expression (lib/sentenceLexer.mll[384,11491+4]..lib/sentenceLexer.mll[384,11491+12])
                                                                                                                                            Texp_constant Const_string("object",(lib/sentenceLexer.mll[384,11491+5]..lib/sentenceLexer.mll[384,11491+11]),None)
                                                                                                                                          expression (lib/sentenceLexer.mll[385,11505+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                            Texp_construct "::"
                                                                                                                                            [
                                                                                                                                              expression (lib/sentenceLexer.mll[385,11505+4]..lib/sentenceLexer.mll[385,11505+8])
                                                                                                                                                Texp_constant Const_string("of",(lib/sentenceLexer.mll[385,11505+5]..lib/sentenceLexer.mll[385,11505+7]),None)
                                                                                                                                              expression (lib/sentenceLexer.mll[386,11515+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                                Texp_construct "::"
                                                                                                                                                [
                                                                                                                                                  expression (lib/sentenceLexer.mll[386,11515+4]..lib/sentenceLexer.mll[386,11515+10])
                                                                                                                                                    Texp_constant Const_string("open",(lib/sentenceLexer.mll[386,11515+5]..lib/sentenceLexer.mll[386,11515+9]),None)
                                                                                                                                                  expression (lib/sentenceLexer.mll[387,11527+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                                    Texp_construct "::"
                                                                                                                                                    [
                                                                                                                                                      expression (lib/sentenceLexer.mll[387,11527+4]..lib/sentenceLexer.mll[387,11527+8])
                                                                                                                                                        Texp_constant Const_string("or",(lib/sentenceLexer.mll[387,11527+5]..lib/sentenceLexer.mll[387,11527+7]),None)
                                                                                                                                                      expression (lib/sentenceLexer.mll[388,11537+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                                        Texp_construct "::"
                                                                                                                                                        [
                                                                                                                                                          expression (lib/sentenceLexer.mll[388,11537+4]..lib/sentenceLexer.mll[388,11537+12])
                                                                                                                                                            Texp_constant Const_string("parser",(lib/sentenceLexer.mll[388,11537+5]..lib/sentenceLexer.mll[388,11537+11]),None)
                                                                                                                                                          expression (lib/sentenceLexer.mll[389,11551+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                                            Texp_construct "::"
                                                                                                                                                            [
                                                                                                                                                              expression (lib/sentenceLexer.mll[389,11551+4]..lib/sentenceLexer.mll[389,11551+13])
                                                                                                                                                                Texp_constant Const_string("private",(lib/sentenceLexer.mll[389,11551+5]..lib/sentenceLexer.mll[389,11551+12]),None)
                                                                                                                                                              expression (lib/sentenceLexer.mll[390,11566+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                                                Texp_construct "::"
                                                                                                                                                                [
                                                                                                                                                                  expression (lib/sentenceLexer.mll[390,11566+4]..lib/sentenceLexer.mll[390,11566+9])
                                                                                                                                                                    Texp_constant Const_string("rec",(lib/sentenceLexer.mll[390,11566+5]..lib/sentenceLexer.mll[390,11566+8]),None)
                                                                                                                                                                  expression (lib/sentenceLexer.mll[391,11577+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                                                    Texp_construct "::"
                                                                                                                                                                    [
                                                                                                                                                                      expression (lib/sentenceLexer.mll[391,11577+4]..lib/sentenceLexer.mll[391,11577+9])
                                                                                                                                                                        Texp_constant Const_string("sig",(lib/sentenceLexer.mll[391,11577+5]..lib/sentenceLexer.mll[391,11577+8]),None)
                                                                                                                                                                      expression (lib/sentenceLexer.mll[392,11588+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                                                        Texp_construct "::"
                                                                                                                                                                        [
                                                                                                                                                                          expression (lib/sentenceLexer.mll[392,11588+4]..lib/sentenceLexer.mll[392,11588+12])
                                                                                                                                                                            Texp_constant Const_string("struct",(lib/sentenceLexer.mll[392,11588+5]..lib/sentenceLexer.mll[392,11588+11]),None)
                                                                                                                                                                          expression (lib/sentenceLexer.mll[393,11602+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                                                            Texp_construct "::"
                                                                                                                                                                            [
                                                                                                                                                                              expression (lib/sentenceLexer.mll[393,11602+4]..lib/sentenceLexer.mll[393,11602+10])
                                                                                                                                                                                Texp_constant Const_string("then",(lib/sentenceLexer.mll[393,11602+5]..lib/sentenceLexer.mll[393,11602+9]),None)
                                                                                                                                                                              expression (lib/sentenceLexer.mll[394,11614+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                                                                Texp_construct "::"
                                                                                                                                                                                [
                                                                                                                                                                                  expression (lib/sentenceLexer.mll[394,11614+4]..lib/sentenceLexer.mll[394,11614+8])
                                                                                                                                                                                    Texp_constant Const_string("to",(lib/sentenceLexer.mll[394,11614+5]..lib/sentenceLexer.mll[394,11614+7]),None)
                                                                                                                                                                                  expression (lib/sentenceLexer.mll[395,11624+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                                                                    Texp_construct "::"
                                                                                                                                                                                    [
                                                                                                                                                                                      expression (lib/sentenceLexer.mll[395,11624+4]..lib/sentenceLexer.mll[395,11624+10])
                                                                                                                                                                                        Texp_constant Const_string("true",(lib/sentenceLexer.mll[395,11624+5]..lib/sentenceLexer.mll[395,11624+9]),None)
                                                                                                                                                                                      expression (lib/sentenceLexer.mll[396,11636+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                                                                        Texp_construct "::"
                                                                                                                                                                                        [
                                                                                                                                                                                          expression (lib/sentenceLexer.mll[396,11636+4]..lib/sentenceLexer.mll[396,11636+9])
                                                                                                                                                                                            Texp_constant Const_string("try",(lib/sentenceLexer.mll[396,11636+5]..lib/sentenceLexer.mll[396,11636+8]),None)
                                                                                                                                                                                          expression (lib/sentenceLexer.mll[397,11647+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                                                                            Texp_construct "::"
                                                                                                                                                                                            [
                                                                                                                                                                                              expression (lib/sentenceLexer.mll[397,11647+4]..lib/sentenceLexer.mll[397,11647+10])
                                                                                                                                                                                                Texp_constant Const_string("type",(lib/sentenceLexer.mll[397,11647+5]..lib/sentenceLexer.mll[397,11647+9]),None)
                                                                                                                                                                                              expression (lib/sentenceLexer.mll[398,11659+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                                                                                Texp_construct "::"
                                                                                                                                                                                                [
                                                                                                                                                                                                  expression (lib/sentenceLexer.mll[398,11659+4]..lib/sentenceLexer.mll[398,11659+9])
                                                                                                                                                                                                    Texp_constant Const_string("val",(lib/sentenceLexer.mll[398,11659+5]..lib/sentenceLexer.mll[398,11659+8]),None)
                                                                                                                                                                                                  expression (lib/sentenceLexer.mll[399,11670+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                                                                                    Texp_construct "::"
                                                                                                                                                                                                    [
                                                                                                                                                                                                      expression (lib/sentenceLexer.mll[399,11670+4]..lib/sentenceLexer.mll[399,11670+13])
                                                                                                                                                                                                        Texp_constant Const_string("virtual",(lib/sentenceLexer.mll[399,11670+5]..lib/sentenceLexer.mll[399,11670+12]),None)
                                                                                                                                                                                                      expression (lib/sentenceLexer.mll[400,11685+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                                                                                        Texp_construct "::"
                                                                                                                                                                                                        [
                                                                                                                                                                                                          expression (lib/sentenceLexer.mll[400,11685+4]..lib/sentenceLexer.mll[400,11685+10])
                                                                                                                                                                                                            Texp_constant Const_string("when",(lib/sentenceLexer.mll[400,11685+5]..lib/sentenceLexer.mll[400,11685+9]),None)
                                                                                                                                                                                                          expression (lib/sentenceLexer.mll[401,11697+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                                                                                            Texp_construct "::"
                                                                                                                                                                                                            [
                                                                                                                                                                                                              expression (lib/sentenceLexer.mll[401,11697+4]..lib/sentenceLexer.mll[401,11697+11])
                                                                                                                                                                                                                Texp_constant Const_string("while",(lib/sentenceLexer.mll[401,11697+5]..lib/sentenceLexer.mll[401,11697+10]),None)
                                                                                                                                                                                                              expression (lib/sentenceLexer.mll[402,11710+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                                                                                                Texp_construct "::"
                                                                                                                                                                                                                [
                                                                                                                                                                                                                  expression (lib/sentenceLexer.mll[402,11710+4]..lib/sentenceLexer.mll[402,11710+10])
                                                                                                                                                                                                                    Texp_constant Const_string("with",(lib/sentenceLexer.mll[402,11710+5]..lib/sentenceLexer.mll[402,11710+9]),None)
                                                                                                                                                                                                                  expression (lib/sentenceLexer.mll[403,11722+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                                                                                                    Texp_construct "::"
                                                                                                                                                                                                                    [
                                                                                                                                                                                                                      expression (lib/sentenceLexer.mll[403,11722+4]..lib/sentenceLexer.mll[403,11722+9])
                                                                                                                                                                                                                        Texp_constant Const_string("mod",(lib/sentenceLexer.mll[403,11722+5]..lib/sentenceLexer.mll[403,11722+8]),None)
                                                                                                                                                                                                                      expression (lib/sentenceLexer.mll[404,11733+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                                                                                                        Texp_construct "::"
                                                                                                                                                                                                                        [
                                                                                                                                                                                                                          expression (lib/sentenceLexer.mll[404,11733+4]..lib/sentenceLexer.mll[404,11733+10])
                                                                                                                                                                                                                            Texp_constant Const_string("land",(lib/sentenceLexer.mll[404,11733+5]..lib/sentenceLexer.mll[404,11733+9]),None)
                                                                                                                                                                                                                          expression (lib/sentenceLexer.mll[405,11745+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                                                                                                            Texp_construct "::"
                                                                                                                                                                                                                            [
                                                                                                                                                                                                                              expression (lib/sentenceLexer.mll[405,11745+4]..lib/sentenceLexer.mll[405,11745+9])
                                                                                                                                                                                                                                Texp_constant Const_string("lor",(lib/sentenceLexer.mll[405,11745+5]..lib/sentenceLexer.mll[405,11745+8]),None)
                                                                                                                                                                                                                              expression (lib/sentenceLexer.mll[406,11756+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                                                                                                                Texp_construct "::"
                                                                                                                                                                                                                                [
                                                                                                                                                                                                                                  expression (lib/sentenceLexer.mll[406,11756+4]..lib/sentenceLexer.mll[406,11756+10])
                                                                                                                                                                                                                                    Texp_constant Const_string("lxor",(lib/sentenceLexer.mll[406,11756+5]..lib/sentenceLexer.mll[406,11756+9]),None)
                                                                                                                                                                                                                                  expression (lib/sentenceLexer.mll[407,11768+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                                                                                                                    Texp_construct "::"
                                                                                                                                                                                                                                    [
                                                                                                                                                                                                                                      expression (lib/sentenceLexer.mll[407,11768+4]..lib/sentenceLexer.mll[407,11768+9])
                                                                                                                                                                                                                                        Texp_constant Const_string("lsl",(lib/sentenceLexer.mll[407,11768+5]..lib/sentenceLexer.mll[407,11768+8]),None)
                                                                                                                                                                                                                                      expression (lib/sentenceLexer.mll[408,11779+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                                                                                                                        Texp_construct "::"
                                                                                                                                                                                                                                        [
                                                                                                                                                                                                                                          expression (lib/sentenceLexer.mll[408,11779+4]..lib/sentenceLexer.mll[408,11779+9])
                                                                                                                                                                                                                                            Texp_constant Const_string("lsr",(lib/sentenceLexer.mll[408,11779+5]..lib/sentenceLexer.mll[408,11779+8]),None)
                                                                                                                                                                                                                                          expression (lib/sentenceLexer.mll[409,11790+4]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                                                                                                                            Texp_construct "::"
                                                                                                                                                                                                                                            [
                                                                                                                                                                                                                                              expression (lib/sentenceLexer.mll[409,11790+4]..lib/sentenceLexer.mll[409,11790+9])
                                                                                                                                                                                                                                                Texp_constant Const_string("asr",(lib/sentenceLexer.mll[409,11790+5]..lib/sentenceLexer.mll[409,11790+8]),None)
                                                                                                                                                                                                                                              expression (lib/sentenceLexer.mll[410,11801+2]..lib/sentenceLexer.mll[410,11801+3]) ghost
                                                                                                                                                                                                                                                Texp_construct "[]"
                                                                                                                                                                                                                                                []
                                                                                                                                                                                                                                            ]
                                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                                    ]
                                                                                                                                                                                                                                ]
                                                                                                                                                                                                                            ]
                                                                                                                                                                                                                        ]
                                                                                                                                                                                                                    ]
                                                                                                                                                                                                                ]
                                                                                                                                                                                                            ]
                                                                                                                                                                                                        ]
                                                                                                                                                                                                    ]
                                                                                                                                                                                                ]
                                                                                                                                                                                            ]
                                                                                                                                                                                        ]
                                                                                                                                                                                    ]
                                                                                                                                                                                ]
                                                                                                                                                                            ]
                                                                                                                                                                        ]
                                                                                                                                                                    ]
                                                                                                                                                                ]
                                                                                                                                                            ]
                                                                                                                                                        ]
                                                                                                                                                    ]
                                                                                                                                                ]
                                                                                                                                            ]
                                                                                                                                        ]
                                                                                                                                    ]
                                                                                                                                ]
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ]
                                                                                                        ]
                                                                                                    ]
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                    ]
                                                ]
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                        ]
                    ]
                ]
          ]
    ]
  structure_item (lib/sentenceLexer.mll[416,11922+0]..lib/sentenceLexer.mll[421,12028+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.mll[416,11922+4]..lib/sentenceLexer.mll[416,11922+22])
          Tpat_var "char_for_backslash/2027"
        expression (lib/sentenceLexer.mll[416,11922+25]..lib/sentenceLexer.mll[421,12028+12])
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/sentenceLexer.mll[417,11956+4]..lib/sentenceLexer.mll[417,11956+7])
                Tpat_constant Const_char 6e
              expression (lib/sentenceLexer.mll[417,11956+11]..lib/sentenceLexer.mll[417,11956+17])
                Texp_constant Const_char 0a
            <case>
              pattern (lib/sentenceLexer.mll[418,11974+4]..lib/sentenceLexer.mll[418,11974+7])
                Tpat_constant Const_char 72
              expression (lib/sentenceLexer.mll[418,11974+11]..lib/sentenceLexer.mll[418,11974+17])
                Texp_constant Const_char 0d
            <case>
              pattern (lib/sentenceLexer.mll[419,11992+4]..lib/sentenceLexer.mll[419,11992+7])
                Tpat_constant Const_char 62
              expression (lib/sentenceLexer.mll[419,11992+11]..lib/sentenceLexer.mll[419,11992+17])
                Texp_constant Const_char 08
            <case>
              pattern (lib/sentenceLexer.mll[420,12010+4]..lib/sentenceLexer.mll[420,12010+7])
                Tpat_constant Const_char 74
              expression (lib/sentenceLexer.mll[420,12010+11]..lib/sentenceLexer.mll[420,12010+17])
                Texp_constant Const_char 09
            <case>
              pattern (lib/sentenceLexer.mll[421,12028+4]..lib/sentenceLexer.mll[421,12028+5])
                Tpat_var "c/2029"
              expression (lib/sentenceLexer.mll[421,12028+11]..lib/sentenceLexer.mll[421,12028+12])
                Texp_ident "c/2029"
          ]
    ]
  structure_item (lib/sentenceLexer.ml[413,12072+0]..lib/sentenceLexer.ml[681,29755+1])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.ml[413,12072+4]..lib/sentenceLexer.ml[413,12072+22])
          Tpat_var "__ocaml_lex_tables/2030"
        expression (lib/sentenceLexer.ml[413,12072+25]..lib/sentenceLexer.ml[681,29755+1])
          Texp_record
            fields =
              [
                "Lexing.lex_base"
                  expression (lib/sentenceLexer.ml[415,12119+3]..lib/sentenceLexer.ml[420,12469+45])
                    Texp_constant Const_string("\000\000\239\255\240\255'\000'\000(\000\243\255\004\000\244\255\231\000\007\000\247\255\186\001\249\255\250\255\251\255\252\255\253\255\254\255\255\255\005\000\246\255B\000+\000,\000\242\255C\000\232\000\251\255\252\255-\000\253\255\154\002\255\255\254\255\006\000\252\255\253\255\254\255\002\000\255\255\016\000\253\255\254\255\255\255",(lib/sentenceLexer.ml[415,12119+4]..lib/sentenceLexer.ml[420,12469+44]),None)
                "Lexing.lex_backtrk"
                  expression (lib/sentenceLexer.ml[422,12539+3]..lib/sentenceLexer.ml[427,12889+45])
                    Texp_constant Const_string("\n\000\255\255\255\255\014\000\016\000\012\000\255\255\016\000\255\255\n\000\016\000\255\255\007\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\012\000\r\000\255\255\255\255\255\255\255\255\255\255\002\000\255\255\004\000\255\255\255\255\255\255\255\255\255\255\255\255\003\000\255\255\255\255\255\255\255\255\255\255",(lib/sentenceLexer.ml[422,12539+4]..lib/sentenceLexer.ml[427,12889+44]),None)
                "Lexing.lex_default"
                  expression (lib/sentenceLexer.ml[429,12959+3]..lib/sentenceLexer.ml[434,13309+45])
                    Texp_constant Const_string("\t\000\000\000\000\000\255\255\026\000\255\255\000\000\255\255\000\000\255\255\255\255\000\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\022\000\255\255\255\255\000\000\026\000\028\000\000\000\000\000\255\255\000\000\255\255\000\000\000\000$\000\000\000\000\000\000\000\255\255\000\000*\000\000\000\000\000\000\000",(lib/sentenceLexer.ml[429,12959+4]..lib/sentenceLexer.ml[434,13309+44]),None)
                "Lexing.lex_trans"
                  expression (lib/sentenceLexer.ml[436,13377+3]..lib/sentenceLexer.ml[551,21427+29])
                    Texp_constant Const_string("\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\003\000\006\000\001\000\001\000\005\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\003\000\001\000\b\000\004\000\001\000\001\000\001\000\001\000\019\000\018\000\014\000\r\000\001\000\012\000\001\000\007\000\003\000\025\000\006\000\022\000\024\000\006\000\025\000\031\000+\000,\000\nt\000\000\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\255\255\255\255 \000\000\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\tt\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\029\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\000\000\000\000\000\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\tt\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\tlib/sentenceLexer.ml[436,13377+4]..lib/sentenceLexer.ml[551,21427+28]),None)
                "Lexing.lex_check"
                  expression (lib/sentenceLexer.ml[553,21479+3]..lib/sentenceLexer.ml[668,29529+29])
                    Texp_constant Const_stringnt\000\255\255\255\255\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\255\255\255\255\255\255\255\255\255\255\255\255\004\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\022\000\026\000\027\000\255\255\t\000\255\255\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\tt\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\255\255\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\255\255\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\012\000\027\000\255\255\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\255\255\255\255\255\255\255\255\012\000\255\255\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\255\255\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\255\255\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000 \000\255\255 \000\255\255\255\255\255\255 \000 \000\255\255 \000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255 \000\255\255\255\255\255\255\255\255\255\255 \000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255 \000\255\255 \000\255\255\255\255\255\255\255\255\255\255\255\255\255\255 \000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255",(lib/sentenceLexer.ml[553,21479+4]..lib/sentenceLexer.ml[668,29529+28]),None)
                "Lexing.lex_base_code"
                  expression (lib/sentenceLexer.ml[670,29585+3]..lib/sentenceLexer.ml[670,29585+5])
                    Texp_constant Const_string("",(lib/sentenceLexer.ml[670,29585+4]..lib/sentenceLexer.ml[670,29585+4]),None)
                "Lexing.lex_backtrk_code"
                  expression (lib/sentenceLexer.ml[672,29620+3]..lib/sentenceLexer.ml[672,29620+5])
                    Texp_constant Const_string("",(lib/sentenceLexer.ml[672,29620+4]..lib/sentenceLexer.ml[672,29620+4]),None)
                "Lexing.lex_default_code"
                  expression (lib/sentenceLexer.ml[674,29655+3]..lib/sentenceLexer.ml[674,29655+5])
                    Texp_constant Const_string("",(lib/sentenceLexer.ml[674,29655+4]..lib/sentenceLexer.ml[674,29655+4]),None)
                "Lexing.lex_trans_code"
                  expression (lib/sentenceLexer.ml[676,29688+3]..lib/sentenceLexer.ml[676,29688+5])
                    Texp_constant Const_string("",(lib/sentenceLexer.ml[676,29688+4]..lib/sentenceLexer.ml[676,29688+4]),None)
                "Lexing.lex_check_code"
                  expression (lib/sentenceLexer.ml[678,29721+3]..lib/sentenceLexer.ml[678,29721+5])
                    Texp_constant Const_string("",(lib/sentenceLexer.ml[678,29721+4]..lib/sentenceLexer.ml[678,29721+4]),None)
                "Lexing.lex_code"
                  expression (lib/sentenceLexer.ml[680,29748+3]..lib/sentenceLexer.ml[680,29748+5])
                    Texp_constant Const_string("",(lib/sentenceLexer.ml[680,29748+4]..lib/sentenceLexer.ml[680,29748+4]),None)
              ]
            representation =
              Record_regular
            extended_expression =
              None
    ]
  structure_item (lib/sentenceLexer.ml[683,29758+0]..lib/sentenceLexer.ml[929,36726+73])
    Tstr_value Rec
    [
      <def>
        pattern (lib/sentenceLexer.ml[683,29758+8]..lib/sentenceLexer.ml[683,29758+12])
          Tpat_var "main/2031"
        expression (lib/sentenceLexer.ml[683,29758+13]..lib/sentenceLexer.ml[684,29780+32]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/sentenceLexer.ml[683,29758+13]..lib/sentenceLexer.ml[683,29758+19])
                Tpat_var "lexbuf/2039"
              expression (lib/sentenceLexer.ml[684,29780+3]..lib/sentenceLexer.ml[684,29780+32])
                Texp_apply
                expression (lib/sentenceLexer.ml[684,29780+3]..lib/sentenceLexer.ml[684,29780+23])
                  Texp_ident "__ocaml_lex_main_rec/2032"
                [
                  <arg>
                    Nolabel
                    expression (lib/sentenceLexer.ml[684,29780+24]..lib/sentenceLexer.ml[684,29780+30])
                      Texp_ident "lexbuf/2039"
                  <arg>
                    Nolabel
                    expression (lib/sentenceLexer.ml[684,29780+31]..lib/sentenceLexer.ml[684,29780+32])
                      Texp_constant Const_int 0
                ]
          ]
      <def>
        pattern (lib/sentenceLexer.ml[685,29813+4]..lib/sentenceLexer.ml[685,29813+24])
          Tpat_var "__ocaml_lex_main_rec/2032"
        expression (lib/sentenceLexer.ml[685,29813+25]..lib/sentenceLexer.ml[809,32908+51]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/sentenceLexer.ml[685,29813+25]..lib/sentenceLexer.ml[685,29813+31])
                Tpat_var "lexbuf/2040"
              expression (lib/sentenceLexer.ml[685,29813+32]..lib/sentenceLexer.ml[809,32908+51]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/sentenceLexer.ml[685,29813+32]..lib/sentenceLexer.ml[685,29813+49])
                      Tpat_var "__ocaml_lex_state/2041"
                    expression (lib/sentenceLexer.ml[686,29865+2]..lib/sentenceLexer.ml[809,32908+51])
                      Texp_match
                      expression (lib/sentenceLexer.ml[686,29865+8]..lib/sentenceLexer.ml[686,29865+65])
                        Texp_apply
                        expression (lib/sentenceLexer.ml[686,29865+8]..lib/sentenceLexer.ml[686,29865+21])
                          Texp_ident "Stdlib!.Lexing.engine"
                        [
                          <arg>
                            Nolabel
                            expression (lib/sentenceLexer.ml[686,29865+22]..lib/sentenceLexer.ml[686,29865+40])
                              Texp_ident "__ocaml_lex_tables/2030"
                          <arg>
                            Nolabel
                            expression (lib/sentenceLexer.ml[686,29865+41]..lib/sentenceLexer.ml[686,29865+58])
                              Texp_ident "__ocaml_lex_state/2041"
                          <arg>
                            Nolabel
                            expression (lib/sentenceLexer.ml[686,29865+59]..lib/sentenceLexer.ml[686,29865+65])
                              Texp_ident "lexbuf/2040"
                        ]
                      [
                        <case>
                          pattern (lib/sentenceLexer.ml[687,29936+8]..lib/sentenceLexer.ml[687,29936+9])
                            Tpat_value
                            pattern (lib/sentenceLexer.ml[687,29936+8]..lib/sentenceLexer.ml[687,29936+9])
                              Tpat_constant Const_int 0
                          expression (lib/sentenceLexer.mll[469,29979+1]..lib/sentenceLexer.mll[469,29979+78])
                            Texp_sequence
                            expression (lib/sentenceLexer.mll[469,29979+9]..lib/sentenceLexer.mll[469,29979+68])
                              Texp_apply
                              expression (lib/sentenceLexer.mll[469,29979+10]..lib/sentenceLexer.mll[469,29979+23])
                                Texp_ident "Stdlib!.print_endline"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/sentenceLexer.mll[469,29979+24]..lib/sentenceLexer.mll[469,29979+67])
                                    Texp_apply
                                    expression (lib/sentenceLexer.mll[469,29979+25]..lib/sentenceLexer.mll[469,29979+39])
                                      Texp_ident "Batteries!.dump"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/sentenceLexer.mll[469,29979+40]..lib/sentenceLexer.mll[469,29979+66])
                                          Texp_apply
                                          expression (lib/sentenceLexer.mll[469,29979+43]..lib/sentenceLexer.mll[469,29979+56])
                                            Texp_ident "Stdlib!.Lexing.lexeme"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[469,29979+57]..lib/sentenceLexer.mll[469,29979+63])
                                                Texp_ident "lexbuf/2040"
                                          ]
                                    ]
                              ]
                            expression (lib/sentenceLexer.mll[469,29979+70]..lib/sentenceLexer.mll[469,29979+76])
                              Texp_construct "LPAREN"
                              []
                        <case>
                          pattern (lib/sentenceLexer.ml[692,30088+4]..lib/sentenceLexer.ml[692,30088+5])
                            Tpat_value
                            pattern (lib/sentenceLexer.ml[692,30088+4]..lib/sentenceLexer.ml[692,30088+5])
                              Tpat_constant Const_int 1
                          expression (lib/sentenceLexer.mll[483,30127+4]..lib/sentenceLexer.mll[483,30127+14])
                            Texp_construct "RPAREN"
                            []
                        <case>
                          pattern (lib/sentenceLexer.ml[697,30172+4]..lib/sentenceLexer.ml[697,30172+5])
                            Tpat_value
                            pattern (lib/sentenceLexer.ml[697,30172+4]..lib/sentenceLexer.ml[697,30172+5])
                              Tpat_constant Const_int 2
                          expression (lib/sentenceLexer.mll[485,30211+4]..lib/sentenceLexer.mll[494,30637+5])
                            Texp_sequence
                            expression (lib/sentenceLexer.mll[487,30285+6]..lib/sentenceLexer.mll[487,30285+65])
                              Texp_apply
                              expression (lib/sentenceLexer.mll[487,30285+7]..lib/sentenceLexer.mll[487,30285+20])
                                Texp_ident "Stdlib!.print_endline"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/sentenceLexer.mll[487,30285+21]..lib/sentenceLexer.mll[487,30285+64])
                                    Texp_apply
                                    expression (lib/sentenceLexer.mll[487,30285+22]..lib/sentenceLexer.mll[487,30285+36])
                                      Texp_ident "Batteries!.dump"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/sentenceLexer.mll[487,30285+37]..lib/sentenceLexer.mll[487,30285+63])
                                          Texp_apply
                                          expression (lib/sentenceLexer.mll[487,30285+40]..lib/sentenceLexer.mll[487,30285+53])
                                            Texp_ident "Stdlib!.Lexing.lexeme"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[487,30285+54]..lib/sentenceLexer.mll[487,30285+60])
                                                Texp_ident "lexbuf/2040"
                                          ]
                                    ]
                              ]
                            expression (lib/sentenceLexer.mll[488,30352+6]..lib/sentenceLexer.mll[493,30607+29])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (lib/sentenceLexer.mll[488,30352+10]..lib/sentenceLexer.mll[488,30352+16])
                                    Tpat_var "buffer/2233"
                                  expression (lib/sentenceLexer.mll[488,30352+19]..lib/sentenceLexer.mll[488,30352+36])
                                    Texp_apply
                                    expression (lib/sentenceLexer.mll[488,30352+19]..lib/sentenceLexer.mll[488,30352+32])
                                      Texp_ident "Stdlib!.Buffer.create"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/sentenceLexer.mll[488,30352+33]..lib/sentenceLexer.mll[488,30352+36])
                                          Texp_constant Const_int 256
                                    ]
                              ]
                              expression (lib/sentenceLexer.mll[489,30392+6]..lib/sentenceLexer.mll[493,30607+29])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/sentenceLexer.mll[489,30392+10]..lib/sentenceLexer.mll[489,30392+20])
                                      Tpat_var "openingpos/2316"
                                    expression (lib/sentenceLexer.mll[489,30392+23]..lib/sentenceLexer.mll[489,30392+44])
                                      Texp_apply
                                      expression (lib/sentenceLexer.mll[489,30392+23]..lib/sentenceLexer.mll[489,30392+37])
                                        Texp_ident "Stdlib!.Lexing.lexeme_start_p"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/sentenceLexer.mll[489,30392+38]..lib/sentenceLexer.mll[489,30392+44])
                                            Texp_ident "lexbuf/2040"
                                      ]
                                ]
                                expression (lib/sentenceLexer.mll[490,30440+6]..lib/sentenceLexer.mll[493,30607+29])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/sentenceLexer.mll[490,30440+10]..lib/sentenceLexer.mll[490,30440+17])
                                        Tpat_var "content/2317"
                                      expression (lib/sentenceLexer.mll[490,30440+20]..lib/sentenceLexer.mll[490,30440+55])
                                        Texp_apply
                                        expression (lib/sentenceLexer.mll[490,30440+20]..lib/sentenceLexer.mll[490,30440+29])
                                          Texp_ident "charclass/2035"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/sentenceLexer.mll[490,30440+31]..lib/sentenceLexer.mll[490,30440+41])
                                              Texp_ident "openingpos/2316"
                                          <arg>
                                            Nolabel
                                            expression (lib/sentenceLexer.mll[490,30440+42]..lib/sentenceLexer.mll[490,30440+48])
                                              Texp_ident "buffer/2233"
                                          <arg>
                                            Nolabel
                                            expression (lib/sentenceLexer.mll[490,30440+49]..lib/sentenceLexer.mll[490,30440+55])
                                              Texp_ident "lexbuf/2040"
                                        ]
                                  ]
                                  expression (lib/sentenceLexer.mll[491,30499+6]..lib/sentenceLexer.mll[493,30607+29])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/sentenceLexer.mll[491,30499+10]..lib/sentenceLexer.mll[491,30499+12])
                                          Tpat_var "id/2318"
                                        expression (lib/sentenceLexer.mll[491,30499+15]..lib/sentenceLexer.mll[491,30499+46])
                                          Texp_apply
                                          expression (lib/sentenceLexer.mll[491,30499+15]..lib/sentenceLexer.mll[491,30499+29])
                                            Texp_ident "Stdlib!.Printf.sprintf"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[491,30499+30]..lib/sentenceLexer.mll[491,30499+38])
                                                Texp_construct "CamlinternalFormatBasics.Format"
                                                [
                                                  expression (lib/sentenceLexer.mll[491,30499+30]..lib/sentenceLexer.mll[491,30499+38]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                    [
                                                      expression (lib/sentenceLexer.mll[491,30499+30]..lib/sentenceLexer.mll[491,30499+38]) ghost
                                                        Texp_constant Const_char 22
                                                      expression (lib/sentenceLexer.mll[491,30499+30]..lib/sentenceLexer.mll[491,30499+38]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.String"
                                                        [
                                                          expression (lib/sentenceLexer.mll[491,30499+30]..lib/sentenceLexer.mll[491,30499+38]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                                            []
                                                          expression (lib/sentenceLexer.mll[491,30499+30]..lib/sentenceLexer.mll[491,30499+38]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                            [
                                                              expression (lib/sentenceLexer.mll[491,30499+30]..lib/sentenceLexer.mll[491,30499+38]) ghost
                                                                Texp_constant Const_char 22
                                                              expression (lib/sentenceLexer.mll[491,30499+30]..lib/sentenceLexer.mll[491,30499+38]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                []
                                                            ]
                                                        ]
                                                    ]
                                                  expression (lib/sentenceLexer.mll[491,30499+30]..lib/sentenceLexer.mll[491,30499+38]) ghost
                                                    Texp_constant Const_string("\"%s\"",(lib/sentenceLexer.mll[491,30499+30]..lib/sentenceLexer.mll[491,30499+38]) ghost,None)
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[491,30499+39]..lib/sentenceLexer.mll[491,30499+46])
                                                Texp_ident "content/2317"
                                          ]
                                    ]
                                    expression (lib/sentenceLexer.mll[492,30549+6]..lib/sentenceLexer.mll[493,30607+29])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (lib/sentenceLexer.mll[492,30549+10]..lib/sentenceLexer.mll[492,30549+13])
                                            Tpat_var "pos/2332"
                                          expression (lib/sentenceLexer.mll[492,30549+16]..lib/sentenceLexer.mll[492,30549+54])
                                            Texp_apply
                                            expression (lib/sentenceLexer.mll[492,30549+16]..lib/sentenceLexer.mll[492,30549+22])
                                              Texp_ident "Gbnf_parser!.Positions.import"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/sentenceLexer.mll[492,30549+23]..lib/sentenceLexer.mll[492,30549+54])
                                                  Texp_tuple
                                                  [
                                                    expression (lib/sentenceLexer.mll[492,30549+24]..lib/sentenceLexer.mll[492,30549+34])
                                                      Texp_ident "openingpos/2316"
                                                    expression (lib/sentenceLexer.mll[492,30549+36]..lib/sentenceLexer.mll[492,30549+53])
                                                      Texp_field
                                                      expression (lib/sentenceLexer.mll[492,30549+36]..lib/sentenceLexer.mll[492,30549+42])
                                                        Texp_ident "lexbuf/2040"
                                                      "lex_curr_p"
                                                  ]
                                            ]
                                      ]
                                      expression (lib/sentenceLexer.mll[493,30607+6]..lib/sentenceLexer.mll[493,30607+29])
                                        Texp_construct "REGEX"
                                        [
                                          expression (lib/sentenceLexer.mll[493,30607+12]..lib/sentenceLexer.mll[493,30607+29])
                                            Texp_apply
                                            expression (lib/sentenceLexer.mll[493,30607+13]..lib/sentenceLexer.mll[493,30607+21])
                                              Texp_ident "Gbnf_parser!.Positions.with_pos"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/sentenceLexer.mll[493,30607+22]..lib/sentenceLexer.mll[493,30607+25])
                                                  Texp_ident "pos/2332"
                                              <arg>
                                                Nolabel
                                                expression (lib/sentenceLexer.mll[493,30607+26]..lib/sentenceLexer.mll[493,30607+28])
                                                  Texp_ident "id/2318"
                                            ]
                                        ]
                        <case>
                          pattern (lib/sentenceLexer.ml[711,30673+4]..lib/sentenceLexer.ml[711,30673+5])
                            Tpat_value
                            pattern (lib/sentenceLexer.ml[711,30673+4]..lib/sentenceLexer.ml[711,30673+5])
                              Tpat_constant Const_int 3
                          expression (lib/sentenceLexer.mll[499,30712+4]..lib/sentenceLexer.mll[499,30712+11])
                            Texp_construct "BAR"
                            []
                        <case>
                          pattern (lib/sentenceLexer.ml[716,30754+4]..lib/sentenceLexer.ml[716,30754+5])
                            Tpat_value
                            pattern (lib/sentenceLexer.ml[716,30754+4]..lib/sentenceLexer.ml[716,30754+5])
                              Tpat_constant Const_int 4
                          expression (lib/sentenceLexer.mll[501,30793+4]..lib/sentenceLexer.mll[501,30793+16])
                            Texp_construct "QUESTION"
                            []
                        <case>
                          pattern (lib/sentenceLexer.ml[721,30840+4]..lib/sentenceLexer.ml[721,30840+5])
                            Tpat_value
                            pattern (lib/sentenceLexer.ml[721,30840+4]..lib/sentenceLexer.ml[721,30840+5])
                              Tpat_constant Const_int 5
                          expression (lib/sentenceLexer.mll[503,30879+4]..lib/sentenceLexer.mll[503,30879+12])
                            Texp_construct "STAR"
                            []
                        <case>
                          pattern (lib/sentenceLexer.ml[726,30922+4]..lib/sentenceLexer.ml[726,30922+5])
                            Tpat_value
                            pattern (lib/sentenceLexer.ml[726,30922+4]..lib/sentenceLexer.ml[726,30922+5])
                              Tpat_constant Const_int 6
                          expression (lib/sentenceLexer.mll[505,30961+4]..lib/sentenceLexer.mll[505,30961+12])
                            Texp_construct "PLUS"
                            []
                        <case>
                          pattern (lib/sentenceLexer.ml[731,31004+4]..lib/sentenceLexer.ml[731,31004+5])
                            Tpat_value
                            pattern (lib/sentenceLexer.ml[731,31004+4]..lib/sentenceLexer.ml[731,31004+5])
                              Tpat_constant Const_int 7
                          expression (lib/sentenceLexer.mll[507,31043+4]..lib/sentenceLexer.mll[507,31043+12])
                            Texp_construct "DASH"
                            []
                        <case>
                          pattern (lib/sentenceLexer.ml[736,31086+4]..lib/sentenceLexer.ml[736,31086+5])
                            Tpat_value
                            pattern (lib/sentenceLexer.ml[736,31086+4]..lib/sentenceLexer.ml[736,31086+5])
                              Tpat_constant Const_int 8
                          expression (lib/sentenceLexer.mll[509,31125+4]..lib/sentenceLexer.mll[509,31125+13])
                            Texp_construct "CARET"
                            []
                        <case>
                          pattern (lib/sentenceLexer.ml[741,31169+4]..lib/sentenceLexer.ml[741,31169+5])
                            Tpat_value
                            pattern (lib/sentenceLexer.ml[741,31169+4]..lib/sentenceLexer.ml[741,31169+5])
                              Tpat_constant Const_int 9
                          expression (lib/sentenceLexer.mll[511,31208+4]..lib/sentenceLexer.mll[519,31463+23])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (lib/sentenceLexer.mll[513,31215+10]..lib/sentenceLexer.mll[513,31215+14])
                                  Tpat_var "curr/2333"
                                expression (lib/sentenceLexer.mll[513,31215+17]..lib/sentenceLexer.mll[513,31215+41])
                                  Texp_field
                                  expression (lib/sentenceLexer.mll[513,31215+17]..lib/sentenceLexer.mll[513,31215+23])
                                    Texp_ident "lexbuf/2040"
                                  "Lexing.lex_curr_p"
                            ]
                            expression (lib/sentenceLexer.mll[514,31260+6]..lib/sentenceLexer.mll[519,31463+21])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (lib/sentenceLexer.mll[514,31260+10]..lib/sentenceLexer.mll[514,31260+14])
                                    Tpat_var "line/2334"
                                  expression (lib/sentenceLexer.mll[514,31260+17]..lib/sentenceLexer.mll[514,31260+37])
                                    Texp_field
                                    expression (lib/sentenceLexer.mll[514,31260+17]..lib/sentenceLexer.mll[514,31260+21])
                                      Texp_ident "curr/2333"
                                    "Lexing.pos_lnum"
                              ]
                              expression (lib/sentenceLexer.mll[515,31301+6]..lib/sentenceLexer.mll[519,31463+21])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/sentenceLexer.mll[515,31301+10]..lib/sentenceLexer.mll[515,31301+14])
                                      Tpat_var "cnum/2335"
                                    expression (lib/sentenceLexer.mll[515,31301+17]..lib/sentenceLexer.mll[515,31301+59])
                                      Texp_apply
                                      expression (lib/sentenceLexer.mll[515,31301+38]..lib/sentenceLexer.mll[515,31301+39])
                                        Texp_ident "Stdlib!.-"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/sentenceLexer.mll[515,31301+17]..lib/sentenceLexer.mll[515,31301+37])
                                            Texp_field
                                            expression (lib/sentenceLexer.mll[515,31301+17]..lib/sentenceLexer.mll[515,31301+21])
                                              Texp_ident "curr/2333"
                                            "Lexing.pos_cnum"
                                        <arg>
                                          Nolabel
                                          expression (lib/sentenceLexer.mll[515,31301+40]..lib/sentenceLexer.mll[515,31301+59])
                                            Texp_field
                                            expression (lib/sentenceLexer.mll[515,31301+40]..lib/sentenceLexer.mll[515,31301+44])
                                              Texp_ident "curr/2333"
                                            "Lexing.pos_bol"
                                      ]
                                ]
                                expression (lib/sentenceLexer.mll[516,31364+6]..lib/sentenceLexer.mll[519,31463+21])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/sentenceLexer.mll[516,31364+10]..lib/sentenceLexer.mll[516,31364+13])
                                        Tpat_var "tok/2336"
                                      expression (lib/sentenceLexer.mll[516,31364+16]..lib/sentenceLexer.mll[516,31364+36])
                                        Texp_apply
                                        expression (lib/sentenceLexer.mll[516,31364+16]..lib/sentenceLexer.mll[516,31364+29])
                                          Texp_ident "Stdlib!.Lexing.lexeme"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/sentenceLexer.mll[516,31364+30]..lib/sentenceLexer.mll[516,31364+36])
                                              Texp_ident "lexbuf/2040"
                                        ]
                                  ]
                                  expression (lib/sentenceLexer.mll[517,31404+6]..lib/sentenceLexer.mll[519,31463+21])
                                    Texp_sequence
                                    expression (lib/sentenceLexer.mll[517,31404+6]..lib/sentenceLexer.mll[517,31404+56])
                                      Texp_apply
                                      expression (lib/sentenceLexer.mll[517,31404+7]..lib/sentenceLexer.mll[517,31404+20])
                                        Texp_ident "Stdlib!.print_endline"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/sentenceLexer.mll[517,31404+21]..lib/sentenceLexer.mll[517,31404+55])
                                            Texp_apply
                                            expression (lib/sentenceLexer.mll[517,31404+22]..lib/sentenceLexer.mll[517,31404+36])
                                              Texp_ident "Batteries!.dump"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/sentenceLexer.mll[517,31404+37]..lib/sentenceLexer.mll[517,31404+54])
                                                  Texp_tuple
                                                  [
                                                    expression (lib/sentenceLexer.mll[517,31404+39]..lib/sentenceLexer.mll[517,31404+43])
                                                      Texp_ident "line/2334"
                                                    expression (lib/sentenceLexer.mll[517,31404+44]..lib/sentenceLexer.mll[517,31404+48])
                                                      Texp_ident "cnum/2335"
                                                    expression (lib/sentenceLexer.mll[517,31404+49]..lib/sentenceLexer.mll[517,31404+52])
                                                      Texp_ident "tok/2336"
                                                  ]
                                            ]
                                      ]
                                    expression (lib/sentenceLexer.mll[519,31463+6]..lib/sentenceLexer.mll[519,31463+21])
                                      Texp_construct "COLONCOLONEQUAL"
                                      []
                        <case>
                          pattern (lib/sentenceLexer.ml[754,31517+4]..lib/sentenceLexer.ml[754,31517+6])
                            Tpat_value
                            pattern (lib/sentenceLexer.ml[754,31517+4]..lib/sentenceLexer.ml[754,31517+6])
                              Tpat_constant Const_int 10
                          expression (lib/sentenceLexer.ml[755,31527+0]..lib/sentenceLexer.mll[524,31773+5])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (lib/sentenceLexer.mll[521,31561+20]..lib/sentenceLexer.mll[521,31561+22])
                                  Tpat_var "id/2337"
                                expression (lib/sentenceLexer.ml[759,31613+2]..lib/sentenceLexer.ml[759,31613+81])
                                  Texp_apply
                                  expression (lib/sentenceLexer.ml[759,31613+2]..lib/sentenceLexer.ml[759,31613+19])
                                    Texp_ident "Stdlib!.Lexing.sub_lexeme"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/sentenceLexer.ml[759,31613+20]..lib/sentenceLexer.ml[759,31613+26])
                                        Texp_ident "lexbuf/2040"
                                    <arg>
                                      Nolabel
                                      expression (lib/sentenceLexer.ml[759,31613+27]..lib/sentenceLexer.ml[759,31613+54])
                                        Texp_field
                                        expression (lib/sentenceLexer.ml[759,31613+27]..lib/sentenceLexer.ml[759,31613+33])
                                          Texp_ident "lexbuf/2040"
                                        "Lexing.lex_start_pos"
                                    <arg>
                                      Nolabel
                                      expression (lib/sentenceLexer.ml[759,31613+55]..lib/sentenceLexer.ml[759,31613+81])
                                        Texp_field
                                        expression (lib/sentenceLexer.ml[759,31613+55]..lib/sentenceLexer.ml[759,31613+61])
                                          Texp_ident "lexbuf/2040"
                                        "Lexing.lex_curr_pos"
                                  ]
                            ]
                            expression (lib/sentenceLexer.mll[522,31728+4]..lib/sentenceLexer.mll[524,31773+5])
                              Texp_construct "LID"
                              [
                                expression (lib/sentenceLexer.mll[523,31735+10]..lib/sentenceLexer.mll[523,31735+37])
                                  Texp_apply
                                  expression (lib/sentenceLexer.mll[523,31735+11]..lib/sentenceLexer.mll[523,31735+19])
                                    Texp_ident "Gbnf_parser!.Positions.with_pos"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/sentenceLexer.mll[523,31735+20]..lib/sentenceLexer.mll[523,31735+33])
                                        Texp_apply
                                        expression (lib/sentenceLexer.mll[523,31735+21]..lib/sentenceLexer.mll[523,31735+25])
                                          Texp_ident "Gbnf_parser!.Positions.cpos"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/sentenceLexer.mll[523,31735+26]..lib/sentenceLexer.mll[523,31735+32])
                                              Texp_ident "lexbuf/2040"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (lib/sentenceLexer.mll[523,31735+34]..lib/sentenceLexer.mll[523,31735+36])
                                        Texp_ident "id/2337"
                                  ]
                              ]
                        <case>
                          pattern (lib/sentenceLexer.ml[766,31809+4]..lib/sentenceLexer.ml[766,31809+6])
                            Tpat_value
                            pattern (lib/sentenceLexer.ml[766,31809+4]..lib/sentenceLexer.ml[766,31809+6])
                              Tpat_constant Const_int 11
                          expression (lib/sentenceLexer.mll[530,31849+4]..lib/sentenceLexer.mll[535,32106+29])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (lib/sentenceLexer.mll[530,31849+10]..lib/sentenceLexer.mll[530,31849+16])
                                  Tpat_var "buffer/2338"
                                expression (lib/sentenceLexer.mll[530,31849+19]..lib/sentenceLexer.mll[530,31849+35])
                                  Texp_apply
                                  expression (lib/sentenceLexer.mll[530,31849+19]..lib/sentenceLexer.mll[530,31849+32])
                                    Texp_ident "Stdlib!.Buffer.create"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/sentenceLexer.mll[530,31849+33]..lib/sentenceLexer.mll[530,31849+35])
                                        Texp_constant Const_int 16
                                  ]
                            ]
                            expression (lib/sentenceLexer.mll[531,31888+6]..lib/sentenceLexer.mll[535,32106+27])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (lib/sentenceLexer.mll[531,31888+10]..lib/sentenceLexer.mll[531,31888+20])
                                    Tpat_var "openingpos/2339"
                                  expression (lib/sentenceLexer.mll[531,31888+23]..lib/sentenceLexer.mll[531,31888+44])
                                    Texp_apply
                                    expression (lib/sentenceLexer.mll[531,31888+23]..lib/sentenceLexer.mll[531,31888+37])
                                      Texp_ident "Stdlib!.Lexing.lexeme_start_p"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/sentenceLexer.mll[531,31888+38]..lib/sentenceLexer.mll[531,31888+44])
                                          Texp_ident "lexbuf/2040"
                                    ]
                              ]
                              expression (lib/sentenceLexer.mll[532,31936+6]..lib/sentenceLexer.mll[535,32106+27])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/sentenceLexer.mll[532,31936+10]..lib/sentenceLexer.mll[532,31936+17])
                                      Tpat_var "content/2340"
                                    expression (lib/sentenceLexer.mll[532,31936+20]..lib/sentenceLexer.mll[532,31936+58])
                                      Texp_apply
                                      expression (lib/sentenceLexer.mll[532,31936+20]..lib/sentenceLexer.mll[532,31936+33])
                                        Texp_ident "record_string/2033"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/sentenceLexer.mll[532,31936+34]..lib/sentenceLexer.mll[532,31936+44])
                                            Texp_ident "openingpos/2339"
                                        <arg>
                                          Nolabel
                                          expression (lib/sentenceLexer.mll[532,31936+45]..lib/sentenceLexer.mll[532,31936+51])
                                            Texp_ident "buffer/2338"
                                        <arg>
                                          Nolabel
                                          expression (lib/sentenceLexer.mll[532,31936+52]..lib/sentenceLexer.mll[532,31936+58])
                                            Texp_ident "lexbuf/2040"
                                      ]
                                ]
                                expression (lib/sentenceLexer.mll[533,31998+6]..lib/sentenceLexer.mll[535,32106+27])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/sentenceLexer.mll[533,31998+10]..lib/sentenceLexer.mll[533,31998+12])
                                        Tpat_var "id/2341"
                                      expression (lib/sentenceLexer.mll[533,31998+15]..lib/sentenceLexer.mll[533,31998+46])
                                        Texp_apply
                                        expression (lib/sentenceLexer.mll[533,31998+15]..lib/sentenceLexer.mll[533,31998+29])
                                          Texp_ident "Stdlib!.Printf.sprintf"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/sentenceLexer.mll[533,31998+30]..lib/sentenceLexer.mll[533,31998+38])
                                              Texp_construct "CamlinternalFormatBasics.Format"
                                              [
                                                expression (lib/sentenceLexer.mll[533,31998+30]..lib/sentenceLexer.mll[533,31998+38]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                  [
                                                    expression (lib/sentenceLexer.mll[533,31998+30]..lib/sentenceLexer.mll[533,31998+38]) ghost
                                                      Texp_constant Const_char 22
                                                    expression (lib/sentenceLexer.mll[533,31998+30]..lib/sentenceLexer.mll[533,31998+38]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.String"
                                                      [
                                                        expression (lib/sentenceLexer.mll[533,31998+30]..lib/sentenceLexer.mll[533,31998+38]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                                          []
                                                        expression (lib/sentenceLexer.mll[533,31998+30]..lib/sentenceLexer.mll[533,31998+38]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                          [
                                                            expression (lib/sentenceLexer.mll[533,31998+30]..lib/sentenceLexer.mll[533,31998+38]) ghost
                                                              Texp_constant Const_char 22
                                                            expression (lib/sentenceLexer.mll[533,31998+30]..lib/sentenceLexer.mll[533,31998+38]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                              []
                                                          ]
                                                      ]
                                                  ]
                                                expression (lib/sentenceLexer.mll[533,31998+30]..lib/sentenceLexer.mll[533,31998+38]) ghost
                                                  Texp_constant Const_string("\"%s\"",(lib/sentenceLexer.mll[533,31998+30]..lib/sentenceLexer.mll[533,31998+38]) ghost,None)
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (lib/sentenceLexer.mll[533,31998+39]..lib/sentenceLexer.mll[533,31998+46])
                                              Texp_ident "content/2340"
                                        ]
                                  ]
                                  expression (lib/sentenceLexer.mll[534,32048+6]..lib/sentenceLexer.mll[535,32106+27])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/sentenceLexer.mll[534,32048+10]..lib/sentenceLexer.mll[534,32048+13])
                                          Tpat_var "pos/2342"
                                        expression (lib/sentenceLexer.mll[534,32048+16]..lib/sentenceLexer.mll[534,32048+54])
                                          Texp_apply
                                          expression (lib/sentenceLexer.mll[534,32048+16]..lib/sentenceLexer.mll[534,32048+22])
                                            Texp_ident "Gbnf_parser!.Positions.import"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[534,32048+23]..lib/sentenceLexer.mll[534,32048+54])
                                                Texp_tuple
                                                [
                                                  expression (lib/sentenceLexer.mll[534,32048+24]..lib/sentenceLexer.mll[534,32048+34])
                                                    Texp_ident "openingpos/2339"
                                                  expression (lib/sentenceLexer.mll[534,32048+36]..lib/sentenceLexer.mll[534,32048+53])
                                                    Texp_field
                                                    expression (lib/sentenceLexer.mll[534,32048+36]..lib/sentenceLexer.mll[534,32048+42])
                                                      Texp_ident "lexbuf/2040"
                                                    "lex_curr_p"
                                                ]
                                          ]
                                    ]
                                    expression (lib/sentenceLexer.mll[535,32106+6]..lib/sentenceLexer.mll[535,32106+27])
                                      Texp_construct "QID"
                                      [
                                        expression (lib/sentenceLexer.mll[535,32106+10]..lib/sentenceLexer.mll[535,32106+27])
                                          Texp_apply
                                          expression (lib/sentenceLexer.mll[535,32106+11]..lib/sentenceLexer.mll[535,32106+19])
                                            Texp_ident "Gbnf_parser!.Positions.with_pos"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[535,32106+20]..lib/sentenceLexer.mll[535,32106+23])
                                                Texp_ident "pos/2342"
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[535,32106+24]..lib/sentenceLexer.mll[535,32106+26])
                                                Texp_ident "id/2341"
                                          ]
                                      ]
                        <case>
                          pattern (lib/sentenceLexer.ml[776,32166+4]..lib/sentenceLexer.ml[776,32166+6])
                            Tpat_value
                            pattern (lib/sentenceLexer.ml[776,32166+4]..lib/sentenceLexer.ml[776,32166+6])
                              Tpat_constant Const_int 12
                          expression (lib/sentenceLexer.mll[538,32206+5]..lib/sentenceLexer.mll[538,32206+16])
                            Texp_construct "NEWLINE"
                            []
                        <case>
                          pattern (lib/sentenceLexer.ml[781,32253+4]..lib/sentenceLexer.ml[781,32253+6])
                            Tpat_value
                            pattern (lib/sentenceLexer.ml[781,32253+4]..lib/sentenceLexer.ml[781,32253+6])
                              Tpat_constant Const_int 13
                          expression (lib/sentenceLexer.mll[539,32293+31]..lib/sentenceLexer.mll[539,32293+42])
                            Texp_construct "NEWLINE"
                            []
                        <case>
                          pattern (lib/sentenceLexer.ml[786,32366+4]..lib/sentenceLexer.ml[786,32366+6])
                            Tpat_value
                            pattern (lib/sentenceLexer.ml[786,32366+4]..lib/sentenceLexer.ml[786,32366+6])
                              Tpat_constant Const_int 14
                          expression (lib/sentenceLexer.mll[545,32406+4]..lib/sentenceLexer.mll[552,32612+5])
                            Texp_apply
                            expression (lib/sentenceLexer.mll[551,32591+6]..lib/sentenceLexer.mll[551,32591+10])
                              Texp_ident "main/2031"
                            [
                              <arg>
                                Nolabel
                                expression (lib/sentenceLexer.mll[551,32591+11]..lib/sentenceLexer.mll[551,32591+17])
                                  Texp_ident "lexbuf/2040"
                            ]
                        <case>
                          pattern (lib/sentenceLexer.ml[798,32648+4]..lib/sentenceLexer.ml[798,32648+6])
                            Tpat_value
                            pattern (lib/sentenceLexer.ml[798,32648+4]..lib/sentenceLexer.ml[798,32648+6])
                              Tpat_constant Const_int 15
                          expression (lib/sentenceLexer.mll[554,32688+4]..lib/sentenceLexer.mll[554,32688+11])
                            Texp_construct "EOF"
                            []
                        <case>
                          pattern (lib/sentenceLexer.ml[803,32730+4]..lib/sentenceLexer.ml[803,32730+6])
                            Tpat_value
                            pattern (lib/sentenceLexer.ml[803,32730+4]..lib/sentenceLexer.ml[803,32730+6])
                              Tpat_constant Const_int 16
                          expression (lib/sentenceLexer.mll[557,32770+4]..lib/sentenceLexer.mll[557,32770+48])
                            Texp_apply
                            expression (lib/sentenceLexer.mll[557,32770+6]..lib/sentenceLexer.mll[557,32770+12])
                              Texp_ident "error2/1247"
                            [
                              <arg>
                                Nolabel
                                expression (lib/sentenceLexer.mll[557,32770+13]..lib/sentenceLexer.mll[557,32770+19])
                                  Texp_ident "lexbuf/2040"
                              <arg>
                                Nolabel
                                expression (lib/sentenceLexer.mll[557,32770+20]..lib/sentenceLexer.mll[557,32770+46])
                                  Texp_construct "CamlinternalFormatBasics.Format"
                                  [
                                    expression (lib/sentenceLexer.mll[557,32770+20]..lib/sentenceLexer.mll[557,32770+46]) ghost
                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                      [
                                        expression (lib/sentenceLexer.mll[557,32770+20]..lib/sentenceLexer.mll[557,32770+46]) ghost
                                          Texp_constant Const_string("unexpected character(s).",(lib/sentenceLexer.mll[557,32770+20]..lib/sentenceLexer.mll[557,32770+46]) ghost,None)
                                        expression (lib/sentenceLexer.mll[557,32770+20]..lib/sentenceLexer.mll[557,32770+46]) ghost
                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                          []
                                      ]
                                    expression (lib/sentenceLexer.mll[557,32770+20]..lib/sentenceLexer.mll[557,32770+46]) ghost
                                      Texp_constant Const_string("unexpected character(s).",(lib/sentenceLexer.mll[557,32770+20]..lib/sentenceLexer.mll[557,32770+46]) ghost,None)
                                  ]
                            ]
                        <case>
                          pattern (lib/sentenceLexer.ml[808,32849+4]..lib/sentenceLexer.ml[808,32849+21])
                            Tpat_value
                            pattern (lib/sentenceLexer.ml[808,32849+4]..lib/sentenceLexer.ml[808,32849+21])
                              Tpat_var "__ocaml_lex_state/2042"
                          expression (lib/sentenceLexer.ml[808,32849+25]..lib/sentenceLexer.ml[809,32908+51])
                            Texp_sequence
                            expression (lib/sentenceLexer.ml[808,32849+25]..lib/sentenceLexer.ml[808,32849+57])
                              Texp_apply
                              expression (lib/sentenceLexer.ml[808,32849+25]..lib/sentenceLexer.ml[808,32849+50])
                                Texp_field
                                expression (lib/sentenceLexer.ml[808,32849+25]..lib/sentenceLexer.ml[808,32849+31])
                                  Texp_ident "lexbuf/2040"
                                "Lexing.refill_buff"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/sentenceLexer.ml[808,32849+51]..lib/sentenceLexer.ml[808,32849+57])
                                    Texp_ident "lexbuf/2040"
                              ]
                            expression (lib/sentenceLexer.ml[809,32908+6]..lib/sentenceLexer.ml[809,32908+51])
                              Texp_apply
                              expression (lib/sentenceLexer.ml[809,32908+6]..lib/sentenceLexer.ml[809,32908+26])
                                Texp_ident "__ocaml_lex_main_rec/2032"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/sentenceLexer.ml[809,32908+27]..lib/sentenceLexer.ml[809,32908+33])
                                    Texp_ident "lexbuf/2040"
                                <arg>
                                  Nolabel
                                  expression (lib/sentenceLexer.ml[809,32908+34]..lib/sentenceLexer.ml[809,32908+51])
                                    Texp_ident "__ocaml_lex_state/2042"
                              ]
                      ]
                ]
          ]
      <def>
        pattern (lib/sentenceLexer.ml[811,32961+4]..lib/sentenceLexer.ml[811,32961+17])
          Tpat_var "record_string/2033"
        expression (lib/sentenceLexer.ml[811,32961+18]..lib/sentenceLexer.ml[812,33006+60]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/sentenceLexer.ml[811,32961+18]..lib/sentenceLexer.ml[811,32961+28])
                Tpat_var "openingpos/2343"
              expression (lib/sentenceLexer.ml[811,32961+29]..lib/sentenceLexer.ml[812,33006+60]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/sentenceLexer.ml[811,32961+29]..lib/sentenceLexer.ml[811,32961+35])
                      Tpat_var "buffer/2344"
                    expression (lib/sentenceLexer.ml[811,32961+36]..lib/sentenceLexer.ml[812,33006+60]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/sentenceLexer.ml[811,32961+36]..lib/sentenceLexer.ml[811,32961+42])
                            Tpat_var "lexbuf/2345"
                          expression (lib/sentenceLexer.ml[812,33006+3]..lib/sentenceLexer.ml[812,33006+60])
                            Texp_apply
                            expression (lib/sentenceLexer.ml[812,33006+3]..lib/sentenceLexer.ml[812,33006+32])
                              Texp_ident "__ocaml_lex_record_string_rec/2034"
                            [
                              <arg>
                                Nolabel
                                expression (lib/sentenceLexer.ml[812,33006+33]..lib/sentenceLexer.ml[812,33006+43])
                                  Texp_ident "openingpos/2343"
                              <arg>
                                Nolabel
                                expression (lib/sentenceLexer.ml[812,33006+44]..lib/sentenceLexer.ml[812,33006+50])
                                  Texp_ident "buffer/2344"
                              <arg>
                                Nolabel
                                expression (lib/sentenceLexer.ml[812,33006+51]..lib/sentenceLexer.ml[812,33006+57])
                                  Texp_ident "lexbuf/2345"
                              <arg>
                                Nolabel
                                expression (lib/sentenceLexer.ml[812,33006+58]..lib/sentenceLexer.ml[812,33006+60])
                                  Texp_constant Const_int 27
                            ]
                      ]
                ]
          ]
      <def>
        pattern (lib/sentenceLexer.ml[813,33067+4]..lib/sentenceLexer.ml[813,33067+33])
          Tpat_var "__ocaml_lex_record_string_rec/2034"
        expression (lib/sentenceLexer.ml[813,33067+34]..lib/sentenceLexer.ml[856,34480+78]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/sentenceLexer.ml[813,33067+34]..lib/sentenceLexer.ml[813,33067+44])
                Tpat_var "openingpos/2346"
              expression (lib/sentenceLexer.ml[813,33067+45]..lib/sentenceLexer.ml[856,34480+78]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/sentenceLexer.ml[813,33067+45]..lib/sentenceLexer.ml[813,33067+51])
                      Tpat_var "buffer/2347"
                    expression (lib/sentenceLexer.ml[813,33067+52]..lib/sentenceLexer.ml[856,34480+78]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/sentenceLexer.ml[813,33067+52]..lib/sentenceLexer.ml[813,33067+58])
                            Tpat_var "lexbuf/2348"
                          expression (lib/sentenceLexer.ml[813,33067+59]..lib/sentenceLexer.ml[856,34480+78]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (lib/sentenceLexer.ml[813,33067+59]..lib/sentenceLexer.ml[813,33067+76])
                                  Tpat_var "__ocaml_lex_state/2349"
                                expression (lib/sentenceLexer.ml[814,33146+2]..lib/sentenceLexer.ml[856,34480+78])
                                  Texp_match
                                  expression (lib/sentenceLexer.ml[814,33146+8]..lib/sentenceLexer.ml[814,33146+65])
                                    Texp_apply
                                    expression (lib/sentenceLexer.ml[814,33146+8]..lib/sentenceLexer.ml[814,33146+21])
                                      Texp_ident "Stdlib!.Lexing.engine"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/sentenceLexer.ml[814,33146+22]..lib/sentenceLexer.ml[814,33146+40])
                                          Texp_ident "__ocaml_lex_tables/2030"
                                      <arg>
                                        Nolabel
                                        expression (lib/sentenceLexer.ml[814,33146+41]..lib/sentenceLexer.ml[814,33146+58])
                                          Texp_ident "__ocaml_lex_state/2349"
                                      <arg>
                                        Nolabel
                                        expression (lib/sentenceLexer.ml[814,33146+59]..lib/sentenceLexer.ml[814,33146+65])
                                          Texp_ident "lexbuf/2348"
                                    ]
                                  [
                                    <case>
                                      pattern (lib/sentenceLexer.ml[815,33217+8]..lib/sentenceLexer.ml[815,33217+9])
                                        Tpat_value
                                        pattern (lib/sentenceLexer.ml[815,33217+8]..lib/sentenceLexer.ml[815,33217+9])
                                          Tpat_constant Const_int 0
                                      expression (lib/sentenceLexer.mll[561,33260+4]..lib/sentenceLexer.mll[561,33260+30])
                                        Texp_apply
                                        expression (lib/sentenceLexer.mll[561,33260+6]..lib/sentenceLexer.mll[561,33260+21])
                                          Texp_ident "Stdlib!.Buffer.contents"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/sentenceLexer.mll[561,33260+22]..lib/sentenceLexer.mll[561,33260+28])
                                              Texp_ident "buffer/2347"
                                        ]
                                    <case>
                                      pattern (lib/sentenceLexer.ml[820,33321+4]..lib/sentenceLexer.ml[820,33321+5])
                                        Tpat_value
                                        pattern (lib/sentenceLexer.ml[820,33321+4]..lib/sentenceLexer.ml[820,33321+5])
                                          Tpat_constant Const_int 1
                                      expression (lib/sentenceLexer.ml[821,33330+0]..lib/sentenceLexer.mll[566,33756+46])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/sentenceLexer.mll[562,33364+56]..lib/sentenceLexer.mll[562,33364+64])
                                              Tpat_var "sequence/2351"
                                            expression (lib/sentenceLexer.ml[825,33458+2]..lib/sentenceLexer.ml[825,33458+88])
                                              Texp_apply
                                              expression (lib/sentenceLexer.ml[825,33458+2]..lib/sentenceLexer.ml[825,33458+19])
                                                Texp_ident "Stdlib!.Lexing.sub_lexeme"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/sentenceLexer.ml[825,33458+20]..lib/sentenceLexer.ml[825,33458+26])
                                                    Texp_ident "lexbuf/2348"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/sentenceLexer.ml[825,33458+27]..lib/sentenceLexer.ml[825,33458+54])
                                                    Texp_field
                                                    expression (lib/sentenceLexer.ml[825,33458+27]..lib/sentenceLexer.ml[825,33458+33])
                                                      Texp_ident "lexbuf/2348"
                                                    "Lexing.lex_start_pos"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/sentenceLexer.ml[825,33458+55]..lib/sentenceLexer.ml[825,33458+88])
                                                    Texp_apply
                                                    expression (lib/sentenceLexer.ml[825,33458+84]..lib/sentenceLexer.ml[825,33458+85])
                                                      Texp_ident "Stdlib!.+"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/sentenceLexer.ml[825,33458+56]..lib/sentenceLexer.ml[825,33458+83])
                                                          Texp_field
                                                          expression (lib/sentenceLexer.ml[825,33458+56]..lib/sentenceLexer.ml[825,33458+62])
                                                            Texp_ident "lexbuf/2348"
                                                          "Lexing.lex_start_pos"
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/sentenceLexer.ml[825,33458+86]..lib/sentenceLexer.ml[825,33458+87])
                                                          Texp_constant Const_int 2
                                                    ]
                                              ]
                                        ]
                                        expression (lib/sentenceLexer.mll[563,33580+4]..lib/sentenceLexer.mll[566,33756+46])
                                          Texp_sequence
                                          expression (lib/sentenceLexer.mll[564,33653+6]..lib/sentenceLexer.mll[564,33653+39])
                                            Texp_apply
                                            expression (lib/sentenceLexer.mll[564,33653+6]..lib/sentenceLexer.mll[564,33653+23])
                                              Texp_ident "Stdlib!.Buffer.add_string"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/sentenceLexer.mll[564,33653+24]..lib/sentenceLexer.mll[564,33653+30])
                                                  Texp_ident "buffer/2347"
                                              <arg>
                                                Nolabel
                                                expression (lib/sentenceLexer.mll[564,33653+31]..lib/sentenceLexer.mll[564,33653+39])
                                                  Texp_ident "sequence/2351"
                                            ]
                                          expression (lib/sentenceLexer.mll[565,33694+6]..lib/sentenceLexer.mll[566,33756+44])
                                            Texp_sequence
                                            expression (lib/sentenceLexer.mll[565,33694+6]..lib/sentenceLexer.mll[565,33694+60])
                                              Texp_apply
                                              expression (lib/sentenceLexer.mll[565,33694+7]..lib/sentenceLexer.mll[565,33694+20])
                                                Texp_ident "Stdlib!.print_endline"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/sentenceLexer.mll[565,33694+21]..lib/sentenceLexer.mll[565,33694+59])
                                                    Texp_apply
                                                    expression (lib/sentenceLexer.mll[565,33694+22]..lib/sentenceLexer.mll[565,33694+36])
                                                      Texp_ident "Batteries!.dump"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/sentenceLexer.mll[565,33694+37]..lib/sentenceLexer.mll[565,33694+58])
                                                          Texp_tuple
                                                          [
                                                            expression (lib/sentenceLexer.mll[565,33694+38]..lib/sentenceLexer.mll[565,33694+48])
                                                              Texp_constant Const_string("DEBUG:rs",(lib/sentenceLexer.mll[565,33694+39]..lib/sentenceLexer.mll[565,33694+47]),None)
                                                            expression (lib/sentenceLexer.mll[565,33694+49]..lib/sentenceLexer.mll[565,33694+57])
                                                              Texp_ident "sequence/2351"
                                                          ]
                                                    ]
                                              ]
                                            expression (lib/sentenceLexer.mll[566,33756+6]..lib/sentenceLexer.mll[566,33756+44])
                                              Texp_apply
                                              expression (lib/sentenceLexer.mll[566,33756+6]..lib/sentenceLexer.mll[566,33756+19])
                                                Texp_ident "record_string/2033"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/sentenceLexer.mll[566,33756+20]..lib/sentenceLexer.mll[566,33756+30])
                                                    Texp_ident "openingpos/2346"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/sentenceLexer.mll[566,33756+31]..lib/sentenceLexer.mll[566,33756+37])
                                                    Texp_ident "buffer/2347"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/sentenceLexer.mll[566,33756+38]..lib/sentenceLexer.mll[566,33756+44])
                                                    Texp_ident "lexbuf/2348"
                                              ]
                                    <case>
                                      pattern (lib/sentenceLexer.ml[833,33833+4]..lib/sentenceLexer.ml[833,33833+5])
                                        Tpat_value
                                        pattern (lib/sentenceLexer.ml[833,33833+4]..lib/sentenceLexer.ml[833,33833+5])
                                          Tpat_constant Const_int 2
                                      expression (lib/sentenceLexer.mll[568,33872+4]..lib/sentenceLexer.mll[568,33872+50])
                                        Texp_apply
                                        expression (lib/sentenceLexer.mll[568,33872+6]..lib/sentenceLexer.mll[568,33872+12])
                                          Texp_ident "error2/1247"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/sentenceLexer.mll[568,33872+13]..lib/sentenceLexer.mll[568,33872+19])
                                              Texp_ident "lexbuf/2348"
                                          <arg>
                                            Nolabel
                                            expression (lib/sentenceLexer.mll[568,33872+20]..lib/sentenceLexer.mll[568,33872+48])
                                              Texp_construct "CamlinternalFormatBasics.Format"
                                              [
                                                expression (lib/sentenceLexer.mll[568,33872+20]..lib/sentenceLexer.mll[568,33872+48]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                  [
                                                    expression (lib/sentenceLexer.mll[568,33872+20]..lib/sentenceLexer.mll[568,33872+48]) ghost
                                                      Texp_constant Const_string("illegal newline in string.",(lib/sentenceLexer.mll[568,33872+20]..lib/sentenceLexer.mll[568,33872+48]) ghost,None)
                                                    expression (lib/sentenceLexer.mll[568,33872+20]..lib/sentenceLexer.mll[568,33872+48]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                      []
                                                  ]
                                                expression (lib/sentenceLexer.mll[568,33872+20]..lib/sentenceLexer.mll[568,33872+48]) ghost
                                                  Texp_constant Const_string("illegal newline in string.",(lib/sentenceLexer.mll[568,33872+20]..lib/sentenceLexer.mll[568,33872+48]) ghost,None)
                                              ]
                                        ]
                                    <case>
                                      pattern (lib/sentenceLexer.ml[838,33953+4]..lib/sentenceLexer.ml[838,33953+5])
                                        Tpat_value
                                        pattern (lib/sentenceLexer.ml[838,33953+4]..lib/sentenceLexer.ml[838,33953+5])
                                          Tpat_constant Const_int 3
                                      expression (lib/sentenceLexer.mll[570,33992+4]..lib/sentenceLexer.mll[570,33992+48])
                                        Texp_apply
                                        expression (lib/sentenceLexer.mll[570,33992+6]..lib/sentenceLexer.mll[570,33992+12])
                                          Texp_ident "error1/1205"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/sentenceLexer.mll[570,33992+13]..lib/sentenceLexer.mll[570,33992+23])
                                              Texp_ident "openingpos/2346"
                                          <arg>
                                            Nolabel
                                            expression (lib/sentenceLexer.mll[570,33992+24]..lib/sentenceLexer.mll[570,33992+46])
                                              Texp_construct "CamlinternalFormatBasics.Format"
                                              [
                                                expression (lib/sentenceLexer.mll[570,33992+24]..lib/sentenceLexer.mll[570,33992+46]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                  [
                                                    expression (lib/sentenceLexer.mll[570,33992+24]..lib/sentenceLexer.mll[570,33992+46]) ghost
                                                      Texp_constant Const_string("unterminated string.",(lib/sentenceLexer.mll[570,33992+24]..lib/sentenceLexer.mll[570,33992+46]) ghost,None)
                                                    expression (lib/sentenceLexer.mll[570,33992+24]..lib/sentenceLexer.mll[570,33992+46]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                      []
                                                  ]
                                                expression (lib/sentenceLexer.mll[570,33992+24]..lib/sentenceLexer.mll[570,33992+46]) ghost
                                                  Texp_constant Const_string("unterminated string.",(lib/sentenceLexer.mll[570,33992+24]..lib/sentenceLexer.mll[570,33992+46]) ghost,None)
                                              ]
                                        ]
                                    <case>
                                      pattern (lib/sentenceLexer.ml[843,34071+4]..lib/sentenceLexer.ml[843,34071+5])
                                        Tpat_value
                                        pattern (lib/sentenceLexer.ml[843,34071+4]..lib/sentenceLexer.ml[843,34071+5])
                                          Tpat_constant Const_int 4
                                      expression (lib/sentenceLexer.ml[844,34080+0]..lib/sentenceLexer.mll[574,34344+46])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/sentenceLexer.mll[571,34114+7]..lib/sentenceLexer.mll[571,34114+8])
                                              Tpat_var "c/2352"
                                            expression (lib/sentenceLexer.ml[848,34152+2]..lib/sentenceLexer.ml[848,34152+59])
                                              Texp_apply
                                              expression (lib/sentenceLexer.ml[848,34152+2]..lib/sentenceLexer.ml[848,34152+24])
                                                Texp_ident "Stdlib!.Lexing.sub_lexeme_char"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/sentenceLexer.ml[848,34152+25]..lib/sentenceLexer.ml[848,34152+31])
                                                    Texp_ident "lexbuf/2348"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/sentenceLexer.ml[848,34152+32]..lib/sentenceLexer.ml[848,34152+59])
                                                    Texp_field
                                                    expression (lib/sentenceLexer.ml[848,34152+32]..lib/sentenceLexer.ml[848,34152+38])
                                                      Texp_ident "lexbuf/2348"
                                                    "Lexing.lex_start_pos"
                                              ]
                                        ]
                                        expression (lib/sentenceLexer.mll[572,34245+9]..lib/sentenceLexer.mll[574,34344+46])
                                          Texp_sequence
                                          expression (lib/sentenceLexer.mll[572,34245+11]..lib/sentenceLexer.mll[572,34245+35])
                                            Texp_apply
                                            expression (lib/sentenceLexer.mll[572,34245+11]..lib/sentenceLexer.mll[572,34245+26])
                                              Texp_ident "Stdlib!.Buffer.add_char"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/sentenceLexer.mll[572,34245+27]..lib/sentenceLexer.mll[572,34245+33])
                                                  Texp_ident "buffer/2347"
                                              <arg>
                                                Nolabel
                                                expression (lib/sentenceLexer.mll[572,34245+34]..lib/sentenceLexer.mll[572,34245+35])
                                                  Texp_ident "c/2352"
                                            ]
                                          expression (lib/sentenceLexer.mll[573,34282+11]..lib/sentenceLexer.mll[574,34344+44])
                                            Texp_sequence
                                            expression (lib/sentenceLexer.mll[573,34282+11]..lib/sentenceLexer.mll[573,34282+60])
                                              Texp_apply
                                              expression (lib/sentenceLexer.mll[573,34282+12]..lib/sentenceLexer.mll[573,34282+25])
                                                Texp_ident "Stdlib!.print_endline"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/sentenceLexer.mll[573,34282+26]..lib/sentenceLexer.mll[573,34282+59])
                                                    Texp_apply
                                                    expression (lib/sentenceLexer.mll[573,34282+27]..lib/sentenceLexer.mll[573,34282+41])
                                                      Texp_ident "Batteries!.dump"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/sentenceLexer.mll[573,34282+42]..lib/sentenceLexer.mll[573,34282+58])
                                                          Texp_tuple
                                                          [
                                                            expression (lib/sentenceLexer.mll[573,34282+43]..lib/sentenceLexer.mll[573,34282+54])
                                                              Texp_constant Const_string("DEBUG2:rs",(lib/sentenceLexer.mll[573,34282+44]..lib/sentenceLexer.mll[573,34282+53]),None)
                                                            expression (lib/sentenceLexer.mll[573,34282+56]..lib/sentenceLexer.mll[573,34282+57])
                                                              Texp_ident "c/2352"
                                                          ]
                                                    ]
                                              ]
                                            expression (lib/sentenceLexer.mll[574,34344+6]..lib/sentenceLexer.mll[574,34344+44])
                                              Texp_apply
                                              expression (lib/sentenceLexer.mll[574,34344+6]..lib/sentenceLexer.mll[574,34344+19])
                                                Texp_ident "record_string/2033"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/sentenceLexer.mll[574,34344+20]..lib/sentenceLexer.mll[574,34344+30])
                                                    Texp_ident "openingpos/2346"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/sentenceLexer.mll[574,34344+31]..lib/sentenceLexer.mll[574,34344+37])
                                                    Texp_ident "buffer/2347"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/sentenceLexer.mll[574,34344+38]..lib/sentenceLexer.mll[574,34344+44])
                                                    Texp_ident "lexbuf/2348"
                                              ]
                                    <case>
                                      pattern (lib/sentenceLexer.ml[855,34421+4]..lib/sentenceLexer.ml[855,34421+21])
                                        Tpat_value
                                        pattern (lib/sentenceLexer.ml[855,34421+4]..lib/sentenceLexer.ml[855,34421+21])
                                          Tpat_var "__ocaml_lex_state/2350"
                                      expression (lib/sentenceLexer.ml[855,34421+25]..lib/sentenceLexer.ml[856,34480+78])
                                        Texp_sequence
                                        expression (lib/sentenceLexer.ml[855,34421+25]..lib/sentenceLexer.ml[855,34421+57])
                                          Texp_apply
                                          expression (lib/sentenceLexer.ml[855,34421+25]..lib/sentenceLexer.ml[855,34421+50])
                                            Texp_field
                                            expression (lib/sentenceLexer.ml[855,34421+25]..lib/sentenceLexer.ml[855,34421+31])
                                              Texp_ident "lexbuf/2348"
                                            "Lexing.refill_buff"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.ml[855,34421+51]..lib/sentenceLexer.ml[855,34421+57])
                                                Texp_ident "lexbuf/2348"
                                          ]
                                        expression (lib/sentenceLexer.ml[856,34480+6]..lib/sentenceLexer.ml[856,34480+78])
                                          Texp_apply
                                          expression (lib/sentenceLexer.ml[856,34480+6]..lib/sentenceLexer.ml[856,34480+35])
                                            Texp_ident "__ocaml_lex_record_string_rec/2034"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.ml[856,34480+36]..lib/sentenceLexer.ml[856,34480+46])
                                                Texp_ident "openingpos/2346"
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.ml[856,34480+47]..lib/sentenceLexer.ml[856,34480+53])
                                                Texp_ident "buffer/2347"
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.ml[856,34480+54]..lib/sentenceLexer.ml[856,34480+60])
                                                Texp_ident "lexbuf/2348"
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.ml[856,34480+61]..lib/sentenceLexer.ml[856,34480+78])
                                                Texp_ident "__ocaml_lex_state/2350"
                                          ]
                                  ]
                            ]
                      ]
                ]
          ]
      <def>
        pattern (lib/sentenceLexer.ml[858,34560+4]..lib/sentenceLexer.ml[858,34560+13])
          Tpat_var "charclass/2035"
        expression (lib/sentenceLexer.ml[858,34560+14]..lib/sentenceLexer.ml[859,34601+56]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/sentenceLexer.ml[858,34560+14]..lib/sentenceLexer.ml[858,34560+24])
                Tpat_var "openingpos/2353"
              expression (lib/sentenceLexer.ml[858,34560+25]..lib/sentenceLexer.ml[859,34601+56]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/sentenceLexer.ml[858,34560+25]..lib/sentenceLexer.ml[858,34560+31])
                      Tpat_var "buffer/2354"
                    expression (lib/sentenceLexer.ml[858,34560+32]..lib/sentenceLexer.ml[859,34601+56]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/sentenceLexer.ml[858,34560+32]..lib/sentenceLexer.ml[858,34560+38])
                            Tpat_var "lexbuf/2355"
                          expression (lib/sentenceLexer.ml[859,34601+3]..lib/sentenceLexer.ml[859,34601+56])
                            Texp_apply
                            expression (lib/sentenceLexer.ml[859,34601+3]..lib/sentenceLexer.ml[859,34601+28])
                              Texp_ident "__ocaml_lex_charclass_rec/2036"
                            [
                              <arg>
                                Nolabel
                                expression (lib/sentenceLexer.ml[859,34601+29]..lib/sentenceLexer.ml[859,34601+39])
                                  Texp_ident "openingpos/2353"
                              <arg>
                                Nolabel
                                expression (lib/sentenceLexer.ml[859,34601+40]..lib/sentenceLexer.ml[859,34601+46])
                                  Texp_ident "buffer/2354"
                              <arg>
                                Nolabel
                                expression (lib/sentenceLexer.ml[859,34601+47]..lib/sentenceLexer.ml[859,34601+53])
                                  Texp_ident "lexbuf/2355"
                              <arg>
                                Nolabel
                                expression (lib/sentenceLexer.ml[859,34601+54]..lib/sentenceLexer.ml[859,34601+56])
                                  Texp_constant Const_int 35
                            ]
                      ]
                ]
          ]
      <def>
        pattern (lib/sentenceLexer.ml[860,34658+4]..lib/sentenceLexer.ml[860,34658+29])
          Tpat_var "__ocaml_lex_charclass_rec/2036"
        expression (lib/sentenceLexer.ml[860,34658+30]..lib/sentenceLexer.ml[896,35701+74]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/sentenceLexer.ml[860,34658+30]..lib/sentenceLexer.ml[860,34658+40])
                Tpat_var "openingpos/2356"
              expression (lib/sentenceLexer.ml[860,34658+41]..lib/sentenceLexer.ml[896,35701+74]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/sentenceLexer.ml[860,34658+41]..lib/sentenceLexer.ml[860,34658+47])
                      Tpat_var "buffer/2357"
                    expression (lib/sentenceLexer.ml[860,34658+48]..lib/sentenceLexer.ml[896,35701+74]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/sentenceLexer.ml[860,34658+48]..lib/sentenceLexer.ml[860,34658+54])
                            Tpat_var "lexbuf/2358"
                          expression (lib/sentenceLexer.ml[860,34658+55]..lib/sentenceLexer.ml[896,35701+74]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (lib/sentenceLexer.ml[860,34658+55]..lib/sentenceLexer.ml[860,34658+72])
                                  Tpat_var "__ocaml_lex_state/2359"
                                expression (lib/sentenceLexer.ml[861,34733+2]..lib/sentenceLexer.ml[896,35701+74])
                                  Texp_match
                                  expression (lib/sentenceLexer.ml[861,34733+8]..lib/sentenceLexer.ml[861,34733+65])
                                    Texp_apply
                                    expression (lib/sentenceLexer.ml[861,34733+8]..lib/sentenceLexer.ml[861,34733+21])
                                      Texp_ident "Stdlib!.Lexing.engine"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/sentenceLexer.ml[861,34733+22]..lib/sentenceLexer.ml[861,34733+40])
                                          Texp_ident "__ocaml_lex_tables/2030"
                                      <arg>
                                        Nolabel
                                        expression (lib/sentenceLexer.ml[861,34733+41]..lib/sentenceLexer.ml[861,34733+58])
                                          Texp_ident "__ocaml_lex_state/2359"
                                      <arg>
                                        Nolabel
                                        expression (lib/sentenceLexer.ml[861,34733+59]..lib/sentenceLexer.ml[861,34733+65])
                                          Texp_ident "lexbuf/2358"
                                    ]
                                  [
                                    <case>
                                      pattern (lib/sentenceLexer.ml[862,34804+8]..lib/sentenceLexer.ml[862,34804+9])
                                        Tpat_value
                                        pattern (lib/sentenceLexer.ml[862,34804+8]..lib/sentenceLexer.ml[862,34804+9])
                                          Tpat_constant Const_int 0
                                      expression (lib/sentenceLexer.mll[577,34847+8]..lib/sentenceLexer.mll[579,34963+1])
                                        Texp_sequence
                                        expression (lib/sentenceLexer.mll[577,34847+10]..lib/sentenceLexer.mll[577,34847+69])
                                          Texp_apply
                                          expression (lib/sentenceLexer.mll[577,34847+11]..lib/sentenceLexer.mll[577,34847+24])
                                            Texp_ident "Stdlib!.print_endline"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[577,34847+25]..lib/sentenceLexer.mll[577,34847+68])
                                                Texp_apply
                                                expression (lib/sentenceLexer.mll[577,34847+26]..lib/sentenceLexer.mll[577,34847+40])
                                                  Texp_ident "Batteries!.dump"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/sentenceLexer.mll[577,34847+41]..lib/sentenceLexer.mll[577,34847+67])
                                                      Texp_apply
                                                      expression (lib/sentenceLexer.mll[577,34847+44]..lib/sentenceLexer.mll[577,34847+57])
                                                        Texp_ident "Stdlib!.Lexing.lexeme"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/sentenceLexer.mll[577,34847+58]..lib/sentenceLexer.mll[577,34847+64])
                                                            Texp_ident "lexbuf/2358"
                                                      ]
                                                ]
                                          ]
                                        expression (lib/sentenceLexer.mll[578,34918+10]..lib/sentenceLexer.mll[578,34918+44])
                                          Texp_apply
                                          expression (lib/sentenceLexer.mll[578,34918+10]..lib/sentenceLexer.mll[578,34918+19])
                                            Texp_ident "charclass/2035"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[578,34918+20]..lib/sentenceLexer.mll[578,34918+30])
                                                Texp_ident "openingpos/2356"
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[578,34918+31]..lib/sentenceLexer.mll[578,34918+37])
                                                Texp_ident "buffer/2357"
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[578,34918+38]..lib/sentenceLexer.mll[578,34918+44])
                                                Texp_ident "lexbuf/2358"
                                          ]
                                    <case>
                                      pattern (lib/sentenceLexer.ml[869,34995+4]..lib/sentenceLexer.ml[869,34995+5])
                                        Tpat_value
                                        pattern (lib/sentenceLexer.ml[869,34995+4]..lib/sentenceLexer.ml[869,34995+5])
                                          Tpat_constant Const_int 1
                                      expression (lib/sentenceLexer.mll[581,35034+6]..lib/sentenceLexer.mll[584,35144+1])
                                        Texp_sequence
                                        expression (lib/sentenceLexer.mll[581,35034+8]..lib/sentenceLexer.mll[581,35034+67])
                                          Texp_apply
                                          expression (lib/sentenceLexer.mll[581,35034+9]..lib/sentenceLexer.mll[581,35034+22])
                                            Texp_ident "Stdlib!.print_endline"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[581,35034+23]..lib/sentenceLexer.mll[581,35034+66])
                                                Texp_apply
                                                expression (lib/sentenceLexer.mll[581,35034+24]..lib/sentenceLexer.mll[581,35034+38])
                                                  Texp_ident "Batteries!.dump"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/sentenceLexer.mll[581,35034+39]..lib/sentenceLexer.mll[581,35034+65])
                                                      Texp_apply
                                                      expression (lib/sentenceLexer.mll[581,35034+42]..lib/sentenceLexer.mll[581,35034+55])
                                                        Texp_ident "Stdlib!.Lexing.lexeme"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/sentenceLexer.mll[581,35034+56]..lib/sentenceLexer.mll[581,35034+62])
                                                            Texp_ident "lexbuf/2358"
                                                      ]
                                                ]
                                          ]
                                        expression (lib/sentenceLexer.mll[583,35129+8]..lib/sentenceLexer.mll[583,35129+14])
                                          Texp_constant Const_string("TODO",(lib/sentenceLexer.mll[583,35129+9]..lib/sentenceLexer.mll[583,35129+13]),None)
                                    <case>
                                      pattern (lib/sentenceLexer.ml[877,35176+4]..lib/sentenceLexer.ml[877,35176+5])
                                        Tpat_value
                                        pattern (lib/sentenceLexer.ml[877,35176+4]..lib/sentenceLexer.ml[877,35176+5])
                                          Tpat_constant Const_int 2
                                      expression (lib/sentenceLexer.mll[585,35215+6]..lib/sentenceLexer.mll[589,35357+1])
                                        Texp_sequence
                                        expression (lib/sentenceLexer.mll[585,35215+8]..lib/sentenceLexer.mll[585,35215+67])
                                          Texp_apply
                                          expression (lib/sentenceLexer.mll[585,35215+9]..lib/sentenceLexer.mll[585,35215+22])
                                            Texp_ident "Stdlib!.print_endline"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[585,35215+23]..lib/sentenceLexer.mll[585,35215+66])
                                                Texp_apply
                                                expression (lib/sentenceLexer.mll[585,35215+24]..lib/sentenceLexer.mll[585,35215+38])
                                                  Texp_ident "Batteries!.dump"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/sentenceLexer.mll[585,35215+39]..lib/sentenceLexer.mll[585,35215+65])
                                                      Texp_apply
                                                      expression (lib/sentenceLexer.mll[585,35215+42]..lib/sentenceLexer.mll[585,35215+55])
                                                        Texp_ident "Stdlib!.Lexing.lexeme"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/sentenceLexer.mll[585,35215+56]..lib/sentenceLexer.mll[585,35215+62])
                                                            Texp_ident "lexbuf/2358"
                                                      ]
                                                ]
                                          ]
                                        expression (lib/sentenceLexer.mll[588,35314+8]..lib/sentenceLexer.mll[588,35314+42])
                                          Texp_apply
                                          expression (lib/sentenceLexer.mll[588,35314+8]..lib/sentenceLexer.mll[588,35314+17])
                                            Texp_ident "charclass/2035"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[588,35314+18]..lib/sentenceLexer.mll[588,35314+28])
                                                Texp_ident "openingpos/2356"
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[588,35314+29]..lib/sentenceLexer.mll[588,35314+35])
                                                Texp_ident "buffer/2357"
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[588,35314+36]..lib/sentenceLexer.mll[588,35314+42])
                                                Texp_ident "lexbuf/2358"
                                          ]
                                    <case>
                                      pattern (lib/sentenceLexer.ml[886,35389+4]..lib/sentenceLexer.ml[886,35389+5])
                                        Tpat_value
                                        pattern (lib/sentenceLexer.ml[886,35389+4]..lib/sentenceLexer.ml[886,35389+5])
                                          Tpat_constant Const_int 3
                                      expression (lib/sentenceLexer.mll[590,35428+4]..lib/sentenceLexer.mll[594,35606+5])
                                        Texp_sequence
                                        expression (lib/sentenceLexer.mll[591,35434+6]..lib/sentenceLexer.mll[591,35434+65])
                                          Texp_apply
                                          expression (lib/sentenceLexer.mll[591,35434+7]..lib/sentenceLexer.mll[591,35434+20])
                                            Texp_ident "Stdlib!.print_endline"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[591,35434+21]..lib/sentenceLexer.mll[591,35434+64])
                                                Texp_apply
                                                expression (lib/sentenceLexer.mll[591,35434+22]..lib/sentenceLexer.mll[591,35434+36])
                                                  Texp_ident "Batteries!.dump"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/sentenceLexer.mll[591,35434+37]..lib/sentenceLexer.mll[591,35434+63])
                                                      Texp_apply
                                                      expression (lib/sentenceLexer.mll[591,35434+40]..lib/sentenceLexer.mll[591,35434+53])
                                                        Texp_ident "Stdlib!.Lexing.lexeme"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/sentenceLexer.mll[591,35434+54]..lib/sentenceLexer.mll[591,35434+60])
                                                            Texp_ident "lexbuf/2358"
                                                      ]
                                                ]
                                          ]
                                        expression (lib/sentenceLexer.mll[593,35563+8]..lib/sentenceLexer.mll[593,35563+42])
                                          Texp_apply
                                          expression (lib/sentenceLexer.mll[593,35563+8]..lib/sentenceLexer.mll[593,35563+17])
                                            Texp_ident "charclass/2035"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[593,35563+18]..lib/sentenceLexer.mll[593,35563+28])
                                                Texp_ident "openingpos/2356"
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[593,35563+29]..lib/sentenceLexer.mll[593,35563+35])
                                                Texp_ident "buffer/2357"
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[593,35563+36]..lib/sentenceLexer.mll[593,35563+42])
                                                Texp_ident "lexbuf/2358"
                                          ]
                                    <case>
                                      pattern (lib/sentenceLexer.ml[895,35642+4]..lib/sentenceLexer.ml[895,35642+21])
                                        Tpat_value
                                        pattern (lib/sentenceLexer.ml[895,35642+4]..lib/sentenceLexer.ml[895,35642+21])
                                          Tpat_var "__ocaml_lex_state/2360"
                                      expression (lib/sentenceLexer.ml[895,35642+25]..lib/sentenceLexer.ml[896,35701+74])
                                        Texp_sequence
                                        expression (lib/sentenceLexer.ml[895,35642+25]..lib/sentenceLexer.ml[895,35642+57])
                                          Texp_apply
                                          expression (lib/sentenceLexer.ml[895,35642+25]..lib/sentenceLexer.ml[895,35642+50])
                                            Texp_field
                                            expression (lib/sentenceLexer.ml[895,35642+25]..lib/sentenceLexer.ml[895,35642+31])
                                              Texp_ident "lexbuf/2358"
                                            "Lexing.refill_buff"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.ml[895,35642+51]..lib/sentenceLexer.ml[895,35642+57])
                                                Texp_ident "lexbuf/2358"
                                          ]
                                        expression (lib/sentenceLexer.ml[896,35701+6]..lib/sentenceLexer.ml[896,35701+74])
                                          Texp_apply
                                          expression (lib/sentenceLexer.ml[896,35701+6]..lib/sentenceLexer.ml[896,35701+31])
                                            Texp_ident "__ocaml_lex_charclass_rec/2036"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.ml[896,35701+32]..lib/sentenceLexer.ml[896,35701+42])
                                                Texp_ident "openingpos/2356"
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.ml[896,35701+43]..lib/sentenceLexer.ml[896,35701+49])
                                                Texp_ident "buffer/2357"
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.ml[896,35701+50]..lib/sentenceLexer.ml[896,35701+56])
                                                Texp_ident "lexbuf/2358"
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.ml[896,35701+57]..lib/sentenceLexer.ml[896,35701+74])
                                                Texp_ident "__ocaml_lex_state/2360"
                                          ]
                                  ]
                            ]
                      ]
                ]
          ]
      <def>
        pattern (lib/sentenceLexer.ml[898,35777+4]..lib/sentenceLexer.ml[898,35777+12])
          Tpat_var "subgroup/2037"
        expression (lib/sentenceLexer.ml[898,35777+13]..lib/sentenceLexer.ml[899,35817+55]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/sentenceLexer.ml[898,35777+13]..lib/sentenceLexer.ml[898,35777+23])
                Tpat_var "openingpos/2361"
              expression (lib/sentenceLexer.ml[898,35777+24]..lib/sentenceLexer.ml[899,35817+55]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/sentenceLexer.ml[898,35777+24]..lib/sentenceLexer.ml[898,35777+30])
                      Tpat_var "buffer/2362"
                    expression (lib/sentenceLexer.ml[898,35777+31]..lib/sentenceLexer.ml[899,35817+55]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/sentenceLexer.ml[898,35777+31]..lib/sentenceLexer.ml[898,35777+37])
                            Tpat_var "lexbuf/2363"
                          expression (lib/sentenceLexer.ml[899,35817+3]..lib/sentenceLexer.ml[899,35817+55])
                            Texp_apply
                            expression (lib/sentenceLexer.ml[899,35817+3]..lib/sentenceLexer.ml[899,35817+27])
                              Texp_ident "__ocaml_lex_subgroup_rec/2038"
                            [
                              <arg>
                                Nolabel
                                expression (lib/sentenceLexer.ml[899,35817+28]..lib/sentenceLexer.ml[899,35817+38])
                                  Texp_ident "openingpos/2361"
                              <arg>
                                Nolabel
                                expression (lib/sentenceLexer.ml[899,35817+39]..lib/sentenceLexer.ml[899,35817+45])
                                  Texp_ident "buffer/2362"
                              <arg>
                                Nolabel
                                expression (lib/sentenceLexer.ml[899,35817+46]..lib/sentenceLexer.ml[899,35817+52])
                                  Texp_ident "lexbuf/2363"
                              <arg>
                                Nolabel
                                expression (lib/sentenceLexer.ml[899,35817+53]..lib/sentenceLexer.ml[899,35817+55])
                                  Texp_constant Const_int 41
                            ]
                      ]
                ]
          ]
      <def>
        pattern (lib/sentenceLexer.ml[900,35873+4]..lib/sentenceLexer.ml[900,35873+28])
          Tpat_var "__ocaml_lex_subgroup_rec/2038"
        expression (lib/sentenceLexer.ml[900,35873+29]..lib/sentenceLexer.ml[929,36726+73]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/sentenceLexer.ml[900,35873+29]..lib/sentenceLexer.ml[900,35873+39])
                Tpat_var "openingpos/2364"
              expression (lib/sentenceLexer.ml[900,35873+40]..lib/sentenceLexer.ml[929,36726+73]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/sentenceLexer.ml[900,35873+40]..lib/sentenceLexer.ml[900,35873+46])
                      Tpat_var "buffer/2365"
                    expression (lib/sentenceLexer.ml[900,35873+47]..lib/sentenceLexer.ml[929,36726+73]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/sentenceLexer.ml[900,35873+47]..lib/sentenceLexer.ml[900,35873+53])
                            Tpat_var "lexbuf/2366"
                          expression (lib/sentenceLexer.ml[900,35873+54]..lib/sentenceLexer.ml[929,36726+73]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (lib/sentenceLexer.ml[900,35873+54]..lib/sentenceLexer.ml[900,35873+71])
                                  Tpat_var "__ocaml_lex_state/2367"
                                expression (lib/sentenceLexer.ml[901,35947+2]..lib/sentenceLexer.ml[929,36726+73])
                                  Texp_match
                                  expression (lib/sentenceLexer.ml[901,35947+8]..lib/sentenceLexer.ml[901,35947+65])
                                    Texp_apply
                                    expression (lib/sentenceLexer.ml[901,35947+8]..lib/sentenceLexer.ml[901,35947+21])
                                      Texp_ident "Stdlib!.Lexing.engine"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/sentenceLexer.ml[901,35947+22]..lib/sentenceLexer.ml[901,35947+40])
                                          Texp_ident "__ocaml_lex_tables/2030"
                                      <arg>
                                        Nolabel
                                        expression (lib/sentenceLexer.ml[901,35947+41]..lib/sentenceLexer.ml[901,35947+58])
                                          Texp_ident "__ocaml_lex_state/2367"
                                      <arg>
                                        Nolabel
                                        expression (lib/sentenceLexer.ml[901,35947+59]..lib/sentenceLexer.ml[901,35947+65])
                                          Texp_ident "lexbuf/2366"
                                    ]
                                  [
                                    <case>
                                      pattern (lib/sentenceLexer.ml[902,36018+8]..lib/sentenceLexer.ml[902,36018+9])
                                        Tpat_value
                                        pattern (lib/sentenceLexer.ml[902,36018+8]..lib/sentenceLexer.ml[902,36018+9])
                                          Tpat_constant Const_int 0
                                      expression (lib/sentenceLexer.mll[597,36061+6]..lib/sentenceLexer.mll[600,36171+1])
                                        Texp_sequence
                                        expression (lib/sentenceLexer.mll[597,36061+8]..lib/sentenceLexer.mll[597,36061+67])
                                          Texp_apply
                                          expression (lib/sentenceLexer.mll[597,36061+9]..lib/sentenceLexer.mll[597,36061+22])
                                            Texp_ident "Stdlib!.print_endline"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[597,36061+23]..lib/sentenceLexer.mll[597,36061+66])
                                                Texp_apply
                                                expression (lib/sentenceLexer.mll[597,36061+24]..lib/sentenceLexer.mll[597,36061+38])
                                                  Texp_ident "Batteries!.dump"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/sentenceLexer.mll[597,36061+39]..lib/sentenceLexer.mll[597,36061+65])
                                                      Texp_apply
                                                      expression (lib/sentenceLexer.mll[597,36061+42]..lib/sentenceLexer.mll[597,36061+55])
                                                        Texp_ident "Stdlib!.Lexing.lexeme"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/sentenceLexer.mll[597,36061+56]..lib/sentenceLexer.mll[597,36061+62])
                                                            Texp_ident "lexbuf/2366"
                                                      ]
                                                ]
                                          ]
                                        expression (lib/sentenceLexer.mll[599,36156+8]..lib/sentenceLexer.mll[599,36156+14])
                                          Texp_constant Const_string("TODO",(lib/sentenceLexer.mll[599,36156+9]..lib/sentenceLexer.mll[599,36156+13]),None)
                                    <case>
                                      pattern (lib/sentenceLexer.ml[910,36203+4]..lib/sentenceLexer.ml[910,36203+5])
                                        Tpat_value
                                        pattern (lib/sentenceLexer.ml[910,36203+4]..lib/sentenceLexer.ml[910,36203+5])
                                          Tpat_constant Const_int 1
                                      expression (lib/sentenceLexer.mll[601,36242+6]..lib/sentenceLexer.mll[605,36383+1])
                                        Texp_sequence
                                        expression (lib/sentenceLexer.mll[601,36242+8]..lib/sentenceLexer.mll[601,36242+67])
                                          Texp_apply
                                          expression (lib/sentenceLexer.mll[601,36242+9]..lib/sentenceLexer.mll[601,36242+22])
                                            Texp_ident "Stdlib!.print_endline"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[601,36242+23]..lib/sentenceLexer.mll[601,36242+66])
                                                Texp_apply
                                                expression (lib/sentenceLexer.mll[601,36242+24]..lib/sentenceLexer.mll[601,36242+38])
                                                  Texp_ident "Batteries!.dump"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/sentenceLexer.mll[601,36242+39]..lib/sentenceLexer.mll[601,36242+65])
                                                      Texp_apply
                                                      expression (lib/sentenceLexer.mll[601,36242+42]..lib/sentenceLexer.mll[601,36242+55])
                                                        Texp_ident "Stdlib!.Lexing.lexeme"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/sentenceLexer.mll[601,36242+56]..lib/sentenceLexer.mll[601,36242+62])
                                                            Texp_ident "lexbuf/2366"
                                                      ]
                                                ]
                                          ]
                                        expression (lib/sentenceLexer.mll[604,36341+8]..lib/sentenceLexer.mll[604,36341+41])
                                          Texp_apply
                                          expression (lib/sentenceLexer.mll[604,36341+8]..lib/sentenceLexer.mll[604,36341+16])
                                            Texp_ident "subgroup/2037"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[604,36341+17]..lib/sentenceLexer.mll[604,36341+27])
                                                Texp_ident "openingpos/2364"
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[604,36341+28]..lib/sentenceLexer.mll[604,36341+34])
                                                Texp_ident "buffer/2365"
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[604,36341+35]..lib/sentenceLexer.mll[604,36341+41])
                                                Texp_ident "lexbuf/2366"
                                          ]
                                    <case>
                                      pattern (lib/sentenceLexer.ml[919,36415+4]..lib/sentenceLexer.ml[919,36415+5])
                                        Tpat_value
                                        pattern (lib/sentenceLexer.ml[919,36415+4]..lib/sentenceLexer.ml[919,36415+5])
                                          Tpat_constant Const_int 2
                                      expression (lib/sentenceLexer.mll[606,36454+4]..lib/sentenceLexer.mll[610,36631+5])
                                        Texp_sequence
                                        expression (lib/sentenceLexer.mll[607,36460+6]..lib/sentenceLexer.mll[607,36460+65])
                                          Texp_apply
                                          expression (lib/sentenceLexer.mll[607,36460+7]..lib/sentenceLexer.mll[607,36460+20])
                                            Texp_ident "Stdlib!.print_endline"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[607,36460+21]..lib/sentenceLexer.mll[607,36460+64])
                                                Texp_apply
                                                expression (lib/sentenceLexer.mll[607,36460+22]..lib/sentenceLexer.mll[607,36460+36])
                                                  Texp_ident "Batteries!.dump"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/sentenceLexer.mll[607,36460+37]..lib/sentenceLexer.mll[607,36460+63])
                                                      Texp_apply
                                                      expression (lib/sentenceLexer.mll[607,36460+40]..lib/sentenceLexer.mll[607,36460+53])
                                                        Texp_ident "Stdlib!.Lexing.lexeme"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/sentenceLexer.mll[607,36460+54]..lib/sentenceLexer.mll[607,36460+60])
                                                            Texp_ident "lexbuf/2366"
                                                      ]
                                                ]
                                          ]
                                        expression (lib/sentenceLexer.mll[609,36589+8]..lib/sentenceLexer.mll[609,36589+41])
                                          Texp_apply
                                          expression (lib/sentenceLexer.mll[609,36589+8]..lib/sentenceLexer.mll[609,36589+16])
                                            Texp_ident "subgroup/2037"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[609,36589+17]..lib/sentenceLexer.mll[609,36589+27])
                                                Texp_ident "openingpos/2364"
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[609,36589+28]..lib/sentenceLexer.mll[609,36589+34])
                                                Texp_ident "buffer/2365"
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.mll[609,36589+35]..lib/sentenceLexer.mll[609,36589+41])
                                                Texp_ident "lexbuf/2366"
                                          ]
                                    <case>
                                      pattern (lib/sentenceLexer.ml[928,36667+4]..lib/sentenceLexer.ml[928,36667+21])
                                        Tpat_value
                                        pattern (lib/sentenceLexer.ml[928,36667+4]..lib/sentenceLexer.ml[928,36667+21])
                                          Tpat_var "__ocaml_lex_state/2368"
                                      expression (lib/sentenceLexer.ml[928,36667+25]..lib/sentenceLexer.ml[929,36726+73])
                                        Texp_sequence
                                        expression (lib/sentenceLexer.ml[928,36667+25]..lib/sentenceLexer.ml[928,36667+57])
                                          Texp_apply
                                          expression (lib/sentenceLexer.ml[928,36667+25]..lib/sentenceLexer.ml[928,36667+50])
                                            Texp_field
                                            expression (lib/sentenceLexer.ml[928,36667+25]..lib/sentenceLexer.ml[928,36667+31])
                                              Texp_ident "lexbuf/2366"
                                            "Lexing.refill_buff"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.ml[928,36667+51]..lib/sentenceLexer.ml[928,36667+57])
                                                Texp_ident "lexbuf/2366"
                                          ]
                                        expression (lib/sentenceLexer.ml[929,36726+6]..lib/sentenceLexer.ml[929,36726+73])
                                          Texp_apply
                                          expression (lib/sentenceLexer.ml[929,36726+6]..lib/sentenceLexer.ml[929,36726+30])
                                            Texp_ident "__ocaml_lex_subgroup_rec/2038"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.ml[929,36726+31]..lib/sentenceLexer.ml[929,36726+41])
                                                Texp_ident "openingpos/2364"
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.ml[929,36726+42]..lib/sentenceLexer.ml[929,36726+48])
                                                Texp_ident "buffer/2365"
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.ml[929,36726+49]..lib/sentenceLexer.ml[929,36726+55])
                                                Texp_ident "lexbuf/2366"
                                            <arg>
                                              Nolabel
                                              expression (lib/sentenceLexer.ml[929,36726+56]..lib/sentenceLexer.ml[929,36726+73])
                                                Texp_ident "__ocaml_lex_state/2368"
                                          ]
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/sentenceLexer.ml[929,36726+73]..lib/sentenceLexer.ml[929,36726+73]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.ml[929,36726+73]..lib/sentenceLexer.ml[929,36726+73]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/sentenceLexer.ml[929,36726+73]..lib/sentenceLexer.ml[929,36726+73]) ghost
          Texp_apply
          expression (lib/sentenceLexer.ml[929,36726+73]..lib/sentenceLexer.ml[929,36726+73]) ghost
            Texp_ident "Ppx_inline_test_lib!.unset_lib"
          [
            <arg>
              Nolabel
              expression (lib/sentenceLexer.ml[929,36726+73]..lib/sentenceLexer.ml[929,36726+73]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/sentenceLexer.ml[929,36726+73]..lib/sentenceLexer.ml[929,36726+73]) ghost,None)
          ]
    ]
  structure_item (lib/sentenceLexer.ml[929,36726+73]..lib/sentenceLexer.ml[929,36726+73]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.ml[929,36726+73]..lib/sentenceLexer.ml[929,36726+73]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/sentenceLexer.ml[929,36726+73]..lib/sentenceLexer.ml[929,36726+73]) ghost
          Texp_apply
          expression (lib/sentenceLexer.ml[929,36726+73]..lib/sentenceLexer.ml[929,36726+73]) ghost
            Texp_ident "Expect_test_collector!.Current_file.unset"
          [
            <arg>
              Nolabel
              expression (lib/sentenceLexer.ml[929,36726+73]..lib/sentenceLexer.ml[929,36726+73]) ghost
                Texp_construct "()"
                []
          ]
    ]
  structure_item (lib/sentenceLexer.ml[929,36726+73]..lib/sentenceLexer.ml[929,36726+73]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.ml[929,36726+73]..lib/sentenceLexer.ml[929,36726+73]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/sentenceLexer.ml[929,36726+73]..lib/sentenceLexer.ml[929,36726+73]) ghost
          Texp_apply
          expression (lib/sentenceLexer.ml[929,36726+73]..lib/sentenceLexer.ml[929,36726+73]) ghost
            Texp_ident "Ppx_bench_lib!.Benchmark_accumulator.Current_libname.unset"
          [
            <arg>
              Nolabel
              expression (lib/sentenceLexer.ml[929,36726+73]..lib/sentenceLexer.ml[929,36726+73]) ghost
                Texp_construct "()"
                []
          ]
    ]
  structure_item (lib/sentenceLexer.ml[929,36726+73]..lib/sentenceLexer.ml[929,36726+73]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/sentenceLexer.ml[929,36726+73]..lib/sentenceLexer.ml[929,36726+73]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/sentenceLexer.ml[929,36726+73]..lib/sentenceLexer.ml[929,36726+73]) ghost
          Texp_apply
          expression (lib/sentenceLexer.ml[929,36726+73]..lib/sentenceLexer.ml[929,36726+73]) ghost
            Texp_ident "Ppx_module_timer_runtime!.record_until"
          [
            <arg>
              Nolabel
              expression (lib/sentenceLexer.ml[929,36726+73]..lib/sentenceLexer.ml[929,36726+73]) ghost
                Texp_ident "Ppx_module_timer_runtime!.__MODULE__"
          ]
    ]
]

{<Gbnf_parser__SentenceLexer>
 "__ocaml_lex_charclass_rec"[value] -> <Gbnf_parser__SentenceLexer.104>;
 "__ocaml_lex_main_rec"[value] -> <Gbnf_parser__SentenceLexer.100>;
 "__ocaml_lex_record_string_rec"[value] -> <Gbnf_parser__SentenceLexer.102>;
 "__ocaml_lex_subgroup_rec"[value] -> <Gbnf_parser__SentenceLexer.106>;
 "__ocaml_lex_tables"[value] -> <Gbnf_parser__SentenceLexer.98>;
 "char_for_backslash"[value] -> <Gbnf_parser__SentenceLexer.96>;
 "charclass"[value] -> <Gbnf_parser__SentenceLexer.103>;
 "check"[type] -> <Gbnf_parser__SentenceLexer.18>;
 "error1"[value] -> <Gbnf_parser__SentenceLexer.0>;
 "error2"[value] -> <Gbnf_parser__SentenceLexer.2>;
 "gather_monsters"[value] -> <Gbnf_parser__SentenceLexer.67>;
 "gather_oid"[value] -> <Gbnf_parser__SentenceLexer.61>;
 "gather_oids"[value] -> <Gbnf_parser__SentenceLexer.65>;
 "int_of_string"[value] -> <Gbnf_parser__SentenceLexer.4>;
 "main"[value] -> <Gbnf_parser__SentenceLexer.99>;
 "mk_stretch"[value] -> <Gbnf_parser__SentenceLexer.71>;
 "monster"[type] -> <Gbnf_parser__SentenceLexer.17>;
 "no_monsters"[value] -> <Gbnf_parser__SentenceLexer.58>;
 "none"[value] -> <Gbnf_parser__SentenceLexer.24>;
 "overwrite"[value] -> <Gbnf_parser__SentenceLexer.12>;
 "position"[value] -> <Gbnf_parser__SentenceLexer.36>;
 "record_string"[value] -> <Gbnf_parser__SentenceLexer.101>;
 "reserved"[value] -> <Gbnf_parser__SentenceLexer.95>;
 "savestart"[value] -> <Gbnf_parser__SentenceLexer.7>;
 "stretch_of_id"[value] -> <Gbnf_parser__SentenceLexer.82>;
 "subgroup"[value] -> <Gbnf_parser__SentenceLexer.105>;
 "syntaxerror"[value] -> <Gbnf_parser__SentenceLexer.25>;
 "table"[value] -> <Gbnf_parser__SentenceLexer.91>;
 }

(seq
  (let
    (*match*/3441 =
       (apply (field_imm 3 (global Ppx_module_timer_runtime!))
         #"Gbnf_parser__SentenceLexer"))
    0)
  (let
    (*match*/3443 =
       (apply
         (field_imm 0
           (field_imm 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
         "gbnf_parser"))
    0)
  (let
    (*match*/3445 =
       (apply (field_imm 0 (field_imm 5 (global Expect_test_collector!)))
         "lib/sentenceLexer.mll"))
    0)
  (let
    (*match*/3447 =
       (apply (field_imm 4 (global Ppx_inline_test_lib!)) "gbnf_parser"
         "sentenceLexer.ml"))
    0)
  (let
    (error1/1205 =
       (function pos/1207
         (apply (field_imm 6 (global Gbnf_parser__Error!))
           (apply (field_imm 29 (global Gbnf_parser__Positions!)) pos/1207))))
    (setfield_ptr(root-init) 0 (global Gbnf_parser__SentenceLexer!)
      error1/1205))
  (let
    (error2/1247 =
       (function lexbuf/1249
         (apply (field_imm 6 (global Gbnf_parser__Error!))
           (apply (field_imm 30 (global Gbnf_parser__Positions!))
             lexbuf/1249))))
    (setfield_ptr(root-init) 1 (global Gbnf_parser__SentenceLexer!)
      error2/1247))
  (let
    (int_of_string/1250 =
       (function pos/1251 i/1252 : int
         (try (caml_int_of_string i/1252) with exn/3448
           (catch
             (let (tag/3450 =a (field_imm 0 exn/3448))
               (if (== tag/3450 (field_imm 6 (global Stdlib!)))
                 (let (*match*/3449 =a (field_imm 1 exn/3448))
                   (apply (field_imm 0 (global Gbnf_parser__SentenceLexer!))
                     pos/1251
                     [0:
                      [11: "unreasonably large integer." 0]
                      "unreasonably large integer."]))
                 (exit 13)))
            with (13) (reraise exn/3448)))))
    (setfield_ptr(root-init) 2 (global Gbnf_parser__SentenceLexer!)
      int_of_string/1250))
  (let
    (savestart/1276 =
       (function lexbuf/1278 f/1279
         (let
           (startp/1280 = (field_mut 10 lexbuf/1278)
            token/1281 = (apply f/1279 lexbuf/1278))
           (seq (setfield_ptr 10 lexbuf/1278 startp/1280) token/1281))))
    (setfield_ptr(root-init) 3 (global Gbnf_parser__SentenceLexer!)
      savestart/1276))
  (let
    (overwrite/1282 =
       (function content/1284 offset/1285[int] c1/1286[int] c2/1287[int]
         : int
         (seq
           (if (== (bytes.get content/1284 offset/1285) c1/1286) 0
             (raise
               (makeblock 0 (global Assert_failure/28!)
                 [0: "lib/sentenceLexer.mll" 61 2])))
           (bytes.set content/1284 offset/1285 c2/1287))))
    (setfield_ptr(root-init) 4 (global Gbnf_parser__SentenceLexer!)
      overwrite/1282))
  (let (none/1401 = (function param/1403 : int 0))
    (setfield_ptr(root-init) 5 (global Gbnf_parser__SentenceLexer!)
      none/1401))
  (let
    (syntaxerror/1404 =
       (function pos/1406
         (let
           (check/1407 = (field_imm 5 (global Gbnf_parser__SentenceLexer!))
            transform/1408 =
              (function ofs1/1411[int] content/1412 : int
                (let
                  (pos/1413 =
                     (apply (field_imm 11 (global Gbnf_parser__Positions!))
                       pos/1406)
                   ofs/1414 =[int] (- (field_int 3 pos/1413) ofs1/1411)
                   source/1415 = "(raise _eRR)")
                  (apply (field_imm 11 (global Stdlib__Bytes!)) source/1415 0
                    content/1412 ofs/1414 (string.length source/1415))))
            keyword/1409 = [0: 0]
            oid/1410 = 0)
           (makeblock 0 pos/1406 check/1407 transform/1408 keyword/1409
             oid/1410))))
    (setfield_ptr(root-init) 6 (global Gbnf_parser__SentenceLexer!)
      syntaxerror/1404))
  (let
    (position/1485 =
       (function pos/1486 where/1487 flavor/1488 i/1489 x/1490
         (let
           (check_no_parameter/1491 =
              (function param/1493[int] : int
                (if (|| (!= i/1489 0) (!= x/1490 0))
                  (apply (field_imm 6 (global Gbnf_parser__Error!))
                    (makeblock 0 pos/1486 0)
                    [0:
                     [12:
                      '$' [2: 0 [2: 0 [11: " does not take a parameter." 0]]]]
                     "$%s%s does not take a parameter."]
                    where/1487 flavor/1488)
                  0))
            ofslpar/1494 =[int] (+ (+ 1 (string.length where/1487)) 3)
            where/1495 =[int]
              (catch
                (catch
                  (catch
                    (stringswitch where/1487
                     case "": (exit 25)
                     case "end": 2
                     case "s": (exit 23)
                     case "start": (exit 25)
                     case "symbolstart": (exit 23)
                     default: (exit 24))
                   with (25) 1)
                 with (24)
                  (raise
                    (makeblock 0 (global Assert_failure/28!)
                      [0: "lib/sentenceLexer.mll" 197 23])))
               with (23) (seq (apply check_no_parameter/1491 0) 0))
            flavor/1496 =[int]
              (catch
                (stringswitch flavor/1488
                 case "loc": 2
                 case "ofs": 0
                 case "pos": 1
                 default: (exit 22))
               with (22)
                (raise
                  (makeblock 0 (global Assert_failure/28!)
                    [0: "lib/sentenceLexer.mll" 204 17]))))
           (catch
             (catch
               (if (isint i/1489)
                 (if (isint x/1490)
                   (let
                     (check/3457 =a
                        (field_imm 5 (global Gbnf_parser__SentenceLexer!))
                      subject/3456 = 1)
                     (exit 19 subject/3456 check/3457))
                   (exit 18))
                 (if (isint x/1490) (exit 18)
                   (let (*match*/3455 =a (field_imm 0 x/1490))
                     (raise
                       (makeblock 0 (global Assert_failure/28!)
                         [0: "lib/sentenceLexer.mll" 223 8])))))
              with (18)
               (raise
                 (makeblock 0 (global Match_failure/18!)
                   [0: "lib/sentenceLexer.mll" 207 4])))
            with (19 subject/1497 check/1498)
             (let
               (transform/1499 =
                  (function ofs1/1501[int] content/1502 : int
                    (let
                      (pos/1503 =
                         (apply
                           (field_imm 11 (global Gbnf_parser__Positions!))
                           pos/1486)
                       ofs/1504 =[int] (- (field_int 3 pos/1503) ofs1/1501))
                      (seq
                        (apply
                          (field_imm 4 (global Gbnf_parser__SentenceLexer!))
                          content/1502 ofs/1504 '$' '_')
                        (let (ofslpar/1505 =[int] (+ ofs/1504 ofslpar/1494))
                          (catch
                            (if (isint i/1489)
                              (if (isint x/1490) (exit 17)
                                (let (x/1506 =a (field_imm 0 x/1490))
                                  (seq
                                    (apply
                                      (field_imm 4
                                        (global Gbnf_parser__SentenceLexer!))
                                      content/1502 ofslpar/1505 '(' '_')
                                    (apply
                                      (field_imm 4
                                        (global Gbnf_parser__SentenceLexer!))
                                      content/1502
                                      (+ (+ ofslpar/1505 1)
                                        (string.length x/1506))
                                      ')' '_'))))
                              (if (isint x/1490)
                                (let (i/1507 =a (field_imm 0 i/1489))
                                  (seq
                                    (apply
                                      (field_imm 4
                                        (global Gbnf_parser__SentenceLexer!))
                                      content/1502 ofslpar/1505 '(' '_')
                                    (apply
                                      (field_imm 4
                                        (global Gbnf_parser__SentenceLexer!))
                                      content/1502 (+ ofslpar/1505 1) '$'
                                      '_')
                                    (apply
                                      (field_imm 4
                                        (global Gbnf_parser__SentenceLexer!))
                                      content/1502
                                      (+ (+ ofslpar/1505 2)
                                        (string.length i/1507))
                                      ')' '_')))
                                (exit 17)))
                           with (17) 0)))))
                keyword/1508 =
                  (makeblock 0
                    (makeblock 0 (*,int,int) subject/1497 where/1495
                      flavor/1496))
                oid/1509 = 0)
               (makeblock 0 pos/1486 check/1498 transform/1499 keyword/1508
                 oid/1509))))))
    (setfield_ptr(root-init) 7 (global Gbnf_parser__SentenceLexer!)
      position/1485))
  (let
    (no_monsters/1510 =
       (function monsters/1512 : int
         (if (isint monsters/1512) 0
           (let
             (*match*/3458 =a (field_imm 1 monsters/1512)
              monster/1513 =a (field_imm 0 monsters/1512))
             (apply (field_imm 6 (global Gbnf_parser__Error!))
               (makeblock 0 (field_imm 0 monster/1513) 0)
               [0:
                [11: "a Menhir keyword cannot be used in an OCaml header." 0]
                "a Menhir keyword cannot be used in an OCaml header."])))))
    (setfield_ptr(root-init) 8 (global Gbnf_parser__SentenceLexer!)
      no_monsters/1510))
  (let
    (gather_oid/1514 =
       (function xs/1516 oid/1517
         (if (isint oid/1517) xs/1516
           (let (x/1518 =a (field_imm 0 oid/1517))
             (apply (field_imm 1 (global Gbnf_parser__StringSet!)) x/1518
               xs/1516)))))
    (setfield_ptr(root-init) 9 (global Gbnf_parser__SentenceLexer!)
      gather_oid/1514))
  (let
    (gather_oids/1705 =
       (function oids/1707
         (apply (field_imm 16 (global Stdlib__Array!))
           (field_imm 9 (global Gbnf_parser__SentenceLexer!))
           (field_imm 0 (global Gbnf_parser__StringSet!)) oids/1707)))
    (setfield_ptr(root-init) 10 (global Gbnf_parser__SentenceLexer!)
      gather_oids/1705))
  (let
    (gather_monsters/1756 =
       (function monsters/1758
         (apply (field_imm 25 (global Stdlib__List!))
           (function xs/1825 monster/1826
             (apply (field_imm 9 (global Gbnf_parser__SentenceLexer!))
               xs/1825 (field_imm 4 monster/1826)))
           (field_imm 0 (global Gbnf_parser__StringSet!)) monsters/1758)))
    (setfield_ptr(root-init) 11 (global Gbnf_parser__SentenceLexer!)
      gather_monsters/1756))
  (let
    (mk_stretch/1827 =
       (function pos1/1829 pos2/1830 parenthesize/1831[int] monsters/1832
         (let
           (raw_content/1833 =
              (apply (field_imm 12 (global Gbnf_parser__InputFile!))
                (makeblock 0 pos1/1829 pos2/1830))
            content/1848 =
              (if (isint monsters/1832) raw_content/1833
                (let
                  (*match*/3462 =a (field_imm 1 monsters/1832)
                   *match*/3461 =a (field_imm 0 monsters/1832)
                   content/1849 =
                     (apply (field_imm 4 (global Stdlib__Bytes!))
                       raw_content/1833))
                  (seq
                    (apply (field_imm 17 (global Stdlib__List!))
                      (function monster/1850 : int
                        (apply (field_imm 2 monster/1850)
                          (field_int 3 pos1/1829) content/1849))
                      monsters/1832)
                    (apply (field_imm 43 (global Stdlib__Bytes!))
                      content/1849))))
            content/1851 =
              (if parenthesize/1831
                (apply (field_imm 27 (global Stdlib!))
                  (apply (field_imm 0 (global Stdlib__String!))
                    (- (- (field_int 3 pos1/1829) (field_int 2 pos1/1829)) 1)
                    ' ')
                  (apply (field_imm 27 (global Stdlib!)) "("
                    (apply (field_imm 27 (global Stdlib!)) content/1848 ")")))
                (apply (field_imm 27 (global Stdlib!))
                  (apply (field_imm 0 (global Stdlib__String!))
                    (- (field_int 3 pos1/1829) (field_int 2 pos1/1829)) ' ')
                  content/1848)))
           (makeblock 0 (*,int,int,*,*,*)
             (apply (field_imm 7 (global Gbnf_parser__InputFile!)) 0)
             (field_int 1 pos1/1829)
             (- (field_int 1 pos2/1830) (field_int 1 pos1/1829))
             raw_content/1833 content/1851
             (apply (field_imm 23 (global Gbnf_parser__Misc!))
               (function monster/1895 (field_imm 3 monster/1895))
               monsters/1832)))))
    (setfield_ptr(root-init) 12 (global Gbnf_parser__SentenceLexer!)
      mk_stretch/1827))
  (let
    (stretch_of_id/1896 =
       (function id/1898
         (let
           (*match*/3470 =
              (apply (field_imm 2 (global Gbnf_parser__Positions!)) id/1898)
            pos/1900 =a (field_imm 1 *match*/3470)
            raw_content/1899 =a (field_imm 0 *match*/3470)
            pos1/1936 =
              (apply (field_imm 11 (global Gbnf_parser__Positions!))
                pos/1900)
            pos2/1937 =
              (apply (field_imm 12 (global Gbnf_parser__Positions!))
                pos/1900)
            filename/1938 =
              (apply (field_imm 13 (global Gbnf_parser__Positions!))
                pos/1900))
           (seq
             (if (!= pos1/1936 (field_imm 0 (global Stdlib__Lexing!))) 0
               (raise
                 (makeblock 0 (global Assert_failure/28!)
                   [0: "lib/sentenceLexer.mll" 331 2])))
             (let
               (padding/1939 =[int]
                  (- (field_int 3 pos1/1936) (field_int 2 pos1/1936))
                content/1940 =
                  (apply (field_imm 27 (global Stdlib!))
                    (apply (field_imm 0 (global Stdlib__String!))
                      padding/1939 ' ')
                    raw_content/1899))
               (makeblock 0 (*,int,int,*,*,*) filename/1938
                 (field_int 1 pos1/1936)
                 (- (field_int 1 pos2/1937) (field_int 1 pos1/1936))
                 raw_content/1899 content/1940 0))))))
    (setfield_ptr(root-init) 13 (global Gbnf_parser__SentenceLexer!)
      stretch_of_id/1896))
  (let
    (table/1941 =
       (function words/1943
         (let
           (table/1944 =
              (apply (field_imm 0 (global Stdlib__Hashtbl!)) 0 149))
           (seq
             (apply (field_imm 17 (global Stdlib__List!))
               (function word/2025 : int
                 (apply (field_imm 4 (global Stdlib__Hashtbl!)) table/1944
                   word/2025 0))
               words/1943)
             table/1944))))
    (setfield_ptr(root-init) 14 (global Gbnf_parser__SentenceLexer!)
      table/1941))
  (let
    (reserved/2026 =
       (apply (field_imm 14 (global Gbnf_parser__SentenceLexer!))
         [0:
          "and"
          [0:
           "as"
           [0:
            "assert"
            [0:
             "begin"
             [0:
              "class"
              [0:
               "constraint"
               [0:
                "do"
                [0:
                 "done"
                 [0:
                  "downto"
                  [0:
                   "else"
                   [0:
                    "end"
                    [0:
                     "exception"
                     [0:
                      "external"
                      [0:
                       "false"
                       [0:
                        "for"
                        [0:
                         "fun"
                         [0:
                          "function"
                          [0:
                           "functor"
                           [0:
                            "if"
                            [0:
                             "in"
                             [0:
                              "include"
                              [0:
                               "inherit"
                               [0:
                                "initializer"
                                [0:
                                 "lazy"
                                 [0:
                                  "let"
                                  [0:
                                   "match"
                                   [0:
                                    "method"
                                    [0:
                                     "module"
                                     [0:
                                      "mutable"
                                      [0:
                                       "new"
                                       [0:
                                        "object"
                                        [0:
                                         "of"
                                         [0:
                                          "open"
                                          [0:
                                           "or"
                                           [0:
                                            "parser"
                                            [0:
                                             "private"
                                             [0:
                                              "rec"
                                              [0:
                                               "sig"
                                               [0:
                                                "struct"
                                                [0:
                                                 "then"
                                                 [0:
                                                  "to"
                                                  [0:
                                                   "true"
                                                   [0:
                                                    "try"
                                                    [0:
                                                     "type"
                                                     [0:
                                                      "val"
                                                      [0:
                                                       "virtual"
                                                       [0:
                                                        "when"
                                                        [0:
                                                         "while"
                                                         [0:
                                                          "with"
                                                          [0:
                                                           "mod"
                                                           [0:
                                                            "land"
                                                            [0:
                                                             "lor"
                                                             [0:
                                                              "lxor"
                                                              [0:
                                                               "lsl"
                                                               [0:
                                                                "lsr"
                                                                [0: "asr" 0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]))
    (setfield_ptr(root-init) 15 (global Gbnf_parser__SentenceLexer!)
      reserved/2026))
  (let
    (char_for_backslash/2027 =
       (function c/2029[int] : int
         (catch
           (if (>= c/2029 110)
             (if (>= c/2029 117) (exit 39)
               (let (switcher/3471 =a (-110+ c/2029))
                 (switch* switcher/3471
                  case int 0: '\n'
                  case int 1: (exit 39)
                  case int 2: (exit 39)
                  case int 3: (exit 39)
                  case int 4: '\r'
                  case int 5: (exit 39)
                  case int 6: '\t')))
             (if (!= c/2029 98) (exit 39) '\b'))
          with (39) c/2029)))
    (setfield_ptr(root-init) 16 (global Gbnf_parser__SentenceLexer!)
      char_for_backslash/2027))
  (let
    (__ocaml_lex_tables/2030 =
       [0:
        "\000\000\239\255\240\255'\000'\000(\000\243\255\004\000\244\255\231\000\007\000\247\255\186\001\249\255\250\255\251\255\252\255\253\255\254\255\255\255\005\000\246\255B\000+\000,\000\242\255C\000\232\000\251\255\252\255-\000\253\255\154\002\255\255\254\255\006\000\252\255\253\255\254\255\002\000\255\255\016\000\253\255\254\255\255\255"
        "\n\000\255\255\255\255\014\000\016\000\012\000\255\255\016\000\255\255\n\000\016\000\255\255\007\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\012\000\r\000\255\255\255\255\255\255\255\255\255\255\002\000\255\255\004\000\255\255\255\255\255\255\255\255\255\255\255\255\003\000\255\255\255\255\255\255\255\255\255\255"
        "\t\000\000\000\000\000\255\255\026\000\255\255\000\000\255\255\000\000\255\255\255\255\000\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\022\000\255\255\255\255\000\000\026\000\028\000\000\000\000\000\255\255\000\000\255\255\000\000\000\000$\000\000\000\000\000\000\000\255\255\000\000*\000\000\000\000\000\000\000"
        "\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\003\000\006\000\001\000\001\000\005\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\003\000\001\000\b\000\004\000\001\000\001\000\001\000\001\000\019\000\018\000\014\000\r\000\001\000\012\000\001\000\007\000\003\000\025\000\006\000\022\000\024\000\006\000\025\000\031\000+\000,\000\n\000\001\000\001\000\001\000\001\000\015\000\001\000\020\000\021\000\000\000\000\000\000\000\000\000\003\000\000\000\000\000\000\000\000\000\006\000\025\000\000\000\023\000\024\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\000\001\000\001\000\011\000(\000\001\000%\000'\000&\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\016\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\000\000\000\000\000\030\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000\000\000!\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000\000\000\t\000\000\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\255\255\255\255 \000\000\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\029\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\000\000\000\000\000\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t
nt\000\255\255\255\255\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\255\255\255\255\255\255\255\255\255\255\255\255\004\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\022\000\026\000\027\000\255\255\t\000\255\255\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\tt\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\255\255\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\255\255\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\012\000\027\000\255\255\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\255\255\255\255\255\255\255\255\012\000\255\255\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\255\255\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\255\255\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000 \000\255\255 \000\255\255\255\255\255\255 \000 \000\255\255 \000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255 \000\255\255\255\255\255\255\255\255\255\255 \000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255 \000\255\255 \000\255\255\255\255\255\255\255\255\255\255\255\255\255\255 \000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255"
        "" "" "" "" "" ""])
    (setfield_ptr(root-init) 17 (global Gbnf_parser__SentenceLexer!)
      __ocaml_lex_tables/2030))
  (letrec
    (main/2031
       (function lexbuf/2039 (apply __ocaml_lex_main_rec/2032 lexbuf/2039 0))
      __ocaml_lex_main_rec/2032
        (function lexbuf/2040 __ocaml_lex_state/2041[int]
          (let
            (__ocaml_lex_state/2042 =
               (apply (field_imm 19 (global Stdlib__Lexing!))
                 (field_imm 17 (global Gbnf_parser__SentenceLexer!))
                 __ocaml_lex_state/2041 lexbuf/2040))
            (catch
              (catch
                (if (isout 16 __ocaml_lex_state/2042) (exit 40)
                  (switch* __ocaml_lex_state/2042
                   case int 0:
                    (seq
                      (apply (field_imm 45 (global Stdlib!))
                        (apply (field_imm 6 (global Batteries!))
                          (apply (field_imm 7 (global Stdlib__Lexing!))
                            lexbuf/2040)))
                      5)
                   case int 1: 1
                   case int 2:
                    (seq
                      (apply (field_imm 45 (global Stdlib!))
                        (apply (field_imm 6 (global Batteries!))
                          (apply (field_imm 7 (global Stdlib__Lexing!))
                            lexbuf/2040)))
                      (let
                        (buffer/2233 =
                           (apply (field_imm 0 (global Stdlib__Buffer!)) 256)
                         openingpos/2316 =
                           (apply (field_imm 11 (global Stdlib__Lexing!))
                             lexbuf/2040)
                         content/2317 =
                           (apply charclass/2035 openingpos/2316 buffer/2233
                             lexbuf/2040)
                         id/2318 =
                           (apply (field_imm 3 (global Stdlib__Printf!))
                             [0: [12: '"' [2: 0 [12: '"' 0]]] "\"%s\""]
                             content/2317)
                         pos/2332 =
                           (apply
                             (field_imm 18 (global Gbnf_parser__Positions!))
                             (makeblock 0 openingpos/2316
                               (field_mut 11 lexbuf/2040))))
                        (makeblock 1
                          (apply
                            (field_imm 3 (global Gbnf_parser__Positions!))
                            pos/2332 id/2318))))
                   case int 3: 10
                   case int 4: 2
                   case int 5: 0
                   case int 6: 3
                   case int 7: 7
                   case int 8: 9
                   case int 9:
                    (let
                      (curr/2333 = (field_mut 11 lexbuf/2040)
                       line/2334 =[int] (field_int 1 curr/2333)
                       cnum/2335 =[int]
                         (- (field_int 3 curr/2333) (field_int 2 curr/2333))
                       tok/2336 =
                         (apply (field_imm 7 (global Stdlib__Lexing!))
                           lexbuf/2040))
                      (seq
                        (apply (field_imm 45 (global Stdlib!))
                          (apply (field_imm 6 (global Batteries!))
                            (makeblock 0 (int,int,*) line/2334 cnum/2335
                              tok/2336)))
                        8))
                   case int 10:
                    (let
                      (id/2337 =
                         (apply (field_imm 15 (global Stdlib__Lexing!))
                           lexbuf/2040 (field_int 4 lexbuf/2040)
                           (field_int 5 lexbuf/2040)))
                      (makeblock 3
                        (apply (field_imm 3 (global Gbnf_parser__Positions!))
                          (apply
                            (field_imm 23 (global Gbnf_parser__Positions!))
                            lexbuf/2040)
                          id/2337)))
                   case int 11:
                    (let
                      (buffer/2338 =
                         (apply (field_imm 0 (global Stdlib__Buffer!)) 16)
                       openingpos/2339 =
                         (apply (field_imm 11 (global Stdlib__Lexing!))
                           lexbuf/2040)
                       content/2340 =
                         (apply record_string/2033 openingpos/2339
                           buffer/2338 lexbuf/2040)
                       id/2341 =
                         (apply (field_imm 3 (global Stdlib__Printf!))
                           [0: [12: '"' [2: 0 [12: '"' 0]]] "\"%s\""]
                           content/2340)
                       pos/2342 =
                         (apply
                           (field_imm 18 (global Gbnf_parser__Positions!))
                           (makeblock 0 openingpos/2339
                             (field_mut 11 lexbuf/2040))))
                      (makeblock 2
                        (apply (field_imm 3 (global Gbnf_parser__Positions!))
                          pos/2342 id/2341)))
                   case int 12: (exit 41)
                   case int 13: (exit 41)
                   case int 14: (apply main/2031 lexbuf/2040)
                   case int 15: 6
                   case int 16:
                    (apply (field_imm 1 (global Gbnf_parser__SentenceLexer!))
                      lexbuf/2040
                      [0:
                       [11: "unexpected character(s)." 0]
                       "unexpected character(s)."])))
               with (41) 4)
             with (40)
              (seq (apply (field_imm 0 lexbuf/2040) lexbuf/2040)
                (apply __ocaml_lex_main_rec/2032 lexbuf/2040
                  __ocaml_lex_state/2042)))))
      record_string/2033
        (function openingpos/2343 buffer/2344 lexbuf/2345
          (apply __ocaml_lex_record_string_rec/2034 openingpos/2343
            buffer/2344 lexbuf/2345 27))
      __ocaml_lex_record_string_rec/2034
        (function openingpos/2346 buffer/2347 lexbuf/2348
          __ocaml_lex_state/2349[int]
          (let
            (__ocaml_lex_state/2350 =
               (apply (field_imm 19 (global Stdlib__Lexing!))
                 (field_imm 17 (global Gbnf_parser__SentenceLexer!))
                 __ocaml_lex_state/2349 lexbuf/2348))
            (catch
              (if (isout 4 __ocaml_lex_state/2350) (exit 42)
                (switch* __ocaml_lex_state/2350
                 case int 0:
                  (apply (field_imm 1 (global Stdlib__Buffer!)) buffer/2347)
                 case int 1:
                  (let
                    (sequence/2351 =
                       (apply (field_imm 15 (global Stdlib__Lexing!))
                         lexbuf/2348 (field_int 4 lexbuf/2348)
                         (+ (field_int 4 lexbuf/2348) 2)))
                    (seq
                      (apply (field_imm 15 (global Stdlib__Buffer!))
                        buffer/2347 sequence/2351)
                      (apply (field_imm 45 (global Stdlib!))
                        (apply (field_imm 6 (global Batteries!))
                          (makeblock 0 "DEBUG:rs" sequence/2351)))
                      (apply record_string/2033 openingpos/2346 buffer/2347
                        lexbuf/2348)))
                 case int 2:
                  (apply (field_imm 1 (global Gbnf_parser__SentenceLexer!))
                    lexbuf/2348
                    [0:
                     [11: "illegal newline in string." 0]
                     "illegal newline in string."])
                 case int 3:
                  (apply (field_imm 0 (global Gbnf_parser__SentenceLexer!))
                    openingpos/2346
                    [0:
                     [11: "unterminated string." 0] "unterminated string."])
                 case int 4:
                  (let
                    (c/2352 =[int]
                       (apply (field_imm 17 (global Stdlib__Lexing!))
                         lexbuf/2348 (field_int 4 lexbuf/2348)))
                    (seq
                      (apply (field_imm 11 (global Stdlib__Buffer!))
                        buffer/2347 c/2352)
                      (apply (field_imm 45 (global Stdlib!))
                        (apply (field_imm 6 (global Batteries!))
                          (makeblock 0 (*,int) "DEBUG2:rs" c/2352)))
                      (apply record_string/2033 openingpos/2346 buffer/2347
                        lexbuf/2348)))))
             with (42)
              (seq (apply (field_imm 0 lexbuf/2348) lexbuf/2348)
                (apply __ocaml_lex_record_string_rec/2034 openingpos/2346
                  buffer/2347 lexbuf/2348 __ocaml_lex_state/2350)))))
      charclass/2035
        (function openingpos/2353 buffer/2354 lexbuf/2355
          (apply __ocaml_lex_charclass_rec/2036 openingpos/2353 buffer/2354
            lexbuf/2355 35))
      __ocaml_lex_charclass_rec/2036
        (function openingpos/2356 buffer/2357 lexbuf/2358
          __ocaml_lex_state/2359[int]
          (let
            (__ocaml_lex_state/2360 =
               (apply (field_imm 19 (global Stdlib__Lexing!))
                 (field_imm 17 (global Gbnf_parser__SentenceLexer!))
                 __ocaml_lex_state/2359 lexbuf/2358))
            (catch
              (catch
                (if (not (isout 3 __ocaml_lex_state/2360))
                  (if (!= __ocaml_lex_state/2360 1) (exit 44)
                    (seq
                      (apply (field_imm 45 (global Stdlib!))
                        (apply (field_imm 6 (global Batteries!))
                          (apply (field_imm 7 (global Stdlib__Lexing!))
                            lexbuf/2358)))
                      "TODO"))
                  (exit 43))
               with (44)
                (seq
                  (apply (field_imm 45 (global Stdlib!))
                    (apply (field_imm 6 (global Batteries!))
                      (apply (field_imm 7 (global Stdlib__Lexing!))
                        lexbuf/2358)))
                  (apply charclass/2035 openingpos/2356 buffer/2357
                    lexbuf/2358)))
             with (43)
              (seq (apply (field_imm 0 lexbuf/2358) lexbuf/2358)
                (apply __ocaml_lex_charclass_rec/2036 openingpos/2356
                  buffer/2357 lexbuf/2358 __ocaml_lex_state/2360)))))
      subgroup/2037
        (function openingpos/2361 buffer/2362 lexbuf/2363
          (apply __ocaml_lex_subgroup_rec/2038 openingpos/2361 buffer/2362
            lexbuf/2363 41))
      __ocaml_lex_subgroup_rec/2038
        (function openingpos/2364 buffer/2365 lexbuf/2366
          __ocaml_lex_state/2367[int]
          (let
            (__ocaml_lex_state/2368 =
               (apply (field_imm 19 (global Stdlib__Lexing!))
                 (field_imm 17 (global Gbnf_parser__SentenceLexer!))
                 __ocaml_lex_state/2367 lexbuf/2366))
            (catch
              (catch
                (if (> __ocaml_lex_state/2368 0)
                  (if (>= __ocaml_lex_state/2368 3) (exit 45) (exit 46))
                  (if (>= __ocaml_lex_state/2368 0)
                    (seq
                      (apply (field_imm 45 (global Stdlib!))
                        (apply (field_imm 6 (global Batteries!))
                          (apply (field_imm 7 (global Stdlib__Lexing!))
                            lexbuf/2366)))
                      "TODO")
                    (exit 45)))
               with (46)
                (seq
                  (apply (field_imm 45 (global Stdlib!))
                    (apply (field_imm 6 (global Batteries!))
                      (apply (field_imm 7 (global Stdlib__Lexing!))
                        lexbuf/2366)))
                  (apply subgroup/2037 openingpos/2364 buffer/2365
                    lexbuf/2366)))
             with (45)
              (seq (apply (field_imm 0 lexbuf/2366) lexbuf/2366)
                (apply __ocaml_lex_subgroup_rec/2038 openingpos/2364
                  buffer/2365 lexbuf/2366 __ocaml_lex_state/2368))))))
    (seq
      (setfield_ptr(root-init) 18 (global Gbnf_parser__SentenceLexer!)
        main/2031)
      (setfield_ptr(root-init) 19 (global Gbnf_parser__SentenceLexer!)
        __ocaml_lex_main_rec/2032)
      (setfield_ptr(root-init) 20 (global Gbnf_parser__SentenceLexer!)
        record_string/2033)
      (setfield_ptr(root-init) 21 (global Gbnf_parser__SentenceLexer!)
        __ocaml_lex_record_string_rec/2034)
      (setfield_ptr(root-init) 22 (global Gbnf_parser__SentenceLexer!)
        charclass/2035)
      (setfield_ptr(root-init) 23 (global Gbnf_parser__SentenceLexer!)
        __ocaml_lex_charclass_rec/2036)
      (setfield_ptr(root-init) 24 (global Gbnf_parser__SentenceLexer!)
        subgroup/2037)
      (setfield_ptr(root-init) 25 (global Gbnf_parser__SentenceLexer!)
        __ocaml_lex_subgroup_rec/2038)))
  (let
    (*match*/3474 =
       (apply (field_imm 5 (global Ppx_inline_test_lib!)) "gbnf_parser"))
    0)
  (let
    (*match*/3476 =
       (apply (field_imm 1 (field_imm 5 (global Expect_test_collector!))) 0))
    0)
  (let
    (*match*/3478 =
       (apply
         (field_imm 1
           (field_imm 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
         0))
    0)
  (let
    (*match*/3480 =
       (apply (field_imm 4 (global Ppx_module_timer_runtime!))
         #"Gbnf_parser__SentenceLexer"))
    0)
  0)
(seq
  (let
    (*match*/3441 =
       (apply (field_imm 3 (global Ppx_module_timer_runtime!))
         #"Gbnf_parser__SentenceLexer"))
    0)
  (let
    (*match*/3443 =
       (apply
         (field_imm 0
           (field_imm 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
         "gbnf_parser"))
    0)
  (let
    (*match*/3445 =
       (apply (field_imm 0 (field_imm 5 (global Expect_test_collector!)))
         "lib/sentenceLexer.mll"))
    0)
  (let
    (*match*/3447 =
       (apply (field_imm 4 (global Ppx_inline_test_lib!)) "gbnf_parser"
         "sentenceLexer.ml"))
    0)
  (let
    (error1/1205 =
       (function pos/1207
         (apply (field_imm 6 (global Gbnf_parser__Error!))
           (apply (field_imm 29 (global Gbnf_parser__Positions!)) pos/1207))))
    (setfield_ptr(root-init) 0 (global Gbnf_parser__SentenceLexer!)
      error1/1205))
  (let
    (error2/1247 =
       (function lexbuf/1249
         (apply (field_imm 6 (global Gbnf_parser__Error!))
           (apply (field_imm 30 (global Gbnf_parser__Positions!))
             lexbuf/1249))))
    (setfield_ptr(root-init) 1 (global Gbnf_parser__SentenceLexer!)
      error2/1247))
  (let
    (int_of_string/1250 =
       (function pos/1251 i/1252 : int
         (try (caml_int_of_string i/1252) with exn/3448
           (if (== (field_imm 0 exn/3448) (field_imm 6 (global Stdlib!)))
             (apply (field_imm 0 (global Gbnf_parser__SentenceLexer!))
               pos/1251
               [0:
                [11: "unreasonably large integer." 0]
                "unreasonably large integer."])
             (reraise exn/3448)))))
    (setfield_ptr(root-init) 2 (global Gbnf_parser__SentenceLexer!)
      int_of_string/1250))
  (let
    (savestart/1276 =
       (function lexbuf/1278 f/1279
         (let
           (startp/1280 = (field_mut 10 lexbuf/1278)
            token/1281 = (apply f/1279 lexbuf/1278))
           (seq (setfield_ptr 10 lexbuf/1278 startp/1280) token/1281))))
    (setfield_ptr(root-init) 3 (global Gbnf_parser__SentenceLexer!)
      savestart/1276))
  (let
    (overwrite/1282 =
       (function content/1284 offset/1285[int] c1/1286[int] c2/1287[int]
         : int
         (seq
           (if (== (bytes.get content/1284 offset/1285) c1/1286) 0
             (raise
               (makeblock 0 (global Assert_failure/28!)
                 [0: "lib/sentenceLexer.mll" 61 2])))
           (bytes.set content/1284 offset/1285 c2/1287))))
    (setfield_ptr(root-init) 4 (global Gbnf_parser__SentenceLexer!)
      overwrite/1282))
  (let (none/1401 = (function param/1403 : int 0))
    (setfield_ptr(root-init) 5 (global Gbnf_parser__SentenceLexer!)
      none/1401))
  (let
    (syntaxerror/1404 =
       (function pos/1406
         (let
           (check/1407 = (field_imm 5 (global Gbnf_parser__SentenceLexer!))
            transform/1408 =
              (function ofs1/1411[int] content/1412 : int
                (let
                  (pos/1413 =
                     (apply (field_imm 11 (global Gbnf_parser__Positions!))
                       pos/1406)
                   ofs/1414 =[int] (- (field_int 3 pos/1413) ofs1/1411)
                   source/1415 = "(raise _eRR)")
                  (apply (field_imm 11 (global Stdlib__Bytes!)) source/1415 0
                    content/1412 ofs/1414 (string.length source/1415))))
            keyword/1409 = [0: 0]
            oid/1410 = 0)
           (makeblock 0 pos/1406 check/1407 transform/1408 keyword/1409
             oid/1410))))
    (setfield_ptr(root-init) 6 (global Gbnf_parser__SentenceLexer!)
      syntaxerror/1404))
  (let
    (position/1485 =
       (function pos/1486 where/1487 flavor/1488 i/1489 x/1490
         (let
           (ofslpar/1494 =[int] (+ (+ 1 (string.length where/1487)) 3)
            where/1495 =[int]
              (catch
                (catch
                  (catch
                    (stringswitch where/1487
                     case "": (exit 25)
                     case "end": 2
                     case "s": (exit 23)
                     case "start": (exit 25)
                     case "symbolstart": (exit 23)
                     default: (exit 24))
                   with (25) 1)
                 with (24)
                  (raise
                    (makeblock 0 (global Assert_failure/28!)
                      [0: "lib/sentenceLexer.mll" 197 23])))
               with (23)
                (seq
                  (let (param/3483 =[int] 0)
                    (if (|| (!= i/1489 0) (!= x/1490 0))
                      (apply (field_imm 6 (global Gbnf_parser__Error!))
                        (makeblock 0 pos/1486 0)
                        [0:
                         [12:
                          '$'
                          [2: 0 [2: 0 [11: " does not take a parameter." 0]]]]
                         "$%s%s does not take a parameter."]
                        where/1487 flavor/1488)
                      0))
                  0))
            flavor/1496 =[int]
              (catch
                (stringswitch flavor/1488
                 case "loc": 2
                 case "ofs": 0
                 case "pos": 1
                 default: (exit 22))
               with (22)
                (raise
                  (makeblock 0 (global Assert_failure/28!)
                    [0: "lib/sentenceLexer.mll" 204 17]))))
           (catch
             (if (isint i/1489)
               (if (isint x/1490)
                 (let
                   (subject/3456 = 1
                    transform/1499 =
                      (function ofs1/1501[int] content/1502 : int
                        (let
                          (pos/1503 =
                             (apply
                               (field_imm 11
                                 (global Gbnf_parser__Positions!))
                               pos/1486)
                           ofs/1504 =[int]
                             (- (field_int 3 pos/1503) ofs1/1501))
                          (seq
                            (apply
                              (field_imm 4
                                (global Gbnf_parser__SentenceLexer!))
                              content/1502 ofs/1504 '$' '_')
                            (let
                              (ofslpar/1505 =[int] (+ ofs/1504 ofslpar/1494))
                              (catch
                                (if (isint i/1489)
                                  (if (isint x/1490) (exit 17)
                                    (seq
                                      (apply
                                        (field_imm 4
                                          (global Gbnf_parser__SentenceLexer!))
                                        content/1502 ofslpar/1505 '(' '_')
                                      (apply
                                        (field_imm 4
                                          (global Gbnf_parser__SentenceLexer!))
                                        content/1502
                                        (+ (+ ofslpar/1505 1)
                                          (string.length
                                            (field_imm 0 x/1490)))
                                        ')' '_')))
                                  (if (isint x/1490)
                                    (seq
                                      (apply
                                        (field_imm 4
                                          (global Gbnf_parser__SentenceLexer!))
                                        content/1502 ofslpar/1505 '(' '_')
                                      (apply
                                        (field_imm 4
                                          (global Gbnf_parser__SentenceLexer!))
                                        content/1502 (+ ofslpar/1505 1) '$'
                                        '_')
                                      (apply
                                        (field_imm 4
                                          (global Gbnf_parser__SentenceLexer!))
                                        content/1502
                                        (+ (+ ofslpar/1505 2)
                                          (string.length
                                            (field_imm 0 i/1489)))
                                        ')' '_'))
                                    (exit 17)))
                               with (17) 0)))))
                    keyword/1508 =
                      (makeblock 0
                        (makeblock 0 (*,int,int) subject/3456 where/1495
                          flavor/1496))
                    oid/1509 = 0)
                   (makeblock 0 pos/1486
                     (field_imm 5 (global Gbnf_parser__SentenceLexer!))
                     transform/1499 keyword/1508 oid/1509))
                 (exit 18))
               (if (isint x/1490) (exit 18)
                 (raise
                   (makeblock 0 (global Assert_failure/28!)
                     [0: "lib/sentenceLexer.mll" 223 8]))))
            with (18)
             (raise
               (makeblock 0 (global Match_failure/18!)
                 [0: "lib/sentenceLexer.mll" 207 4]))))))
    (setfield_ptr(root-init) 7 (global Gbnf_parser__SentenceLexer!)
      position/1485))
  (let
    (no_monsters/1510 =
       (function monsters/1512 : int
         (if (isint monsters/1512) 0
           (apply (field_imm 6 (global Gbnf_parser__Error!))
             (makeblock 0 (field_imm 0 (field_imm 0 monsters/1512)) 0)
             [0:
              [11: "a Menhir keyword cannot be used in an OCaml header." 0]
              "a Menhir keyword cannot be used in an OCaml header."]))))
    (setfield_ptr(root-init) 8 (global Gbnf_parser__SentenceLexer!)
      no_monsters/1510))
  (let
    (gather_oid/1514 =
       (function xs/1516 oid/1517
         (if (isint oid/1517) xs/1516
           (apply (field_imm 1 (global Gbnf_parser__StringSet!))
             (field_imm 0 oid/1517) xs/1516))))
    (setfield_ptr(root-init) 9 (global Gbnf_parser__SentenceLexer!)
      gather_oid/1514))
  (let
    (gather_oids/1705 =
       (function oids/1707
         (apply (field_imm 16 (global Stdlib__Array!))
           (field_imm 9 (global Gbnf_parser__SentenceLexer!))
           (field_imm 0 (global Gbnf_parser__StringSet!)) oids/1707)))
    (setfield_ptr(root-init) 10 (global Gbnf_parser__SentenceLexer!)
      gather_oids/1705))
  (let
    (gather_monsters/1756 =
       (function monsters/1758
         (apply (field_imm 25 (global Stdlib__List!))
           (function xs/1825 monster/1826
             (apply (field_imm 9 (global Gbnf_parser__SentenceLexer!))
               xs/1825 (field_imm 4 monster/1826)))
           (field_imm 0 (global Gbnf_parser__StringSet!)) monsters/1758)))
    (setfield_ptr(root-init) 11 (global Gbnf_parser__SentenceLexer!)
      gather_monsters/1756))
  (let
    (mk_stretch/1827 =
       (function pos1/1829 pos2/1830 parenthesize/1831[int] monsters/1832
         (let
           (raw_content/1833 =
              (apply (field_imm 12 (global Gbnf_parser__InputFile!))
                (makeblock 0 pos1/1829 pos2/1830))
            content/1848 =
              (if (isint monsters/1832) raw_content/1833
                (let
                  (content/1849 =
                     (apply (field_imm 4 (global Stdlib__Bytes!))
                       raw_content/1833))
                  (seq
                    (apply (field_imm 17 (global Stdlib__List!))
                      (function monster/1850 : int
                        (apply (field_imm 2 monster/1850)
                          (field_int 3 pos1/1829) content/1849))
                      monsters/1832)
                    (apply (field_imm 43 (global Stdlib__Bytes!))
                      content/1849))))
            content/1851 =
              (if parenthesize/1831
                (apply (field_imm 27 (global Stdlib!))
                  (apply (field_imm 0 (global Stdlib__String!))
                    (- (- (field_int 3 pos1/1829) (field_int 2 pos1/1829)) 1)
                    ' ')
                  (apply (field_imm 27 (global Stdlib!)) "("
                    (apply (field_imm 27 (global Stdlib!)) content/1848 ")")))
                (apply (field_imm 27 (global Stdlib!))
                  (apply (field_imm 0 (global Stdlib__String!))
                    (- (field_int 3 pos1/1829) (field_int 2 pos1/1829)) ' ')
                  content/1848)))
           (makeblock 0 (*,int,int,*,*,*)
             (apply (field_imm 7 (global Gbnf_parser__InputFile!)) 0)
             (field_int 1 pos1/1829)
             (- (field_int 1 pos2/1830) (field_int 1 pos1/1829))
             raw_content/1833 content/1851
             (apply (field_imm 23 (global Gbnf_parser__Misc!))
               (function monster/1895 (field_imm 3 monster/1895))
               monsters/1832)))))
    (setfield_ptr(root-init) 12 (global Gbnf_parser__SentenceLexer!)
      mk_stretch/1827))
  (let
    (stretch_of_id/1896 =
       (function id/1898
         (let
           (*match*/3470 =
              (apply (field_imm 2 (global Gbnf_parser__Positions!)) id/1898)
            pos/1900 =a (field_imm 1 *match*/3470)
            raw_content/1899 =a (field_imm 0 *match*/3470)
            pos1/1936 =
              (apply (field_imm 11 (global Gbnf_parser__Positions!))
                pos/1900)
            pos2/1937 =
              (apply (field_imm 12 (global Gbnf_parser__Positions!))
                pos/1900)
            filename/1938 =
              (apply (field_imm 13 (global Gbnf_parser__Positions!))
                pos/1900))
           (seq
             (if (!= pos1/1936 (field_imm 0 (global Stdlib__Lexing!))) 0
               (raise
                 (makeblock 0 (global Assert_failure/28!)
                   [0: "lib/sentenceLexer.mll" 331 2])))
             (let
               (padding/1939 =[int]
                  (- (field_int 3 pos1/1936) (field_int 2 pos1/1936))
                content/1940 =
                  (apply (field_imm 27 (global Stdlib!))
                    (apply (field_imm 0 (global Stdlib__String!))
                      padding/1939 ' ')
                    raw_content/1899))
               (makeblock 0 (*,int,int,*,*,*) filename/1938
                 (field_int 1 pos1/1936)
                 (- (field_int 1 pos2/1937) (field_int 1 pos1/1936))
                 raw_content/1899 content/1940 0))))))
    (setfield_ptr(root-init) 13 (global Gbnf_parser__SentenceLexer!)
      stretch_of_id/1896))
  (let
    (table/1941 =
       (function words/1943
         (let
           (table/1944 =
              (apply (field_imm 0 (global Stdlib__Hashtbl!)) 0 149))
           (seq
             (apply (field_imm 17 (global Stdlib__List!))
               (function word/2025 : int
                 (apply (field_imm 4 (global Stdlib__Hashtbl!)) table/1944
                   word/2025 0))
               words/1943)
             table/1944))))
    (setfield_ptr(root-init) 14 (global Gbnf_parser__SentenceLexer!)
      table/1941))
  (let
    (reserved/2026 =
       (apply (field_imm 14 (global Gbnf_parser__SentenceLexer!))
         [0:
          "and"
          [0:
           "as"
           [0:
            "assert"
            [0:
             "begin"
             [0:
              "class"
              [0:
               "constraint"
               [0:
                "do"
                [0:
                 "done"
                 [0:
                  "downto"
                  [0:
                   "else"
                   [0:
                    "end"
                    [0:
                     "exception"
                     [0:
                      "external"
                      [0:
                       "false"
                       [0:
                        "for"
                        [0:
                         "fun"
                         [0:
                          "function"
                          [0:
                           "functor"
                           [0:
                            "if"
                            [0:
                             "in"
                             [0:
                              "include"
                              [0:
                               "inherit"
                               [0:
                                "initializer"
                                [0:
                                 "lazy"
                                 [0:
                                  "let"
                                  [0:
                                   "match"
                                   [0:
                                    "method"
                                    [0:
                                     "module"
                                     [0:
                                      "mutable"
                                      [0:
                                       "new"
                                       [0:
                                        "object"
                                        [0:
                                         "of"
                                         [0:
                                          "open"
                                          [0:
                                           "or"
                                           [0:
                                            "parser"
                                            [0:
                                             "private"
                                             [0:
                                              "rec"
                                              [0:
                                               "sig"
                                               [0:
                                                "struct"
                                                [0:
                                                 "then"
                                                 [0:
                                                  "to"
                                                  [0:
                                                   "true"
                                                   [0:
                                                    "try"
                                                    [0:
                                                     "type"
                                                     [0:
                                                      "val"
                                                      [0:
                                                       "virtual"
                                                       [0:
                                                        "when"
                                                        [0:
                                                         "while"
                                                         [0:
                                                          "with"
                                                          [0:
                                                           "mod"
                                                           [0:
                                                            "land"
                                                            [0:
                                                             "lor"
                                                             [0:
                                                              "lxor"
                                                              [0:
                                                               "lsl"
                                                               [0:
                                                                "lsr"
                                                                [0: "asr" 0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]))
    (setfield_ptr(root-init) 15 (global Gbnf_parser__SentenceLexer!)
      reserved/2026))
  (let
    (char_for_backslash/2027 =
       (function c/2029[int] : int
         (catch
           (if (>= c/2029 110)
             (if (>= c/2029 117) (exit 39)
               (switch* (-110+ c/2029)
                case int 0: '\n'
                case int 1: (exit 39)
                case int 2: (exit 39)
                case int 3: (exit 39)
                case int 4: '\r'
                case int 5: (exit 39)
                case int 6: '\t'))
             (if (!= c/2029 98) (exit 39) '\b'))
          with (39) c/2029)))
    (setfield_ptr(root-init) 16 (global Gbnf_parser__SentenceLexer!)
      char_for_backslash/2027))
  (let
    (__ocaml_lex_tables/2030 =
       [0:
        "\000\000\239\255\240\255'\000'\000(\000\243\255\004\000\244\255\231\000\007\000\247\255\186\001\249\255\250\255\251\255\252\255\253\255\254\255\255\255\005\000\246\255B\000+\000,\000\242\255C\000\232\000\251\255\252\255-\000\253\255\154\002\255\255\254\255\006\000\252\255\253\255\254\255\002\000\255\255\016\000\253\255\254\255\255\255"
        "\n\000\255\255\255\255\014\000\016\000\012\000\255\255\016\000\255\255\n\000\016\000\255\255\007\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\012\000\r\000\255\255\255\255\255\255\255\255\255\255\002\000\255\255\004\000\255\255\255\255\255\255\255\255\255\255\255\255\003\000\255\255\255\255\255\255\255\255\255\255"
        "\t\000\000\000\000\000\255\255\026\000\255\255\000\000\255\255\000\000\255\255\255\255\000\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\022\000\255\255\255\255\000\000\026\000\028\000\000\000\000\000\255\255\000\000\255\255\000\000\000\000$\000\000\000\000\000\000\000\255\255\000\000*\000\000\000\000\000\000\000"
        "\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\003\000\006\000\001\000\001\000\005\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\003\000\001\000\b\000\004\000\001\000\001\000\001\000\001\000\019\000\018\000\014\000\r\000\001\000\012\000\001\000\007\000\003\000\025\000\006\000\022\000\024\000\006\000\025\000\031\000+\000,\000\n\000\001\000\001\000\001\000\001\000\015\000\001\000\020\000\021\000\000\000\000\000\000\000\000\000\003\000\000\000\000\000\000\000\000\000\006\000\025\000\000\000\023\000\024\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\000\001\000\001\000\011\000(\000\001\000%\000'\000&\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\016\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\000\000\000\000\000\030\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000\000\000!\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000\000\000\t\000\000\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\255\255\255\255 \000\000\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\tt\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\029\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\000\000\000\000\000\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\tt\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t
nt\000\255\255\255\255\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\255\255\255\255\255\255\255\255\255\255\255\255\004\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\022\000\026\000\027\000\255\255\t\000\255\255\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\tt\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\255\255\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t\000\255\255\t\000\t\000\t\000\t\000\t\000\t\000\t\000\t
        "" "" "" "" "" ""])
    (setfield_ptr(root-init) 17 (global Gbnf_parser__SentenceLexer!)
      __ocaml_lex_tables/2030))
  (letrec
    (main/2031
       (function lexbuf/2039 (apply __ocaml_lex_main_rec/2032 lexbuf/2039 0))
      __ocaml_lex_main_rec/2032
        (function lexbuf/2040 __ocaml_lex_state/2041[int]
          (let
            (__ocaml_lex_state/2042 =
               (apply (field_imm 19 (global Stdlib__Lexing!))
                 (field_imm 17 (global Gbnf_parser__SentenceLexer!))
                 __ocaml_lex_state/2041 lexbuf/2040))
            (catch
              (if (isout 16 __ocaml_lex_state/2042)
                (seq (apply (field_imm 0 lexbuf/2040) lexbuf/2040)
                  (apply __ocaml_lex_main_rec/2032 lexbuf/2040
                    __ocaml_lex_state/2042))
                (switch* __ocaml_lex_state/2042
                 case int 0:
                  (seq
                    (apply (field_imm 45 (global Stdlib!))
                      (apply (field_imm 6 (global Batteries!))
                        (apply (field_imm 7 (global Stdlib__Lexing!))
                          lexbuf/2040)))
                    5)
                 case int 1: 1
                 case int 2:
                  (seq
                    (apply (field_imm 45 (global Stdlib!))
                      (apply (field_imm 6 (global Batteries!))
                        (apply (field_imm 7 (global Stdlib__Lexing!))
                          lexbuf/2040)))
                    (let
                      (buffer/2233 =
                         (apply (field_imm 0 (global Stdlib__Buffer!)) 256)
                       openingpos/2316 =
                         (apply (field_imm 11 (global Stdlib__Lexing!))
                           lexbuf/2040)
                       content/2317 =
                         (apply charclass/2035 openingpos/2316 buffer/2233
                           lexbuf/2040)
                       id/2318 =
                         (apply (field_imm 3 (global Stdlib__Printf!))
                           [0: [12: '"' [2: 0 [12: '"' 0]]] "\"%s\""]
                           content/2317)
                       pos/2332 =
                         (apply
                           (field_imm 18 (global Gbnf_parser__Positions!))
                           (makeblock 0 openingpos/2316
                             (field_mut 11 lexbuf/2040))))
                      (makeblock 1
                        (apply (field_imm 3 (global Gbnf_parser__Positions!))
                          pos/2332 id/2318))))
                 case int 3: 10
                 case int 4: 2
                 case int 5: 0
                 case int 6: 3
                 case int 7: 7
                 case int 8: 9
                 case int 9:
                  (let
                    (curr/2333 = (field_mut 11 lexbuf/2040)
                     line/2334 =[int] (field_int 1 curr/2333)
                     cnum/2335 =[int]
                       (- (field_int 3 curr/2333) (field_int 2 curr/2333))
                     tok/2336 =
                       (apply (field_imm 7 (global Stdlib__Lexing!))
                         lexbuf/2040))
                    (seq
                      (apply (field_imm 45 (global Stdlib!))
                        (apply (field_imm 6 (global Batteries!))
                          (makeblock 0 (int,int,*) line/2334 cnum/2335
                            tok/2336)))
                      8))
                 case int 10:
                  (let
                    (id/2337 =
                       (apply (field_imm 15 (global Stdlib__Lexing!))
                         lexbuf/2040 (field_int 4 lexbuf/2040)
                         (field_int 5 lexbuf/2040)))
                    (makeblock 3
                      (apply (field_imm 3 (global Gbnf_parser__Positions!))
                        (apply
                          (field_imm 23 (global Gbnf_parser__Positions!))
                          lexbuf/2040)
                        id/2337)))
                 case int 11:
                  (let
                    (buffer/2338 =
                       (apply (field_imm 0 (global Stdlib__Buffer!)) 16)
                     openingpos/2339 =
                       (apply (field_imm 11 (global Stdlib__Lexing!))
                         lexbuf/2040)
                     content/2340 =
                       (apply record_string/2033 openingpos/2339 buffer/2338
                         lexbuf/2040)
                     id/2341 =
                       (apply (field_imm 3 (global Stdlib__Printf!))
                         [0: [12: '"' [2: 0 [12: '"' 0]]] "\"%s\""]
                         content/2340)
                     pos/2342 =
                       (apply (field_imm 18 (global Gbnf_parser__Positions!))
                         (makeblock 0 openingpos/2339
                           (field_mut 11 lexbuf/2040))))
                    (makeblock 2
                      (apply (field_imm 3 (global Gbnf_parser__Positions!))
                        pos/2342 id/2341)))
                 case int 12: (exit 41)
                 case int 13: (exit 41)
                 case int 14: (apply main/2031 lexbuf/2040)
                 case int 15: 6
                 case int 16:
                  (apply (field_imm 1 (global Gbnf_parser__SentenceLexer!))
                    lexbuf/2040
                    [0:
                     [11: "unexpected character(s)." 0]
                     "unexpected character(s)."])))
             with (41) 4)))
      record_string/2033
        (function openingpos/2343 buffer/2344 lexbuf/2345
          (apply __ocaml_lex_record_string_rec/2034 openingpos/2343
            buffer/2344 lexbuf/2345 27))
      __ocaml_lex_record_string_rec/2034
        (function openingpos/2346 buffer/2347 lexbuf/2348
          __ocaml_lex_state/2349[int]
          (let
            (__ocaml_lex_state/2350 =
               (apply (field_imm 19 (global Stdlib__Lexing!))
                 (field_imm 17 (global Gbnf_parser__SentenceLexer!))
                 __ocaml_lex_state/2349 lexbuf/2348))
            (if (isout 4 __ocaml_lex_state/2350)
              (seq (apply (field_imm 0 lexbuf/2348) lexbuf/2348)
                (apply __ocaml_lex_record_string_rec/2034 openingpos/2346
                  buffer/2347 lexbuf/2348 __ocaml_lex_state/2350))
              (switch* __ocaml_lex_state/2350
               case int 0:
                (apply (field_imm 1 (global Stdlib__Buffer!)) buffer/2347)
               case int 1:
                (let
                  (sequence/2351 =
                     (apply (field_imm 15 (global Stdlib__Lexing!))
                       lexbuf/2348 (field_int 4 lexbuf/2348)
                       (+ (field_int 4 lexbuf/2348) 2)))
                  (seq
                    (apply (field_imm 15 (global Stdlib__Buffer!))
                      buffer/2347 sequence/2351)
                    (apply (field_imm 45 (global Stdlib!))
                      (apply (field_imm 6 (global Batteries!))
                        (makeblock 0 "DEBUG:rs" sequence/2351)))
                    (apply record_string/2033 openingpos/2346 buffer/2347
                      lexbuf/2348)))
               case int 2:
                (apply (field_imm 1 (global Gbnf_parser__SentenceLexer!))
                  lexbuf/2348
                  [0:
                   [11: "illegal newline in string." 0]
                   "illegal newline in string."])
               case int 3:
                (apply (field_imm 0 (global Gbnf_parser__SentenceLexer!))
                  openingpos/2346
                  [0: [11: "unterminated string." 0] "unterminated string."])
               case int 4:
                (let
                  (c/2352 =[int]
                     (apply (field_imm 17 (global Stdlib__Lexing!))
                       lexbuf/2348 (field_int 4 lexbuf/2348)))
                  (seq
                    (apply (field_imm 11 (global Stdlib__Buffer!))
                      buffer/2347 c/2352)
                    (apply (field_imm 45 (global Stdlib!))
                      (apply (field_imm 6 (global Batteries!))
                        (makeblock 0 (*,int) "DEBUG2:rs" c/2352)))
                    (apply record_string/2033 openingpos/2346 buffer/2347
                      lexbuf/2348)))))))
      charclass/2035
        (function openingpos/2353 buffer/2354 lexbuf/2355
          (apply __ocaml_lex_charclass_rec/2036 openingpos/2353 buffer/2354
            lexbuf/2355 35))
      __ocaml_lex_charclass_rec/2036
        (function openingpos/2356 buffer/2357 lexbuf/2358
          __ocaml_lex_state/2359[int]
          (let
            (__ocaml_lex_state/2360 =
               (apply (field_imm 19 (global Stdlib__Lexing!))
                 (field_imm 17 (global Gbnf_parser__SentenceLexer!))
                 __ocaml_lex_state/2359 lexbuf/2358))
            (if (not (isout 3 __ocaml_lex_state/2360))
              (if (!= __ocaml_lex_state/2360 1)
                (seq
                  (apply (field_imm 45 (global Stdlib!))
                    (apply (field_imm 6 (global Batteries!))
                      (apply (field_imm 7 (global Stdlib__Lexing!))
                        lexbuf/2358)))
                  (apply charclass/2035 openingpos/2356 buffer/2357
                    lexbuf/2358))
                (seq
                  (apply (field_imm 45 (global Stdlib!))
                    (apply (field_imm 6 (global Batteries!))
                      (apply (field_imm 7 (global Stdlib__Lexing!))
                        lexbuf/2358)))
                  "TODO"))
              (seq (apply (field_imm 0 lexbuf/2358) lexbuf/2358)
                (apply __ocaml_lex_charclass_rec/2036 openingpos/2356
                  buffer/2357 lexbuf/2358 __ocaml_lex_state/2360)))))
      subgroup/2037
        (function openingpos/2361 buffer/2362 lexbuf/2363
          (apply __ocaml_lex_subgroup_rec/2038 openingpos/2361 buffer/2362
            lexbuf/2363 41))
      __ocaml_lex_subgroup_rec/2038
        (function openingpos/2364 buffer/2365 lexbuf/2366
          __ocaml_lex_state/2367[int]
          (let
            (__ocaml_lex_state/2368 =
               (apply (field_imm 19 (global Stdlib__Lexing!))
                 (field_imm 17 (global Gbnf_parser__SentenceLexer!))
                 __ocaml_lex_state/2367 lexbuf/2366))
            (catch
              (if (> __ocaml_lex_state/2368 0)
                (if (>= __ocaml_lex_state/2368 3) (exit 45)
                  (seq
                    (apply (field_imm 45 (global Stdlib!))
                      (apply (field_imm 6 (global Batteries!))
                        (apply (field_imm 7 (global Stdlib__Lexing!))
                          lexbuf/2366)))
                    (apply subgroup/2037 openingpos/2364 buffer/2365
                      lexbuf/2366)))
                (if (>= __ocaml_lex_state/2368 0)
                  (seq
                    (apply (field_imm 45 (global Stdlib!))
                      (apply (field_imm 6 (global Batteries!))
                        (apply (field_imm 7 (global Stdlib__Lexing!))
                          lexbuf/2366)))
                    "TODO")
                  (exit 45)))
             with (45)
              (seq (apply (field_imm 0 lexbuf/2366) lexbuf/2366)
                (apply __ocaml_lex_subgroup_rec/2038 openingpos/2364
                  buffer/2365 lexbuf/2366 __ocaml_lex_state/2368))))))
    (seq
      (setfield_ptr(root-init) 18 (global Gbnf_parser__SentenceLexer!)
        main/2031)
      (setfield_ptr(root-init) 19 (global Gbnf_parser__SentenceLexer!)
        __ocaml_lex_main_rec/2032)
      (setfield_ptr(root-init) 20 (global Gbnf_parser__SentenceLexer!)
        record_string/2033)
      (setfield_ptr(root-init) 21 (global Gbnf_parser__SentenceLexer!)
        __ocaml_lex_record_string_rec/2034)
      (setfield_ptr(root-init) 22 (global Gbnf_parser__SentenceLexer!)
        charclass/2035)
      (setfield_ptr(root-init) 23 (global Gbnf_parser__SentenceLexer!)
        __ocaml_lex_charclass_rec/2036)
      (setfield_ptr(root-init) 24 (global Gbnf_parser__SentenceLexer!)
        subgroup/2037)
      (setfield_ptr(root-init) 25 (global Gbnf_parser__SentenceLexer!)
        __ocaml_lex_subgroup_rec/2038)))
  (let
    (*match*/3474 =
       (apply (field_imm 5 (global Ppx_inline_test_lib!)) "gbnf_parser"))
    0)
  (let
    (*match*/3476 =
       (apply (field_imm 1 (field_imm 5 (global Expect_test_collector!))) 0))
    0)
  (let
    (*match*/3478 =
       (apply
         (field_imm 1
           (field_imm 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
         0))
    0)
  (let
    (*match*/3480 =
       (apply (field_imm 4 (global Ppx_module_timer_runtime!))
         #"Gbnf_parser__SentenceLexer"))
    0)
  0)
