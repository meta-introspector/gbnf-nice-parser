[
  structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
    Pstr_attribute "ocaml.ppx.context"
    [
      structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
        Pstr_eval
        expression (_none_[0,0+-1]..[0,0+-1]) ghost
          Pexp_record
          [
            "tool_name" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_constant PConst_string("ppx_driver",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
            "include_dirs" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "load_path" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "open_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "for_package" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "None" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "debug" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_threads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_vmthreads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "recursive_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "principal" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "transparent_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unboxed_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unsafe_string" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "cookies" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                Some
                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                    Pexp_tuple
                    [
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_tuple
                        [
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_constant PConst_string("inline_tests",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                          expression (<command-line>[1,0+0]..[1,0+9])
                            Pexp_constant PConst_string("enabled",(<command-line>[1,0+1]..[1,0+8]),None)
                        ]
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                        Some
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_tuple
                            [
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_tuple
                                [
                                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                    Pexp_constant PConst_string("library-name",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                                  expression (<command-line>[1,0+0]..[1,0+13])
                                    Pexp_constant PConst_string("gbnf_parser",(<command-line>[1,0+1]..[1,0+12]),None)
                                ]
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                                None
                            ]
                    ]
          ]
          None
    ]
  structure_item (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
          Ppat_construct "()" (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
          None
        expression (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
          Pexp_apply
          expression (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
            Pexp_ident "Ppx_module_timer_runtime.record_start" (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
                Pexp_ident "Ppx_module_timer_runtime.__MODULE__" (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
          ]
    ]
  structure_item (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
          Ppat_construct "()" (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
          None
        expression (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
          Pexp_apply
          expression (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
            Pexp_ident "Ppx_bench_lib.Benchmark_accumulator.Current_libname.set" (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/Memoize.ml[13,893+0]..[13,893+0]) ghost,None)
          ]
    ]
  structure_item (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
          Ppat_construct "()" (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
          None
        expression (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
          Pexp_apply
          expression (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
            Pexp_ident "Expect_test_collector.Current_file.set" (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
          [
            <arg>
            Labelled "absolute_filename"
              expression (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
                Pexp_constant PConst_string("lib/Memoize.ml",(lib/Memoize.ml[13,893+0]..[13,893+0]) ghost,None)
          ]
    ]
  structure_item (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
          Ppat_construct "()" (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
          None
        expression (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
          Pexp_apply
          expression (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
            Pexp_ident "Ppx_inline_test_lib.set_lib_and_partition" (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/Memoize.ml[13,893+0]..[13,893+0]) ghost,None)
            <arg>
            Nolabel
              expression (lib/Memoize.ml[13,893+0]..[13,893+0]) ghost
                Pexp_constant PConst_string("Memoize.ml",(lib/Memoize.ml[13,893+0]..[13,893+0]) ghost,None)
          ]
    ]
  structure_item (lib/Memoize.ml[13,893+0]..[13,893+9])
    Pstr_open Fresh
    module_expr (lib/Memoize.ml[13,893+5]..[13,893+9])
      Pmod_ident "Sigs" (lib/Memoize.ml[13,893+5]..[13,893+9])
  structure_item (lib/Memoize.ml[19,1073+0]..[27,1249+37])
    Pstr_value Rec
    [
      <def>
        pattern (lib/Memoize.ml[19,1073+8]..[19,1073+16])
          Ppat_var "rev_take" (lib/Memoize.ml[19,1073+8]..[19,1073+16])
        expression (lib/Memoize.ml[19,1073+17]..[27,1249+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/Memoize.ml[19,1073+17]..[19,1073+21])
            Ppat_var "accu" (lib/Memoize.ml[19,1073+17]..[19,1073+21])
          expression (lib/Memoize.ml[19,1073+22]..[27,1249+37]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/Memoize.ml[19,1073+22]..[19,1073+23])
              Ppat_var "n" (lib/Memoize.ml[19,1073+22]..[19,1073+23])
            expression (lib/Memoize.ml[19,1073+24]..[27,1249+37]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/Memoize.ml[19,1073+24]..[19,1073+26])
                Ppat_var "xs" (lib/Memoize.ml[19,1073+24]..[19,1073+26])
              expression (lib/Memoize.ml[20,1102+2]..[27,1249+37])
                Pexp_match
                expression (lib/Memoize.ml[20,1102+8]..[20,1102+13])
                  Pexp_tuple
                  [
                    expression (lib/Memoize.ml[20,1102+8]..[20,1102+9])
                      Pexp_ident "n" (lib/Memoize.ml[20,1102+8]..[20,1102+9])
                    expression (lib/Memoize.ml[20,1102+11]..[20,1102+13])
                      Pexp_ident "xs" (lib/Memoize.ml[20,1102+11]..[20,1102+13])
                  ]
                [
                  <case>
                    pattern (lib/Memoize.ml[21,1121+4]..[21,1121+8])
                      Ppat_tuple
                      [
                        pattern (lib/Memoize.ml[21,1121+4]..[21,1121+5])
                          Ppat_constant PConst_int (0,None)
                        pattern (lib/Memoize.ml[21,1121+7]..[21,1121+8])
                          Ppat_any
                      ]
                    expression (lib/Memoize.ml[22,1133+6]..[22,1133+10])
                      Pexp_ident "accu" (lib/Memoize.ml[22,1133+6]..[22,1133+10])
                  <case>
                    pattern (lib/Memoize.ml[23,1144+4]..[23,1144+9])
                      Ppat_tuple
                      [
                        pattern (lib/Memoize.ml[23,1144+4]..[23,1144+5])
                          Ppat_any
                        pattern (lib/Memoize.ml[23,1144+7]..[23,1144+9])
                          Ppat_construct "[]" (lib/Memoize.ml[23,1144+7]..[23,1144+9])
                          None
                      ]
                    expression (lib/Memoize.ml[25,1212+6]..[25,1212+18])
                      Pexp_assert
                      expression (lib/Memoize.ml[25,1212+13]..[25,1212+18])
                        Pexp_construct "false" (lib/Memoize.ml[25,1212+13]..[25,1212+18])
                        None
                  <case>
                    pattern (lib/Memoize.ml[26,1231+4]..[26,1231+14])
                      Ppat_tuple
                      [
                        pattern (lib/Memoize.ml[26,1231+4]..[26,1231+5])
                          Ppat_any
                        pattern (lib/Memoize.ml[26,1231+7]..[26,1231+14])
                          Ppat_construct "::" (lib/Memoize.ml[26,1231+9]..[26,1231+11])
                          Some
                            []
                            pattern (lib/Memoize.ml[26,1231+7]..[26,1231+14]) ghost
                              Ppat_tuple
                              [
                                pattern (lib/Memoize.ml[26,1231+7]..[26,1231+8])
                                  Ppat_var "x" (lib/Memoize.ml[26,1231+7]..[26,1231+8])
                                pattern (lib/Memoize.ml[26,1231+12]..[26,1231+14])
                                  Ppat_var "xs" (lib/Memoize.ml[26,1231+12]..[26,1231+14])
                              ]
                      ]
                    expression (lib/Memoize.ml[27,1249+6]..[27,1249+37])
                      Pexp_apply
                      expression (lib/Memoize.ml[27,1249+6]..[27,1249+14])
                        Pexp_ident "rev_take" (lib/Memoize.ml[27,1249+6]..[27,1249+14])
                      [
                        <arg>
                        Nolabel
                          expression (lib/Memoize.ml[27,1249+15]..[27,1249+26])
                            Pexp_construct "::" (lib/Memoize.ml[27,1249+18]..[27,1249+20])
                            Some
                              expression (lib/Memoize.ml[27,1249+16]..[27,1249+25]) ghost
                                Pexp_tuple
                                [
                                  expression (lib/Memoize.ml[27,1249+16]..[27,1249+17])
                                    Pexp_ident "x" (lib/Memoize.ml[27,1249+16]..[27,1249+17])
                                  expression (lib/Memoize.ml[27,1249+21]..[27,1249+25])
                                    Pexp_ident "accu" (lib/Memoize.ml[27,1249+21]..[27,1249+25])
                                ]
                        <arg>
                        Nolabel
                          expression (lib/Memoize.ml[27,1249+27]..[27,1249+34])
                            Pexp_apply
                            expression (lib/Memoize.ml[27,1249+30]..[27,1249+31])
                              Pexp_ident "-" (lib/Memoize.ml[27,1249+30]..[27,1249+31])
                            [
                              <arg>
                              Nolabel
                                expression (lib/Memoize.ml[27,1249+28]..[27,1249+29])
                                  Pexp_ident "n" (lib/Memoize.ml[27,1249+28]..[27,1249+29])
                              <arg>
                              Nolabel
                                expression (lib/Memoize.ml[27,1249+32]..[27,1249+33])
                                  Pexp_constant PConst_int (1,None)
                            ]
                        <arg>
                        Nolabel
                          expression (lib/Memoize.ml[27,1249+35]..[27,1249+37])
                            Pexp_ident "xs" (lib/Memoize.ml[27,1249+35]..[27,1249+37])
                      ]
                ]
    ]
  structure_item (lib/Memoize.ml[29,1288+0]..[131,4934+3])
    Pstr_module
    "Make" (lib/Memoize.ml[29,1288+7]..[29,1288+11])
      module_expr (lib/Memoize.ml[29,1288+12]..[131,4934+3])
        Pmod_functor "M" (lib/Memoize.ml[29,1288+13]..[29,1288+14])
        module_type (lib/Memoize.ml[29,1288+17]..[29,1288+32])
          Pmty_ident "IMPERATIVE_MAPS" (lib/Memoize.ml[29,1288+17]..[29,1288+32])
        module_expr (lib/Memoize.ml[29,1288+36]..[131,4934+3])
          Pmod_structure
          [
            structure_item (lib/Memoize.ml[31,1332+2]..[31,1332+18])
              Pstr_type Rec
              [
                type_declaration "key" (lib/Memoize.ml[31,1332+7]..[31,1332+10]) (lib/Memoize.ml[31,1332+2]..[31,1332+18])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (lib/Memoize.ml[31,1332+13]..[31,1332+18])
                        Ptyp_constr "M.key" (lib/Memoize.ml[31,1332+13]..[31,1332+18])
                        []
              ]
            structure_item (lib/Memoize.ml[33,1352+2]..[35,1395+5])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/Memoize.ml[33,1352+6]..[33,1352+9])
                    Ppat_var "add" (lib/Memoize.ml[33,1352+6]..[33,1352+9])
                  expression (lib/Memoize.ml[33,1352+10]..[35,1395+5]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lib/Memoize.ml[33,1352+10]..[33,1352+11])
                      Ppat_var "x" (lib/Memoize.ml[33,1352+10]..[33,1352+11])
                    expression (lib/Memoize.ml[33,1352+12]..[35,1395+5]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lib/Memoize.ml[33,1352+12]..[33,1352+13])
                        Ppat_var "y" (lib/Memoize.ml[33,1352+12]..[33,1352+13])
                      expression (lib/Memoize.ml[33,1352+14]..[35,1395+5]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lib/Memoize.ml[33,1352+14]..[33,1352+19])
                          Ppat_var "table" (lib/Memoize.ml[33,1352+14]..[33,1352+19])
                        expression (lib/Memoize.ml[34,1374+4]..[35,1395+5])
                          Pexp_sequence
                          expression (lib/Memoize.ml[34,1374+4]..[34,1374+19])
                            Pexp_apply
                            expression (lib/Memoize.ml[34,1374+4]..[34,1374+9])
                              Pexp_ident "M.add" (lib/Memoize.ml[34,1374+4]..[34,1374+9])
                            [
                              <arg>
                              Nolabel
                                expression (lib/Memoize.ml[34,1374+10]..[34,1374+11])
                                  Pexp_ident "x" (lib/Memoize.ml[34,1374+10]..[34,1374+11])
                              <arg>
                              Nolabel
                                expression (lib/Memoize.ml[34,1374+12]..[34,1374+13])
                                  Pexp_ident "y" (lib/Memoize.ml[34,1374+12]..[34,1374+13])
                              <arg>
                              Nolabel
                                expression (lib/Memoize.ml[34,1374+14]..[34,1374+19])
                                  Pexp_ident "table" (lib/Memoize.ml[34,1374+14]..[34,1374+19])
                            ]
                          expression (lib/Memoize.ml[35,1395+4]..[35,1395+5])
                            Pexp_ident "y" (lib/Memoize.ml[35,1395+4]..[35,1395+5])
              ]
            structure_item (lib/Memoize.ml[41,1641+2]..[42,1655+10])
              Pstr_type Rec
              [
                type_declaration "t" (lib/Memoize.ml[41,1641+10]..[41,1641+11]) (lib/Memoize.ml[41,1641+2]..[42,1655+10])
                  ptype_params =
                    [
                      core_type (lib/Memoize.ml[41,1641+7]..[41,1641+9])
                        Ptyp_var a
                    ]
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (lib/Memoize.ml[42,1655+4]..[42,1655+10])
                        Ptyp_constr "M.t" (lib/Memoize.ml[42,1655+7]..[42,1655+10])
                        [
                          core_type (lib/Memoize.ml[42,1655+4]..[42,1655+6])
                            Ptyp_var a
                        ]
              ]
            structure_item (lib/Memoize.ml[44,1667+2]..[52,1855+12])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/Memoize.ml[44,1667+6]..[44,1667+21])
                    Ppat_var "visibly_memoize" (lib/Memoize.ml[44,1667+6]..[44,1667+21])
                  expression (lib/Memoize.ml[44,1667+22]..[52,1855+12]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lib/Memoize.ml[44,1667+22]..[44,1667+37])
                      Ppat_constraint
                      pattern (lib/Memoize.ml[44,1667+23]..[44,1667+24])
                        Ppat_var "f" (lib/Memoize.ml[44,1667+23]..[44,1667+24])
                      core_type (lib/Memoize.ml[44,1667+27]..[44,1667+36])
                        Ptyp_arrow
                        Nolabel
                        core_type (lib/Memoize.ml[44,1667+27]..[44,1667+30])
                          Ptyp_constr "key" (lib/Memoize.ml[44,1667+27]..[44,1667+30])
                          []
                        core_type (lib/Memoize.ml[44,1667+34]..[44,1667+36])
                          Ptyp_var a
                    expression (lib/Memoize.ml[44,1667+38]..[52,1855+12])
                      Pexp_constraint
                      expression (lib/Memoize.ml[45,1728+4]..[52,1855+12])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/Memoize.ml[45,1728+8]..[45,1728+13])
                              Ppat_var "table" (lib/Memoize.ml[45,1728+8]..[45,1728+13])
                            expression (lib/Memoize.ml[45,1728+16]..[45,1728+26])
                              Pexp_apply
                              expression (lib/Memoize.ml[45,1728+16]..[45,1728+24])
                                Pexp_ident "M.create" (lib/Memoize.ml[45,1728+16]..[45,1728+24])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/Memoize.ml[45,1728+24]..[45,1728+26])
                                    Pexp_construct "()" (lib/Memoize.ml[45,1728+24]..[45,1728+26])
                                    None
                              ]
                        ]
                        expression (lib/Memoize.ml[46,1758+4]..[52,1855+12])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lib/Memoize.ml[46,1758+8]..[46,1758+9])
                                Ppat_var "f" (lib/Memoize.ml[46,1758+8]..[46,1758+9])
                              expression (lib/Memoize.ml[46,1758+10]..[50,1822+25]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/Memoize.ml[46,1758+10]..[46,1758+11])
                                  Ppat_var "x" (lib/Memoize.ml[46,1758+10]..[46,1758+11])
                                expression (lib/Memoize.ml[47,1772+6]..[50,1822+25])
                                  Pexp_try
                                  expression (lib/Memoize.ml[48,1782+1]..[48,1782+15])
                                    Pexp_apply
                                    expression (lib/Memoize.ml[48,1782+1]..[48,1782+7])
                                      Pexp_ident "M.find" (lib/Memoize.ml[48,1782+1]..[48,1782+7])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/Memoize.ml[48,1782+8]..[48,1782+9])
                                          Pexp_ident "x" (lib/Memoize.ml[48,1782+8]..[48,1782+9])
                                      <arg>
                                      Nolabel
                                        expression (lib/Memoize.ml[48,1782+10]..[48,1782+15])
                                          Pexp_ident "table" (lib/Memoize.ml[48,1782+10]..[48,1782+15])
                                    ]
                                  [
                                    <case>
                                      pattern (lib/Memoize.ml[49,1798+11]..[49,1798+20])
                                        Ppat_construct "Not_found" (lib/Memoize.ml[49,1798+11]..[49,1798+20])
                                        None
                                      expression (lib/Memoize.ml[50,1822+8]..[50,1822+25])
                                        Pexp_apply
                                        expression (lib/Memoize.ml[50,1822+8]..[50,1822+11])
                                          Pexp_ident "add" (lib/Memoize.ml[50,1822+8]..[50,1822+11])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/Memoize.ml[50,1822+12]..[50,1822+13])
                                              Pexp_ident "x" (lib/Memoize.ml[50,1822+12]..[50,1822+13])
                                          <arg>
                                          Nolabel
                                            expression (lib/Memoize.ml[50,1822+14]..[50,1822+19])
                                              Pexp_apply
                                              expression (lib/Memoize.ml[50,1822+15]..[50,1822+16])
                                                Pexp_ident "f" (lib/Memoize.ml[50,1822+15]..[50,1822+16])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/Memoize.ml[50,1822+17]..[50,1822+18])
                                                    Pexp_ident "x" (lib/Memoize.ml[50,1822+17]..[50,1822+18])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (lib/Memoize.ml[50,1822+20]..[50,1822+25])
                                              Pexp_ident "table" (lib/Memoize.ml[50,1822+20]..[50,1822+25])
                                        ]
                                  ]
                          ]
                          expression (lib/Memoize.ml[52,1855+4]..[52,1855+12])
                            Pexp_tuple
                            [
                              expression (lib/Memoize.ml[52,1855+4]..[52,1855+5])
                                Pexp_ident "f" (lib/Memoize.ml[52,1855+4]..[52,1855+5])
                              expression (lib/Memoize.ml[52,1855+7]..[52,1855+12])
                                Pexp_ident "table" (lib/Memoize.ml[52,1855+7]..[52,1855+12])
                            ]
                      core_type (lib/Memoize.ml[44,1667+40]..[44,1667+58])
                        Ptyp_tuple
                        [
                          core_type (lib/Memoize.ml[44,1667+41]..[44,1667+50])
                            Ptyp_arrow
                            Nolabel
                            core_type (lib/Memoize.ml[44,1667+41]..[44,1667+44])
                              Ptyp_constr "key" (lib/Memoize.ml[44,1667+41]..[44,1667+44])
                              []
                            core_type (lib/Memoize.ml[44,1667+48]..[44,1667+50])
                              Ptyp_var a
                          core_type (lib/Memoize.ml[44,1667+54]..[44,1667+58])
                            Ptyp_constr "t" (lib/Memoize.ml[44,1667+57]..[44,1667+58])
                            [
                              core_type (lib/Memoize.ml[44,1667+54]..[44,1667+56])
                                Ptyp_var a
                            ]
                        ]
              ]
            structure_item (lib/Memoize.ml[54,1869+2]..[56,1954+5])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/Memoize.ml[54,1869+6]..[54,1869+13])
                    Ppat_var "memoize" (lib/Memoize.ml[54,1869+6]..[54,1869+13])
                  expression (lib/Memoize.ml[54,1869+14]..[56,1954+5]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lib/Memoize.ml[54,1869+14]..[54,1869+29])
                      Ppat_constraint
                      pattern (lib/Memoize.ml[54,1869+15]..[54,1869+16])
                        Ppat_var "f" (lib/Memoize.ml[54,1869+15]..[54,1869+16])
                      core_type (lib/Memoize.ml[54,1869+19]..[54,1869+28])
                        Ptyp_arrow
                        Nolabel
                        core_type (lib/Memoize.ml[54,1869+19]..[54,1869+22])
                          Ptyp_constr "key" (lib/Memoize.ml[54,1869+19]..[54,1869+22])
                          []
                        core_type (lib/Memoize.ml[54,1869+26]..[54,1869+28])
                          Ptyp_var a
                    expression (lib/Memoize.ml[54,1869+30]..[56,1954+5])
                      Pexp_constraint
                      expression (lib/Memoize.ml[55,1913+4]..[56,1954+5])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/Memoize.ml[55,1913+8]..[55,1913+17])
                              Ppat_tuple
                              [
                                pattern (lib/Memoize.ml[55,1913+8]..[55,1913+9])
                                  Ppat_var "f" (lib/Memoize.ml[55,1913+8]..[55,1913+9])
                                pattern (lib/Memoize.ml[55,1913+11]..[55,1913+17])
                                  Ppat_var "_table" (lib/Memoize.ml[55,1913+11]..[55,1913+17])
                              ]
                            expression (lib/Memoize.ml[55,1913+20]..[55,1913+37])
                              Pexp_apply
                              expression (lib/Memoize.ml[55,1913+20]..[55,1913+35])
                                Pexp_ident "visibly_memoize" (lib/Memoize.ml[55,1913+20]..[55,1913+35])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/Memoize.ml[55,1913+36]..[55,1913+37])
                                    Pexp_ident "f" (lib/Memoize.ml[55,1913+36]..[55,1913+37])
                              ]
                        ]
                        expression (lib/Memoize.ml[56,1954+4]..[56,1954+5])
                          Pexp_ident "f" (lib/Memoize.ml[56,1954+4]..[56,1954+5])
                      core_type (lib/Memoize.ml[54,1869+32]..[54,1869+41])
                        Ptyp_arrow
                        Nolabel
                        core_type (lib/Memoize.ml[54,1869+32]..[54,1869+35])
                          Ptyp_constr "key" (lib/Memoize.ml[54,1869+32]..[54,1869+35])
                          []
                        core_type (lib/Memoize.ml[54,1869+39]..[54,1869+41])
                          Ptyp_var a
              ]
            structure_item (lib/Memoize.ml[58,1961+2]..[66,2146+5])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/Memoize.ml[58,1961+6]..[58,1961+9])
                    Ppat_var "fix" (lib/Memoize.ml[58,1961+6]..[58,1961+9])
                  expression (lib/Memoize.ml[58,1961+10]..[66,2146+5]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lib/Memoize.ml[58,1961+10]..[58,1961+43])
                      Ppat_constraint
                      pattern (lib/Memoize.ml[58,1961+11]..[58,1961+13])
                        Ppat_var "ff" (lib/Memoize.ml[58,1961+11]..[58,1961+13])
                      core_type (lib/Memoize.ml[58,1961+16]..[58,1961+42])
                        Ptyp_arrow
                        Nolabel
                        core_type (lib/Memoize.ml[58,1961+17]..[58,1961+26])
                          Ptyp_arrow
                          Nolabel
                          core_type (lib/Memoize.ml[58,1961+17]..[58,1961+20])
                            Ptyp_constr "key" (lib/Memoize.ml[58,1961+17]..[58,1961+20])
                            []
                          core_type (lib/Memoize.ml[58,1961+24]..[58,1961+26])
                            Ptyp_var a
                        core_type (lib/Memoize.ml[58,1961+32]..[58,1961+41])
                          Ptyp_arrow
                          Nolabel
                          core_type (lib/Memoize.ml[58,1961+32]..[58,1961+35])
                            Ptyp_constr "key" (lib/Memoize.ml[58,1961+32]..[58,1961+35])
                            []
                          core_type (lib/Memoize.ml[58,1961+39]..[58,1961+41])
                            Ptyp_var a
                    expression (lib/Memoize.ml[58,1961+44]..[66,2146+5])
                      Pexp_constraint
                      expression (lib/Memoize.ml[59,2019+4]..[66,2146+5])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/Memoize.ml[59,2019+8]..[59,2019+13])
                              Ppat_var "table" (lib/Memoize.ml[59,2019+8]..[59,2019+13])
                            expression (lib/Memoize.ml[59,2019+16]..[59,2019+26])
                              Pexp_apply
                              expression (lib/Memoize.ml[59,2019+16]..[59,2019+24])
                                Pexp_ident "M.create" (lib/Memoize.ml[59,2019+16]..[59,2019+24])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/Memoize.ml[59,2019+24]..[59,2019+26])
                                    Pexp_construct "()" (lib/Memoize.ml[59,2019+24]..[59,2019+26])
                                    None
                              ]
                        ]
                        expression (lib/Memoize.ml[60,2049+4]..[66,2146+5])
                          Pexp_let Rec
                          [
                            <def>
                              pattern (lib/Memoize.ml[60,2049+12]..[60,2049+13])
                                Ppat_var "f" (lib/Memoize.ml[60,2049+12]..[60,2049+13])
                              expression (lib/Memoize.ml[60,2049+14]..[64,2117+21]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/Memoize.ml[60,2049+14]..[60,2049+15])
                                  Ppat_var "x" (lib/Memoize.ml[60,2049+14]..[60,2049+15])
                                expression (lib/Memoize.ml[61,2067+6]..[64,2117+21])
                                  Pexp_try
                                  expression (lib/Memoize.ml[62,2077+1]..[62,2077+15])
                                    Pexp_apply
                                    expression (lib/Memoize.ml[62,2077+1]..[62,2077+7])
                                      Pexp_ident "M.find" (lib/Memoize.ml[62,2077+1]..[62,2077+7])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/Memoize.ml[62,2077+8]..[62,2077+9])
                                          Pexp_ident "x" (lib/Memoize.ml[62,2077+8]..[62,2077+9])
                                      <arg>
                                      Nolabel
                                        expression (lib/Memoize.ml[62,2077+10]..[62,2077+15])
                                          Pexp_ident "table" (lib/Memoize.ml[62,2077+10]..[62,2077+15])
                                    ]
                                  [
                                    <case>
                                      pattern (lib/Memoize.ml[63,2093+11]..[63,2093+20])
                                        Ppat_construct "Not_found" (lib/Memoize.ml[63,2093+11]..[63,2093+20])
                                        None
                                      expression (lib/Memoize.ml[64,2117+1]..[64,2117+21])
                                        Pexp_apply
                                        expression (lib/Memoize.ml[64,2117+1]..[64,2117+4])
                                          Pexp_ident "add" (lib/Memoize.ml[64,2117+1]..[64,2117+4])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/Memoize.ml[64,2117+5]..[64,2117+6])
                                              Pexp_ident "x" (lib/Memoize.ml[64,2117+5]..[64,2117+6])
                                          <arg>
                                          Nolabel
                                            expression (lib/Memoize.ml[64,2117+7]..[64,2117+15])
                                              Pexp_apply
                                              expression (lib/Memoize.ml[64,2117+8]..[64,2117+10])
                                                Pexp_ident "ff" (lib/Memoize.ml[64,2117+8]..[64,2117+10])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/Memoize.ml[64,2117+11]..[64,2117+12])
                                                    Pexp_ident "f" (lib/Memoize.ml[64,2117+11]..[64,2117+12])
                                                <arg>
                                                Nolabel
                                                  expression (lib/Memoize.ml[64,2117+13]..[64,2117+14])
                                                    Pexp_ident "x" (lib/Memoize.ml[64,2117+13]..[64,2117+14])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (lib/Memoize.ml[64,2117+16]..[64,2117+21])
                                              Pexp_ident "table" (lib/Memoize.ml[64,2117+16]..[64,2117+21])
                                        ]
                                  ]
                          ]
                          expression (lib/Memoize.ml[66,2146+4]..[66,2146+5])
                            Pexp_ident "f" (lib/Memoize.ml[66,2146+4]..[66,2146+5])
                      core_type (lib/Memoize.ml[58,1961+46]..[58,1961+55])
                        Ptyp_arrow
                        Nolabel
                        core_type (lib/Memoize.ml[58,1961+46]..[58,1961+49])
                          Ptyp_constr "key" (lib/Memoize.ml[58,1961+46]..[58,1961+49])
                          []
                        core_type (lib/Memoize.ml[58,1961+53]..[58,1961+55])
                          Ptyp_var a
              ]
            structure_item (lib/Memoize.ml[80,2969+2]..[80,2969+35])
              Pstr_exception
              type_exception
                ptyext_constructor =
                  extension_constructor (lib/Memoize.ml[80,2969+2]..[80,2969+35])
                    pext_name = "Cycle"
                    pext_kind =
                      Pext_decl
                        [
                          core_type (lib/Memoize.ml[80,2969+21]..[80,2969+29])
                            Ptyp_constr "list" (lib/Memoize.ml[80,2969+25]..[80,2969+29])
                            [
                              core_type (lib/Memoize.ml[80,2969+21]..[80,2969+24])
                                Ptyp_constr "key" (lib/Memoize.ml[80,2969+21]..[80,2969+24])
                                []
                            ]
                          core_type (lib/Memoize.ml[80,2969+32]..[80,2969+35])
                            Ptyp_constr "key" (lib/Memoize.ml[80,2969+32]..[80,2969+35])
                            []
                        ]
                        None
            structure_item (lib/Memoize.ml[82,3006+2]..[114,4363+28])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/Memoize.ml[82,3006+6]..[82,3006+19])
                    Ppat_var "defensive_fix" (lib/Memoize.ml[82,3006+6]..[82,3006+19])
                  expression (lib/Memoize.ml[82,3006+20]..[114,4363+28]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lib/Memoize.ml[82,3006+20]..[82,3006+53])
                      Ppat_constraint
                      pattern (lib/Memoize.ml[82,3006+21]..[82,3006+23])
                        Ppat_var "ff" (lib/Memoize.ml[82,3006+21]..[82,3006+23])
                      core_type (lib/Memoize.ml[82,3006+26]..[82,3006+52])
                        Ptyp_arrow
                        Nolabel
                        core_type (lib/Memoize.ml[82,3006+27]..[82,3006+36])
                          Ptyp_arrow
                          Nolabel
                          core_type (lib/Memoize.ml[82,3006+27]..[82,3006+30])
                            Ptyp_constr "key" (lib/Memoize.ml[82,3006+27]..[82,3006+30])
                            []
                          core_type (lib/Memoize.ml[82,3006+34]..[82,3006+36])
                            Ptyp_var a
                        core_type (lib/Memoize.ml[82,3006+42]..[82,3006+51])
                          Ptyp_arrow
                          Nolabel
                          core_type (lib/Memoize.ml[82,3006+42]..[82,3006+45])
                            Ptyp_constr "key" (lib/Memoize.ml[82,3006+42]..[82,3006+45])
                            []
                          core_type (lib/Memoize.ml[82,3006+49]..[82,3006+51])
                            Ptyp_var a
                    expression (lib/Memoize.ml[82,3006+54]..[114,4363+28])
                      Pexp_constraint
                      expression (lib/Memoize.ml[84,3112+4]..[114,4363+28])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/Memoize.ml[84,3112+8]..[84,3112+13])
                              Ppat_var "table" (lib/Memoize.ml[84,3112+8]..[84,3112+13])
                            expression (lib/Memoize.ml[84,3112+16]..[84,3112+26])
                              Pexp_apply
                              expression (lib/Memoize.ml[84,3112+16]..[84,3112+24])
                                Pexp_ident "M.create" (lib/Memoize.ml[84,3112+16]..[84,3112+24])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/Memoize.ml[84,3112+24]..[84,3112+26])
                                    Pexp_construct "()" (lib/Memoize.ml[84,3112+24]..[84,3112+26])
                                    None
                              ]
                        ]
                        expression (lib/Memoize.ml[86,3188+4]..[114,4363+28])
                          Pexp_let Rec
                          [
                            <def>
                              pattern (lib/Memoize.ml[86,3188+12]..[86,3188+13])
                                Ppat_var "f" (lib/Memoize.ml[86,3188+12]..[86,3188+13])
                              expression (lib/Memoize.ml[86,3188+14]..[106,4179+18]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/Memoize.ml[86,3188+14]..[86,3188+19])
                                  Ppat_var "stack" (lib/Memoize.ml[86,3188+14]..[86,3188+19])
                                expression (lib/Memoize.ml[86,3188+20]..[106,4179+18]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lib/Memoize.ml[86,3188+20]..[86,3188+25])
                                    Ppat_var "depth" (lib/Memoize.ml[86,3188+20]..[86,3188+25])
                                  expression (lib/Memoize.ml[86,3188+26]..[106,4179+18]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lib/Memoize.ml[86,3188+26]..[86,3188+32])
                                      Ppat_var "marked" (lib/Memoize.ml[86,3188+26]..[86,3188+32])
                                    expression (lib/Memoize.ml[86,3188+33]..[106,4179+18]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lib/Memoize.ml[86,3188+33]..[86,3188+42])
                                        Ppat_constraint
                                        pattern (lib/Memoize.ml[86,3188+34]..[86,3188+35])
                                          Ppat_var "x" (lib/Memoize.ml[86,3188+34]..[86,3188+35])
                                        core_type (lib/Memoize.ml[86,3188+38]..[86,3188+41])
                                          Ptyp_constr "key" (lib/Memoize.ml[86,3188+38]..[86,3188+41])
                                          []
                                      expression (lib/Memoize.ml[86,3188+43]..[106,4179+18])
                                        Pexp_constraint
                                        expression (lib/Memoize.ml[87,3238+6]..[106,4179+18])
                                          Pexp_try
                                          expression (lib/Memoize.ml[88,3248+1]..[88,3248+15])
                                            Pexp_apply
                                            expression (lib/Memoize.ml[88,3248+1]..[88,3248+7])
                                              Pexp_ident "M.find" (lib/Memoize.ml[88,3248+1]..[88,3248+7])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/Memoize.ml[88,3248+8]..[88,3248+9])
                                                  Pexp_ident "x" (lib/Memoize.ml[88,3248+8]..[88,3248+9])
                                              <arg>
                                              Nolabel
                                                expression (lib/Memoize.ml[88,3248+10]..[88,3248+15])
                                                  Pexp_ident "table" (lib/Memoize.ml[88,3248+10]..[88,3248+15])
                                            ]
                                          [
                                            <case>
                                              pattern (lib/Memoize.ml[89,3264+11]..[89,3264+20])
                                                Ppat_construct "Not_found" (lib/Memoize.ml[89,3264+11]..[89,3264+20])
                                                None
                                              expression (lib/Memoize.ml[90,3288+8]..[106,4179+18])
                                                Pexp_match
                                                expression (lib/Memoize.ml[90,3288+14]..[90,3288+29])
                                                  Pexp_apply
                                                  expression (lib/Memoize.ml[90,3288+14]..[90,3288+20])
                                                    Pexp_ident "M.find" (lib/Memoize.ml[90,3288+14]..[90,3288+20])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/Memoize.ml[90,3288+21]..[90,3288+22])
                                                        Pexp_ident "x" (lib/Memoize.ml[90,3288+21]..[90,3288+22])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/Memoize.ml[90,3288+23]..[90,3288+29])
                                                        Pexp_ident "marked" (lib/Memoize.ml[90,3288+23]..[90,3288+29])
                                                  ]
                                                [
                                                  <case>
                                                    pattern (lib/Memoize.ml[91,3323+10]..[91,3323+11])
                                                      Ppat_var "i" (lib/Memoize.ml[91,3323+10]..[91,3323+11])
                                                    expression (lib/Memoize.ml[96,3628+12]..[96,3628+60])
                                                      Pexp_apply
                                                      expression (lib/Memoize.ml[96,3628+12]..[96,3628+17])
                                                        Pexp_ident "raise" (lib/Memoize.ml[96,3628+12]..[96,3628+17])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/Memoize.ml[96,3628+18]..[96,3628+60])
                                                            Pexp_construct "Cycle" (lib/Memoize.ml[96,3628+19]..[96,3628+24])
                                                            Some
                                                              expression (lib/Memoize.ml[96,3628+25]..[96,3628+59])
                                                                Pexp_tuple
                                                                [
                                                                  expression (lib/Memoize.ml[96,3628+26]..[96,3628+55])
                                                                    Pexp_apply
                                                                    expression (lib/Memoize.ml[96,3628+26]..[96,3628+34])
                                                                      Pexp_ident "rev_take" (lib/Memoize.ml[96,3628+26]..[96,3628+34])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (lib/Memoize.ml[96,3628+35]..[96,3628+37])
  Pexp_construct "[]" (lib/Memoize.ml[96,3628+35]..[96,3628+37])
  None
                                                                      <arg>
                                                                      Nolabel
expression (lib/Memoize.ml[96,3628+38]..[96,3628+49])
  Pexp_apply
  expression (lib/Memoize.ml[96,3628+45]..[96,3628+46])
    Pexp_ident "-" (lib/Memoize.ml[96,3628+45]..[96,3628+46])
  [
    <arg>
    Nolabel
      expression (lib/Memoize.ml[96,3628+39]..[96,3628+44])
        Pexp_ident "depth" (lib/Memoize.ml[96,3628+39]..[96,3628+44])
    <arg>
    Nolabel
      expression (lib/Memoize.ml[96,3628+47]..[96,3628+48])
        Pexp_ident "i" (lib/Memoize.ml[96,3628+47]..[96,3628+48])
  ]
                                                                      <arg>
                                                                      Nolabel
expression (lib/Memoize.ml[96,3628+50]..[96,3628+55])
  Pexp_ident "stack" (lib/Memoize.ml[96,3628+50]..[96,3628+55])
                                                                    ]
                                                                  expression (lib/Memoize.ml[96,3628+57]..[96,3628+58])
                                                                    Pexp_ident "x" (lib/Memoize.ml[96,3628+57]..[96,3628+58])
                                                                ]
                                                      ]
                                                  <case>
                                                    pattern (lib/Memoize.ml[97,3689+10]..[97,3689+29])
                                                      Ppat_exception
                                                      pattern (lib/Memoize.ml[97,3689+20]..[97,3689+29])
                                                        Ppat_construct "Not_found" (lib/Memoize.ml[97,3689+20]..[97,3689+29])
                                                        None
                                                    expression (lib/Memoize.ml[102,4022+12]..[106,4179+18])
                                                      Pexp_sequence
                                                      expression (lib/Memoize.ml[102,4022+12]..[102,4022+32])
                                                        Pexp_apply
                                                        expression (lib/Memoize.ml[102,4022+12]..[102,4022+17])
                                                          Pexp_ident "M.add" (lib/Memoize.ml[102,4022+12]..[102,4022+17])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/Memoize.ml[102,4022+18]..[102,4022+19])
                                                              Pexp_ident "x" (lib/Memoize.ml[102,4022+18]..[102,4022+19])
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/Memoize.ml[102,4022+20]..[102,4022+25])
                                                              Pexp_ident "depth" (lib/Memoize.ml[102,4022+20]..[102,4022+25])
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/Memoize.ml[102,4022+26]..[102,4022+32])
                                                              Pexp_ident "marked" (lib/Memoize.ml[102,4022+26]..[102,4022+32])
                                                        ]
                                                      expression (lib/Memoize.ml[103,4056+12]..[106,4179+18])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (lib/Memoize.ml[103,4056+16]..[103,4056+21])
                                                              Ppat_var "stack" (lib/Memoize.ml[103,4056+16]..[103,4056+21])
                                                            expression (lib/Memoize.ml[103,4056+24]..[103,4056+34])
                                                              Pexp_construct "::" (lib/Memoize.ml[103,4056+26]..[103,4056+28])
                                                              Some
                                                                expression (lib/Memoize.ml[103,4056+24]..[103,4056+34]) ghost
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (lib/Memoize.ml[103,4056+24]..[103,4056+25])
                                                                      Pexp_ident "x" (lib/Memoize.ml[103,4056+24]..[103,4056+25])
                                                                    expression (lib/Memoize.ml[103,4056+29]..[103,4056+34])
                                                                      Pexp_ident "stack" (lib/Memoize.ml[103,4056+29]..[103,4056+34])
                                                                  ]
                                                          <def>
                                                            pattern (lib/Memoize.ml[104,4091+16]..[104,4091+21])
                                                              Ppat_var "depth" (lib/Memoize.ml[104,4091+16]..[104,4091+21])
                                                            expression (lib/Memoize.ml[104,4091+24]..[104,4091+33])
                                                              Pexp_apply
                                                              expression (lib/Memoize.ml[104,4091+30]..[104,4091+31])
                                                                Pexp_ident "+" (lib/Memoize.ml[104,4091+30]..[104,4091+31])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/Memoize.ml[104,4091+24]..[104,4091+29])
                                                                    Pexp_ident "depth" (lib/Memoize.ml[104,4091+24]..[104,4091+29])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/Memoize.ml[104,4091+32]..[104,4091+33])
                                                                    Pexp_constant PConst_int (1,None)
                                                              ]
                                                        ]
                                                        expression (lib/Memoize.ml[105,4128+12]..[106,4179+18])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (lib/Memoize.ml[105,4128+16]..[105,4128+17])
                                                                Ppat_var "y" (lib/Memoize.ml[105,4128+16]..[105,4128+17])
                                                              expression (lib/Memoize.ml[105,4128+20]..[105,4128+47])
                                                                Pexp_apply
                                                                expression (lib/Memoize.ml[105,4128+20]..[105,4128+22])
                                                                  Pexp_ident "ff" (lib/Memoize.ml[105,4128+20]..[105,4128+22])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lib/Memoize.ml[105,4128+23]..[105,4128+45])
                                                                      Pexp_apply
                                                                      expression (lib/Memoize.ml[105,4128+24]..[105,4128+25])
Pexp_ident "f" (lib/Memoize.ml[105,4128+24]..[105,4128+25])
                                                                      [
<arg>
Nolabel
  expression (lib/Memoize.ml[105,4128+26]..[105,4128+31])
    Pexp_ident "stack" (lib/Memoize.ml[105,4128+26]..[105,4128+31])
<arg>
Nolabel
  expression (lib/Memoize.ml[105,4128+32]..[105,4128+37])
    Pexp_ident "depth" (lib/Memoize.ml[105,4128+32]..[105,4128+37])
<arg>
Nolabel
  expression (lib/Memoize.ml[105,4128+38]..[105,4128+44])
    Pexp_ident "marked" (lib/Memoize.ml[105,4128+38]..[105,4128+44])
                                                                      ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lib/Memoize.ml[105,4128+46]..[105,4128+47])
                                                                      Pexp_ident "x" (lib/Memoize.ml[105,4128+46]..[105,4128+47])
                                                                ]
                                                          ]
                                                          expression (lib/Memoize.ml[106,4179+5]..[106,4179+18])
                                                            Pexp_apply
                                                            expression (lib/Memoize.ml[106,4179+5]..[106,4179+8])
                                                              Pexp_ident "add" (lib/Memoize.ml[106,4179+5]..[106,4179+8])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/Memoize.ml[106,4179+9]..[106,4179+10])
                                                                  Pexp_ident "x" (lib/Memoize.ml[106,4179+9]..[106,4179+10])
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/Memoize.ml[106,4179+11]..[106,4179+12])
                                                                  Pexp_ident "y" (lib/Memoize.ml[106,4179+11]..[106,4179+12])
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/Memoize.ml[106,4179+13]..[106,4179+18])
                                                                  Pexp_ident "table" (lib/Memoize.ml[106,4179+13]..[106,4179+18])
                                                            ]
                                                ]
                                          ]
                                        core_type (lib/Memoize.ml[86,3188+45]..[86,3188+47])
                                          Ptyp_var a
                          ]
                          expression (lib/Memoize.ml[108,4205+4]..[114,4363+28])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lib/Memoize.ml[108,4205+8]..[108,4205+9])
                              Ppat_var "x" (lib/Memoize.ml[108,4205+8]..[108,4205+9])
                            expression (lib/Memoize.ml[110,4258+6]..[114,4363+28])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/Memoize.ml[110,4258+10]..[110,4258+16])
                                    Ppat_var "marked" (lib/Memoize.ml[110,4258+10]..[110,4258+16])
                                  expression (lib/Memoize.ml[110,4258+19]..[110,4258+29])
                                    Pexp_apply
                                    expression (lib/Memoize.ml[110,4258+19]..[110,4258+27])
                                      Pexp_ident "M.create" (lib/Memoize.ml[110,4258+19]..[110,4258+27])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/Memoize.ml[110,4258+27]..[110,4258+29])
                                          Pexp_construct "()" (lib/Memoize.ml[110,4258+27]..[110,4258+29])
                                          None
                                    ]
                                <def>
                                  pattern (lib/Memoize.ml[111,4288+10]..[111,4288+15])
                                    Ppat_var "stack" (lib/Memoize.ml[111,4288+10]..[111,4288+15])
                                  expression (lib/Memoize.ml[111,4288+18]..[111,4288+20])
                                    Pexp_construct "[]" (lib/Memoize.ml[111,4288+18]..[111,4288+20])
                                    None
                                <def>
                                  pattern (lib/Memoize.ml[112,4309+10]..[112,4309+15])
                                    Ppat_var "depth" (lib/Memoize.ml[112,4309+10]..[112,4309+15])
                                  expression (lib/Memoize.ml[112,4309+18]..[112,4309+19])
                                    Pexp_constant PConst_int (0,None)
                              ]
                              expression (lib/Memoize.ml[114,4363+6]..[114,4363+28])
                                Pexp_apply
                                expression (lib/Memoize.ml[114,4363+6]..[114,4363+7])
                                  Pexp_ident "f" (lib/Memoize.ml[114,4363+6]..[114,4363+7])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/Memoize.ml[114,4363+8]..[114,4363+13])
                                      Pexp_ident "stack" (lib/Memoize.ml[114,4363+8]..[114,4363+13])
                                  <arg>
                                  Nolabel
                                    expression (lib/Memoize.ml[114,4363+14]..[114,4363+19])
                                      Pexp_ident "depth" (lib/Memoize.ml[114,4363+14]..[114,4363+19])
                                  <arg>
                                  Nolabel
                                    expression (lib/Memoize.ml[114,4363+20]..[114,4363+26])
                                      Pexp_ident "marked" (lib/Memoize.ml[114,4363+20]..[114,4363+26])
                                  <arg>
                                  Nolabel
                                    expression (lib/Memoize.ml[114,4363+27]..[114,4363+28])
                                      Pexp_ident "x" (lib/Memoize.ml[114,4363+27]..[114,4363+28])
                                ]
                      core_type (lib/Memoize.ml[82,3006+56]..[82,3006+65])
                        Ptyp_arrow
                        Nolabel
                        core_type (lib/Memoize.ml[82,3006+56]..[82,3006+59])
                          Ptyp_constr "key" (lib/Memoize.ml[82,3006+56]..[82,3006+59])
                          []
                        core_type (lib/Memoize.ml[82,3006+63]..[82,3006+65])
                          Ptyp_var a
              ]
            structure_item (lib/Memoize.ml[123,4725+2]..[123,4725+30])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/Memoize.ml[123,4725+8]..[123,4725+13])
                    Ppat_var "curry" (lib/Memoize.ml[123,4725+8]..[123,4725+13])
                  expression (lib/Memoize.ml[123,4725+14]..[123,4725+30]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lib/Memoize.ml[123,4725+14]..[123,4725+15])
                      Ppat_var "f" (lib/Memoize.ml[123,4725+14]..[123,4725+15])
                    expression (lib/Memoize.ml[123,4725+16]..[123,4725+30]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lib/Memoize.ml[123,4725+16]..[123,4725+17])
                        Ppat_var "x" (lib/Memoize.ml[123,4725+16]..[123,4725+17])
                      expression (lib/Memoize.ml[123,4725+18]..[123,4725+30]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lib/Memoize.ml[123,4725+18]..[123,4725+19])
                          Ppat_var "y" (lib/Memoize.ml[123,4725+18]..[123,4725+19])
                        expression (lib/Memoize.ml[123,4725+22]..[123,4725+30])
                          Pexp_apply
                          expression (lib/Memoize.ml[123,4725+22]..[123,4725+23])
                            Pexp_ident "f" (lib/Memoize.ml[123,4725+22]..[123,4725+23])
                          [
                            <arg>
                            Nolabel
                              expression (lib/Memoize.ml[123,4725+24]..[123,4725+30])
                                Pexp_tuple
                                [
                                  expression (lib/Memoize.ml[123,4725+25]..[123,4725+26])
                                    Pexp_ident "x" (lib/Memoize.ml[123,4725+25]..[123,4725+26])
                                  expression (lib/Memoize.ml[123,4725+28]..[123,4725+29])
                                    Pexp_ident "y" (lib/Memoize.ml[123,4725+28]..[123,4725+29])
                                ]
                          ]
              ]
            structure_item (lib/Memoize.ml[124,4756+2]..[124,4756+30])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/Memoize.ml[124,4756+6]..[124,4756+13])
                    Ppat_var "uncurry" (lib/Memoize.ml[124,4756+6]..[124,4756+13])
                  expression (lib/Memoize.ml[124,4756+14]..[124,4756+30]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lib/Memoize.ml[124,4756+14]..[124,4756+15])
                      Ppat_var "f" (lib/Memoize.ml[124,4756+14]..[124,4756+15])
                    expression (lib/Memoize.ml[124,4756+16]..[124,4756+30]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lib/Memoize.ml[124,4756+16]..[124,4756+22])
                        Ppat_tuple
                        [
                          pattern (lib/Memoize.ml[124,4756+17]..[124,4756+18])
                            Ppat_var "x" (lib/Memoize.ml[124,4756+17]..[124,4756+18])
                          pattern (lib/Memoize.ml[124,4756+20]..[124,4756+21])
                            Ppat_var "y" (lib/Memoize.ml[124,4756+20]..[124,4756+21])
                        ]
                      expression (lib/Memoize.ml[124,4756+25]..[124,4756+30])
                        Pexp_apply
                        expression (lib/Memoize.ml[124,4756+25]..[124,4756+26])
                          Pexp_ident "f" (lib/Memoize.ml[124,4756+25]..[124,4756+26])
                        [
                          <arg>
                          Nolabel
                            expression (lib/Memoize.ml[124,4756+27]..[124,4756+28])
                              Pexp_ident "x" (lib/Memoize.ml[124,4756+27]..[124,4756+28])
                          <arg>
                          Nolabel
                            expression (lib/Memoize.ml[124,4756+29]..[124,4756+30])
                              Pexp_ident "y" (lib/Memoize.ml[124,4756+29]..[124,4756+30])
                        ]
              ]
            structure_item (lib/Memoize.ml[126,4788+2]..[129,4912+20])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/Memoize.ml[126,4788+6]..[126,4788+13])
                    Ppat_var "curried" (lib/Memoize.ml[126,4788+6]..[126,4788+13])
                  expression (lib/Memoize.ml[126,4788+14]..[129,4912+20]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lib/Memoize.ml[126,4788+14]..[126,4788+41])
                      Ppat_constraint
                      pattern (lib/Memoize.ml[126,4788+15]..[126,4788+18])
                        Ppat_var "fix" (lib/Memoize.ml[126,4788+15]..[126,4788+18])
                      core_type (lib/Memoize.ml[126,4788+21]..[126,4788+40])
                        Ptyp_constr "fix" (lib/Memoize.ml[126,4788+37]..[126,4788+40])
                        [
                          core_type (lib/Memoize.ml[126,4788+22]..[126,4788+35])
                            Ptyp_arrow
                            Nolabel
                            core_type (lib/Memoize.ml[126,4788+22]..[126,4788+29])
                              Ptyp_tuple
                              [
                                core_type (lib/Memoize.ml[126,4788+22]..[126,4788+24])
                                  Ptyp_var a
                                core_type (lib/Memoize.ml[126,4788+27]..[126,4788+29])
                                  Ptyp_var b
                              ]
                            core_type (lib/Memoize.ml[126,4788+33]..[126,4788+35])
                              Ptyp_var c
                        ]
                    expression (lib/Memoize.ml[126,4788+42]..[129,4912+20])
                      Pexp_constraint
                      expression (lib/Memoize.ml[127,4855+4]..[129,4912+20])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lib/Memoize.ml[127,4855+8]..[127,4855+10])
                          Ppat_var "ff" (lib/Memoize.ml[127,4855+8]..[127,4855+10])
                        expression (lib/Memoize.ml[128,4869+6]..[129,4912+20])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lib/Memoize.ml[128,4869+10]..[128,4869+12])
                                Ppat_var "ff" (lib/Memoize.ml[128,4869+10]..[128,4869+12])
                              expression (lib/Memoize.ml[128,4869+13]..[128,4869+39]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/Memoize.ml[128,4869+13]..[128,4869+14])
                                  Ppat_var "f" (lib/Memoize.ml[128,4869+13]..[128,4869+14])
                                expression (lib/Memoize.ml[128,4869+17]..[128,4869+39])
                                  Pexp_apply
                                  expression (lib/Memoize.ml[128,4869+17]..[128,4869+24])
                                    Pexp_ident "uncurry" (lib/Memoize.ml[128,4869+17]..[128,4869+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/Memoize.ml[128,4869+25]..[128,4869+39])
                                        Pexp_apply
                                        expression (lib/Memoize.ml[128,4869+26]..[128,4869+28])
                                          Pexp_ident "ff" (lib/Memoize.ml[128,4869+26]..[128,4869+28])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/Memoize.ml[128,4869+29]..[128,4869+38])
                                              Pexp_apply
                                              expression (lib/Memoize.ml[128,4869+30]..[128,4869+35])
                                                Pexp_ident "curry" (lib/Memoize.ml[128,4869+30]..[128,4869+35])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/Memoize.ml[128,4869+36]..[128,4869+37])
                                                    Pexp_ident "f" (lib/Memoize.ml[128,4869+36]..[128,4869+37])
                                              ]
                                        ]
                                  ]
                          ]
                          expression (lib/Memoize.ml[129,4912+6]..[129,4912+20])
                            Pexp_apply
                            expression (lib/Memoize.ml[129,4912+6]..[129,4912+11])
                              Pexp_ident "curry" (lib/Memoize.ml[129,4912+6]..[129,4912+11])
                            [
                              <arg>
                              Nolabel
                                expression (lib/Memoize.ml[129,4912+12]..[129,4912+20])
                                  Pexp_apply
                                  expression (lib/Memoize.ml[129,4912+13]..[129,4912+16])
                                    Pexp_ident "fix" (lib/Memoize.ml[129,4912+13]..[129,4912+16])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/Memoize.ml[129,4912+17]..[129,4912+19])
                                        Pexp_ident "ff" (lib/Memoize.ml[129,4912+17]..[129,4912+19])
                                  ]
                            ]
                      core_type (lib/Memoize.ml[126,4788+44]..[126,4788+64])
                        Ptyp_constr "fix" (lib/Memoize.ml[126,4788+61]..[126,4788+64])
                        [
                          core_type (lib/Memoize.ml[126,4788+45]..[126,4788+59])
                            Ptyp_arrow
                            Nolabel
                            core_type (lib/Memoize.ml[126,4788+45]..[126,4788+47])
                              Ptyp_var a
                            core_type (lib/Memoize.ml[126,4788+51]..[126,4788+59])
                              Ptyp_arrow
                              Nolabel
                              core_type (lib/Memoize.ml[126,4788+51]..[126,4788+53])
                                Ptyp_var b
                              core_type (lib/Memoize.ml[126,4788+57]..[126,4788+59])
                                Ptyp_var c
                        ]
              ]
          ]
  structure_item (lib/Memoize.ml[133,4939+0]..[134,4981+56])
    Pstr_module
    "ForOrderedType" (lib/Memoize.ml[133,4939+7]..[133,4939+21])
      module_expr (lib/Memoize.ml[133,4939+22]..[134,4981+56])
        Pmod_functor "T" (lib/Memoize.ml[133,4939+23]..[133,4939+24])
        module_type (lib/Memoize.ml[133,4939+27]..[133,4939+38])
          Pmty_ident "OrderedType" (lib/Memoize.ml[133,4939+27]..[133,4939+38])
        module_expr (lib/Memoize.ml[134,4981+2]..[134,4981+56])
          Pmod_apply
          module_expr (lib/Memoize.ml[134,4981+2]..[134,4981+6])
            Pmod_ident "Make" (lib/Memoize.ml[134,4981+2]..[134,4981+6])
          module_expr (lib/Memoize.ml[134,4981+7]..[134,4981+55])
            Pmod_apply
            module_expr (lib/Memoize.ml[134,4981+7]..[134,4981+42])
              Pmod_ident "Glue.PersistentMapsToImperativeMaps" (lib/Memoize.ml[134,4981+7]..[134,4981+42])
            module_expr (lib/Memoize.ml[134,4981+43]..[134,4981+54])
              Pmod_apply
              module_expr (lib/Memoize.ml[134,4981+43]..[134,4981+51])
                Pmod_ident "Map.Make" (lib/Memoize.ml[134,4981+43]..[134,4981+51])
              module_expr (lib/Memoize.ml[134,4981+52]..[134,4981+53])
                Pmod_ident "T" (lib/Memoize.ml[134,4981+52]..[134,4981+53])
  structure_item (lib/Memoize.ml[136,5039+0]..[137,5079+42])
    Pstr_module
    "ForHashedType" (lib/Memoize.ml[136,5039+7]..[136,5039+20])
      module_expr (lib/Memoize.ml[136,5039+21]..[137,5079+42])
        Pmod_functor "T" (lib/Memoize.ml[136,5039+22]..[136,5039+23])
        module_type (lib/Memoize.ml[136,5039+26]..[136,5039+36])
          Pmty_ident "HashedType" (lib/Memoize.ml[136,5039+26]..[136,5039+36])
        module_expr (lib/Memoize.ml[137,5079+2]..[137,5079+42])
          Pmod_apply
          module_expr (lib/Memoize.ml[137,5079+2]..[137,5079+6])
            Pmod_ident "Make" (lib/Memoize.ml[137,5079+2]..[137,5079+6])
          module_expr (lib/Memoize.ml[137,5079+7]..[137,5079+41])
            Pmod_apply
            module_expr (lib/Memoize.ml[137,5079+7]..[137,5079+38])
              Pmod_ident "Glue.HashTablesAsImperativeMaps" (lib/Memoize.ml[137,5079+7]..[137,5079+38])
            module_expr (lib/Memoize.ml[137,5079+39]..[137,5079+40])
              Pmod_ident "T" (lib/Memoize.ml[137,5079+39]..[137,5079+40])
  structure_item (lib/Memoize.ml[139,5123+0]..[140,5151+42])
    Pstr_module
    "ForType" (lib/Memoize.ml[139,5123+7]..[139,5123+14])
      module_expr (lib/Memoize.ml[139,5123+15]..[140,5151+42])
        Pmod_functor "T" (lib/Memoize.ml[139,5123+16]..[139,5123+17])
        module_type (lib/Memoize.ml[139,5123+20]..[139,5123+24])
          Pmty_ident "TYPE" (lib/Memoize.ml[139,5123+20]..[139,5123+24])
        module_expr (lib/Memoize.ml[140,5151+2]..[140,5151+42])
          Pmod_apply
          module_expr (lib/Memoize.ml[140,5151+2]..[140,5151+15])
            Pmod_ident "ForHashedType" (lib/Memoize.ml[140,5151+2]..[140,5151+15])
          module_expr (lib/Memoize.ml[140,5151+16]..[140,5151+41])
            Pmod_apply
            module_expr (lib/Memoize.ml[140,5151+16]..[140,5151+38])
              Pmod_ident "Glue.TrivialHashedType" (lib/Memoize.ml[140,5151+16]..[140,5151+38])
            module_expr (lib/Memoize.ml[140,5151+39]..[140,5151+40])
              Pmod_ident "T" (lib/Memoize.ml[140,5151+39]..[140,5151+40])
  structure_item (lib/Memoize.ml[142,5195+0]..[143,5209+20])
    Pstr_module
    "Char" (lib/Memoize.ml[142,5195+7]..[142,5195+11])
      module_expr (lib/Memoize.ml[143,5209+2]..[143,5209+20])
        Pmod_apply
        module_expr (lib/Memoize.ml[143,5209+2]..[143,5209+9])
          Pmod_ident "ForType" (lib/Memoize.ml[143,5209+2]..[143,5209+9])
        module_expr (lib/Memoize.ml[143,5209+10]..[143,5209+19])
          Pmod_ident "Glue.CHAR" (lib/Memoize.ml[143,5209+10]..[143,5209+19])
  structure_item (lib/Memoize.ml[145,5231+0]..[146,5244+19])
    Pstr_module
    "Int" (lib/Memoize.ml[145,5231+7]..[145,5231+10])
      module_expr (lib/Memoize.ml[146,5244+2]..[146,5244+19])
        Pmod_apply
        module_expr (lib/Memoize.ml[146,5244+2]..[146,5244+9])
          Pmod_ident "ForType" (lib/Memoize.ml[146,5244+2]..[146,5244+9])
        module_expr (lib/Memoize.ml[146,5244+10]..[146,5244+18])
          Pmod_ident "Glue.INT" (lib/Memoize.ml[146,5244+10]..[146,5244+18])
  structure_item (lib/Memoize.ml[148,5265+0]..[149,5281+22])
    Pstr_module
    "String" (lib/Memoize.ml[148,5265+7]..[148,5265+13])
      module_expr (lib/Memoize.ml[149,5281+2]..[149,5281+22])
        Pmod_apply
        module_expr (lib/Memoize.ml[149,5281+2]..[149,5281+9])
          Pmod_ident "ForType" (lib/Memoize.ml[149,5281+2]..[149,5281+9])
        module_expr (lib/Memoize.ml[149,5281+10]..[149,5281+21])
          Pmod_ident "Glue.STRING" (lib/Memoize.ml[149,5281+10]..[149,5281+21])
  structure_item (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
          Ppat_construct "()" (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
          None
        expression (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
          Pexp_apply
          expression (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
            Pexp_ident "Ppx_inline_test_lib.unset_lib" (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
          [
            <arg>
            Nolabel
              expression (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost,None)
          ]
    ]
  structure_item (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
          Ppat_construct "()" (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
          None
        expression (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
          Pexp_apply
          expression (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
            Pexp_ident "Expect_test_collector.Current_file.unset" (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
          [
            <arg>
            Nolabel
              expression (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
                Pexp_construct "()" (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
                None
          ]
    ]
  structure_item (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
          Ppat_construct "()" (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
          None
        expression (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
          Pexp_apply
          expression (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
            Pexp_ident "Ppx_bench_lib.Benchmark_accumulator.Current_libname.unset" (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
          [
            <arg>
            Nolabel
              expression (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
                Pexp_construct "()" (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
                None
          ]
    ]
  structure_item (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
          Ppat_construct "()" (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
          None
        expression (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
          Pexp_apply
          expression (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
            Pexp_ident "Ppx_module_timer_runtime.record_until" (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
          [
            <arg>
            Nolabel
              expression (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
                Pexp_ident "Ppx_module_timer_runtime.__MODULE__" (lib/Memoize.ml[149,5281+22]..[149,5281+22]) ghost
          ]
    ]
]

[@@@ocaml.ppx.context
  {
    tool_name = "ppx_driver";
    include_dirs = [];
    load_path = [];
    open_modules = [];
    for_package = None;
    debug = false;
    use_threads = false;
    use_vmthreads = false;
    recursive_types = false;
    principal = false;
    transparent_modules = false;
    unboxed_types = false;
    unsafe_string = false;
    cookies = [("inline_tests", "enabled"); ("library-name", "gbnf_parser")]
  }]
let () =
  Ppx_module_timer_runtime.record_start Ppx_module_timer_runtime.__MODULE__
let () =
  Ppx_bench_lib.Benchmark_accumulator.Current_libname.set "gbnf_parser"
let () =
  Expect_test_collector.Current_file.set ~absolute_filename:"lib/Memoize.ml"
let () = Ppx_inline_test_lib.set_lib_and_partition "gbnf_parser" "Memoize.ml"
open Sigs
let rec rev_take accu n xs =
  match (n, xs) with
  | (0, _) -> accu
  | (_, []) -> assert false
  | (_, x::xs) -> rev_take (x :: accu) (n - 1) xs
module Make(M:IMPERATIVE_MAPS) =
  struct
    type key = M.key
    let add x y table = M.add x y table; y
    type 'a t = 'a M.t
    let visibly_memoize (f : key -> 'a) =
      (let table = M.create () in
       let f x = try M.find x table with | Not_found -> add x (f x) table in
       (f, table) : ((key -> 'a) * 'a t))
    let memoize (f : key -> 'a) =
      (let (f, _table) = visibly_memoize f in f : key -> 'a)
    let fix (ff : (key -> 'a) -> key -> 'a) =
      (let table = M.create () in
       let rec f x =
         try M.find x table with | Not_found -> add x (ff f x) table in
       f : key -> 'a)
    exception Cycle of key list * key 
    let defensive_fix (ff : (key -> 'a) -> key -> 'a) =
      (let table = M.create () in
       let rec f stack depth marked (x : key) =
         (try M.find x table
          with
          | Not_found ->
              (match M.find x marked with
               | i -> raise (Cycle ((rev_take [] (depth - i) stack), x))
               | exception Not_found ->
                   (M.add x depth marked;
                    (let stack = x :: stack
                     and depth = depth + 1 in
                     let y = ff (f stack depth marked) x in add x y table))) : 
         'a) in
       fun x ->
         let marked = M.create ()
         and stack = []
         and depth = 0 in f stack depth marked x : key -> 'a)
    let curry f x y = f (x, y)
    let uncurry f (x, y) = f x y
    let curried (fix : (('a * 'b) -> 'c) fix) =
      (fun ff -> let ff f = uncurry (ff (curry f)) in curry (fix ff) : 
      ('a -> 'b -> 'c) fix)
  end
module ForOrderedType(T:OrderedType) =
  (Make)((Glue.PersistentMapsToImperativeMaps)((Map.Make)(T)))
module ForHashedType(T:HashedType) =
  (Make)((Glue.HashTablesAsImperativeMaps)(T))
module ForType(T:TYPE) = (ForHashedType)((Glue.TrivialHashedType)(T))
module Char = (ForType)(Glue.CHAR)
module Int = (ForType)(Glue.INT)
module String = (ForType)(Glue.STRING)
let () = Ppx_inline_test_lib.unset_lib "gbnf_parser"
let () = Expect_test_collector.Current_file.unset ()
let () = Ppx_bench_lib.Benchmark_accumulator.Current_libname.unset ()
let () =
  Ppx_module_timer_runtime.record_until Ppx_module_timer_runtime.__MODULE__
[
  structure_item (_none_[0,0+-1].._none_[0,0+-1]) ghost
    Tstr_attribute "ocaml.ppx.context"
    [
      structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
        Pstr_eval
        expression (_none_[0,0+-1]..[0,0+-1]) ghost
          Pexp_record
          [
            "tool_name" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_constant PConst_string("ppx_driver",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
            "include_dirs" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "load_path" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "open_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "for_package" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "None" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "debug" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_threads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_vmthreads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "recursive_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "principal" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "transparent_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unboxed_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unsafe_string" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "cookies" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                Some
                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                    Pexp_tuple
                    [
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_tuple
                        [
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_constant PConst_string("inline_tests",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                          expression (<command-line>[1,0+0]..[1,0+9])
                            Pexp_constant PConst_string("enabled",(<command-line>[1,0+1]..[1,0+8]),None)
                        ]
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                        Some
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_tuple
                            [
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_tuple
                                [
                                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                    Pexp_constant PConst_string("library-name",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                                  expression (<command-line>[1,0+0]..[1,0+13])
                                    Pexp_constant PConst_string("gbnf_parser",(<command-line>[1,0+1]..[1,0+12]),None)
                                ]
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                                None
                            ]
                    ]
          ]
          None
    ]
  structure_item (lib/Memoize.ml[13,893+0]..lib/Memoize.ml[13,893+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/Memoize.ml[13,893+0]..lib/Memoize.ml[13,893+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/Memoize.ml[13,893+0]..lib/Memoize.ml[13,893+0]) ghost
          Texp_apply
          expression (lib/Memoize.ml[13,893+0]..lib/Memoize.ml[13,893+0]) ghost
            Texp_ident "Ppx_module_timer_runtime!.record_start"
          [
            <arg>
              Nolabel
              expression (lib/Memoize.ml[13,893+0]..lib/Memoize.ml[13,893+0]) ghost
                Texp_ident "Ppx_module_timer_runtime!.__MODULE__"
          ]
    ]
  structure_item (lib/Memoize.ml[13,893+0]..lib/Memoize.ml[13,893+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/Memoize.ml[13,893+0]..lib/Memoize.ml[13,893+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/Memoize.ml[13,893+0]..lib/Memoize.ml[13,893+0]) ghost
          Texp_apply
          expression (lib/Memoize.ml[13,893+0]..lib/Memoize.ml[13,893+0]) ghost
            Texp_ident "Ppx_bench_lib!.Benchmark_accumulator.Current_libname.set"
          [
            <arg>
              Nolabel
              expression (lib/Memoize.ml[13,893+0]..lib/Memoize.ml[13,893+0]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/Memoize.ml[13,893+0]..lib/Memoize.ml[13,893+0]) ghost,None)
          ]
    ]
  structure_item (lib/Memoize.ml[13,893+0]..lib/Memoize.ml[13,893+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/Memoize.ml[13,893+0]..lib/Memoize.ml[13,893+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/Memoize.ml[13,893+0]..lib/Memoize.ml[13,893+0]) ghost
          Texp_apply
          expression (lib/Memoize.ml[13,893+0]..lib/Memoize.ml[13,893+0]) ghost
            Texp_ident "Expect_test_collector!.Current_file.set"
          [
            <arg>
              Labelled "absolute_filename"
              expression (lib/Memoize.ml[13,893+0]..lib/Memoize.ml[13,893+0]) ghost
                Texp_constant Const_string("lib/Memoize.ml",(lib/Memoize.ml[13,893+0]..lib/Memoize.ml[13,893+0]) ghost,None)
          ]
    ]
  structure_item (lib/Memoize.ml[13,893+0]..lib/Memoize.ml[13,893+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/Memoize.ml[13,893+0]..lib/Memoize.ml[13,893+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/Memoize.ml[13,893+0]..lib/Memoize.ml[13,893+0]) ghost
          Texp_apply
          expression (lib/Memoize.ml[13,893+0]..lib/Memoize.ml[13,893+0]) ghost
            Texp_ident "Ppx_inline_test_lib!.set_lib_and_partition"
          [
            <arg>
              Nolabel
              expression (lib/Memoize.ml[13,893+0]..lib/Memoize.ml[13,893+0]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/Memoize.ml[13,893+0]..lib/Memoize.ml[13,893+0]) ghost,None)
            <arg>
              Nolabel
              expression (lib/Memoize.ml[13,893+0]..lib/Memoize.ml[13,893+0]) ghost
                Texp_constant Const_string("Memoize.ml",(lib/Memoize.ml[13,893+0]..lib/Memoize.ml[13,893+0]) ghost,None)
          ]
    ]
  structure_item (lib/Memoize.ml[13,893+0]..lib/Memoize.ml[13,893+9])
    Tstr_open Fresh
    module_expr (lib/Memoize.ml[13,893+5]..lib/Memoize.ml[13,893+9])
      Tmod_ident "Gbnf_parser!.Sigs"
  structure_item (lib/Memoize.ml[19,1073+0]..lib/Memoize.ml[27,1249+37])
    Tstr_value Rec
    [
      <def>
        pattern (lib/Memoize.ml[19,1073+8]..lib/Memoize.ml[19,1073+16])
          Tpat_var "rev_take/1153"
        expression (lib/Memoize.ml[19,1073+17]..lib/Memoize.ml[27,1249+37]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/Memoize.ml[19,1073+17]..lib/Memoize.ml[19,1073+21])
                Tpat_var "accu/1154"
              expression (lib/Memoize.ml[19,1073+22]..lib/Memoize.ml[27,1249+37]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/Memoize.ml[19,1073+22]..lib/Memoize.ml[19,1073+23])
                      Tpat_var "n/1155"
                    expression (lib/Memoize.ml[19,1073+24]..lib/Memoize.ml[27,1249+37]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/Memoize.ml[19,1073+24]..lib/Memoize.ml[19,1073+26])
                            Tpat_var "xs/1156"
                          expression (lib/Memoize.ml[20,1102+2]..lib/Memoize.ml[27,1249+37])
                            Texp_match
                            expression (lib/Memoize.ml[20,1102+8]..lib/Memoize.ml[20,1102+13])
                              Texp_tuple
                              [
                                expression (lib/Memoize.ml[20,1102+8]..lib/Memoize.ml[20,1102+9])
                                  Texp_ident "n/1155"
                                expression (lib/Memoize.ml[20,1102+11]..lib/Memoize.ml[20,1102+13])
                                  Texp_ident "xs/1156"
                              ]
                            [
                              <case>
                                pattern (lib/Memoize.ml[21,1121+4]..lib/Memoize.ml[21,1121+8])
                                  Tpat_value
                                  pattern (lib/Memoize.ml[21,1121+4]..lib/Memoize.ml[21,1121+8])
                                    Tpat_tuple
                                    [
                                      pattern (lib/Memoize.ml[21,1121+4]..lib/Memoize.ml[21,1121+5])
                                        Tpat_constant Const_int 0
                                      pattern (lib/Memoize.ml[21,1121+7]..lib/Memoize.ml[21,1121+8])
                                        Tpat_any
                                    ]
                                expression (lib/Memoize.ml[22,1133+6]..lib/Memoize.ml[22,1133+10])
                                  Texp_ident "accu/1154"
                              <case>
                                pattern (lib/Memoize.ml[23,1144+4]..lib/Memoize.ml[23,1144+9])
                                  Tpat_value
                                  pattern (lib/Memoize.ml[23,1144+4]..lib/Memoize.ml[23,1144+9])
                                    Tpat_tuple
                                    [
                                      pattern (lib/Memoize.ml[23,1144+4]..lib/Memoize.ml[23,1144+5])
                                        Tpat_any
                                      pattern (lib/Memoize.ml[23,1144+7]..lib/Memoize.ml[23,1144+9])
                                        Tpat_construct "[]"
                                        []
                                        None
                                    ]
                                expression (lib/Memoize.ml[25,1212+6]..lib/Memoize.ml[25,1212+18])
                                  Texp_assert                                  expression (lib/Memoize.ml[25,1212+13]..lib/Memoize.ml[25,1212+18])
                                    Texp_construct "false"
                                    []
                              <case>
                                pattern (lib/Memoize.ml[26,1231+4]..lib/Memoize.ml[26,1231+14])
                                  Tpat_value
                                  pattern (lib/Memoize.ml[26,1231+4]..lib/Memoize.ml[26,1231+14])
                                    Tpat_tuple
                                    [
                                      pattern (lib/Memoize.ml[26,1231+4]..lib/Memoize.ml[26,1231+5])
                                        Tpat_any
                                      pattern (lib/Memoize.ml[26,1231+7]..lib/Memoize.ml[26,1231+14])
                                        Tpat_construct "::"
                                        [
                                          pattern (lib/Memoize.ml[26,1231+7]..lib/Memoize.ml[26,1231+8])
                                            Tpat_var "x/1157"
                                          pattern (lib/Memoize.ml[26,1231+12]..lib/Memoize.ml[26,1231+14])
                                            Tpat_var "xs/1158"
                                        ]
                                        None
                                    ]
                                expression (lib/Memoize.ml[27,1249+6]..lib/Memoize.ml[27,1249+37])
                                  Texp_apply
                                  expression (lib/Memoize.ml[27,1249+6]..lib/Memoize.ml[27,1249+14])
                                    Texp_ident "rev_take/1153"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/Memoize.ml[27,1249+15]..lib/Memoize.ml[27,1249+26])
                                        Texp_construct "::"
                                        [
                                          expression (lib/Memoize.ml[27,1249+16]..lib/Memoize.ml[27,1249+17])
                                            Texp_ident "x/1157"
                                          expression (lib/Memoize.ml[27,1249+21]..lib/Memoize.ml[27,1249+25])
                                            Texp_ident "accu/1154"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (lib/Memoize.ml[27,1249+27]..lib/Memoize.ml[27,1249+34])
                                        Texp_apply
                                        expression (lib/Memoize.ml[27,1249+30]..lib/Memoize.ml[27,1249+31])
                                          Texp_ident "Stdlib!.-"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/Memoize.ml[27,1249+28]..lib/Memoize.ml[27,1249+29])
                                              Texp_ident "n/1155"
                                          <arg>
                                            Nolabel
                                            expression (lib/Memoize.ml[27,1249+32]..lib/Memoize.ml[27,1249+33])
                                              Texp_constant Const_int 1
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (lib/Memoize.ml[27,1249+35]..lib/Memoize.ml[27,1249+37])
                                        Texp_ident "xs/1158"
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/Memoize.ml[29,1288+0]..lib/Memoize.ml[131,4934+3])
    Tstr_module
    Make/1247
      module_expr (lib/Memoize.ml[29,1288+12]..lib/Memoize.ml[131,4934+3])
        Tmod_functor "M/1187"
        module_type (lib/Memoize.ml[29,1288+17]..lib/Memoize.ml[29,1288+32])
          Tmty_ident "Gbnf_parser!.Sigs.IMPERATIVE_MAPS"
        module_expr (lib/Memoize.ml[29,1288+36]..lib/Memoize.ml[131,4934+3])
          Tmod_structure
          [
            structure_item (lib/Memoize.ml[31,1332+2]..lib/Memoize.ml[31,1332+18])
              Tstr_type Rec
              [
                type_declaration key/1188 (lib/Memoize.ml[31,1332+2]..lib/Memoize.ml[31,1332+18])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (lib/Memoize.ml[31,1332+13]..lib/Memoize.ml[31,1332+18])
                        Ttyp_constr "M/1187.key"
                        []
              ]
            structure_item (lib/Memoize.ml[33,1352+2]..lib/Memoize.ml[35,1395+5])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/Memoize.ml[33,1352+6]..lib/Memoize.ml[33,1352+9])
                    Tpat_var "add/1189"
                  expression (lib/Memoize.ml[33,1352+10]..lib/Memoize.ml[35,1395+5]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (lib/Memoize.ml[33,1352+10]..lib/Memoize.ml[33,1352+11])
                          Tpat_var "x/1191"
                        expression (lib/Memoize.ml[33,1352+12]..lib/Memoize.ml[35,1395+5]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (lib/Memoize.ml[33,1352+12]..lib/Memoize.ml[33,1352+13])
                                Tpat_var "y/1192"
                              expression (lib/Memoize.ml[33,1352+14]..lib/Memoize.ml[35,1395+5]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/Memoize.ml[33,1352+14]..lib/Memoize.ml[33,1352+19])
                                      Tpat_var "table/1193"
                                    expression (lib/Memoize.ml[34,1374+4]..lib/Memoize.ml[35,1395+5])
                                      Texp_sequence
                                      expression (lib/Memoize.ml[34,1374+4]..lib/Memoize.ml[34,1374+19])
                                        Texp_apply
                                        expression (lib/Memoize.ml[34,1374+4]..lib/Memoize.ml[34,1374+9])
                                          Texp_ident "M/1187.add"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/Memoize.ml[34,1374+10]..lib/Memoize.ml[34,1374+11])
                                              Texp_ident "x/1191"
                                          <arg>
                                            Nolabel
                                            expression (lib/Memoize.ml[34,1374+12]..lib/Memoize.ml[34,1374+13])
                                              Texp_ident "y/1192"
                                          <arg>
                                            Nolabel
                                            expression (lib/Memoize.ml[34,1374+14]..lib/Memoize.ml[34,1374+19])
                                              Texp_ident "table/1193"
                                        ]
                                      expression (lib/Memoize.ml[35,1395+4]..lib/Memoize.ml[35,1395+5])
                                        Texp_ident "y/1192"
                                ]
                          ]
                    ]
              ]
            structure_item (lib/Memoize.ml[41,1641+2]..lib/Memoize.ml[42,1655+10])
              Tstr_type Rec
              [
                type_declaration t/1194 (lib/Memoize.ml[41,1641+2]..lib/Memoize.ml[42,1655+10])
                  ptype_params =
                    [
                      core_type (lib/Memoize.ml[41,1641+7]..lib/Memoize.ml[41,1641+9])
                        Ttyp_var a
                    ]
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (lib/Memoize.ml[42,1655+4]..lib/Memoize.ml[42,1655+10])
                        Ttyp_constr "M/1187.t"
                        [
                          core_type (lib/Memoize.ml[42,1655+4]..lib/Memoize.ml[42,1655+6])
                            Ttyp_var a
                        ]
              ]
            structure_item (lib/Memoize.ml[44,1667+2]..lib/Memoize.ml[52,1855+12])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/Memoize.ml[44,1667+6]..lib/Memoize.ml[44,1667+21])
                    Tpat_var "visibly_memoize/1195"
                  expression (lib/Memoize.ml[44,1667+22]..lib/Memoize.ml[52,1855+12]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (lib/Memoize.ml[44,1667+23]..lib/Memoize.ml[44,1667+24])
                          extra
                            Tpat_extra_constraint
                            core_type (lib/Memoize.ml[44,1667+27]..lib/Memoize.ml[44,1667+36])
                              Ttyp_arrow
                              Nolabel
                              core_type (lib/Memoize.ml[44,1667+27]..lib/Memoize.ml[44,1667+30])
                                Ttyp_constr "key/1188"
                                []
                              core_type (lib/Memoize.ml[44,1667+34]..lib/Memoize.ml[44,1667+36])
                                Ttyp_var a
                          Tpat_alias "f/1197"
                          pattern (lib/Memoize.ml[44,1667+23]..lib/Memoize.ml[44,1667+24])
                            Tpat_any
                        expression (lib/Memoize.ml[45,1728+4]..lib/Memoize.ml[52,1855+12])
                          extra
                            Texp_constraint
                            core_type (lib/Memoize.ml[44,1667+40]..lib/Memoize.ml[44,1667+58])
                              Ttyp_tuple
                              [
                                core_type (lib/Memoize.ml[44,1667+41]..lib/Memoize.ml[44,1667+50])
                                  Ttyp_arrow
                                  Nolabel
                                  core_type (lib/Memoize.ml[44,1667+41]..lib/Memoize.ml[44,1667+44])
                                    Ttyp_constr "key/1188"
                                    []
                                  core_type (lib/Memoize.ml[44,1667+48]..lib/Memoize.ml[44,1667+50])
                                    Ttyp_var a
                                core_type (lib/Memoize.ml[44,1667+54]..lib/Memoize.ml[44,1667+58])
                                  Ttyp_constr "t/1194"
                                  [
                                    core_type (lib/Memoize.ml[44,1667+54]..lib/Memoize.ml[44,1667+56])
                                      Ttyp_var a
                                  ]
                              ]
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (lib/Memoize.ml[45,1728+8]..lib/Memoize.ml[45,1728+13])
                                Tpat_var "table/1198"
                              expression (lib/Memoize.ml[45,1728+16]..lib/Memoize.ml[45,1728+26])
                                Texp_apply
                                expression (lib/Memoize.ml[45,1728+16]..lib/Memoize.ml[45,1728+24])
                                  Texp_ident "M/1187.create"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/Memoize.ml[45,1728+24]..lib/Memoize.ml[45,1728+26])
                                      Texp_construct "()"
                                      []
                                ]
                          ]
                          expression (lib/Memoize.ml[46,1758+4]..lib/Memoize.ml[52,1855+12])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (lib/Memoize.ml[46,1758+8]..lib/Memoize.ml[46,1758+9])
                                  Tpat_var "f/1199"
                                expression (lib/Memoize.ml[46,1758+10]..lib/Memoize.ml[50,1822+25]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/Memoize.ml[46,1758+10]..lib/Memoize.ml[46,1758+11])
                                        Tpat_var "x/1200"
                                      expression (lib/Memoize.ml[47,1772+6]..lib/Memoize.ml[50,1822+25])
                                        Texp_try
                                        expression (lib/Memoize.ml[48,1782+1]..lib/Memoize.ml[48,1782+15])
                                          Texp_apply
                                          expression (lib/Memoize.ml[48,1782+1]..lib/Memoize.ml[48,1782+7])
                                            Texp_ident "M/1187.find"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/Memoize.ml[48,1782+8]..lib/Memoize.ml[48,1782+9])
                                                Texp_ident "x/1200"
                                            <arg>
                                              Nolabel
                                              expression (lib/Memoize.ml[48,1782+10]..lib/Memoize.ml[48,1782+15])
                                                Texp_ident "table/1198"
                                          ]
                                        [
                                          <case>
                                            pattern (lib/Memoize.ml[49,1798+11]..lib/Memoize.ml[49,1798+20])
                                              Tpat_construct "Not_found"
                                              []
                                              None
                                            expression (lib/Memoize.ml[50,1822+8]..lib/Memoize.ml[50,1822+25])
                                              Texp_apply
                                              expression (lib/Memoize.ml[50,1822+8]..lib/Memoize.ml[50,1822+11])
                                                Texp_ident "add/1189"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/Memoize.ml[50,1822+12]..lib/Memoize.ml[50,1822+13])
                                                    Texp_ident "x/1200"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/Memoize.ml[50,1822+14]..lib/Memoize.ml[50,1822+19])
                                                    Texp_apply
                                                    expression (lib/Memoize.ml[50,1822+15]..lib/Memoize.ml[50,1822+16])
                                                      Texp_ident "f/1197"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/Memoize.ml[50,1822+17]..lib/Memoize.ml[50,1822+18])
                                                          Texp_ident "x/1200"
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (lib/Memoize.ml[50,1822+20]..lib/Memoize.ml[50,1822+25])
                                                    Texp_ident "table/1198"
                                              ]
                                        ]
                                  ]
                            ]
                            expression (lib/Memoize.ml[52,1855+4]..lib/Memoize.ml[52,1855+12])
                              Texp_tuple
                              [
                                expression (lib/Memoize.ml[52,1855+4]..lib/Memoize.ml[52,1855+5])
                                  Texp_ident "f/1199"
                                expression (lib/Memoize.ml[52,1855+7]..lib/Memoize.ml[52,1855+12])
                                  Texp_ident "table/1198"
                              ]
                    ]
              ]
            structure_item (lib/Memoize.ml[54,1869+2]..lib/Memoize.ml[56,1954+5])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/Memoize.ml[54,1869+6]..lib/Memoize.ml[54,1869+13])
                    Tpat_var "memoize/1201"
                  expression (lib/Memoize.ml[54,1869+14]..lib/Memoize.ml[56,1954+5]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (lib/Memoize.ml[54,1869+15]..lib/Memoize.ml[54,1869+16])
                          extra
                            Tpat_extra_constraint
                            core_type (lib/Memoize.ml[54,1869+19]..lib/Memoize.ml[54,1869+28])
                              Ttyp_arrow
                              Nolabel
                              core_type (lib/Memoize.ml[54,1869+19]..lib/Memoize.ml[54,1869+22])
                                Ttyp_constr "key/1188"
                                []
                              core_type (lib/Memoize.ml[54,1869+26]..lib/Memoize.ml[54,1869+28])
                                Ttyp_var a
                          Tpat_alias "f/1203"
                          pattern (lib/Memoize.ml[54,1869+15]..lib/Memoize.ml[54,1869+16])
                            Tpat_any
                        expression (lib/Memoize.ml[55,1913+4]..lib/Memoize.ml[56,1954+5])
                          extra
                            Texp_constraint
                            core_type (lib/Memoize.ml[54,1869+32]..lib/Memoize.ml[54,1869+41])
                              Ttyp_arrow
                              Nolabel
                              core_type (lib/Memoize.ml[54,1869+32]..lib/Memoize.ml[54,1869+35])
                                Ttyp_constr "key/1188"
                                []
                              core_type (lib/Memoize.ml[54,1869+39]..lib/Memoize.ml[54,1869+41])
                                Ttyp_var a
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (lib/Memoize.ml[55,1913+8]..lib/Memoize.ml[55,1913+17])
                                Tpat_tuple
                                [
                                  pattern (lib/Memoize.ml[55,1913+8]..lib/Memoize.ml[55,1913+9])
                                    Tpat_var "f/1204"
                                  pattern (lib/Memoize.ml[55,1913+11]..lib/Memoize.ml[55,1913+17])
                                    Tpat_var "_table/1205"
                                ]
                              expression (lib/Memoize.ml[55,1913+20]..lib/Memoize.ml[55,1913+37])
                                Texp_apply
                                expression (lib/Memoize.ml[55,1913+20]..lib/Memoize.ml[55,1913+35])
                                  Texp_ident "visibly_memoize/1195"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/Memoize.ml[55,1913+36]..lib/Memoize.ml[55,1913+37])
                                      Texp_ident "f/1203"
                                ]
                          ]
                          expression (lib/Memoize.ml[56,1954+4]..lib/Memoize.ml[56,1954+5])
                            Texp_ident "f/1204"
                    ]
              ]
            structure_item (lib/Memoize.ml[58,1961+2]..lib/Memoize.ml[66,2146+5])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/Memoize.ml[58,1961+6]..lib/Memoize.ml[58,1961+9])
                    Tpat_var "fix/1206"
                  expression (lib/Memoize.ml[58,1961+10]..lib/Memoize.ml[66,2146+5]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (lib/Memoize.ml[58,1961+11]..lib/Memoize.ml[58,1961+13])
                          extra
                            Tpat_extra_constraint
                            core_type (lib/Memoize.ml[58,1961+16]..lib/Memoize.ml[58,1961+42])
                              Ttyp_arrow
                              Nolabel
                              core_type (lib/Memoize.ml[58,1961+17]..lib/Memoize.ml[58,1961+26])
                                Ttyp_arrow
                                Nolabel
                                core_type (lib/Memoize.ml[58,1961+17]..lib/Memoize.ml[58,1961+20])
                                  Ttyp_constr "key/1188"
                                  []
                                core_type (lib/Memoize.ml[58,1961+24]..lib/Memoize.ml[58,1961+26])
                                  Ttyp_var a
                              core_type (lib/Memoize.ml[58,1961+32]..lib/Memoize.ml[58,1961+41])
                                Ttyp_arrow
                                Nolabel
                                core_type (lib/Memoize.ml[58,1961+32]..lib/Memoize.ml[58,1961+35])
                                  Ttyp_constr "key/1188"
                                  []
                                core_type (lib/Memoize.ml[58,1961+39]..lib/Memoize.ml[58,1961+41])
                                  Ttyp_var a
                          Tpat_alias "ff/1208"
                          pattern (lib/Memoize.ml[58,1961+11]..lib/Memoize.ml[58,1961+13])
                            Tpat_any
                        expression (lib/Memoize.ml[59,2019+4]..lib/Memoize.ml[66,2146+5])
                          extra
                            Texp_constraint
                            core_type (lib/Memoize.ml[58,1961+46]..lib/Memoize.ml[58,1961+55])
                              Ttyp_arrow
                              Nolabel
                              core_type (lib/Memoize.ml[58,1961+46]..lib/Memoize.ml[58,1961+49])
                                Ttyp_constr "key/1188"
                                []
                              core_type (lib/Memoize.ml[58,1961+53]..lib/Memoize.ml[58,1961+55])
                                Ttyp_var a
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (lib/Memoize.ml[59,2019+8]..lib/Memoize.ml[59,2019+13])
                                Tpat_var "table/1209"
                              expression (lib/Memoize.ml[59,2019+16]..lib/Memoize.ml[59,2019+26])
                                Texp_apply
                                expression (lib/Memoize.ml[59,2019+16]..lib/Memoize.ml[59,2019+24])
                                  Texp_ident "M/1187.create"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/Memoize.ml[59,2019+24]..lib/Memoize.ml[59,2019+26])
                                      Texp_construct "()"
                                      []
                                ]
                          ]
                          expression (lib/Memoize.ml[60,2049+4]..lib/Memoize.ml[66,2146+5])
                            Texp_let Rec
                            [
                              <def>
                                pattern (lib/Memoize.ml[60,2049+12]..lib/Memoize.ml[60,2049+13])
                                  Tpat_var "f/1210"
                                expression (lib/Memoize.ml[60,2049+14]..lib/Memoize.ml[64,2117+21]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/Memoize.ml[60,2049+14]..lib/Memoize.ml[60,2049+15])
                                        Tpat_var "x/1211"
                                      expression (lib/Memoize.ml[61,2067+6]..lib/Memoize.ml[64,2117+21])
                                        Texp_try
                                        expression (lib/Memoize.ml[62,2077+1]..lib/Memoize.ml[62,2077+15])
                                          Texp_apply
                                          expression (lib/Memoize.ml[62,2077+1]..lib/Memoize.ml[62,2077+7])
                                            Texp_ident "M/1187.find"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/Memoize.ml[62,2077+8]..lib/Memoize.ml[62,2077+9])
                                                Texp_ident "x/1211"
                                            <arg>
                                              Nolabel
                                              expression (lib/Memoize.ml[62,2077+10]..lib/Memoize.ml[62,2077+15])
                                                Texp_ident "table/1209"
                                          ]
                                        [
                                          <case>
                                            pattern (lib/Memoize.ml[63,2093+11]..lib/Memoize.ml[63,2093+20])
                                              Tpat_construct "Not_found"
                                              []
                                              None
                                            expression (lib/Memoize.ml[64,2117+1]..lib/Memoize.ml[64,2117+21])
                                              Texp_apply
                                              expression (lib/Memoize.ml[64,2117+1]..lib/Memoize.ml[64,2117+4])
                                                Texp_ident "add/1189"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/Memoize.ml[64,2117+5]..lib/Memoize.ml[64,2117+6])
                                                    Texp_ident "x/1211"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/Memoize.ml[64,2117+7]..lib/Memoize.ml[64,2117+15])
                                                    Texp_apply
                                                    expression (lib/Memoize.ml[64,2117+8]..lib/Memoize.ml[64,2117+10])
                                                      Texp_ident "ff/1208"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/Memoize.ml[64,2117+11]..lib/Memoize.ml[64,2117+12])
                                                          Texp_ident "f/1210"
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/Memoize.ml[64,2117+13]..lib/Memoize.ml[64,2117+14])
                                                          Texp_ident "x/1211"
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (lib/Memoize.ml[64,2117+16]..lib/Memoize.ml[64,2117+21])
                                                    Texp_ident "table/1209"
                                              ]
                                        ]
                                  ]
                            ]
                            expression (lib/Memoize.ml[66,2146+4]..lib/Memoize.ml[66,2146+5])
                              Texp_ident "f/1210"
                    ]
              ]
            structure_item (lib/Memoize.ml[80,2969+2]..lib/Memoize.ml[80,2969+35])
              Tstr_exception
              type_exception
                ptyext_constructor =
                  extension_constructor (lib/Memoize.ml[80,2969+2]..lib/Memoize.ml[80,2969+35])
                    pext_name = "Cycle/1212"
                    pext_kind =
                      Text_decl
                        [
                          core_type (lib/Memoize.ml[80,2969+21]..lib/Memoize.ml[80,2969+29])
                            Ttyp_constr "list/9!"
                            [
                              core_type (lib/Memoize.ml[80,2969+21]..lib/Memoize.ml[80,2969+24])
                                Ttyp_constr "key/1188"
                                []
                            ]
                          core_type (lib/Memoize.ml[80,2969+32]..lib/Memoize.ml[80,2969+35])
                            Ttyp_constr "key/1188"
                            []
                        ]
                        None
            structure_item (lib/Memoize.ml[82,3006+2]..lib/Memoize.ml[114,4363+28])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/Memoize.ml[82,3006+6]..lib/Memoize.ml[82,3006+19])
                    Tpat_var "defensive_fix/1213"
                  expression (lib/Memoize.ml[82,3006+20]..lib/Memoize.ml[114,4363+28]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (lib/Memoize.ml[82,3006+21]..lib/Memoize.ml[82,3006+23])
                          extra
                            Tpat_extra_constraint
                            core_type (lib/Memoize.ml[82,3006+26]..lib/Memoize.ml[82,3006+52])
                              Ttyp_arrow
                              Nolabel
                              core_type (lib/Memoize.ml[82,3006+27]..lib/Memoize.ml[82,3006+36])
                                Ttyp_arrow
                                Nolabel
                                core_type (lib/Memoize.ml[82,3006+27]..lib/Memoize.ml[82,3006+30])
                                  Ttyp_constr "key/1188"
                                  []
                                core_type (lib/Memoize.ml[82,3006+34]..lib/Memoize.ml[82,3006+36])
                                  Ttyp_var a
                              core_type (lib/Memoize.ml[82,3006+42]..lib/Memoize.ml[82,3006+51])
                                Ttyp_arrow
                                Nolabel
                                core_type (lib/Memoize.ml[82,3006+42]..lib/Memoize.ml[82,3006+45])
                                  Ttyp_constr "key/1188"
                                  []
                                core_type (lib/Memoize.ml[82,3006+49]..lib/Memoize.ml[82,3006+51])
                                  Ttyp_var a
                          Tpat_alias "ff/1215"
                          pattern (lib/Memoize.ml[82,3006+21]..lib/Memoize.ml[82,3006+23])
                            Tpat_any
                        expression (lib/Memoize.ml[84,3112+4]..lib/Memoize.ml[114,4363+28])
                          extra
                            Texp_constraint
                            core_type (lib/Memoize.ml[82,3006+56]..lib/Memoize.ml[82,3006+65])
                              Ttyp_arrow
                              Nolabel
                              core_type (lib/Memoize.ml[82,3006+56]..lib/Memoize.ml[82,3006+59])
                                Ttyp_constr "key/1188"
                                []
                              core_type (lib/Memoize.ml[82,3006+63]..lib/Memoize.ml[82,3006+65])
                                Ttyp_var a
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (lib/Memoize.ml[84,3112+8]..lib/Memoize.ml[84,3112+13])
                                Tpat_var "table/1216"
                              expression (lib/Memoize.ml[84,3112+16]..lib/Memoize.ml[84,3112+26])
                                Texp_apply
                                expression (lib/Memoize.ml[84,3112+16]..lib/Memoize.ml[84,3112+24])
                                  Texp_ident "M/1187.create"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/Memoize.ml[84,3112+24]..lib/Memoize.ml[84,3112+26])
                                      Texp_construct "()"
                                      []
                                ]
                          ]
                          expression (lib/Memoize.ml[86,3188+4]..lib/Memoize.ml[114,4363+28])
                            Texp_let Rec
                            [
                              <def>
                                pattern (lib/Memoize.ml[86,3188+12]..lib/Memoize.ml[86,3188+13])
                                  Tpat_var "f/1217"
                                expression (lib/Memoize.ml[86,3188+14]..lib/Memoize.ml[106,4179+18]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/Memoize.ml[86,3188+14]..lib/Memoize.ml[86,3188+19])
                                        Tpat_var "stack/1218"
                                      expression (lib/Memoize.ml[86,3188+20]..lib/Memoize.ml[106,4179+18]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/Memoize.ml[86,3188+20]..lib/Memoize.ml[86,3188+25])
                                              Tpat_var "depth/1219"
                                            expression (lib/Memoize.ml[86,3188+26]..lib/Memoize.ml[106,4179+18]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/Memoize.ml[86,3188+26]..lib/Memoize.ml[86,3188+32])
                                                    Tpat_var "marked/1220"
                                                  expression (lib/Memoize.ml[86,3188+33]..lib/Memoize.ml[106,4179+18]) ghost
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (lib/Memoize.ml[86,3188+34]..lib/Memoize.ml[86,3188+35])
                                                          extra
                                                            Tpat_extra_constraint
                                                            core_type (lib/Memoize.ml[86,3188+38]..lib/Memoize.ml[86,3188+41])
                                                              Ttyp_constr "key/1188"
                                                              []
                                                          Tpat_alias "x/1221"
                                                          pattern (lib/Memoize.ml[86,3188+34]..lib/Memoize.ml[86,3188+35])
                                                            Tpat_any
                                                        expression (lib/Memoize.ml[87,3238+6]..lib/Memoize.ml[106,4179+18])
                                                          extra
                                                            Texp_constraint
                                                            core_type (lib/Memoize.ml[86,3188+45]..lib/Memoize.ml[86,3188+47])
                                                              Ttyp_var a
                                                          Texp_try
                                                          expression (lib/Memoize.ml[88,3248+1]..lib/Memoize.ml[88,3248+15])
                                                            Texp_apply
                                                            expression (lib/Memoize.ml[88,3248+1]..lib/Memoize.ml[88,3248+7])
                                                              Texp_ident "M/1187.find"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/Memoize.ml[88,3248+8]..lib/Memoize.ml[88,3248+9])
                                                                  Texp_ident "x/1221"
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/Memoize.ml[88,3248+10]..lib/Memoize.ml[88,3248+15])
                                                                  Texp_ident "table/1216"
                                                            ]
                                                          [
                                                            <case>
                                                              pattern (lib/Memoize.ml[89,3264+11]..lib/Memoize.ml[89,3264+20])
                                                                Tpat_construct "Not_found"
                                                                []
                                                                None
                                                              expression (lib/Memoize.ml[90,3288+8]..lib/Memoize.ml[106,4179+18])
                                                                Texp_match
                                                                expression (lib/Memoize.ml[90,3288+14]..lib/Memoize.ml[90,3288+29])
                                                                  Texp_apply
                                                                  expression (lib/Memoize.ml[90,3288+14]..lib/Memoize.ml[90,3288+20])
                                                                    Texp_ident "M/1187.find"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/Memoize.ml[90,3288+21]..lib/Memoize.ml[90,3288+22])
                                                                        Texp_ident "x/1221"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/Memoize.ml[90,3288+23]..lib/Memoize.ml[90,3288+29])
                                                                        Texp_ident "marked/1220"
                                                                  ]
                                                                [
                                                                  <case>
                                                                    pattern (lib/Memoize.ml[91,3323+10]..lib/Memoize.ml[91,3323+11])
                                                                      Tpat_value
                                                                      pattern (lib/Memoize.ml[91,3323+10]..lib/Memoize.ml[91,3323+11])
                                                                        Tpat_var "i/1222"
                                                                    expression (lib/Memoize.ml[96,3628+12]..lib/Memoize.ml[96,3628+60])
                                                                      Texp_apply
                                                                      expression (lib/Memoize.ml[96,3628+12]..lib/Memoize.ml[96,3628+17])
                                                                        Texp_ident "Stdlib!.raise"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (lib/Memoize.ml[96,3628+18]..lib/Memoize.ml[96,3628+60])
                                                                            Texp_construct "Cycle"
                                                                            [
                                                                              expression (lib/Memoize.ml[96,3628+26]..lib/Memoize.ml[96,3628+55])
                                                                                Texp_apply
                                                                                expression (lib/Memoize.ml[96,3628+26]..lib/Memoize.ml[96,3628+34])
                                                                                  Texp_ident "rev_take/1153"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (lib/Memoize.ml[96,3628+35]..lib/Memoize.ml[96,3628+37])
                                                                                      Texp_construct "[]"
                                                                                      []
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (lib/Memoize.ml[96,3628+38]..lib/Memoize.ml[96,3628+49])
                                                                                      Texp_apply
                                                                                      expression (lib/Memoize.ml[96,3628+45]..lib/Memoize.ml[96,3628+46])
                                                                                        Texp_ident "Stdlib!.-"
                                                                                      [
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (lib/Memoize.ml[96,3628+39]..lib/Memoize.ml[96,3628+44])
                                                                                            Texp_ident "depth/1219"
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (lib/Memoize.ml[96,3628+47]..lib/Memoize.ml[96,3628+48])
                                                                                            Texp_ident "i/1222"
                                                                                      ]
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (lib/Memoize.ml[96,3628+50]..lib/Memoize.ml[96,3628+55])
                                                                                      Texp_ident "stack/1218"
                                                                                ]
                                                                              expression (lib/Memoize.ml[96,3628+57]..lib/Memoize.ml[96,3628+58])
                                                                                Texp_ident "x/1221"
                                                                            ]
                                                                      ]
                                                                  <case>
                                                                    pattern (lib/Memoize.ml[97,3689+10]..lib/Memoize.ml[97,3689+29])
                                                                      Tpat_exception
                                                                      pattern (lib/Memoize.ml[97,3689+20]..lib/Memoize.ml[97,3689+29])
                                                                        Tpat_construct "Not_found"
                                                                        []
                                                                        None
                                                                    expression (lib/Memoize.ml[102,4022+12]..lib/Memoize.ml[106,4179+18])
                                                                      Texp_sequence
                                                                      expression (lib/Memoize.ml[102,4022+12]..lib/Memoize.ml[102,4022+32])
                                                                        Texp_apply
                                                                        expression (lib/Memoize.ml[102,4022+12]..lib/Memoize.ml[102,4022+17])
                                                                          Texp_ident "M/1187.add"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (lib/Memoize.ml[102,4022+18]..lib/Memoize.ml[102,4022+19])
                                                                              Texp_ident "x/1221"
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (lib/Memoize.ml[102,4022+20]..lib/Memoize.ml[102,4022+25])
                                                                              Texp_ident "depth/1219"
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (lib/Memoize.ml[102,4022+26]..lib/Memoize.ml[102,4022+32])
                                                                              Texp_ident "marked/1220"
                                                                        ]
                                                                      expression (lib/Memoize.ml[103,4056+12]..lib/Memoize.ml[106,4179+18])
                                                                        Texp_let Nonrec
                                                                        [
                                                                          <def>
                                                                            pattern (lib/Memoize.ml[103,4056+16]..lib/Memoize.ml[103,4056+21])
                                                                              Tpat_var "stack/1223"
                                                                            expression (lib/Memoize.ml[103,4056+24]..lib/Memoize.ml[103,4056+34])
                                                                              Texp_construct "::"
                                                                              [
                                                                                expression (lib/Memoize.ml[103,4056+24]..lib/Memoize.ml[103,4056+25])
                                                                                  Texp_ident "x/1221"
                                                                                expression (lib/Memoize.ml[103,4056+29]..lib/Memoize.ml[103,4056+34])
                                                                                  Texp_ident "stack/1218"
                                                                              ]
                                                                          <def>
                                                                            pattern (lib/Memoize.ml[104,4091+16]..lib/Memoize.ml[104,4091+21])
                                                                              Tpat_var "depth/1224"
                                                                            expression (lib/Memoize.ml[104,4091+24]..lib/Memoize.ml[104,4091+33])
                                                                              Texp_apply
                                                                              expression (lib/Memoize.ml[104,4091+30]..lib/Memoize.ml[104,4091+31])
                                                                                Texp_ident "Stdlib!.+"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (lib/Memoize.ml[104,4091+24]..lib/Memoize.ml[104,4091+29])
                                                                                    Texp_ident "depth/1219"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (lib/Memoize.ml[104,4091+32]..lib/Memoize.ml[104,4091+33])
                                                                                    Texp_constant Const_int 1
                                                                              ]
                                                                        ]
                                                                        expression (lib/Memoize.ml[105,4128+12]..lib/Memoize.ml[106,4179+18])
                                                                          Texp_let Nonrec
                                                                          [
                                                                            <def>
                                                                              pattern (lib/Memoize.ml[105,4128+16]..lib/Memoize.ml[105,4128+17])
                                                                                Tpat_var "y/1225"
                                                                              expression (lib/Memoize.ml[105,4128+20]..lib/Memoize.ml[105,4128+47])
                                                                                Texp_apply
                                                                                expression (lib/Memoize.ml[105,4128+20]..lib/Memoize.ml[105,4128+22])
                                                                                  Texp_ident "ff/1215"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (lib/Memoize.ml[105,4128+23]..lib/Memoize.ml[105,4128+45])
                                                                                      Texp_apply
                                                                                      expression (lib/Memoize.ml[105,4128+24]..lib/Memoize.ml[105,4128+25])
                                                                                        Texp_ident "f/1217"
                                                                                      [
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (lib/Memoize.ml[105,4128+26]..lib/Memoize.ml[105,4128+31])
                                                                                            Texp_ident "stack/1223"
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (lib/Memoize.ml[105,4128+32]..lib/Memoize.ml[105,4128+37])
                                                                                            Texp_ident "depth/1224"
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (lib/Memoize.ml[105,4128+38]..lib/Memoize.ml[105,4128+44])
                                                                                            Texp_ident "marked/1220"
                                                                                      ]
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (lib/Memoize.ml[105,4128+46]..lib/Memoize.ml[105,4128+47])
                                                                                      Texp_ident "x/1221"
                                                                                ]
                                                                          ]
                                                                          expression (lib/Memoize.ml[106,4179+5]..lib/Memoize.ml[106,4179+18])
                                                                            Texp_apply
                                                                            expression (lib/Memoize.ml[106,4179+5]..lib/Memoize.ml[106,4179+8])
                                                                              Texp_ident "add/1189"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (lib/Memoize.ml[106,4179+9]..lib/Memoize.ml[106,4179+10])
                                                                                  Texp_ident "x/1221"
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (lib/Memoize.ml[106,4179+11]..lib/Memoize.ml[106,4179+12])
                                                                                  Texp_ident "y/1225"
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (lib/Memoize.ml[106,4179+13]..lib/Memoize.ml[106,4179+18])
                                                                                  Texp_ident "table/1216"
                                                                            ]
                                                                ]
                                                          ]
                                                    ]
                                              ]
                                        ]
                                  ]
                            ]
                            expression (lib/Memoize.ml[108,4205+4]..lib/Memoize.ml[114,4363+28])
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (lib/Memoize.ml[108,4205+8]..lib/Memoize.ml[108,4205+9])
                                    Tpat_var "x/1226"
                                  expression (lib/Memoize.ml[110,4258+6]..lib/Memoize.ml[114,4363+28])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/Memoize.ml[110,4258+10]..lib/Memoize.ml[110,4258+16])
                                          Tpat_var "marked/1227"
                                        expression (lib/Memoize.ml[110,4258+19]..lib/Memoize.ml[110,4258+29])
                                          Texp_apply
                                          expression (lib/Memoize.ml[110,4258+19]..lib/Memoize.ml[110,4258+27])
                                            Texp_ident "M/1187.create"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/Memoize.ml[110,4258+27]..lib/Memoize.ml[110,4258+29])
                                                Texp_construct "()"
                                                []
                                          ]
                                      <def>
                                        pattern (lib/Memoize.ml[111,4288+10]..lib/Memoize.ml[111,4288+15])
                                          Tpat_var "stack/1228"
                                        expression (lib/Memoize.ml[111,4288+18]..lib/Memoize.ml[111,4288+20])
                                          Texp_construct "[]"
                                          []
                                      <def>
                                        pattern (lib/Memoize.ml[112,4309+10]..lib/Memoize.ml[112,4309+15])
                                          Tpat_var "depth/1229"
                                        expression (lib/Memoize.ml[112,4309+18]..lib/Memoize.ml[112,4309+19])
                                          Texp_constant Const_int 0
                                    ]
                                    expression (lib/Memoize.ml[114,4363+6]..lib/Memoize.ml[114,4363+28])
                                      Texp_apply
                                      expression (lib/Memoize.ml[114,4363+6]..lib/Memoize.ml[114,4363+7])
                                        Texp_ident "f/1217"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/Memoize.ml[114,4363+8]..lib/Memoize.ml[114,4363+13])
                                            Texp_ident "stack/1228"
                                        <arg>
                                          Nolabel
                                          expression (lib/Memoize.ml[114,4363+14]..lib/Memoize.ml[114,4363+19])
                                            Texp_ident "depth/1229"
                                        <arg>
                                          Nolabel
                                          expression (lib/Memoize.ml[114,4363+20]..lib/Memoize.ml[114,4363+26])
                                            Texp_ident "marked/1227"
                                        <arg>
                                          Nolabel
                                          expression (lib/Memoize.ml[114,4363+27]..lib/Memoize.ml[114,4363+28])
                                            Texp_ident "x/1226"
                                      ]
                              ]
                    ]
              ]
            structure_item (lib/Memoize.ml[123,4725+2]..lib/Memoize.ml[123,4725+30])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/Memoize.ml[123,4725+8]..lib/Memoize.ml[123,4725+13])
                    Tpat_var "curry/1230"
                  expression (lib/Memoize.ml[123,4725+14]..lib/Memoize.ml[123,4725+30]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (lib/Memoize.ml[123,4725+14]..lib/Memoize.ml[123,4725+15])
                          Tpat_var "f/1232"
                        expression (lib/Memoize.ml[123,4725+16]..lib/Memoize.ml[123,4725+30]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (lib/Memoize.ml[123,4725+16]..lib/Memoize.ml[123,4725+17])
                                Tpat_var "x/1233"
                              expression (lib/Memoize.ml[123,4725+18]..lib/Memoize.ml[123,4725+30]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/Memoize.ml[123,4725+18]..lib/Memoize.ml[123,4725+19])
                                      Tpat_var "y/1234"
                                    expression (lib/Memoize.ml[123,4725+22]..lib/Memoize.ml[123,4725+30])
                                      Texp_apply
                                      expression (lib/Memoize.ml[123,4725+22]..lib/Memoize.ml[123,4725+23])
                                        Texp_ident "f/1232"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/Memoize.ml[123,4725+24]..lib/Memoize.ml[123,4725+30])
                                            Texp_tuple
                                            [
                                              expression (lib/Memoize.ml[123,4725+25]..lib/Memoize.ml[123,4725+26])
                                                Texp_ident "x/1233"
                                              expression (lib/Memoize.ml[123,4725+28]..lib/Memoize.ml[123,4725+29])
                                                Texp_ident "y/1234"
                                            ]
                                      ]
                                ]
                          ]
                    ]
              ]
            structure_item (lib/Memoize.ml[124,4756+2]..lib/Memoize.ml[124,4756+30])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/Memoize.ml[124,4756+6]..lib/Memoize.ml[124,4756+13])
                    Tpat_var "uncurry/1235"
                  expression (lib/Memoize.ml[124,4756+14]..lib/Memoize.ml[124,4756+30]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (lib/Memoize.ml[124,4756+14]..lib/Memoize.ml[124,4756+15])
                          Tpat_var "f/1237"
                        expression (lib/Memoize.ml[124,4756+16]..lib/Memoize.ml[124,4756+30]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (lib/Memoize.ml[124,4756+16]..lib/Memoize.ml[124,4756+22])
                                Tpat_tuple
                                [
                                  pattern (lib/Memoize.ml[124,4756+17]..lib/Memoize.ml[124,4756+18])
                                    Tpat_var "x/1238"
                                  pattern (lib/Memoize.ml[124,4756+20]..lib/Memoize.ml[124,4756+21])
                                    Tpat_var "y/1239"
                                ]
                              expression (lib/Memoize.ml[124,4756+25]..lib/Memoize.ml[124,4756+30])
                                Texp_apply
                                expression (lib/Memoize.ml[124,4756+25]..lib/Memoize.ml[124,4756+26])
                                  Texp_ident "f/1237"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/Memoize.ml[124,4756+27]..lib/Memoize.ml[124,4756+28])
                                      Texp_ident "x/1238"
                                  <arg>
                                    Nolabel
                                    expression (lib/Memoize.ml[124,4756+29]..lib/Memoize.ml[124,4756+30])
                                      Texp_ident "y/1239"
                                ]
                          ]
                    ]
              ]
            structure_item (lib/Memoize.ml[126,4788+2]..lib/Memoize.ml[129,4912+20])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/Memoize.ml[126,4788+6]..lib/Memoize.ml[126,4788+13])
                    Tpat_var "curried/1241"
                  expression (lib/Memoize.ml[126,4788+14]..lib/Memoize.ml[129,4912+20]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (lib/Memoize.ml[126,4788+15]..lib/Memoize.ml[126,4788+18])
                          extra
                            Tpat_extra_constraint
                            core_type (lib/Memoize.ml[126,4788+21]..lib/Memoize.ml[126,4788+40])
                              Ttyp_constr "Gbnf_parser!.Sigs.fix"
                              [
                                core_type (lib/Memoize.ml[126,4788+22]..lib/Memoize.ml[126,4788+35])
                                  Ttyp_arrow
                                  Nolabel
                                  core_type (lib/Memoize.ml[126,4788+22]..lib/Memoize.ml[126,4788+29])
                                    Ttyp_tuple
                                    [
                                      core_type (lib/Memoize.ml[126,4788+22]..lib/Memoize.ml[126,4788+24])
                                        Ttyp_var a
                                      core_type (lib/Memoize.ml[126,4788+27]..lib/Memoize.ml[126,4788+29])
                                        Ttyp_var b
                                    ]
                                  core_type (lib/Memoize.ml[126,4788+33]..lib/Memoize.ml[126,4788+35])
                                    Ttyp_var c
                              ]
                          Tpat_alias "fix/1243"
                          pattern (lib/Memoize.ml[126,4788+15]..lib/Memoize.ml[126,4788+18])
                            Tpat_any
                        expression (lib/Memoize.ml[127,4855+4]..lib/Memoize.ml[129,4912+20])
                          extra
                            Texp_constraint
                            core_type (lib/Memoize.ml[126,4788+44]..lib/Memoize.ml[126,4788+64])
                              Ttyp_constr "Gbnf_parser!.Sigs.fix"
                              [
                                core_type (lib/Memoize.ml[126,4788+45]..lib/Memoize.ml[126,4788+59])
                                  Ttyp_arrow
                                  Nolabel
                                  core_type (lib/Memoize.ml[126,4788+45]..lib/Memoize.ml[126,4788+47])
                                    Ttyp_var a
                                  core_type (lib/Memoize.ml[126,4788+51]..lib/Memoize.ml[126,4788+59])
                                    Ttyp_arrow
                                    Nolabel
                                    core_type (lib/Memoize.ml[126,4788+51]..lib/Memoize.ml[126,4788+53])
                                      Ttyp_var b
                                    core_type (lib/Memoize.ml[126,4788+57]..lib/Memoize.ml[126,4788+59])
                                      Ttyp_var c
                              ]
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (lib/Memoize.ml[127,4855+8]..lib/Memoize.ml[127,4855+10])
                                Tpat_var "ff/1244"
                              expression (lib/Memoize.ml[128,4869+6]..lib/Memoize.ml[129,4912+20])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/Memoize.ml[128,4869+10]..lib/Memoize.ml[128,4869+12])
                                      Tpat_var "ff/1245"
                                    expression (lib/Memoize.ml[128,4869+13]..lib/Memoize.ml[128,4869+39]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (lib/Memoize.ml[128,4869+13]..lib/Memoize.ml[128,4869+14])
                                            Tpat_var "f/1246"
                                          expression (lib/Memoize.ml[128,4869+17]..lib/Memoize.ml[128,4869+39])
                                            Texp_apply
                                            expression (lib/Memoize.ml[128,4869+17]..lib/Memoize.ml[128,4869+24])
                                              Texp_ident "uncurry/1235"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/Memoize.ml[128,4869+25]..lib/Memoize.ml[128,4869+39])
                                                  Texp_apply
                                                  expression (lib/Memoize.ml[128,4869+26]..lib/Memoize.ml[128,4869+28])
                                                    Texp_ident "ff/1244"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/Memoize.ml[128,4869+29]..lib/Memoize.ml[128,4869+38])
                                                        Texp_apply
                                                        expression (lib/Memoize.ml[128,4869+30]..lib/Memoize.ml[128,4869+35])
                                                          Texp_ident "curry/1230"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/Memoize.ml[128,4869+36]..lib/Memoize.ml[128,4869+37])
                                                              Texp_ident "f/1246"
                                                        ]
                                                  ]
                                            ]
                                      ]
                                ]
                                expression (lib/Memoize.ml[129,4912+6]..lib/Memoize.ml[129,4912+20])
                                  Texp_apply
                                  expression (lib/Memoize.ml[129,4912+6]..lib/Memoize.ml[129,4912+11])
                                    Texp_ident "curry/1230"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/Memoize.ml[129,4912+12]..lib/Memoize.ml[129,4912+20])
                                        Texp_apply
                                        expression (lib/Memoize.ml[129,4912+13]..lib/Memoize.ml[129,4912+16])
                                          Texp_ident "fix/1243"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/Memoize.ml[129,4912+17]..lib/Memoize.ml[129,4912+19])
                                              Texp_ident "ff/1245"
                                        ]
                                  ]
                          ]
                    ]
              ]
          ]
  structure_item (lib/Memoize.ml[133,4939+0]..lib/Memoize.ml[134,4981+56])
    Tstr_module
    ForOrderedType/1637
      module_expr (lib/Memoize.ml[133,4939+22]..lib/Memoize.ml[134,4981+56])
        Tmod_functor "T/1259"
        module_type (lib/Memoize.ml[133,4939+27]..lib/Memoize.ml[133,4939+38])
          Tmty_ident "Gbnf_parser!.Sigs.OrderedType"
        module_expr (lib/Memoize.ml[134,4981+2]..lib/Memoize.ml[134,4981+56])
          Tmod_apply
          module_expr (lib/Memoize.ml[134,4981+2]..lib/Memoize.ml[134,4981+6])
            Tmod_ident "Make/1247"
          module_expr (lib/Memoize.ml[134,4981+7]..lib/Memoize.ml[134,4981+55])
            Tmod_apply
            module_expr (lib/Memoize.ml[134,4981+7]..lib/Memoize.ml[134,4981+42])
              module_expr (lib/Memoize.ml[134,4981+7]..lib/Memoize.ml[134,4981+42])
                Tmod_ident "Gbnf_parser!.Glue.PersistentMapsToImperativeMaps"
            module_expr (lib/Memoize.ml[134,4981+43]..lib/Memoize.ml[134,4981+54])
              Tmod_apply
              module_expr (lib/Memoize.ml[134,4981+43]..lib/Memoize.ml[134,4981+51])
                module_expr (lib/Memoize.ml[134,4981+43]..lib/Memoize.ml[134,4981+51])
                  Tmod_ident "Stdlib!.Map.Make"
              module_expr (lib/Memoize.ml[134,4981+52]..lib/Memoize.ml[134,4981+53])
                Tmod_ident "T/1259"
  structure_item (lib/Memoize.ml[136,5039+0]..lib/Memoize.ml[137,5079+42])
    Tstr_module
    ForHashedType/1901
      module_expr (lib/Memoize.ml[136,5039+21]..lib/Memoize.ml[137,5079+42])
        Tmod_functor "T/1721"
        module_type (lib/Memoize.ml[136,5039+26]..lib/Memoize.ml[136,5039+36])
          Tmty_ident "Gbnf_parser!.Sigs.HashedType"
        module_expr (lib/Memoize.ml[137,5079+2]..lib/Memoize.ml[137,5079+42])
          Tmod_apply
          module_expr (lib/Memoize.ml[137,5079+2]..lib/Memoize.ml[137,5079+6])
            Tmod_ident "Make/1247"
          module_expr (lib/Memoize.ml[137,5079+7]..lib/Memoize.ml[137,5079+41])
            Tmod_apply
            module_expr (lib/Memoize.ml[137,5079+7]..lib/Memoize.ml[137,5079+38])
              module_expr (lib/Memoize.ml[137,5079+7]..lib/Memoize.ml[137,5079+38])
                Tmod_ident "Gbnf_parser!.Glue.HashTablesAsImperativeMaps"
            module_expr (lib/Memoize.ml[137,5079+39]..lib/Memoize.ml[137,5079+40])
              Tmod_ident "T/1721"
  structure_item (lib/Memoize.ml[139,5123+0]..lib/Memoize.ml[140,5151+42])
    Tstr_module
    ForType/1921
      module_expr (lib/Memoize.ml[139,5123+15]..lib/Memoize.ml[140,5151+42])
        Tmod_functor "T/1903"
        module_type (lib/Memoize.ml[139,5123+20]..lib/Memoize.ml[139,5123+24])
          Tmty_ident "Gbnf_parser!.Sigs.TYPE"
        module_expr (lib/Memoize.ml[140,5151+2]..lib/Memoize.ml[140,5151+42])
          Tmod_apply
          module_expr (lib/Memoize.ml[140,5151+2]..lib/Memoize.ml[140,5151+15])
            Tmod_ident "ForHashedType/1901"
          module_expr (lib/Memoize.ml[140,5151+16]..lib/Memoize.ml[140,5151+41])
            Tmod_apply
            module_expr (lib/Memoize.ml[140,5151+16]..lib/Memoize.ml[140,5151+38])
              module_expr (lib/Memoize.ml[140,5151+16]..lib/Memoize.ml[140,5151+38])
                Tmod_ident "Gbnf_parser!.Glue.TrivialHashedType"
            module_expr (lib/Memoize.ml[140,5151+39]..lib/Memoize.ml[140,5151+40])
              Tmod_ident "T/1903"
  structure_item (lib/Memoize.ml[142,5195+0]..lib/Memoize.ml[143,5209+20])
    Tstr_module
    Char/1934
      module_expr (lib/Memoize.ml[143,5209+2]..lib/Memoize.ml[143,5209+20])
        Tmod_apply
        module_expr (lib/Memoize.ml[143,5209+2]..lib/Memoize.ml[143,5209+9])
          Tmod_ident "ForType/1921"
        module_expr (lib/Memoize.ml[143,5209+10]..lib/Memoize.ml[143,5209+19])
          module_expr (lib/Memoize.ml[143,5209+10]..lib/Memoize.ml[143,5209+19])
            Tmod_ident "Gbnf_parser!.Glue.CHAR"
  structure_item (lib/Memoize.ml[145,5231+0]..lib/Memoize.ml[146,5244+19])
    Tstr_module
    Int/1947
      module_expr (lib/Memoize.ml[146,5244+2]..lib/Memoize.ml[146,5244+19])
        Tmod_apply
        module_expr (lib/Memoize.ml[146,5244+2]..lib/Memoize.ml[146,5244+9])
          Tmod_ident "ForType/1921"
        module_expr (lib/Memoize.ml[146,5244+10]..lib/Memoize.ml[146,5244+18])
          module_expr (lib/Memoize.ml[146,5244+10]..lib/Memoize.ml[146,5244+18])
            Tmod_ident "Gbnf_parser!.Glue.INT"
  structure_item (lib/Memoize.ml[148,5265+0]..lib/Memoize.ml[149,5281+22])
    Tstr_module
    String/1960
      module_expr (lib/Memoize.ml[149,5281+2]..lib/Memoize.ml[149,5281+22])
        Tmod_apply
        module_expr (lib/Memoize.ml[149,5281+2]..lib/Memoize.ml[149,5281+9])
          Tmod_ident "ForType/1921"
        module_expr (lib/Memoize.ml[149,5281+10]..lib/Memoize.ml[149,5281+21])
          module_expr (lib/Memoize.ml[149,5281+10]..lib/Memoize.ml[149,5281+21])
            Tmod_ident "Gbnf_parser!.Glue.STRING"
  structure_item (lib/Memoize.ml[149,5281+22]..lib/Memoize.ml[149,5281+22]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/Memoize.ml[149,5281+22]..lib/Memoize.ml[149,5281+22]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/Memoize.ml[149,5281+22]..lib/Memoize.ml[149,5281+22]) ghost
          Texp_apply
          expression (lib/Memoize.ml[149,5281+22]..lib/Memoize.ml[149,5281+22]) ghost
            Texp_ident "Ppx_inline_test_lib!.unset_lib"
          [
            <arg>
              Nolabel
              expression (lib/Memoize.ml[149,5281+22]..lib/Memoize.ml[149,5281+22]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/Memoize.ml[149,5281+22]..lib/Memoize.ml[149,5281+22]) ghost,None)
          ]
    ]
  structure_item (lib/Memoize.ml[149,5281+22]..lib/Memoize.ml[149,5281+22]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/Memoize.ml[149,5281+22]..lib/Memoize.ml[149,5281+22]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/Memoize.ml[149,5281+22]..lib/Memoize.ml[149,5281+22]) ghost
          Texp_apply
          expression (lib/Memoize.ml[149,5281+22]..lib/Memoize.ml[149,5281+22]) ghost
            Texp_ident "Expect_test_collector!.Current_file.unset"
          [
            <arg>
              Nolabel
              expression (lib/Memoize.ml[149,5281+22]..lib/Memoize.ml[149,5281+22]) ghost
                Texp_construct "()"
                []
          ]
    ]
  structure_item (lib/Memoize.ml[149,5281+22]..lib/Memoize.ml[149,5281+22]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/Memoize.ml[149,5281+22]..lib/Memoize.ml[149,5281+22]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/Memoize.ml[149,5281+22]..lib/Memoize.ml[149,5281+22]) ghost
          Texp_apply
          expression (lib/Memoize.ml[149,5281+22]..lib/Memoize.ml[149,5281+22]) ghost
            Texp_ident "Ppx_bench_lib!.Benchmark_accumulator.Current_libname.unset"
          [
            <arg>
              Nolabel
              expression (lib/Memoize.ml[149,5281+22]..lib/Memoize.ml[149,5281+22]) ghost
                Texp_construct "()"
                []
          ]
    ]
  structure_item (lib/Memoize.ml[149,5281+22]..lib/Memoize.ml[149,5281+22]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/Memoize.ml[149,5281+22]..lib/Memoize.ml[149,5281+22]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/Memoize.ml[149,5281+22]..lib/Memoize.ml[149,5281+22]) ghost
          Texp_apply
          expression (lib/Memoize.ml[149,5281+22]..lib/Memoize.ml[149,5281+22]) ghost
            Texp_ident "Ppx_module_timer_runtime!.record_until"
          [
            <arg>
              Nolabel
              expression (lib/Memoize.ml[149,5281+22]..lib/Memoize.ml[149,5281+22]) ghost
                Texp_ident "Ppx_module_timer_runtime!.__MODULE__"
          ]
    ]
]

{<Gbnf_parser__Memoize>
 "Char"[module] ->
   {<Gbnf_parser__Memoize.64>
    "Cycle"[extension constructor] -> <Gbnf_parser__Memoize.27>;
    "add"[value] -> <Gbnf_parser__Memoize.8>;
    "curried"[value] -> <Gbnf_parser__Memoize.52>;
    "curry"[value] -> <Gbnf_parser__Memoize.44>;
    "defensive_fix"[value] -> <Gbnf_parser__Memoize.28>;
    "fix"[value] -> <Gbnf_parser__Memoize.22>;
    "key"[type] -> <Gbnf_parser__Memoize.7>;
    "memoize"[value] -> <Gbnf_parser__Memoize.18>;
    "t"[type] -> <Gbnf_parser__Memoize.12>;
    "uncurry"[value] -> <Gbnf_parser__Memoize.48>;
    "visibly_memoize"[value] -> <Gbnf_parser__Memoize.13>;
    };
 "ForHashedType"[module] ->
   Abs<Gbnf_parser__Memoize.61>
      (T/1721,
       {
        "Cycle"[extension constructor] -> <Gbnf_parser__Memoize.27>;
        "add"[value] -> <Gbnf_parser__Memoize.8>;
        "curried"[value] -> <Gbnf_parser__Memoize.52>;
        "curry"[value] -> <Gbnf_parser__Memoize.44>;
        "defensive_fix"[value] -> <Gbnf_parser__Memoize.28>;
        "fix"[value] -> <Gbnf_parser__Memoize.22>;
        "key"[type] -> <Gbnf_parser__Memoize.7>;
        "memoize"[value] -> <Gbnf_parser__Memoize.18>;
        "t"[type] -> <Gbnf_parser__Memoize.12>;
        "uncurry"[value] -> <Gbnf_parser__Memoize.48>;
        "visibly_memoize"[value] -> <Gbnf_parser__Memoize.13>;
        });
 "ForOrderedType"[module] ->
   Abs<Gbnf_parser__Memoize.59>
      (T/1259,
       {
        "Cycle"[extension constructor] -> <Gbnf_parser__Memoize.27>;
        "add"[value] -> <Gbnf_parser__Memoize.8>;
        "curried"[value] -> <Gbnf_parser__Memoize.52>;
        "curry"[value] -> <Gbnf_parser__Memoize.44>;
        "defensive_fix"[value] -> <Gbnf_parser__Memoize.28>;
        "fix"[value] -> <Gbnf_parser__Memoize.22>;
        "key"[type] -> <Gbnf_parser__Memoize.7>;
        "memoize"[value] -> <Gbnf_parser__Memoize.18>;
        "t"[type] -> <Gbnf_parser__Memoize.12>;
        "uncurry"[value] -> <Gbnf_parser__Memoize.48>;
        "visibly_memoize"[value] -> <Gbnf_parser__Memoize.13>;
        });
 "ForType"[module] ->
   Abs<Gbnf_parser__Memoize.63>
      (T/1903,
       {
        "Cycle"[extension constructor] -> <Gbnf_parser__Memoize.27>;
        "add"[value] -> <Gbnf_parser__Memoize.8>;
        "curried"[value] -> <Gbnf_parser__Memoize.52>;
        "curry"[value] -> <Gbnf_parser__Memoize.44>;
        "defensive_fix"[value] -> <Gbnf_parser__Memoize.28>;
        "fix"[value] -> <Gbnf_parser__Memoize.22>;
        "key"[type] -> <Gbnf_parser__Memoize.7>;
        "memoize"[value] -> <Gbnf_parser__Memoize.18>;
        "t"[type] -> <Gbnf_parser__Memoize.12>;
        "uncurry"[value] -> <Gbnf_parser__Memoize.48>;
        "visibly_memoize"[value] -> <Gbnf_parser__Memoize.13>;
        });
 "Int"[module] ->
   {<Gbnf_parser__Memoize.65>
    "Cycle"[extension constructor] -> <Gbnf_parser__Memoize.27>;
    "add"[value] -> <Gbnf_parser__Memoize.8>;
    "curried"[value] -> <Gbnf_parser__Memoize.52>;
    "curry"[value] -> <Gbnf_parser__Memoize.44>;
    "defensive_fix"[value] -> <Gbnf_parser__Memoize.28>;
    "fix"[value] -> <Gbnf_parser__Memoize.22>;
    "key"[type] -> <Gbnf_parser__Memoize.7>;
    "memoize"[value] -> <Gbnf_parser__Memoize.18>;
    "t"[type] -> <Gbnf_parser__Memoize.12>;
    "uncurry"[value] -> <Gbnf_parser__Memoize.48>;
    "visibly_memoize"[value] -> <Gbnf_parser__Memoize.13>;
    };
 "Make"[module] ->
   Abs<Gbnf_parser__Memoize.57>
      (M/1187,
       {
        "Cycle"[extension constructor] -> <Gbnf_parser__Memoize.27>;
        "add"[value] -> <Gbnf_parser__Memoize.8>;
        "curried"[value] -> <Gbnf_parser__Memoize.52>;
        "curry"[value] -> <Gbnf_parser__Memoize.44>;
        "defensive_fix"[value] -> <Gbnf_parser__Memoize.28>;
        "fix"[value] -> <Gbnf_parser__Memoize.22>;
        "key"[type] -> <Gbnf_parser__Memoize.7>;
        "memoize"[value] -> <Gbnf_parser__Memoize.18>;
        "t"[type] -> <Gbnf_parser__Memoize.12>;
        "uncurry"[value] -> <Gbnf_parser__Memoize.48>;
        "visibly_memoize"[value] -> <Gbnf_parser__Memoize.13>;
        });
 "String"[module] ->
   {<Gbnf_parser__Memoize.66>
    "Cycle"[extension constructor] -> <Gbnf_parser__Memoize.27>;
    "add"[value] -> <Gbnf_parser__Memoize.8>;
    "curried"[value] -> <Gbnf_parser__Memoize.52>;
    "curry"[value] -> <Gbnf_parser__Memoize.44>;
    "defensive_fix"[value] -> <Gbnf_parser__Memoize.28>;
    "fix"[value] -> <Gbnf_parser__Memoize.22>;
    "key"[type] -> <Gbnf_parser__Memoize.7>;
    "memoize"[value] -> <Gbnf_parser__Memoize.18>;
    "t"[type] -> <Gbnf_parser__Memoize.12>;
    "uncurry"[value] -> <Gbnf_parser__Memoize.48>;
    "visibly_memoize"[value] -> <Gbnf_parser__Memoize.13>;
    };
 "rev_take"[value] -> <Gbnf_parser__Memoize.0>;
 }

(seq
  (let
    (*match*/3064 =
       (apply (field_imm 3 (global Ppx_module_timer_runtime!))
         #"Gbnf_parser__Memoize"))
    0)
  (let
    (*match*/3066 =
       (apply
         (field_imm 0
           (field_imm 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
         "gbnf_parser"))
    0)
  (let
    (*match*/3068 =
       (apply (field_imm 0 (field_imm 5 (global Expect_test_collector!)))
         "lib/Memoize.ml"))
    0)
  (let
    (*match*/3070 =
       (apply (field_imm 4 (global Ppx_inline_test_lib!)) "gbnf_parser"
         "Memoize.ml"))
    0)
  (letrec
    (rev_take/1153
       (function accu/1154 n/1155[int] xs/1156
         (catch (if (!= n/1155 0) (exit 13) accu/1154) with (13)
           (if (isint xs/1156)
             (raise
               (makeblock 0 (global Assert_failure/28!)
                 [0: "lib/Memoize.ml" 25 6]))
             (let
               (xs/1158 =a (field_imm 1 xs/1156)
                x/1157 =a (field_imm 0 xs/1156))
               (apply rev_take/1153 (makeblock 0 x/1157 accu/1154)
                 (- n/1155 1) xs/1158))))))
    (setfield_ptr(root-init) 0 (global Gbnf_parser__Memoize!) rev_take/1153))
  (let
    (Make/1247 =
       (function M/3079 is_a_functor
         (let
           (M/1187 =a M/3079
            add/1189 =
              (function x/1191 y/1192 table/1193
                (seq (apply (field_imm 1 M/1187) x/1191 y/1192 table/1193)
                  y/1192))
            visibly_memoize/1195 =
              (function f/1197
                (let
                  (table/1198 = (apply (field_imm 0 M/1187) 0)
                   f/1199 =
                     (function x/1200
                       (try (apply (field_imm 2 M/1187) x/1200 table/1198)
                        with exn/3071
                         (catch
                           (if (== exn/3071 (field_imm 7 (global Stdlib!)))
                             (apply add/1189 x/1200 (apply f/1197 x/1200)
                               table/1198)
                             (exit 14))
                          with (14) (reraise exn/3071)))))
                  (makeblock 0 f/1199 table/1198)))
            memoize/1201 =
              (function f/1203
                (let
                  (*match*/3075 = (apply visibly_memoize/1195 f/1203)
                   _table/1205 =a (field_imm 1 *match*/3075)
                   f/1204 =a (field_imm 0 *match*/3075))
                  f/1204))
            fix/1206 =
              (function ff/1208
                (let (table/1209 = (apply (field_imm 0 M/1187) 0))
                  (letrec
                    (f/1210
                       (function x/1211
                         (try (apply (field_imm 2 M/1187) x/1211 table/1209)
                          with exn/3076
                           (catch
                             (if (== exn/3076 (field_imm 7 (global Stdlib!)))
                               (apply add/1189 x/1211
                                 (apply ff/1208 f/1210 x/1211) table/1209)
                               (exit 18))
                            with (18) (reraise exn/3076)))))
                    f/1210)))
            Cycle/1212 =
              (makeblock 248 "Gbnf_parser.Memoize.Make(M).Cycle"
                (caml_fresh_oo_id 0))
            defensive_fix/1213 =
              (function ff/1215
                (let (table/1216 = (apply (field_imm 0 M/1187) 0))
                  (letrec
                    (f/1217
                       (function stack/1218 depth/1219[int] marked/1220
                         x/1221
                         (try (apply (field_imm 2 M/1187) x/1221 table/1216)
                          with exn/3077
                           (catch
                             (if (== exn/3077 (field_imm 7 (global Stdlib!)))
                               (catch
                                 (try
                                   (exit 19
                                     (apply (field_imm 2 M/1187) x/1221
                                       marked/1220))
                                  with exn/3078
                                   (catch
                                     (if
                                       (== exn/3078
                                         (field_imm 7 (global Stdlib!)))
                                       (seq
                                         (apply (field_imm 1 M/1187) x/1221
                                           depth/1219 marked/1220)
                                         (let
                                           (stack/1223 =
                                              (makeblock 0 x/1221 stack/1218)
                                            depth/1224 =[int]
                                              (+ depth/1219 1)
                                            y/1225 =
                                              (apply ff/1215
                                                (apply f/1217 stack/1223
                                                  depth/1224 marked/1220)
                                                x/1221))
                                           (apply add/1189 x/1221 y/1225
                                             table/1216)))
                                       (exit 20))
                                    with (20) (reraise exn/3078)))
                                with (19 i/1222[int])
                                 (raise
                                   (makeblock 0 Cycle/1212
                                     (apply
                                       (field_imm 0
                                         (global Gbnf_parser__Memoize!))
                                       0 (- depth/1219 i/1222) stack/1218)
                                     x/1221)))
                               (exit 21))
                            with (21) (reraise exn/3077)))))
                    (function x/1226
                      (let
                        (marked/1227 = (apply (field_imm 0 M/1187) 0)
                         stack/1228 = 0
                         depth/1229 =[int] 0)
                        (apply f/1217 stack/1228 depth/1229 marked/1227
                          x/1226))))))
            curry/1230 =
              (function f/1232 x/1233 y/1234
                (apply f/1232 (makeblock 0 x/1233 y/1234)))
            uncurry/1235 =
              (function f/1237 param/1240
                (let
                  (y/1239 =a (field_imm 1 param/1240)
                   x/1238 =a (field_imm 0 param/1240))
                  (apply f/1237 x/1238 y/1239)))
            curried/1241 =
              (function fix/1243 ff/1244
                (let
                  (ff/1245 =
                     (function f/1246
                       (apply uncurry/1235
                         (apply ff/1244 (apply curry/1230 f/1246)))))
                  (apply curry/1230 (apply fix/1243 ff/1245)))))
           (makeblock 0 add/1189 visibly_memoize/1195 memoize/1201 fix/1206
             Cycle/1212 defensive_fix/1213 curry/1230 uncurry/1235
             curried/1241))))
    (seq (setfield_ptr(root-init) 1 (global Gbnf_parser__Memoize!) Make/1247)
      (let
        (ForOrderedType/1637 =
           (function T/3084 is_a_functor
             (let (T/1259 =a T/3084)
               (apply (field_imm 1 (global Gbnf_parser__Memoize!))
                 (let
                   (let/3083 =
                      (apply
                        (let
                          (let/3082 =
                             (field_imm 9 (global Gbnf_parser__Glue!)))
                          (field_imm 9 (global Gbnf_parser__Glue!)))
                        (let
                          (let/3081 =
                             (apply
                               (let
                                 (let/3080 =
                                    (field_imm 0 (global Stdlib__Map!)))
                                 (field_imm 0 (global Stdlib__Map!)))
                               T/1259))
                          (makeblock 0 (field_mut 0 let/3081)
                            (field_mut 1 let/3081) (field_mut 16 let/3081)
                            (field_mut 22 let/3081)))))
                   (makeblock 0 (field_mut 0 let/3083) (field_mut 2 let/3083)
                     (field_mut 3 let/3083) (field_mut 1 let/3083)
                     (field_mut 4 let/3083)))))))
        (seq
          (setfield_ptr(root-init) 2 (global Gbnf_parser__Memoize!)
            ForOrderedType/1637)
          (let
            (ForHashedType/1901 =
               (function T/3087 is_a_functor
                 (let (T/1721 =a T/3087)
                   (apply (field_imm 1 (global Gbnf_parser__Memoize!))
                     (let
                       (let/3086 =
                          (apply
                            (let
                              (let/3085 =
                                 (field_imm 12 (global Gbnf_parser__Glue!)))
                              (field_imm 12 (global Gbnf_parser__Glue!)))
                            T/1721))
                       (makeblock 0 (field_mut 19 let/3086)
                         (field_mut 20 let/3086) (field_mut 21 let/3086)
                         (field_mut 0 let/3086) (field_mut 8 let/3086)))))))
            (seq
              (setfield_ptr(root-init) 3 (global Gbnf_parser__Memoize!)
                ForHashedType/1901)
              (let
                (ForType/1921 =
                   (function T/3089 is_a_functor
                     (let (T/1903 =a T/3089)
                       (apply (field_imm 3 (global Gbnf_parser__Memoize!))
                         (apply
                           (let
                             (let/3088 =
                                (field_imm 4 (global Gbnf_parser__Glue!)))
                             (field_imm 4 (global Gbnf_parser__Glue!)))
                           T/1903)))))
                (seq
                  (setfield_ptr(root-init) 4 (global Gbnf_parser__Memoize!)
                    ForType/1921)
                  (let
                    (Char/1934 =
                       (apply (field_imm 4 (global Gbnf_parser__Memoize!))
                         (let
                           (let/3090 =
                              (field_imm 0 (global Gbnf_parser__Glue!)))
                           (field_imm 0 (global Gbnf_parser__Glue!)))))
                    (seq
                      (setfield_ptr(root-init) 5
                        (global Gbnf_parser__Memoize!) Char/1934)
                      (let
                        (Int/1947 =
                           (apply
                             (field_imm 4 (global Gbnf_parser__Memoize!))
                             (let
                               (let/3091 =
                                  (field_imm 1 (global Gbnf_parser__Glue!)))
                               (field_imm 1 (global Gbnf_parser__Glue!)))))
                        (seq
                          (setfield_ptr(root-init) 6
                            (global Gbnf_parser__Memoize!) Int/1947)
                          (let
                            (String/1960 =
                               (apply
                                 (field_imm 4 (global Gbnf_parser__Memoize!))
                                 (let
                                   (let/3092 =
                                      (field_imm 2
                                        (global Gbnf_parser__Glue!)))
                                   (field_imm 2 (global Gbnf_parser__Glue!)))))
                            (seq
                              (setfield_ptr(root-init) 7
                                (global Gbnf_parser__Memoize!) String/1960)
                              (let
                                (*match*/3094 =
                                   (apply
                                     (field_imm 5
                                       (global Ppx_inline_test_lib!))
                                     "gbnf_parser"))
                                0)
                              (let
                                (*match*/3096 =
                                   (apply
                                     (field_imm 1
                                       (field_imm 5
                                         (global Expect_test_collector!)))
                                     0))
                                0)
                              (let
                                (*match*/3098 =
                                   (apply
                                     (field_imm 1
                                       (field_imm 0
                                         (global Ppx_bench_lib__Benchmark_accumulator!)))
                                     0))
                                0)
                              (let
                                (*match*/3100 =
                                   (apply
                                     (field_imm 4
                                       (global Ppx_module_timer_runtime!))
                                     #"Gbnf_parser__Memoize"))
                                0)
                              0)))))))))))))))
(seq
  (let
    (*match*/3064 =
       (apply (field_imm 3 (global Ppx_module_timer_runtime!))
         #"Gbnf_parser__Memoize"))
    0)
  (let
    (*match*/3066 =
       (apply
         (field_imm 0
           (field_imm 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
         "gbnf_parser"))
    0)
  (let
    (*match*/3068 =
       (apply (field_imm 0 (field_imm 5 (global Expect_test_collector!)))
         "lib/Memoize.ml"))
    0)
  (let
    (*match*/3070 =
       (apply (field_imm 4 (global Ppx_inline_test_lib!)) "gbnf_parser"
         "Memoize.ml"))
    0)
  (letrec
    (rev_take/1153
       (function accu/1154 n/1155[int] xs/1156
         (if (!= n/1155 0)
           (if (isint xs/1156)
             (raise
               (makeblock 0 (global Assert_failure/28!)
                 [0: "lib/Memoize.ml" 25 6]))
             (apply rev_take/1153
               (makeblock 0 (field_imm 0 xs/1156) accu/1154) (- n/1155 1)
               (field_imm 1 xs/1156)))
           accu/1154)))
    (setfield_ptr(root-init) 0 (global Gbnf_parser__Memoize!) rev_take/1153))
  (let
    (Make/1247 =
       (function M/3079 is_a_functor
         (let
           (add/1189 =
              (function x/1191 y/1192 table/1193
                (seq (apply (field_imm 1 M/3079) x/1191 y/1192 table/1193)
                  y/1192))
            visibly_memoize/1195 =
              (function f/1197
                (let
                  (table/1198 = (apply (field_imm 0 M/3079) 0)
                   f/1199 =
                     (function x/1200
                       (try (apply (field_imm 2 M/3079) x/1200 table/1198)
                        with exn/3071
                         (if (== exn/3071 (field_imm 7 (global Stdlib!)))
                           (apply add/1189 x/1200 (apply f/1197 x/1200)
                             table/1198)
                           (reraise exn/3071)))))
                  (makeblock 0 f/1199 table/1198)))
            memoize/1201 =
              (function f/1203
                (let (*match*/3075 = (apply visibly_memoize/1195 f/1203))
                  (field_imm 0 *match*/3075)))
            fix/1206 =
              (function ff/1208
                (let (table/1209 = (apply (field_imm 0 M/3079) 0))
                  (letrec
                    (f/1210
                       (function x/1211
                         (try (apply (field_imm 2 M/3079) x/1211 table/1209)
                          with exn/3076
                           (if (== exn/3076 (field_imm 7 (global Stdlib!)))
                             (apply add/1189 x/1211
                               (apply ff/1208 f/1210 x/1211) table/1209)
                             (reraise exn/3076)))))
                    f/1210)))
            Cycle/1212 =
              (makeblock 248 "Gbnf_parser.Memoize.Make(M).Cycle"
                (caml_fresh_oo_id 0))
            defensive_fix/1213 =
              (function ff/1215
                (let (table/1216 = (apply (field_imm 0 M/3079) 0))
                  (letrec
                    (f/1217
                       (function stack/1218 depth/1219[int] marked/1220
                         x/1221
                         (try (apply (field_imm 2 M/3079) x/1221 table/1216)
                          with exn/3077
                           (if (== exn/3077 (field_imm 7 (global Stdlib!)))
                             (catch
                               (try
                                 (exit 19
                                   (apply (field_imm 2 M/3079) x/1221
                                     marked/1220))
                                with exn/3078
                                 (if
                                   (== exn/3078
                                     (field_imm 7 (global Stdlib!)))
                                   (seq
                                     (apply (field_imm 1 M/3079) x/1221
                                       depth/1219 marked/1220)
                                     (let
                                       (stack/1223 =
                                          (makeblock 0 x/1221 stack/1218)
                                        depth/1224 =[int] (+ depth/1219 1)
                                        y/1225 =
                                          (apply ff/1215
                                            (apply f/1217 stack/1223
                                              depth/1224 marked/1220)
                                            x/1221))
                                       (apply add/1189 x/1221 y/1225
                                         table/1216)))
                                   (reraise exn/3078)))
                              with (19 i/1222[int])
                               (raise
                                 (makeblock 0 Cycle/1212
                                   (apply
                                     (field_imm 0
                                       (global Gbnf_parser__Memoize!))
                                     0 (- depth/1219 i/1222) stack/1218)
                                   x/1221)))
                             (reraise exn/3077)))))
                    (function x/1226
                      (let
                        (marked/1227 = (apply (field_imm 0 M/3079) 0)
                         stack/1228 = 0
                         depth/1229 =[int] 0)
                        (apply f/1217 stack/1228 depth/1229 marked/1227
                          x/1226))))))
            curry/1230 =
              (function f/1232 x/1233 y/1234
                (apply f/1232 (makeblock 0 x/1233 y/1234)))
            uncurry/1235 =
              (function f/1237 param/1240
                (apply f/1237 (field_imm 0 param/1240)
                  (field_imm 1 param/1240)))
            curried/1241 =
              (function fix/1243 ff/1244
                (let
                  (ff/1245 =
                     (function f/1246
                       (apply uncurry/1235
                         (apply ff/1244 (apply curry/1230 f/1246)))))
                  (apply curry/1230 (apply fix/1243 ff/1245)))))
           (makeblock 0 add/1189 visibly_memoize/1195 memoize/1201 fix/1206
             Cycle/1212 defensive_fix/1213 curry/1230 uncurry/1235
             curried/1241))))
    (seq (setfield_ptr(root-init) 1 (global Gbnf_parser__Memoize!) Make/1247)
      (let
        (ForOrderedType/1637 =
           (function T/3084 is_a_functor
             (apply (field_imm 1 (global Gbnf_parser__Memoize!))
               (let
                 (let/3083 =
                    (apply
                      (let
                        (let/3082 = (field_imm 9 (global Gbnf_parser__Glue!)))
                        (field_imm 9 (global Gbnf_parser__Glue!)))
                      (let
                        (let/3081 =
                           (apply
                             (let
                               (let/3080 =
                                  (field_imm 0 (global Stdlib__Map!)))
                               (field_imm 0 (global Stdlib__Map!)))
                             T/3084))
                        (makeblock 0 (field_mut 0 let/3081)
                          (field_mut 1 let/3081) (field_mut 16 let/3081)
                          (field_mut 22 let/3081)))))
                 (makeblock 0 (field_mut 0 let/3083) (field_mut 2 let/3083)
                   (field_mut 3 let/3083) (field_mut 1 let/3083)
                   (field_mut 4 let/3083))))))
        (seq
          (setfield_ptr(root-init) 2 (global Gbnf_parser__Memoize!)
            ForOrderedType/1637)
          (let
            (ForHashedType/1901 =
               (function T/3087 is_a_functor
                 (apply (field_imm 1 (global Gbnf_parser__Memoize!))
                   (let
                     (let/3086 =
                        (apply
                          (let
                            (let/3085 =
                               (field_imm 12 (global Gbnf_parser__Glue!)))
                            (field_imm 12 (global Gbnf_parser__Glue!)))
                          T/3087))
                     (makeblock 0 (field_mut 19 let/3086)
                       (field_mut 20 let/3086) (field_mut 21 let/3086)
                       (field_mut 0 let/3086) (field_mut 8 let/3086))))))
            (seq
              (setfield_ptr(root-init) 3 (global Gbnf_parser__Memoize!)
                ForHashedType/1901)
              (let
                (ForType/1921 =
                   (function T/3089 is_a_functor
                     (apply (field_imm 3 (global Gbnf_parser__Memoize!))
                       (apply
                         (let
                           (let/3088 =
                              (field_imm 4 (global Gbnf_parser__Glue!)))
                           (field_imm 4 (global Gbnf_parser__Glue!)))
                         T/3089))))
                (seq
                  (setfield_ptr(root-init) 4 (global Gbnf_parser__Memoize!)
                    ForType/1921)
                  (let
                    (Char/1934 =
                       (apply (field_imm 4 (global Gbnf_parser__Memoize!))
                         (let
                           (let/3090 =
                              (field_imm 0 (global Gbnf_parser__Glue!)))
                           (field_imm 0 (global Gbnf_parser__Glue!)))))
                    (seq
                      (setfield_ptr(root-init) 5
                        (global Gbnf_parser__Memoize!) Char/1934)
                      (let
                        (Int/1947 =
                           (apply
                             (field_imm 4 (global Gbnf_parser__Memoize!))
                             (let
                               (let/3091 =
                                  (field_imm 1 (global Gbnf_parser__Glue!)))
                               (field_imm 1 (global Gbnf_parser__Glue!)))))
                        (seq
                          (setfield_ptr(root-init) 6
                            (global Gbnf_parser__Memoize!) Int/1947)
                          (let
                            (String/1960 =
                               (apply
                                 (field_imm 4 (global Gbnf_parser__Memoize!))
                                 (let
                                   (let/3092 =
                                      (field_imm 2
                                        (global Gbnf_parser__Glue!)))
                                   (field_imm 2 (global Gbnf_parser__Glue!)))))
                            (seq
                              (setfield_ptr(root-init) 7
                                (global Gbnf_parser__Memoize!) String/1960)
                              (let
                                (*match*/3094 =
                                   (apply
                                     (field_imm 5
                                       (global Ppx_inline_test_lib!))
                                     "gbnf_parser"))
                                0)
                              (let
                                (*match*/3096 =
                                   (apply
                                     (field_imm 1
                                       (field_imm 5
                                         (global Expect_test_collector!)))
                                     0))
                                0)
                              (let
                                (*match*/3098 =
                                   (apply
                                     (field_imm 1
                                       (field_imm 0
                                         (global Ppx_bench_lib__Benchmark_accumulator!)))
                                     0))
                                0)
                              (let
                                (*match*/3100 =
                                   (apply
                                     (field_imm 4
                                       (global Ppx_module_timer_runtime!))
                                     #"Gbnf_parser__Memoize"))
                                0)
                              0)))))))))))))))
