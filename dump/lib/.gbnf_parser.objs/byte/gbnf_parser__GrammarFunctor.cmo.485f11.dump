[
  structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
    Pstr_attribute "ocaml.ppx.context"
    [
      structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
        Pstr_eval
        expression (_none_[0,0+-1]..[0,0+-1]) ghost
          Pexp_record
          [
            "tool_name" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_constant PConst_string("ppx_driver",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
            "include_dirs" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "load_path" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "open_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "for_package" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "None" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "debug" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_threads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_vmthreads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "recursive_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "principal" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "transparent_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unboxed_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unsafe_string" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "cookies" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                Some
                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                    Pexp_tuple
                    [
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_tuple
                        [
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_constant PConst_string("inline_tests",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                          expression (<command-line>[1,0+0]..[1,0+9])
                            Pexp_constant PConst_string("enabled",(<command-line>[1,0+1]..[1,0+8]),None)
                        ]
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                        Some
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_tuple
                            [
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_tuple
                                [
                                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                    Pexp_constant PConst_string("library-name",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                                  expression (<command-line>[1,0+0]..[1,0+13])
                                    Pexp_constant PConst_string("gbnf_parser",(<command-line>[1,0+1]..[1,0+12]),None)
                                ]
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                                None
                            ]
                    ]
          ]
          None
    ]
  structure_item (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
          Ppat_construct "()" (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
          None
        expression (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
          Pexp_apply
          expression (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
            Pexp_ident "Ppx_module_timer_runtime.record_start" (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
                Pexp_ident "Ppx_module_timer_runtime.__MODULE__" (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
          ]
    ]
  structure_item (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
          Ppat_construct "()" (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
          None
        expression (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
          Pexp_apply
          expression (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
            Pexp_ident "Ppx_bench_lib.Benchmark_accumulator.Current_libname.set" (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
          Ppat_construct "()" (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
          None
        expression (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
          Pexp_apply
          expression (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
            Pexp_ident "Expect_test_collector.Current_file.set" (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
          [
            <arg>
            Labelled "absolute_filename"
              expression (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
                Pexp_constant PConst_string("lib/grammarFunctor.ml",(lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
          Ppat_construct "()" (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
          None
        expression (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
          Pexp_apply
          expression (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
            Pexp_ident "Ppx_inline_test_lib.set_lib_and_partition" (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost,None)
            <arg>
            Nolabel
              expression (lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost
                Pexp_constant PConst_string("grammarFunctor.ml",(lib/grammarFunctor.ml[14,976+0]..[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/grammarFunctor.ml[14,976+0]..[14,976+16])
    Pstr_open Fresh
    module_expr (lib/grammarFunctor.ml[14,976+5]..[14,976+16])
      Pmod_ident "BasicSyntax" (lib/grammarFunctor.ml[14,976+5]..[14,976+16])
  structure_item (lib/grammarFunctor.ml[15,993+0]..[15,993+11])
    Pstr_open Fresh
    module_expr (lib/grammarFunctor.ml[15,993+5]..[15,993+11])
      Pmod_ident "Syntax" (lib/grammarFunctor.ml[15,993+5]..[15,993+11])
  structure_item (lib/grammarFunctor.ml[16,1005+0]..[16,1005+14])
    Pstr_open Fresh
    module_expr (lib/grammarFunctor.ml[16,1005+5]..[16,1005+14])
      Pmod_ident "Positions" (lib/grammarFunctor.ml[16,1005+5]..[16,1005+14])
  structure_item (lib/grammarFunctor.ml[18,1021+0]..[1954,58344+3])
    Pstr_module
    "Make" (lib/grammarFunctor.ml[18,1021+7]..[18,1021+11])
      module_expr (lib/grammarFunctor.ml[18,1021+12]..[1954,58344+3])
        Pmod_functor "G" (lib/grammarFunctor.ml[18,1021+13]..[18,1021+14])
        module_type (lib/grammarFunctor.ml[18,1021+17]..[28,1349+3])
          Pmty_signature
          [
            signature_item (lib/grammarFunctor.ml[21,1092+2]..[21,1092+34])
              Psig_value
              value_description "grammar" (lib/grammarFunctor.ml[21,1092+6]..[21,1092+13]) (lib/grammarFunctor.ml[21,1092+2]..[21,1092+34])
                core_type (lib/grammarFunctor.ml[21,1092+15]..[21,1092+34])
                  Ptyp_constr "BasicSyntax.grammar" (lib/grammarFunctor.ml[21,1092+15]..[21,1092+34])
                  []
                []
            signature_item (lib/grammarFunctor.ml[26,1328+2]..[26,1328+19])
              Psig_value
              value_description "verbose" (lib/grammarFunctor.ml[26,1328+6]..[26,1328+13]) (lib/grammarFunctor.ml[26,1328+2]..[26,1328+19])
                core_type (lib/grammarFunctor.ml[26,1328+15]..[26,1328+19])
                  Ptyp_constr "bool" (lib/grammarFunctor.ml[26,1328+15]..[26,1328+19])
                  []
                []
          ]
        module_expr (lib/grammarFunctor.ml[28,1349+5]..[1954,58344+3])
          Pmod_functor ()
          module_expr (lib/grammarFunctor.ml[28,1349+10]..[1954,58344+3])
            Pmod_structure
            [
              structure_item (lib/grammarFunctor.ml[30,1367+2]..[30,1367+8])
                Pstr_open Fresh
                module_expr (lib/grammarFunctor.ml[30,1367+7]..[30,1367+8])
                  Pmod_ident "G" (lib/grammarFunctor.ml[30,1367+7]..[30,1367+8])
              structure_item (lib/grammarFunctor.ml[38,1624+0]..[43,1850+14])
                Pstr_value Nonrec
                [
                  <def>
                    pattern (lib/grammarFunctor.ml[38,1624+4]..[38,1624+9])
                      Ppat_var "index" (lib/grammarFunctor.ml[38,1624+4]..[38,1624+9])
                    expression (lib/grammarFunctor.ml[38,1624+10]..[43,1850+14]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lib/grammarFunctor.ml[38,1624+10]..[38,1624+33])
                        Ppat_constraint
                        pattern (lib/grammarFunctor.ml[38,1624+11]..[38,1624+18])
                          Ppat_var "strings" (lib/grammarFunctor.ml[38,1624+11]..[38,1624+18])
                        core_type (lib/grammarFunctor.ml[38,1624+21]..[38,1624+32])
                          Ptyp_constr "list" (lib/grammarFunctor.ml[38,1624+28]..[38,1624+32])
                          [
                            core_type (lib/grammarFunctor.ml[38,1624+21]..[38,1624+27])
                              Ptyp_constr "string" (lib/grammarFunctor.ml[38,1624+21]..[38,1624+27])
                              []
                          ]
                      expression (lib/grammarFunctor.ml[38,1624+34]..[43,1850+14])
                        Pexp_constraint
                        expression (lib/grammarFunctor.ml[39,1699+2]..[43,1850+14])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[39,1699+6]..[39,1699+10])
                                Ppat_var "name" (lib/grammarFunctor.ml[39,1699+6]..[39,1699+10])
                              expression (lib/grammarFunctor.ml[39,1699+13]..[39,1699+34])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[39,1699+13]..[39,1699+26])
                                  Pexp_ident "Array.of_list" (lib/grammarFunctor.ml[39,1699+13]..[39,1699+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[39,1699+27]..[39,1699+34])
                                      Pexp_ident "strings" (lib/grammarFunctor.ml[39,1699+27]..[39,1699+34])
                                ]
                            <def>
                              pattern (lib/grammarFunctor.ml[40,1734+6]..[40,1734+12])
                                Ppat_tuple
                                [
                                  pattern (lib/grammarFunctor.ml[40,1734+6]..[40,1734+7])
                                    Ppat_var "n" (lib/grammarFunctor.ml[40,1734+6]..[40,1734+7])
                                  pattern (lib/grammarFunctor.ml[40,1734+9]..[40,1734+12])
                                    Ppat_var "map" (lib/grammarFunctor.ml[40,1734+9]..[40,1734+12])
                                ]
                              expression (lib/grammarFunctor.ml[40,1734+15]..[42,1814+32])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[40,1734+15]..[40,1734+29])
                                  Pexp_ident "List.fold_left" (lib/grammarFunctor.ml[40,1734+15]..[40,1734+29])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[40,1734+30]..[42,1814+3])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lib/grammarFunctor.ml[40,1734+35]..[40,1734+43])
                                        Ppat_tuple
                                        [
                                          pattern (lib/grammarFunctor.ml[40,1734+36]..[40,1734+37])
                                            Ppat_var "n" (lib/grammarFunctor.ml[40,1734+36]..[40,1734+37])
                                          pattern (lib/grammarFunctor.ml[40,1734+39]..[40,1734+42])
                                            Ppat_var "map" (lib/grammarFunctor.ml[40,1734+39]..[40,1734+42])
                                        ]
                                      expression (lib/grammarFunctor.ml[40,1734+44]..[41,1783+30]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lib/grammarFunctor.ml[40,1734+44]..[40,1734+45])
                                          Ppat_var "s" (lib/grammarFunctor.ml[40,1734+44]..[40,1734+45])
                                        expression (lib/grammarFunctor.ml[41,1783+4]..[41,1783+30])
                                          Pexp_tuple
                                          [
                                            expression (lib/grammarFunctor.ml[41,1783+4]..[41,1783+7])
                                              Pexp_apply
                                              expression (lib/grammarFunctor.ml[41,1783+5]..[41,1783+6])
                                                Pexp_ident "+" (lib/grammarFunctor.ml[41,1783+5]..[41,1783+6])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[41,1783+4]..[41,1783+5])
                                                    Pexp_ident "n" (lib/grammarFunctor.ml[41,1783+4]..[41,1783+5])
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[41,1783+6]..[41,1783+7])
                                                    Pexp_constant PConst_int (1,None)
                                              ]
                                            expression (lib/grammarFunctor.ml[41,1783+9]..[41,1783+30])
                                              Pexp_apply
                                              expression (lib/grammarFunctor.ml[41,1783+9]..[41,1783+22])
                                                Pexp_ident "StringMap.add" (lib/grammarFunctor.ml[41,1783+9]..[41,1783+22])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[41,1783+23]..[41,1783+24])
                                                    Pexp_ident "s" (lib/grammarFunctor.ml[41,1783+23]..[41,1783+24])
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[41,1783+25]..[41,1783+26])
                                                    Pexp_ident "n" (lib/grammarFunctor.ml[41,1783+25]..[41,1783+26])
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[41,1783+27]..[41,1783+30])
                                                    Pexp_ident "map" (lib/grammarFunctor.ml[41,1783+27]..[41,1783+30])
                                              ]
                                          ]
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[42,1814+4]..[42,1814+24])
                                      Pexp_tuple
                                      [
                                        expression (lib/grammarFunctor.ml[42,1814+5]..[42,1814+6])
                                          Pexp_constant PConst_int (0,None)
                                        expression (lib/grammarFunctor.ml[42,1814+8]..[42,1814+23])
                                          Pexp_ident "StringMap.empty" (lib/grammarFunctor.ml[42,1814+8]..[42,1814+23])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[42,1814+25]..[42,1814+32])
                                      Pexp_ident "strings" (lib/grammarFunctor.ml[42,1814+25]..[42,1814+32])
                                ]
                          ]
                          expression (lib/grammarFunctor.ml[43,1850+2]..[43,1850+14])
                            Pexp_tuple
                            [
                              expression (lib/grammarFunctor.ml[43,1850+2]..[43,1850+3])
                                Pexp_ident "n" (lib/grammarFunctor.ml[43,1850+2]..[43,1850+3])
                              expression (lib/grammarFunctor.ml[43,1850+5]..[43,1850+9])
                                Pexp_ident "name" (lib/grammarFunctor.ml[43,1850+5]..[43,1850+9])
                              expression (lib/grammarFunctor.ml[43,1850+11]..[43,1850+14])
                                Pexp_ident "map" (lib/grammarFunctor.ml[43,1850+11]..[43,1850+14])
                            ]
                        core_type (lib/grammarFunctor.ml[38,1624+36]..[38,1624+72])
                          Ptyp_tuple
                          [
                            core_type (lib/grammarFunctor.ml[38,1624+36]..[38,1624+39])
                              Ptyp_constr "int" (lib/grammarFunctor.ml[38,1624+36]..[38,1624+39])
                              []
                            core_type (lib/grammarFunctor.ml[38,1624+42]..[38,1624+54])
                              Ptyp_constr "array" (lib/grammarFunctor.ml[38,1624+49]..[38,1624+54])
                              [
                                core_type (lib/grammarFunctor.ml[38,1624+42]..[38,1624+48])
                                  Ptyp_constr "string" (lib/grammarFunctor.ml[38,1624+42]..[38,1624+48])
                                  []
                              ]
                            core_type (lib/grammarFunctor.ml[38,1624+57]..[38,1624+72])
                              Ptyp_constr "StringMap.t" (lib/grammarFunctor.ml[38,1624+61]..[38,1624+72])
                              [
                                core_type (lib/grammarFunctor.ml[38,1624+57]..[38,1624+60])
                                  Ptyp_constr "int" (lib/grammarFunctor.ml[38,1624+57]..[38,1624+60])
                                  []
                              ]
                          ]
                ]
              structure_item (lib/grammarFunctor.ml[48,2005+0]..[95,3698+3])
                Pstr_module
                "TokPrecedence" (lib/grammarFunctor.ml[48,2005+7]..[48,2005+20])
                  module_expr (lib/grammarFunctor.ml[48,2005+23]..[95,3698+3])
                    Pmod_structure
                    [
                      structure_item (lib/grammarFunctor.ml[54,2222+2]..[55,2260+23])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[54,2222+6]..[54,2222+17])
                              Ppat_var "ever_useful" (lib/grammarFunctor.ml[54,2222+6]..[54,2222+17])
                            core_type (lib/grammarFunctor.ml[54,2222+20]..[54,2222+35])
                              Ptyp_constr "ref" (lib/grammarFunctor.ml[54,2222+32]..[54,2222+35])
                              [
                                core_type (lib/grammarFunctor.ml[54,2222+20]..[54,2222+31])
                                  Ptyp_constr "StringSet.t" (lib/grammarFunctor.ml[54,2222+20]..[54,2222+31])
                                  []
                              ]
                            expression (lib/grammarFunctor.ml[55,2260+4]..[55,2260+23])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[55,2260+4]..[55,2260+7])
                                Pexp_ident "ref" (lib/grammarFunctor.ml[55,2260+4]..[55,2260+7])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[55,2260+8]..[55,2260+23])
                                    Pexp_ident "StringSet.empty" (lib/grammarFunctor.ml[55,2260+8]..[55,2260+23])
                              ]
                        ]
                      structure_item (lib/grammarFunctor.ml[57,2285+2]..[58,2300+48])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[57,2285+6]..[57,2285+9])
                              Ppat_var "use" (lib/grammarFunctor.ml[57,2285+6]..[57,2285+9])
                            expression (lib/grammarFunctor.ml[57,2285+10]..[58,2300+48]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[57,2285+10]..[57,2285+12])
                                Ppat_var "id" (lib/grammarFunctor.ml[57,2285+10]..[57,2285+12])
                              expression (lib/grammarFunctor.ml[58,2300+4]..[58,2300+48])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[58,2300+16]..[58,2300+18])
                                  Pexp_ident ":=" (lib/grammarFunctor.ml[58,2300+16]..[58,2300+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[58,2300+4]..[58,2300+15])
                                      Pexp_ident "ever_useful" (lib/grammarFunctor.ml[58,2300+4]..[58,2300+15])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[58,2300+19]..[58,2300+48])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[58,2300+19]..[58,2300+32])
                                        Pexp_ident "StringSet.add" (lib/grammarFunctor.ml[58,2300+19]..[58,2300+32])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[58,2300+33]..[58,2300+35])
                                            Pexp_ident "id" (lib/grammarFunctor.ml[58,2300+33]..[58,2300+35])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[58,2300+36]..[58,2300+48])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[58,2300+36]..[58,2300+37])
                                              Pexp_ident "!" (lib/grammarFunctor.ml[58,2300+36]..[58,2300+37])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[58,2300+37]..[58,2300+48])
                                                  Pexp_ident "ever_useful" (lib/grammarFunctor.ml[58,2300+37]..[58,2300+48])
                                            ]
                                      ]
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[68,2789+2]..[69,2819+43])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[68,2789+6]..[68,2789+13])
                              Ppat_var "levelip" (lib/grammarFunctor.ml[68,2789+6]..[68,2789+13])
                            expression (lib/grammarFunctor.ml[68,2789+14]..[69,2819+43]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[68,2789+14]..[68,2789+16])
                                Ppat_var "id" (lib/grammarFunctor.ml[68,2789+14]..[68,2789+16])
                              expression (lib/grammarFunctor.ml[68,2789+17]..[69,2819+43]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[68,2789+17]..[68,2789+27])
                                  Ppat_var "properties" (lib/grammarFunctor.ml[68,2789+17]..[68,2789+27])
                                expression (lib/grammarFunctor.ml[69,2819+4]..[69,2819+43])
                                  Pexp_tuple
                                  [
                                    expression (lib/grammarFunctor.ml[69,2819+4]..[69,2819+17])
                                      Pexp_lazy
                                      expression (lib/grammarFunctor.ml[69,2819+9]..[69,2819+17])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[69,2819+10]..[69,2819+13])
                                          Pexp_ident "use" (lib/grammarFunctor.ml[69,2819+10]..[69,2819+13])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[69,2819+14]..[69,2819+16])
                                              Pexp_ident "id" (lib/grammarFunctor.ml[69,2819+14]..[69,2819+16])
                                        ]
                                    expression (lib/grammarFunctor.ml[69,2819+19]..[69,2819+43])
                                      Pexp_field
                                      expression (lib/grammarFunctor.ml[69,2819+19]..[69,2819+29])
                                        Pexp_ident "properties" (lib/grammarFunctor.ml[69,2819+19]..[69,2819+29])
                                      "tk_precedence" (lib/grammarFunctor.ml[69,2819+30]..[69,2819+43])
                                  ]
                        ]
                      structure_item (lib/grammarFunctor.ml[71,2864+2]..[78,3061+25])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[71,2864+6]..[71,2864+12])
                              Ppat_var "leveli" (lib/grammarFunctor.ml[71,2864+6]..[71,2864+12])
                            expression (lib/grammarFunctor.ml[71,2864+13]..[78,3061+25]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[71,2864+13]..[71,2864+15])
                                Ppat_var "id" (lib/grammarFunctor.ml[71,2864+13]..[71,2864+15])
                              expression (lib/grammarFunctor.ml[72,2882+4]..[78,3061+25])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/grammarFunctor.ml[72,2882+8]..[72,2882+18])
                                      Ppat_var "properties" (lib/grammarFunctor.ml[72,2882+8]..[72,2882+18])
                                    expression (lib/grammarFunctor.ml[73,2903+6]..[76,2978+20])
                                      Pexp_try
                                      expression (lib/grammarFunctor.ml[74,2913+8]..[74,2913+40])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[74,2913+8]..[74,2913+22])
                                          Pexp_ident "StringMap.find" (lib/grammarFunctor.ml[74,2913+8]..[74,2913+22])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[74,2913+23]..[74,2913+25])
                                              Pexp_ident "id" (lib/grammarFunctor.ml[74,2913+23]..[74,2913+25])
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[74,2913+26]..[74,2913+40])
                                              Pexp_field
                                              expression (lib/grammarFunctor.ml[74,2913+26]..[74,2913+33])
                                                Pexp_ident "grammar" (lib/grammarFunctor.ml[74,2913+26]..[74,2913+33])
                                              "tokens" (lib/grammarFunctor.ml[74,2913+34]..[74,2913+40])
                                        ]
                                      [
                                        <case>
                                          pattern (lib/grammarFunctor.ml[75,2954+11]..[75,2954+20])
                                            Ppat_construct "Not_found" (lib/grammarFunctor.ml[75,2954+11]..[75,2954+20])
                                            None
                                          expression (lib/grammarFunctor.ml[76,2978+8]..[76,2978+20])
                                            Pexp_assert
                                            expression (lib/grammarFunctor.ml[76,2978+15]..[76,2978+20])
                                              Pexp_construct "false" (lib/grammarFunctor.ml[76,2978+15]..[76,2978+20])
                                              None
                                      ]
                                ]
                                expression (lib/grammarFunctor.ml[78,3061+4]..[78,3061+25])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[78,3061+4]..[78,3061+11])
                                    Pexp_ident "levelip" (lib/grammarFunctor.ml[78,3061+4]..[78,3061+11])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[78,3061+12]..[78,3061+14])
                                        Pexp_ident "id" (lib/grammarFunctor.ml[78,3061+12]..[78,3061+14])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[78,3061+15]..[78,3061+25])
                                        Pexp_ident "properties" (lib/grammarFunctor.ml[78,3061+15]..[78,3061+25])
                                  ]
                        ]
                      structure_item (lib/grammarFunctor.ml[84,3292+2]..[93,3676+20])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[84,3292+6]..[84,3292+17])
                              Ppat_var "diagnostics" (lib/grammarFunctor.ml[84,3292+6]..[84,3292+17])
                            expression (lib/grammarFunctor.ml[84,3292+18]..[93,3676+20]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[84,3292+18]..[84,3292+20])
                                Ppat_construct "()" (lib/grammarFunctor.ml[84,3292+18]..[84,3292+20])
                                None
                              expression (lib/grammarFunctor.ml[85,3315+4]..[93,3676+20])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[85,3315+4]..[85,3315+18])
                                  Pexp_ident "StringMap.iter" (lib/grammarFunctor.ml[85,3315+4]..[85,3315+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[85,3315+19]..[93,3676+5])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lib/grammarFunctor.ml[85,3315+24]..[85,3315+26])
                                        Ppat_var "id" (lib/grammarFunctor.ml[85,3315+24]..[85,3315+26])
                                      expression (lib/grammarFunctor.ml[85,3315+27]..[92,3604+71]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lib/grammarFunctor.ml[85,3315+27]..[85,3315+37])
                                          Ppat_var "properties" (lib/grammarFunctor.ml[85,3315+27]..[85,3315+37])
                                        expression (lib/grammarFunctor.ml[86,3356+6]..[92,3604+71])
                                          Pexp_ifthenelse
                                          expression (lib/grammarFunctor.ml[86,3356+9]..[86,3356+44])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[86,3356+9]..[86,3356+12])
                                              Pexp_ident "not" (lib/grammarFunctor.ml[86,3356+9]..[86,3356+12])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[86,3356+13]..[86,3356+44])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[86,3356+14]..[86,3356+27])
                                                    Pexp_ident "StringSet.mem" (lib/grammarFunctor.ml[86,3356+14]..[86,3356+27])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[86,3356+28]..[86,3356+30])
                                                        Pexp_ident "id" (lib/grammarFunctor.ml[86,3356+28]..[86,3356+30])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[86,3356+31]..[86,3356+43])
                                                        Pexp_apply
                                                        expression (lib/grammarFunctor.ml[86,3356+31]..[86,3356+32])
                                                          Pexp_ident "!" (lib/grammarFunctor.ml[86,3356+31]..[86,3356+32])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/grammarFunctor.ml[86,3356+32]..[86,3356+43])
                                                              Pexp_ident "ever_useful" (lib/grammarFunctor.ml[86,3356+32]..[86,3356+43])
                                                        ]
                                                  ]
                                            ]
                                          expression (lib/grammarFunctor.ml[87,3406+8]..[92,3604+71])
                                            Pexp_match
                                            expression (lib/grammarFunctor.ml[87,3406+14]..[87,3406+38])
                                              Pexp_field
                                              expression (lib/grammarFunctor.ml[87,3406+14]..[87,3406+24])
                                                Pexp_ident "properties" (lib/grammarFunctor.ml[87,3406+14]..[87,3406+24])
                                              "tk_precedence" (lib/grammarFunctor.ml[87,3406+25]..[87,3406+38])
                                            [
                                              <case>
                                                pattern (lib/grammarFunctor.ml[88,3450+10]..[88,3450+29])
                                                  Ppat_construct "UndefinedPrecedence" (lib/grammarFunctor.ml[88,3450+10]..[88,3450+29])
                                                  None
                                                expression (lib/grammarFunctor.ml[89,3483+12]..[89,3483+14])
                                                  Pexp_construct "()" (lib/grammarFunctor.ml[89,3483+12]..[89,3483+14])
                                                  None
                                              <case>
                                                pattern (lib/grammarFunctor.ml[90,3498+10]..[90,3498+44])
                                                  Ppat_construct "PrecedenceLevel" (lib/grammarFunctor.ml[90,3498+10]..[90,3498+25])
                                                  Some
                                                    []
                                                    pattern (lib/grammarFunctor.ml[90,3498+26]..[90,3498+44])
                                                      Ppat_tuple
                                                      [
                                                        pattern (lib/grammarFunctor.ml[90,3498+27]..[90,3498+28])
                                                          Ppat_any
                                                        pattern (lib/grammarFunctor.ml[90,3498+30]..[90,3498+31])
                                                          Ppat_any
                                                        pattern (lib/grammarFunctor.ml[90,3498+33]..[90,3498+37])
                                                          Ppat_var "pos1" (lib/grammarFunctor.ml[90,3498+33]..[90,3498+37])
                                                        pattern (lib/grammarFunctor.ml[90,3498+39]..[90,3498+43])
                                                          Ppat_var "pos2" (lib/grammarFunctor.ml[90,3498+39]..[90,3498+43])
                                                      ]
                                                expression (lib/grammarFunctor.ml[91,3546+12]..[92,3604+71])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[91,3546+12]..[91,3546+25])
                                                    Pexp_ident "Error.warning" (lib/grammarFunctor.ml[91,3546+12]..[91,3546+25])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[91,3546+26]..[91,3546+57])
                                                        Pexp_construct "::" (lib/grammarFunctor.ml[91,3546+27]..[91,3546+57]) ghost
                                                        Some
                                                          expression (lib/grammarFunctor.ml[91,3546+27]..[91,3546+57]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (lib/grammarFunctor.ml[91,3546+27]..[91,3546+56])
                                                                Pexp_apply
                                                                expression (lib/grammarFunctor.ml[91,3546+27]..[91,3546+43])
                                                                  Pexp_ident "Positions.import" (lib/grammarFunctor.ml[91,3546+27]..[91,3546+43])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lib/grammarFunctor.ml[91,3546+44]..[91,3546+56])
                                                                      Pexp_tuple
                                                                      [
expression (lib/grammarFunctor.ml[91,3546+45]..[91,3546+49])
  Pexp_ident "pos1" (lib/grammarFunctor.ml[91,3546+45]..[91,3546+49])
expression (lib/grammarFunctor.ml[91,3546+51]..[91,3546+55])
  Pexp_ident "pos2" (lib/grammarFunctor.ml[91,3546+51]..[91,3546+55])
                                                                      ]
                                                                ]
                                                              expression (lib/grammarFunctor.ml[91,3546+56]..[91,3546+57]) ghost
                                                                Pexp_construct "[]" (lib/grammarFunctor.ml[91,3546+56]..[91,3546+57]) ghost
                                                                None
                                                            ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[92,3604+14]..[92,3604+68])
                                                        Pexp_constant PConst_string("the precedence level assigned to %s is never useful.",(lib/grammarFunctor.ml[92,3604+15]..[92,3604+67]),None)
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[92,3604+69]..[92,3604+71])
                                                        Pexp_ident "id" (lib/grammarFunctor.ml[92,3604+69]..[92,3604+71])
                                                  ]
                                            ]
                                          None
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[93,3676+6]..[93,3676+20])
                                      Pexp_field
                                      expression (lib/grammarFunctor.ml[93,3676+6]..[93,3676+13])
                                        Pexp_ident "grammar" (lib/grammarFunctor.ml[93,3676+6]..[93,3676+13])
                                      "tokens" (lib/grammarFunctor.ml[93,3676+14]..[93,3676+20])
                                ]
                        ]
                    ]
              structure_item (lib/grammarFunctor.ml[100,3803+0]..[203,5995+3])
                Pstr_module
                "Nonterminal" (lib/grammarFunctor.ml[100,3803+7]..[100,3803+18])
                  module_expr (lib/grammarFunctor.ml[100,3803+21]..[203,5995+3])
                    Pmod_structure
                    [
                      structure_item (lib/grammarFunctor.ml[102,3832+2]..[102,3832+14])
                        Pstr_type Rec
                        [
                          type_declaration "t" (lib/grammarFunctor.ml[102,3832+7]..[102,3832+8]) (lib/grammarFunctor.ml[102,3832+2]..[102,3832+14])
                            ptype_params =
                              []
                            ptype_cstrs =
                              []
                            ptype_kind =
                              Ptype_abstract
                            ptype_private = Public
                            ptype_manifest =
                              Some
                                core_type (lib/grammarFunctor.ml[102,3832+11]..[102,3832+14])
                                  Ptyp_constr "int" (lib/grammarFunctor.ml[102,3832+11]..[102,3832+14])
                                  []
                        ]
                      structure_item (lib/grammarFunctor.ml[104,3848+2]..[104,3848+15])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[104,3848+6]..[104,3848+9])
                              Ppat_var "n2i" (lib/grammarFunctor.ml[104,3848+6]..[104,3848+9])
                            expression (lib/grammarFunctor.ml[104,3848+10]..[104,3848+15]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[104,3848+10]..[104,3848+11])
                                Ppat_var "i" (lib/grammarFunctor.ml[104,3848+10]..[104,3848+11])
                              expression (lib/grammarFunctor.ml[104,3848+14]..[104,3848+15])
                                Pexp_ident "i" (lib/grammarFunctor.ml[104,3848+14]..[104,3848+15])
                        ]
                      structure_item (lib/grammarFunctor.ml[106,3865+2]..[107,3899+13])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[106,3865+6]..[106,3865+11])
                              Ppat_var "equal" (lib/grammarFunctor.ml[106,3865+6]..[106,3865+11])
                            expression (lib/grammarFunctor.ml[106,3865+12]..[107,3899+13]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[106,3865+12]..[106,3865+21])
                                Ppat_constraint
                                pattern (lib/grammarFunctor.ml[106,3865+13]..[106,3865+16])
                                  Ppat_var "nt1" (lib/grammarFunctor.ml[106,3865+13]..[106,3865+16])
                                core_type (lib/grammarFunctor.ml[106,3865+19]..[106,3865+20])
                                  Ptyp_constr "t" (lib/grammarFunctor.ml[106,3865+19]..[106,3865+20])
                                  []
                              expression (lib/grammarFunctor.ml[106,3865+22]..[107,3899+13]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[106,3865+22]..[106,3865+31])
                                  Ppat_constraint
                                  pattern (lib/grammarFunctor.ml[106,3865+23]..[106,3865+26])
                                    Ppat_var "nt2" (lib/grammarFunctor.ml[106,3865+23]..[106,3865+26])
                                  core_type (lib/grammarFunctor.ml[106,3865+29]..[106,3865+30])
                                    Ptyp_constr "t" (lib/grammarFunctor.ml[106,3865+29]..[106,3865+30])
                                    []
                                expression (lib/grammarFunctor.ml[107,3899+4]..[107,3899+13])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[107,3899+8]..[107,3899+9])
                                    Pexp_ident "=" (lib/grammarFunctor.ml[107,3899+8]..[107,3899+9])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[107,3899+4]..[107,3899+7])
                                        Pexp_ident "nt1" (lib/grammarFunctor.ml[107,3899+4]..[107,3899+7])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[107,3899+10]..[107,3899+13])
                                        Pexp_ident "nt2" (lib/grammarFunctor.ml[107,3899+10]..[107,3899+13])
                                  ]
                        ]
                      structure_item (lib/grammarFunctor.ml[109,3914+2]..[109,3914+19])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[109,3914+6]..[109,3914+13])
                              Ppat_var "compare" (lib/grammarFunctor.ml[109,3914+6]..[109,3914+13])
                            expression (lib/grammarFunctor.ml[109,3914+16]..[109,3914+19])
                              Pexp_ident "-" (lib/grammarFunctor.ml[109,3914+16]..[109,3914+19])
                        ]
                      structure_item (lib/grammarFunctor.ml[115,4103+2]..[116,4134+83])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[115,4103+6]..[115,4103+28])
                              Ppat_var "new_start_nonterminals" (lib/grammarFunctor.ml[115,4103+6]..[115,4103+28])
                            expression (lib/grammarFunctor.ml[116,4134+4]..[116,4134+83])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[116,4134+4]..[116,4134+18])
                                Pexp_ident "StringSet.fold" (lib/grammarFunctor.ml[116,4134+4]..[116,4134+18])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[116,4134+19]..[116,4134+58])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lib/grammarFunctor.ml[116,4134+24]..[116,4134+30])
                                      Ppat_var "symbol" (lib/grammarFunctor.ml[116,4134+24]..[116,4134+30])
                                    expression (lib/grammarFunctor.ml[116,4134+31]..[116,4134+57]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lib/grammarFunctor.ml[116,4134+31]..[116,4134+33])
                                        Ppat_var "ss" (lib/grammarFunctor.ml[116,4134+31]..[116,4134+33])
                                      expression (lib/grammarFunctor.ml[116,4134+37]..[116,4134+57])
                                        Pexp_construct "::" (lib/grammarFunctor.ml[116,4134+52]..[116,4134+54])
                                        Some
                                          expression (lib/grammarFunctor.ml[116,4134+37]..[116,4134+57]) ghost
                                            Pexp_tuple
                                            [
                                              expression (lib/grammarFunctor.ml[116,4134+37]..[116,4134+51])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[116,4134+45]..[116,4134+46])
                                                  Pexp_ident "^" (lib/grammarFunctor.ml[116,4134+45]..[116,4134+46])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[116,4134+38]..[116,4134+44])
                                                      Pexp_ident "symbol" (lib/grammarFunctor.ml[116,4134+38]..[116,4134+44])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[116,4134+47]..[116,4134+50])
                                                      Pexp_constant PConst_string("'",(lib/grammarFunctor.ml[116,4134+48]..[116,4134+49]),None)
                                                ]
                                              expression (lib/grammarFunctor.ml[116,4134+55]..[116,4134+57])
                                                Pexp_ident "ss" (lib/grammarFunctor.ml[116,4134+55]..[116,4134+57])
                                            ]
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[116,4134+59]..[116,4134+80])
                                    Pexp_field
                                    expression (lib/grammarFunctor.ml[116,4134+59]..[116,4134+66])
                                      Pexp_ident "grammar" (lib/grammarFunctor.ml[116,4134+59]..[116,4134+66])
                                    "start_symbols" (lib/grammarFunctor.ml[116,4134+67]..[116,4134+80])
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[116,4134+81]..[116,4134+83])
                                    Pexp_construct "[]" (lib/grammarFunctor.ml[116,4134+81]..[116,4134+83])
                                    None
                              ]
                        ]
                      structure_item (lib/grammarFunctor.ml[118,4219+2]..[119,4249+24])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[118,4219+6]..[118,4219+27])
                              Ppat_var "original_nonterminals" (lib/grammarFunctor.ml[118,4219+6]..[118,4219+27])
                            expression (lib/grammarFunctor.ml[119,4249+4]..[119,4249+24])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[119,4249+4]..[119,4249+16])
                                Pexp_ident "nonterminals" (lib/grammarFunctor.ml[119,4249+4]..[119,4249+16])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[119,4249+17]..[119,4249+24])
                                    Pexp_ident "grammar" (lib/grammarFunctor.ml[119,4249+17]..[119,4249+24])
                              ]
                        ]
                      structure_item (lib/grammarFunctor.ml[121,4275+2]..[122,4289+38])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[121,4275+6]..[121,4275+11])
                              Ppat_var "start" (lib/grammarFunctor.ml[121,4275+6]..[121,4275+11])
                            expression (lib/grammarFunctor.ml[122,4289+4]..[122,4289+38])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[122,4289+4]..[122,4289+15])
                                Pexp_ident "List.length" (lib/grammarFunctor.ml[122,4289+4]..[122,4289+15])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[122,4289+16]..[122,4289+38])
                                    Pexp_ident "new_start_nonterminals" (lib/grammarFunctor.ml[122,4289+16]..[122,4289+38])
                              ]
                        ]
                      structure_item (lib/grammarFunctor.ml[124,4329+2]..[125,4395+58])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[124,4329+6]..[124,4329+63])
                              Ppat_tuple
                              [
                                pattern (lib/grammarFunctor.ml[124,4329+6]..[124,4329+15])
                                  Ppat_constraint
                                  pattern (lib/grammarFunctor.ml[124,4329+7]..[124,4329+8])
                                    Ppat_var "n" (lib/grammarFunctor.ml[124,4329+7]..[124,4329+8])
                                  core_type (lib/grammarFunctor.ml[124,4329+11]..[124,4329+14])
                                    Ptyp_constr "int" (lib/grammarFunctor.ml[124,4329+11]..[124,4329+14])
                                    []
                                pattern (lib/grammarFunctor.ml[124,4329+17]..[124,4329+38])
                                  Ppat_constraint
                                  pattern (lib/grammarFunctor.ml[124,4329+18]..[124,4329+22])
                                    Ppat_var "name" (lib/grammarFunctor.ml[124,4329+18]..[124,4329+22])
                                  core_type (lib/grammarFunctor.ml[124,4329+25]..[124,4329+37])
                                    Ptyp_constr "array" (lib/grammarFunctor.ml[124,4329+32]..[124,4329+37])
                                    [
                                      core_type (lib/grammarFunctor.ml[124,4329+25]..[124,4329+31])
                                        Ptyp_constr "string" (lib/grammarFunctor.ml[124,4329+25]..[124,4329+31])
                                        []
                                    ]
                                pattern (lib/grammarFunctor.ml[124,4329+40]..[124,4329+63])
                                  Ppat_constraint
                                  pattern (lib/grammarFunctor.ml[124,4329+41]..[124,4329+44])
                                    Ppat_var "map" (lib/grammarFunctor.ml[124,4329+41]..[124,4329+44])
                                  core_type (lib/grammarFunctor.ml[124,4329+47]..[124,4329+62])
                                    Ptyp_constr "StringMap.t" (lib/grammarFunctor.ml[124,4329+51]..[124,4329+62])
                                    [
                                      core_type (lib/grammarFunctor.ml[124,4329+47]..[124,4329+50])
                                        Ptyp_constr "int" (lib/grammarFunctor.ml[124,4329+47]..[124,4329+50])
                                        []
                                    ]
                              ]
                            expression (lib/grammarFunctor.ml[125,4395+4]..[125,4395+58])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[125,4395+4]..[125,4395+9])
                                Pexp_ident "index" (lib/grammarFunctor.ml[125,4395+4]..[125,4395+9])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[125,4395+10]..[125,4395+58])
                                    Pexp_apply
                                    expression (lib/grammarFunctor.ml[125,4395+34]..[125,4395+35])
                                      Pexp_ident "@" (lib/grammarFunctor.ml[125,4395+34]..[125,4395+35])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[125,4395+11]..[125,4395+33])
                                          Pexp_ident "new_start_nonterminals" (lib/grammarFunctor.ml[125,4395+11]..[125,4395+33])
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[125,4395+36]..[125,4395+57])
                                          Pexp_ident "original_nonterminals" (lib/grammarFunctor.ml[125,4395+36]..[125,4395+57])
                                    ]
                              ]
                        ]
                      structure_item (lib/grammarFunctor.ml[135,4702+2]..[136,4731+14])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[135,4702+6]..[135,4702+23])
                              Ppat_var "is_internal_start" (lib/grammarFunctor.ml[135,4702+6]..[135,4702+23])
                            expression (lib/grammarFunctor.ml[135,4702+24]..[136,4731+14]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[135,4702+24]..[135,4702+26])
                                Ppat_var "nt" (lib/grammarFunctor.ml[135,4702+24]..[135,4702+26])
                              expression (lib/grammarFunctor.ml[136,4731+4]..[136,4731+14])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[136,4731+7]..[136,4731+8])
                                  Pexp_ident "<" (lib/grammarFunctor.ml[136,4731+7]..[136,4731+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[136,4731+4]..[136,4731+6])
                                      Pexp_ident "nt" (lib/grammarFunctor.ml[136,4731+4]..[136,4731+6])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[136,4731+9]..[136,4731+14])
                                      Pexp_ident "start" (lib/grammarFunctor.ml[136,4731+9]..[136,4731+14])
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[138,4747+2]..[139,4772+49])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[138,4747+6]..[138,4747+19])
                              Ppat_var "is_user_start" (lib/grammarFunctor.ml[138,4747+6]..[138,4747+19])
                            expression (lib/grammarFunctor.ml[138,4747+20]..[139,4772+49]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[138,4747+20]..[138,4747+22])
                                Ppat_var "nt" (lib/grammarFunctor.ml[138,4747+20]..[138,4747+22])
                              expression (lib/grammarFunctor.ml[139,4772+4]..[139,4772+49])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[139,4772+4]..[139,4772+17])
                                  Pexp_ident "StringSet.mem" (lib/grammarFunctor.ml[139,4772+4]..[139,4772+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[139,4772+18]..[139,4772+27])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[139,4772+18]..[139,4772+27]) ghost
                                        Pexp_ident "Array.get" (lib/grammarFunctor.ml[139,4772+18]..[139,4772+27]) ghost
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[139,4772+18]..[139,4772+22])
                                            Pexp_ident "name" (lib/grammarFunctor.ml[139,4772+18]..[139,4772+22])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[139,4772+24]..[139,4772+26])
                                            Pexp_ident "nt" (lib/grammarFunctor.ml[139,4772+24]..[139,4772+26])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[139,4772+28]..[139,4772+49])
                                      Pexp_field
                                      expression (lib/grammarFunctor.ml[139,4772+28]..[139,4772+35])
                                        Pexp_ident "grammar" (lib/grammarFunctor.ml[139,4772+28]..[139,4772+35])
                                      "start_symbols" (lib/grammarFunctor.ml[139,4772+36]..[139,4772+49])
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[141,4823+2]..[145,4912+15])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[141,4823+6]..[141,4823+11])
                              Ppat_var "print" (lib/grammarFunctor.ml[141,4823+6]..[141,4823+11])
                            expression (lib/grammarFunctor.ml[141,4823+12]..[145,4912+15]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[141,4823+12]..[141,4823+21])
                                Ppat_var "normalize" (lib/grammarFunctor.ml[141,4823+12]..[141,4823+21])
                              expression (lib/grammarFunctor.ml[141,4823+22]..[145,4912+15]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[141,4823+22]..[141,4823+24])
                                  Ppat_var "nt" (lib/grammarFunctor.ml[141,4823+22]..[141,4823+24])
                                expression (lib/grammarFunctor.ml[142,4850+4]..[145,4912+15])
                                  Pexp_ifthenelse
                                  expression (lib/grammarFunctor.ml[142,4850+7]..[142,4850+16])
                                    Pexp_ident "normalize" (lib/grammarFunctor.ml[142,4850+7]..[142,4850+16])
                                  expression (lib/grammarFunctor.ml[143,4872+6]..[143,4872+30])
                                    Pexp_apply
                                    expression (lib/grammarFunctor.ml[143,4872+6]..[143,4872+20])
                                      Pexp_ident "Misc.normalize" (lib/grammarFunctor.ml[143,4872+6]..[143,4872+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[143,4872+21]..[143,4872+30])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[143,4872+21]..[143,4872+30]) ghost
                                            Pexp_ident "Array.get" (lib/grammarFunctor.ml[143,4872+21]..[143,4872+30]) ghost
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[143,4872+21]..[143,4872+25])
                                                Pexp_ident "name" (lib/grammarFunctor.ml[143,4872+21]..[143,4872+25])
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[143,4872+27]..[143,4872+29])
                                                Pexp_ident "nt" (lib/grammarFunctor.ml[143,4872+27]..[143,4872+29])
                                          ]
                                    ]
                                  Some
                                    expression (lib/grammarFunctor.ml[145,4912+6]..[145,4912+15])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[145,4912+6]..[145,4912+15]) ghost
                                        Pexp_ident "Array.get" (lib/grammarFunctor.ml[145,4912+6]..[145,4912+15]) ghost
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[145,4912+6]..[145,4912+10])
                                            Pexp_ident "name" (lib/grammarFunctor.ml[145,4912+6]..[145,4912+10])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[145,4912+12]..[145,4912+14])
                                            Pexp_ident "nt" (lib/grammarFunctor.ml[145,4912+12]..[145,4912+14])
                                      ]
                        ]
                      structure_item (lib/grammarFunctor.ml[147,4929+2]..[148,4949+27])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[147,4929+6]..[147,4929+12])
                              Ppat_var "lookup" (lib/grammarFunctor.ml[147,4929+6]..[147,4929+12])
                            expression (lib/grammarFunctor.ml[147,4929+13]..[148,4949+27]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[147,4929+13]..[147,4929+17])
                                Ppat_var "name" (lib/grammarFunctor.ml[147,4929+13]..[147,4929+17])
                              expression (lib/grammarFunctor.ml[148,4949+4]..[148,4949+27])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[148,4949+4]..[148,4949+18])
                                  Pexp_ident "StringMap.find" (lib/grammarFunctor.ml[148,4949+4]..[148,4949+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[148,4949+19]..[148,4949+23])
                                      Pexp_ident "name" (lib/grammarFunctor.ml[148,4949+19]..[148,4949+23])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[148,4949+24]..[148,4949+27])
                                      Pexp_ident "map" (lib/grammarFunctor.ml[148,4949+24]..[148,4949+27])
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[150,4978+2]..[151,4999+61])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[150,4978+6]..[150,4978+15])
                              Ppat_var "positions" (lib/grammarFunctor.ml[150,4978+6]..[150,4978+15])
                            expression (lib/grammarFunctor.ml[150,4978+16]..[151,4999+61]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[150,4978+16]..[150,4978+18])
                                Ppat_var "nt" (lib/grammarFunctor.ml[150,4978+16]..[150,4978+18])
                              expression (lib/grammarFunctor.ml[151,4999+4]..[151,4999+61])
                                Pexp_field
                                expression (lib/grammarFunctor.ml[151,4999+4]..[151,4999+51])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[151,4999+5]..[151,4999+19])
                                    Pexp_ident "StringMap.find" (lib/grammarFunctor.ml[151,4999+5]..[151,4999+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[151,4999+20]..[151,4999+36])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[151,4999+21]..[151,4999+26])
                                          Pexp_ident "print" (lib/grammarFunctor.ml[151,4999+21]..[151,4999+26])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[151,4999+27]..[151,4999+32])
                                              Pexp_construct "false" (lib/grammarFunctor.ml[151,4999+27]..[151,4999+32])
                                              None
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[151,4999+33]..[151,4999+35])
                                              Pexp_ident "nt" (lib/grammarFunctor.ml[151,4999+33]..[151,4999+35])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[151,4999+37]..[151,4999+50])
                                        Pexp_field
                                        expression (lib/grammarFunctor.ml[151,4999+37]..[151,4999+44])
                                          Pexp_ident "grammar" (lib/grammarFunctor.ml[151,4999+37]..[151,4999+44])
                                        "rules" (lib/grammarFunctor.ml[151,4999+45]..[151,4999+50])
                                  ]
                                "positions" (lib/grammarFunctor.ml[151,4999+52]..[151,4999+61])
                        ]
                      structure_item (lib/grammarFunctor.ml[153,5062+2]..[154,5077+18])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[153,5062+6]..[153,5062+10])
                              Ppat_var "init" (lib/grammarFunctor.ml[153,5062+6]..[153,5062+10])
                            expression (lib/grammarFunctor.ml[153,5062+11]..[154,5077+18]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[153,5062+11]..[153,5062+12])
                                Ppat_var "f" (lib/grammarFunctor.ml[153,5062+11]..[153,5062+12])
                              expression (lib/grammarFunctor.ml[154,5077+4]..[154,5077+18])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[154,5077+4]..[154,5077+14])
                                  Pexp_ident "Array.init" (lib/grammarFunctor.ml[154,5077+4]..[154,5077+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[154,5077+15]..[154,5077+16])
                                      Pexp_ident "n" (lib/grammarFunctor.ml[154,5077+15]..[154,5077+16])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[154,5077+17]..[154,5077+18])
                                      Pexp_ident "f" (lib/grammarFunctor.ml[154,5077+17]..[154,5077+18])
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[156,5097+2]..[157,5112+18])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[156,5097+6]..[156,5097+10])
                              Ppat_var "iter" (lib/grammarFunctor.ml[156,5097+6]..[156,5097+10])
                            expression (lib/grammarFunctor.ml[156,5097+11]..[157,5112+18]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[156,5097+11]..[156,5097+12])
                                Ppat_var "f" (lib/grammarFunctor.ml[156,5097+11]..[156,5097+12])
                              expression (lib/grammarFunctor.ml[157,5112+4]..[157,5112+18])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[157,5112+4]..[157,5112+14])
                                  Pexp_ident "Misc.iteri" (lib/grammarFunctor.ml[157,5112+4]..[157,5112+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[157,5112+15]..[157,5112+16])
                                      Pexp_ident "n" (lib/grammarFunctor.ml[157,5112+15]..[157,5112+16])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[157,5112+17]..[157,5112+18])
                                      Pexp_ident "f" (lib/grammarFunctor.ml[157,5112+17]..[157,5112+18])
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[159,5132+2]..[160,5152+23])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[159,5132+6]..[159,5132+10])
                              Ppat_var "fold" (lib/grammarFunctor.ml[159,5132+6]..[159,5132+10])
                            expression (lib/grammarFunctor.ml[159,5132+11]..[160,5152+23]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[159,5132+11]..[159,5132+12])
                                Ppat_var "f" (lib/grammarFunctor.ml[159,5132+11]..[159,5132+12])
                              expression (lib/grammarFunctor.ml[159,5132+13]..[160,5152+23]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[159,5132+13]..[159,5132+17])
                                  Ppat_var "accu" (lib/grammarFunctor.ml[159,5132+13]..[159,5132+17])
                                expression (lib/grammarFunctor.ml[160,5152+4]..[160,5152+23])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[160,5152+4]..[160,5152+14])
                                    Pexp_ident "Misc.foldi" (lib/grammarFunctor.ml[160,5152+4]..[160,5152+14])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[160,5152+15]..[160,5152+16])
                                        Pexp_ident "n" (lib/grammarFunctor.ml[160,5152+15]..[160,5152+16])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[160,5152+17]..[160,5152+18])
                                        Pexp_ident "f" (lib/grammarFunctor.ml[160,5152+17]..[160,5152+18])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[160,5152+19]..[160,5152+23])
                                        Pexp_ident "accu" (lib/grammarFunctor.ml[160,5152+19]..[160,5152+23])
                                  ]
                        ]
                      structure_item (lib/grammarFunctor.ml[162,5177+2]..[163,5191+17])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[162,5177+6]..[162,5177+9])
                              Ppat_var "map" (lib/grammarFunctor.ml[162,5177+6]..[162,5177+9])
                            expression (lib/grammarFunctor.ml[162,5177+10]..[163,5191+17]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[162,5177+10]..[162,5177+11])
                                Ppat_var "f" (lib/grammarFunctor.ml[162,5177+10]..[162,5177+11])
                              expression (lib/grammarFunctor.ml[163,5191+4]..[163,5191+17])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[163,5191+4]..[163,5191+13])
                                  Pexp_ident "Misc.mapi" (lib/grammarFunctor.ml[163,5191+4]..[163,5191+13])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[163,5191+14]..[163,5191+15])
                                      Pexp_ident "n" (lib/grammarFunctor.ml[163,5191+14]..[163,5191+15])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[163,5191+16]..[163,5191+17])
                                      Pexp_ident "f" (lib/grammarFunctor.ml[163,5191+16]..[163,5191+17])
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[165,5210+2]..[168,5268+8])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[165,5210+6]..[165,5210+11])
                              Ppat_var "iterx" (lib/grammarFunctor.ml[165,5210+6]..[165,5210+11])
                            expression (lib/grammarFunctor.ml[165,5210+12]..[168,5268+8]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[165,5210+12]..[165,5210+13])
                                Ppat_var "f" (lib/grammarFunctor.ml[165,5210+12]..[165,5210+13])
                              expression (lib/grammarFunctor.ml[166,5226+4]..[168,5268+8])
                                Pexp_for Up
                                pattern (lib/grammarFunctor.ml[166,5226+8]..[166,5226+10])
                                  Ppat_var "nt" (lib/grammarFunctor.ml[166,5226+8]..[166,5226+10])
                                expression (lib/grammarFunctor.ml[166,5226+13]..[166,5226+18])
                                  Pexp_ident "start" (lib/grammarFunctor.ml[166,5226+13]..[166,5226+18])
                                expression (lib/grammarFunctor.ml[166,5226+22]..[166,5226+27])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[166,5226+24]..[166,5226+25])
                                    Pexp_ident "-" (lib/grammarFunctor.ml[166,5226+24]..[166,5226+25])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[166,5226+22]..[166,5226+23])
                                        Pexp_ident "n" (lib/grammarFunctor.ml[166,5226+22]..[166,5226+23])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[166,5226+26]..[166,5226+27])
                                        Pexp_constant PConst_int (1,None)
                                  ]
                                expression (lib/grammarFunctor.ml[167,5257+6]..[167,5257+10])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[167,5257+6]..[167,5257+7])
                                    Pexp_ident "f" (lib/grammarFunctor.ml[167,5257+6]..[167,5257+7])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[167,5257+8]..[167,5257+10])
                                        Pexp_ident "nt" (lib/grammarFunctor.ml[167,5257+8]..[167,5257+10])
                                  ]
                        ]
                      structure_item (lib/grammarFunctor.ml[170,5278+2]..[171,5299+30])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[170,5278+6]..[170,5278+11])
                              Ppat_var "foldx" (lib/grammarFunctor.ml[170,5278+6]..[170,5278+11])
                            expression (lib/grammarFunctor.ml[170,5278+12]..[171,5299+30]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[170,5278+12]..[170,5278+13])
                                Ppat_var "f" (lib/grammarFunctor.ml[170,5278+12]..[170,5278+13])
                              expression (lib/grammarFunctor.ml[170,5278+14]..[171,5299+30]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[170,5278+14]..[170,5278+18])
                                  Ppat_var "accu" (lib/grammarFunctor.ml[170,5278+14]..[170,5278+18])
                                expression (lib/grammarFunctor.ml[171,5299+4]..[171,5299+30])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[171,5299+4]..[171,5299+15])
                                    Pexp_ident "Misc.foldij" (lib/grammarFunctor.ml[171,5299+4]..[171,5299+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[171,5299+16]..[171,5299+21])
                                        Pexp_ident "start" (lib/grammarFunctor.ml[171,5299+16]..[171,5299+21])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[171,5299+22]..[171,5299+23])
                                        Pexp_ident "n" (lib/grammarFunctor.ml[171,5299+22]..[171,5299+23])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[171,5299+24]..[171,5299+25])
                                        Pexp_ident "f" (lib/grammarFunctor.ml[171,5299+24]..[171,5299+25])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[171,5299+26]..[171,5299+30])
                                        Pexp_ident "accu" (lib/grammarFunctor.ml[171,5299+26]..[171,5299+30])
                                  ]
                        ]
                      structure_item (lib/grammarFunctor.ml[173,5331+2]..[178,5482+10])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[173,5331+6]..[173,5331+15])
                              Ppat_var "ocamltype" (lib/grammarFunctor.ml[173,5331+6]..[173,5331+15])
                            expression (lib/grammarFunctor.ml[173,5331+16]..[178,5482+10]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[173,5331+16]..[173,5331+18])
                                Ppat_var "nt" (lib/grammarFunctor.ml[173,5331+16]..[173,5331+18])
                              expression (lib/grammarFunctor.ml[174,5352+4]..[178,5482+10])
                                Pexp_sequence
                                expression (lib/grammarFunctor.ml[174,5352+4]..[174,5352+39])
                                  Pexp_assert
                                  expression (lib/grammarFunctor.ml[174,5352+11]..[174,5352+39])
                                    Pexp_apply
                                    expression (lib/grammarFunctor.ml[174,5352+12]..[174,5352+15])
                                      Pexp_ident "not" (lib/grammarFunctor.ml[174,5352+12]..[174,5352+15])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[174,5352+16]..[174,5352+38])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[174,5352+17]..[174,5352+34])
                                            Pexp_ident "is_internal_start" (lib/grammarFunctor.ml[174,5352+17]..[174,5352+34])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[174,5352+35]..[174,5352+37])
                                                Pexp_ident "nt" (lib/grammarFunctor.ml[174,5352+35]..[174,5352+37])
                                          ]
                                    ]
                                expression (lib/grammarFunctor.ml[175,5393+4]..[178,5482+10])
                                  Pexp_try
                                  expression (lib/grammarFunctor.ml[176,5401+6]..[176,5401+58])
                                    Pexp_construct "Some" (lib/grammarFunctor.ml[176,5401+6]..[176,5401+10])
                                    Some
                                      expression (lib/grammarFunctor.ml[176,5401+11]..[176,5401+58])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[176,5401+12]..[176,5401+26])
                                          Pexp_ident "StringMap.find" (lib/grammarFunctor.ml[176,5401+12]..[176,5401+26])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[176,5401+27]..[176,5401+43])
                                              Pexp_apply
                                              expression (lib/grammarFunctor.ml[176,5401+28]..[176,5401+33])
                                                Pexp_ident "print" (lib/grammarFunctor.ml[176,5401+28]..[176,5401+33])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[176,5401+34]..[176,5401+39])
                                                    Pexp_construct "false" (lib/grammarFunctor.ml[176,5401+34]..[176,5401+39])
                                                    None
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[176,5401+40]..[176,5401+42])
                                                    Pexp_ident "nt" (lib/grammarFunctor.ml[176,5401+40]..[176,5401+42])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[176,5401+44]..[176,5401+57])
                                              Pexp_field
                                              expression (lib/grammarFunctor.ml[176,5401+44]..[176,5401+51])
                                                Pexp_ident "grammar" (lib/grammarFunctor.ml[176,5401+44]..[176,5401+51])
                                              "types" (lib/grammarFunctor.ml[176,5401+52]..[176,5401+57])
                                        ]
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[177,5460+9]..[177,5460+18])
                                        Ppat_construct "Not_found" (lib/grammarFunctor.ml[177,5460+9]..[177,5460+18])
                                        None
                                      expression (lib/grammarFunctor.ml[178,5482+6]..[178,5482+10])
                                        Pexp_construct "None" (lib/grammarFunctor.ml[178,5482+6]..[178,5482+10])
                                        None
                                  ]
                        ]
                      structure_item (lib/grammarFunctor.ml[180,5494+2]..[186,5648+20])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[180,5494+6]..[180,5494+31])
                              Ppat_var "ocamltype_of_start_symbol" (lib/grammarFunctor.ml[180,5494+6]..[180,5494+31])
                            expression (lib/grammarFunctor.ml[180,5494+32]..[186,5648+20]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[180,5494+32]..[180,5494+34])
                                Ppat_var "nt" (lib/grammarFunctor.ml[180,5494+32]..[180,5494+34])
                              expression (lib/grammarFunctor.ml[181,5531+4]..[186,5648+20])
                                Pexp_match
                                expression (lib/grammarFunctor.ml[181,5531+10]..[181,5531+22])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[181,5531+10]..[181,5531+19])
                                    Pexp_ident "ocamltype" (lib/grammarFunctor.ml[181,5531+10]..[181,5531+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[181,5531+20]..[181,5531+22])
                                        Pexp_ident "nt" (lib/grammarFunctor.ml[181,5531+20]..[181,5531+22])
                                  ]
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[182,5559+6]..[182,5559+14])
                                      Ppat_construct "Some" (lib/grammarFunctor.ml[182,5559+6]..[182,5559+10])
                                      Some
                                        []
                                        pattern (lib/grammarFunctor.ml[182,5559+11]..[182,5559+14])
                                          Ppat_var "typ" (lib/grammarFunctor.ml[182,5559+11]..[182,5559+14])
                                    expression (lib/grammarFunctor.ml[183,5577+8]..[183,5577+11])
                                      Pexp_ident "typ" (lib/grammarFunctor.ml[183,5577+8]..[183,5577+11])
                                  <case>
                                    pattern (lib/grammarFunctor.ml[184,5589+6]..[184,5589+10])
                                      Ppat_construct "None" (lib/grammarFunctor.ml[184,5589+6]..[184,5589+10])
                                      None
                                    expression (lib/grammarFunctor.ml[186,5648+8]..[186,5648+20])
                                      Pexp_assert
                                      expression (lib/grammarFunctor.ml[186,5648+15]..[186,5648+20])
                                        Pexp_construct "false" (lib/grammarFunctor.ml[186,5648+15]..[186,5648+20])
                                        None
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[188,5670+2]..[189,5689+30])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[188,5670+6]..[188,5670+14])
                              Ppat_var "tabulate" (lib/grammarFunctor.ml[188,5670+6]..[188,5670+14])
                            expression (lib/grammarFunctor.ml[188,5670+15]..[189,5689+30]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[188,5670+15]..[188,5670+16])
                                Ppat_var "f" (lib/grammarFunctor.ml[188,5670+15]..[188,5670+16])
                              expression (lib/grammarFunctor.ml[189,5689+4]..[189,5689+30])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[189,5689+4]..[189,5689+13])
                                  Pexp_ident "Array.get" (lib/grammarFunctor.ml[189,5689+4]..[189,5689+13])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[189,5689+14]..[189,5689+30])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[189,5689+15]..[189,5689+25])
                                        Pexp_ident "Array.init" (lib/grammarFunctor.ml[189,5689+15]..[189,5689+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[189,5689+26]..[189,5689+27])
                                            Pexp_ident "n" (lib/grammarFunctor.ml[189,5689+26]..[189,5689+27])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[189,5689+28]..[189,5689+29])
                                            Pexp_ident "f" (lib/grammarFunctor.ml[189,5689+28]..[189,5689+29])
                                      ]
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[191,5721+2]..[192,5766+19])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[191,5721+6]..[191,5721+16])
                              Ppat_var "attributes" (lib/grammarFunctor.ml[191,5721+6]..[191,5721+16])
                            core_type (lib/grammarFunctor.ml[191,5721+19]..[191,5721+42])
                              Ptyp_constr "array" (lib/grammarFunctor.ml[191,5721+37]..[191,5721+42])
                              [
                                core_type (lib/grammarFunctor.ml[191,5721+19]..[191,5721+36])
                                  Ptyp_constr "Syntax.attributes" (lib/grammarFunctor.ml[191,5721+19]..[191,5721+36])
                                  []
                              ]
                            expression (lib/grammarFunctor.ml[192,5766+4]..[192,5766+19])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[192,5766+4]..[192,5766+14])
                                Pexp_ident "Array.make" (lib/grammarFunctor.ml[192,5766+4]..[192,5766+14])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[192,5766+15]..[192,5766+16])
                                    Pexp_ident "n" (lib/grammarFunctor.ml[192,5766+15]..[192,5766+16])
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[192,5766+17]..[192,5766+19])
                                    Pexp_construct "[]" (lib/grammarFunctor.ml[192,5766+17]..[192,5766+19])
                                    None
                              ]
                        ]
                      structure_item (lib/grammarFunctor.ml[194,5787+2]..[198,5931+19])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[194,5787+6]..[194,5787+8])
                              Ppat_construct "()" (lib/grammarFunctor.ml[194,5787+6]..[194,5787+8])
                              None
                            expression (lib/grammarFunctor.ml[195,5798+4]..[198,5931+19])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[195,5798+4]..[195,5798+18])
                                Pexp_ident "StringMap.iter" (lib/grammarFunctor.ml[195,5798+4]..[195,5798+18])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[195,5798+19]..[198,5931+5])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lib/grammarFunctor.ml[195,5798+24]..[195,5798+35])
                                      Ppat_var "nonterminal" (lib/grammarFunctor.ml[195,5798+24]..[195,5798+35])
                                    expression (lib/grammarFunctor.ml[195,5798+36]..[197,5900+30]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lib/grammarFunctor.ml[195,5798+36]..[195,5798+61])
                                        Ppat_record Open
                                        [
                                          "attributes" (lib/grammarFunctor.ml[195,5798+38]..[195,5798+48])
                                            pattern (lib/grammarFunctor.ml[195,5798+51]..[195,5798+56])
                                              Ppat_var "attrs" (lib/grammarFunctor.ml[195,5798+51]..[195,5798+56])
                                        ]
                                      expression (lib/grammarFunctor.ml[196,5863+6]..[197,5900+30])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/grammarFunctor.ml[196,5863+10]..[196,5863+12])
                                              Ppat_var "nt" (lib/grammarFunctor.ml[196,5863+10]..[196,5863+12])
                                            expression (lib/grammarFunctor.ml[196,5863+15]..[196,5863+33])
                                              Pexp_apply
                                              expression (lib/grammarFunctor.ml[196,5863+15]..[196,5863+21])
                                                Pexp_ident "lookup" (lib/grammarFunctor.ml[196,5863+15]..[196,5863+21])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[196,5863+22]..[196,5863+33])
                                                    Pexp_ident "nonterminal" (lib/grammarFunctor.ml[196,5863+22]..[196,5863+33])
                                              ]
                                        ]
                                        expression (lib/grammarFunctor.ml[197,5900+6]..[197,5900+30])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[197,5900+6]..[197,5900+30]) ghost
                                            Pexp_ident "Array.set" (lib/grammarFunctor.ml[197,5900+6]..[197,5900+30]) ghost
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[197,5900+6]..[197,5900+16])
                                                Pexp_ident "attributes" (lib/grammarFunctor.ml[197,5900+6]..[197,5900+16])
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[197,5900+18]..[197,5900+20])
                                                Pexp_ident "nt" (lib/grammarFunctor.ml[197,5900+18]..[197,5900+20])
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[197,5900+25]..[197,5900+30])
                                                Pexp_ident "attrs" (lib/grammarFunctor.ml[197,5900+25]..[197,5900+30])
                                          ]
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[198,5931+6]..[198,5931+19])
                                    Pexp_field
                                    expression (lib/grammarFunctor.ml[198,5931+6]..[198,5931+13])
                                      Pexp_ident "grammar" (lib/grammarFunctor.ml[198,5931+6]..[198,5931+13])
                                    "rules" (lib/grammarFunctor.ml[198,5931+14]..[198,5931+19])
                              ]
                        ]
                      structure_item (lib/grammarFunctor.ml[200,5952+2]..[201,5974+19])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[200,5952+6]..[200,5952+16])
                              Ppat_var "attributes" (lib/grammarFunctor.ml[200,5952+6]..[200,5952+16])
                            expression (lib/grammarFunctor.ml[200,5952+17]..[201,5974+19]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[200,5952+17]..[200,5952+19])
                                Ppat_var "nt" (lib/grammarFunctor.ml[200,5952+17]..[200,5952+19])
                              expression (lib/grammarFunctor.ml[201,5974+4]..[201,5974+19])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[201,5974+4]..[201,5974+19]) ghost
                                  Pexp_ident "Array.get" (lib/grammarFunctor.ml[201,5974+4]..[201,5974+19]) ghost
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[201,5974+4]..[201,5974+14])
                                      Pexp_ident "attributes" (lib/grammarFunctor.ml[201,5974+4]..[201,5974+14])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[201,5974+16]..[201,5974+18])
                                      Pexp_ident "nt" (lib/grammarFunctor.ml[201,5974+16]..[201,5974+18])
                                ]
                        ]
                    ]
              structure_item (lib/grammarFunctor.ml[207,6040+0]..[207,6040+36])
                Pstr_module
                "NonterminalMap" (lib/grammarFunctor.ml[207,6040+7]..[207,6040+21])
                  module_expr (lib/grammarFunctor.ml[207,6040+24]..[207,6040+36])
                    Pmod_ident "Patricia.Big" (lib/grammarFunctor.ml[207,6040+24]..[207,6040+36])
              structure_item (lib/grammarFunctor.ml[209,6078+0]..[209,6078+43])
                Pstr_module
                "NonterminalSet" (lib/grammarFunctor.ml[209,6078+7]..[209,6078+21])
                  module_expr (lib/grammarFunctor.ml[209,6078+24]..[209,6078+43])
                    Pmod_ident "Patricia.Big.Domain" (lib/grammarFunctor.ml[209,6078+24]..[209,6078+43])
              structure_item (lib/grammarFunctor.ml[214,6220+0]..[466,12902+3])
                Pstr_module
                "Terminal" (lib/grammarFunctor.ml[214,6220+7]..[214,6220+15])
                  module_expr (lib/grammarFunctor.ml[214,6220+18]..[466,12902+3])
                    Pmod_structure
                    [
                      structure_item (lib/grammarFunctor.ml[216,6246+2]..[216,6246+14])
                        Pstr_type Rec
                        [
                          type_declaration "t" (lib/grammarFunctor.ml[216,6246+7]..[216,6246+8]) (lib/grammarFunctor.ml[216,6246+2]..[216,6246+14])
                            ptype_params =
                              []
                            ptype_cstrs =
                              []
                            ptype_kind =
                              Ptype_abstract
                            ptype_private = Public
                            ptype_manifest =
                              Some
                                core_type (lib/grammarFunctor.ml[216,6246+11]..[216,6246+14])
                                  Ptyp_constr "int" (lib/grammarFunctor.ml[216,6246+11]..[216,6246+14])
                                  []
                        ]
                      structure_item (lib/grammarFunctor.ml[218,6262+2]..[218,6262+15])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[218,6262+6]..[218,6262+9])
                              Ppat_var "t2i" (lib/grammarFunctor.ml[218,6262+6]..[218,6262+9])
                            expression (lib/grammarFunctor.ml[218,6262+10]..[218,6262+15]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[218,6262+10]..[218,6262+11])
                                Ppat_var "i" (lib/grammarFunctor.ml[218,6262+10]..[218,6262+11])
                              expression (lib/grammarFunctor.ml[218,6262+14]..[218,6262+15])
                                Pexp_ident "i" (lib/grammarFunctor.ml[218,6262+14]..[218,6262+15])
                        ]
                      structure_item (lib/grammarFunctor.ml[219,6278+2]..[219,6278+15])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[219,6278+6]..[219,6278+9])
                              Ppat_var "i2t" (lib/grammarFunctor.ml[219,6278+6]..[219,6278+9])
                            expression (lib/grammarFunctor.ml[219,6278+10]..[219,6278+15]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[219,6278+10]..[219,6278+11])
                                Ppat_var "i" (lib/grammarFunctor.ml[219,6278+10]..[219,6278+11])
                              expression (lib/grammarFunctor.ml[219,6278+14]..[219,6278+15])
                                Pexp_ident "i" (lib/grammarFunctor.ml[219,6278+14]..[219,6278+15])
                        ]
                      structure_item (lib/grammarFunctor.ml[221,6295+2]..[221,6295+19])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[221,6295+6]..[221,6295+13])
                              Ppat_var "compare" (lib/grammarFunctor.ml[221,6295+6]..[221,6295+13])
                            expression (lib/grammarFunctor.ml[221,6295+16]..[221,6295+19])
                              Pexp_ident "-" (lib/grammarFunctor.ml[221,6295+16]..[221,6295+19])
                        ]
                      structure_item (lib/grammarFunctor.ml[223,6316+2]..[224,6352+15])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[223,6316+6]..[223,6316+11])
                              Ppat_var "equal" (lib/grammarFunctor.ml[223,6316+6]..[223,6316+11])
                            expression (lib/grammarFunctor.ml[223,6316+12]..[224,6352+15]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[223,6316+12]..[223,6316+22])
                                Ppat_constraint
                                pattern (lib/grammarFunctor.ml[223,6316+13]..[223,6316+17])
                                  Ppat_var "tok1" (lib/grammarFunctor.ml[223,6316+13]..[223,6316+17])
                                core_type (lib/grammarFunctor.ml[223,6316+20]..[223,6316+21])
                                  Ptyp_constr "t" (lib/grammarFunctor.ml[223,6316+20]..[223,6316+21])
                                  []
                              expression (lib/grammarFunctor.ml[223,6316+23]..[224,6352+15]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[223,6316+23]..[223,6316+33])
                                  Ppat_constraint
                                  pattern (lib/grammarFunctor.ml[223,6316+24]..[223,6316+28])
                                    Ppat_var "tok2" (lib/grammarFunctor.ml[223,6316+24]..[223,6316+28])
                                  core_type (lib/grammarFunctor.ml[223,6316+31]..[223,6316+32])
                                    Ptyp_constr "t" (lib/grammarFunctor.ml[223,6316+31]..[223,6316+32])
                                    []
                                expression (lib/grammarFunctor.ml[224,6352+4]..[224,6352+15])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[224,6352+9]..[224,6352+10])
                                    Pexp_ident "=" (lib/grammarFunctor.ml[224,6352+9]..[224,6352+10])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[224,6352+4]..[224,6352+8])
                                        Pexp_ident "tok1" (lib/grammarFunctor.ml[224,6352+4]..[224,6352+8])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[224,6352+11]..[224,6352+15])
                                        Pexp_ident "tok2" (lib/grammarFunctor.ml[224,6352+11]..[224,6352+15])
                                  ]
                        ]
                      structure_item (lib/grammarFunctor.ml[239,6971+2]..[245,7185+43])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[239,6971+6]..[239,6971+63])
                              Ppat_tuple
                              [
                                pattern (lib/grammarFunctor.ml[239,6971+6]..[239,6971+15])
                                  Ppat_constraint
                                  pattern (lib/grammarFunctor.ml[239,6971+7]..[239,6971+8])
                                    Ppat_var "n" (lib/grammarFunctor.ml[239,6971+7]..[239,6971+8])
                                  core_type (lib/grammarFunctor.ml[239,6971+11]..[239,6971+14])
                                    Ptyp_constr "int" (lib/grammarFunctor.ml[239,6971+11]..[239,6971+14])
                                    []
                                pattern (lib/grammarFunctor.ml[239,6971+17]..[239,6971+38])
                                  Ppat_constraint
                                  pattern (lib/grammarFunctor.ml[239,6971+18]..[239,6971+22])
                                    Ppat_var "name" (lib/grammarFunctor.ml[239,6971+18]..[239,6971+22])
                                  core_type (lib/grammarFunctor.ml[239,6971+25]..[239,6971+37])
                                    Ptyp_constr "array" (lib/grammarFunctor.ml[239,6971+32]..[239,6971+37])
                                    [
                                      core_type (lib/grammarFunctor.ml[239,6971+25]..[239,6971+31])
                                        Ptyp_constr "string" (lib/grammarFunctor.ml[239,6971+25]..[239,6971+31])
                                        []
                                    ]
                                pattern (lib/grammarFunctor.ml[239,6971+40]..[239,6971+63])
                                  Ppat_constraint
                                  pattern (lib/grammarFunctor.ml[239,6971+41]..[239,6971+44])
                                    Ppat_var "map" (lib/grammarFunctor.ml[239,6971+41]..[239,6971+44])
                                  core_type (lib/grammarFunctor.ml[239,6971+47]..[239,6971+62])
                                    Ptyp_constr "StringMap.t" (lib/grammarFunctor.ml[239,6971+51]..[239,6971+62])
                                    [
                                      core_type (lib/grammarFunctor.ml[239,6971+47]..[239,6971+50])
                                        Ptyp_constr "int" (lib/grammarFunctor.ml[239,6971+47]..[239,6971+50])
                                        []
                                    ]
                              ]
                            expression (lib/grammarFunctor.ml[240,7037+4]..[245,7185+43])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/grammarFunctor.ml[240,7037+8]..[240,7037+14])
                                    Ppat_var "tokens" (lib/grammarFunctor.ml[240,7037+8]..[240,7037+14])
                                  expression (lib/grammarFunctor.ml[240,7037+17]..[240,7037+31])
                                    Pexp_apply
                                    expression (lib/grammarFunctor.ml[240,7037+17]..[240,7037+23])
                                      Pexp_ident "tokens" (lib/grammarFunctor.ml[240,7037+17]..[240,7037+23])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[240,7037+24]..[240,7037+31])
                                          Pexp_ident "grammar" (lib/grammarFunctor.ml[240,7037+24]..[240,7037+31])
                                    ]
                              ]
                              expression (lib/grammarFunctor.ml[241,7072+4]..[245,7185+43])
                                Pexp_match
                                expression (lib/grammarFunctor.ml[241,7072+10]..[241,7072+16])
                                  Pexp_ident "tokens" (lib/grammarFunctor.ml[241,7072+10]..[241,7072+16])
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[242,7094+6]..[242,7094+8])
                                      Ppat_construct "[]" (lib/grammarFunctor.ml[242,7094+6]..[242,7094+8])
                                      None
                                    <when>
                                      expression (lib/grammarFunctor.ml[242,7094+14]..[242,7094+21])
                                        Pexp_ident "verbose" (lib/grammarFunctor.ml[242,7094+14]..[242,7094+21])
                                    expression (lib/grammarFunctor.ml[243,7119+8]..[243,7119+54])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[243,7119+8]..[243,7119+19])
                                        Pexp_ident "Error.error" (lib/grammarFunctor.ml[243,7119+8]..[243,7119+19])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[243,7119+20]..[243,7119+22])
                                            Pexp_construct "[]" (lib/grammarFunctor.ml[243,7119+20]..[243,7119+22])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[243,7119+23]..[243,7119+54])
                                            Pexp_constant PConst_string("no tokens have been declared.",(lib/grammarFunctor.ml[243,7119+24]..[243,7119+53]),None)
                                      ]
                                  <case>
                                    pattern (lib/grammarFunctor.ml[244,7174+6]..[244,7174+7])
                                      Ppat_any
                                    expression (lib/grammarFunctor.ml[245,7185+8]..[245,7185+43])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[245,7185+8]..[245,7185+13])
                                        Pexp_ident "index" (lib/grammarFunctor.ml[245,7185+8]..[245,7185+13])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[245,7185+14]..[245,7185+43])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[245,7185+33]..[245,7185+34])
                                              Pexp_ident "@" (lib/grammarFunctor.ml[245,7185+33]..[245,7185+34])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[245,7185+15]..[245,7185+32])
                                                  Pexp_construct "::" (lib/grammarFunctor.ml[245,7185+23]..[245,7185+25])
                                                  Some
                                                    expression (lib/grammarFunctor.ml[245,7185+15]..[245,7185+32]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (lib/grammarFunctor.ml[245,7185+15]..[245,7185+22])
                                                          Pexp_constant PConst_string("error",(lib/grammarFunctor.ml[245,7185+16]..[245,7185+21]),None)
                                                        expression (lib/grammarFunctor.ml[245,7185+26]..[245,7185+32])
                                                          Pexp_ident "tokens" (lib/grammarFunctor.ml[245,7185+26]..[245,7185+32])
                                                      ]
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[245,7185+35]..[245,7185+42])
                                                  Pexp_construct "::" (lib/grammarFunctor.ml[245,7185+37]..[245,7185+42]) ghost
                                                  Some
                                                    expression (lib/grammarFunctor.ml[245,7185+37]..[245,7185+42]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (lib/grammarFunctor.ml[245,7185+37]..[245,7185+40])
                                                          Pexp_constant PConst_string("#",(lib/grammarFunctor.ml[245,7185+38]..[245,7185+39]),None)
                                                        expression (lib/grammarFunctor.ml[245,7185+41]..[245,7185+42]) ghost
                                                          Pexp_construct "[]" (lib/grammarFunctor.ml[245,7185+41]..[245,7185+42]) ghost
                                                          None
                                                      ]
                                            ]
                                      ]
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[247,7230+2]..[248,7248+14])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[247,7230+6]..[247,7230+11])
                              Ppat_var "print" (lib/grammarFunctor.ml[247,7230+6]..[247,7230+11])
                            expression (lib/grammarFunctor.ml[247,7230+12]..[248,7248+14]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[247,7230+12]..[247,7230+15])
                                Ppat_var "tok" (lib/grammarFunctor.ml[247,7230+12]..[247,7230+15])
                              expression (lib/grammarFunctor.ml[248,7248+4]..[248,7248+14])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[248,7248+4]..[248,7248+14]) ghost
                                  Pexp_ident "Array.get" (lib/grammarFunctor.ml[248,7248+4]..[248,7248+14]) ghost
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[248,7248+4]..[248,7248+8])
                                      Pexp_ident "name" (lib/grammarFunctor.ml[248,7248+4]..[248,7248+8])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[248,7248+10]..[248,7248+13])
                                      Pexp_ident "tok" (lib/grammarFunctor.ml[248,7248+10]..[248,7248+13])
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[250,7264+2]..[251,7284+27])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[250,7264+6]..[250,7264+12])
                              Ppat_var "lookup" (lib/grammarFunctor.ml[250,7264+6]..[250,7264+12])
                            expression (lib/grammarFunctor.ml[250,7264+13]..[251,7284+27]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[250,7264+13]..[250,7264+17])
                                Ppat_var "name" (lib/grammarFunctor.ml[250,7264+13]..[250,7264+17])
                              expression (lib/grammarFunctor.ml[251,7284+4]..[251,7284+27])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[251,7284+4]..[251,7284+18])
                                  Pexp_ident "StringMap.find" (lib/grammarFunctor.ml[251,7284+4]..[251,7284+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[251,7284+19]..[251,7284+23])
                                      Pexp_ident "name" (lib/grammarFunctor.ml[251,7284+19]..[251,7284+23])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[251,7284+24]..[251,7284+27])
                                      Pexp_ident "map" (lib/grammarFunctor.ml[251,7284+24]..[251,7284+27])
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[253,7313+2]..[254,7327+14])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[253,7313+6]..[253,7313+11])
                              Ppat_var "sharp" (lib/grammarFunctor.ml[253,7313+6]..[253,7313+11])
                            expression (lib/grammarFunctor.ml[254,7327+4]..[254,7327+14])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[254,7327+4]..[254,7327+10])
                                Pexp_ident "lookup" (lib/grammarFunctor.ml[254,7327+4]..[254,7327+10])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[254,7327+11]..[254,7327+14])
                                    Pexp_constant PConst_string("#",(lib/grammarFunctor.ml[254,7327+12]..[254,7327+13]),None)
                              ]
                        ]
                      structure_item (lib/grammarFunctor.ml[256,7343+2]..[257,7357+18])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[256,7343+6]..[256,7343+11])
                              Ppat_var "error" (lib/grammarFunctor.ml[256,7343+6]..[256,7343+11])
                            expression (lib/grammarFunctor.ml[257,7357+4]..[257,7357+18])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[257,7357+4]..[257,7357+10])
                                Pexp_ident "lookup" (lib/grammarFunctor.ml[257,7357+4]..[257,7357+10])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[257,7357+11]..[257,7357+18])
                                    Pexp_constant PConst_string("error",(lib/grammarFunctor.ml[257,7357+12]..[257,7357+17]),None)
                              ]
                        ]
                      structure_item (lib/grammarFunctor.ml[259,7377+2]..[260,7396+34])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[259,7377+6]..[259,7377+12])
                              Ppat_var "pseudo" (lib/grammarFunctor.ml[259,7377+6]..[259,7377+12])
                            expression (lib/grammarFunctor.ml[259,7377+13]..[260,7396+34]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[259,7377+13]..[259,7377+16])
                                Ppat_var "tok" (lib/grammarFunctor.ml[259,7377+13]..[259,7377+16])
                              expression (lib/grammarFunctor.ml[260,7396+4]..[260,7396+34])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[260,7396+18]..[260,7396+20])
                                  Pexp_ident "||" (lib/grammarFunctor.ml[260,7396+18]..[260,7396+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[260,7396+4]..[260,7396+17])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[260,7396+9]..[260,7396+10])
                                        Pexp_ident "=" (lib/grammarFunctor.ml[260,7396+9]..[260,7396+10])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[260,7396+5]..[260,7396+8])
                                            Pexp_ident "tok" (lib/grammarFunctor.ml[260,7396+5]..[260,7396+8])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[260,7396+11]..[260,7396+16])
                                            Pexp_ident "sharp" (lib/grammarFunctor.ml[260,7396+11]..[260,7396+16])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[260,7396+21]..[260,7396+34])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[260,7396+26]..[260,7396+27])
                                        Pexp_ident "=" (lib/grammarFunctor.ml[260,7396+26]..[260,7396+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[260,7396+22]..[260,7396+25])
                                            Pexp_ident "tok" (lib/grammarFunctor.ml[260,7396+22]..[260,7396+25])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[260,7396+28]..[260,7396+33])
                                            Pexp_ident "error" (lib/grammarFunctor.ml[260,7396+28]..[260,7396+33])
                                      ]
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[262,7432+2]..[263,7447+28])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[262,7432+6]..[262,7432+10])
                              Ppat_var "real" (lib/grammarFunctor.ml[262,7432+6]..[262,7432+10])
                            expression (lib/grammarFunctor.ml[262,7432+11]..[263,7447+28]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[262,7432+11]..[262,7432+12])
                                Ppat_var "t" (lib/grammarFunctor.ml[262,7432+11]..[262,7432+12])
                              expression (lib/grammarFunctor.ml[263,7447+4]..[263,7447+28])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[263,7447+15]..[263,7447+17])
                                  Pexp_ident "&&" (lib/grammarFunctor.ml[263,7447+15]..[263,7447+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[263,7447+4]..[263,7447+14])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[263,7447+10]..[263,7447+12])
                                        Pexp_ident "<>" (lib/grammarFunctor.ml[263,7447+10]..[263,7447+12])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[263,7447+4]..[263,7447+9])
                                            Pexp_ident "error" (lib/grammarFunctor.ml[263,7447+4]..[263,7447+9])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[263,7447+13]..[263,7447+14])
                                            Pexp_ident "t" (lib/grammarFunctor.ml[263,7447+13]..[263,7447+14])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[263,7447+18]..[263,7447+28])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[263,7447+20]..[263,7447+22])
                                        Pexp_ident "<>" (lib/grammarFunctor.ml[263,7447+20]..[263,7447+22])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[263,7447+18]..[263,7447+19])
                                            Pexp_ident "t" (lib/grammarFunctor.ml[263,7447+18]..[263,7447+19])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[263,7447+23]..[263,7447+28])
                                            Pexp_ident "sharp" (lib/grammarFunctor.ml[263,7447+23]..[263,7447+28])
                                      ]
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[265,7477+2]..[266,7499+16])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[265,7477+6]..[265,7477+15])
                              Ppat_var "non_error" (lib/grammarFunctor.ml[265,7477+6]..[265,7477+15])
                            expression (lib/grammarFunctor.ml[265,7477+16]..[266,7499+16]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[265,7477+16]..[265,7477+19])
                                Ppat_var "tok" (lib/grammarFunctor.ml[265,7477+16]..[265,7477+19])
                              expression (lib/grammarFunctor.ml[266,7499+4]..[266,7499+16])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[266,7499+8]..[266,7499+10])
                                  Pexp_ident "<>" (lib/grammarFunctor.ml[266,7499+8]..[266,7499+10])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[266,7499+4]..[266,7499+7])
                                      Pexp_ident "tok" (lib/grammarFunctor.ml[266,7499+4]..[266,7499+7])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[266,7499+11]..[266,7499+16])
                                      Pexp_ident "error" (lib/grammarFunctor.ml[266,7499+11]..[266,7499+16])
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[268,7517+2]..[287,8138+5])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[268,7517+6]..[268,7517+22])
                              Ppat_var "token_properties" (lib/grammarFunctor.ml[268,7517+6]..[268,7517+22])
                            expression (lib/grammarFunctor.ml[269,7542+4]..[287,8138+5])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/grammarFunctor.ml[269,7542+8]..[269,7542+31])
                                    Ppat_var "not_so_dummy_properties" (lib/grammarFunctor.ml[269,7542+8]..[269,7542+31])
                                  expression (lib/grammarFunctor.ml[270,7612+6]..[279,7930+7])
                                    Pexp_record
                                    [
                                      "tk_filename" (lib/grammarFunctor.ml[271,7620+8]..[271,7620+19])
                                        expression (lib/grammarFunctor.ml[271,7620+27]..[271,7620+43])
                                          Pexp_constant PConst_string("__primitives__",(lib/grammarFunctor.ml[271,7620+28]..[271,7620+42]),None)
                                      "tk_precedence" (lib/grammarFunctor.ml[272,7665+8]..[272,7665+21])
                                        expression (lib/grammarFunctor.ml[272,7665+27]..[272,7665+46])
                                          Pexp_construct "UndefinedPrecedence" (lib/grammarFunctor.ml[272,7665+27]..[272,7665+46])
                                          None
                                      "tk_associativity" (lib/grammarFunctor.ml[273,7713+8]..[273,7713+24])
                                        expression (lib/grammarFunctor.ml[273,7713+27]..[273,7713+41])
                                          Pexp_construct "UndefinedAssoc" (lib/grammarFunctor.ml[273,7713+27]..[273,7713+41])
                                          None
                                      "tk_ocamltype" (lib/grammarFunctor.ml[274,7756+8]..[274,7756+20])
                                        expression (lib/grammarFunctor.ml[274,7756+27]..[274,7756+31])
                                          Pexp_construct "None" (lib/grammarFunctor.ml[274,7756+27]..[274,7756+31])
                                          None
                                      "tk_is_declared" (lib/grammarFunctor.ml[275,7789+8]..[275,7789+22])
                                        expression (lib/grammarFunctor.ml[275,7789+27]..[275,7789+31])
                                          Pexp_construct "true" (lib/grammarFunctor.ml[275,7789+27]..[275,7789+31])
                                          None
                                      "tk_position" (lib/grammarFunctor.ml[276,7822+8]..[276,7822+19])
                                        expression (lib/grammarFunctor.ml[276,7822+27]..[276,7822+42])
                                          Pexp_ident "Positions.dummy" (lib/grammarFunctor.ml[276,7822+27]..[276,7822+42])
                                      "tk_attributes" (lib/grammarFunctor.ml[277,7866+8]..[277,7866+21])
                                        expression (lib/grammarFunctor.ml[277,7866+27]..[277,7866+29])
                                          Pexp_construct "[]" (lib/grammarFunctor.ml[277,7866+27]..[277,7866+29])
                                          None
                                      "tk_alias" (lib/grammarFunctor.ml[278,7897+8]..[278,7897+16])
                                        expression (lib/grammarFunctor.ml[278,7897+27]..[278,7897+31])
                                          Pexp_construct "None" (lib/grammarFunctor.ml[278,7897+27]..[278,7897+31])
                                          None
                                    ]
                                    None
                              ]
                              expression (lib/grammarFunctor.ml[281,7945+4]..[287,8138+5])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[281,7945+4]..[281,7945+14])
                                  Pexp_ident "Array.init" (lib/grammarFunctor.ml[281,7945+4]..[281,7945+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[281,7945+15]..[281,7945+16])
                                      Pexp_ident "n" (lib/grammarFunctor.ml[281,7945+15]..[281,7945+16])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[281,7945+17]..[287,8138+5])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lib/grammarFunctor.ml[281,7945+22]..[281,7945+25])
                                        Ppat_var "tok" (lib/grammarFunctor.ml[281,7945+22]..[281,7945+25])
                                      expression (lib/grammarFunctor.ml[282,7974+6]..[286,8105+32])
                                        Pexp_try
                                        expression (lib/grammarFunctor.ml[283,7984+9]..[283,7984+49])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[283,7984+9]..[283,7984+23])
                                            Pexp_ident "StringMap.find" (lib/grammarFunctor.ml[283,7984+9]..[283,7984+23])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[283,7984+24]..[283,7984+34])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[283,7984+24]..[283,7984+34]) ghost
                                                  Pexp_ident "Array.get" (lib/grammarFunctor.ml[283,7984+24]..[283,7984+34]) ghost
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[283,7984+24]..[283,7984+28])
                                                      Pexp_ident "name" (lib/grammarFunctor.ml[283,7984+24]..[283,7984+28])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[283,7984+30]..[283,7984+33])
                                                      Pexp_ident "tok" (lib/grammarFunctor.ml[283,7984+30]..[283,7984+33])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[283,7984+35]..[283,7984+49])
                                                Pexp_field
                                                expression (lib/grammarFunctor.ml[283,7984+35]..[283,7984+42])
                                                  Pexp_ident "grammar" (lib/grammarFunctor.ml[283,7984+35]..[283,7984+42])
                                                "tokens" (lib/grammarFunctor.ml[283,7984+43]..[283,7984+49])
                                          ]
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[284,8034+12]..[284,8034+21])
                                              Ppat_construct "Not_found" (lib/grammarFunctor.ml[284,8034+12]..[284,8034+21])
                                              None
                                            expression (lib/grammarFunctor.ml[285,8059+9]..[286,8105+32])
                                              Pexp_sequence
                                              expression (lib/grammarFunctor.ml[285,8059+9]..[285,8059+44])
                                                Pexp_assert
                                                expression (lib/grammarFunctor.ml[285,8059+16]..[285,8059+44])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[285,8059+29]..[285,8059+31])
                                                    Pexp_ident "||" (lib/grammarFunctor.ml[285,8059+29]..[285,8059+31])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[285,8059+17]..[285,8059+28])
                                                        Pexp_apply
                                                        expression (lib/grammarFunctor.ml[285,8059+21]..[285,8059+22])
                                                          Pexp_ident "=" (lib/grammarFunctor.ml[285,8059+21]..[285,8059+22])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/grammarFunctor.ml[285,8059+17]..[285,8059+20])
                                                              Pexp_ident "tok" (lib/grammarFunctor.ml[285,8059+17]..[285,8059+20])
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/grammarFunctor.ml[285,8059+23]..[285,8059+28])
                                                              Pexp_ident "sharp" (lib/grammarFunctor.ml[285,8059+23]..[285,8059+28])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[285,8059+32]..[285,8059+43])
                                                        Pexp_apply
                                                        expression (lib/grammarFunctor.ml[285,8059+36]..[285,8059+37])
                                                          Pexp_ident "=" (lib/grammarFunctor.ml[285,8059+36]..[285,8059+37])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/grammarFunctor.ml[285,8059+32]..[285,8059+35])
                                                              Pexp_ident "tok" (lib/grammarFunctor.ml[285,8059+32]..[285,8059+35])
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/grammarFunctor.ml[285,8059+38]..[285,8059+43])
                                                              Pexp_ident "error" (lib/grammarFunctor.ml[285,8059+38]..[285,8059+43])
                                                        ]
                                                  ]
                                              expression (lib/grammarFunctor.ml[286,8105+9]..[286,8105+32])
                                                Pexp_ident "not_so_dummy_properties" (lib/grammarFunctor.ml[286,8105+9]..[286,8105+32])
                                        ]
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[295,8314+2]..[296,8343+60])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[295,8314+6]..[295,8314+22])
                              Ppat_var "precedence_level" (lib/grammarFunctor.ml[295,8314+6]..[295,8314+22])
                            expression (lib/grammarFunctor.ml[295,8314+23]..[296,8343+60]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[295,8314+23]..[295,8314+26])
                                Ppat_var "tok" (lib/grammarFunctor.ml[295,8314+23]..[295,8314+26])
                              expression (lib/grammarFunctor.ml[296,8343+4]..[296,8343+60])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[296,8343+4]..[296,8343+25])
                                  Pexp_ident "TokPrecedence.levelip" (lib/grammarFunctor.ml[296,8343+4]..[296,8343+25])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[296,8343+26]..[296,8343+37])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[296,8343+27]..[296,8343+32])
                                        Pexp_ident "print" (lib/grammarFunctor.ml[296,8343+27]..[296,8343+32])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[296,8343+33]..[296,8343+36])
                                            Pexp_ident "tok" (lib/grammarFunctor.ml[296,8343+33]..[296,8343+36])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[296,8343+38]..[296,8343+60])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[296,8343+38]..[296,8343+60]) ghost
                                        Pexp_ident "Array.get" (lib/grammarFunctor.ml[296,8343+38]..[296,8343+60]) ghost
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[296,8343+38]..[296,8343+54])
                                            Pexp_ident "token_properties" (lib/grammarFunctor.ml[296,8343+38]..[296,8343+54])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[296,8343+56]..[296,8343+59])
                                            Pexp_ident "tok" (lib/grammarFunctor.ml[296,8343+56]..[296,8343+59])
                                      ]
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[298,8405+2]..[299,8431+43])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[298,8405+6]..[298,8405+19])
                              Ppat_var "associativity" (lib/grammarFunctor.ml[298,8405+6]..[298,8405+19])
                            expression (lib/grammarFunctor.ml[298,8405+20]..[299,8431+43]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[298,8405+20]..[298,8405+23])
                                Ppat_var "tok" (lib/grammarFunctor.ml[298,8405+20]..[298,8405+23])
                              expression (lib/grammarFunctor.ml[299,8431+4]..[299,8431+43])
                                Pexp_field
                                expression (lib/grammarFunctor.ml[299,8431+4]..[299,8431+26])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[299,8431+4]..[299,8431+26]) ghost
                                    Pexp_ident "Array.get" (lib/grammarFunctor.ml[299,8431+4]..[299,8431+26]) ghost
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[299,8431+4]..[299,8431+20])
                                        Pexp_ident "token_properties" (lib/grammarFunctor.ml[299,8431+4]..[299,8431+20])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[299,8431+22]..[299,8431+25])
                                        Pexp_ident "tok" (lib/grammarFunctor.ml[299,8431+22]..[299,8431+25])
                                  ]
                                "tk_associativity" (lib/grammarFunctor.ml[299,8431+27]..[299,8431+43])
                        ]
                      structure_item (lib/grammarFunctor.ml[301,8476+2]..[302,8498+39])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[301,8476+6]..[301,8476+15])
                              Ppat_var "ocamltype" (lib/grammarFunctor.ml[301,8476+6]..[301,8476+15])
                            expression (lib/grammarFunctor.ml[301,8476+16]..[302,8498+39]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[301,8476+16]..[301,8476+19])
                                Ppat_var "tok" (lib/grammarFunctor.ml[301,8476+16]..[301,8476+19])
                              expression (lib/grammarFunctor.ml[302,8498+4]..[302,8498+39])
                                Pexp_field
                                expression (lib/grammarFunctor.ml[302,8498+4]..[302,8498+26])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[302,8498+4]..[302,8498+26]) ghost
                                    Pexp_ident "Array.get" (lib/grammarFunctor.ml[302,8498+4]..[302,8498+26]) ghost
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[302,8498+4]..[302,8498+20])
                                        Pexp_ident "token_properties" (lib/grammarFunctor.ml[302,8498+4]..[302,8498+20])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[302,8498+22]..[302,8498+25])
                                        Pexp_ident "tok" (lib/grammarFunctor.ml[302,8498+22]..[302,8498+25])
                                  ]
                                "tk_ocamltype" (lib/grammarFunctor.ml[302,8498+27]..[302,8498+39])
                        ]
                      structure_item (lib/grammarFunctor.ml[304,8539+2]..[305,8554+18])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[304,8539+6]..[304,8539+10])
                              Ppat_var "init" (lib/grammarFunctor.ml[304,8539+6]..[304,8539+10])
                            expression (lib/grammarFunctor.ml[304,8539+11]..[305,8554+18]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[304,8539+11]..[304,8539+12])
                                Ppat_var "f" (lib/grammarFunctor.ml[304,8539+11]..[304,8539+12])
                              expression (lib/grammarFunctor.ml[305,8554+4]..[305,8554+18])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[305,8554+4]..[305,8554+14])
                                  Pexp_ident "Array.init" (lib/grammarFunctor.ml[305,8554+4]..[305,8554+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[305,8554+15]..[305,8554+16])
                                      Pexp_ident "n" (lib/grammarFunctor.ml[305,8554+15]..[305,8554+16])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[305,8554+17]..[305,8554+18])
                                      Pexp_ident "f" (lib/grammarFunctor.ml[305,8554+17]..[305,8554+18])
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[307,8574+2]..[308,8589+18])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[307,8574+6]..[307,8574+10])
                              Ppat_var "iter" (lib/grammarFunctor.ml[307,8574+6]..[307,8574+10])
                            expression (lib/grammarFunctor.ml[307,8574+11]..[308,8589+18]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[307,8574+11]..[307,8574+12])
                                Ppat_var "f" (lib/grammarFunctor.ml[307,8574+11]..[307,8574+12])
                              expression (lib/grammarFunctor.ml[308,8589+4]..[308,8589+18])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[308,8589+4]..[308,8589+14])
                                  Pexp_ident "Misc.iteri" (lib/grammarFunctor.ml[308,8589+4]..[308,8589+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[308,8589+15]..[308,8589+16])
                                      Pexp_ident "n" (lib/grammarFunctor.ml[308,8589+15]..[308,8589+16])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[308,8589+17]..[308,8589+18])
                                      Pexp_ident "f" (lib/grammarFunctor.ml[308,8589+17]..[308,8589+18])
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[310,8609+2]..[311,8629+23])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[310,8609+6]..[310,8609+10])
                              Ppat_var "fold" (lib/grammarFunctor.ml[310,8609+6]..[310,8609+10])
                            expression (lib/grammarFunctor.ml[310,8609+11]..[311,8629+23]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[310,8609+11]..[310,8609+12])
                                Ppat_var "f" (lib/grammarFunctor.ml[310,8609+11]..[310,8609+12])
                              expression (lib/grammarFunctor.ml[310,8609+13]..[311,8629+23]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[310,8609+13]..[310,8609+17])
                                  Ppat_var "accu" (lib/grammarFunctor.ml[310,8609+13]..[310,8609+17])
                                expression (lib/grammarFunctor.ml[311,8629+4]..[311,8629+23])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[311,8629+4]..[311,8629+14])
                                    Pexp_ident "Misc.foldi" (lib/grammarFunctor.ml[311,8629+4]..[311,8629+14])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[311,8629+15]..[311,8629+16])
                                        Pexp_ident "n" (lib/grammarFunctor.ml[311,8629+15]..[311,8629+16])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[311,8629+17]..[311,8629+18])
                                        Pexp_ident "f" (lib/grammarFunctor.ml[311,8629+17]..[311,8629+18])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[311,8629+19]..[311,8629+23])
                                        Pexp_ident "accu" (lib/grammarFunctor.ml[311,8629+19]..[311,8629+23])
                                  ]
                        ]
                      structure_item (lib/grammarFunctor.ml[313,8654+2]..[314,8668+17])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[313,8654+6]..[313,8654+9])
                              Ppat_var "map" (lib/grammarFunctor.ml[313,8654+6]..[313,8654+9])
                            expression (lib/grammarFunctor.ml[313,8654+10]..[314,8668+17]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[313,8654+10]..[313,8654+11])
                                Ppat_var "f" (lib/grammarFunctor.ml[313,8654+10]..[313,8654+11])
                              expression (lib/grammarFunctor.ml[314,8668+4]..[314,8668+17])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[314,8668+4]..[314,8668+13])
                                  Pexp_ident "Misc.mapi" (lib/grammarFunctor.ml[314,8668+4]..[314,8668+13])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[314,8668+14]..[314,8668+15])
                                      Pexp_ident "n" (lib/grammarFunctor.ml[314,8668+14]..[314,8668+15])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[314,8668+16]..[314,8668+17])
                                      Pexp_ident "f" (lib/grammarFunctor.ml[314,8668+16]..[314,8668+17])
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[316,8687+2]..[317,8698+26])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[316,8687+6]..[316,8687+8])
                              Ppat_construct "()" (lib/grammarFunctor.ml[316,8687+6]..[316,8687+8])
                              None
                            expression (lib/grammarFunctor.ml[317,8698+4]..[317,8698+26])
                              Pexp_assert
                              expression (lib/grammarFunctor.ml[317,8698+11]..[317,8698+26])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[317,8698+18]..[317,8698+19])
                                  Pexp_ident "=" (lib/grammarFunctor.ml[317,8698+18]..[317,8698+19])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[317,8698+12]..[317,8698+17])
                                      Pexp_ident "sharp" (lib/grammarFunctor.ml[317,8698+12]..[317,8698+17])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[317,8698+20]..[317,8698+25])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[317,8698+22]..[317,8698+23])
                                        Pexp_ident "-" (lib/grammarFunctor.ml[317,8698+22]..[317,8698+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[317,8698+20]..[317,8698+21])
                                            Pexp_ident "n" (lib/grammarFunctor.ml[317,8698+20]..[317,8698+21])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[317,8698+24]..[317,8698+25])
                                            Pexp_constant PConst_int (1,None)
                                      ]
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[318,8725+2]..[319,8746+27])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[318,8725+6]..[318,8725+11])
                              Ppat_var "foldx" (lib/grammarFunctor.ml[318,8725+6]..[318,8725+11])
                            expression (lib/grammarFunctor.ml[318,8725+12]..[319,8746+27]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[318,8725+12]..[318,8725+13])
                                Ppat_var "f" (lib/grammarFunctor.ml[318,8725+12]..[318,8725+13])
                              expression (lib/grammarFunctor.ml[318,8725+14]..[319,8746+27]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[318,8725+14]..[318,8725+18])
                                  Ppat_var "accu" (lib/grammarFunctor.ml[318,8725+14]..[318,8725+18])
                                expression (lib/grammarFunctor.ml[319,8746+4]..[319,8746+27])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[319,8746+4]..[319,8746+14])
                                    Pexp_ident "Misc.foldi" (lib/grammarFunctor.ml[319,8746+4]..[319,8746+14])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[319,8746+15]..[319,8746+20])
                                        Pexp_ident "sharp" (lib/grammarFunctor.ml[319,8746+15]..[319,8746+20])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[319,8746+21]..[319,8746+22])
                                        Pexp_ident "f" (lib/grammarFunctor.ml[319,8746+21]..[319,8746+22])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[319,8746+23]..[319,8746+27])
                                        Pexp_ident "accu" (lib/grammarFunctor.ml[319,8746+23]..[319,8746+27])
                                  ]
                        ]
                      structure_item (lib/grammarFunctor.ml[320,8774+2]..[321,8789+21])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[320,8774+6]..[320,8774+10])
                              Ppat_var "mapx" (lib/grammarFunctor.ml[320,8774+6]..[320,8774+10])
                            expression (lib/grammarFunctor.ml[320,8774+11]..[321,8789+21]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[320,8774+11]..[320,8774+12])
                                Ppat_var "f" (lib/grammarFunctor.ml[320,8774+11]..[320,8774+12])
                              expression (lib/grammarFunctor.ml[321,8789+4]..[321,8789+21])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[321,8789+4]..[321,8789+13])
                                  Pexp_ident "Misc.mapi" (lib/grammarFunctor.ml[321,8789+4]..[321,8789+13])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[321,8789+14]..[321,8789+19])
                                      Pexp_ident "sharp" (lib/grammarFunctor.ml[321,8789+14]..[321,8789+19])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[321,8789+20]..[321,8789+21])
                                      Pexp_ident "f" (lib/grammarFunctor.ml[321,8789+20]..[321,8789+21])
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[323,8812+2]..[324,8823+22])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[323,8812+6]..[323,8812+8])
                              Ppat_construct "()" (lib/grammarFunctor.ml[323,8812+6]..[323,8812+8])
                              None
                            expression (lib/grammarFunctor.ml[324,8823+4]..[324,8823+22])
                              Pexp_assert
                              expression (lib/grammarFunctor.ml[324,8823+11]..[324,8823+22])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[324,8823+18]..[324,8823+19])
                                  Pexp_ident "=" (lib/grammarFunctor.ml[324,8823+18]..[324,8823+19])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[324,8823+12]..[324,8823+17])
                                      Pexp_ident "error" (lib/grammarFunctor.ml[324,8823+12]..[324,8823+17])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[324,8823+20]..[324,8823+21])
                                      Pexp_constant PConst_int (0,None)
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[325,8846+2]..[328,8900+8])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[325,8846+6]..[325,8846+15])
                              Ppat_var "iter_real" (lib/grammarFunctor.ml[325,8846+6]..[325,8846+15])
                            expression (lib/grammarFunctor.ml[325,8846+16]..[328,8900+8]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[325,8846+16]..[325,8846+17])
                                Ppat_var "f" (lib/grammarFunctor.ml[325,8846+16]..[325,8846+17])
                              expression (lib/grammarFunctor.ml[326,8866+4]..[328,8900+8])
                                Pexp_for Up
                                pattern (lib/grammarFunctor.ml[326,8866+8]..[326,8866+9])
                                  Ppat_var "i" (lib/grammarFunctor.ml[326,8866+8]..[326,8866+9])
                                expression (lib/grammarFunctor.ml[326,8866+12]..[326,8866+13])
                                  Pexp_constant PConst_int (1,None)
                                expression (lib/grammarFunctor.ml[326,8866+17]..[326,8866+20])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[326,8866+18]..[326,8866+19])
                                    Pexp_ident "-" (lib/grammarFunctor.ml[326,8866+18]..[326,8866+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[326,8866+17]..[326,8866+18])
                                        Pexp_ident "n" (lib/grammarFunctor.ml[326,8866+17]..[326,8866+18])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[326,8866+19]..[326,8866+20])
                                        Pexp_constant PConst_int (2,None)
                                  ]
                                expression (lib/grammarFunctor.ml[327,8890+6]..[327,8890+9])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[327,8890+6]..[327,8890+7])
                                    Pexp_ident "f" (lib/grammarFunctor.ml[327,8890+6]..[327,8890+7])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[327,8890+8]..[327,8890+9])
                                        Pexp_ident "i" (lib/grammarFunctor.ml[327,8890+8]..[327,8890+9])
                                  ]
                        ]
                      structure_item (lib/grammarFunctor.ml[330,8910+2]..[337,9126+18])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[330,8910+6]..[330,8910+29])
                              Ppat_var "tokens_without_an_alias" (lib/grammarFunctor.ml[330,8910+6]..[330,8910+29])
                            expression (lib/grammarFunctor.ml[331,8942+4]..[337,9126+18])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/grammarFunctor.ml[331,8942+8]..[331,8942+12])
                                    Ppat_var "accu" (lib/grammarFunctor.ml[331,8942+8]..[331,8942+12])
                                  expression (lib/grammarFunctor.ml[331,8942+15]..[331,8942+21])
                                    Pexp_apply
                                    expression (lib/grammarFunctor.ml[331,8942+15]..[331,8942+18])
                                      Pexp_ident "ref" (lib/grammarFunctor.ml[331,8942+15]..[331,8942+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[331,8942+19]..[331,8942+21])
                                          Pexp_construct "[]" (lib/grammarFunctor.ml[331,8942+19]..[331,8942+21])
                                          None
                                    ]
                              ]
                              expression (lib/grammarFunctor.ml[332,8967+4]..[337,9126+18])
                                Pexp_sequence
                                expression (lib/grammarFunctor.ml[332,8967+4]..[336,9117+7])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[332,8967+4]..[332,8967+13])
                                    Pexp_ident "iter_real" (lib/grammarFunctor.ml[332,8967+4]..[332,8967+13])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[332,8967+14]..[336,9117+7])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lib/grammarFunctor.ml[332,8967+24]..[332,8967+27])
                                          Ppat_var "tok" (lib/grammarFunctor.ml[332,8967+24]..[332,8967+27])
                                        expression (lib/grammarFunctor.ml[333,8998+6]..[335,9088+28])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/grammarFunctor.ml[333,8998+10]..[333,8998+20])
                                                Ppat_var "properties" (lib/grammarFunctor.ml[333,8998+10]..[333,8998+20])
                                              expression (lib/grammarFunctor.ml[333,8998+23]..[333,8998+45])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[333,8998+23]..[333,8998+45]) ghost
                                                  Pexp_ident "Array.get" (lib/grammarFunctor.ml[333,8998+23]..[333,8998+45]) ghost
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[333,8998+23]..[333,8998+39])
                                                      Pexp_ident "token_properties" (lib/grammarFunctor.ml[333,8998+23]..[333,8998+39])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[333,8998+41]..[333,8998+44])
                                                      Pexp_ident "tok" (lib/grammarFunctor.ml[333,8998+41]..[333,8998+44])
                                                ]
                                          ]
                                          expression (lib/grammarFunctor.ml[334,9047+6]..[335,9088+28])
                                            Pexp_ifthenelse
                                            expression (lib/grammarFunctor.ml[334,9047+9]..[334,9047+35])
                                              Pexp_apply
                                              expression (lib/grammarFunctor.ml[334,9047+29]..[334,9047+30])
                                                Pexp_ident "=" (lib/grammarFunctor.ml[334,9047+29]..[334,9047+30])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[334,9047+9]..[334,9047+28])
                                                    Pexp_field
                                                    expression (lib/grammarFunctor.ml[334,9047+9]..[334,9047+19])
                                                      Pexp_ident "properties" (lib/grammarFunctor.ml[334,9047+9]..[334,9047+19])
                                                    "tk_alias" (lib/grammarFunctor.ml[334,9047+20]..[334,9047+28])
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[334,9047+31]..[334,9047+35])
                                                    Pexp_construct "None" (lib/grammarFunctor.ml[334,9047+31]..[334,9047+35])
                                                    None
                                              ]
                                            expression (lib/grammarFunctor.ml[335,9088+8]..[335,9088+28])
                                              Pexp_apply
                                              expression (lib/grammarFunctor.ml[335,9088+13]..[335,9088+15])
                                                Pexp_ident ":=" (lib/grammarFunctor.ml[335,9088+13]..[335,9088+15])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[335,9088+8]..[335,9088+12])
                                                    Pexp_ident "accu" (lib/grammarFunctor.ml[335,9088+8]..[335,9088+12])
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[335,9088+16]..[335,9088+28])
                                                    Pexp_construct "::" (lib/grammarFunctor.ml[335,9088+20]..[335,9088+22])
                                                    Some
                                                      expression (lib/grammarFunctor.ml[335,9088+16]..[335,9088+28]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (lib/grammarFunctor.ml[335,9088+16]..[335,9088+19])
                                                            Pexp_ident "tok" (lib/grammarFunctor.ml[335,9088+16]..[335,9088+19])
                                                          expression (lib/grammarFunctor.ml[335,9088+23]..[335,9088+28])
                                                            Pexp_apply
                                                            expression (lib/grammarFunctor.ml[335,9088+23]..[335,9088+24])
                                                              Pexp_ident "!" (lib/grammarFunctor.ml[335,9088+23]..[335,9088+24])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/grammarFunctor.ml[335,9088+24]..[335,9088+28])
                                                                  Pexp_ident "accu" (lib/grammarFunctor.ml[335,9088+24]..[335,9088+28])
                                                            ]
                                                        ]
                                              ]
                                            None
                                  ]
                                expression (lib/grammarFunctor.ml[337,9126+4]..[337,9126+18])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[337,9126+4]..[337,9126+12])
                                    Pexp_ident "List.rev" (lib/grammarFunctor.ml[337,9126+4]..[337,9126+12])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[337,9126+13]..[337,9126+18])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[337,9126+13]..[337,9126+14])
                                          Pexp_ident "!" (lib/grammarFunctor.ml[337,9126+13]..[337,9126+14])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[337,9126+14]..[337,9126+18])
                                              Pexp_ident "accu" (lib/grammarFunctor.ml[337,9126+14]..[337,9126+18])
                                        ]
                                  ]
                        ]
                      structure_item (lib/grammarFunctor.ml[349,9539+2]..[350,9572+32])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[349,9539+6]..[349,9539+30])
                              Ppat_var "every_token_has_an_alias" (lib/grammarFunctor.ml[349,9539+6]..[349,9539+30])
                            expression (lib/grammarFunctor.ml[350,9572+4]..[350,9572+32])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[350,9572+28]..[350,9572+29])
                                Pexp_ident "=" (lib/grammarFunctor.ml[350,9572+28]..[350,9572+29])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[350,9572+4]..[350,9572+27])
                                    Pexp_ident "tokens_without_an_alias" (lib/grammarFunctor.ml[350,9572+4]..[350,9572+27])
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[350,9572+30]..[350,9572+32])
                                    Pexp_construct "[]" (lib/grammarFunctor.ml[350,9572+30]..[350,9572+32])
                                    None
                              ]
                        ]
                      structure_item (lib/grammarFunctor.ml[352,9606+2]..[353,9624+35])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[352,9606+6]..[352,9606+11])
                              Ppat_var "alias" (lib/grammarFunctor.ml[352,9606+6]..[352,9606+11])
                            expression (lib/grammarFunctor.ml[352,9606+12]..[353,9624+35]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[352,9606+12]..[352,9606+15])
                                Ppat_var "tok" (lib/grammarFunctor.ml[352,9606+12]..[352,9606+15])
                              expression (lib/grammarFunctor.ml[353,9624+4]..[353,9624+35])
                                Pexp_field
                                expression (lib/grammarFunctor.ml[353,9624+4]..[353,9624+26])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[353,9624+4]..[353,9624+26]) ghost
                                    Pexp_ident "Array.get" (lib/grammarFunctor.ml[353,9624+4]..[353,9624+26]) ghost
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[353,9624+4]..[353,9624+20])
                                        Pexp_ident "token_properties" (lib/grammarFunctor.ml[353,9624+4]..[353,9624+20])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[353,9624+22]..[353,9624+25])
                                        Pexp_ident "tok" (lib/grammarFunctor.ml[353,9624+22]..[353,9624+25])
                                  ]
                                "tk_alias" (lib/grammarFunctor.ml[353,9624+27]..[353,9624+35])
                        ]
                      structure_item (lib/grammarFunctor.ml[355,9661+3]..[355,9661+28])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[355,9661+7]..[355,9661+21])
                              Ppat_var "unquoted_alias" (lib/grammarFunctor.ml[355,9661+7]..[355,9661+21])
                            expression (lib/grammarFunctor.ml[355,9661+22]..[355,9661+28]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[355,9661+22]..[355,9661+23])
                                Ppat_any
                              expression (lib/grammarFunctor.ml[355,9661+26]..[355,9661+28])
                                Pexp_constant PConst_string("",(lib/grammarFunctor.ml[355,9661+27]..[355,9661+27]),None)
                        ]
                      structure_item (lib/grammarFunctor.ml[367,10140+3]..[367,10140+28])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[367,10140+7]..[367,10140+21])
                              Ppat_var "print_concrete" (lib/grammarFunctor.ml[367,10140+7]..[367,10140+21])
                            expression (lib/grammarFunctor.ml[367,10140+22]..[367,10140+28]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[367,10140+22]..[367,10140+23])
                                Ppat_any
                              expression (lib/grammarFunctor.ml[367,10140+26]..[367,10140+28])
                                Pexp_constant PConst_string("",(lib/grammarFunctor.ml[367,10140+27]..[367,10140+27]),None)
                        ]
                      structure_item (lib/grammarFunctor.ml[380,10568+2]..[384,10636+10])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[380,10568+6]..[380,10568+9])
                              Ppat_var "eof" (lib/grammarFunctor.ml[380,10568+6]..[380,10568+9])
                            expression (lib/grammarFunctor.ml[381,10580+4]..[384,10636+10])
                              Pexp_try
                              expression (lib/grammarFunctor.ml[382,10588+6]..[382,10588+25])
                                Pexp_construct "Some" (lib/grammarFunctor.ml[382,10588+6]..[382,10588+10])
                                Some
                                  expression (lib/grammarFunctor.ml[382,10588+11]..[382,10588+25])
                                    Pexp_apply
                                    expression (lib/grammarFunctor.ml[382,10588+12]..[382,10588+18])
                                      Pexp_ident "lookup" (lib/grammarFunctor.ml[382,10588+12]..[382,10588+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[382,10588+19]..[382,10588+24])
                                          Pexp_constant PConst_string("EOF",(lib/grammarFunctor.ml[382,10588+20]..[382,10588+23]),None)
                                    ]
                              [
                                <case>
                                  pattern (lib/grammarFunctor.ml[383,10614+9]..[383,10614+18])
                                    Ppat_construct "Not_found" (lib/grammarFunctor.ml[383,10614+9]..[383,10614+18])
                                    None
                                  expression (lib/grammarFunctor.ml[384,10636+6]..[384,10636+10])
                                    Pexp_construct "None" (lib/grammarFunctor.ml[384,10636+6]..[384,10636+10])
                                    None
                              ]
                        ]
                      structure_item (lib/grammarFunctor.ml[386,10648+2]..[387,10671+40])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[386,10648+6]..[386,10648+16])
                              Ppat_var "attributes" (lib/grammarFunctor.ml[386,10648+6]..[386,10648+16])
                            expression (lib/grammarFunctor.ml[386,10648+17]..[387,10671+40]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[386,10648+17]..[386,10648+20])
                                Ppat_var "tok" (lib/grammarFunctor.ml[386,10648+17]..[386,10648+20])
                              expression (lib/grammarFunctor.ml[387,10671+4]..[387,10671+40])
                                Pexp_field
                                expression (lib/grammarFunctor.ml[387,10671+4]..[387,10671+26])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[387,10671+4]..[387,10671+26]) ghost
                                    Pexp_ident "Array.get" (lib/grammarFunctor.ml[387,10671+4]..[387,10671+26]) ghost
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[387,10671+4]..[387,10671+20])
                                        Pexp_ident "token_properties" (lib/grammarFunctor.ml[387,10671+4]..[387,10671+20])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[387,10671+22]..[387,10671+25])
                                        Pexp_ident "tok" (lib/grammarFunctor.ml[387,10671+22]..[387,10671+25])
                                  ]
                                "tk_attributes" (lib/grammarFunctor.ml[387,10671+27]..[387,10671+40])
                        ]
                      structure_item (lib/grammarFunctor.ml[395,11007+2]..[464,12895+5])
                        Pstr_module
                        "Word" (lib/grammarFunctor.ml[395,11007+9]..[395,11007+13])
                          module_expr (lib/grammarFunctor.ml[395,11007+14]..[464,12895+5])
                            Pmod_functor "X" (lib/grammarFunctor.ml[395,11007+15]..[395,11007+16])
                            module_type (lib/grammarFunctor.ml[395,11007+19]..[395,11007+26])
                              Pmty_signature
                              []
                            module_expr (lib/grammarFunctor.ml[395,11007+30]..[464,12895+5])
                              Pmod_structure
                              [
                                structure_item (lib/grammarFunctor.ml[408,11719+4]..[409,11732+23])
                                  Pstr_value Nonrec
                                  [
                                    <def>
                                      pattern (lib/grammarFunctor.ml[408,11719+8]..[408,11719+10])
                                        Ppat_construct "()" (lib/grammarFunctor.ml[408,11719+8]..[408,11719+10])
                                        None
                                      expression (lib/grammarFunctor.ml[409,11732+6]..[409,11732+23])
                                        Pexp_assert
                                        expression (lib/grammarFunctor.ml[409,11732+13]..[409,11732+23])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[409,11732+16]..[409,11732+18])
                                            Pexp_ident "<=" (lib/grammarFunctor.ml[409,11732+16]..[409,11732+18])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[409,11732+14]..[409,11732+15])
                                                Pexp_ident "n" (lib/grammarFunctor.ml[409,11732+14]..[409,11732+15])
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[409,11732+19]..[409,11732+22])
                                                Pexp_constant PConst_int (256,None)
                                          ]
                                  ]
                                structure_item (lib/grammarFunctor.ml[411,11757+4]..[412,11827+33])
                                  Pstr_value Nonrec
                                  [
                                    <def>
                                      pattern (lib/grammarFunctor.ml[411,11757+8]..[411,11757+67])
                                        Ppat_tuple
                                        [
                                          pattern (lib/grammarFunctor.ml[411,11757+8]..[411,11757+32])
                                            Ppat_constraint
                                            pattern (lib/grammarFunctor.ml[411,11757+9]..[411,11757+15])
                                              Ppat_var "encode" (lib/grammarFunctor.ml[411,11757+9]..[411,11757+15])
                                            core_type (lib/grammarFunctor.ml[411,11757+18]..[411,11757+31])
                                              Ptyp_arrow
                                              Nolabel
                                              core_type (lib/grammarFunctor.ml[411,11757+18]..[411,11757+24])
                                                Ptyp_constr "string" (lib/grammarFunctor.ml[411,11757+18]..[411,11757+24])
                                                []
                                              core_type (lib/grammarFunctor.ml[411,11757+28]..[411,11757+31])
                                                Ptyp_constr "int" (lib/grammarFunctor.ml[411,11757+28]..[411,11757+31])
                                                []
                                          pattern (lib/grammarFunctor.ml[411,11757+34]..[411,11757+58])
                                            Ppat_constraint
                                            pattern (lib/grammarFunctor.ml[411,11757+35]..[411,11757+41])
                                              Ppat_var "decode" (lib/grammarFunctor.ml[411,11757+35]..[411,11757+41])
                                            core_type (lib/grammarFunctor.ml[411,11757+44]..[411,11757+57])
                                              Ptyp_arrow
                                              Nolabel
                                              core_type (lib/grammarFunctor.ml[411,11757+44]..[411,11757+47])
                                                Ptyp_constr "int" (lib/grammarFunctor.ml[411,11757+44]..[411,11757+47])
                                                []
                                              core_type (lib/grammarFunctor.ml[411,11757+51]..[411,11757+57])
                                                Ptyp_constr "string" (lib/grammarFunctor.ml[411,11757+51]..[411,11757+57])
                                                []
                                          pattern (lib/grammarFunctor.ml[411,11757+60]..[411,11757+67])
                                            Ppat_var "verbose" (lib/grammarFunctor.ml[411,11757+60]..[411,11757+67])
                                        ]
                                      expression (lib/grammarFunctor.ml[412,11827+6]..[412,11827+33])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[412,11827+6]..[412,11827+28])
                                          Pexp_ident "Misc.new_encode_decode" (lib/grammarFunctor.ml[412,11827+6]..[412,11827+28])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[412,11827+29]..[412,11827+33])
                                              Pexp_constant PConst_int (1024,None)
                                        ]
                                  ]
                                structure_item (lib/grammarFunctor.ml[414,11862+4]..[415,11878+9])
                                  Pstr_type Rec
                                  [
                                    type_declaration "word" (lib/grammarFunctor.ml[414,11862+9]..[414,11862+13]) (lib/grammarFunctor.ml[414,11862+4]..[415,11878+9])
                                      ptype_params =
                                        []
                                      ptype_cstrs =
                                        []
                                      ptype_kind =
                                        Ptype_abstract
                                      ptype_private = Public
                                      ptype_manifest =
                                        Some
                                          core_type (lib/grammarFunctor.ml[415,11878+6]..[415,11878+9])
                                            Ptyp_constr "int" (lib/grammarFunctor.ml[415,11878+6]..[415,11878+9])
                                            []
                                  ]
                                structure_item (lib/grammarFunctor.ml[417,11889+4]..[418,11907+15])
                                  Pstr_value Nonrec
                                  [
                                    <def>
                                      pattern (lib/grammarFunctor.ml[417,11889+8]..[417,11889+15])
                                        Ppat_var "epsilon" (lib/grammarFunctor.ml[417,11889+8]..[417,11889+15])
                                      expression (lib/grammarFunctor.ml[418,11907+6]..[418,11907+15])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[418,11907+6]..[418,11907+12])
                                          Pexp_ident "encode" (lib/grammarFunctor.ml[418,11907+6]..[418,11907+12])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[418,11907+13]..[418,11907+15])
                                              Pexp_constant PConst_string("",(lib/grammarFunctor.ml[418,11907+14]..[418,11907+14]),None)
                                        ]
                                  ]
                                structure_item (lib/grammarFunctor.ml[420,11924+4]..[421,11946+41])
                                  Pstr_value Nonrec
                                  [
                                    <def>
                                      pattern (lib/grammarFunctor.ml[420,11924+8]..[420,11924+17])
                                        Ppat_var "singleton" (lib/grammarFunctor.ml[420,11924+8]..[420,11924+17])
                                      expression (lib/grammarFunctor.ml[420,11924+18]..[421,11946+41]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lib/grammarFunctor.ml[420,11924+18]..[420,11924+19])
                                          Ppat_var "t" (lib/grammarFunctor.ml[420,11924+18]..[420,11924+19])
                                        expression (lib/grammarFunctor.ml[421,11946+6]..[421,11946+41])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[421,11946+6]..[421,11946+12])
                                            Pexp_ident "encode" (lib/grammarFunctor.ml[421,11946+6]..[421,11946+12])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[421,11946+13]..[421,11946+41])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[421,11946+14]..[421,11946+25])
                                                  Pexp_ident "String.make" (lib/grammarFunctor.ml[421,11946+14]..[421,11946+25])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[421,11946+26]..[421,11946+27])
                                                      Pexp_constant PConst_int (1,None)
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[421,11946+28]..[421,11946+40])
                                                      Pexp_apply
                                                      expression (lib/grammarFunctor.ml[421,11946+29]..[421,11946+37])
                                                        Pexp_ident "Char.chr" (lib/grammarFunctor.ml[421,11946+29]..[421,11946+37])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/grammarFunctor.ml[421,11946+38]..[421,11946+39])
                                                            Pexp_ident "t" (lib/grammarFunctor.ml[421,11946+38]..[421,11946+39])
                                                      ]
                                                ]
                                          ]
                                  ]
                                structure_item (lib/grammarFunctor.ml[423,11989+4]..[431,12173+24])
                                  Pstr_value Nonrec
                                  [
                                    <def>
                                      pattern (lib/grammarFunctor.ml[423,11989+8]..[423,11989+14])
                                        Ppat_var "append" (lib/grammarFunctor.ml[423,11989+8]..[423,11989+14])
                                      expression (lib/grammarFunctor.ml[423,11989+15]..[431,12173+24]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lib/grammarFunctor.ml[423,11989+15]..[423,11989+17])
                                          Ppat_var "i1" (lib/grammarFunctor.ml[423,11989+15]..[423,11989+17])
                                        expression (lib/grammarFunctor.ml[423,11989+18]..[431,12173+24]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (lib/grammarFunctor.ml[423,11989+18]..[423,11989+20])
                                            Ppat_var "i2" (lib/grammarFunctor.ml[423,11989+18]..[423,11989+20])
                                          expression (lib/grammarFunctor.ml[424,12012+6]..[431,12173+24])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lib/grammarFunctor.ml[424,12012+10]..[424,12012+12])
                                                  Ppat_var "w1" (lib/grammarFunctor.ml[424,12012+10]..[424,12012+12])
                                                expression (lib/grammarFunctor.ml[424,12012+15]..[424,12012+24])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[424,12012+15]..[424,12012+21])
                                                    Pexp_ident "decode" (lib/grammarFunctor.ml[424,12012+15]..[424,12012+21])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[424,12012+22]..[424,12012+24])
                                                        Pexp_ident "i1" (lib/grammarFunctor.ml[424,12012+22]..[424,12012+24])
                                                  ]
                                              <def>
                                                pattern (lib/grammarFunctor.ml[425,12037+10]..[425,12037+12])
                                                  Ppat_var "w2" (lib/grammarFunctor.ml[425,12037+10]..[425,12037+12])
                                                expression (lib/grammarFunctor.ml[425,12037+15]..[425,12037+24])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[425,12037+15]..[425,12037+21])
                                                    Pexp_ident "decode" (lib/grammarFunctor.ml[425,12037+15]..[425,12037+21])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[425,12037+22]..[425,12037+24])
                                                        Pexp_ident "i2" (lib/grammarFunctor.ml[425,12037+22]..[425,12037+24])
                                                  ]
                                            ]
                                            expression (lib/grammarFunctor.ml[426,12065+6]..[431,12173+24])
                                              Pexp_ifthenelse
                                              expression (lib/grammarFunctor.ml[426,12065+9]..[426,12065+29])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[426,12065+26]..[426,12065+27])
                                                  Pexp_ident "=" (lib/grammarFunctor.ml[426,12065+26]..[426,12065+27])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[426,12065+9]..[426,12065+25])
                                                      Pexp_apply
                                                      expression (lib/grammarFunctor.ml[426,12065+9]..[426,12065+22])
                                                        Pexp_ident "String.length" (lib/grammarFunctor.ml[426,12065+9]..[426,12065+22])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/grammarFunctor.ml[426,12065+23]..[426,12065+25])
                                                            Pexp_ident "w1" (lib/grammarFunctor.ml[426,12065+23]..[426,12065+25])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[426,12065+28]..[426,12065+29])
                                                      Pexp_constant PConst_int (0,None)
                                                ]
                                              expression (lib/grammarFunctor.ml[427,12100+8]..[427,12100+10])
                                                Pexp_ident "i2" (lib/grammarFunctor.ml[427,12100+8]..[427,12100+10])
                                              Some
                                                expression (lib/grammarFunctor.ml[428,12111+11]..[431,12173+24])
                                                  Pexp_ifthenelse
                                                  expression (lib/grammarFunctor.ml[428,12111+14]..[428,12111+34])
                                                    Pexp_apply
                                                    expression (lib/grammarFunctor.ml[428,12111+31]..[428,12111+32])
                                                      Pexp_ident "=" (lib/grammarFunctor.ml[428,12111+31]..[428,12111+32])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[428,12111+14]..[428,12111+30])
                                                          Pexp_apply
                                                          expression (lib/grammarFunctor.ml[428,12111+14]..[428,12111+27])
                                                            Pexp_ident "String.length" (lib/grammarFunctor.ml[428,12111+14]..[428,12111+27])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/grammarFunctor.ml[428,12111+28]..[428,12111+30])
                                                                Pexp_ident "w2" (lib/grammarFunctor.ml[428,12111+28]..[428,12111+30])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[428,12111+33]..[428,12111+34])
                                                          Pexp_constant PConst_int (0,None)
                                                    ]
                                                  expression (lib/grammarFunctor.ml[429,12151+8]..[429,12151+10])
                                                    Pexp_ident "i1" (lib/grammarFunctor.ml[429,12151+8]..[429,12151+10])
                                                  Some
                                                    expression (lib/grammarFunctor.ml[431,12173+8]..[431,12173+24])
                                                      Pexp_apply
                                                      expression (lib/grammarFunctor.ml[431,12173+8]..[431,12173+14])
                                                        Pexp_ident "encode" (lib/grammarFunctor.ml[431,12173+8]..[431,12173+14])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/grammarFunctor.ml[431,12173+15]..[431,12173+24])
                                                            Pexp_apply
                                                            expression (lib/grammarFunctor.ml[431,12173+19]..[431,12173+20])
                                                              Pexp_ident "^" (lib/grammarFunctor.ml[431,12173+19]..[431,12173+20])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/grammarFunctor.ml[431,12173+16]..[431,12173+18])
                                                                  Pexp_ident "w1" (lib/grammarFunctor.ml[431,12173+16]..[431,12173+18])
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/grammarFunctor.ml[431,12173+21]..[431,12173+23])
                                                                  Pexp_ident "w2" (lib/grammarFunctor.ml[431,12173+21]..[431,12173+23])
                                                            ]
                                                      ]
                                  ]
                                structure_item (lib/grammarFunctor.ml[433,12199+4]..[434,12218+30])
                                  Pstr_value Nonrec
                                  [
                                    <def>
                                      pattern (lib/grammarFunctor.ml[433,12199+8]..[433,12199+14])
                                        Ppat_var "length" (lib/grammarFunctor.ml[433,12199+8]..[433,12199+14])
                                      expression (lib/grammarFunctor.ml[433,12199+15]..[434,12218+30]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lib/grammarFunctor.ml[433,12199+15]..[433,12199+16])
                                          Ppat_var "i" (lib/grammarFunctor.ml[433,12199+15]..[433,12199+16])
                                        expression (lib/grammarFunctor.ml[434,12218+6]..[434,12218+30])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[434,12218+6]..[434,12218+19])
                                            Pexp_ident "String.length" (lib/grammarFunctor.ml[434,12218+6]..[434,12218+19])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[434,12218+20]..[434,12218+30])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[434,12218+21]..[434,12218+27])
                                                  Pexp_ident "decode" (lib/grammarFunctor.ml[434,12218+21]..[434,12218+27])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[434,12218+28]..[434,12218+29])
                                                      Pexp_ident "i" (lib/grammarFunctor.ml[434,12218+28]..[434,12218+29])
                                                ]
                                          ]
                                  ]
                                structure_item (lib/grammarFunctor.ml[436,12250+4]..[441,12365+9])
                                  Pstr_value Nonrec
                                  [
                                    <def>
                                      pattern (lib/grammarFunctor.ml[436,12250+8]..[436,12250+13])
                                        Ppat_var "first" (lib/grammarFunctor.ml[436,12250+8]..[436,12250+13])
                                      expression (lib/grammarFunctor.ml[436,12250+14]..[441,12365+9]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lib/grammarFunctor.ml[436,12250+14]..[436,12250+15])
                                          Ppat_var "i" (lib/grammarFunctor.ml[436,12250+14]..[436,12250+15])
                                        expression (lib/grammarFunctor.ml[436,12250+16]..[441,12365+9]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (lib/grammarFunctor.ml[436,12250+16]..[436,12250+17])
                                            Ppat_var "z" (lib/grammarFunctor.ml[436,12250+16]..[436,12250+17])
                                          expression (lib/grammarFunctor.ml[437,12270+6]..[441,12365+9])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lib/grammarFunctor.ml[437,12270+10]..[437,12270+11])
                                                  Ppat_var "w" (lib/grammarFunctor.ml[437,12270+10]..[437,12270+11])
                                                expression (lib/grammarFunctor.ml[437,12270+14]..[437,12270+22])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[437,12270+14]..[437,12270+20])
                                                    Pexp_ident "decode" (lib/grammarFunctor.ml[437,12270+14]..[437,12270+20])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[437,12270+21]..[437,12270+22])
                                                        Pexp_ident "i" (lib/grammarFunctor.ml[437,12270+21]..[437,12270+22])
                                                  ]
                                            ]
                                            expression (lib/grammarFunctor.ml[438,12296+6]..[441,12365+9])
                                              Pexp_ifthenelse
                                              expression (lib/grammarFunctor.ml[438,12296+9]..[438,12296+28])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[438,12296+25]..[438,12296+26])
                                                  Pexp_ident ">" (lib/grammarFunctor.ml[438,12296+25]..[438,12296+26])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[438,12296+9]..[438,12296+24])
                                                      Pexp_apply
                                                      expression (lib/grammarFunctor.ml[438,12296+9]..[438,12296+22])
                                                        Pexp_ident "String.length" (lib/grammarFunctor.ml[438,12296+9]..[438,12296+22])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/grammarFunctor.ml[438,12296+23]..[438,12296+24])
                                                            Pexp_ident "w" (lib/grammarFunctor.ml[438,12296+23]..[438,12296+24])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[438,12296+27]..[438,12296+28])
                                                      Pexp_constant PConst_int (0,None)
                                                ]
                                              expression (lib/grammarFunctor.ml[439,12330+8]..[439,12330+23])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[439,12330+8]..[439,12330+17])
                                                  Pexp_ident "Char.code" (lib/grammarFunctor.ml[439,12330+8]..[439,12330+17])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[439,12330+18]..[439,12330+23])
                                                      Pexp_apply
                                                      expression (lib/grammarFunctor.ml[439,12330+18]..[439,12330+23]) ghost
                                                        Pexp_ident "String.get" (lib/grammarFunctor.ml[439,12330+18]..[439,12330+23]) ghost
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/grammarFunctor.ml[439,12330+18]..[439,12330+19])
                                                            Pexp_ident "w" (lib/grammarFunctor.ml[439,12330+18]..[439,12330+19])
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/grammarFunctor.ml[439,12330+21]..[439,12330+22])
                                                            Pexp_constant PConst_int (0,None)
                                                      ]
                                                ]
                                              Some
                                                expression (lib/grammarFunctor.ml[441,12365+8]..[441,12365+9])
                                                  Pexp_ident "z" (lib/grammarFunctor.ml[441,12365+8]..[441,12365+9])
                                  ]
                                structure_item (lib/grammarFunctor.ml[443,12376+4]..[447,12447+47])
                                  Pstr_value Rec
                                  [
                                    <def>
                                      pattern (lib/grammarFunctor.ml[443,12376+12]..[443,12376+20])
                                        Ppat_var "elements" (lib/grammarFunctor.ml[443,12376+12]..[443,12376+20])
                                      expression (lib/grammarFunctor.ml[443,12376+21]..[447,12447+47]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lib/grammarFunctor.ml[443,12376+21]..[443,12376+22])
                                          Ppat_var "i" (lib/grammarFunctor.ml[443,12376+21]..[443,12376+22])
                                        expression (lib/grammarFunctor.ml[443,12376+23]..[447,12447+47]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (lib/grammarFunctor.ml[443,12376+23]..[443,12376+24])
                                            Ppat_var "n" (lib/grammarFunctor.ml[443,12376+23]..[443,12376+24])
                                          expression (lib/grammarFunctor.ml[443,12376+25]..[447,12447+47]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (lib/grammarFunctor.ml[443,12376+25]..[443,12376+26])
                                              Ppat_var "w" (lib/grammarFunctor.ml[443,12376+25]..[443,12376+26])
                                            expression (lib/grammarFunctor.ml[444,12405+6]..[447,12447+47])
                                              Pexp_ifthenelse
                                              expression (lib/grammarFunctor.ml[444,12405+9]..[444,12405+14])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[444,12405+11]..[444,12405+12])
                                                  Pexp_ident "=" (lib/grammarFunctor.ml[444,12405+11]..[444,12405+12])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[444,12405+9]..[444,12405+10])
                                                      Pexp_ident "i" (lib/grammarFunctor.ml[444,12405+9]..[444,12405+10])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[444,12405+13]..[444,12405+14])
                                                      Pexp_ident "n" (lib/grammarFunctor.ml[444,12405+13]..[444,12405+14])
                                                ]
                                              expression (lib/grammarFunctor.ml[445,12425+8]..[445,12425+10])
                                                Pexp_construct "[]" (lib/grammarFunctor.ml[445,12425+8]..[445,12425+10])
                                                None
                                              Some
                                                expression (lib/grammarFunctor.ml[447,12447+8]..[447,12447+47])
                                                  Pexp_construct "::" (lib/grammarFunctor.ml[447,12447+24]..[447,12447+26])
                                                  Some
                                                    expression (lib/grammarFunctor.ml[447,12447+8]..[447,12447+47]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (lib/grammarFunctor.ml[447,12447+8]..[447,12447+23])
                                                          Pexp_apply
                                                          expression (lib/grammarFunctor.ml[447,12447+8]..[447,12447+17])
                                                            Pexp_ident "Char.code" (lib/grammarFunctor.ml[447,12447+8]..[447,12447+17])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/grammarFunctor.ml[447,12447+18]..[447,12447+23])
                                                                Pexp_apply
                                                                expression (lib/grammarFunctor.ml[447,12447+18]..[447,12447+23]) ghost
                                                                  Pexp_ident "String.get" (lib/grammarFunctor.ml[447,12447+18]..[447,12447+23]) ghost
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lib/grammarFunctor.ml[447,12447+18]..[447,12447+19])
                                                                      Pexp_ident "w" (lib/grammarFunctor.ml[447,12447+18]..[447,12447+19])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lib/grammarFunctor.ml[447,12447+21]..[447,12447+22])
                                                                      Pexp_ident "i" (lib/grammarFunctor.ml[447,12447+21]..[447,12447+22])
                                                                ]
                                                          ]
                                                        expression (lib/grammarFunctor.ml[447,12447+27]..[447,12447+47])
                                                          Pexp_apply
                                                          expression (lib/grammarFunctor.ml[447,12447+27]..[447,12447+35])
                                                            Pexp_ident "elements" (lib/grammarFunctor.ml[447,12447+27]..[447,12447+35])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/grammarFunctor.ml[447,12447+36]..[447,12447+43])
                                                                Pexp_apply
                                                                expression (lib/grammarFunctor.ml[447,12447+39]..[447,12447+40])
                                                                  Pexp_ident "+" (lib/grammarFunctor.ml[447,12447+39]..[447,12447+40])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lib/grammarFunctor.ml[447,12447+37]..[447,12447+38])
                                                                      Pexp_ident "i" (lib/grammarFunctor.ml[447,12447+37]..[447,12447+38])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lib/grammarFunctor.ml[447,12447+41]..[447,12447+42])
                                                                      Pexp_constant PConst_int (1,None)
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/grammarFunctor.ml[447,12447+44]..[447,12447+45])
                                                                Pexp_ident "n" (lib/grammarFunctor.ml[447,12447+44]..[447,12447+45])
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/grammarFunctor.ml[447,12447+46]..[447,12447+47])
                                                                Pexp_ident "w" (lib/grammarFunctor.ml[447,12447+46]..[447,12447+47])
                                                          ]
                                                      ]
                                  ]
                                structure_item (lib/grammarFunctor.ml[449,12496+4]..[451,12543+36])
                                  Pstr_value Nonrec
                                  [
                                    <def>
                                      pattern (lib/grammarFunctor.ml[449,12496+8]..[449,12496+16])
                                        Ppat_var "elements" (lib/grammarFunctor.ml[449,12496+8]..[449,12496+16])
                                      expression (lib/grammarFunctor.ml[449,12496+17]..[451,12543+36]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lib/grammarFunctor.ml[449,12496+17]..[449,12496+18])
                                          Ppat_var "i" (lib/grammarFunctor.ml[449,12496+17]..[449,12496+18])
                                        expression (lib/grammarFunctor.ml[450,12517+6]..[451,12543+36])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/grammarFunctor.ml[450,12517+10]..[450,12517+11])
                                                Ppat_var "w" (lib/grammarFunctor.ml[450,12517+10]..[450,12517+11])
                                              expression (lib/grammarFunctor.ml[450,12517+14]..[450,12517+22])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[450,12517+14]..[450,12517+20])
                                                  Pexp_ident "decode" (lib/grammarFunctor.ml[450,12517+14]..[450,12517+20])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[450,12517+21]..[450,12517+22])
                                                      Pexp_ident "i" (lib/grammarFunctor.ml[450,12517+21]..[450,12517+22])
                                                ]
                                          ]
                                          expression (lib/grammarFunctor.ml[451,12543+6]..[451,12543+36])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[451,12543+6]..[451,12543+14])
                                              Pexp_ident "elements" (lib/grammarFunctor.ml[451,12543+6]..[451,12543+14])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[451,12543+15]..[451,12543+16])
                                                  Pexp_constant PConst_int (0,None)
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[451,12543+17]..[451,12543+34])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[451,12543+18]..[451,12543+31])
                                                    Pexp_ident "String.length" (lib/grammarFunctor.ml[451,12543+18]..[451,12543+31])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[451,12543+32]..[451,12543+33])
                                                        Pexp_ident "w" (lib/grammarFunctor.ml[451,12543+32]..[451,12543+33])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[451,12543+35]..[451,12543+36])
                                                  Pexp_ident "w" (lib/grammarFunctor.ml[451,12543+35]..[451,12543+36])
                                            ]
                                  ]
                                structure_item (lib/grammarFunctor.ml[453,12581+4]..[458,12712+34])
                                  Pstr_value Nonrec
                                  [
                                    <def>
                                      pattern (lib/grammarFunctor.ml[453,12581+8]..[453,12581+13])
                                        Ppat_var "print" (lib/grammarFunctor.ml[453,12581+8]..[453,12581+13])
                                      expression (lib/grammarFunctor.ml[453,12581+14]..[458,12712+34]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lib/grammarFunctor.ml[453,12581+14]..[453,12581+15])
                                          Ppat_var "i" (lib/grammarFunctor.ml[453,12581+14]..[453,12581+15])
                                        expression (lib/grammarFunctor.ml[454,12599+6]..[458,12712+34])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/grammarFunctor.ml[454,12599+10]..[454,12599+11])
                                                Ppat_var "w" (lib/grammarFunctor.ml[454,12599+10]..[454,12599+11])
                                              expression (lib/grammarFunctor.ml[454,12599+14]..[454,12599+22])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[454,12599+14]..[454,12599+20])
                                                  Pexp_ident "decode" (lib/grammarFunctor.ml[454,12599+14]..[454,12599+20])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[454,12599+21]..[454,12599+22])
                                                      Pexp_ident "i" (lib/grammarFunctor.ml[454,12599+21]..[454,12599+22])
                                                ]
                                          ]
                                          expression (lib/grammarFunctor.ml[455,12625+6]..[458,12712+34])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[455,12625+6]..[455,12625+35])
                                              Pexp_ident "Misc.separated_iter_to_string" (lib/grammarFunctor.ml[455,12625+6]..[455,12625+35])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[456,12661+8]..[456,12661+38])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (lib/grammarFunctor.ml[456,12661+13]..[456,12661+14])
                                                    Ppat_var "c" (lib/grammarFunctor.ml[456,12661+13]..[456,12661+14])
                                                  expression (lib/grammarFunctor.ml[456,12661+18]..[456,12661+37])
                                                    Pexp_apply
                                                    expression (lib/grammarFunctor.ml[456,12661+18]..[456,12661+23])
                                                      Pexp_ident "print" (lib/grammarFunctor.ml[456,12661+18]..[456,12661+23])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[456,12661+24]..[456,12661+37])
                                                          Pexp_apply
                                                          expression (lib/grammarFunctor.ml[456,12661+25]..[456,12661+34])
                                                            Pexp_ident "Char.code" (lib/grammarFunctor.ml[456,12661+25]..[456,12661+34])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/grammarFunctor.ml[456,12661+35]..[456,12661+36])
                                                                Pexp_ident "c" (lib/grammarFunctor.ml[456,12661+35]..[456,12661+36])
                                                          ]
                                                    ]
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[457,12700+8]..[457,12700+11])
                                                  Pexp_constant PConst_string(" ",(lib/grammarFunctor.ml[457,12700+9]..[457,12700+10]),None)
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[458,12712+8]..[458,12712+34])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (lib/grammarFunctor.ml[458,12712+13]..[458,12712+14])
                                                    Ppat_var "f" (lib/grammarFunctor.ml[458,12712+13]..[458,12712+14])
                                                  expression (lib/grammarFunctor.ml[458,12712+18]..[458,12712+33])
                                                    Pexp_apply
                                                    expression (lib/grammarFunctor.ml[458,12712+18]..[458,12712+29])
                                                      Pexp_ident "String.iter" (lib/grammarFunctor.ml[458,12712+18]..[458,12712+29])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[458,12712+30]..[458,12712+31])
                                                          Pexp_ident "f" (lib/grammarFunctor.ml[458,12712+30]..[458,12712+31])
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[458,12712+32]..[458,12712+33])
                                                          Pexp_ident "w" (lib/grammarFunctor.ml[458,12712+32]..[458,12712+33])
                                                    ]
                                            ]
                                  ]
                                structure_item (lib/grammarFunctor.ml[461,12824+4]..[462,12848+45])
                                  Pstr_value Nonrec
                                  [
                                    <def>
                                      pattern (lib/grammarFunctor.ml[461,12824+8]..[461,12824+15])
                                        Ppat_var "compare" (lib/grammarFunctor.ml[461,12824+8]..[461,12824+15])
                                      expression (lib/grammarFunctor.ml[461,12824+16]..[462,12848+45]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lib/grammarFunctor.ml[461,12824+16]..[461,12824+18])
                                          Ppat_var "i1" (lib/grammarFunctor.ml[461,12824+16]..[461,12824+18])
                                        expression (lib/grammarFunctor.ml[461,12824+19]..[462,12848+45]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (lib/grammarFunctor.ml[461,12824+19]..[461,12824+21])
                                            Ppat_var "i2" (lib/grammarFunctor.ml[461,12824+19]..[461,12824+21])
                                          expression (lib/grammarFunctor.ml[462,12848+6]..[462,12848+45])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[462,12848+6]..[462,12848+21])
                                              Pexp_ident "Generic.compare" (lib/grammarFunctor.ml[462,12848+6]..[462,12848+21])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[462,12848+22]..[462,12848+33])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[462,12848+23]..[462,12848+29])
                                                    Pexp_ident "decode" (lib/grammarFunctor.ml[462,12848+23]..[462,12848+29])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[462,12848+30]..[462,12848+32])
                                                        Pexp_ident "i1" (lib/grammarFunctor.ml[462,12848+30]..[462,12848+32])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[462,12848+34]..[462,12848+45])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[462,12848+35]..[462,12848+41])
                                                    Pexp_ident "decode" (lib/grammarFunctor.ml[462,12848+35]..[462,12848+41])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[462,12848+42]..[462,12848+44])
                                                        Pexp_ident "i2" (lib/grammarFunctor.ml[462,12848+42]..[462,12848+44])
                                                  ]
                                            ]
                                  ]
                              ]
                    ]
              structure_item (lib/grammarFunctor.ml[471,13041+0]..[502,13642+3])
                Pstr_module
                "TerminalSet" (lib/grammarFunctor.ml[471,13041+7]..[471,13041+18])
                  module_expr (lib/grammarFunctor.ml[471,13041+21]..[502,13642+3])
                    Pmod_structure
                    [
                      structure_item (lib/grammarFunctor.ml[475,13138+2]..[475,13138+40])
                        Pstr_include                        module_expr (lib/grammarFunctor.ml[475,13138+10]..[475,13138+40])
                          Pmod_apply_unit
                          module_expr (lib/grammarFunctor.ml[475,13138+10]..[475,13138+38])
                            Pmod_apply
                            module_expr (lib/grammarFunctor.ml[475,13138+10]..[475,13138+28])
                              Pmod_ident "BoundedBitSet.Make" (lib/grammarFunctor.ml[475,13138+10]..[475,13138+28])
                            module_expr (lib/grammarFunctor.ml[475,13138+29]..[475,13138+37])
                              Pmod_ident "Terminal" (lib/grammarFunctor.ml[475,13138+29]..[475,13138+37])
                      structure_item (lib/grammarFunctor.ml[477,13180+2]..[478,13199+75])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[477,13180+6]..[477,13180+11])
                              Ppat_var "print" (lib/grammarFunctor.ml[477,13180+6]..[477,13180+11])
                            expression (lib/grammarFunctor.ml[477,13180+12]..[478,13199+75]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[477,13180+12]..[477,13180+16])
                                Ppat_var "toks" (lib/grammarFunctor.ml[477,13180+12]..[477,13180+16])
                              expression (lib/grammarFunctor.ml[478,13199+4]..[478,13199+75])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[478,13199+4]..[478,13199+33])
                                  Pexp_ident "Misc.separated_iter_to_string" (lib/grammarFunctor.ml[478,13199+4]..[478,13199+33])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[478,13199+34]..[478,13199+48])
                                      Pexp_ident "Terminal.print" (lib/grammarFunctor.ml[478,13199+34]..[478,13199+48])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[478,13199+49]..[478,13199+52])
                                      Pexp_constant PConst_string(" ",(lib/grammarFunctor.ml[478,13199+50]..[478,13199+51]),None)
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[478,13199+53]..[478,13199+75])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lib/grammarFunctor.ml[478,13199+58]..[478,13199+59])
                                        Ppat_var "f" (lib/grammarFunctor.ml[478,13199+58]..[478,13199+59])
                                      expression (lib/grammarFunctor.ml[478,13199+63]..[478,13199+74])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[478,13199+63]..[478,13199+67])
                                          Pexp_ident "iter" (lib/grammarFunctor.ml[478,13199+63]..[478,13199+67])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[478,13199+68]..[478,13199+69])
                                              Pexp_ident "f" (lib/grammarFunctor.ml[478,13199+68]..[478,13199+69])
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[478,13199+70]..[478,13199+74])
                                              Pexp_ident "toks" (lib/grammarFunctor.ml[478,13199+70]..[478,13199+74])
                                        ]
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[480,13276+2]..[485,13391+5])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[480,13276+6]..[480,13276+14])
                              Ppat_var "universe" (lib/grammarFunctor.ml[480,13276+6]..[480,13276+14])
                            expression (lib/grammarFunctor.ml[481,13293+4]..[485,13391+5])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[481,13293+4]..[481,13293+10])
                                Pexp_ident "remove" (lib/grammarFunctor.ml[481,13293+4]..[481,13293+10])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[481,13293+11]..[481,13293+25])
                                    Pexp_ident "Terminal.sharp" (lib/grammarFunctor.ml[481,13293+11]..[481,13293+25])
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[481,13293+26]..[485,13391+5])
                                    Pexp_apply
                                    expression (lib/grammarFunctor.ml[482,13321+6]..[482,13321+12])
                                      Pexp_ident "remove" (lib/grammarFunctor.ml[482,13321+6]..[482,13321+12])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[482,13321+13]..[482,13321+27])
                                          Pexp_ident "Terminal.error" (lib/grammarFunctor.ml[482,13321+13]..[482,13321+27])
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[482,13321+28]..[484,13383+7])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[483,13351+8]..[483,13351+21])
                                            Pexp_ident "Terminal.fold" (lib/grammarFunctor.ml[483,13351+8]..[483,13351+21])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[483,13351+22]..[483,13351+25])
                                                Pexp_ident "add" (lib/grammarFunctor.ml[483,13351+22]..[483,13351+25])
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[483,13351+26]..[483,13351+31])
                                                Pexp_ident "empty" (lib/grammarFunctor.ml[483,13351+26]..[483,13351+31])
                                          ]
                                    ]
                              ]
                        ]
                      structure_item (lib/grammarFunctor.ml[490,13531+2]..[491,13549+5])
                        Pstr_type Rec
                        [
                          type_declaration "property" (lib/grammarFunctor.ml[490,13531+7]..[490,13531+15]) (lib/grammarFunctor.ml[490,13531+2]..[491,13549+5])
                            ptype_params =
                              []
                            ptype_cstrs =
                              []
                            ptype_kind =
                              Ptype_abstract
                            ptype_private = Public
                            ptype_manifest =
                              Some
                                core_type (lib/grammarFunctor.ml[491,13549+4]..[491,13549+5])
                                  Ptyp_constr "t" (lib/grammarFunctor.ml[491,13549+4]..[491,13549+5])
                                  []
                        ]
                      structure_item (lib/grammarFunctor.ml[493,13556+2]..[494,13571+9])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[493,13556+6]..[493,13556+12])
                              Ppat_var "bottom" (lib/grammarFunctor.ml[493,13556+6]..[493,13556+12])
                            expression (lib/grammarFunctor.ml[494,13571+4]..[494,13571+9])
                              Pexp_ident "empty" (lib/grammarFunctor.ml[494,13571+4]..[494,13571+9])
                        ]
                      structure_item (lib/grammarFunctor.ml[496,13582+2]..[497,13603+9])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[496,13582+6]..[496,13582+16])
                              Ppat_var "is_maximal" (lib/grammarFunctor.ml[496,13582+6]..[496,13582+16])
                            expression (lib/grammarFunctor.ml[496,13582+17]..[497,13603+9]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[496,13582+17]..[496,13582+18])
                                Ppat_any
                              expression (lib/grammarFunctor.ml[497,13603+4]..[497,13603+9])
                                Pexp_construct "false" (lib/grammarFunctor.ml[497,13603+4]..[497,13603+9])
                                None
                        ]
                      structure_item (lib/grammarFunctor.ml[499,13614+2]..[500,13631+9])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[499,13614+6]..[499,13614+14])
                              Ppat_var "leq_join" (lib/grammarFunctor.ml[499,13614+6]..[499,13614+14])
                            expression (lib/grammarFunctor.ml[500,13631+4]..[500,13631+9])
                              Pexp_ident "union" (lib/grammarFunctor.ml[500,13631+4]..[500,13631+9])
                        ]
                    ]
              structure_item (lib/grammarFunctor.ml[506,13675+0]..[506,13675+33])
                Pstr_module
                "TerminalMap" (lib/grammarFunctor.ml[506,13675+7]..[506,13675+18])
                  module_expr (lib/grammarFunctor.ml[506,13675+21]..[506,13675+33])
                    Pmod_ident "Patricia.Big" (lib/grammarFunctor.ml[506,13675+21]..[506,13675+33])
              structure_item (lib/grammarFunctor.ml[511,13805+0]..[614,15999+3])
                Pstr_module
                "Symbol" (lib/grammarFunctor.ml[511,13805+7]..[511,13805+13])
                  module_expr (lib/grammarFunctor.ml[511,13805+16]..[614,15999+3])
                    Pmod_structure
                    [
                      structure_item (lib/grammarFunctor.ml[513,13829+2]..[515,13865+21])
                        Pstr_type Rec
                        [
                          type_declaration "t" (lib/grammarFunctor.ml[513,13829+7]..[513,13829+8]) (lib/grammarFunctor.ml[513,13829+2]..[515,13865+21])
                            ptype_params =
                              []
                            ptype_cstrs =
                              []
                            ptype_kind =
                              Ptype_variant
                                [
                                  (lib/grammarFunctor.ml[514,13840+4]..[514,13840+24])
                                    "N" (lib/grammarFunctor.ml[514,13840+6]..[514,13840+7])
                                    [
                                      core_type (lib/grammarFunctor.ml[514,13840+11]..[514,13840+24])
                                        Ptyp_constr "Nonterminal.t" (lib/grammarFunctor.ml[514,13840+11]..[514,13840+24])
                                        []
                                    ]
                                    None
                                  (lib/grammarFunctor.ml[515,13865+4]..[515,13865+21])
                                    "T" (lib/grammarFunctor.ml[515,13865+6]..[515,13865+7])
                                    [
                                      core_type (lib/grammarFunctor.ml[515,13865+11]..[515,13865+21])
                                        Ptyp_constr "Terminal.t" (lib/grammarFunctor.ml[515,13865+11]..[515,13865+21])
                                        []
                                    ]
                                    None
                                ]
                            ptype_private = Public
                            ptype_manifest =
                              None
                        ]
                      structure_item (lib/grammarFunctor.ml[517,13888+2]..[522,13971+12])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[517,13888+6]..[517,13888+17])
                              Ppat_var "is_terminal" (lib/grammarFunctor.ml[517,13888+6]..[517,13888+17])
                            expression (lib/grammarFunctor.ml[517,13888+18]..[522,13971+12]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[517,13888+18]..[517,13888+21])
                                Ppat_var "sym" (lib/grammarFunctor.ml[517,13888+18]..[517,13888+21])
                              expression (lib/grammarFunctor.ml[518,13912+4]..[522,13971+12])
                                Pexp_match
                                expression (lib/grammarFunctor.ml[518,13912+10]..[518,13912+13])
                                  Pexp_ident "sym" (lib/grammarFunctor.ml[518,13912+10]..[518,13912+13])
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[519,13931+6]..[519,13931+9])
                                      Ppat_construct "N" (lib/grammarFunctor.ml[519,13931+6]..[519,13931+7])
                                      Some
                                        []
                                        pattern (lib/grammarFunctor.ml[519,13931+8]..[519,13931+9])
                                          Ppat_any
                                    expression (lib/grammarFunctor.ml[520,13944+8]..[520,13944+13])
                                      Pexp_construct "false" (lib/grammarFunctor.ml[520,13944+8]..[520,13944+13])
                                      None
                                  <case>
                                    pattern (lib/grammarFunctor.ml[521,13958+6]..[521,13958+9])
                                      Ppat_construct "T" (lib/grammarFunctor.ml[521,13958+6]..[521,13958+7])
                                      Some
                                        []
                                        pattern (lib/grammarFunctor.ml[521,13958+8]..[521,13958+9])
                                          Ppat_any
                                    expression (lib/grammarFunctor.ml[522,13971+8]..[522,13971+12])
                                      Pexp_construct "true" (lib/grammarFunctor.ml[522,13971+8]..[522,13971+12])
                                      None
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[524,13985+2]..[533,14200+10])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[524,13985+6]..[524,13985+13])
                              Ppat_var "compare" (lib/grammarFunctor.ml[524,13985+6]..[524,13985+13])
                            expression (lib/grammarFunctor.ml[524,13985+14]..[533,14200+10]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[524,13985+14]..[524,13985+18])
                                Ppat_var "sym1" (lib/grammarFunctor.ml[524,13985+14]..[524,13985+18])
                              expression (lib/grammarFunctor.ml[524,13985+19]..[533,14200+10]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[524,13985+19]..[524,13985+23])
                                  Ppat_var "sym2" (lib/grammarFunctor.ml[524,13985+19]..[524,13985+23])
                                expression (lib/grammarFunctor.ml[525,14011+4]..[533,14200+10])
                                  Pexp_match
                                  expression (lib/grammarFunctor.ml[525,14011+10]..[525,14011+20])
                                    Pexp_tuple
                                    [
                                      expression (lib/grammarFunctor.ml[525,14011+10]..[525,14011+14])
                                        Pexp_ident "sym1" (lib/grammarFunctor.ml[525,14011+10]..[525,14011+14])
                                      expression (lib/grammarFunctor.ml[525,14011+16]..[525,14011+20])
                                        Pexp_ident "sym2" (lib/grammarFunctor.ml[525,14011+16]..[525,14011+20])
                                    ]
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[526,14037+6]..[526,14037+18])
                                        Ppat_tuple
                                        [
                                          pattern (lib/grammarFunctor.ml[526,14037+6]..[526,14037+11])
                                            Ppat_construct "N" (lib/grammarFunctor.ml[526,14037+6]..[526,14037+7])
                                            Some
                                              []
                                              pattern (lib/grammarFunctor.ml[526,14037+8]..[526,14037+11])
                                                Ppat_var "nt1" (lib/grammarFunctor.ml[526,14037+8]..[526,14037+11])
                                          pattern (lib/grammarFunctor.ml[526,14037+13]..[526,14037+18])
                                            Ppat_construct "N" (lib/grammarFunctor.ml[526,14037+13]..[526,14037+14])
                                            Some
                                              []
                                              pattern (lib/grammarFunctor.ml[526,14037+15]..[526,14037+18])
                                                Ppat_var "nt2" (lib/grammarFunctor.ml[526,14037+15]..[526,14037+18])
                                        ]
                                      expression (lib/grammarFunctor.ml[527,14059+8]..[527,14059+35])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[527,14059+8]..[527,14059+27])
                                          Pexp_ident "Nonterminal.compare" (lib/grammarFunctor.ml[527,14059+8]..[527,14059+27])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[527,14059+28]..[527,14059+31])
                                              Pexp_ident "nt1" (lib/grammarFunctor.ml[527,14059+28]..[527,14059+31])
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[527,14059+32]..[527,14059+35])
                                              Pexp_ident "nt2" (lib/grammarFunctor.ml[527,14059+32]..[527,14059+35])
                                        ]
                                    <case>
                                      pattern (lib/grammarFunctor.ml[528,14095+6]..[528,14095+20])
                                        Ppat_tuple
                                        [
                                          pattern (lib/grammarFunctor.ml[528,14095+6]..[528,14095+12])
                                            Ppat_construct "T" (lib/grammarFunctor.ml[528,14095+6]..[528,14095+7])
                                            Some
                                              []
                                              pattern (lib/grammarFunctor.ml[528,14095+8]..[528,14095+12])
                                                Ppat_var "tok1" (lib/grammarFunctor.ml[528,14095+8]..[528,14095+12])
                                          pattern (lib/grammarFunctor.ml[528,14095+14]..[528,14095+20])
                                            Ppat_construct "T" (lib/grammarFunctor.ml[528,14095+14]..[528,14095+15])
                                            Some
                                              []
                                              pattern (lib/grammarFunctor.ml[528,14095+16]..[528,14095+20])
                                                Ppat_var "tok2" (lib/grammarFunctor.ml[528,14095+16]..[528,14095+20])
                                        ]
                                      expression (lib/grammarFunctor.ml[529,14119+8]..[529,14119+34])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[529,14119+8]..[529,14119+24])
                                          Pexp_ident "Terminal.compare" (lib/grammarFunctor.ml[529,14119+8]..[529,14119+24])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[529,14119+25]..[529,14119+29])
                                              Pexp_ident "tok1" (lib/grammarFunctor.ml[529,14119+25]..[529,14119+29])
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[529,14119+30]..[529,14119+34])
                                              Pexp_ident "tok2" (lib/grammarFunctor.ml[529,14119+30]..[529,14119+34])
                                        ]
                                    <case>
                                      pattern (lib/grammarFunctor.ml[530,14154+6]..[530,14154+14])
                                        Ppat_tuple
                                        [
                                          pattern (lib/grammarFunctor.ml[530,14154+6]..[530,14154+9])
                                            Ppat_construct "N" (lib/grammarFunctor.ml[530,14154+6]..[530,14154+7])
                                            Some
                                              []
                                              pattern (lib/grammarFunctor.ml[530,14154+8]..[530,14154+9])
                                                Ppat_any
                                          pattern (lib/grammarFunctor.ml[530,14154+11]..[530,14154+14])
                                            Ppat_construct "T" (lib/grammarFunctor.ml[530,14154+11]..[530,14154+12])
                                            Some
                                              []
                                              pattern (lib/grammarFunctor.ml[530,14154+13]..[530,14154+14])
                                                Ppat_any
                                        ]
                                      expression (lib/grammarFunctor.ml[531,14172+8]..[531,14172+9])
                                        Pexp_constant PConst_int (1,None)
                                    <case>
                                      pattern (lib/grammarFunctor.ml[532,14182+6]..[532,14182+14])
                                        Ppat_tuple
                                        [
                                          pattern (lib/grammarFunctor.ml[532,14182+6]..[532,14182+9])
                                            Ppat_construct "T" (lib/grammarFunctor.ml[532,14182+6]..[532,14182+7])
                                            Some
                                              []
                                              pattern (lib/grammarFunctor.ml[532,14182+8]..[532,14182+9])
                                                Ppat_any
                                          pattern (lib/grammarFunctor.ml[532,14182+11]..[532,14182+14])
                                            Ppat_construct "N" (lib/grammarFunctor.ml[532,14182+11]..[532,14182+12])
                                            Some
                                              []
                                              pattern (lib/grammarFunctor.ml[532,14182+13]..[532,14182+14])
                                                Ppat_any
                                        ]
                                      expression (lib/grammarFunctor.ml[533,14200+8]..[533,14200+10])
                                        Pexp_constant PConst_int (-1,None)
                                  ]
                        ]
                      structure_item (lib/grammarFunctor.ml[535,14212+2]..[536,14236+25])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[535,14212+6]..[535,14212+11])
                              Ppat_var "equal" (lib/grammarFunctor.ml[535,14212+6]..[535,14212+11])
                            expression (lib/grammarFunctor.ml[535,14212+12]..[536,14236+25]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[535,14212+12]..[535,14212+16])
                                Ppat_var "sym1" (lib/grammarFunctor.ml[535,14212+12]..[535,14212+16])
                              expression (lib/grammarFunctor.ml[535,14212+17]..[536,14236+25]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[535,14212+17]..[535,14212+21])
                                  Ppat_var "sym2" (lib/grammarFunctor.ml[535,14212+17]..[535,14212+21])
                                expression (lib/grammarFunctor.ml[536,14236+4]..[536,14236+25])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[536,14236+22]..[536,14236+23])
                                    Pexp_ident "=" (lib/grammarFunctor.ml[536,14236+22]..[536,14236+23])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[536,14236+4]..[536,14236+21])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[536,14236+4]..[536,14236+11])
                                          Pexp_ident "compare" (lib/grammarFunctor.ml[536,14236+4]..[536,14236+11])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[536,14236+12]..[536,14236+16])
                                              Pexp_ident "sym1" (lib/grammarFunctor.ml[536,14236+12]..[536,14236+16])
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[536,14236+17]..[536,14236+21])
                                              Pexp_ident "sym2" (lib/grammarFunctor.ml[536,14236+17]..[536,14236+21])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[536,14236+24]..[536,14236+25])
                                        Pexp_constant PConst_int (0,None)
                                  ]
                        ]
                      structure_item (lib/grammarFunctor.ml[538,14263+2]..[546,14472+13])
                        Pstr_value Rec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[538,14263+10]..[538,14263+16])
                              Ppat_var "lequal" (lib/grammarFunctor.ml[538,14263+10]..[538,14263+16])
                            expression (lib/grammarFunctor.ml[538,14263+17]..[546,14472+13]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[538,14263+17]..[538,14263+22])
                                Ppat_var "syms1" (lib/grammarFunctor.ml[538,14263+17]..[538,14263+22])
                              expression (lib/grammarFunctor.ml[538,14263+23]..[546,14472+13]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[538,14263+23]..[538,14263+28])
                                  Ppat_var "syms2" (lib/grammarFunctor.ml[538,14263+23]..[538,14263+28])
                                expression (lib/grammarFunctor.ml[539,14294+4]..[546,14472+13])
                                  Pexp_match
                                  expression (lib/grammarFunctor.ml[539,14294+10]..[539,14294+22])
                                    Pexp_tuple
                                    [
                                      expression (lib/grammarFunctor.ml[539,14294+10]..[539,14294+15])
                                        Pexp_ident "syms1" (lib/grammarFunctor.ml[539,14294+10]..[539,14294+15])
                                      expression (lib/grammarFunctor.ml[539,14294+17]..[539,14294+22])
                                        Pexp_ident "syms2" (lib/grammarFunctor.ml[539,14294+17]..[539,14294+22])
                                    ]
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[540,14322+6]..[540,14322+12])
                                        Ppat_tuple
                                        [
                                          pattern (lib/grammarFunctor.ml[540,14322+6]..[540,14322+8])
                                            Ppat_construct "[]" (lib/grammarFunctor.ml[540,14322+6]..[540,14322+8])
                                            None
                                          pattern (lib/grammarFunctor.ml[540,14322+10]..[540,14322+12])
                                            Ppat_construct "[]" (lib/grammarFunctor.ml[540,14322+10]..[540,14322+12])
                                            None
                                        ]
                                      expression (lib/grammarFunctor.ml[541,14338+8]..[541,14338+12])
                                        Pexp_construct "true" (lib/grammarFunctor.ml[541,14338+8]..[541,14338+12])
                                        None
                                    <case>
                                      pattern (lib/grammarFunctor.ml[542,14351+6]..[542,14351+34])
                                        Ppat_tuple
                                        [
                                          pattern (lib/grammarFunctor.ml[542,14351+6]..[542,14351+19])
                                            Ppat_construct "::" (lib/grammarFunctor.ml[542,14351+11]..[542,14351+13])
                                            Some
                                              []
                                              pattern (lib/grammarFunctor.ml[542,14351+6]..[542,14351+19]) ghost
                                                Ppat_tuple
                                                [
                                                  pattern (lib/grammarFunctor.ml[542,14351+6]..[542,14351+10])
                                                    Ppat_var "sym1" (lib/grammarFunctor.ml[542,14351+6]..[542,14351+10])
                                                  pattern (lib/grammarFunctor.ml[542,14351+14]..[542,14351+19])
                                                    Ppat_var "syms1" (lib/grammarFunctor.ml[542,14351+14]..[542,14351+19])
                                                ]
                                          pattern (lib/grammarFunctor.ml[542,14351+21]..[542,14351+34])
                                            Ppat_construct "::" (lib/grammarFunctor.ml[542,14351+26]..[542,14351+28])
                                            Some
                                              []
                                              pattern (lib/grammarFunctor.ml[542,14351+21]..[542,14351+34]) ghost
                                                Ppat_tuple
                                                [
                                                  pattern (lib/grammarFunctor.ml[542,14351+21]..[542,14351+25])
                                                    Ppat_var "sym2" (lib/grammarFunctor.ml[542,14351+21]..[542,14351+25])
                                                  pattern (lib/grammarFunctor.ml[542,14351+29]..[542,14351+34])
                                                    Ppat_var "syms2" (lib/grammarFunctor.ml[542,14351+29]..[542,14351+34])
                                                ]
                                        ]
                                      expression (lib/grammarFunctor.ml[543,14389+8]..[543,14389+45])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[543,14389+24]..[543,14389+26])
                                          Pexp_ident "&&" (lib/grammarFunctor.ml[543,14389+24]..[543,14389+26])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[543,14389+8]..[543,14389+23])
                                              Pexp_apply
                                              expression (lib/grammarFunctor.ml[543,14389+8]..[543,14389+13])
                                                Pexp_ident "equal" (lib/grammarFunctor.ml[543,14389+8]..[543,14389+13])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[543,14389+14]..[543,14389+18])
                                                    Pexp_ident "sym1" (lib/grammarFunctor.ml[543,14389+14]..[543,14389+18])
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[543,14389+19]..[543,14389+23])
                                                    Pexp_ident "sym2" (lib/grammarFunctor.ml[543,14389+19]..[543,14389+23])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[543,14389+27]..[543,14389+45])
                                              Pexp_apply
                                              expression (lib/grammarFunctor.ml[543,14389+27]..[543,14389+33])
                                                Pexp_ident "lequal" (lib/grammarFunctor.ml[543,14389+27]..[543,14389+33])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[543,14389+34]..[543,14389+39])
                                                    Pexp_ident "syms1" (lib/grammarFunctor.ml[543,14389+34]..[543,14389+39])
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[543,14389+40]..[543,14389+45])
                                                    Pexp_ident "syms2" (lib/grammarFunctor.ml[543,14389+40]..[543,14389+45])
                                              ]
                                        ]
                                    <case>
                                      pattern (lib/grammarFunctor.ml[544,14435+6]..[545,14452+16])
                                        Ppat_or
                                        pattern (lib/grammarFunctor.ml[544,14435+6]..[544,14435+16])
                                          Ppat_tuple
                                          [
                                            pattern (lib/grammarFunctor.ml[544,14435+6]..[544,14435+12])
                                              Ppat_construct "::" (lib/grammarFunctor.ml[544,14435+8]..[544,14435+10])
                                              Some
                                                []
                                                pattern (lib/grammarFunctor.ml[544,14435+6]..[544,14435+12]) ghost
                                                  Ppat_tuple
                                                  [
                                                    pattern (lib/grammarFunctor.ml[544,14435+6]..[544,14435+7])
                                                      Ppat_any
                                                    pattern (lib/grammarFunctor.ml[544,14435+11]..[544,14435+12])
                                                      Ppat_any
                                                  ]
                                            pattern (lib/grammarFunctor.ml[544,14435+14]..[544,14435+16])
                                              Ppat_construct "[]" (lib/grammarFunctor.ml[544,14435+14]..[544,14435+16])
                                              None
                                          ]
                                        pattern (lib/grammarFunctor.ml[545,14452+6]..[545,14452+16])
                                          Ppat_tuple
                                          [
                                            pattern (lib/grammarFunctor.ml[545,14452+6]..[545,14452+8])
                                              Ppat_construct "[]" (lib/grammarFunctor.ml[545,14452+6]..[545,14452+8])
                                              None
                                            pattern (lib/grammarFunctor.ml[545,14452+10]..[545,14452+16])
                                              Ppat_construct "::" (lib/grammarFunctor.ml[545,14452+12]..[545,14452+14])
                                              Some
                                                []
                                                pattern (lib/grammarFunctor.ml[545,14452+10]..[545,14452+16]) ghost
                                                  Ppat_tuple
                                                  [
                                                    pattern (lib/grammarFunctor.ml[545,14452+10]..[545,14452+11])
                                                      Ppat_any
                                                    pattern (lib/grammarFunctor.ml[545,14452+15]..[545,14452+16])
                                                      Ppat_any
                                                  ]
                                          ]
                                      expression (lib/grammarFunctor.ml[546,14472+8]..[546,14472+13])
                                        Pexp_construct "false" (lib/grammarFunctor.ml[546,14472+8]..[546,14472+13])
                                        None
                                  ]
                        ]
                      structure_item (lib/grammarFunctor.ml[548,14487+2]..[553,14587+12])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[548,14487+6]..[548,14487+15])
                              Ppat_var "non_error" (lib/grammarFunctor.ml[548,14487+6]..[548,14487+15])
                            expression (lib/grammarFunctor.ml[548,14487+16]..[553,14587+12]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[548,14487+16]..[548,14487+19])
                                Ppat_var "sym" (lib/grammarFunctor.ml[548,14487+16]..[548,14487+19])
                              expression (lib/grammarFunctor.ml[549,14509+4]..[553,14587+12])
                                Pexp_match
                                expression (lib/grammarFunctor.ml[549,14509+10]..[549,14509+13])
                                  Pexp_ident "sym" (lib/grammarFunctor.ml[549,14509+10]..[549,14509+13])
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[550,14528+6]..[550,14528+11])
                                      Ppat_construct "T" (lib/grammarFunctor.ml[550,14528+6]..[550,14528+7])
                                      Some
                                        []
                                        pattern (lib/grammarFunctor.ml[550,14528+8]..[550,14528+11])
                                          Ppat_var "tok" (lib/grammarFunctor.ml[550,14528+8]..[550,14528+11])
                                    expression (lib/grammarFunctor.ml[551,14543+8]..[551,14543+30])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[551,14543+8]..[551,14543+26])
                                        Pexp_ident "Terminal.non_error" (lib/grammarFunctor.ml[551,14543+8]..[551,14543+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[551,14543+27]..[551,14543+30])
                                            Pexp_ident "tok" (lib/grammarFunctor.ml[551,14543+27]..[551,14543+30])
                                      ]
                                  <case>
                                    pattern (lib/grammarFunctor.ml[552,14574+6]..[552,14574+9])
                                      Ppat_construct "N" (lib/grammarFunctor.ml[552,14574+6]..[552,14574+7])
                                      Some
                                        []
                                        pattern (lib/grammarFunctor.ml[552,14574+8]..[552,14574+9])
                                          Ppat_any
                                    expression (lib/grammarFunctor.ml[553,14587+8]..[553,14587+12])
                                      Pexp_construct "true" (lib/grammarFunctor.ml[553,14587+8]..[553,14587+12])
                                      None
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[555,14601+2]..[559,14688+26])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[555,14601+6]..[555,14601+11])
                              Ppat_var "print" (lib/grammarFunctor.ml[555,14601+6]..[555,14601+11])
                            expression (lib/grammarFunctor.ml[555,14601+14]..[559,14688+26])
                              Pexp_function
                              [
                                <case>
                                  pattern (lib/grammarFunctor.ml[556,14624+6]..[556,14624+10])
                                    Ppat_construct "N" (lib/grammarFunctor.ml[556,14624+6]..[556,14624+7])
                                    Some
                                      []
                                      pattern (lib/grammarFunctor.ml[556,14624+8]..[556,14624+10])
                                        Ppat_var "nt" (lib/grammarFunctor.ml[556,14624+8]..[556,14624+10])
                                  expression (lib/grammarFunctor.ml[557,14638+8]..[557,14638+34])
                                    Pexp_apply
                                    expression (lib/grammarFunctor.ml[557,14638+8]..[557,14638+25])
                                      Pexp_ident "Nonterminal.print" (lib/grammarFunctor.ml[557,14638+8]..[557,14638+25])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[557,14638+26]..[557,14638+31])
                                          Pexp_construct "false" (lib/grammarFunctor.ml[557,14638+26]..[557,14638+31])
                                          None
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[557,14638+32]..[557,14638+34])
                                          Pexp_ident "nt" (lib/grammarFunctor.ml[557,14638+32]..[557,14638+34])
                                    ]
                                <case>
                                  pattern (lib/grammarFunctor.ml[558,14673+6]..[558,14673+11])
                                    Ppat_construct "T" (lib/grammarFunctor.ml[558,14673+6]..[558,14673+7])
                                    Some
                                      []
                                      pattern (lib/grammarFunctor.ml[558,14673+8]..[558,14673+11])
                                        Ppat_var "tok" (lib/grammarFunctor.ml[558,14673+8]..[558,14673+11])
                                  expression (lib/grammarFunctor.ml[559,14688+8]..[559,14688+26])
                                    Pexp_apply
                                    expression (lib/grammarFunctor.ml[559,14688+8]..[559,14688+22])
                                      Pexp_ident "Terminal.print" (lib/grammarFunctor.ml[559,14688+8]..[559,14688+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[559,14688+23]..[559,14688+26])
                                          Pexp_ident "tok" (lib/grammarFunctor.ml[559,14688+23]..[559,14688+26])
                                    ]
                              ]
                        ]
                      structure_item (lib/grammarFunctor.ml[561,14716+2]..[565,14785+12])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[561,14716+6]..[561,14716+17])
                              Ppat_var "nonterminal" (lib/grammarFunctor.ml[561,14716+6]..[561,14716+17])
                            expression (lib/grammarFunctor.ml[561,14716+20]..[565,14785+12])
                              Pexp_function
                              [
                                <case>
                                  pattern (lib/grammarFunctor.ml[562,14745+6]..[562,14745+9])
                                    Ppat_construct "T" (lib/grammarFunctor.ml[562,14745+6]..[562,14745+7])
                                    Some
                                      []
                                      pattern (lib/grammarFunctor.ml[562,14745+8]..[562,14745+9])
                                        Ppat_any
                                  expression (lib/grammarFunctor.ml[563,14758+8]..[563,14758+13])
                                    Pexp_construct "false" (lib/grammarFunctor.ml[563,14758+8]..[563,14758+13])
                                    None
                                <case>
                                  pattern (lib/grammarFunctor.ml[564,14772+6]..[564,14772+9])
                                    Ppat_construct "N" (lib/grammarFunctor.ml[564,14772+6]..[564,14772+7])
                                    Some
                                      []
                                      pattern (lib/grammarFunctor.ml[564,14772+8]..[564,14772+9])
                                        Ppat_any
                                  expression (lib/grammarFunctor.ml[565,14785+8]..[565,14785+12])
                                    Pexp_construct "true" (lib/grammarFunctor.ml[565,14785+8]..[565,14785+12])
                                    None
                              ]
                        ]
                      structure_item (lib/grammarFunctor.ml[572,15034+2]..[573,15049+22])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[572,15034+6]..[572,15034+12])
                              Ppat_var "buffer" (lib/grammarFunctor.ml[572,15034+6]..[572,15034+12])
                            expression (lib/grammarFunctor.ml[573,15049+4]..[573,15049+22])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[573,15049+4]..[573,15049+17])
                                Pexp_ident "Buffer.create" (lib/grammarFunctor.ml[573,15049+4]..[573,15049+17])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[573,15049+18]..[573,15049+22])
                                    Pexp_constant PConst_int (1024,None)
                              ]
                        ]
                      structure_item (lib/grammarFunctor.ml[575,15073+2]..[594,15594+5])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[575,15073+6]..[575,15073+14])
                              Ppat_var "printaod" (lib/grammarFunctor.ml[575,15073+6]..[575,15073+14])
                            expression (lib/grammarFunctor.ml[575,15073+15]..[594,15594+5]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[575,15073+15]..[575,15073+21])
                                Ppat_var "offset" (lib/grammarFunctor.ml[575,15073+15]..[575,15073+21])
                              expression (lib/grammarFunctor.ml[575,15073+22]..[594,15594+5]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[575,15073+22]..[575,15073+25])
                                  Ppat_var "dot" (lib/grammarFunctor.ml[575,15073+22]..[575,15073+25])
                                expression (lib/grammarFunctor.ml[575,15073+26]..[594,15594+5]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lib/grammarFunctor.ml[575,15073+26]..[575,15073+33])
                                    Ppat_var "symbols" (lib/grammarFunctor.ml[575,15073+26]..[575,15073+33])
                                  expression (lib/grammarFunctor.ml[576,15109+4]..[594,15594+5])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/grammarFunctor.ml[576,15109+8]..[576,15109+14])
                                          Ppat_var "length" (lib/grammarFunctor.ml[576,15109+8]..[576,15109+14])
                                        expression (lib/grammarFunctor.ml[576,15109+17]..[576,15109+37])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[576,15109+17]..[576,15109+29])
                                            Pexp_ident "Array.length" (lib/grammarFunctor.ml[576,15109+17]..[576,15109+29])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[576,15109+30]..[576,15109+37])
                                                Pexp_ident "symbols" (lib/grammarFunctor.ml[576,15109+30]..[576,15109+37])
                                          ]
                                    ]
                                    expression (lib/grammarFunctor.ml[577,15150+4]..[594,15594+5])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lib/grammarFunctor.ml[577,15150+8]..[577,15150+13])
                                            Ppat_var "first" (lib/grammarFunctor.ml[577,15150+8]..[577,15150+13])
                                          expression (lib/grammarFunctor.ml[577,15150+16]..[577,15150+24])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[577,15150+16]..[577,15150+19])
                                              Pexp_ident "ref" (lib/grammarFunctor.ml[577,15150+16]..[577,15150+19])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[577,15150+20]..[577,15150+24])
                                                  Pexp_construct "true" (lib/grammarFunctor.ml[577,15150+20]..[577,15150+24])
                                                  None
                                            ]
                                      ]
                                      expression (lib/grammarFunctor.ml[578,15178+4]..[594,15594+5])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/grammarFunctor.ml[578,15178+8]..[578,15178+16])
                                              Ppat_var "separate" (lib/grammarFunctor.ml[578,15178+8]..[578,15178+16])
                                            expression (lib/grammarFunctor.ml[578,15178+17]..[580,15252+20]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (lib/grammarFunctor.ml[578,15178+17]..[578,15178+19])
                                                Ppat_construct "()" (lib/grammarFunctor.ml[578,15178+17]..[578,15178+19])
                                                None
                                              expression (lib/grammarFunctor.ml[579,15200+6]..[580,15252+20])
                                                Pexp_sequence
                                                expression (lib/grammarFunctor.ml[579,15200+6]..[579,15200+50])
                                                  Pexp_ifthenelse
                                                  expression (lib/grammarFunctor.ml[579,15200+9]..[579,15200+19])
                                                    Pexp_apply
                                                    expression (lib/grammarFunctor.ml[579,15200+9]..[579,15200+12])
                                                      Pexp_ident "not" (lib/grammarFunctor.ml[579,15200+9]..[579,15200+12])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[579,15200+13]..[579,15200+19])
                                                          Pexp_apply
                                                          expression (lib/grammarFunctor.ml[579,15200+13]..[579,15200+14])
                                                            Pexp_ident "!" (lib/grammarFunctor.ml[579,15200+13]..[579,15200+14])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/grammarFunctor.ml[579,15200+14]..[579,15200+19])
                                                                Pexp_ident "first" (lib/grammarFunctor.ml[579,15200+14]..[579,15200+19])
                                                          ]
                                                    ]
                                                  expression (lib/grammarFunctor.ml[579,15200+25]..[579,15200+50])
                                                    Pexp_apply
                                                    expression (lib/grammarFunctor.ml[579,15200+25]..[579,15200+39])
                                                      Pexp_ident "Printf.bprintf" (lib/grammarFunctor.ml[579,15200+25]..[579,15200+39])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[579,15200+40]..[579,15200+46])
                                                          Pexp_ident "buffer" (lib/grammarFunctor.ml[579,15200+40]..[579,15200+46])
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[579,15200+47]..[579,15200+50])
                                                          Pexp_constant PConst_string(" ",(lib/grammarFunctor.ml[579,15200+48]..[579,15200+49]),None)
                                                    ]
                                                  None
                                                expression (lib/grammarFunctor.ml[580,15252+6]..[580,15252+20])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[580,15252+12]..[580,15252+14])
                                                    Pexp_ident ":=" (lib/grammarFunctor.ml[580,15252+12]..[580,15252+14])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[580,15252+6]..[580,15252+11])
                                                        Pexp_ident "first" (lib/grammarFunctor.ml[580,15252+6]..[580,15252+11])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[580,15252+15]..[580,15252+20])
                                                        Pexp_construct "false" (lib/grammarFunctor.ml[580,15252+15]..[580,15252+20])
                                                        None
                                                  ]
                                        ]
                                        expression (lib/grammarFunctor.ml[582,15280+4]..[594,15594+5])
                                          Pexp_sequence
                                          expression (lib/grammarFunctor.ml[582,15280+4]..[591,15521+8])
                                            Pexp_for Up
                                            pattern (lib/grammarFunctor.ml[582,15280+8]..[582,15280+9])
                                              Ppat_var "i" (lib/grammarFunctor.ml[582,15280+8]..[582,15280+9])
                                            expression (lib/grammarFunctor.ml[582,15280+12]..[582,15280+18])
                                              Pexp_ident "offset" (lib/grammarFunctor.ml[582,15280+12]..[582,15280+18])
                                            expression (lib/grammarFunctor.ml[582,15280+22]..[582,15280+28])
                                              Pexp_ident "length" (lib/grammarFunctor.ml[582,15280+22]..[582,15280+28])
                                            expression (lib/grammarFunctor.ml[583,15312+6]..[590,15511+9])
                                              Pexp_sequence
                                              expression (lib/grammarFunctor.ml[583,15312+6]..[586,15394+9])
                                                Pexp_ifthenelse
                                                expression (lib/grammarFunctor.ml[583,15312+9]..[583,15312+16])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[583,15312+11]..[583,15312+12])
                                                    Pexp_ident "=" (lib/grammarFunctor.ml[583,15312+11]..[583,15312+12])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[583,15312+9]..[583,15312+10])
                                                        Pexp_ident "i" (lib/grammarFunctor.ml[583,15312+9]..[583,15312+10])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[583,15312+13]..[583,15312+16])
                                                        Pexp_ident "dot" (lib/grammarFunctor.ml[583,15312+13]..[583,15312+16])
                                                  ]
                                                expression (lib/grammarFunctor.ml[583,15312+22]..[586,15394+9])
                                                  Pexp_sequence
                                                  expression (lib/grammarFunctor.ml[584,15340+8]..[584,15340+18])
                                                    Pexp_apply
                                                    expression (lib/grammarFunctor.ml[584,15340+8]..[584,15340+16])
                                                      Pexp_ident "separate" (lib/grammarFunctor.ml[584,15340+8]..[584,15340+16])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[584,15340+16]..[584,15340+18])
                                                          Pexp_construct "()" (lib/grammarFunctor.ml[584,15340+16]..[584,15340+18])
                                                          None
                                                    ]
                                                  expression (lib/grammarFunctor.ml[585,15360+8]..[585,15360+33])
                                                    Pexp_apply
                                                    expression (lib/grammarFunctor.ml[585,15360+8]..[585,15360+22])
                                                      Pexp_ident "Printf.bprintf" (lib/grammarFunctor.ml[585,15360+8]..[585,15360+22])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[585,15360+23]..[585,15360+29])
                                                          Pexp_ident "buffer" (lib/grammarFunctor.ml[585,15360+23]..[585,15360+29])
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[585,15360+30]..[585,15360+33])
                                                          Pexp_constant PConst_string(".",(lib/grammarFunctor.ml[585,15360+31]..[585,15360+32]),None)
                                                    ]
                                                None
                                              expression (lib/grammarFunctor.ml[587,15405+6]..[590,15511+9])
                                                Pexp_ifthenelse
                                                expression (lib/grammarFunctor.ml[587,15405+9]..[587,15405+19])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[587,15405+11]..[587,15405+12])
                                                    Pexp_ident "<" (lib/grammarFunctor.ml[587,15405+11]..[587,15405+12])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[587,15405+9]..[587,15405+10])
                                                        Pexp_ident "i" (lib/grammarFunctor.ml[587,15405+9]..[587,15405+10])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[587,15405+13]..[587,15405+19])
                                                        Pexp_ident "length" (lib/grammarFunctor.ml[587,15405+13]..[587,15405+19])
                                                  ]
                                                expression (lib/grammarFunctor.ml[587,15405+25]..[590,15511+9])
                                                  Pexp_sequence
                                                  expression (lib/grammarFunctor.ml[588,15436+8]..[588,15436+18])
                                                    Pexp_apply
                                                    expression (lib/grammarFunctor.ml[588,15436+8]..[588,15436+16])
                                                      Pexp_ident "separate" (lib/grammarFunctor.ml[588,15436+8]..[588,15436+16])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[588,15436+16]..[588,15436+18])
                                                          Pexp_construct "()" (lib/grammarFunctor.ml[588,15436+16]..[588,15436+18])
                                                          None
                                                    ]
                                                  expression (lib/grammarFunctor.ml[589,15456+8]..[589,15456+54])
                                                    Pexp_apply
                                                    expression (lib/grammarFunctor.ml[589,15456+8]..[589,15456+22])
                                                      Pexp_ident "Printf.bprintf" (lib/grammarFunctor.ml[589,15456+8]..[589,15456+22])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[589,15456+23]..[589,15456+29])
                                                          Pexp_ident "buffer" (lib/grammarFunctor.ml[589,15456+23]..[589,15456+29])
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[589,15456+30]..[589,15456+34])
                                                          Pexp_constant PConst_string("%s",(lib/grammarFunctor.ml[589,15456+31]..[589,15456+33]),None)
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[589,15456+35]..[589,15456+54])
                                                          Pexp_apply
                                                          expression (lib/grammarFunctor.ml[589,15456+36]..[589,15456+41])
                                                            Pexp_ident "print" (lib/grammarFunctor.ml[589,15456+36]..[589,15456+41])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/grammarFunctor.ml[589,15456+42]..[589,15456+53])
                                                                Pexp_apply
                                                                expression (lib/grammarFunctor.ml[589,15456+42]..[589,15456+53]) ghost
                                                                  Pexp_ident "Array.get" (lib/grammarFunctor.ml[589,15456+42]..[589,15456+53]) ghost
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lib/grammarFunctor.ml[589,15456+42]..[589,15456+49])
                                                                      Pexp_ident "symbols" (lib/grammarFunctor.ml[589,15456+42]..[589,15456+49])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lib/grammarFunctor.ml[589,15456+51]..[589,15456+52])
                                                                      Pexp_ident "i" (lib/grammarFunctor.ml[589,15456+51]..[589,15456+52])
                                                                ]
                                                          ]
                                                    ]
                                                None
                                          expression (lib/grammarFunctor.ml[592,15531+4]..[594,15594+5])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lib/grammarFunctor.ml[592,15531+8]..[592,15531+9])
                                                  Ppat_var "s" (lib/grammarFunctor.ml[592,15531+8]..[592,15531+9])
                                                expression (lib/grammarFunctor.ml[592,15531+12]..[592,15531+34])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[592,15531+12]..[592,15531+27])
                                                    Pexp_ident "Buffer.contents" (lib/grammarFunctor.ml[592,15531+12]..[592,15531+27])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[592,15531+28]..[592,15531+34])
                                                        Pexp_ident "buffer" (lib/grammarFunctor.ml[592,15531+28]..[592,15531+34])
                                                  ]
                                            ]
                                            expression (lib/grammarFunctor.ml[593,15569+4]..[594,15594+5])
                                              Pexp_sequence
                                              expression (lib/grammarFunctor.ml[593,15569+4]..[593,15569+23])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[593,15569+4]..[593,15569+16])
                                                  Pexp_ident "Buffer.clear" (lib/grammarFunctor.ml[593,15569+4]..[593,15569+16])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[593,15569+17]..[593,15569+23])
                                                      Pexp_ident "buffer" (lib/grammarFunctor.ml[593,15569+17]..[593,15569+23])
                                                ]
                                              expression (lib/grammarFunctor.ml[594,15594+4]..[594,15594+5])
                                                Pexp_ident "s" (lib/grammarFunctor.ml[594,15594+4]..[594,15594+5])
                        ]
                      structure_item (lib/grammarFunctor.ml[596,15601+2]..[597,15632+32])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[596,15601+6]..[596,15601+13])
                              Ppat_var "printao" (lib/grammarFunctor.ml[596,15601+6]..[596,15601+13])
                            expression (lib/grammarFunctor.ml[596,15601+14]..[597,15632+32]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[596,15601+14]..[596,15601+20])
                                Ppat_var "offset" (lib/grammarFunctor.ml[596,15601+14]..[596,15601+20])
                              expression (lib/grammarFunctor.ml[596,15601+21]..[597,15632+32]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[596,15601+21]..[596,15601+28])
                                  Ppat_var "symbols" (lib/grammarFunctor.ml[596,15601+21]..[596,15601+28])
                                expression (lib/grammarFunctor.ml[597,15632+4]..[597,15632+32])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[597,15632+4]..[597,15632+12])
                                    Pexp_ident "printaod" (lib/grammarFunctor.ml[597,15632+4]..[597,15632+12])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[597,15632+13]..[597,15632+19])
                                        Pexp_ident "offset" (lib/grammarFunctor.ml[597,15632+13]..[597,15632+19])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[597,15632+20]..[597,15632+24])
                                        Pexp_constant PConst_int (-1,None)
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[597,15632+25]..[597,15632+32])
                                        Pexp_ident "symbols" (lib/grammarFunctor.ml[597,15632+25]..[597,15632+32])
                                  ]
                        ]
                      structure_item (lib/grammarFunctor.ml[599,15666+2]..[600,15689+21])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[599,15666+6]..[599,15666+12])
                              Ppat_var "printa" (lib/grammarFunctor.ml[599,15666+6]..[599,15666+12])
                            expression (lib/grammarFunctor.ml[599,15666+13]..[600,15689+21]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[599,15666+13]..[599,15666+20])
                                Ppat_var "symbols" (lib/grammarFunctor.ml[599,15666+13]..[599,15666+20])
                              expression (lib/grammarFunctor.ml[600,15689+4]..[600,15689+21])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[600,15689+4]..[600,15689+11])
                                  Pexp_ident "printao" (lib/grammarFunctor.ml[600,15689+4]..[600,15689+11])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[600,15689+12]..[600,15689+13])
                                      Pexp_constant PConst_int (0,None)
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[600,15689+14]..[600,15689+21])
                                      Pexp_ident "symbols" (lib/grammarFunctor.ml[600,15689+14]..[600,15689+21])
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[602,15712+2]..[603,15735+34])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[602,15712+6]..[602,15712+12])
                              Ppat_var "printl" (lib/grammarFunctor.ml[602,15712+6]..[602,15712+12])
                            expression (lib/grammarFunctor.ml[602,15712+13]..[603,15735+34]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[602,15712+13]..[602,15712+20])
                                Ppat_var "symbols" (lib/grammarFunctor.ml[602,15712+13]..[602,15712+20])
                              expression (lib/grammarFunctor.ml[603,15735+4]..[603,15735+34])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[603,15735+4]..[603,15735+10])
                                  Pexp_ident "printa" (lib/grammarFunctor.ml[603,15735+4]..[603,15735+10])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[603,15735+11]..[603,15735+34])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[603,15735+12]..[603,15735+25])
                                        Pexp_ident "Array.of_list" (lib/grammarFunctor.ml[603,15735+12]..[603,15735+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[603,15735+26]..[603,15735+33])
                                            Pexp_ident "symbols" (lib/grammarFunctor.ml[603,15735+26]..[603,15735+33])
                                      ]
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[605,15771+2]..[612,15922+20])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[605,15771+6]..[605,15771+12])
                              Ppat_var "lookup" (lib/grammarFunctor.ml[605,15771+6]..[605,15771+12])
                            expression (lib/grammarFunctor.ml[605,15771+13]..[612,15922+20]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[605,15771+13]..[605,15771+17])
                                Ppat_var "name" (lib/grammarFunctor.ml[605,15771+13]..[605,15771+17])
                              expression (lib/grammarFunctor.ml[606,15791+4]..[612,15922+20])
                                Pexp_try
                                expression (lib/grammarFunctor.ml[607,15799+6]..[607,15799+30])
                                  Pexp_construct "T" (lib/grammarFunctor.ml[607,15799+6]..[607,15799+7])
                                  Some
                                    expression (lib/grammarFunctor.ml[607,15799+8]..[607,15799+30])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[607,15799+9]..[607,15799+24])
                                        Pexp_ident "Terminal.lookup" (lib/grammarFunctor.ml[607,15799+9]..[607,15799+24])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[607,15799+25]..[607,15799+29])
                                            Pexp_ident "name" (lib/grammarFunctor.ml[607,15799+25]..[607,15799+29])
                                      ]
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[608,15830+9]..[608,15830+18])
                                      Ppat_construct "Not_found" (lib/grammarFunctor.ml[608,15830+9]..[608,15830+18])
                                      None
                                    expression (lib/grammarFunctor.ml[609,15852+6]..[612,15922+20])
                                      Pexp_try
                                      expression (lib/grammarFunctor.ml[610,15862+8]..[610,15862+35])
                                        Pexp_construct "N" (lib/grammarFunctor.ml[610,15862+8]..[610,15862+9])
                                        Some
                                          expression (lib/grammarFunctor.ml[610,15862+10]..[610,15862+35])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[610,15862+11]..[610,15862+29])
                                              Pexp_ident "Nonterminal.lookup" (lib/grammarFunctor.ml[610,15862+11]..[610,15862+29])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[610,15862+30]..[610,15862+34])
                                                  Pexp_ident "name" (lib/grammarFunctor.ml[610,15862+30]..[610,15862+34])
                                            ]
                                      [
                                        <case>
                                          pattern (lib/grammarFunctor.ml[611,15898+11]..[611,15898+20])
                                            Ppat_construct "Not_found" (lib/grammarFunctor.ml[611,15898+11]..[611,15898+20])
                                            None
                                          expression (lib/grammarFunctor.ml[612,15922+8]..[612,15922+20])
                                            Pexp_assert
                                            expression (lib/grammarFunctor.ml[612,15922+15]..[612,15922+20])
                                              Pexp_construct "false" (lib/grammarFunctor.ml[612,15922+15]..[612,15922+20])
                                              None
                                      ]
                                ]
                        ]
                    ]
              structure_item (lib/grammarFunctor.ml[618,16028+0]..[640,16385+3])
                Pstr_module
                "SymbolSet" (lib/grammarFunctor.ml[618,16028+7]..[618,16028+16])
                  module_expr (lib/grammarFunctor.ml[618,16028+19]..[640,16385+3])
                    Pmod_structure
                    [
                      structure_item (lib/grammarFunctor.ml[620,16055+2]..[620,16055+26])
                        Pstr_include                        module_expr (lib/grammarFunctor.ml[620,16055+10]..[620,16055+26])
                          Pmod_apply
                          module_expr (lib/grammarFunctor.ml[620,16055+10]..[620,16055+18])
                            Pmod_ident "Set.Make" (lib/grammarFunctor.ml[620,16055+10]..[620,16055+18])
                          module_expr (lib/grammarFunctor.ml[620,16055+19]..[620,16055+25])
                            Pmod_ident "Symbol" (lib/grammarFunctor.ml[620,16055+19]..[620,16055+25])
                      structure_item (lib/grammarFunctor.ml[622,16083+2]..[623,16105+36])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[622,16083+6]..[622,16083+11])
                              Ppat_var "print" (lib/grammarFunctor.ml[622,16083+6]..[622,16083+11])
                            expression (lib/grammarFunctor.ml[622,16083+12]..[623,16105+36]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[622,16083+12]..[622,16083+19])
                                Ppat_var "symbols" (lib/grammarFunctor.ml[622,16083+12]..[622,16083+19])
                              expression (lib/grammarFunctor.ml[623,16105+4]..[623,16105+36])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[623,16105+4]..[623,16105+17])
                                  Pexp_ident "Symbol.printl" (lib/grammarFunctor.ml[623,16105+4]..[623,16105+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[623,16105+18]..[623,16105+36])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[623,16105+19]..[623,16105+27])
                                        Pexp_ident "elements" (lib/grammarFunctor.ml[623,16105+19]..[623,16105+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[623,16105+28]..[623,16105+35])
                                            Pexp_ident "symbols" (lib/grammarFunctor.ml[623,16105+28]..[623,16105+35])
                                      ]
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[628,16286+2]..[629,16304+5])
                        Pstr_type Rec
                        [
                          type_declaration "property" (lib/grammarFunctor.ml[628,16286+7]..[628,16286+15]) (lib/grammarFunctor.ml[628,16286+2]..[629,16304+5])
                            ptype_params =
                              []
                            ptype_cstrs =
                              []
                            ptype_kind =
                              Ptype_abstract
                            ptype_private = Public
                            ptype_manifest =
                              Some
                                core_type (lib/grammarFunctor.ml[629,16304+4]..[629,16304+5])
                                  Ptyp_constr "t" (lib/grammarFunctor.ml[629,16304+4]..[629,16304+5])
                                  []
                        ]
                      structure_item (lib/grammarFunctor.ml[631,16311+2]..[632,16326+9])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[631,16311+6]..[631,16311+12])
                              Ppat_var "bottom" (lib/grammarFunctor.ml[631,16311+6]..[631,16311+12])
                            expression (lib/grammarFunctor.ml[632,16326+4]..[632,16326+9])
                              Pexp_ident "empty" (lib/grammarFunctor.ml[632,16326+4]..[632,16326+9])
                        ]
                      structure_item (lib/grammarFunctor.ml[634,16337+2]..[635,16349+10])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[634,16337+6]..[634,16337+9])
                              Ppat_var "leq" (lib/grammarFunctor.ml[634,16337+6]..[634,16337+9])
                            expression (lib/grammarFunctor.ml[635,16349+4]..[635,16349+10])
                              Pexp_ident "subset" (lib/grammarFunctor.ml[635,16349+4]..[635,16349+10])
                        ]
                      structure_item (lib/grammarFunctor.ml[637,16361+2]..[638,16374+9])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[637,16361+6]..[637,16361+10])
                              Ppat_var "join" (lib/grammarFunctor.ml[637,16361+6]..[637,16361+10])
                            expression (lib/grammarFunctor.ml[638,16374+4]..[638,16374+9])
                              Pexp_ident "union" (lib/grammarFunctor.ml[638,16374+4]..[638,16374+9])
                        ]
                    ]
              structure_item (lib/grammarFunctor.ml[644,16416+0]..[663,16756+3])
                Pstr_module
                "SymbolMap" (lib/grammarFunctor.ml[644,16416+7]..[644,16416+16])
                  module_expr (lib/grammarFunctor.ml[644,16416+19]..[663,16756+3])
                    Pmod_structure
                    [
                      structure_item (lib/grammarFunctor.ml[646,16443+2]..[646,16443+26])
                        Pstr_include                        module_expr (lib/grammarFunctor.ml[646,16443+10]..[646,16443+26])
                          Pmod_apply
                          module_expr (lib/grammarFunctor.ml[646,16443+10]..[646,16443+18])
                            Pmod_ident "Map.Make" (lib/grammarFunctor.ml[646,16443+10]..[646,16443+18])
                          module_expr (lib/grammarFunctor.ml[646,16443+19]..[646,16443+25])
                            Pmod_ident "Symbol" (lib/grammarFunctor.ml[646,16443+19]..[646,16443+25])
                      structure_item (lib/grammarFunctor.ml[648,16471+2]..[651,16540+10])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[648,16471+6]..[648,16471+12])
                              Ppat_var "domain" (lib/grammarFunctor.ml[648,16471+6]..[648,16471+12])
                            expression (lib/grammarFunctor.ml[648,16471+13]..[651,16540+10]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[648,16471+13]..[648,16471+14])
                                Ppat_var "m" (lib/grammarFunctor.ml[648,16471+13]..[648,16471+14])
                              expression (lib/grammarFunctor.ml[649,16488+4]..[651,16540+10])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[649,16488+4]..[649,16488+8])
                                  Pexp_ident "fold" (lib/grammarFunctor.ml[649,16488+4]..[649,16488+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[649,16488+9]..[651,16540+5])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lib/grammarFunctor.ml[649,16488+14]..[649,16488+20])
                                        Ppat_var "symbol" (lib/grammarFunctor.ml[649,16488+14]..[649,16488+20])
                                      expression (lib/grammarFunctor.ml[649,16488+21]..[650,16519+20]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lib/grammarFunctor.ml[649,16488+21]..[649,16488+22])
                                          Ppat_any
                                        expression (lib/grammarFunctor.ml[649,16488+23]..[650,16519+20]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (lib/grammarFunctor.ml[649,16488+23]..[649,16488+27])
                                            Ppat_var "accu" (lib/grammarFunctor.ml[649,16488+23]..[649,16488+27])
                                          expression (lib/grammarFunctor.ml[650,16519+6]..[650,16519+20])
                                            Pexp_construct "::" (lib/grammarFunctor.ml[650,16519+13]..[650,16519+15])
                                            Some
                                              expression (lib/grammarFunctor.ml[650,16519+6]..[650,16519+20]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (lib/grammarFunctor.ml[650,16519+6]..[650,16519+12])
                                                    Pexp_ident "symbol" (lib/grammarFunctor.ml[650,16519+6]..[650,16519+12])
                                                  expression (lib/grammarFunctor.ml[650,16519+16]..[650,16519+20])
                                                    Pexp_ident "accu" (lib/grammarFunctor.ml[650,16519+16]..[650,16519+20])
                                                ]
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[651,16540+6]..[651,16540+7])
                                      Pexp_ident "m" (lib/grammarFunctor.ml[651,16540+6]..[651,16540+7])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[651,16540+8]..[651,16540+10])
                                      Pexp_construct "[]" (lib/grammarFunctor.ml[651,16540+8]..[651,16540+10])
                                      None
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[653,16552+2]..[656,16627+14])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[653,16552+6]..[653,16552+10])
                              Ppat_var "init" (lib/grammarFunctor.ml[653,16552+6]..[653,16552+10])
                            expression (lib/grammarFunctor.ml[653,16552+11]..[656,16627+14]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[653,16552+11]..[653,16552+12])
                                Ppat_var "f" (lib/grammarFunctor.ml[653,16552+11]..[653,16552+12])
                              expression (lib/grammarFunctor.ml[653,16552+13]..[656,16627+14]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[653,16552+13]..[653,16552+15])
                                  Ppat_var "xs" (lib/grammarFunctor.ml[653,16552+13]..[653,16552+15])
                                expression (lib/grammarFunctor.ml[654,16570+4]..[656,16627+14])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[654,16570+4]..[654,16570+18])
                                    Pexp_ident "List.fold_left" (lib/grammarFunctor.ml[654,16570+4]..[654,16570+18])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[654,16570+19]..[656,16627+5])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lib/grammarFunctor.ml[654,16570+24]..[654,16570+28])
                                          Ppat_var "accu" (lib/grammarFunctor.ml[654,16570+24]..[654,16570+28])
                                        expression (lib/grammarFunctor.ml[654,16570+29]..[655,16604+22]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (lib/grammarFunctor.ml[654,16570+29]..[654,16570+30])
                                            Ppat_var "x" (lib/grammarFunctor.ml[654,16570+29]..[654,16570+30])
                                          expression (lib/grammarFunctor.ml[655,16604+6]..[655,16604+22])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[655,16604+6]..[655,16604+9])
                                              Pexp_ident "add" (lib/grammarFunctor.ml[655,16604+6]..[655,16604+9])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[655,16604+10]..[655,16604+11])
                                                  Pexp_ident "x" (lib/grammarFunctor.ml[655,16604+10]..[655,16604+11])
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[655,16604+12]..[655,16604+17])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[655,16604+13]..[655,16604+14])
                                                    Pexp_ident "f" (lib/grammarFunctor.ml[655,16604+13]..[655,16604+14])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[655,16604+15]..[655,16604+16])
                                                        Pexp_ident "x" (lib/grammarFunctor.ml[655,16604+15]..[655,16604+16])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[655,16604+18]..[655,16604+22])
                                                  Pexp_ident "accu" (lib/grammarFunctor.ml[655,16604+18]..[655,16604+22])
                                            ]
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[656,16627+6]..[656,16627+11])
                                        Pexp_ident "empty" (lib/grammarFunctor.ml[656,16627+6]..[656,16627+11])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[656,16627+12]..[656,16627+14])
                                        Pexp_ident "xs" (lib/grammarFunctor.ml[656,16627+12]..[656,16627+14])
                                  ]
                        ]
                      structure_item (lib/grammarFunctor.ml[658,16643+2]..[661,16742+12])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[658,16643+6]..[658,16643+23])
                              Ppat_var "purelynonterminal" (lib/grammarFunctor.ml[658,16643+6]..[658,16643+23])
                            expression (lib/grammarFunctor.ml[658,16643+24]..[661,16742+12]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[658,16643+24]..[658,16643+25])
                                Ppat_var "m" (lib/grammarFunctor.ml[658,16643+24]..[658,16643+25])
                              expression (lib/grammarFunctor.ml[659,16671+4]..[661,16742+12])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[659,16671+4]..[659,16671+8])
                                  Pexp_ident "fold" (lib/grammarFunctor.ml[659,16671+4]..[659,16671+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[659,16671+9]..[661,16742+5])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lib/grammarFunctor.ml[659,16671+14]..[659,16671+20])
                                        Ppat_var "symbol" (lib/grammarFunctor.ml[659,16671+14]..[659,16671+20])
                                      expression (lib/grammarFunctor.ml[659,16671+21]..[660,16702+39]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lib/grammarFunctor.ml[659,16671+21]..[659,16671+22])
                                          Ppat_any
                                        expression (lib/grammarFunctor.ml[659,16671+23]..[660,16702+39]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (lib/grammarFunctor.ml[659,16671+23]..[659,16671+27])
                                            Ppat_var "accu" (lib/grammarFunctor.ml[659,16671+23]..[659,16671+27])
                                          expression (lib/grammarFunctor.ml[660,16702+6]..[660,16702+39])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[660,16702+11]..[660,16702+13])
                                              Pexp_ident "&&" (lib/grammarFunctor.ml[660,16702+11]..[660,16702+13])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[660,16702+6]..[660,16702+10])
                                                  Pexp_ident "accu" (lib/grammarFunctor.ml[660,16702+6]..[660,16702+10])
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[660,16702+14]..[660,16702+39])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[660,16702+14]..[660,16702+32])
                                                    Pexp_ident "Symbol.nonterminal" (lib/grammarFunctor.ml[660,16702+14]..[660,16702+32])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[660,16702+33]..[660,16702+39])
                                                        Pexp_ident "symbol" (lib/grammarFunctor.ml[660,16702+33]..[660,16702+39])
                                                  ]
                                            ]
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[661,16742+6]..[661,16742+7])
                                      Pexp_ident "m" (lib/grammarFunctor.ml[661,16742+6]..[661,16742+7])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[661,16742+8]..[661,16742+12])
                                      Pexp_construct "true" (lib/grammarFunctor.ml[661,16742+8]..[661,16742+12])
                                      None
                                ]
                        ]
                    ]
              structure_item (lib/grammarFunctor.ml[668,16860+0]..[1006,26734+3])
                Pstr_module
                "Production" (lib/grammarFunctor.ml[668,16860+7]..[668,16860+17])
                  module_expr (lib/grammarFunctor.ml[668,16860+20]..[1006,26734+3])
                    Pmod_structure
                    [
                      structure_item (lib/grammarFunctor.ml[670,16888+2]..[671,16903+9])
                        Pstr_type Rec
                        [
                          type_declaration "index" (lib/grammarFunctor.ml[670,16888+7]..[670,16888+12]) (lib/grammarFunctor.ml[670,16888+2]..[671,16903+9])
                            ptype_params =
                              []
                            ptype_cstrs =
                              []
                            ptype_kind =
                              Ptype_abstract
                            ptype_private = Public
                            ptype_manifest =
                              Some
                                core_type (lib/grammarFunctor.ml[671,16903+6]..[671,16903+9])
                                  Ptyp_constr "int" (lib/grammarFunctor.ml[671,16903+6]..[671,16903+9])
                                  []
                        ]
                      structure_item (lib/grammarFunctor.ml[673,16914+2]..[674,16930+7])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[673,16914+6]..[673,16914+13])
                              Ppat_var "compare" (lib/grammarFunctor.ml[673,16914+6]..[673,16914+13])
                            expression (lib/grammarFunctor.ml[674,16930+4]..[674,16930+7])
                              Pexp_ident "-" (lib/grammarFunctor.ml[674,16930+4]..[674,16930+7])
                        ]
                      structure_item (lib/grammarFunctor.ml[682,17146+2]..[688,17398+48])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[682,17146+6]..[682,17146+7])
                              Ppat_var "n" (lib/grammarFunctor.ml[682,17146+6]..[682,17146+7])
                            core_type (lib/grammarFunctor.ml[682,17146+10]..[682,17146+13])
                              Ptyp_constr "int" (lib/grammarFunctor.ml[682,17146+10]..[682,17146+13])
                              []
                            expression (lib/grammarFunctor.ml[683,17162+4]..[688,17398+48])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/grammarFunctor.ml[683,17162+8]..[683,17162+9])
                                    Ppat_var "n" (lib/grammarFunctor.ml[683,17162+8]..[683,17162+9])
                                  expression (lib/grammarFunctor.ml[683,17162+12]..[685,17259+21])
                                    Pexp_apply
                                    expression (lib/grammarFunctor.ml[683,17162+12]..[683,17162+26])
                                      Pexp_ident "StringMap.fold" (lib/grammarFunctor.ml[683,17162+12]..[683,17162+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[683,17162+27]..[685,17259+5])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (lib/grammarFunctor.ml[683,17162+32]..[683,17162+33])
                                            Ppat_any
                                          expression (lib/grammarFunctor.ml[683,17162+34]..[684,17228+30]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (lib/grammarFunctor.ml[683,17162+34]..[683,17162+60])
                                              Ppat_record Open
                                              [
                                                "branches" (lib/grammarFunctor.ml[683,17162+36]..[683,17162+44])
                                                  pattern (lib/grammarFunctor.ml[683,17162+47]..[683,17162+55])
                                                    Ppat_var "branches" (lib/grammarFunctor.ml[683,17162+47]..[683,17162+55])
                                              ]
                                            expression (lib/grammarFunctor.ml[683,17162+61]..[684,17228+30]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (lib/grammarFunctor.ml[683,17162+61]..[683,17162+62])
                                                Ppat_var "n" (lib/grammarFunctor.ml[683,17162+61]..[683,17162+62])
                                              expression (lib/grammarFunctor.ml[684,17228+6]..[684,17228+30])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[684,17228+8]..[684,17228+9])
                                                  Pexp_ident "+" (lib/grammarFunctor.ml[684,17228+8]..[684,17228+9])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[684,17228+6]..[684,17228+7])
                                                      Pexp_ident "n" (lib/grammarFunctor.ml[684,17228+6]..[684,17228+7])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[684,17228+10]..[684,17228+30])
                                                      Pexp_apply
                                                      expression (lib/grammarFunctor.ml[684,17228+10]..[684,17228+21])
                                                        Pexp_ident "List.length" (lib/grammarFunctor.ml[684,17228+10]..[684,17228+21])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/grammarFunctor.ml[684,17228+22]..[684,17228+30])
                                                            Pexp_ident "branches" (lib/grammarFunctor.ml[684,17228+22]..[684,17228+30])
                                                      ]
                                                ]
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[685,17259+6]..[685,17259+19])
                                          Pexp_field
                                          expression (lib/grammarFunctor.ml[685,17259+6]..[685,17259+13])
                                            Pexp_ident "grammar" (lib/grammarFunctor.ml[685,17259+6]..[685,17259+13])
                                          "rules" (lib/grammarFunctor.ml[685,17259+14]..[685,17259+19])
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[685,17259+20]..[685,17259+21])
                                          Pexp_constant PConst_int (0,None)
                                    ]
                              ]
                              expression (lib/grammarFunctor.ml[688,17398+4]..[688,17398+48])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[688,17398+6]..[688,17398+7])
                                  Pexp_ident "+" (lib/grammarFunctor.ml[688,17398+6]..[688,17398+7])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[688,17398+4]..[688,17398+5])
                                      Pexp_ident "n" (lib/grammarFunctor.ml[688,17398+4]..[688,17398+5])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[688,17398+8]..[688,17398+48])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[688,17398+8]..[688,17398+26])
                                        Pexp_ident "StringSet.cardinal" (lib/grammarFunctor.ml[688,17398+8]..[688,17398+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[688,17398+27]..[688,17398+48])
                                            Pexp_field
                                            expression (lib/grammarFunctor.ml[688,17398+27]..[688,17398+34])
                                              Pexp_ident "grammar" (lib/grammarFunctor.ml[688,17398+27]..[688,17398+34])
                                            "start_symbols" (lib/grammarFunctor.ml[688,17398+35]..[688,17398+48])
                                      ]
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[690,17448+2]..[691,17465+8])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[690,17448+6]..[690,17448+9])
                              Ppat_var "p2i" (lib/grammarFunctor.ml[690,17448+6]..[690,17448+9])
                            expression (lib/grammarFunctor.ml[690,17448+10]..[691,17465+8]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[690,17448+10]..[690,17448+14])
                                Ppat_var "prod" (lib/grammarFunctor.ml[690,17448+10]..[690,17448+14])
                              expression (lib/grammarFunctor.ml[691,17465+4]..[691,17465+8])
                                Pexp_ident "prod" (lib/grammarFunctor.ml[691,17465+4]..[691,17465+8])
                        ]
                      structure_item (lib/grammarFunctor.ml[693,17475+2]..[695,17528+8])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[693,17475+6]..[693,17475+9])
                              Ppat_var "i2p" (lib/grammarFunctor.ml[693,17475+6]..[693,17475+9])
                            expression (lib/grammarFunctor.ml[693,17475+10]..[695,17528+8]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[693,17475+10]..[693,17475+14])
                                Ppat_var "prod" (lib/grammarFunctor.ml[693,17475+10]..[693,17475+14])
                              expression (lib/grammarFunctor.ml[694,17492+4]..[695,17528+8])
                                Pexp_sequence
                                expression (lib/grammarFunctor.ml[694,17492+4]..[694,17492+34])
                                  Pexp_assert
                                  expression (lib/grammarFunctor.ml[694,17492+11]..[694,17492+34])
                                    Pexp_apply
                                    expression (lib/grammarFunctor.ml[694,17492+22]..[694,17492+24])
                                      Pexp_ident "&&" (lib/grammarFunctor.ml[694,17492+22]..[694,17492+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[694,17492+12]..[694,17492+21])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[694,17492+17]..[694,17492+19])
                                            Pexp_ident ">=" (lib/grammarFunctor.ml[694,17492+17]..[694,17492+19])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[694,17492+12]..[694,17492+16])
                                                Pexp_ident "prod" (lib/grammarFunctor.ml[694,17492+12]..[694,17492+16])
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[694,17492+20]..[694,17492+21])
                                                Pexp_constant PConst_int (0,None)
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[694,17492+25]..[694,17492+33])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[694,17492+30]..[694,17492+31])
                                            Pexp_ident "<" (lib/grammarFunctor.ml[694,17492+30]..[694,17492+31])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[694,17492+25]..[694,17492+29])
                                                Pexp_ident "prod" (lib/grammarFunctor.ml[694,17492+25]..[694,17492+29])
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[694,17492+32]..[694,17492+33])
                                                Pexp_ident "n" (lib/grammarFunctor.ml[694,17492+32]..[694,17492+33])
                                          ]
                                    ]
                                expression (lib/grammarFunctor.ml[695,17528+4]..[695,17528+8])
                                  Pexp_ident "prod" (lib/grammarFunctor.ml[695,17528+4]..[695,17528+8])
                        ]
                      structure_item (lib/grammarFunctor.ml[711,18397+2]..[712,18452+27])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[711,18397+6]..[711,18397+11])
                              Ppat_var "table" (lib/grammarFunctor.ml[711,18397+6]..[711,18397+11])
                            core_type (lib/grammarFunctor.ml[711,18397+14]..[711,18397+52])
                              Ptyp_constr "array" (lib/grammarFunctor.ml[711,18397+47]..[711,18397+52])
                              [
                                core_type (lib/grammarFunctor.ml[711,18397+15]..[711,18397+45])
                                  Ptyp_tuple
                                  [
                                    core_type (lib/grammarFunctor.ml[711,18397+15]..[711,18397+28])
                                      Ptyp_constr "Nonterminal.t" (lib/grammarFunctor.ml[711,18397+15]..[711,18397+28])
                                      []
                                    core_type (lib/grammarFunctor.ml[711,18397+31]..[711,18397+45])
                                      Ptyp_constr "array" (lib/grammarFunctor.ml[711,18397+40]..[711,18397+45])
                                      [
                                        core_type (lib/grammarFunctor.ml[711,18397+31]..[711,18397+39])
                                          Ptyp_constr "Symbol.t" (lib/grammarFunctor.ml[711,18397+31]..[711,18397+39])
                                          []
                                      ]
                                  ]
                              ]
                            expression (lib/grammarFunctor.ml[712,18452+4]..[712,18452+27])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[712,18452+4]..[712,18452+14])
                                Pexp_ident "Array.make" (lib/grammarFunctor.ml[712,18452+4]..[712,18452+14])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[712,18452+15]..[712,18452+16])
                                    Pexp_ident "n" (lib/grammarFunctor.ml[712,18452+15]..[712,18452+16])
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[712,18452+17]..[712,18452+27])
                                    Pexp_tuple
                                    [
                                      expression (lib/grammarFunctor.ml[712,18452+18]..[712,18452+20])
                                        Pexp_constant PConst_int (-1,None)
                                      expression (lib/grammarFunctor.ml[712,18452+22]..[712,18452+26])
                                        Pexp_array
                                        []
                                    ]
                              ]
                        ]
                      structure_item (lib/grammarFunctor.ml[714,18481+2]..[715,18526+21])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[714,18481+6]..[714,18481+17])
                              Ppat_var "identifiers" (lib/grammarFunctor.ml[714,18481+6]..[714,18481+17])
                            core_type (lib/grammarFunctor.ml[714,18481+20]..[714,18481+42])
                              Ptyp_constr "array" (lib/grammarFunctor.ml[714,18481+37]..[714,18481+42])
                              [
                                core_type (lib/grammarFunctor.ml[714,18481+20]..[714,18481+36])
                                  Ptyp_constr "array" (lib/grammarFunctor.ml[714,18481+31]..[714,18481+36])
                                  [
                                    core_type (lib/grammarFunctor.ml[714,18481+20]..[714,18481+30])
                                      Ptyp_constr "identifier" (lib/grammarFunctor.ml[714,18481+20]..[714,18481+30])
                                      []
                                  ]
                              ]
                            expression (lib/grammarFunctor.ml[715,18526+4]..[715,18526+21])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[715,18526+4]..[715,18526+14])
                                Pexp_ident "Array.make" (lib/grammarFunctor.ml[715,18526+4]..[715,18526+14])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[715,18526+15]..[715,18526+16])
                                    Pexp_ident "n" (lib/grammarFunctor.ml[715,18526+15]..[715,18526+16])
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[715,18526+17]..[715,18526+21])
                                    Pexp_array
                                    []
                              ]
                        ]
                      structure_item (lib/grammarFunctor.ml[717,18549+2]..[718,18587+21])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[717,18549+6]..[717,18549+13])
                              Ppat_var "actions" (lib/grammarFunctor.ml[717,18549+6]..[717,18549+13])
                            core_type (lib/grammarFunctor.ml[717,18549+16]..[717,18549+35])
                              Ptyp_constr "array" (lib/grammarFunctor.ml[717,18549+30]..[717,18549+35])
                              [
                                core_type (lib/grammarFunctor.ml[717,18549+16]..[717,18549+29])
                                  Ptyp_constr "option" (lib/grammarFunctor.ml[717,18549+23]..[717,18549+29])
                                  [
                                    core_type (lib/grammarFunctor.ml[717,18549+16]..[717,18549+22])
                                      Ptyp_constr "action" (lib/grammarFunctor.ml[717,18549+16]..[717,18549+22])
                                      []
                                  ]
                              ]
                            expression (lib/grammarFunctor.ml[718,18587+4]..[718,18587+21])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[718,18587+4]..[718,18587+14])
                                Pexp_ident "Array.make" (lib/grammarFunctor.ml[718,18587+4]..[718,18587+14])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[718,18587+15]..[718,18587+16])
                                    Pexp_ident "n" (lib/grammarFunctor.ml[718,18587+15]..[718,18587+16])
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[718,18587+17]..[718,18587+21])
                                    Pexp_construct "None" (lib/grammarFunctor.ml[718,18587+17]..[718,18587+21])
                                    None
                              ]
                        ]
                      structure_item (lib/grammarFunctor.ml[720,18610+2]..[721,18653+19])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[720,18610+6]..[720,18610+15])
                              Ppat_var "positions" (lib/grammarFunctor.ml[720,18610+6]..[720,18610+15])
                            core_type (lib/grammarFunctor.ml[720,18610+18]..[720,18610+40])
                              Ptyp_constr "array" (lib/grammarFunctor.ml[720,18610+35]..[720,18610+40])
                              [
                                core_type (lib/grammarFunctor.ml[720,18610+18]..[720,18610+34])
                                  Ptyp_constr "list" (lib/grammarFunctor.ml[720,18610+30]..[720,18610+34])
                                  [
                                    core_type (lib/grammarFunctor.ml[720,18610+18]..[720,18610+29])
                                      Ptyp_constr "Positions.t" (lib/grammarFunctor.ml[720,18610+18]..[720,18610+29])
                                      []
                                  ]
                              ]
                            expression (lib/grammarFunctor.ml[721,18653+4]..[721,18653+19])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[721,18653+4]..[721,18653+14])
                                Pexp_ident "Array.make" (lib/grammarFunctor.ml[721,18653+4]..[721,18653+14])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[721,18653+15]..[721,18653+16])
                                    Pexp_ident "n" (lib/grammarFunctor.ml[721,18653+15]..[721,18653+16])
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[721,18653+17]..[721,18653+19])
                                    Pexp_construct "[]" (lib/grammarFunctor.ml[721,18653+17]..[721,18653+19])
                                    None
                              ]
                        ]
                      structure_item (lib/grammarFunctor.ml[723,18674+2]..[724,18729+21])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[723,18674+6]..[723,18674+20])
                              Ppat_var "rhs_attributes" (lib/grammarFunctor.ml[723,18674+6]..[723,18674+20])
                            core_type (lib/grammarFunctor.ml[723,18674+23]..[723,18674+52])
                              Ptyp_constr "array" (lib/grammarFunctor.ml[723,18674+47]..[723,18674+52])
                              [
                                core_type (lib/grammarFunctor.ml[723,18674+23]..[723,18674+46])
                                  Ptyp_constr "array" (lib/grammarFunctor.ml[723,18674+41]..[723,18674+46])
                                  [
                                    core_type (lib/grammarFunctor.ml[723,18674+23]..[723,18674+40])
                                      Ptyp_constr "Syntax.attributes" (lib/grammarFunctor.ml[723,18674+23]..[723,18674+40])
                                      []
                                  ]
                              ]
                            expression (lib/grammarFunctor.ml[724,18729+4]..[724,18729+21])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[724,18729+4]..[724,18729+14])
                                Pexp_ident "Array.make" (lib/grammarFunctor.ml[724,18729+4]..[724,18729+14])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[724,18729+15]..[724,18729+16])
                                    Pexp_ident "n" (lib/grammarFunctor.ml[724,18729+15]..[724,18729+16])
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[724,18729+17]..[724,18729+21])
                                    Pexp_array
                                    []
                              ]
                        ]
                      structure_item (lib/grammarFunctor.ml[726,18752+2]..[727,18800+21])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[726,18752+6]..[726,18752+15])
                              Ppat_var "prec_decl" (lib/grammarFunctor.ml[726,18752+6]..[726,18752+15])
                            core_type (lib/grammarFunctor.ml[726,18752+18]..[726,18752+45])
                              Ptyp_constr "array" (lib/grammarFunctor.ml[726,18752+40]..[726,18752+45])
                              [
                                core_type (lib/grammarFunctor.ml[726,18752+18]..[726,18752+39])
                                  Ptyp_constr "option" (lib/grammarFunctor.ml[726,18752+33]..[726,18752+39])
                                  [
                                    core_type (lib/grammarFunctor.ml[726,18752+18]..[726,18752+32])
                                      Ptyp_constr "located" (lib/grammarFunctor.ml[726,18752+25]..[726,18752+32])
                                      [
                                        core_type (lib/grammarFunctor.ml[726,18752+18]..[726,18752+24])
                                          Ptyp_constr "symbol" (lib/grammarFunctor.ml[726,18752+18]..[726,18752+24])
                                          []
                                      ]
                                  ]
                              ]
                            expression (lib/grammarFunctor.ml[727,18800+4]..[727,18800+21])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[727,18800+4]..[727,18800+14])
                                Pexp_ident "Array.make" (lib/grammarFunctor.ml[727,18800+4]..[727,18800+14])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[727,18800+15]..[727,18800+16])
                                    Pexp_ident "n" (lib/grammarFunctor.ml[727,18800+15]..[727,18800+16])
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[727,18800+17]..[727,18800+21])
                                    Pexp_construct "None" (lib/grammarFunctor.ml[727,18800+17]..[727,18800+21])
                                    None
                              ]
                        ]
                      structure_item (lib/grammarFunctor.ml[729,18823+2]..[734,19159+22])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[729,18823+6]..[729,18823+22])
                              Ppat_var "production_level" (lib/grammarFunctor.ml[729,18823+6]..[729,18823+22])
                            core_type (lib/grammarFunctor.ml[729,18823+25]..[729,18823+54])
                              Ptyp_constr "array" (lib/grammarFunctor.ml[729,18823+49]..[729,18823+54])
                              [
                                core_type (lib/grammarFunctor.ml[729,18823+25]..[729,18823+48])
                                  Ptyp_constr "branch_production_level" (lib/grammarFunctor.ml[729,18823+25]..[729,18823+48])
                                  []
                              ]
                            expression (lib/grammarFunctor.ml[733,19090+4]..[734,19159+22])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/grammarFunctor.ml[733,19090+8]..[733,19090+13])
                                    Ppat_var "dummy" (lib/grammarFunctor.ml[733,19090+8]..[733,19090+13])
                                  expression (lib/grammarFunctor.ml[733,19090+16]..[733,19090+65])
                                    Pexp_construct "ProductionLevel" (lib/grammarFunctor.ml[733,19090+16]..[733,19090+31])
                                    Some
                                      expression (lib/grammarFunctor.ml[733,19090+32]..[733,19090+65])
                                        Pexp_tuple
                                        [
                                          expression (lib/grammarFunctor.ml[733,19090+33]..[733,19090+61])
                                            Pexp_ident "InputFile.builtin_input_file" (lib/grammarFunctor.ml[733,19090+33]..[733,19090+61])
                                          expression (lib/grammarFunctor.ml[733,19090+63]..[733,19090+64])
                                            Pexp_constant PConst_int (0,None)
                                        ]
                              ]
                              expression (lib/grammarFunctor.ml[734,19159+4]..[734,19159+22])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[734,19159+4]..[734,19159+14])
                                  Pexp_ident "Array.make" (lib/grammarFunctor.ml[734,19159+4]..[734,19159+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[734,19159+15]..[734,19159+16])
                                      Pexp_ident "n" (lib/grammarFunctor.ml[734,19159+15]..[734,19159+16])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[734,19159+17]..[734,19159+22])
                                      Pexp_ident "dummy" (lib/grammarFunctor.ml[734,19159+17]..[734,19159+22])
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[738,19264+2]..[739,19300+37])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[738,19264+6]..[738,19264+13])
                              Ppat_var "ntprods" (lib/grammarFunctor.ml[738,19264+6]..[738,19264+13])
                            core_type (lib/grammarFunctor.ml[738,19264+16]..[738,19264+33])
                              Ptyp_constr "array" (lib/grammarFunctor.ml[738,19264+28]..[738,19264+33])
                              [
                                core_type (lib/grammarFunctor.ml[738,19264+17]..[738,19264+26])
                                  Ptyp_tuple
                                  [
                                    core_type (lib/grammarFunctor.ml[738,19264+17]..[738,19264+20])
                                      Ptyp_constr "int" (lib/grammarFunctor.ml[738,19264+17]..[738,19264+20])
                                      []
                                    core_type (lib/grammarFunctor.ml[738,19264+23]..[738,19264+26])
                                      Ptyp_constr "int" (lib/grammarFunctor.ml[738,19264+23]..[738,19264+26])
                                      []
                                  ]
                              ]
                            expression (lib/grammarFunctor.ml[739,19300+4]..[739,19300+37])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[739,19300+4]..[739,19300+14])
                                Pexp_ident "Array.make" (lib/grammarFunctor.ml[739,19300+4]..[739,19300+14])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[739,19300+15]..[739,19300+28])
                                    Pexp_ident "Nonterminal.n" (lib/grammarFunctor.ml[739,19300+15]..[739,19300+28])
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[739,19300+29]..[739,19300+37])
                                    Pexp_tuple
                                    [
                                      expression (lib/grammarFunctor.ml[739,19300+30]..[739,19300+32])
                                        Pexp_constant PConst_int (-1,None)
                                      expression (lib/grammarFunctor.ml[739,19300+34]..[739,19300+36])
                                        Pexp_constant PConst_int (-1,None)
                                    ]
                              ]
                        ]
                      structure_item (lib/grammarFunctor.ml[743,19418+2]..[744,19451+13])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[743,19418+6]..[743,19418+30])
                              Ppat_var "grammar_uses_error_token" (lib/grammarFunctor.ml[743,19418+6]..[743,19418+30])
                            expression (lib/grammarFunctor.ml[744,19451+4]..[744,19451+13])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[744,19451+4]..[744,19451+7])
                                Pexp_ident "ref" (lib/grammarFunctor.ml[744,19451+4]..[744,19451+7])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[744,19451+8]..[744,19451+13])
                                    Pexp_construct "false" (lib/grammarFunctor.ml[744,19451+8]..[744,19451+13])
                                    None
                              ]
                        ]
                      structure_item (lib/grammarFunctor.ml[751,19755+2]..[762,20197+53])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[751,19755+6]..[752,19776+43])
                              Ppat_tuple
                              [
                                pattern (lib/grammarFunctor.ml[751,19755+6]..[751,19755+19])
                                  Ppat_constraint
                                  pattern (lib/grammarFunctor.ml[751,19755+7]..[751,19755+12])
                                    Ppat_var "start" (lib/grammarFunctor.ml[751,19755+7]..[751,19755+12])
                                  core_type (lib/grammarFunctor.ml[751,19755+15]..[751,19755+18])
                                    Ptyp_constr "int" (lib/grammarFunctor.ml[751,19755+15]..[751,19755+18])
                                    []
                                pattern (lib/grammarFunctor.ml[752,19776+6]..[752,19776+43])
                                  Ppat_constraint
                                  pattern (lib/grammarFunctor.ml[752,19776+7]..[752,19776+17])
                                    Ppat_var "startprods" (lib/grammarFunctor.ml[752,19776+7]..[752,19776+17])
                                  core_type (lib/grammarFunctor.ml[752,19776+20]..[752,19776+42])
                                    Ptyp_constr "NonterminalMap.t" (lib/grammarFunctor.ml[752,19776+26]..[752,19776+42])
                                    [
                                      core_type (lib/grammarFunctor.ml[752,19776+20]..[752,19776+25])
                                        Ptyp_constr "index" (lib/grammarFunctor.ml[752,19776+20]..[752,19776+25])
                                        []
                                    ]
                              ]
                            expression (lib/grammarFunctor.ml[753,19822+4]..[762,20197+53])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[753,19822+4]..[753,19822+18])
                                Pexp_ident "StringSet.fold" (lib/grammarFunctor.ml[753,19822+4]..[753,19822+18])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[753,19822+19]..[762,20197+5])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lib/grammarFunctor.ml[753,19822+24]..[753,19822+35])
                                      Ppat_var "nonterminal" (lib/grammarFunctor.ml[753,19822+24]..[753,19822+35])
                                    expression (lib/grammarFunctor.ml[753,19822+36]..[761,20156+40]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lib/grammarFunctor.ml[753,19822+36]..[753,19822+51])
                                        Ppat_tuple
                                        [
                                          pattern (lib/grammarFunctor.ml[753,19822+37]..[753,19822+38])
                                            Ppat_var "k" (lib/grammarFunctor.ml[753,19822+37]..[753,19822+38])
                                          pattern (lib/grammarFunctor.ml[753,19822+40]..[753,19822+50])
                                            Ppat_var "startprods" (lib/grammarFunctor.ml[753,19822+40]..[753,19822+50])
                                        ]
                                      expression (lib/grammarFunctor.ml[754,19877+6]..[761,20156+40])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/grammarFunctor.ml[754,19877+10]..[754,19877+12])
                                              Ppat_var "nt" (lib/grammarFunctor.ml[754,19877+10]..[754,19877+12])
                                            expression (lib/grammarFunctor.ml[754,19877+15]..[754,19877+45])
                                              Pexp_apply
                                              expression (lib/grammarFunctor.ml[754,19877+15]..[754,19877+33])
                                                Pexp_ident "Nonterminal.lookup" (lib/grammarFunctor.ml[754,19877+15]..[754,19877+33])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[754,19877+34]..[754,19877+45])
                                                    Pexp_ident "nonterminal" (lib/grammarFunctor.ml[754,19877+34]..[754,19877+45])
                                              ]
                                          <def>
                                            pattern (lib/grammarFunctor.ml[755,19923+10]..[755,19923+13])
                                              Ppat_var "nt'" (lib/grammarFunctor.ml[755,19923+10]..[755,19923+13])
                                            expression (lib/grammarFunctor.ml[755,19923+16]..[755,19923+54])
                                              Pexp_apply
                                              expression (lib/grammarFunctor.ml[755,19923+16]..[755,19923+34])
                                                Pexp_ident "Nonterminal.lookup" (lib/grammarFunctor.ml[755,19923+16]..[755,19923+34])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[755,19923+35]..[755,19923+54])
                                                    Pexp_apply
                                                    expression (lib/grammarFunctor.ml[755,19923+48]..[755,19923+49])
                                                      Pexp_ident "^" (lib/grammarFunctor.ml[755,19923+48]..[755,19923+49])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[755,19923+36]..[755,19923+47])
                                                          Pexp_ident "nonterminal" (lib/grammarFunctor.ml[755,19923+36]..[755,19923+47])
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[755,19923+50]..[755,19923+53])
                                                          Pexp_constant PConst_string("'",(lib/grammarFunctor.ml[755,19923+51]..[755,19923+52]),None)
                                                    ]
                                              ]
                                        ]
                                        expression (lib/grammarFunctor.ml[756,19981+6]..[761,20156+40])
                                          Pexp_sequence
                                          expression (lib/grammarFunctor.ml[756,19981+6]..[756,19981+43])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[756,19981+6]..[756,19981+43]) ghost
                                              Pexp_ident "Array.set" (lib/grammarFunctor.ml[756,19981+6]..[756,19981+43]) ghost
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[756,19981+6]..[756,19981+11])
                                                  Pexp_ident "table" (lib/grammarFunctor.ml[756,19981+6]..[756,19981+11])
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[756,19981+13]..[756,19981+14])
                                                  Pexp_ident "k" (lib/grammarFunctor.ml[756,19981+13]..[756,19981+14])
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[756,19981+19]..[756,19981+43])
                                                  Pexp_tuple
                                                  [
                                                    expression (lib/grammarFunctor.ml[756,19981+20]..[756,19981+23])
                                                      Pexp_ident "nt'" (lib/grammarFunctor.ml[756,19981+20]..[756,19981+23])
                                                    expression (lib/grammarFunctor.ml[756,19981+25]..[756,19981+42])
                                                      Pexp_array
                                                      [
                                                        expression (lib/grammarFunctor.ml[756,19981+28]..[756,19981+39])
                                                          Pexp_construct "Symbol.N" (lib/grammarFunctor.ml[756,19981+28]..[756,19981+36])
                                                          Some
                                                            expression (lib/grammarFunctor.ml[756,19981+37]..[756,19981+39])
                                                              Pexp_ident "nt" (lib/grammarFunctor.ml[756,19981+37]..[756,19981+39])
                                                      ]
                                                  ]
                                            ]
                                          expression (lib/grammarFunctor.ml[757,20026+6]..[761,20156+40])
                                            Pexp_sequence
                                            expression (lib/grammarFunctor.ml[757,20026+6]..[757,20026+35])
                                              Pexp_apply
                                              expression (lib/grammarFunctor.ml[757,20026+6]..[757,20026+35]) ghost
                                                Pexp_ident "Array.set" (lib/grammarFunctor.ml[757,20026+6]..[757,20026+35]) ghost
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[757,20026+6]..[757,20026+17])
                                                    Pexp_ident "identifiers" (lib/grammarFunctor.ml[757,20026+6]..[757,20026+17])
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[757,20026+19]..[757,20026+20])
                                                    Pexp_ident "k" (lib/grammarFunctor.ml[757,20026+19]..[757,20026+20])
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[757,20026+25]..[757,20026+35])
                                                    Pexp_array
                                                    [
                                                      expression (lib/grammarFunctor.ml[757,20026+28]..[757,20026+32])
                                                        Pexp_constant PConst_string("_1",(lib/grammarFunctor.ml[757,20026+29]..[757,20026+31]),None)
                                                    ]
                                              ]
                                            expression (lib/grammarFunctor.ml[758,20063+6]..[761,20156+40])
                                              Pexp_sequence
                                              expression (lib/grammarFunctor.ml[758,20063+6]..[758,20063+31])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[758,20063+6]..[758,20063+31]) ghost
                                                  Pexp_ident "Array.set" (lib/grammarFunctor.ml[758,20063+6]..[758,20063+31]) ghost
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[758,20063+6]..[758,20063+13])
                                                      Pexp_ident "ntprods" (lib/grammarFunctor.ml[758,20063+6]..[758,20063+13])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[758,20063+15]..[758,20063+18])
                                                      Pexp_ident "nt'" (lib/grammarFunctor.ml[758,20063+15]..[758,20063+18])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[758,20063+23]..[758,20063+31])
                                                      Pexp_tuple
                                                      [
                                                        expression (lib/grammarFunctor.ml[758,20063+24]..[758,20063+25])
                                                          Pexp_ident "k" (lib/grammarFunctor.ml[758,20063+24]..[758,20063+25])
                                                        expression (lib/grammarFunctor.ml[758,20063+27]..[758,20063+30])
                                                          Pexp_apply
                                                          expression (lib/grammarFunctor.ml[758,20063+28]..[758,20063+29])
                                                            Pexp_ident "+" (lib/grammarFunctor.ml[758,20063+28]..[758,20063+29])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/grammarFunctor.ml[758,20063+27]..[758,20063+28])
                                                                Pexp_ident "k" (lib/grammarFunctor.ml[758,20063+27]..[758,20063+28])
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/grammarFunctor.ml[758,20063+29]..[758,20063+30])
                                                                Pexp_constant PConst_int (1,None)
                                                          ]
                                                      ]
                                                ]
                                              expression (lib/grammarFunctor.ml[759,20096+6]..[761,20156+40])
                                                Pexp_sequence
                                                expression (lib/grammarFunctor.ml[759,20096+6]..[759,20096+47])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[759,20096+6]..[759,20096+47]) ghost
                                                    Pexp_ident "Array.set" (lib/grammarFunctor.ml[759,20096+6]..[759,20096+47]) ghost
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[759,20096+6]..[759,20096+15])
                                                        Pexp_ident "positions" (lib/grammarFunctor.ml[759,20096+6]..[759,20096+15])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[759,20096+17]..[759,20096+18])
                                                        Pexp_ident "k" (lib/grammarFunctor.ml[759,20096+17]..[759,20096+18])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[759,20096+23]..[759,20096+47])
                                                        Pexp_apply
                                                        expression (lib/grammarFunctor.ml[759,20096+23]..[759,20096+44])
                                                          Pexp_ident "Nonterminal.positions" (lib/grammarFunctor.ml[759,20096+23]..[759,20096+44])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/grammarFunctor.ml[759,20096+45]..[759,20096+47])
                                                              Pexp_ident "nt" (lib/grammarFunctor.ml[759,20096+45]..[759,20096+47])
                                                        ]
                                                  ]
                                                expression (lib/grammarFunctor.ml[760,20145+6]..[761,20156+40])
                                                  Pexp_tuple
                                                  [
                                                    expression (lib/grammarFunctor.ml[760,20145+6]..[760,20145+9])
                                                      Pexp_apply
                                                      expression (lib/grammarFunctor.ml[760,20145+7]..[760,20145+8])
                                                        Pexp_ident "+" (lib/grammarFunctor.ml[760,20145+7]..[760,20145+8])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/grammarFunctor.ml[760,20145+6]..[760,20145+7])
                                                            Pexp_ident "k" (lib/grammarFunctor.ml[760,20145+6]..[760,20145+7])
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/grammarFunctor.ml[760,20145+8]..[760,20145+9])
                                                            Pexp_constant PConst_int (1,None)
                                                      ]
                                                    expression (lib/grammarFunctor.ml[761,20156+6]..[761,20156+40])
                                                      Pexp_apply
                                                      expression (lib/grammarFunctor.ml[761,20156+6]..[761,20156+24])
                                                        Pexp_ident "NonterminalMap.add" (lib/grammarFunctor.ml[761,20156+6]..[761,20156+24])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/grammarFunctor.ml[761,20156+25]..[761,20156+27])
                                                            Pexp_ident "nt" (lib/grammarFunctor.ml[761,20156+25]..[761,20156+27])
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/grammarFunctor.ml[761,20156+28]..[761,20156+29])
                                                            Pexp_ident "k" (lib/grammarFunctor.ml[761,20156+28]..[761,20156+29])
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/grammarFunctor.ml[761,20156+30]..[761,20156+40])
                                                            Pexp_ident "startprods" (lib/grammarFunctor.ml[761,20156+30]..[761,20156+40])
                                                      ]
                                                  ]
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[762,20197+6]..[762,20197+27])
                                    Pexp_field
                                    expression (lib/grammarFunctor.ml[762,20197+6]..[762,20197+13])
                                      Pexp_ident "grammar" (lib/grammarFunctor.ml[762,20197+6]..[762,20197+13])
                                    "start_symbols" (lib/grammarFunctor.ml[762,20197+14]..[762,20197+27])
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[762,20197+28]..[762,20197+53])
                                    Pexp_tuple
                                    [
                                      expression (lib/grammarFunctor.ml[762,20197+29]..[762,20197+30])
                                        Pexp_constant PConst_int (0,None)
                                      expression (lib/grammarFunctor.ml[762,20197+32]..[762,20197+52])
                                        Pexp_ident "NonterminalMap.empty" (lib/grammarFunctor.ml[762,20197+32]..[762,20197+52])
                                    ]
                              ]
                        ]
                      structure_item (lib/grammarFunctor.ml[766,20324+2]..[767,20357+44])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[766,20324+6]..[766,20324+21])
                              Ppat_var "producer_symbol" (lib/grammarFunctor.ml[766,20324+6]..[766,20324+21])
                            expression (lib/grammarFunctor.ml[766,20324+22]..[767,20357+44]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[766,20324+22]..[766,20324+30])
                                Ppat_var "producer" (lib/grammarFunctor.ml[766,20324+22]..[766,20324+30])
                              expression (lib/grammarFunctor.ml[767,20357+4]..[767,20357+44])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[767,20357+4]..[767,20357+17])
                                  Pexp_ident "Symbol.lookup" (lib/grammarFunctor.ml[767,20357+4]..[767,20357+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[767,20357+18]..[767,20357+44])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[767,20357+19]..[767,20357+34])
                                        Pexp_ident "producer_symbol" (lib/grammarFunctor.ml[767,20357+19]..[767,20357+34])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[767,20357+35]..[767,20357+43])
                                            Pexp_ident "producer" (lib/grammarFunctor.ml[767,20357+35]..[767,20357+43])
                                      ]
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[769,20403+2]..[787,21214+23])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[769,20403+7]..[769,20403+8])
                              Ppat_any
                            core_type (lib/grammarFunctor.ml[769,20403+11]..[769,20403+14])
                              Ptyp_constr "int" (lib/grammarFunctor.ml[769,20403+11]..[769,20403+14])
                              []
                            expression (lib/grammarFunctor.ml[769,20403+18]..[787,21214+23])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[769,20403+18]..[769,20403+32])
                                Pexp_ident "StringMap.fold" (lib/grammarFunctor.ml[769,20403+18]..[769,20403+32])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[769,20403+33]..[787,21214+3])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lib/grammarFunctor.ml[769,20403+38]..[769,20403+49])
                                      Ppat_var "nonterminal" (lib/grammarFunctor.ml[769,20403+38]..[769,20403+49])
                                    expression (lib/grammarFunctor.ml[769,20403+50]..[786,21207+6]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lib/grammarFunctor.ml[769,20403+50]..[769,20403+65])
                                        Ppat_record Open
                                        [
                                          "branches" (lib/grammarFunctor.ml[769,20403+52]..[769,20403+60]) ghost
                                            pattern (lib/grammarFunctor.ml[769,20403+52]..[769,20403+60])
                                              Ppat_var "branches" (lib/grammarFunctor.ml[769,20403+52]..[769,20403+60])
                                        ]
                                      expression (lib/grammarFunctor.ml[769,20403+66]..[786,21207+6]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lib/grammarFunctor.ml[769,20403+66]..[769,20403+67])
                                          Ppat_var "k" (lib/grammarFunctor.ml[769,20403+66]..[769,20403+67])
                                        expression (lib/grammarFunctor.ml[770,20474+4]..[786,21207+6])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/grammarFunctor.ml[770,20474+8]..[770,20474+10])
                                                Ppat_var "nt" (lib/grammarFunctor.ml[770,20474+8]..[770,20474+10])
                                              expression (lib/grammarFunctor.ml[770,20474+13]..[770,20474+43])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[770,20474+13]..[770,20474+31])
                                                  Pexp_ident "Nonterminal.lookup" (lib/grammarFunctor.ml[770,20474+13]..[770,20474+31])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[770,20474+32]..[770,20474+43])
                                                      Pexp_ident "nonterminal" (lib/grammarFunctor.ml[770,20474+32]..[770,20474+43])
                                                ]
                                          ]
                                          expression (lib/grammarFunctor.ml[771,20521+4]..[786,21207+6])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lib/grammarFunctor.ml[771,20521+8]..[771,20521+10])
                                                  Ppat_var "k'" (lib/grammarFunctor.ml[771,20521+8]..[771,20521+10])
                                                expression (lib/grammarFunctor.ml[771,20521+13]..[784,21158+16])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[771,20521+13]..[771,20521+27])
                                                    Pexp_ident "List.fold_left" (lib/grammarFunctor.ml[771,20521+13]..[771,20521+27])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[771,20521+28]..[784,21158+5])
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (lib/grammarFunctor.ml[771,20521+33]..[771,20521+34])
                                                          Ppat_var "k" (lib/grammarFunctor.ml[771,20521+33]..[771,20521+34])
                                                        expression (lib/grammarFunctor.ml[771,20521+35]..[783,21148+9]) ghost
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (lib/grammarFunctor.ml[771,20521+35]..[771,20521+41])
                                                            Ppat_var "branch" (lib/grammarFunctor.ml[771,20521+35]..[771,20521+41])
                                                          expression (lib/grammarFunctor.ml[772,20566+6]..[783,21148+9])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (lib/grammarFunctor.ml[772,20566+10]..[772,20566+19])
                                                                  Ppat_var "producers" (lib/grammarFunctor.ml[772,20566+10]..[772,20566+19])
                                                                expression (lib/grammarFunctor.ml[772,20566+22]..[772,20566+52])
                                                                  Pexp_apply
                                                                  expression (lib/grammarFunctor.ml[772,20566+22]..[772,20566+35])
                                                                    Pexp_ident "Array.of_list" (lib/grammarFunctor.ml[772,20566+22]..[772,20566+35])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lib/grammarFunctor.ml[772,20566+36]..[772,20566+52])
Pexp_field
expression (lib/grammarFunctor.ml[772,20566+36]..[772,20566+42])
  Pexp_ident "branch" (lib/grammarFunctor.ml[772,20566+36]..[772,20566+42])
"producers" (lib/grammarFunctor.ml[772,20566+43]..[772,20566+52])
                                                                  ]
                                                            ]
                                                            expression (lib/grammarFunctor.ml[773,20622+6]..[783,21148+9])
                                                              Pexp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (lib/grammarFunctor.ml[773,20622+10]..[773,20622+13])
                                                                    Ppat_var "rhs" (lib/grammarFunctor.ml[773,20622+10]..[773,20622+13])
                                                                  expression (lib/grammarFunctor.ml[773,20622+16]..[773,20622+51])
                                                                    Pexp_apply
                                                                    expression (lib/grammarFunctor.ml[773,20622+16]..[773,20622+25])
                                                                      Pexp_ident "Array.map" (lib/grammarFunctor.ml[773,20622+16]..[773,20622+25])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (lib/grammarFunctor.ml[773,20622+26]..[773,20622+41])
  Pexp_ident "producer_symbol" (lib/grammarFunctor.ml[773,20622+26]..[773,20622+41])
                                                                      <arg>
                                                                      Nolabel
expression (lib/grammarFunctor.ml[773,20622+42]..[773,20622+51])
  Pexp_ident "producers" (lib/grammarFunctor.ml[773,20622+42]..[773,20622+51])
                                                                    ]
                                                              ]
                                                              expression (lib/grammarFunctor.ml[774,20677+6]..[783,21148+9])
                                                                Pexp_sequence
                                                                expression (lib/grammarFunctor.ml[774,20677+6]..[774,20677+28])
                                                                  Pexp_apply
                                                                  expression (lib/grammarFunctor.ml[774,20677+6]..[774,20677+28]) ghost
                                                                    Pexp_ident "Array.set" (lib/grammarFunctor.ml[774,20677+6]..[774,20677+28]) ghost
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lib/grammarFunctor.ml[774,20677+6]..[774,20677+11])
Pexp_ident "table" (lib/grammarFunctor.ml[774,20677+6]..[774,20677+11])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lib/grammarFunctor.ml[774,20677+13]..[774,20677+14])
Pexp_ident "k" (lib/grammarFunctor.ml[774,20677+13]..[774,20677+14])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lib/grammarFunctor.ml[774,20677+19]..[774,20677+28])
Pexp_tuple
[
  expression (lib/grammarFunctor.ml[774,20677+20]..[774,20677+22])
    Pexp_ident "nt" (lib/grammarFunctor.ml[774,20677+20]..[774,20677+22])
  expression (lib/grammarFunctor.ml[774,20677+24]..[774,20677+27])
    Pexp_ident "rhs" (lib/grammarFunctor.ml[774,20677+24]..[774,20677+27])
]
                                                                  ]
                                                                expression (lib/grammarFunctor.ml[775,20707+6]..[783,21148+9])
                                                                  Pexp_sequence
                                                                  expression (lib/grammarFunctor.ml[775,20707+6]..[775,20707+64])
                                                                    Pexp_apply
                                                                    expression (lib/grammarFunctor.ml[775,20707+6]..[775,20707+64]) ghost
                                                                      Pexp_ident "Array.set" (lib/grammarFunctor.ml[775,20707+6]..[775,20707+64]) ghost
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (lib/grammarFunctor.ml[775,20707+6]..[775,20707+17])
  Pexp_ident "identifiers" (lib/grammarFunctor.ml[775,20707+6]..[775,20707+17])
                                                                      <arg>
                                                                      Nolabel
expression (lib/grammarFunctor.ml[775,20707+19]..[775,20707+20])
  Pexp_ident "k" (lib/grammarFunctor.ml[775,20707+19]..[775,20707+20])
                                                                      <arg>
                                                                      Nolabel
expression (lib/grammarFunctor.ml[775,20707+25]..[775,20707+64])
  Pexp_apply
  expression (lib/grammarFunctor.ml[775,20707+25]..[775,20707+34])
    Pexp_ident "Array.map" (lib/grammarFunctor.ml[775,20707+25]..[775,20707+34])
  [
    <arg>
    Nolabel
      expression (lib/grammarFunctor.ml[775,20707+35]..[775,20707+54])
        Pexp_ident "producer_identifier" (lib/grammarFunctor.ml[775,20707+35]..[775,20707+54])
    <arg>
    Nolabel
      expression (lib/grammarFunctor.ml[775,20707+55]..[775,20707+64])
        Pexp_ident "producers" (lib/grammarFunctor.ml[775,20707+55]..[775,20707+64])
  ]
                                                                    ]
                                                                  expression (lib/grammarFunctor.ml[776,20773+6]..[783,21148+9])
                                                                    Pexp_sequence
                                                                    expression (lib/grammarFunctor.ml[776,20773+6]..[776,20773+39])
                                                                      Pexp_apply
                                                                      expression (lib/grammarFunctor.ml[776,20773+6]..[776,20773+39]) ghost
Pexp_ident "Array.set" (lib/grammarFunctor.ml[776,20773+6]..[776,20773+39]) ghost
                                                                      [
<arg>
Nolabel
  expression (lib/grammarFunctor.ml[776,20773+6]..[776,20773+13])
    Pexp_ident "actions" (lib/grammarFunctor.ml[776,20773+6]..[776,20773+13])
<arg>
Nolabel
  expression (lib/grammarFunctor.ml[776,20773+15]..[776,20773+16])
    Pexp_ident "k" (lib/grammarFunctor.ml[776,20773+15]..[776,20773+16])
<arg>
Nolabel
  expression (lib/grammarFunctor.ml[776,20773+21]..[776,20773+39])
    Pexp_construct "Some" (lib/grammarFunctor.ml[776,20773+21]..[776,20773+25])
    Some
      expression (lib/grammarFunctor.ml[776,20773+26]..[776,20773+39])
        Pexp_field
        expression (lib/grammarFunctor.ml[776,20773+26]..[776,20773+32])
          Pexp_ident "branch" (lib/grammarFunctor.ml[776,20773+26]..[776,20773+32])
        "action" (lib/grammarFunctor.ml[776,20773+33]..[776,20773+39])
                                                                      ]
                                                                    expression (lib/grammarFunctor.ml[777,20814+6]..[783,21148+9])
                                                                      Pexp_sequence
                                                                      expression (lib/grammarFunctor.ml[777,20814+6]..[777,20814+67])
Pexp_apply
expression (lib/grammarFunctor.ml[777,20814+6]..[777,20814+67]) ghost
  Pexp_ident "Array.set" (lib/grammarFunctor.ml[777,20814+6]..[777,20814+67]) ghost
[
  <arg>
  Nolabel
    expression (lib/grammarFunctor.ml[777,20814+6]..[777,20814+20])
      Pexp_ident "rhs_attributes" (lib/grammarFunctor.ml[777,20814+6]..[777,20814+20])
  <arg>
  Nolabel
    expression (lib/grammarFunctor.ml[777,20814+22]..[777,20814+23])
      Pexp_ident "k" (lib/grammarFunctor.ml[777,20814+22]..[777,20814+23])
  <arg>
  Nolabel
    expression (lib/grammarFunctor.ml[777,20814+28]..[777,20814+67])
      Pexp_apply
      expression (lib/grammarFunctor.ml[777,20814+28]..[777,20814+37])
        Pexp_ident "Array.map" (lib/grammarFunctor.ml[777,20814+28]..[777,20814+37])
      [
        <arg>
        Nolabel
          expression (lib/grammarFunctor.ml[777,20814+38]..[777,20814+57])
            Pexp_ident "producer_attributes" (lib/grammarFunctor.ml[777,20814+38]..[777,20814+57])
        <arg>
        Nolabel
          expression (lib/grammarFunctor.ml[777,20814+58]..[777,20814+67])
            Pexp_ident "producers" (lib/grammarFunctor.ml[777,20814+58]..[777,20814+67])
      ]
]
                                                                      expression (lib/grammarFunctor.ml[778,20883+6]..[783,21148+9])
Pexp_sequence
expression (lib/grammarFunctor.ml[778,20883+6]..[778,20883+60])
  Pexp_apply
  expression (lib/grammarFunctor.ml[778,20883+6]..[778,20883+60]) ghost
    Pexp_ident "Array.set" (lib/grammarFunctor.ml[778,20883+6]..[778,20883+60]) ghost
  [
    <arg>
    Nolabel
      expression (lib/grammarFunctor.ml[778,20883+6]..[778,20883+22])
        Pexp_ident "production_level" (lib/grammarFunctor.ml[778,20883+6]..[778,20883+22])
    <arg>
    Nolabel
      expression (lib/grammarFunctor.ml[778,20883+24]..[778,20883+25])
        Pexp_ident "k" (lib/grammarFunctor.ml[778,20883+24]..[778,20883+25])
    <arg>
    Nolabel
      expression (lib/grammarFunctor.ml[778,20883+30]..[778,20883+60])
        Pexp_field
        expression (lib/grammarFunctor.ml[778,20883+30]..[778,20883+36])
          Pexp_ident "branch" (lib/grammarFunctor.ml[778,20883+30]..[778,20883+36])
        "branch_production_level" (lib/grammarFunctor.ml[778,20883+37]..[778,20883+60])
  ]
expression (lib/grammarFunctor.ml[779,20945+6]..[783,21148+9])
  Pexp_sequence
  expression (lib/grammarFunctor.ml[779,20945+6]..[779,20945+52])
    Pexp_apply
    expression (lib/grammarFunctor.ml[779,20945+6]..[779,20945+52]) ghost
      Pexp_ident "Array.set" (lib/grammarFunctor.ml[779,20945+6]..[779,20945+52]) ghost
    [
      <arg>
      Nolabel
        expression (lib/grammarFunctor.ml[779,20945+6]..[779,20945+15])
          Pexp_ident "prec_decl" (lib/grammarFunctor.ml[779,20945+6]..[779,20945+15])
      <arg>
      Nolabel
        expression (lib/grammarFunctor.ml[779,20945+17]..[779,20945+18])
          Pexp_ident "k" (lib/grammarFunctor.ml[779,20945+17]..[779,20945+18])
      <arg>
      Nolabel
        expression (lib/grammarFunctor.ml[779,20945+23]..[779,20945+52])
          Pexp_field
          expression (lib/grammarFunctor.ml[779,20945+23]..[779,20945+29])
            Pexp_ident "branch" (lib/grammarFunctor.ml[779,20945+23]..[779,20945+29])
          "branch_prec_annotation" (lib/grammarFunctor.ml[779,20945+30]..[779,20945+52])
    ]
  expression (lib/grammarFunctor.ml[780,20999+6]..[783,21148+9])
    Pexp_sequence
    expression (lib/grammarFunctor.ml[780,20999+6]..[780,20999+49])
      Pexp_apply
      expression (lib/grammarFunctor.ml[780,20999+6]..[780,20999+49]) ghost
        Pexp_ident "Array.set" (lib/grammarFunctor.ml[780,20999+6]..[780,20999+49]) ghost
      [
        <arg>
        Nolabel
          expression (lib/grammarFunctor.ml[780,20999+6]..[780,20999+15])
            Pexp_ident "positions" (lib/grammarFunctor.ml[780,20999+6]..[780,20999+15])
        <arg>
        Nolabel
          expression (lib/grammarFunctor.ml[780,20999+17]..[780,20999+18])
            Pexp_ident "k" (lib/grammarFunctor.ml[780,20999+17]..[780,20999+18])
        <arg>
        Nolabel
          expression (lib/grammarFunctor.ml[780,20999+23]..[780,20999+49])
            Pexp_construct "::" (lib/grammarFunctor.ml[780,20999+25]..[780,20999+49]) ghost
            Some
              expression (lib/grammarFunctor.ml[780,20999+25]..[780,20999+49]) ghost
                Pexp_tuple
                [
                  expression (lib/grammarFunctor.ml[780,20999+25]..[780,20999+47])
                    Pexp_field
                    expression (lib/grammarFunctor.ml[780,20999+25]..[780,20999+31])
                      Pexp_ident "branch" (lib/grammarFunctor.ml[780,20999+25]..[780,20999+31])
                    "branch_position" (lib/grammarFunctor.ml[780,20999+32]..[780,20999+47])
                  expression (lib/grammarFunctor.ml[780,20999+48]..[780,20999+49]) ghost
                    Pexp_construct "[]" (lib/grammarFunctor.ml[780,20999+48]..[780,20999+49]) ghost
                    None
                ]
      ]
    expression (lib/grammarFunctor.ml[781,21050+6]..[783,21148+9])
      Pexp_sequence
      expression (lib/grammarFunctor.ml[781,21050+6]..[782,21106+40])
        Pexp_ifthenelse
        expression (lib/grammarFunctor.ml[781,21050+9]..[781,21050+50])
          Pexp_apply
          expression (lib/grammarFunctor.ml[781,21050+9]..[781,21050+12])
            Pexp_ident "not" (lib/grammarFunctor.ml[781,21050+9]..[781,21050+12])
          [
            <arg>
            Nolabel
              expression (lib/grammarFunctor.ml[781,21050+13]..[781,21050+50])
                Pexp_apply
                expression (lib/grammarFunctor.ml[781,21050+14]..[781,21050+28])
                  Pexp_ident "MArray.for_all" (lib/grammarFunctor.ml[781,21050+14]..[781,21050+28])
                [
                  <arg>
                  Nolabel
                    expression (lib/grammarFunctor.ml[781,21050+29]..[781,21050+45])
                      Pexp_ident "Symbol.non_error" (lib/grammarFunctor.ml[781,21050+29]..[781,21050+45])
                  <arg>
                  Nolabel
                    expression (lib/grammarFunctor.ml[781,21050+46]..[781,21050+49])
                      Pexp_ident "rhs" (lib/grammarFunctor.ml[781,21050+46]..[781,21050+49])
                ]
          ]
        expression (lib/grammarFunctor.ml[782,21106+8]..[782,21106+40])
          Pexp_apply
          expression (lib/grammarFunctor.ml[782,21106+33]..[782,21106+35])
            Pexp_ident ":=" (lib/grammarFunctor.ml[782,21106+33]..[782,21106+35])
          [
            <arg>
            Nolabel
              expression (lib/grammarFunctor.ml[782,21106+8]..[782,21106+32])
                Pexp_ident "grammar_uses_error_token" (lib/grammarFunctor.ml[782,21106+8]..[782,21106+32])
            <arg>
            Nolabel
              expression (lib/grammarFunctor.ml[782,21106+36]..[782,21106+40])
                Pexp_construct "true" (lib/grammarFunctor.ml[782,21106+36]..[782,21106+40])
                None
          ]
        None
      expression (lib/grammarFunctor.ml[783,21148+6]..[783,21148+9])
        Pexp_apply
        expression (lib/grammarFunctor.ml[783,21148+7]..[783,21148+8])
          Pexp_ident "+" (lib/grammarFunctor.ml[783,21148+7]..[783,21148+8])
        [
          <arg>
          Nolabel
            expression (lib/grammarFunctor.ml[783,21148+6]..[783,21148+7])
              Pexp_ident "k" (lib/grammarFunctor.ml[783,21148+6]..[783,21148+7])
          <arg>
          Nolabel
            expression (lib/grammarFunctor.ml[783,21148+8]..[783,21148+9])
              Pexp_constant PConst_int (1,None)
        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[784,21158+6]..[784,21158+7])
                                                        Pexp_ident "k" (lib/grammarFunctor.ml[784,21158+6]..[784,21158+7])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[784,21158+8]..[784,21158+16])
                                                        Pexp_ident "branches" (lib/grammarFunctor.ml[784,21158+8]..[784,21158+16])
                                                  ]
                                            ]
                                            expression (lib/grammarFunctor.ml[785,21178+4]..[786,21207+6])
                                              Pexp_sequence
                                              expression (lib/grammarFunctor.ml[785,21178+4]..[785,21178+27])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[785,21178+4]..[785,21178+27]) ghost
                                                  Pexp_ident "Array.set" (lib/grammarFunctor.ml[785,21178+4]..[785,21178+27]) ghost
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[785,21178+4]..[785,21178+11])
                                                      Pexp_ident "ntprods" (lib/grammarFunctor.ml[785,21178+4]..[785,21178+11])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[785,21178+13]..[785,21178+15])
                                                      Pexp_ident "nt" (lib/grammarFunctor.ml[785,21178+13]..[785,21178+15])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[785,21178+20]..[785,21178+27])
                                                      Pexp_tuple
                                                      [
                                                        expression (lib/grammarFunctor.ml[785,21178+21]..[785,21178+22])
                                                          Pexp_ident "k" (lib/grammarFunctor.ml[785,21178+21]..[785,21178+22])
                                                        expression (lib/grammarFunctor.ml[785,21178+24]..[785,21178+26])
                                                          Pexp_ident "k'" (lib/grammarFunctor.ml[785,21178+24]..[785,21178+26])
                                                      ]
                                                ]
                                              expression (lib/grammarFunctor.ml[786,21207+4]..[786,21207+6])
                                                Pexp_ident "k'" (lib/grammarFunctor.ml[786,21207+4]..[786,21207+6])
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[787,21214+4]..[787,21214+17])
                                    Pexp_field
                                    expression (lib/grammarFunctor.ml[787,21214+4]..[787,21214+11])
                                      Pexp_ident "grammar" (lib/grammarFunctor.ml[787,21214+4]..[787,21214+11])
                                    "rules" (lib/grammarFunctor.ml[787,21214+12]..[787,21214+17])
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[787,21214+18]..[787,21214+23])
                                    Pexp_ident "start" (lib/grammarFunctor.ml[787,21214+18]..[787,21214+23])
                              ]
                        ]
                      structure_item (lib/grammarFunctor.ml[791,21319+2]..[793,21371+22])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[791,21319+6]..[791,21319+12])
                              Ppat_var "iternt" (lib/grammarFunctor.ml[791,21319+6]..[791,21319+12])
                            expression (lib/grammarFunctor.ml[791,21319+13]..[793,21371+22]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[791,21319+13]..[791,21319+15])
                                Ppat_var "nt" (lib/grammarFunctor.ml[791,21319+13]..[791,21319+15])
                              expression (lib/grammarFunctor.ml[791,21319+16]..[793,21371+22]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[791,21319+16]..[791,21319+17])
                                  Ppat_var "f" (lib/grammarFunctor.ml[791,21319+16]..[791,21319+17])
                                expression (lib/grammarFunctor.ml[792,21339+4]..[793,21371+22])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/grammarFunctor.ml[792,21339+8]..[792,21339+13])
                                        Ppat_tuple
                                        [
                                          pattern (lib/grammarFunctor.ml[792,21339+8]..[792,21339+9])
                                            Ppat_var "k" (lib/grammarFunctor.ml[792,21339+8]..[792,21339+9])
                                          pattern (lib/grammarFunctor.ml[792,21339+11]..[792,21339+13])
                                            Ppat_var "k'" (lib/grammarFunctor.ml[792,21339+11]..[792,21339+13])
                                        ]
                                      expression (lib/grammarFunctor.ml[792,21339+16]..[792,21339+28])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[792,21339+16]..[792,21339+28]) ghost
                                          Pexp_ident "Array.get" (lib/grammarFunctor.ml[792,21339+16]..[792,21339+28]) ghost
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[792,21339+16]..[792,21339+23])
                                              Pexp_ident "ntprods" (lib/grammarFunctor.ml[792,21339+16]..[792,21339+23])
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[792,21339+25]..[792,21339+27])
                                              Pexp_ident "nt" (lib/grammarFunctor.ml[792,21339+25]..[792,21339+27])
                                        ]
                                  ]
                                  expression (lib/grammarFunctor.ml[793,21371+4]..[793,21371+22])
                                    Pexp_apply
                                    expression (lib/grammarFunctor.ml[793,21371+4]..[793,21371+15])
                                      Pexp_ident "Misc.iterij" (lib/grammarFunctor.ml[793,21371+4]..[793,21371+15])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[793,21371+16]..[793,21371+17])
                                          Pexp_ident "k" (lib/grammarFunctor.ml[793,21371+16]..[793,21371+17])
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[793,21371+18]..[793,21371+20])
                                          Pexp_ident "k'" (lib/grammarFunctor.ml[793,21371+18]..[793,21371+20])
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[793,21371+21]..[793,21371+22])
                                          Pexp_ident "f" (lib/grammarFunctor.ml[793,21371+21]..[793,21371+22])
                                    ]
                        ]
                      structure_item (lib/grammarFunctor.ml[795,21395+2]..[797,21452+27])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[795,21395+6]..[795,21395+12])
                              Ppat_var "foldnt" (lib/grammarFunctor.ml[795,21395+6]..[795,21395+12])
                            expression (lib/grammarFunctor.ml[795,21395+13]..[797,21452+27]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[795,21395+13]..[795,21395+15])
                                Ppat_var "nt" (lib/grammarFunctor.ml[795,21395+13]..[795,21395+15])
                              expression (lib/grammarFunctor.ml[795,21395+16]..[797,21452+27]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[795,21395+16]..[795,21395+17])
                                  Ppat_var "f" (lib/grammarFunctor.ml[795,21395+16]..[795,21395+17])
                                expression (lib/grammarFunctor.ml[795,21395+18]..[797,21452+27]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lib/grammarFunctor.ml[795,21395+18]..[795,21395+22])
                                    Ppat_var "accu" (lib/grammarFunctor.ml[795,21395+18]..[795,21395+22])
                                  expression (lib/grammarFunctor.ml[796,21420+4]..[797,21452+27])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/grammarFunctor.ml[796,21420+8]..[796,21420+13])
                                          Ppat_tuple
                                          [
                                            pattern (lib/grammarFunctor.ml[796,21420+8]..[796,21420+9])
                                              Ppat_var "k" (lib/grammarFunctor.ml[796,21420+8]..[796,21420+9])
                                            pattern (lib/grammarFunctor.ml[796,21420+11]..[796,21420+13])
                                              Ppat_var "k'" (lib/grammarFunctor.ml[796,21420+11]..[796,21420+13])
                                          ]
                                        expression (lib/grammarFunctor.ml[796,21420+16]..[796,21420+28])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[796,21420+16]..[796,21420+28]) ghost
                                            Pexp_ident "Array.get" (lib/grammarFunctor.ml[796,21420+16]..[796,21420+28]) ghost
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[796,21420+16]..[796,21420+23])
                                                Pexp_ident "ntprods" (lib/grammarFunctor.ml[796,21420+16]..[796,21420+23])
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[796,21420+25]..[796,21420+27])
                                                Pexp_ident "nt" (lib/grammarFunctor.ml[796,21420+25]..[796,21420+27])
                                          ]
                                    ]
                                    expression (lib/grammarFunctor.ml[797,21452+4]..[797,21452+27])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[797,21452+4]..[797,21452+15])
                                        Pexp_ident "Misc.foldij" (lib/grammarFunctor.ml[797,21452+4]..[797,21452+15])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[797,21452+16]..[797,21452+17])
                                            Pexp_ident "k" (lib/grammarFunctor.ml[797,21452+16]..[797,21452+17])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[797,21452+18]..[797,21452+20])
                                            Pexp_ident "k'" (lib/grammarFunctor.ml[797,21452+18]..[797,21452+20])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[797,21452+21]..[797,21452+22])
                                            Pexp_ident "f" (lib/grammarFunctor.ml[797,21452+21]..[797,21452+22])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[797,21452+23]..[797,21452+27])
                                            Pexp_ident "accu" (lib/grammarFunctor.ml[797,21452+23]..[797,21452+27])
                                      ]
                        ]
                      structure_item (lib/grammarFunctor.ml[799,21481+2]..[801,21532+21])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[799,21481+6]..[799,21481+11])
                              Ppat_var "mapnt" (lib/grammarFunctor.ml[799,21481+6]..[799,21481+11])
                            expression (lib/grammarFunctor.ml[799,21481+12]..[801,21532+21]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[799,21481+12]..[799,21481+14])
                                Ppat_var "nt" (lib/grammarFunctor.ml[799,21481+12]..[799,21481+14])
                              expression (lib/grammarFunctor.ml[799,21481+15]..[801,21532+21]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[799,21481+15]..[799,21481+16])
                                  Ppat_var "f" (lib/grammarFunctor.ml[799,21481+15]..[799,21481+16])
                                expression (lib/grammarFunctor.ml[800,21500+4]..[801,21532+21])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/grammarFunctor.ml[800,21500+8]..[800,21500+13])
                                        Ppat_tuple
                                        [
                                          pattern (lib/grammarFunctor.ml[800,21500+8]..[800,21500+9])
                                            Ppat_var "k" (lib/grammarFunctor.ml[800,21500+8]..[800,21500+9])
                                          pattern (lib/grammarFunctor.ml[800,21500+11]..[800,21500+13])
                                            Ppat_var "k'" (lib/grammarFunctor.ml[800,21500+11]..[800,21500+13])
                                        ]
                                      expression (lib/grammarFunctor.ml[800,21500+16]..[800,21500+28])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[800,21500+16]..[800,21500+28]) ghost
                                          Pexp_ident "Array.get" (lib/grammarFunctor.ml[800,21500+16]..[800,21500+28]) ghost
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[800,21500+16]..[800,21500+23])
                                              Pexp_ident "ntprods" (lib/grammarFunctor.ml[800,21500+16]..[800,21500+23])
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[800,21500+25]..[800,21500+27])
                                              Pexp_ident "nt" (lib/grammarFunctor.ml[800,21500+25]..[800,21500+27])
                                        ]
                                  ]
                                  expression (lib/grammarFunctor.ml[801,21532+4]..[801,21532+21])
                                    Pexp_apply
                                    expression (lib/grammarFunctor.ml[801,21532+4]..[801,21532+14])
                                      Pexp_ident "Misc.mapij" (lib/grammarFunctor.ml[801,21532+4]..[801,21532+14])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[801,21532+15]..[801,21532+16])
                                          Pexp_ident "k" (lib/grammarFunctor.ml[801,21532+15]..[801,21532+16])
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[801,21532+17]..[801,21532+19])
                                          Pexp_ident "k'" (lib/grammarFunctor.ml[801,21532+17]..[801,21532+19])
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[801,21532+20]..[801,21532+21])
                                          Pexp_ident "f" (lib/grammarFunctor.ml[801,21532+20]..[801,21532+21])
                                    ]
                        ]
                      structure_item (lib/grammarFunctor.ml[803,21555+2]..[805,21617+32])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[803,21555+6]..[803,21555+17])
                              Ppat_var "foldnt_lazy" (lib/grammarFunctor.ml[803,21555+6]..[803,21555+17])
                            expression (lib/grammarFunctor.ml[803,21555+18]..[805,21617+32]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[803,21555+18]..[803,21555+20])
                                Ppat_var "nt" (lib/grammarFunctor.ml[803,21555+18]..[803,21555+20])
                              expression (lib/grammarFunctor.ml[803,21555+21]..[805,21617+32]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[803,21555+21]..[803,21555+22])
                                  Ppat_var "f" (lib/grammarFunctor.ml[803,21555+21]..[803,21555+22])
                                expression (lib/grammarFunctor.ml[803,21555+23]..[805,21617+32]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lib/grammarFunctor.ml[803,21555+23]..[803,21555+27])
                                    Ppat_var "accu" (lib/grammarFunctor.ml[803,21555+23]..[803,21555+27])
                                  expression (lib/grammarFunctor.ml[804,21585+4]..[805,21617+32])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/grammarFunctor.ml[804,21585+8]..[804,21585+13])
                                          Ppat_tuple
                                          [
                                            pattern (lib/grammarFunctor.ml[804,21585+8]..[804,21585+9])
                                              Ppat_var "k" (lib/grammarFunctor.ml[804,21585+8]..[804,21585+9])
                                            pattern (lib/grammarFunctor.ml[804,21585+11]..[804,21585+13])
                                              Ppat_var "k'" (lib/grammarFunctor.ml[804,21585+11]..[804,21585+13])
                                          ]
                                        expression (lib/grammarFunctor.ml[804,21585+16]..[804,21585+28])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[804,21585+16]..[804,21585+28]) ghost
                                            Pexp_ident "Array.get" (lib/grammarFunctor.ml[804,21585+16]..[804,21585+28]) ghost
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[804,21585+16]..[804,21585+23])
                                                Pexp_ident "ntprods" (lib/grammarFunctor.ml[804,21585+16]..[804,21585+23])
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[804,21585+25]..[804,21585+27])
                                                Pexp_ident "nt" (lib/grammarFunctor.ml[804,21585+25]..[804,21585+27])
                                          ]
                                    ]
                                    expression (lib/grammarFunctor.ml[805,21617+4]..[805,21617+32])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[805,21617+4]..[805,21617+20])
                                        Pexp_ident "Misc.foldij_lazy" (lib/grammarFunctor.ml[805,21617+4]..[805,21617+20])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[805,21617+21]..[805,21617+22])
                                            Pexp_ident "k" (lib/grammarFunctor.ml[805,21617+21]..[805,21617+22])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[805,21617+23]..[805,21617+25])
                                            Pexp_ident "k'" (lib/grammarFunctor.ml[805,21617+23]..[805,21617+25])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[805,21617+26]..[805,21617+27])
                                            Pexp_ident "f" (lib/grammarFunctor.ml[805,21617+26]..[805,21617+27])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[805,21617+28]..[805,21617+32])
                                            Pexp_ident "accu" (lib/grammarFunctor.ml[805,21617+28]..[805,21617+32])
                                      ]
                        ]
                      structure_item (lib/grammarFunctor.ml[809,21671+2]..[810,21688+16])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[809,21671+6]..[809,21671+9])
                              Ppat_var "def" (lib/grammarFunctor.ml[809,21671+6]..[809,21671+9])
                            expression (lib/grammarFunctor.ml[809,21671+10]..[810,21688+16]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[809,21671+10]..[809,21671+14])
                                Ppat_var "prod" (lib/grammarFunctor.ml[809,21671+10]..[809,21671+14])
                              expression (lib/grammarFunctor.ml[810,21688+4]..[810,21688+16])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[810,21688+4]..[810,21688+16]) ghost
                                  Pexp_ident "Array.get" (lib/grammarFunctor.ml[810,21688+4]..[810,21688+16]) ghost
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[810,21688+4]..[810,21688+9])
                                      Pexp_ident "table" (lib/grammarFunctor.ml[810,21688+4]..[810,21688+9])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[810,21688+11]..[810,21688+15])
                                      Pexp_ident "prod" (lib/grammarFunctor.ml[810,21688+11]..[810,21688+15])
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[812,21706+2]..[814,21754+6])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[812,21706+6]..[812,21706+8])
                              Ppat_var "nt" (lib/grammarFunctor.ml[812,21706+6]..[812,21706+8])
                            expression (lib/grammarFunctor.ml[812,21706+9]..[814,21754+6]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[812,21706+9]..[812,21706+13])
                                Ppat_var "prod" (lib/grammarFunctor.ml[812,21706+9]..[812,21706+13])
                              expression (lib/grammarFunctor.ml[813,21722+4]..[814,21754+6])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/grammarFunctor.ml[813,21722+8]..[813,21722+13])
                                      Ppat_tuple
                                      [
                                        pattern (lib/grammarFunctor.ml[813,21722+8]..[813,21722+10])
                                          Ppat_var "nt" (lib/grammarFunctor.ml[813,21722+8]..[813,21722+10])
                                        pattern (lib/grammarFunctor.ml[813,21722+12]..[813,21722+13])
                                          Ppat_any
                                      ]
                                    expression (lib/grammarFunctor.ml[813,21722+16]..[813,21722+28])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[813,21722+16]..[813,21722+28]) ghost
                                        Pexp_ident "Array.get" (lib/grammarFunctor.ml[813,21722+16]..[813,21722+28]) ghost
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[813,21722+16]..[813,21722+21])
                                            Pexp_ident "table" (lib/grammarFunctor.ml[813,21722+16]..[813,21722+21])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[813,21722+23]..[813,21722+27])
                                            Pexp_ident "prod" (lib/grammarFunctor.ml[813,21722+23]..[813,21722+27])
                                      ]
                                ]
                                expression (lib/grammarFunctor.ml[814,21754+4]..[814,21754+6])
                                  Pexp_ident "nt" (lib/grammarFunctor.ml[814,21754+4]..[814,21754+6])
                        ]
                      structure_item (lib/grammarFunctor.ml[816,21762+2]..[818,21812+7])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[816,21762+6]..[816,21762+9])
                              Ppat_var "rhs" (lib/grammarFunctor.ml[816,21762+6]..[816,21762+9])
                            expression (lib/grammarFunctor.ml[816,21762+10]..[818,21812+7]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[816,21762+10]..[816,21762+14])
                                Ppat_var "prod" (lib/grammarFunctor.ml[816,21762+10]..[816,21762+14])
                              expression (lib/grammarFunctor.ml[817,21779+4]..[818,21812+7])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/grammarFunctor.ml[817,21779+8]..[817,21779+14])
                                      Ppat_tuple
                                      [
                                        pattern (lib/grammarFunctor.ml[817,21779+8]..[817,21779+9])
                                          Ppat_any
                                        pattern (lib/grammarFunctor.ml[817,21779+11]..[817,21779+14])
                                          Ppat_var "rhs" (lib/grammarFunctor.ml[817,21779+11]..[817,21779+14])
                                      ]
                                    expression (lib/grammarFunctor.ml[817,21779+17]..[817,21779+29])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[817,21779+17]..[817,21779+29]) ghost
                                        Pexp_ident "Array.get" (lib/grammarFunctor.ml[817,21779+17]..[817,21779+29]) ghost
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[817,21779+17]..[817,21779+22])
                                            Pexp_ident "table" (lib/grammarFunctor.ml[817,21779+17]..[817,21779+22])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[817,21779+24]..[817,21779+28])
                                            Pexp_ident "prod" (lib/grammarFunctor.ml[817,21779+24]..[817,21779+28])
                                      ]
                                ]
                                expression (lib/grammarFunctor.ml[818,21812+4]..[818,21812+7])
                                  Pexp_ident "rhs" (lib/grammarFunctor.ml[818,21812+4]..[818,21812+7])
                        ]
                      structure_item (lib/grammarFunctor.ml[820,21821+2]..[821,21841+27])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[820,21821+6]..[820,21821+12])
                              Ppat_var "length" (lib/grammarFunctor.ml[820,21821+6]..[820,21821+12])
                            expression (lib/grammarFunctor.ml[820,21821+13]..[821,21841+27]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[820,21821+13]..[820,21821+17])
                                Ppat_var "prod" (lib/grammarFunctor.ml[820,21821+13]..[820,21821+17])
                              expression (lib/grammarFunctor.ml[821,21841+4]..[821,21841+27])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[821,21841+4]..[821,21841+16])
                                  Pexp_ident "Array.length" (lib/grammarFunctor.ml[821,21841+4]..[821,21841+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[821,21841+17]..[821,21841+27])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[821,21841+18]..[821,21841+21])
                                        Pexp_ident "rhs" (lib/grammarFunctor.ml[821,21841+18]..[821,21841+21])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[821,21841+22]..[821,21841+26])
                                            Pexp_ident "prod" (lib/grammarFunctor.ml[821,21841+22]..[821,21841+26])
                                      ]
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[823,21870+2]..[824,21895+22])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[823,21870+6]..[823,21870+17])
                              Ppat_var "identifiers" (lib/grammarFunctor.ml[823,21870+6]..[823,21870+17])
                            expression (lib/grammarFunctor.ml[823,21870+18]..[824,21895+22]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[823,21870+18]..[823,21870+22])
                                Ppat_var "prod" (lib/grammarFunctor.ml[823,21870+18]..[823,21870+22])
                              expression (lib/grammarFunctor.ml[824,21895+4]..[824,21895+22])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[824,21895+4]..[824,21895+22]) ghost
                                  Pexp_ident "Array.get" (lib/grammarFunctor.ml[824,21895+4]..[824,21895+22]) ghost
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[824,21895+4]..[824,21895+15])
                                      Pexp_ident "identifiers" (lib/grammarFunctor.ml[824,21895+4]..[824,21895+15])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[824,21895+17]..[824,21895+21])
                                      Pexp_ident "prod" (lib/grammarFunctor.ml[824,21895+17]..[824,21895+21])
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[826,21919+2]..[827,21941+16])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[826,21919+6]..[826,21919+14])
                              Ppat_var "is_start" (lib/grammarFunctor.ml[826,21919+6]..[826,21919+14])
                            expression (lib/grammarFunctor.ml[826,21919+15]..[827,21941+16]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[826,21919+15]..[826,21919+19])
                                Ppat_var "prod" (lib/grammarFunctor.ml[826,21919+15]..[826,21919+19])
                              expression (lib/grammarFunctor.ml[827,21941+4]..[827,21941+16])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[827,21941+9]..[827,21941+10])
                                  Pexp_ident "<" (lib/grammarFunctor.ml[827,21941+9]..[827,21941+10])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[827,21941+4]..[827,21941+8])
                                      Pexp_ident "prod" (lib/grammarFunctor.ml[827,21941+4]..[827,21941+8])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[827,21941+11]..[827,21941+16])
                                      Pexp_ident "start" (lib/grammarFunctor.ml[827,21941+11]..[827,21941+16])
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[829,21959+2]..[837,22134+10])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[829,21959+6]..[829,21959+14])
                              Ppat_var "classify" (lib/grammarFunctor.ml[829,21959+6]..[829,21959+14])
                            expression (lib/grammarFunctor.ml[829,21959+15]..[837,22134+10]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[829,21959+15]..[829,21959+19])
                                Ppat_var "prod" (lib/grammarFunctor.ml[829,21959+15]..[829,21959+19])
                              expression (lib/grammarFunctor.ml[830,21981+4]..[837,22134+10])
                                Pexp_ifthenelse
                                expression (lib/grammarFunctor.ml[830,21981+7]..[830,21981+20])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[830,21981+7]..[830,21981+15])
                                    Pexp_ident "is_start" (lib/grammarFunctor.ml[830,21981+7]..[830,21981+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[830,21981+16]..[830,21981+20])
                                        Pexp_ident "prod" (lib/grammarFunctor.ml[830,21981+16]..[830,21981+20])
                                  ]
                                expression (lib/grammarFunctor.ml[831,22007+6]..[835,22102+22])
                                  Pexp_match
                                  expression (lib/grammarFunctor.ml[831,22007+12]..[831,22007+26])
                                    Pexp_apply
                                    expression (lib/grammarFunctor.ml[831,22007+12]..[831,22007+26]) ghost
                                      Pexp_ident "Array.get" (lib/grammarFunctor.ml[831,22007+12]..[831,22007+26]) ghost
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[831,22007+12]..[831,22007+22])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[831,22007+13]..[831,22007+16])
                                            Pexp_ident "rhs" (lib/grammarFunctor.ml[831,22007+13]..[831,22007+16])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[831,22007+17]..[831,22007+21])
                                                Pexp_ident "prod" (lib/grammarFunctor.ml[831,22007+17]..[831,22007+21])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[831,22007+24]..[831,22007+25])
                                          Pexp_constant PConst_int (0,None)
                                    ]
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[832,22039+8]..[832,22039+19])
                                        Ppat_construct "Symbol.N" (lib/grammarFunctor.ml[832,22039+8]..[832,22039+16])
                                        Some
                                          []
                                          pattern (lib/grammarFunctor.ml[832,22039+17]..[832,22039+19])
                                            Ppat_var "nt" (lib/grammarFunctor.ml[832,22039+17]..[832,22039+19])
                                      expression (lib/grammarFunctor.ml[833,22062+10]..[833,22062+17])
                                        Pexp_construct "Some" (lib/grammarFunctor.ml[833,22062+10]..[833,22062+14])
                                        Some
                                          expression (lib/grammarFunctor.ml[833,22062+15]..[833,22062+17])
                                            Pexp_ident "nt" (lib/grammarFunctor.ml[833,22062+15]..[833,22062+17])
                                    <case>
                                      pattern (lib/grammarFunctor.ml[834,22080+8]..[834,22080+18])
                                        Ppat_construct "Symbol.T" (lib/grammarFunctor.ml[834,22080+8]..[834,22080+16])
                                        Some
                                          []
                                          pattern (lib/grammarFunctor.ml[834,22080+17]..[834,22080+18])
                                            Ppat_any
                                      expression (lib/grammarFunctor.ml[835,22102+10]..[835,22102+22])
                                        Pexp_assert
                                        expression (lib/grammarFunctor.ml[835,22102+17]..[835,22102+22])
                                          Pexp_construct "false" (lib/grammarFunctor.ml[835,22102+17]..[835,22102+22])
                                          None
                                  ]
                                Some
                                  expression (lib/grammarFunctor.ml[837,22134+6]..[837,22134+10])
                                    Pexp_construct "None" (lib/grammarFunctor.ml[837,22134+6]..[837,22134+10])
                                    None
                        ]
                      structure_item (lib/grammarFunctor.ml[839,22146+2]..[846,22326+20])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[839,22146+6]..[839,22146+12])
                              Ppat_var "action" (lib/grammarFunctor.ml[839,22146+6]..[839,22146+12])
                            expression (lib/grammarFunctor.ml[839,22146+13]..[846,22326+20]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[839,22146+13]..[839,22146+17])
                                Ppat_var "prod" (lib/grammarFunctor.ml[839,22146+13]..[839,22146+17])
                              expression (lib/grammarFunctor.ml[840,22166+4]..[846,22326+20])
                                Pexp_match
                                expression (lib/grammarFunctor.ml[840,22166+10]..[840,22166+24])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[840,22166+10]..[840,22166+24]) ghost
                                    Pexp_ident "Array.get" (lib/grammarFunctor.ml[840,22166+10]..[840,22166+24]) ghost
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[840,22166+10]..[840,22166+17])
                                        Pexp_ident "actions" (lib/grammarFunctor.ml[840,22166+10]..[840,22166+17])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[840,22166+19]..[840,22166+23])
                                        Pexp_ident "prod" (lib/grammarFunctor.ml[840,22166+19]..[840,22166+23])
                                  ]
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[841,22196+6]..[841,22196+17])
                                      Ppat_construct "Some" (lib/grammarFunctor.ml[841,22196+6]..[841,22196+10])
                                      Some
                                        []
                                        pattern (lib/grammarFunctor.ml[841,22196+11]..[841,22196+17])
                                          Ppat_var "action" (lib/grammarFunctor.ml[841,22196+11]..[841,22196+17])
                                    expression (lib/grammarFunctor.ml[842,22217+8]..[842,22217+14])
                                      Pexp_ident "action" (lib/grammarFunctor.ml[842,22217+8]..[842,22217+14])
                                  <case>
                                    pattern (lib/grammarFunctor.ml[843,22232+6]..[843,22232+10])
                                      Ppat_construct "None" (lib/grammarFunctor.ml[843,22232+6]..[843,22232+10])
                                      None
                                    expression (lib/grammarFunctor.ml[845,22294+8]..[846,22326+20])
                                      Pexp_sequence
                                      expression (lib/grammarFunctor.ml[845,22294+8]..[845,22294+30])
                                        Pexp_assert
                                        expression (lib/grammarFunctor.ml[845,22294+15]..[845,22294+30])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[845,22294+16]..[845,22294+24])
                                            Pexp_ident "is_start" (lib/grammarFunctor.ml[845,22294+16]..[845,22294+24])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[845,22294+25]..[845,22294+29])
                                                Pexp_ident "prod" (lib/grammarFunctor.ml[845,22294+25]..[845,22294+29])
                                          ]
                                      expression (lib/grammarFunctor.ml[846,22326+8]..[846,22326+20])
                                        Pexp_assert
                                        expression (lib/grammarFunctor.ml[846,22326+15]..[846,22326+20])
                                          Pexp_construct "false" (lib/grammarFunctor.ml[846,22326+15]..[846,22326+20])
                                          None
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[848,22348+2]..[849,22371+20])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[848,22348+6]..[848,22348+15])
                              Ppat_var "positions" (lib/grammarFunctor.ml[848,22348+6]..[848,22348+15])
                            expression (lib/grammarFunctor.ml[848,22348+16]..[849,22371+20]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[848,22348+16]..[848,22348+20])
                                Ppat_var "prod" (lib/grammarFunctor.ml[848,22348+16]..[848,22348+20])
                              expression (lib/grammarFunctor.ml[849,22371+4]..[849,22371+20])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[849,22371+4]..[849,22371+20]) ghost
                                  Pexp_ident "Array.get" (lib/grammarFunctor.ml[849,22371+4]..[849,22371+20]) ghost
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[849,22371+4]..[849,22371+13])
                                      Pexp_ident "positions" (lib/grammarFunctor.ml[849,22371+4]..[849,22371+13])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[849,22371+15]..[849,22371+19])
                                      Pexp_ident "prod" (lib/grammarFunctor.ml[849,22371+15]..[849,22371+19])
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[851,22393+2]..[852,22421+36])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[851,22393+6]..[851,22393+20])
                              Ppat_var "lhs_attributes" (lib/grammarFunctor.ml[851,22393+6]..[851,22393+20])
                            expression (lib/grammarFunctor.ml[851,22393+21]..[852,22421+36]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[851,22393+21]..[851,22393+25])
                                Ppat_var "prod" (lib/grammarFunctor.ml[851,22393+21]..[851,22393+25])
                              expression (lib/grammarFunctor.ml[852,22421+4]..[852,22421+36])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[852,22421+4]..[852,22421+26])
                                  Pexp_ident "Nonterminal.attributes" (lib/grammarFunctor.ml[852,22421+4]..[852,22421+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[852,22421+27]..[852,22421+36])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[852,22421+28]..[852,22421+30])
                                        Pexp_ident "nt" (lib/grammarFunctor.ml[852,22421+28]..[852,22421+30])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[852,22421+31]..[852,22421+35])
                                            Pexp_ident "prod" (lib/grammarFunctor.ml[852,22421+31]..[852,22421+35])
                                      ]
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[854,22459+2]..[855,22487+25])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[854,22459+6]..[854,22459+20])
                              Ppat_var "rhs_attributes" (lib/grammarFunctor.ml[854,22459+6]..[854,22459+20])
                            expression (lib/grammarFunctor.ml[854,22459+21]..[855,22487+25]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[854,22459+21]..[854,22459+25])
                                Ppat_var "prod" (lib/grammarFunctor.ml[854,22459+21]..[854,22459+25])
                              expression (lib/grammarFunctor.ml[855,22487+4]..[855,22487+25])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[855,22487+4]..[855,22487+25]) ghost
                                  Pexp_ident "Array.get" (lib/grammarFunctor.ml[855,22487+4]..[855,22487+25]) ghost
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[855,22487+4]..[855,22487+18])
                                      Pexp_ident "rhs_attributes" (lib/grammarFunctor.ml[855,22487+4]..[855,22487+18])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[855,22487+20]..[855,22487+24])
                                      Pexp_ident "prod" (lib/grammarFunctor.ml[855,22487+20]..[855,22487+24])
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[857,22514+2]..[861,22617+18])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[857,22514+6]..[857,22514+27])
                              Ppat_var "startsymbol2startprod" (lib/grammarFunctor.ml[857,22514+6]..[857,22514+27])
                            expression (lib/grammarFunctor.ml[857,22514+28]..[861,22617+18]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[857,22514+28]..[857,22514+30])
                                Ppat_var "nt" (lib/grammarFunctor.ml[857,22514+28]..[857,22514+30])
                              expression (lib/grammarFunctor.ml[858,22547+4]..[861,22617+18])
                                Pexp_try
                                expression (lib/grammarFunctor.ml[859,22555+6]..[859,22555+39])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[859,22555+6]..[859,22555+25])
                                    Pexp_ident "NonterminalMap.find" (lib/grammarFunctor.ml[859,22555+6]..[859,22555+25])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[859,22555+26]..[859,22555+28])
                                        Pexp_ident "nt" (lib/grammarFunctor.ml[859,22555+26]..[859,22555+28])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[859,22555+29]..[859,22555+39])
                                        Pexp_ident "startprods" (lib/grammarFunctor.ml[859,22555+29]..[859,22555+39])
                                  ]
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[860,22595+9]..[860,22595+18])
                                      Ppat_construct "Not_found" (lib/grammarFunctor.ml[860,22595+9]..[860,22595+18])
                                      None
                                    expression (lib/grammarFunctor.ml[861,22617+6]..[861,22617+18])
                                      Pexp_assert
                                      expression (lib/grammarFunctor.ml[861,22617+13]..[861,22617+18])
                                        Pexp_construct "false" (lib/grammarFunctor.ml[861,22617+13]..[861,22617+18])
                                        None
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[863,22670+2]..[864,22694+46])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[863,22670+6]..[863,22670+16])
                              Ppat_var "error_free" (lib/grammarFunctor.ml[863,22670+6]..[863,22670+16])
                            expression (lib/grammarFunctor.ml[863,22670+17]..[864,22694+46]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[863,22670+17]..[863,22670+21])
                                Ppat_var "prod" (lib/grammarFunctor.ml[863,22670+17]..[863,22670+21])
                              expression (lib/grammarFunctor.ml[864,22694+4]..[864,22694+46])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[864,22694+4]..[864,22694+18])
                                  Pexp_ident "MArray.for_all" (lib/grammarFunctor.ml[864,22694+4]..[864,22694+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[864,22694+19]..[864,22694+35])
                                      Pexp_ident "Symbol.non_error" (lib/grammarFunctor.ml[864,22694+19]..[864,22694+35])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[864,22694+36]..[864,22694+46])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[864,22694+37]..[864,22694+40])
                                        Pexp_ident "rhs" (lib/grammarFunctor.ml[864,22694+37]..[864,22694+40])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[864,22694+41]..[864,22694+45])
                                            Pexp_ident "prod" (lib/grammarFunctor.ml[864,22694+41]..[864,22694+45])
                                      ]
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[868,22762+2]..[869,22777+18])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[868,22762+6]..[868,22762+10])
                              Ppat_var "init" (lib/grammarFunctor.ml[868,22762+6]..[868,22762+10])
                            expression (lib/grammarFunctor.ml[868,22762+11]..[869,22777+18]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[868,22762+11]..[868,22762+12])
                                Ppat_var "f" (lib/grammarFunctor.ml[868,22762+11]..[868,22762+12])
                              expression (lib/grammarFunctor.ml[869,22777+4]..[869,22777+18])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[869,22777+4]..[869,22777+14])
                                  Pexp_ident "Array.init" (lib/grammarFunctor.ml[869,22777+4]..[869,22777+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[869,22777+15]..[869,22777+16])
                                      Pexp_ident "n" (lib/grammarFunctor.ml[869,22777+15]..[869,22777+16])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[869,22777+17]..[869,22777+18])
                                      Pexp_ident "f" (lib/grammarFunctor.ml[869,22777+17]..[869,22777+18])
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[871,22797+2]..[872,22812+18])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[871,22797+6]..[871,22797+10])
                              Ppat_var "iter" (lib/grammarFunctor.ml[871,22797+6]..[871,22797+10])
                            expression (lib/grammarFunctor.ml[871,22797+11]..[872,22812+18]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[871,22797+11]..[871,22797+12])
                                Ppat_var "f" (lib/grammarFunctor.ml[871,22797+11]..[871,22797+12])
                              expression (lib/grammarFunctor.ml[872,22812+4]..[872,22812+18])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[872,22812+4]..[872,22812+14])
                                  Pexp_ident "Misc.iteri" (lib/grammarFunctor.ml[872,22812+4]..[872,22812+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[872,22812+15]..[872,22812+16])
                                      Pexp_ident "n" (lib/grammarFunctor.ml[872,22812+15]..[872,22812+16])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[872,22812+17]..[872,22812+18])
                                      Pexp_ident "f" (lib/grammarFunctor.ml[872,22812+17]..[872,22812+18])
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[874,22832+2]..[875,22852+23])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[874,22832+6]..[874,22832+10])
                              Ppat_var "fold" (lib/grammarFunctor.ml[874,22832+6]..[874,22832+10])
                            expression (lib/grammarFunctor.ml[874,22832+11]..[875,22852+23]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[874,22832+11]..[874,22832+12])
                                Ppat_var "f" (lib/grammarFunctor.ml[874,22832+11]..[874,22832+12])
                              expression (lib/grammarFunctor.ml[874,22832+13]..[875,22852+23]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[874,22832+13]..[874,22832+17])
                                  Ppat_var "accu" (lib/grammarFunctor.ml[874,22832+13]..[874,22832+17])
                                expression (lib/grammarFunctor.ml[875,22852+4]..[875,22852+23])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[875,22852+4]..[875,22852+14])
                                    Pexp_ident "Misc.foldi" (lib/grammarFunctor.ml[875,22852+4]..[875,22852+14])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[875,22852+15]..[875,22852+16])
                                        Pexp_ident "n" (lib/grammarFunctor.ml[875,22852+15]..[875,22852+16])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[875,22852+17]..[875,22852+18])
                                        Pexp_ident "f" (lib/grammarFunctor.ml[875,22852+17]..[875,22852+18])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[875,22852+19]..[875,22852+23])
                                        Pexp_ident "accu" (lib/grammarFunctor.ml[875,22852+19]..[875,22852+23])
                                  ]
                        ]
                      structure_item (lib/grammarFunctor.ml[877,22877+2]..[878,22891+17])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[877,22877+6]..[877,22877+9])
                              Ppat_var "map" (lib/grammarFunctor.ml[877,22877+6]..[877,22877+9])
                            expression (lib/grammarFunctor.ml[877,22877+10]..[878,22891+17]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[877,22877+10]..[877,22877+11])
                                Ppat_var "f" (lib/grammarFunctor.ml[877,22877+10]..[877,22877+11])
                              expression (lib/grammarFunctor.ml[878,22891+4]..[878,22891+17])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[878,22891+4]..[878,22891+13])
                                  Pexp_ident "Misc.mapi" (lib/grammarFunctor.ml[878,22891+4]..[878,22891+13])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[878,22891+14]..[878,22891+15])
                                      Pexp_ident "n" (lib/grammarFunctor.ml[878,22891+14]..[878,22891+15])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[878,22891+16]..[878,22891+17])
                                      Pexp_ident "f" (lib/grammarFunctor.ml[878,22891+16]..[878,22891+17])
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[880,22910+2]..[881,22925+18])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[880,22910+6]..[880,22910+10])
                              Ppat_var "amap" (lib/grammarFunctor.ml[880,22910+6]..[880,22910+10])
                            expression (lib/grammarFunctor.ml[880,22910+11]..[881,22925+18]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[880,22910+11]..[880,22910+12])
                                Ppat_var "f" (lib/grammarFunctor.ml[880,22910+11]..[880,22910+12])
                              expression (lib/grammarFunctor.ml[881,22925+4]..[881,22925+18])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[881,22925+4]..[881,22925+14])
                                  Pexp_ident "Array.init" (lib/grammarFunctor.ml[881,22925+4]..[881,22925+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[881,22925+15]..[881,22925+16])
                                      Pexp_ident "n" (lib/grammarFunctor.ml[881,22925+15]..[881,22925+16])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[881,22925+17]..[881,22925+18])
                                      Pexp_ident "f" (lib/grammarFunctor.ml[881,22925+17]..[881,22925+18])
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[883,22945+2]..[886,23007+8])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[883,22945+6]..[883,22945+11])
                              Ppat_var "iterx" (lib/grammarFunctor.ml[883,22945+6]..[883,22945+11])
                            expression (lib/grammarFunctor.ml[883,22945+12]..[886,23007+8]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[883,22945+12]..[883,22945+13])
                                Ppat_var "f" (lib/grammarFunctor.ml[883,22945+12]..[883,22945+13])
                              expression (lib/grammarFunctor.ml[884,22961+4]..[886,23007+8])
                                Pexp_for Up
                                pattern (lib/grammarFunctor.ml[884,22961+8]..[884,22961+12])
                                  Ppat_var "prod" (lib/grammarFunctor.ml[884,22961+8]..[884,22961+12])
                                expression (lib/grammarFunctor.ml[884,22961+15]..[884,22961+20])
                                  Pexp_ident "start" (lib/grammarFunctor.ml[884,22961+15]..[884,22961+20])
                                expression (lib/grammarFunctor.ml[884,22961+24]..[884,22961+29])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[884,22961+26]..[884,22961+27])
                                    Pexp_ident "-" (lib/grammarFunctor.ml[884,22961+26]..[884,22961+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[884,22961+24]..[884,22961+25])
                                        Pexp_ident "n" (lib/grammarFunctor.ml[884,22961+24]..[884,22961+25])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[884,22961+28]..[884,22961+29])
                                        Pexp_constant PConst_int (1,None)
                                  ]
                                expression (lib/grammarFunctor.ml[885,22994+6]..[885,22994+12])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[885,22994+6]..[885,22994+7])
                                    Pexp_ident "f" (lib/grammarFunctor.ml[885,22994+6]..[885,22994+7])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[885,22994+8]..[885,22994+12])
                                        Pexp_ident "prod" (lib/grammarFunctor.ml[885,22994+8]..[885,22994+12])
                                  ]
                        ]
                      structure_item (lib/grammarFunctor.ml[888,23017+2]..[889,23038+30])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[888,23017+6]..[888,23017+11])
                              Ppat_var "foldx" (lib/grammarFunctor.ml[888,23017+6]..[888,23017+11])
                            expression (lib/grammarFunctor.ml[888,23017+12]..[889,23038+30]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[888,23017+12]..[888,23017+13])
                                Ppat_var "f" (lib/grammarFunctor.ml[888,23017+12]..[888,23017+13])
                              expression (lib/grammarFunctor.ml[888,23017+14]..[889,23038+30]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[888,23017+14]..[888,23017+18])
                                  Ppat_var "accu" (lib/grammarFunctor.ml[888,23017+14]..[888,23017+18])
                                expression (lib/grammarFunctor.ml[889,23038+4]..[889,23038+30])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[889,23038+4]..[889,23038+15])
                                    Pexp_ident "Misc.foldij" (lib/grammarFunctor.ml[889,23038+4]..[889,23038+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[889,23038+16]..[889,23038+21])
                                        Pexp_ident "start" (lib/grammarFunctor.ml[889,23038+16]..[889,23038+21])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[889,23038+22]..[889,23038+23])
                                        Pexp_ident "n" (lib/grammarFunctor.ml[889,23038+22]..[889,23038+23])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[889,23038+24]..[889,23038+25])
                                        Pexp_ident "f" (lib/grammarFunctor.ml[889,23038+24]..[889,23038+25])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[889,23038+26]..[889,23038+30])
                                        Pexp_ident "accu" (lib/grammarFunctor.ml[889,23038+26]..[889,23038+30])
                                  ]
                        ]
                      structure_item (lib/grammarFunctor.ml[891,23070+2]..[892,23085+24])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[891,23070+6]..[891,23070+10])
                              Ppat_var "mapx" (lib/grammarFunctor.ml[891,23070+6]..[891,23070+10])
                            expression (lib/grammarFunctor.ml[891,23070+11]..[892,23085+24]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[891,23070+11]..[891,23070+12])
                                Ppat_var "f" (lib/grammarFunctor.ml[891,23070+11]..[891,23070+12])
                              expression (lib/grammarFunctor.ml[892,23085+4]..[892,23085+24])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[892,23085+4]..[892,23085+14])
                                  Pexp_ident "Misc.mapij" (lib/grammarFunctor.ml[892,23085+4]..[892,23085+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[892,23085+15]..[892,23085+20])
                                      Pexp_ident "start" (lib/grammarFunctor.ml[892,23085+15]..[892,23085+20])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[892,23085+21]..[892,23085+22])
                                      Pexp_ident "n" (lib/grammarFunctor.ml[892,23085+21]..[892,23085+22])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[892,23085+23]..[892,23085+24])
                                      Pexp_ident "f" (lib/grammarFunctor.ml[892,23085+23]..[892,23085+24])
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[896,23143+2]..[903,23376+83])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[896,23143+6]..[896,23143+11])
                              Ppat_var "print" (lib/grammarFunctor.ml[896,23143+6]..[896,23143+11])
                            expression (lib/grammarFunctor.ml[896,23143+12]..[903,23376+83]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[896,23143+12]..[896,23143+16])
                                Ppat_var "prod" (lib/grammarFunctor.ml[896,23143+12]..[896,23143+16])
                              expression (lib/grammarFunctor.ml[897,23162+4]..[903,23376+83])
                                Pexp_sequence
                                expression (lib/grammarFunctor.ml[897,23162+4]..[897,23162+32])
                                  Pexp_assert
                                  expression (lib/grammarFunctor.ml[897,23162+11]..[897,23162+32])
                                    Pexp_apply
                                    expression (lib/grammarFunctor.ml[897,23162+12]..[897,23162+15])
                                      Pexp_ident "not" (lib/grammarFunctor.ml[897,23162+12]..[897,23162+15])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[897,23162+16]..[897,23162+31])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[897,23162+17]..[897,23162+25])
                                            Pexp_ident "is_start" (lib/grammarFunctor.ml[897,23162+17]..[897,23162+25])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[897,23162+26]..[897,23162+30])
                                                Pexp_ident "prod" (lib/grammarFunctor.ml[897,23162+26]..[897,23162+30])
                                          ]
                                    ]
                                expression (lib/grammarFunctor.ml[898,23196+4]..[903,23376+83])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/grammarFunctor.ml[898,23196+8]..[898,23196+15])
                                        Ppat_tuple
                                        [
                                          pattern (lib/grammarFunctor.ml[898,23196+8]..[898,23196+10])
                                            Ppat_var "nt" (lib/grammarFunctor.ml[898,23196+8]..[898,23196+10])
                                          pattern (lib/grammarFunctor.ml[898,23196+12]..[898,23196+15])
                                            Ppat_var "rhs" (lib/grammarFunctor.ml[898,23196+12]..[898,23196+15])
                                        ]
                                      expression (lib/grammarFunctor.ml[898,23196+18]..[898,23196+30])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[898,23196+18]..[898,23196+30]) ghost
                                          Pexp_ident "Array.get" (lib/grammarFunctor.ml[898,23196+18]..[898,23196+30]) ghost
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[898,23196+18]..[898,23196+23])
                                              Pexp_ident "table" (lib/grammarFunctor.ml[898,23196+18]..[898,23196+23])
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[898,23196+25]..[898,23196+29])
                                              Pexp_ident "prod" (lib/grammarFunctor.ml[898,23196+25]..[898,23196+29])
                                        ]
                                  ]
                                  expression (lib/grammarFunctor.ml[899,23230+4]..[903,23376+83])
                                    Pexp_ifthenelse
                                    expression (lib/grammarFunctor.ml[899,23230+7]..[899,23230+27])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[899,23230+24]..[899,23230+25])
                                        Pexp_ident "=" (lib/grammarFunctor.ml[899,23230+24]..[899,23230+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[899,23230+7]..[899,23230+23])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[899,23230+7]..[899,23230+19])
                                              Pexp_ident "Array.length" (lib/grammarFunctor.ml[899,23230+7]..[899,23230+19])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[899,23230+20]..[899,23230+23])
                                                  Pexp_ident "rhs" (lib/grammarFunctor.ml[899,23230+20]..[899,23230+23])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[899,23230+26]..[899,23230+27])
                                            Pexp_constant PConst_int (0,None)
                                      ]
                                    expression (lib/grammarFunctor.ml[901,23309+6]..[901,23309+57])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[901,23309+6]..[901,23309+20])
                                        Pexp_ident "Printf.sprintf" (lib/grammarFunctor.ml[901,23309+6]..[901,23309+20])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[901,23309+21]..[901,23309+28])
                                            Pexp_constant PConst_string("%s ->",(lib/grammarFunctor.ml[901,23309+22]..[901,23309+27]),None)
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[901,23309+29]..[901,23309+57])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[901,23309+30]..[901,23309+47])
                                              Pexp_ident "Nonterminal.print" (lib/grammarFunctor.ml[901,23309+30]..[901,23309+47])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[901,23309+48]..[901,23309+53])
                                                  Pexp_construct "false" (lib/grammarFunctor.ml[901,23309+48]..[901,23309+53])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[901,23309+54]..[901,23309+56])
                                                  Pexp_ident "nt" (lib/grammarFunctor.ml[901,23309+54]..[901,23309+56])
                                            ]
                                      ]
                                    Some
                                      expression (lib/grammarFunctor.ml[903,23376+6]..[903,23376+83])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[903,23376+6]..[903,23376+20])
                                          Pexp_ident "Printf.sprintf" (lib/grammarFunctor.ml[903,23376+6]..[903,23376+20])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[903,23376+21]..[903,23376+31])
                                              Pexp_constant PConst_string("%s -> %s",(lib/grammarFunctor.ml[903,23376+22]..[903,23376+30]),None)
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[903,23376+32]..[903,23376+60])
                                              Pexp_apply
                                              expression (lib/grammarFunctor.ml[903,23376+33]..[903,23376+50])
                                                Pexp_ident "Nonterminal.print" (lib/grammarFunctor.ml[903,23376+33]..[903,23376+50])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[903,23376+51]..[903,23376+56])
                                                    Pexp_construct "false" (lib/grammarFunctor.ml[903,23376+51]..[903,23376+56])
                                                    None
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[903,23376+57]..[903,23376+59])
                                                    Pexp_ident "nt" (lib/grammarFunctor.ml[903,23376+57]..[903,23376+59])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[903,23376+61]..[903,23376+83])
                                              Pexp_apply
                                              expression (lib/grammarFunctor.ml[903,23376+62]..[903,23376+76])
                                                Pexp_ident "Symbol.printao" (lib/grammarFunctor.ml[903,23376+62]..[903,23376+76])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[903,23376+77]..[903,23376+78])
                                                    Pexp_constant PConst_int (0,None)
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[903,23376+79]..[903,23376+82])
                                                    Pexp_ident "rhs" (lib/grammarFunctor.ml[903,23376+79]..[903,23376+82])
                                              ]
                                        ]
                        ]
                      structure_item (lib/grammarFunctor.ml[905,23461+2]..[912,23730+66])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[905,23461+6]..[905,23461+14])
                              Ppat_var "describe" (lib/grammarFunctor.ml[905,23461+6]..[905,23461+14])
                            expression (lib/grammarFunctor.ml[905,23461+15]..[912,23730+66]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[905,23461+15]..[905,23461+21])
                                Ppat_var "gerund" (lib/grammarFunctor.ml[905,23461+15]..[905,23461+21])
                              expression (lib/grammarFunctor.ml[905,23461+22]..[912,23730+66]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[905,23461+22]..[905,23461+26])
                                  Ppat_var "prod" (lib/grammarFunctor.ml[905,23461+22]..[905,23461+26])
                                expression (lib/grammarFunctor.ml[906,23490+4]..[912,23730+66])
                                  Pexp_match
                                  expression (lib/grammarFunctor.ml[906,23490+10]..[906,23490+23])
                                    Pexp_apply
                                    expression (lib/grammarFunctor.ml[906,23490+10]..[906,23490+18])
                                      Pexp_ident "classify" (lib/grammarFunctor.ml[906,23490+10]..[906,23490+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[906,23490+19]..[906,23490+23])
                                          Pexp_ident "prod" (lib/grammarFunctor.ml[906,23490+19]..[906,23490+23])
                                    ]
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[907,23519+6]..[907,23519+13])
                                        Ppat_construct "Some" (lib/grammarFunctor.ml[907,23519+6]..[907,23519+10])
                                        Some
                                          []
                                          pattern (lib/grammarFunctor.ml[907,23519+11]..[907,23519+13])
                                            Ppat_var "nt" (lib/grammarFunctor.ml[907,23519+11]..[907,23519+13])
                                      expression (lib/grammarFunctor.ml[908,23536+8]..[909,23589+72])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/grammarFunctor.ml[908,23536+12]..[908,23536+18])
                                              Ppat_var "ending" (lib/grammarFunctor.ml[908,23536+12]..[908,23536+18])
                                            expression (lib/grammarFunctor.ml[908,23536+21]..[908,23536+49])
                                              Pexp_ifthenelse
                                              expression (lib/grammarFunctor.ml[908,23536+24]..[908,23536+30])
                                                Pexp_ident "gerund" (lib/grammarFunctor.ml[908,23536+24]..[908,23536+30])
                                              expression (lib/grammarFunctor.ml[908,23536+36]..[908,23536+41])
                                                Pexp_constant PConst_string("ing",(lib/grammarFunctor.ml[908,23536+37]..[908,23536+40]),None)
                                              Some
                                                expression (lib/grammarFunctor.ml[908,23536+47]..[908,23536+49])
                                                  Pexp_constant PConst_string("",(lib/grammarFunctor.ml[908,23536+48]..[908,23536+48]),None)
                                        ]
                                        expression (lib/grammarFunctor.ml[909,23589+8]..[909,23589+72])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[909,23589+8]..[909,23589+22])
                                            Pexp_ident "Printf.sprintf" (lib/grammarFunctor.ml[909,23589+8]..[909,23589+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[909,23589+23]..[909,23589+36])
                                                Pexp_constant PConst_string("accept%s %s",(lib/grammarFunctor.ml[909,23589+24]..[909,23589+35]),None)
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[909,23589+37]..[909,23589+43])
                                                Pexp_ident "ending" (lib/grammarFunctor.ml[909,23589+37]..[909,23589+43])
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[909,23589+44]..[909,23589+72])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[909,23589+45]..[909,23589+62])
                                                  Pexp_ident "Nonterminal.print" (lib/grammarFunctor.ml[909,23589+45]..[909,23589+62])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[909,23589+63]..[909,23589+68])
                                                      Pexp_construct "false" (lib/grammarFunctor.ml[909,23589+63]..[909,23589+68])
                                                      None
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[909,23589+69]..[909,23589+71])
                                                      Pexp_ident "nt" (lib/grammarFunctor.ml[909,23589+69]..[909,23589+71])
                                                ]
                                          ]
                                    <case>
                                      pattern (lib/grammarFunctor.ml[910,23662+6]..[910,23662+10])
                                        Ppat_construct "None" (lib/grammarFunctor.ml[910,23662+6]..[910,23662+10])
                                        None
                                      expression (lib/grammarFunctor.ml[911,23676+8]..[912,23730+66])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/grammarFunctor.ml[911,23676+12]..[911,23676+18])
                                              Ppat_var "ending" (lib/grammarFunctor.ml[911,23676+12]..[911,23676+18])
                                            expression (lib/grammarFunctor.ml[911,23676+21]..[911,23676+50])
                                              Pexp_ifthenelse
                                              expression (lib/grammarFunctor.ml[911,23676+24]..[911,23676+30])
                                                Pexp_ident "gerund" (lib/grammarFunctor.ml[911,23676+24]..[911,23676+30])
                                              expression (lib/grammarFunctor.ml[911,23676+36]..[911,23676+41])
                                                Pexp_constant PConst_string("ing",(lib/grammarFunctor.ml[911,23676+37]..[911,23676+40]),None)
                                              Some
                                                expression (lib/grammarFunctor.ml[911,23676+47]..[911,23676+50])
                                                  Pexp_constant PConst_string("e",(lib/grammarFunctor.ml[911,23676+48]..[911,23676+49]),None)
                                        ]
                                        expression (lib/grammarFunctor.ml[912,23730+8]..[912,23730+66])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[912,23730+8]..[912,23730+22])
                                            Pexp_ident "Printf.sprintf" (lib/grammarFunctor.ml[912,23730+8]..[912,23730+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[912,23730+23]..[912,23730+46])
                                                Pexp_constant PConst_string("reduc%s production %s",(lib/grammarFunctor.ml[912,23730+24]..[912,23730+45]),None)
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[912,23730+47]..[912,23730+53])
                                                Pexp_ident "ending" (lib/grammarFunctor.ml[912,23730+47]..[912,23730+53])
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[912,23730+54]..[912,23730+66])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[912,23730+55]..[912,23730+60])
                                                  Pexp_ident "print" (lib/grammarFunctor.ml[912,23730+55]..[912,23730+60])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[912,23730+61]..[912,23730+65])
                                                      Pexp_ident "prod" (lib/grammarFunctor.ml[912,23730+61]..[912,23730+65])
                                                ]
                                          ]
                                  ]
                        ]
                      structure_item (lib/grammarFunctor.ml[916,23827+2]..[917,23846+21])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[916,23827+6]..[916,23827+14])
                              Ppat_var "tabulate" (lib/grammarFunctor.ml[916,23827+6]..[916,23827+14])
                            expression (lib/grammarFunctor.ml[916,23827+15]..[917,23846+21]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[916,23827+15]..[916,23827+16])
                                Ppat_var "f" (lib/grammarFunctor.ml[916,23827+15]..[916,23827+16])
                              expression (lib/grammarFunctor.ml[917,23846+4]..[917,23846+21])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[917,23846+4]..[917,23846+17])
                                  Pexp_ident "Misc.tabulate" (lib/grammarFunctor.ml[917,23846+4]..[917,23846+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[917,23846+18]..[917,23846+19])
                                      Pexp_ident "n" (lib/grammarFunctor.ml[917,23846+18]..[917,23846+19])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[917,23846+20]..[917,23846+21])
                                      Pexp_ident "f" (lib/grammarFunctor.ml[917,23846+20]..[917,23846+21])
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[919,23869+2]..[920,23883+16])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[919,23869+6]..[919,23869+9])
                              Ppat_var "sum" (lib/grammarFunctor.ml[919,23869+6]..[919,23869+9])
                            expression (lib/grammarFunctor.ml[919,23869+10]..[920,23883+16]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[919,23869+10]..[919,23869+11])
                                Ppat_var "f" (lib/grammarFunctor.ml[919,23869+10]..[919,23869+11])
                              expression (lib/grammarFunctor.ml[920,23883+4]..[920,23883+16])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[920,23883+4]..[920,23883+12])
                                  Pexp_ident "Misc.sum" (lib/grammarFunctor.ml[920,23883+4]..[920,23883+12])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[920,23883+13]..[920,23883+14])
                                      Pexp_ident "n" (lib/grammarFunctor.ml[920,23883+13]..[920,23883+14])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[920,23883+15]..[920,23883+16])
                                      Pexp_ident "f" (lib/grammarFunctor.ml[920,23883+15]..[920,23883+16])
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[933,24486+2]..[935,24611+21])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[933,24486+6]..[933,24486+17])
                              Ppat_var "ever_useful" (lib/grammarFunctor.ml[933,24486+6]..[933,24486+17])
                            core_type (lib/grammarFunctor.ml[933,24486+20]..[933,24486+49])
                              Ptyp_constr "Hashtbl.t" (lib/grammarFunctor.ml[933,24486+40]..[933,24486+49])
                              [
                                core_type (lib/grammarFunctor.ml[933,24486+21]..[933,24486+32])
                                  Ptyp_constr "Positions.t" (lib/grammarFunctor.ml[933,24486+21]..[933,24486+32])
                                  []
                                core_type (lib/grammarFunctor.ml[933,24486+34]..[933,24486+38])
                                  Ptyp_constr "unit" (lib/grammarFunctor.ml[933,24486+34]..[933,24486+38])
                                  []
                              ]
                            expression (lib/grammarFunctor.ml[935,24611+4]..[935,24611+21])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[935,24611+4]..[935,24611+18])
                                Pexp_ident "Hashtbl.create" (lib/grammarFunctor.ml[935,24611+4]..[935,24611+18])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[935,24611+19]..[935,24611+21])
                                    Pexp_constant PConst_int (16,None)
                              ]
                        ]
                      structure_item (lib/grammarFunctor.ml[937,24634+2]..[946,24897+8])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[937,24634+6]..[937,24634+23])
                              Ppat_var "consult_prec_decl" (lib/grammarFunctor.ml[937,24634+6]..[937,24634+23])
                            expression (lib/grammarFunctor.ml[937,24634+24]..[946,24897+8]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[937,24634+24]..[937,24634+28])
                                Ppat_var "prod" (lib/grammarFunctor.ml[937,24634+24]..[937,24634+28])
                              expression (lib/grammarFunctor.ml[938,24665+4]..[946,24897+8])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/grammarFunctor.ml[938,24665+8]..[938,24665+12])
                                      Ppat_var "osym" (lib/grammarFunctor.ml[938,24665+8]..[938,24665+12])
                                    expression (lib/grammarFunctor.ml[938,24665+15]..[938,24665+31])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[938,24665+15]..[938,24665+31]) ghost
                                        Pexp_ident "Array.get" (lib/grammarFunctor.ml[938,24665+15]..[938,24665+31]) ghost
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[938,24665+15]..[938,24665+24])
                                            Pexp_ident "prec_decl" (lib/grammarFunctor.ml[938,24665+15]..[938,24665+24])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[938,24665+26]..[938,24665+30])
                                            Pexp_ident "prod" (lib/grammarFunctor.ml[938,24665+26]..[938,24665+30])
                                      ]
                                ]
                                expression (lib/grammarFunctor.ml[939,24700+4]..[946,24897+8])
                                  Pexp_tuple
                                  [
                                    expression (lib/grammarFunctor.ml[939,24700+4]..[945,24890+5])
                                      Pexp_lazy
                                      expression (lib/grammarFunctor.ml[939,24700+9]..[945,24890+5])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[940,24711+6]..[940,24711+17])
                                          Pexp_ident "Option.iter" (lib/grammarFunctor.ml[940,24711+6]..[940,24711+17])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[940,24711+18]..[944,24877+7])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (lib/grammarFunctor.ml[940,24711+23]..[940,24711+26])
                                                Ppat_var "sym" (lib/grammarFunctor.ml[940,24711+23]..[940,24711+26])
                                              expression (lib/grammarFunctor.ml[942,24794+8]..[943,24838+38])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (lib/grammarFunctor.ml[942,24794+12]..[942,24794+15])
                                                      Ppat_var "pos" (lib/grammarFunctor.ml[942,24794+12]..[942,24794+15])
                                                    expression (lib/grammarFunctor.ml[942,24794+18]..[942,24794+40])
                                                      Pexp_apply
                                                      expression (lib/grammarFunctor.ml[942,24794+18]..[942,24794+36])
                                                        Pexp_ident "Positions.position" (lib/grammarFunctor.ml[942,24794+18]..[942,24794+36])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/grammarFunctor.ml[942,24794+37]..[942,24794+40])
                                                            Pexp_ident "sym" (lib/grammarFunctor.ml[942,24794+37]..[942,24794+40])
                                                      ]
                                                ]
                                                expression (lib/grammarFunctor.ml[943,24838+8]..[943,24838+38])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[943,24838+8]..[943,24838+19])
                                                    Pexp_ident "Hashtbl.add" (lib/grammarFunctor.ml[943,24838+8]..[943,24838+19])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[943,24838+20]..[943,24838+31])
                                                        Pexp_ident "ever_useful" (lib/grammarFunctor.ml[943,24838+20]..[943,24838+31])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[943,24838+32]..[943,24838+35])
                                                        Pexp_ident "pos" (lib/grammarFunctor.ml[943,24838+32]..[943,24838+35])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[943,24838+36]..[943,24838+38])
                                                        Pexp_construct "()" (lib/grammarFunctor.ml[943,24838+36]..[943,24838+38])
                                                        None
                                                  ]
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[944,24877+8]..[944,24877+12])
                                              Pexp_ident "osym" (lib/grammarFunctor.ml[944,24877+8]..[944,24877+12])
                                        ]
                                    expression (lib/grammarFunctor.ml[946,24897+4]..[946,24897+8])
                                      Pexp_ident "osym" (lib/grammarFunctor.ml[946,24897+4]..[946,24897+8])
                                  ]
                        ]
                      structure_item (lib/grammarFunctor.ml[952,25087+2]..[963,25570+5])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[952,25087+6]..[952,25087+17])
                              Ppat_var "diagnostics" (lib/grammarFunctor.ml[952,25087+6]..[952,25087+17])
                            expression (lib/grammarFunctor.ml[952,25087+18]..[963,25570+5]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[952,25087+18]..[952,25087+20])
                                Ppat_construct "()" (lib/grammarFunctor.ml[952,25087+18]..[952,25087+20])
                                None
                              expression (lib/grammarFunctor.ml[953,25110+4]..[963,25570+5])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[953,25110+4]..[953,25110+9])
                                  Pexp_ident "iterx" (lib/grammarFunctor.ml[953,25110+4]..[953,25110+9])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[953,25110+10]..[963,25570+5])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lib/grammarFunctor.ml[953,25110+15]..[953,25110+19])
                                        Ppat_var "prod" (lib/grammarFunctor.ml[953,25110+15]..[953,25110+19])
                                      expression (lib/grammarFunctor.ml[954,25133+6]..[962,25557+12])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/grammarFunctor.ml[954,25133+10]..[954,25133+14])
                                              Ppat_var "osym" (lib/grammarFunctor.ml[954,25133+10]..[954,25133+14])
                                            expression (lib/grammarFunctor.ml[954,25133+17]..[954,25133+33])
                                              Pexp_apply
                                              expression (lib/grammarFunctor.ml[954,25133+17]..[954,25133+33]) ghost
                                                Pexp_ident "Array.get" (lib/grammarFunctor.ml[954,25133+17]..[954,25133+33]) ghost
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[954,25133+17]..[954,25133+26])
                                                    Pexp_ident "prec_decl" (lib/grammarFunctor.ml[954,25133+17]..[954,25133+26])
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[954,25133+28]..[954,25133+32])
                                                    Pexp_ident "prod" (lib/grammarFunctor.ml[954,25133+28]..[954,25133+32])
                                              ]
                                        ]
                                        expression (lib/grammarFunctor.ml[955,25170+6]..[962,25557+12])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[955,25170+6]..[955,25170+17])
                                            Pexp_ident "Option.iter" (lib/grammarFunctor.ml[955,25170+6]..[955,25170+17])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[955,25170+18]..[962,25557+7])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (lib/grammarFunctor.ml[955,25170+23]..[955,25170+26])
                                                  Ppat_var "sym" (lib/grammarFunctor.ml[955,25170+23]..[955,25170+26])
                                                expression (lib/grammarFunctor.ml[957,25264+8]..[961,25545+11])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (lib/grammarFunctor.ml[957,25264+12]..[957,25264+15])
                                                        Ppat_var "pos" (lib/grammarFunctor.ml[957,25264+12]..[957,25264+15])
                                                      expression (lib/grammarFunctor.ml[957,25264+18]..[957,25264+40])
                                                        Pexp_apply
                                                        expression (lib/grammarFunctor.ml[957,25264+18]..[957,25264+36])
                                                          Pexp_ident "Positions.position" (lib/grammarFunctor.ml[957,25264+18]..[957,25264+36])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/grammarFunctor.ml[957,25264+37]..[957,25264+40])
                                                              Pexp_ident "sym" (lib/grammarFunctor.ml[957,25264+37]..[957,25264+40])
                                                        ]
                                                  ]
                                                  expression (lib/grammarFunctor.ml[958,25308+8]..[961,25545+11])
                                                    Pexp_ifthenelse
                                                    expression (lib/grammarFunctor.ml[958,25308+11]..[958,25308+44])
                                                      Pexp_apply
                                                      expression (lib/grammarFunctor.ml[958,25308+11]..[958,25308+14])
                                                        Pexp_ident "not" (lib/grammarFunctor.ml[958,25308+11]..[958,25308+14])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/grammarFunctor.ml[958,25308+15]..[958,25308+44])
                                                            Pexp_apply
                                                            expression (lib/grammarFunctor.ml[958,25308+16]..[958,25308+27])
                                                              Pexp_ident "Hashtbl.mem" (lib/grammarFunctor.ml[958,25308+16]..[958,25308+27])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/grammarFunctor.ml[958,25308+28]..[958,25308+39])
                                                                  Pexp_ident "ever_useful" (lib/grammarFunctor.ml[958,25308+28]..[958,25308+39])
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/grammarFunctor.ml[958,25308+40]..[958,25308+43])
                                                                  Pexp_ident "pos" (lib/grammarFunctor.ml[958,25308+40]..[958,25308+43])
                                                            ]
                                                      ]
                                                    expression (lib/grammarFunctor.ml[958,25308+50]..[961,25545+11])
                                                      Pexp_apply
                                                      expression (lib/grammarFunctor.ml[960,25452+10]..[960,25452+21])
                                                        Pexp_ident "Hashtbl.add" (lib/grammarFunctor.ml[960,25452+10]..[960,25452+21])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/grammarFunctor.ml[960,25452+22]..[960,25452+33])
                                                            Pexp_ident "ever_useful" (lib/grammarFunctor.ml[960,25452+22]..[960,25452+33])
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/grammarFunctor.ml[960,25452+34]..[960,25452+37])
                                                            Pexp_ident "pos" (lib/grammarFunctor.ml[960,25452+34]..[960,25452+37])
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/grammarFunctor.ml[960,25452+38]..[960,25452+40])
                                                            Pexp_construct "()" (lib/grammarFunctor.ml[960,25452+38]..[960,25452+40])
                                                            None
                                                      ]
                                                    None
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[962,25557+8]..[962,25557+12])
                                                Pexp_ident "osym" (lib/grammarFunctor.ml[962,25557+8]..[962,25557+12])
                                          ]
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[970,25797+2]..[973,25871+25])
                        Pstr_type Rec
                        [
                          type_declaration "production_level" (lib/grammarFunctor.ml[970,25797+7]..[970,25797+23]) (lib/grammarFunctor.ml[970,25797+2]..[973,25871+25])
                            ptype_params =
                              []
                            ptype_cstrs =
                              []
                            ptype_kind =
                              Ptype_variant
                                [
                                  (lib/grammarFunctor.ml[971,25823+4]..[971,25823+11])
                                    "PNone" (lib/grammarFunctor.ml[971,25823+6]..[971,25823+11])
                                    []
                                    None
                                  (lib/grammarFunctor.ml[972,25835+4]..[972,25835+35])
                                    "PRightmostToken" (lib/grammarFunctor.ml[972,25835+6]..[972,25835+21])
                                    [
                                      core_type (lib/grammarFunctor.ml[972,25835+25]..[972,25835+35])
                                        Ptyp_constr "Terminal.t" (lib/grammarFunctor.ml[972,25835+25]..[972,25835+35])
                                        []
                                    ]
                                    None
                                  (lib/grammarFunctor.ml[973,25871+4]..[973,25871+25])
                                    "PPrecDecl" (lib/grammarFunctor.ml[973,25871+6]..[973,25871+15])
                                    [
                                      core_type (lib/grammarFunctor.ml[973,25871+19]..[973,25871+25])
                                        Ptyp_constr "symbol" (lib/grammarFunctor.ml[973,25871+19]..[973,25871+25])
                                        []
                                    ]
                                    None
                                ]
                            ptype_private = Public
                            ptype_manifest =
                              None
                        ]
                      structure_item (lib/grammarFunctor.ml[975,25898+2]..[982,26085+22])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[975,25898+6]..[975,25898+24])
                              Ppat_var "rightmost_terminal" (lib/grammarFunctor.ml[975,25898+6]..[975,25898+24])
                            expression (lib/grammarFunctor.ml[975,25898+25]..[982,26085+22]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[975,25898+25]..[975,25898+29])
                                Ppat_var "prod" (lib/grammarFunctor.ml[975,25898+25]..[975,25898+29])
                              expression (lib/grammarFunctor.ml[976,25930+4]..[982,26085+22])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[976,25930+4]..[976,25930+19])
                                  Pexp_ident "Array.fold_left" (lib/grammarFunctor.ml[976,25930+4]..[976,25930+19])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[976,25930+20]..[982,26085+5])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lib/grammarFunctor.ml[976,25930+25]..[976,25930+29])
                                        Ppat_var "accu" (lib/grammarFunctor.ml[976,25930+25]..[976,25930+29])
                                      expression (lib/grammarFunctor.ml[976,25930+30]..[981,26070+14]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lib/grammarFunctor.ml[976,25930+30]..[976,25930+36])
                                          Ppat_var "symbol" (lib/grammarFunctor.ml[976,25930+30]..[976,25930+36])
                                        expression (lib/grammarFunctor.ml[977,25970+6]..[981,26070+14])
                                          Pexp_match
                                          expression (lib/grammarFunctor.ml[977,25970+12]..[977,25970+18])
                                            Pexp_ident "symbol" (lib/grammarFunctor.ml[977,25970+12]..[977,25970+18])
                                          [
                                            <case>
                                              pattern (lib/grammarFunctor.ml[978,25994+8]..[978,25994+20])
                                                Ppat_construct "Symbol.T" (lib/grammarFunctor.ml[978,25994+8]..[978,25994+16])
                                                Some
                                                  []
                                                  pattern (lib/grammarFunctor.ml[978,25994+17]..[978,25994+20])
                                                    Ppat_var "tok" (lib/grammarFunctor.ml[978,25994+17]..[978,25994+20])
                                              expression (lib/grammarFunctor.ml[979,26018+10]..[979,26018+29])
                                                Pexp_construct "PRightmostToken" (lib/grammarFunctor.ml[979,26018+10]..[979,26018+25])
                                                Some
                                                  expression (lib/grammarFunctor.ml[979,26018+26]..[979,26018+29])
                                                    Pexp_ident "tok" (lib/grammarFunctor.ml[979,26018+26]..[979,26018+29])
                                            <case>
                                              pattern (lib/grammarFunctor.ml[980,26048+8]..[980,26048+18])
                                                Ppat_construct "Symbol.N" (lib/grammarFunctor.ml[980,26048+8]..[980,26048+16])
                                                Some
                                                  []
                                                  pattern (lib/grammarFunctor.ml[980,26048+17]..[980,26048+18])
                                                    Ppat_any
                                              expression (lib/grammarFunctor.ml[981,26070+10]..[981,26070+14])
                                                Pexp_ident "accu" (lib/grammarFunctor.ml[981,26070+10]..[981,26070+14])
                                          ]
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[982,26085+6]..[982,26085+11])
                                      Pexp_construct "PNone" (lib/grammarFunctor.ml[982,26085+6]..[982,26085+11])
                                      None
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[982,26085+12]..[982,26085+22])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[982,26085+13]..[982,26085+16])
                                        Pexp_ident "rhs" (lib/grammarFunctor.ml[982,26085+13]..[982,26085+16])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[982,26085+17]..[982,26085+21])
                                            Pexp_ident "prod" (lib/grammarFunctor.ml[982,26085+17]..[982,26085+21])
                                      ]
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[984,26109+2]..[985,26131+39])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[984,26109+6]..[984,26109+13])
                              Ppat_var "combine" (lib/grammarFunctor.ml[984,26109+6]..[984,26109+13])
                            expression (lib/grammarFunctor.ml[984,26109+14]..[985,26131+39]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[984,26109+14]..[984,26109+16])
                                Ppat_var "e1" (lib/grammarFunctor.ml[984,26109+14]..[984,26109+16])
                              expression (lib/grammarFunctor.ml[984,26109+17]..[985,26131+39]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[984,26109+17]..[984,26109+19])
                                  Ppat_var "e2" (lib/grammarFunctor.ml[984,26109+17]..[984,26109+19])
                                expression (lib/grammarFunctor.ml[985,26131+4]..[985,26131+39])
                                  Pexp_lazy
                                  expression (lib/grammarFunctor.ml[985,26131+9]..[985,26131+39])
                                    Pexp_sequence
                                    expression (lib/grammarFunctor.ml[985,26131+10]..[985,26131+23])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[985,26131+10]..[985,26131+20])
                                        Pexp_ident "Lazy.force" (lib/grammarFunctor.ml[985,26131+10]..[985,26131+20])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[985,26131+21]..[985,26131+23])
                                            Pexp_ident "e1" (lib/grammarFunctor.ml[985,26131+21]..[985,26131+23])
                                      ]
                                    expression (lib/grammarFunctor.ml[985,26131+25]..[985,26131+38])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[985,26131+25]..[985,26131+35])
                                        Pexp_ident "Lazy.force" (lib/grammarFunctor.ml[985,26131+25]..[985,26131+35])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[985,26131+36]..[985,26131+38])
                                            Pexp_ident "e2" (lib/grammarFunctor.ml[985,26131+36]..[985,26131+38])
                                      ]
                        ]
                      structure_item (lib/grammarFunctor.ml[987,26172+2]..[1004,26698+34])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[987,26172+6]..[987,26172+16])
                              Ppat_var "precedence" (lib/grammarFunctor.ml[987,26172+6]..[987,26172+16])
                            expression (lib/grammarFunctor.ml[987,26172+17]..[1004,26698+34]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[987,26172+17]..[987,26172+21])
                                Ppat_var "prod" (lib/grammarFunctor.ml[987,26172+17]..[987,26172+21])
                              expression (lib/grammarFunctor.ml[988,26196+4]..[1004,26698+34])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/grammarFunctor.ml[988,26196+8]..[988,26196+24])
                                      Ppat_tuple
                                      [
                                        pattern (lib/grammarFunctor.ml[988,26196+8]..[988,26196+13])
                                          Ppat_var "fact1" (lib/grammarFunctor.ml[988,26196+8]..[988,26196+13])
                                        pattern (lib/grammarFunctor.ml[988,26196+15]..[988,26196+24])
                                          Ppat_var "prec_decl" (lib/grammarFunctor.ml[988,26196+15]..[988,26196+24])
                                      ]
                                    expression (lib/grammarFunctor.ml[988,26196+27]..[988,26196+49])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[988,26196+27]..[988,26196+44])
                                        Pexp_ident "consult_prec_decl" (lib/grammarFunctor.ml[988,26196+27]..[988,26196+44])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[988,26196+45]..[988,26196+49])
                                            Pexp_ident "prod" (lib/grammarFunctor.ml[988,26196+45]..[988,26196+49])
                                      ]
                                ]
                                expression (lib/grammarFunctor.ml[989,26249+4]..[1004,26698+34])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/grammarFunctor.ml[989,26249+8]..[989,26249+17])
                                        Ppat_var "oterminal" (lib/grammarFunctor.ml[989,26249+8]..[989,26249+17])
                                      expression (lib/grammarFunctor.ml[990,26269+6]..[994,26386+28])
                                        Pexp_match
                                        expression (lib/grammarFunctor.ml[990,26269+12]..[990,26269+21])
                                          Pexp_ident "prec_decl" (lib/grammarFunctor.ml[990,26269+12]..[990,26269+21])
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[991,26296+8]..[991,26296+12])
                                              Ppat_construct "None" (lib/grammarFunctor.ml[991,26296+8]..[991,26296+12])
                                              None
                                            expression (lib/grammarFunctor.ml[992,26312+10]..[992,26312+33])
                                              Pexp_apply
                                              expression (lib/grammarFunctor.ml[992,26312+10]..[992,26312+28])
                                                Pexp_ident "rightmost_terminal" (lib/grammarFunctor.ml[992,26312+10]..[992,26312+28])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[992,26312+29]..[992,26312+33])
                                                    Pexp_ident "prod" (lib/grammarFunctor.ml[992,26312+29]..[992,26312+33])
                                              ]
                                          <case>
                                            pattern (lib/grammarFunctor.ml[993,26346+8]..[993,26346+36])
                                              Ppat_construct "Some" (lib/grammarFunctor.ml[993,26346+8]..[993,26346+12])
                                              Some
                                                []
                                                pattern (lib/grammarFunctor.ml[993,26346+13]..[993,26346+36])
                                                  Ppat_record Open
                                                  [
                                                    "value" (lib/grammarFunctor.ml[993,26346+15]..[993,26346+20])
                                                      pattern (lib/grammarFunctor.ml[993,26346+23]..[993,26346+31])
                                                        Ppat_var "terminal" (lib/grammarFunctor.ml[993,26346+23]..[993,26346+31])
                                                  ]
                                            expression (lib/grammarFunctor.ml[994,26386+10]..[994,26386+28])
                                              Pexp_construct "PPrecDecl" (lib/grammarFunctor.ml[994,26386+10]..[994,26386+19])
                                              Some
                                                expression (lib/grammarFunctor.ml[994,26386+20]..[994,26386+28])
                                                  Pexp_ident "terminal" (lib/grammarFunctor.ml[994,26386+20]..[994,26386+28])
                                        ]
                                  ]
                                  expression (lib/grammarFunctor.ml[996,26422+4]..[1004,26698+34])
                                    Pexp_match
                                    expression (lib/grammarFunctor.ml[996,26422+10]..[996,26422+19])
                                      Pexp_ident "oterminal" (lib/grammarFunctor.ml[996,26422+10]..[996,26422+19])
                                    [
                                      <case>
                                        pattern (lib/grammarFunctor.ml[997,26447+6]..[997,26447+11])
                                          Ppat_construct "PNone" (lib/grammarFunctor.ml[997,26447+6]..[997,26447+11])
                                          None
                                        expression (lib/grammarFunctor.ml[998,26462+8]..[998,26462+34])
                                          Pexp_tuple
                                          [
                                            expression (lib/grammarFunctor.ml[998,26462+8]..[998,26462+13])
                                              Pexp_ident "fact1" (lib/grammarFunctor.ml[998,26462+8]..[998,26462+13])
                                            expression (lib/grammarFunctor.ml[998,26462+15]..[998,26462+34])
                                              Pexp_construct "UndefinedPrecedence" (lib/grammarFunctor.ml[998,26462+15]..[998,26462+34])
                                              None
                                          ]
                                      <case>
                                        pattern (lib/grammarFunctor.ml[999,26497+6]..[999,26497+25])
                                          Ppat_construct "PRightmostToken" (lib/grammarFunctor.ml[999,26497+6]..[999,26497+21])
                                          Some
                                            []
                                            pattern (lib/grammarFunctor.ml[999,26497+22]..[999,26497+25])
                                              Ppat_var "tok" (lib/grammarFunctor.ml[999,26497+22]..[999,26497+25])
                                        expression (lib/grammarFunctor.ml[1000,26526+8]..[1001,26586+34])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/grammarFunctor.ml[1000,26526+12]..[1000,26526+24])
                                                Ppat_tuple
                                                [
                                                  pattern (lib/grammarFunctor.ml[1000,26526+12]..[1000,26526+17])
                                                    Ppat_var "fact2" (lib/grammarFunctor.ml[1000,26526+12]..[1000,26526+17])
                                                  pattern (lib/grammarFunctor.ml[1000,26526+19]..[1000,26526+24])
                                                    Ppat_var "level" (lib/grammarFunctor.ml[1000,26526+19]..[1000,26526+24])
                                                ]
                                              expression (lib/grammarFunctor.ml[1000,26526+27]..[1000,26526+56])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[1000,26526+27]..[1000,26526+52])
                                                  Pexp_ident "Terminal.precedence_level" (lib/grammarFunctor.ml[1000,26526+27]..[1000,26526+52])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[1000,26526+53]..[1000,26526+56])
                                                      Pexp_ident "tok" (lib/grammarFunctor.ml[1000,26526+53]..[1000,26526+56])
                                                ]
                                          ]
                                          expression (lib/grammarFunctor.ml[1001,26586+8]..[1001,26586+34])
                                            Pexp_tuple
                                            [
                                              expression (lib/grammarFunctor.ml[1001,26586+8]..[1001,26586+27])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[1001,26586+8]..[1001,26586+15])
                                                  Pexp_ident "combine" (lib/grammarFunctor.ml[1001,26586+8]..[1001,26586+15])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[1001,26586+16]..[1001,26586+21])
                                                      Pexp_ident "fact1" (lib/grammarFunctor.ml[1001,26586+16]..[1001,26586+21])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[1001,26586+22]..[1001,26586+27])
                                                      Pexp_ident "fact2" (lib/grammarFunctor.ml[1001,26586+22]..[1001,26586+27])
                                                ]
                                              expression (lib/grammarFunctor.ml[1001,26586+29]..[1001,26586+34])
                                                Pexp_ident "level" (lib/grammarFunctor.ml[1001,26586+29]..[1001,26586+34])
                                            ]
                                      <case>
                                        pattern (lib/grammarFunctor.ml[1002,26621+6]..[1002,26621+18])
                                          Ppat_construct "PPrecDecl" (lib/grammarFunctor.ml[1002,26621+6]..[1002,26621+15])
                                          Some
                                            []
                                            pattern (lib/grammarFunctor.ml[1002,26621+16]..[1002,26621+18])
                                              Ppat_var "id" (lib/grammarFunctor.ml[1002,26621+16]..[1002,26621+18])
                                        expression (lib/grammarFunctor.ml[1003,26643+8]..[1004,26698+34])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/grammarFunctor.ml[1003,26643+12]..[1003,26643+24])
                                                Ppat_tuple
                                                [
                                                  pattern (lib/grammarFunctor.ml[1003,26643+12]..[1003,26643+17])
                                                    Ppat_var "fact2" (lib/grammarFunctor.ml[1003,26643+12]..[1003,26643+17])
                                                  pattern (lib/grammarFunctor.ml[1003,26643+19]..[1003,26643+24])
                                                    Ppat_var "level" (lib/grammarFunctor.ml[1003,26643+19]..[1003,26643+24])
                                                ]
                                              expression (lib/grammarFunctor.ml[1003,26643+27]..[1003,26643+50])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[1003,26643+27]..[1003,26643+47])
                                                  Pexp_ident "TokPrecedence.leveli" (lib/grammarFunctor.ml[1003,26643+27]..[1003,26643+47])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[1003,26643+48]..[1003,26643+50])
                                                      Pexp_ident "id" (lib/grammarFunctor.ml[1003,26643+48]..[1003,26643+50])
                                                ]
                                          ]
                                          expression (lib/grammarFunctor.ml[1004,26698+8]..[1004,26698+34])
                                            Pexp_tuple
                                            [
                                              expression (lib/grammarFunctor.ml[1004,26698+8]..[1004,26698+27])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[1004,26698+8]..[1004,26698+15])
                                                  Pexp_ident "combine" (lib/grammarFunctor.ml[1004,26698+8]..[1004,26698+15])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[1004,26698+16]..[1004,26698+21])
                                                      Pexp_ident "fact1" (lib/grammarFunctor.ml[1004,26698+16]..[1004,26698+21])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[1004,26698+22]..[1004,26698+27])
                                                      Pexp_ident "fact2" (lib/grammarFunctor.ml[1004,26698+22]..[1004,26698+27])
                                                ]
                                              expression (lib/grammarFunctor.ml[1004,26698+29]..[1004,26698+34])
                                                Pexp_ident "level" (lib/grammarFunctor.ml[1004,26698+29]..[1004,26698+34])
                                            ]
                                    ]
                        ]
                    ]
              structure_item (lib/grammarFunctor.ml[1008,26739+0]..[1009,26770+38])
                Pstr_value Nonrec
                [
                  <def>
                    pattern (lib/grammarFunctor.ml[1008,26739+4]..[1008,26739+28])
                      Ppat_var "grammar_uses_error_token" (lib/grammarFunctor.ml[1008,26739+4]..[1008,26739+28])
                    expression (lib/grammarFunctor.ml[1009,26770+2]..[1009,26770+38])
                      Pexp_apply
                      expression (lib/grammarFunctor.ml[1009,26770+2]..[1009,26770+3])
                        Pexp_ident "!" (lib/grammarFunctor.ml[1009,26770+2]..[1009,26770+3])
                      [
                        <arg>
                        Nolabel
                          expression (lib/grammarFunctor.ml[1009,26770+3]..[1009,26770+38])
                            Pexp_ident "Production.grammar_uses_error_token" (lib/grammarFunctor.ml[1009,26770+3]..[1009,26770+38])
                      ]
                ]
              structure_item (lib/grammarFunctor.ml[1014,26919+0]..[1025,27128+3])
                Pstr_module
                "ProductionMap" (lib/grammarFunctor.ml[1014,26919+7]..[1014,26919+20])
                  module_expr (lib/grammarFunctor.ml[1014,26919+23]..[1025,27128+3])
                    Pmod_structure
                    [
                      structure_item (lib/grammarFunctor.ml[1016,26950+2]..[1016,26950+22])
                        Pstr_include                        module_expr (lib/grammarFunctor.ml[1016,26950+10]..[1016,26950+22])
                          Pmod_ident "Patricia.Big" (lib/grammarFunctor.ml[1016,26950+10]..[1016,26950+22])
                      structure_item (lib/grammarFunctor.ml[1020,27026+2]..[1023,27115+11])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1020,27026+6]..[1020,27026+11])
                              Ppat_var "start" (lib/grammarFunctor.ml[1020,27026+6]..[1020,27026+11])
                            expression (lib/grammarFunctor.ml[1020,27026+12]..[1023,27115+11]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[1020,27026+12]..[1020,27026+13])
                                Ppat_var "f" (lib/grammarFunctor.ml[1020,27026+12]..[1020,27026+13])
                              expression (lib/grammarFunctor.ml[1021,27042+4]..[1023,27115+11])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[1021,27042+4]..[1021,27042+14])
                                  Pexp_ident "Misc.foldi" (lib/grammarFunctor.ml[1021,27042+4]..[1021,27042+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[1021,27042+15]..[1021,27042+31])
                                      Pexp_ident "Production.start" (lib/grammarFunctor.ml[1021,27042+15]..[1021,27042+31])
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[1021,27042+32]..[1023,27115+5])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lib/grammarFunctor.ml[1021,27042+37]..[1021,27042+41])
                                        Ppat_var "prod" (lib/grammarFunctor.ml[1021,27042+37]..[1021,27042+41])
                                      expression (lib/grammarFunctor.ml[1021,27042+42]..[1022,27089+25]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lib/grammarFunctor.ml[1021,27042+42]..[1021,27042+43])
                                          Ppat_var "m" (lib/grammarFunctor.ml[1021,27042+42]..[1021,27042+43])
                                        expression (lib/grammarFunctor.ml[1022,27089+6]..[1022,27089+25])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[1022,27089+6]..[1022,27089+9])
                                            Pexp_ident "add" (lib/grammarFunctor.ml[1022,27089+6]..[1022,27089+9])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[1022,27089+10]..[1022,27089+14])
                                                Pexp_ident "prod" (lib/grammarFunctor.ml[1022,27089+10]..[1022,27089+14])
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[1022,27089+15]..[1022,27089+23])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[1022,27089+16]..[1022,27089+17])
                                                  Pexp_ident "f" (lib/grammarFunctor.ml[1022,27089+16]..[1022,27089+17])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[1022,27089+18]..[1022,27089+22])
                                                      Pexp_ident "prod" (lib/grammarFunctor.ml[1022,27089+18]..[1022,27089+22])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[1022,27089+24]..[1022,27089+25])
                                                Pexp_ident "m" (lib/grammarFunctor.ml[1022,27089+24]..[1022,27089+25])
                                          ]
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[1023,27115+6]..[1023,27115+11])
                                      Pexp_ident "empty" (lib/grammarFunctor.ml[1023,27115+6]..[1023,27115+11])
                                ]
                        ]
                    ]
              structure_item (lib/grammarFunctor.ml[1036,27594+0]..[1160,31687+3])
                Pstr_module
                "GenericAnalysis" (lib/grammarFunctor.ml[1036,27594+7]..[1036,27594+22])
                  module_expr (lib/grammarFunctor.ml[1037,27617+2]..[1160,31687+3])
                    Pmod_functor "P" (lib/grammarFunctor.ml[1037,27617+3]..[1037,27617+4])
                    module_type (lib/grammarFunctor.ml[1037,27617+7]..[1037,27617+19])
                      Pmty_ident "Fix.PROPERTY" (lib/grammarFunctor.ml[1037,27617+7]..[1037,27617+19])
                    module_expr (lib/grammarFunctor.ml[1038,27638+2]..[1160,31687+3])
                      Pmod_functor "S" (lib/grammarFunctor.ml[1038,27638+3]..[1038,27638+4])
                      module_type (lib/grammarFunctor.ml[1038,27638+7]..[1070,29048+5])
                        Pmty_signature
                        [
                          signature_item (lib/grammarFunctor.ml[1039,27649+4]..[1039,27649+10])
                            Psig_open Fresh "P" (lib/grammarFunctor.ml[1039,27649+9]..[1039,27649+10])
                          signature_item (lib/grammarFunctor.ml[1045,27876+4]..[1045,27876+50])
                            Psig_value
                            value_description "shortcut" (lib/grammarFunctor.ml[1045,27876+8]..[1045,27876+16]) (lib/grammarFunctor.ml[1045,27876+4]..[1045,27876+50])
                              core_type (lib/grammarFunctor.ml[1045,27876+18]..[1045,27876+50])
                                Ptyp_arrow
                                Nolabel
                                core_type (lib/grammarFunctor.ml[1045,27876+18]..[1045,27876+31])
                                  Ptyp_constr "Nonterminal.t" (lib/grammarFunctor.ml[1045,27876+18]..[1045,27876+31])
                                  []
                                core_type (lib/grammarFunctor.ml[1045,27876+35]..[1045,27876+50])
                                  Ptyp_constr "option" (lib/grammarFunctor.ml[1045,27876+44]..[1045,27876+50])
                                  [
                                    core_type (lib/grammarFunctor.ml[1045,27876+35]..[1045,27876+43])
                                      Ptyp_constr "property" (lib/grammarFunctor.ml[1045,27876+35]..[1045,27876+43])
                                      []
                                  ]
                              []
                          signature_item (lib/grammarFunctor.ml[1048,27987+4]..[1048,27987+40])
                            Psig_value
                            value_description "terminal" (lib/grammarFunctor.ml[1048,27987+8]..[1048,27987+16]) (lib/grammarFunctor.ml[1048,27987+4]..[1048,27987+40])
                              core_type (lib/grammarFunctor.ml[1048,27987+18]..[1048,27987+40])
                                Ptyp_arrow
                                Nolabel
                                core_type (lib/grammarFunctor.ml[1048,27987+18]..[1048,27987+28])
                                  Ptyp_constr "Terminal.t" (lib/grammarFunctor.ml[1048,27987+18]..[1048,27987+28])
                                  []
                                core_type (lib/grammarFunctor.ml[1048,27987+32]..[1048,27987+40])
                                  Ptyp_constr "property" (lib/grammarFunctor.ml[1048,27987+32]..[1048,27987+40])
                                  []
                              []
                          signature_item (lib/grammarFunctor.ml[1054,28283+4]..[1054,28283+63])
                            Psig_value
                            value_description "disjunction" (lib/grammarFunctor.ml[1054,28283+8]..[1054,28283+19]) (lib/grammarFunctor.ml[1054,28283+4]..[1054,28283+63])
                              core_type (lib/grammarFunctor.ml[1054,28283+21]..[1054,28283+63])
                                Ptyp_arrow
                                Nolabel
                                core_type (lib/grammarFunctor.ml[1054,28283+21]..[1054,28283+29])
                                  Ptyp_constr "property" (lib/grammarFunctor.ml[1054,28283+21]..[1054,28283+29])
                                  []
                                core_type (lib/grammarFunctor.ml[1054,28283+33]..[1054,28283+63])
                                  Ptyp_arrow
                                  Nolabel
                                  core_type (lib/grammarFunctor.ml[1054,28283+34]..[1054,28283+50])
                                    Ptyp_arrow
                                    Nolabel
                                    core_type (lib/grammarFunctor.ml[1054,28283+34]..[1054,28283+38])
                                      Ptyp_constr "unit" (lib/grammarFunctor.ml[1054,28283+34]..[1054,28283+38])
                                      []
                                    core_type (lib/grammarFunctor.ml[1054,28283+42]..[1054,28283+50])
                                      Ptyp_constr "property" (lib/grammarFunctor.ml[1054,28283+42]..[1054,28283+50])
                                      []
                                  core_type (lib/grammarFunctor.ml[1054,28283+55]..[1054,28283+63])
                                    Ptyp_constr "property" (lib/grammarFunctor.ml[1054,28283+55]..[1054,28283+63])
                                    []
                              []
                          signature_item (lib/grammarFunctor.ml[1064,28837+4]..[1064,28837+75])
                            Psig_value
                            value_description "conjunction" (lib/grammarFunctor.ml[1064,28837+8]..[1064,28837+19]) (lib/grammarFunctor.ml[1064,28837+4]..[1064,28837+75])
                              core_type (lib/grammarFunctor.ml[1064,28837+21]..[1064,28837+75])
                                Ptyp_arrow
                                Nolabel
                                core_type (lib/grammarFunctor.ml[1064,28837+21]..[1064,28837+29])
                                  Ptyp_constr "Symbol.t" (lib/grammarFunctor.ml[1064,28837+21]..[1064,28837+29])
                                  []
                                core_type (lib/grammarFunctor.ml[1064,28837+33]..[1064,28837+75])
                                  Ptyp_arrow
                                  Nolabel
                                  core_type (lib/grammarFunctor.ml[1064,28837+33]..[1064,28837+41])
                                    Ptyp_constr "property" (lib/grammarFunctor.ml[1064,28837+33]..[1064,28837+41])
                                    []
                                  core_type (lib/grammarFunctor.ml[1064,28837+45]..[1064,28837+75])
                                    Ptyp_arrow
                                    Nolabel
                                    core_type (lib/grammarFunctor.ml[1064,28837+46]..[1064,28837+62])
                                      Ptyp_arrow
                                      Nolabel
                                      core_type (lib/grammarFunctor.ml[1064,28837+46]..[1064,28837+50])
                                        Ptyp_constr "unit" (lib/grammarFunctor.ml[1064,28837+46]..[1064,28837+50])
                                        []
                                      core_type (lib/grammarFunctor.ml[1064,28837+54]..[1064,28837+62])
                                        Ptyp_constr "property" (lib/grammarFunctor.ml[1064,28837+54]..[1064,28837+62])
                                        []
                                    core_type (lib/grammarFunctor.ml[1064,28837+67]..[1064,28837+75])
                                      Ptyp_constr "property" (lib/grammarFunctor.ml[1064,28837+67]..[1064,28837+75])
                                      []
                              []
                          signature_item (lib/grammarFunctor.ml[1068,29021+4]..[1068,29021+25])
                            Psig_value
                            value_description "epsilon" (lib/grammarFunctor.ml[1068,29021+8]..[1068,29021+15]) (lib/grammarFunctor.ml[1068,29021+4]..[1068,29021+25])
                              core_type (lib/grammarFunctor.ml[1068,29021+17]..[1068,29021+25])
                                Ptyp_constr "property" (lib/grammarFunctor.ml[1068,29021+17]..[1068,29021+25])
                                []
                              []
                        ]
                      module_expr (lib/grammarFunctor.ml[1071,29055+0]..[1160,31687+3])
                        Pmod_constraint
                        module_expr (lib/grammarFunctor.ml[1088,29622+6]..[1160,31687+3])
                          Pmod_structure
                          [
                            structure_item (lib/grammarFunctor.ml[1089,29635+2]..[1089,29635+8])
                              Pstr_open Fresh
                              module_expr (lib/grammarFunctor.ml[1089,29635+7]..[1089,29635+8])
                                Pmod_ident "P" (lib/grammarFunctor.ml[1089,29635+7]..[1089,29635+8])
                            structure_item (lib/grammarFunctor.ml[1097,29883+2]..[1103,30059+14])
                              Pstr_value Nonrec
                              [
                                <def>
                                  pattern (lib/grammarFunctor.ml[1097,29883+6]..[1097,29883+12])
                                    Ppat_var "symbol" (lib/grammarFunctor.ml[1097,29883+6]..[1097,29883+12])
                                  expression (lib/grammarFunctor.ml[1097,29883+13]..[1103,30059+14]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lib/grammarFunctor.ml[1097,29883+13]..[1097,29883+16])
                                      Ppat_var "sym" (lib/grammarFunctor.ml[1097,29883+13]..[1097,29883+16])
                                    expression (lib/grammarFunctor.ml[1097,29883+17]..[1103,30059+14]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lib/grammarFunctor.ml[1097,29883+17]..[1097,29883+20])
                                        Ppat_var "get" (lib/grammarFunctor.ml[1097,29883+17]..[1097,29883+20])
                                      expression (lib/grammarFunctor.ml[1097,29883+21]..[1103,30059+14])
                                        Pexp_constraint
                                        expression (lib/grammarFunctor.ml[1098,29917+4]..[1103,30059+14])
                                          Pexp_match
                                          expression (lib/grammarFunctor.ml[1098,29917+10]..[1098,29917+13])
                                            Pexp_ident "sym" (lib/grammarFunctor.ml[1098,29917+10]..[1098,29917+13])
                                          [
                                            <case>
                                              pattern (lib/grammarFunctor.ml[1099,29936+6]..[1099,29936+18])
                                                Ppat_construct "Symbol.T" (lib/grammarFunctor.ml[1099,29936+6]..[1099,29936+14])
                                                Some
                                                  []
                                                  pattern (lib/grammarFunctor.ml[1099,29936+15]..[1099,29936+18])
                                                    Ppat_var "tok" (lib/grammarFunctor.ml[1099,29936+15]..[1099,29936+18])
                                              expression (lib/grammarFunctor.ml[1100,29958+8]..[1100,29958+22])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[1100,29958+8]..[1100,29958+18])
                                                  Pexp_ident "S.terminal" (lib/grammarFunctor.ml[1100,29958+8]..[1100,29958+18])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[1100,29958+19]..[1100,29958+22])
                                                      Pexp_ident "tok" (lib/grammarFunctor.ml[1100,29958+19]..[1100,29958+22])
                                                ]
                                            <case>
                                              pattern (lib/grammarFunctor.ml[1101,29981+6]..[1101,29981+17])
                                                Ppat_construct "Symbol.N" (lib/grammarFunctor.ml[1101,29981+6]..[1101,29981+14])
                                                Some
                                                  []
                                                  pattern (lib/grammarFunctor.ml[1101,29981+15]..[1101,29981+17])
                                                    Ppat_var "nt" (lib/grammarFunctor.ml[1101,29981+15]..[1101,29981+17])
                                              expression (lib/grammarFunctor.ml[1103,30059+8]..[1103,30059+14])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[1103,30059+8]..[1103,30059+11])
                                                  Pexp_ident "get" (lib/grammarFunctor.ml[1103,30059+8]..[1103,30059+11])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[1103,30059+12]..[1103,30059+14])
                                                      Pexp_ident "nt" (lib/grammarFunctor.ml[1103,30059+12]..[1103,30059+14])
                                                ]
                                          ]
                                        core_type (lib/grammarFunctor.ml[1097,29883+23]..[1097,29883+31])
                                          Ptyp_constr "property" (lib/grammarFunctor.ml[1097,29883+23]..[1097,29883+31])
                                          []
                              ]
                            structure_item (lib/grammarFunctor.ml[1107,30154+2]..[1123,30714+10])
                              Pstr_value Nonrec
                              [
                                <def>
                                  pattern (lib/grammarFunctor.ml[1107,30154+6]..[1107,30154+16])
                                    Ppat_var "production" (lib/grammarFunctor.ml[1107,30154+6]..[1107,30154+16])
                                  expression (lib/grammarFunctor.ml[1107,30154+17]..[1123,30714+10]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lib/grammarFunctor.ml[1107,30154+17]..[1107,30154+21])
                                      Ppat_var "prod" (lib/grammarFunctor.ml[1107,30154+17]..[1107,30154+21])
                                    expression (lib/grammarFunctor.ml[1107,30154+22]..[1123,30714+10]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lib/grammarFunctor.ml[1107,30154+22]..[1107,30154+23])
                                        Ppat_var "i" (lib/grammarFunctor.ml[1107,30154+22]..[1107,30154+23])
                                      expression (lib/grammarFunctor.ml[1107,30154+24]..[1123,30714+10]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lib/grammarFunctor.ml[1107,30154+24]..[1107,30154+27])
                                          Ppat_var "get" (lib/grammarFunctor.ml[1107,30154+24]..[1107,30154+27])
                                        expression (lib/grammarFunctor.ml[1107,30154+28]..[1123,30714+10])
                                          Pexp_constraint
                                          expression (lib/grammarFunctor.ml[1108,30195+4]..[1123,30714+10])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lib/grammarFunctor.ml[1108,30195+8]..[1108,30195+11])
                                                  Ppat_var "rhs" (lib/grammarFunctor.ml[1108,30195+8]..[1108,30195+11])
                                                expression (lib/grammarFunctor.ml[1108,30195+14]..[1108,30195+33])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[1108,30195+14]..[1108,30195+28])
                                                    Pexp_ident "Production.rhs" (lib/grammarFunctor.ml[1108,30195+14]..[1108,30195+28])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[1108,30195+29]..[1108,30195+33])
                                                        Pexp_ident "prod" (lib/grammarFunctor.ml[1108,30195+29]..[1108,30195+33])
                                                  ]
                                            ]
                                            expression (lib/grammarFunctor.ml[1109,30232+4]..[1123,30714+10])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (lib/grammarFunctor.ml[1109,30232+8]..[1109,30232+9])
                                                    Ppat_var "n" (lib/grammarFunctor.ml[1109,30232+8]..[1109,30232+9])
                                                  expression (lib/grammarFunctor.ml[1109,30232+12]..[1109,30232+28])
                                                    Pexp_apply
                                                    expression (lib/grammarFunctor.ml[1109,30232+12]..[1109,30232+24])
                                                      Pexp_ident "Array.length" (lib/grammarFunctor.ml[1109,30232+12]..[1109,30232+24])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[1109,30232+25]..[1109,30232+28])
                                                          Pexp_ident "rhs" (lib/grammarFunctor.ml[1109,30232+25]..[1109,30232+28])
                                                    ]
                                              ]
                                              expression (lib/grammarFunctor.ml[1114,30522+4]..[1123,30714+10])
                                                Pexp_let Rec
                                                [
                                                  <def>
                                                    pattern (lib/grammarFunctor.ml[1114,30522+12]..[1114,30522+16])
                                                      Ppat_var "loop" (lib/grammarFunctor.ml[1114,30522+12]..[1114,30522+16])
                                                    expression (lib/grammarFunctor.ml[1114,30522+17]..[1121,30674+32]) ghost
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (lib/grammarFunctor.ml[1114,30522+17]..[1114,30522+18])
                                                        Ppat_var "i" (lib/grammarFunctor.ml[1114,30522+17]..[1114,30522+18])
                                                      expression (lib/grammarFunctor.ml[1115,30543+6]..[1121,30674+32])
                                                        Pexp_ifthenelse
                                                        expression (lib/grammarFunctor.ml[1115,30543+9]..[1115,30543+14])
                                                          Pexp_apply
                                                          expression (lib/grammarFunctor.ml[1115,30543+11]..[1115,30543+12])
                                                            Pexp_ident "=" (lib/grammarFunctor.ml[1115,30543+11]..[1115,30543+12])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/grammarFunctor.ml[1115,30543+9]..[1115,30543+10])
                                                                Pexp_ident "i" (lib/grammarFunctor.ml[1115,30543+9]..[1115,30543+10])
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/grammarFunctor.ml[1115,30543+13]..[1115,30543+14])
                                                                Pexp_ident "n" (lib/grammarFunctor.ml[1115,30543+13]..[1115,30543+14])
                                                          ]
                                                        expression (lib/grammarFunctor.ml[1116,30563+8]..[1116,30563+17])
                                                          Pexp_ident "S.epsilon" (lib/grammarFunctor.ml[1116,30563+8]..[1116,30563+17])
                                                        Some
                                                          expression (lib/grammarFunctor.ml[1118,30592+8]..[1121,30674+32])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (lib/grammarFunctor.ml[1118,30592+12]..[1118,30592+15])
                                                                  Ppat_var "sym" (lib/grammarFunctor.ml[1118,30592+12]..[1118,30592+15])
                                                                expression (lib/grammarFunctor.ml[1118,30592+18]..[1118,30592+25])
                                                                  Pexp_apply
                                                                  expression (lib/grammarFunctor.ml[1118,30592+18]..[1118,30592+25]) ghost
                                                                    Pexp_ident "Array.get" (lib/grammarFunctor.ml[1118,30592+18]..[1118,30592+25]) ghost
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lib/grammarFunctor.ml[1118,30592+18]..[1118,30592+21])
Pexp_ident "rhs" (lib/grammarFunctor.ml[1118,30592+18]..[1118,30592+21])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lib/grammarFunctor.ml[1118,30592+23]..[1118,30592+24])
Pexp_ident "i" (lib/grammarFunctor.ml[1118,30592+23]..[1118,30592+24])
                                                                  ]
                                                            ]
                                                            expression (lib/grammarFunctor.ml[1119,30621+8]..[1121,30674+32])
                                                              Pexp_apply
                                                              expression (lib/grammarFunctor.ml[1119,30621+8]..[1119,30621+21])
                                                                Pexp_ident "S.conjunction" (lib/grammarFunctor.ml[1119,30621+8]..[1119,30621+21])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/grammarFunctor.ml[1119,30621+22]..[1119,30621+25])
                                                                    Pexp_ident "sym" (lib/grammarFunctor.ml[1119,30621+22]..[1119,30621+25])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/grammarFunctor.ml[1120,30647+10]..[1120,30647+26])
                                                                    Pexp_apply
                                                                    expression (lib/grammarFunctor.ml[1120,30647+11]..[1120,30647+17])
                                                                      Pexp_ident "symbol" (lib/grammarFunctor.ml[1120,30647+11]..[1120,30647+17])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (lib/grammarFunctor.ml[1120,30647+18]..[1120,30647+21])
  Pexp_ident "sym" (lib/grammarFunctor.ml[1120,30647+18]..[1120,30647+21])
                                                                      <arg>
                                                                      Nolabel
expression (lib/grammarFunctor.ml[1120,30647+22]..[1120,30647+25])
  Pexp_ident "get" (lib/grammarFunctor.ml[1120,30647+22]..[1120,30647+25])
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/grammarFunctor.ml[1121,30674+10]..[1121,30674+32])
                                                                    Pexp_fun
                                                                    Nolabel
                                                                    None
                                                                    pattern (lib/grammarFunctor.ml[1121,30674+15]..[1121,30674+17])
                                                                      Ppat_construct "()" (lib/grammarFunctor.ml[1121,30674+15]..[1121,30674+17])
                                                                      None
                                                                    expression (lib/grammarFunctor.ml[1121,30674+21]..[1121,30674+31])
                                                                      Pexp_apply
                                                                      expression (lib/grammarFunctor.ml[1121,30674+21]..[1121,30674+25])
Pexp_ident "loop" (lib/grammarFunctor.ml[1121,30674+21]..[1121,30674+25])
                                                                      [
<arg>
Nolabel
  expression (lib/grammarFunctor.ml[1121,30674+26]..[1121,30674+31])
    Pexp_apply
    expression (lib/grammarFunctor.ml[1121,30674+28]..[1121,30674+29])
      Pexp_ident "+" (lib/grammarFunctor.ml[1121,30674+28]..[1121,30674+29])
    [
      <arg>
      Nolabel
        expression (lib/grammarFunctor.ml[1121,30674+27]..[1121,30674+28])
          Pexp_ident "i" (lib/grammarFunctor.ml[1121,30674+27]..[1121,30674+28])
      <arg>
      Nolabel
        expression (lib/grammarFunctor.ml[1121,30674+29]..[1121,30674+30])
          Pexp_constant PConst_int (1,None)
    ]
                                                                      ]
                                                              ]
                                                ]
                                                expression (lib/grammarFunctor.ml[1123,30714+4]..[1123,30714+10])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[1123,30714+4]..[1123,30714+8])
                                                    Pexp_ident "loop" (lib/grammarFunctor.ml[1123,30714+4]..[1123,30714+8])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[1123,30714+9]..[1123,30714+10])
                                                        Pexp_ident "i" (lib/grammarFunctor.ml[1123,30714+9]..[1123,30714+10])
                                                  ]
                                          core_type (lib/grammarFunctor.ml[1107,30154+30]..[1107,30154+38])
                                            Ptyp_constr "property" (lib/grammarFunctor.ml[1107,30154+30]..[1107,30154+38])
                                            []
                              ]
                            structure_item (lib/grammarFunctor.ml[1129,30934+2]..[1139,31246+18])
                              Pstr_value Nonrec
                              [
                                <def>
                                  pattern (lib/grammarFunctor.ml[1129,30934+6]..[1129,30934+17])
                                    Ppat_var "nonterminal" (lib/grammarFunctor.ml[1129,30934+6]..[1129,30934+17])
                                  expression (lib/grammarFunctor.ml[1129,30934+18]..[1139,31246+18]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lib/grammarFunctor.ml[1129,30934+18]..[1129,30934+20])
                                      Ppat_var "nt" (lib/grammarFunctor.ml[1129,30934+18]..[1129,30934+20])
                                    expression (lib/grammarFunctor.ml[1129,30934+21]..[1139,31246+18]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lib/grammarFunctor.ml[1129,30934+21]..[1129,30934+24])
                                        Ppat_var "get" (lib/grammarFunctor.ml[1129,30934+21]..[1129,30934+24])
                                      expression (lib/grammarFunctor.ml[1129,30934+25]..[1139,31246+18])
                                        Pexp_constraint
                                        expression (lib/grammarFunctor.ml[1130,30972+4]..[1139,31246+18])
                                          Pexp_match
                                          expression (lib/grammarFunctor.ml[1130,30972+10]..[1130,30972+23])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[1130,30972+10]..[1130,30972+20])
                                              Pexp_ident "S.shortcut" (lib/grammarFunctor.ml[1130,30972+10]..[1130,30972+20])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1130,30972+21]..[1130,30972+23])
                                                  Pexp_ident "nt" (lib/grammarFunctor.ml[1130,30972+21]..[1130,30972+23])
                                            ]
                                          [
                                            <case>
                                              pattern (lib/grammarFunctor.ml[1131,31001+6]..[1131,31001+12])
                                                Ppat_construct "Some" (lib/grammarFunctor.ml[1131,31001+6]..[1131,31001+10])
                                                Some
                                                  []
                                                  pattern (lib/grammarFunctor.ml[1131,31001+11]..[1131,31001+12])
                                                    Ppat_var "p" (lib/grammarFunctor.ml[1131,31001+11]..[1131,31001+12])
                                              expression (lib/grammarFunctor.ml[1132,31017+8]..[1132,31017+9])
                                                Pexp_ident "p" (lib/grammarFunctor.ml[1132,31017+8]..[1132,31017+9])
                                            <case>
                                              pattern (lib/grammarFunctor.ml[1133,31027+6]..[1133,31027+10])
                                                Ppat_construct "None" (lib/grammarFunctor.ml[1133,31027+6]..[1133,31027+10])
                                                None
                                              expression (lib/grammarFunctor.ml[1135,31117+8]..[1139,31246+18])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[1135,31117+8]..[1135,31117+30])
                                                  Pexp_ident "Production.foldnt_lazy" (lib/grammarFunctor.ml[1135,31117+8]..[1135,31117+30])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[1135,31117+31]..[1135,31117+33])
                                                      Pexp_ident "nt" (lib/grammarFunctor.ml[1135,31117+31]..[1135,31117+33])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[1135,31117+34]..[1139,31246+9])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (lib/grammarFunctor.ml[1135,31117+39]..[1135,31117+43])
                                                        Ppat_var "prod" (lib/grammarFunctor.ml[1135,31117+39]..[1135,31117+43])
                                                      expression (lib/grammarFunctor.ml[1135,31117+44]..[1138,31229+16]) ghost
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (lib/grammarFunctor.ml[1135,31117+44]..[1135,31117+48])
                                                          Ppat_var "rest" (lib/grammarFunctor.ml[1135,31117+44]..[1135,31117+48])
                                                        expression (lib/grammarFunctor.ml[1136,31169+10]..[1138,31229+16])
                                                          Pexp_apply
                                                          expression (lib/grammarFunctor.ml[1136,31169+10]..[1136,31169+23])
                                                            Pexp_ident "S.disjunction" (lib/grammarFunctor.ml[1136,31169+10]..[1136,31169+23])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/grammarFunctor.ml[1137,31193+12]..[1137,31193+35])
                                                                Pexp_apply
                                                                expression (lib/grammarFunctor.ml[1137,31193+13]..[1137,31193+23])
                                                                  Pexp_ident "production" (lib/grammarFunctor.ml[1137,31193+13]..[1137,31193+23])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lib/grammarFunctor.ml[1137,31193+24]..[1137,31193+28])
                                                                      Pexp_ident "prod" (lib/grammarFunctor.ml[1137,31193+24]..[1137,31193+28])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lib/grammarFunctor.ml[1137,31193+29]..[1137,31193+30])
                                                                      Pexp_constant PConst_int (0,None)
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lib/grammarFunctor.ml[1137,31193+31]..[1137,31193+34])
                                                                      Pexp_ident "get" (lib/grammarFunctor.ml[1137,31193+31]..[1137,31193+34])
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/grammarFunctor.ml[1138,31229+12]..[1138,31229+16])
                                                                Pexp_ident "rest" (lib/grammarFunctor.ml[1138,31229+12]..[1138,31229+16])
                                                          ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[1139,31246+10]..[1139,31246+18])
                                                      Pexp_ident "P.bottom" (lib/grammarFunctor.ml[1139,31246+10]..[1139,31246+18])
                                                ]
                                          ]
                                        core_type (lib/grammarFunctor.ml[1129,30934+27]..[1129,30934+35])
                                          Ptyp_constr "property" (lib/grammarFunctor.ml[1129,30934+27]..[1129,30934+35])
                                          []
                              ]
                            structure_item (lib/grammarFunctor.ml[1144,31391+2]..[1147,31470+9])
                              Pstr_module
                              "F" (lib/grammarFunctor.ml[1144,31391+9]..[1144,31391+10])
                                module_expr (lib/grammarFunctor.ml[1145,31404+4]..[1147,31470+9])
                                  Pmod_apply
                                  module_expr (lib/grammarFunctor.ml[1145,31404+4]..[1146,31417+52])
                                    Pmod_apply
                                    module_expr (lib/grammarFunctor.ml[1145,31404+4]..[1145,31404+12])
                                      Pmod_ident "Fix.Make" (lib/grammarFunctor.ml[1145,31404+4]..[1145,31404+12])
                                    module_expr (lib/grammarFunctor.ml[1146,31417+7]..[1146,31417+51])
                                      Pmod_apply
                                      module_expr (lib/grammarFunctor.ml[1146,31417+7]..[1146,31417+38])
                                        Pmod_ident "Fix.Glue.ArraysAsImperativeMaps" (lib/grammarFunctor.ml[1146,31417+7]..[1146,31417+38])
                                      module_expr (lib/grammarFunctor.ml[1146,31417+39]..[1146,31417+50])
                                        Pmod_ident "Nonterminal" (lib/grammarFunctor.ml[1146,31417+39]..[1146,31417+50])
                                  module_expr (lib/grammarFunctor.ml[1147,31470+7]..[1147,31470+8])
                                    Pmod_ident "P" (lib/grammarFunctor.ml[1147,31470+7]..[1147,31470+8])
                            structure_item (lib/grammarFunctor.ml[1149,31481+2]..[1150,31501+21])
                              Pstr_value Nonrec
                              [
                                <def>
                                  pattern (lib/grammarFunctor.ml[1149,31481+6]..[1149,31481+17])
                                    Ppat_var "nonterminal" (lib/grammarFunctor.ml[1149,31481+6]..[1149,31481+17])
                                  expression (lib/grammarFunctor.ml[1150,31501+4]..[1150,31501+21])
                                    Pexp_apply
                                    expression (lib/grammarFunctor.ml[1150,31501+4]..[1150,31501+9])
                                      Pexp_ident "F.lfp" (lib/grammarFunctor.ml[1150,31501+4]..[1150,31501+9])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[1150,31501+10]..[1150,31501+21])
                                          Pexp_ident "nonterminal" (lib/grammarFunctor.ml[1150,31501+10]..[1150,31501+21])
                                    ]
                              ]
                            structure_item (lib/grammarFunctor.ml[1154,31579+2]..[1155,31598+26])
                              Pstr_value Nonrec
                              [
                                <def>
                                  pattern (lib/grammarFunctor.ml[1154,31579+6]..[1154,31579+12])
                                    Ppat_var "symbol" (lib/grammarFunctor.ml[1154,31579+6]..[1154,31579+12])
                                  expression (lib/grammarFunctor.ml[1154,31579+13]..[1155,31598+26]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lib/grammarFunctor.ml[1154,31579+13]..[1154,31579+16])
                                      Ppat_var "sym" (lib/grammarFunctor.ml[1154,31579+13]..[1154,31579+16])
                                    expression (lib/grammarFunctor.ml[1155,31598+4]..[1155,31598+26])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[1155,31598+4]..[1155,31598+10])
                                        Pexp_ident "symbol" (lib/grammarFunctor.ml[1155,31598+4]..[1155,31598+10])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1155,31598+11]..[1155,31598+14])
                                            Pexp_ident "sym" (lib/grammarFunctor.ml[1155,31598+11]..[1155,31598+14])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1155,31598+15]..[1155,31598+26])
                                            Pexp_ident "nonterminal" (lib/grammarFunctor.ml[1155,31598+15]..[1155,31598+26])
                                      ]
                              ]
                            structure_item (lib/grammarFunctor.ml[1157,31626+2]..[1158,31652+33])
                              Pstr_value Nonrec
                              [
                                <def>
                                  pattern (lib/grammarFunctor.ml[1157,31626+6]..[1157,31626+16])
                                    Ppat_var "production" (lib/grammarFunctor.ml[1157,31626+6]..[1157,31626+16])
                                  expression (lib/grammarFunctor.ml[1157,31626+17]..[1158,31652+33]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lib/grammarFunctor.ml[1157,31626+17]..[1157,31626+21])
                                      Ppat_var "prod" (lib/grammarFunctor.ml[1157,31626+17]..[1157,31626+21])
                                    expression (lib/grammarFunctor.ml[1157,31626+22]..[1158,31652+33]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lib/grammarFunctor.ml[1157,31626+22]..[1157,31626+23])
                                        Ppat_var "i" (lib/grammarFunctor.ml[1157,31626+22]..[1157,31626+23])
                                      expression (lib/grammarFunctor.ml[1158,31652+4]..[1158,31652+33])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[1158,31652+4]..[1158,31652+14])
                                          Pexp_ident "production" (lib/grammarFunctor.ml[1158,31652+4]..[1158,31652+14])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[1158,31652+15]..[1158,31652+19])
                                              Pexp_ident "prod" (lib/grammarFunctor.ml[1158,31652+15]..[1158,31652+19])
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[1158,31652+20]..[1158,31652+21])
                                              Pexp_ident "i" (lib/grammarFunctor.ml[1158,31652+20]..[1158,31652+21])
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[1158,31652+22]..[1158,31652+33])
                                              Pexp_ident "nonterminal" (lib/grammarFunctor.ml[1158,31652+22]..[1158,31652+33])
                                        ]
                              ]
                          ]
                        module_type (lib/grammarFunctor.ml[1071,29055+2]..[1088,29622+3])
                          Pmty_signature
                          [
                            signature_item (lib/grammarFunctor.ml[1072,29061+2]..[1072,29061+8])
                              Psig_open Fresh "P" (lib/grammarFunctor.ml[1072,29061+7]..[1072,29061+8])
                            signature_item (lib/grammarFunctor.ml[1077,29195+2]..[1077,29195+44])
                              Psig_value
                              value_description "nonterminal" (lib/grammarFunctor.ml[1077,29195+6]..[1077,29195+17]) (lib/grammarFunctor.ml[1077,29195+2]..[1077,29195+44])
                                core_type (lib/grammarFunctor.ml[1077,29195+19]..[1077,29195+44])
                                  Ptyp_arrow
                                  Nolabel
                                  core_type (lib/grammarFunctor.ml[1077,29195+19]..[1077,29195+32])
                                    Ptyp_constr "Nonterminal.t" (lib/grammarFunctor.ml[1077,29195+19]..[1077,29195+32])
                                    []
                                  core_type (lib/grammarFunctor.ml[1077,29195+36]..[1077,29195+44])
                                    Ptyp_constr "property" (lib/grammarFunctor.ml[1077,29195+36]..[1077,29195+44])
                                    []
                                []
                            signature_item (lib/grammarFunctor.ml[1080,29291+2]..[1080,29291+34])
                              Psig_value
                              value_description "symbol" (lib/grammarFunctor.ml[1080,29291+6]..[1080,29291+12]) (lib/grammarFunctor.ml[1080,29291+2]..[1080,29291+34])
                                core_type (lib/grammarFunctor.ml[1080,29291+14]..[1080,29291+34])
                                  Ptyp_arrow
                                  Nolabel
                                  core_type (lib/grammarFunctor.ml[1080,29291+14]..[1080,29291+22])
                                    Ptyp_constr "Symbol.t" (lib/grammarFunctor.ml[1080,29291+14]..[1080,29291+22])
                                    []
                                  core_type (lib/grammarFunctor.ml[1080,29291+26]..[1080,29291+34])
                                    Ptyp_constr "property" (lib/grammarFunctor.ml[1080,29291+26]..[1080,29291+34])
                                    []
                                []
                            signature_item (lib/grammarFunctor.ml[1086,29567+2]..[1086,29567+53])
                              Psig_value
                              value_description "production" (lib/grammarFunctor.ml[1086,29567+6]..[1086,29567+16]) (lib/grammarFunctor.ml[1086,29567+2]..[1086,29567+53])
                                core_type (lib/grammarFunctor.ml[1086,29567+18]..[1086,29567+53])
                                  Ptyp_arrow
                                  Nolabel
                                  core_type (lib/grammarFunctor.ml[1086,29567+18]..[1086,29567+34])
                                    Ptyp_constr "Production.index" (lib/grammarFunctor.ml[1086,29567+18]..[1086,29567+34])
                                    []
                                  core_type (lib/grammarFunctor.ml[1086,29567+38]..[1086,29567+53])
                                    Ptyp_arrow
                                    Nolabel
                                    core_type (lib/grammarFunctor.ml[1086,29567+38]..[1086,29567+41])
                                      Ptyp_constr "int" (lib/grammarFunctor.ml[1086,29567+38]..[1086,29567+41])
                                      []
                                    core_type (lib/grammarFunctor.ml[1086,29567+45]..[1086,29567+53])
                                      Ptyp_constr "property" (lib/grammarFunctor.ml[1086,29567+45]..[1086,29567+53])
                                      []
                                []
                          ]
              structure_item (lib/grammarFunctor.ml[1169,32061+0]..[1183,32576+9])
                Pstr_module
                "NONEMPTY" (lib/grammarFunctor.ml[1169,32061+7]..[1169,32061+15])
                  module_expr (lib/grammarFunctor.ml[1170,32079+2]..[1183,32576+9])
                    Pmod_apply
                    module_expr (lib/grammarFunctor.ml[1170,32079+2]..[1171,32097+22])
                      Pmod_apply
                      module_expr (lib/grammarFunctor.ml[1170,32079+2]..[1170,32079+17])
                        Pmod_ident "GenericAnalysis" (lib/grammarFunctor.ml[1170,32079+2]..[1170,32079+17])
                      module_expr (lib/grammarFunctor.ml[1171,32097+5]..[1171,32097+21])
                        Pmod_ident "Fix.Prop.Boolean" (lib/grammarFunctor.ml[1171,32097+5]..[1171,32097+21])
                    module_expr (lib/grammarFunctor.ml[1172,32120+5]..[1183,32576+8])
                      Pmod_structure
                      [
                        structure_item (lib/grammarFunctor.ml[1173,32132+6]..[1173,32132+29])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1173,32132+10]..[1173,32132+18])
                                Ppat_var "shortcut" (lib/grammarFunctor.ml[1173,32132+10]..[1173,32132+18])
                              expression (lib/grammarFunctor.ml[1173,32132+19]..[1173,32132+29]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1173,32132+19]..[1173,32132+22])
                                  Ppat_var "_nt" (lib/grammarFunctor.ml[1173,32132+19]..[1173,32132+22])
                                expression (lib/grammarFunctor.ml[1173,32132+25]..[1173,32132+29])
                                  Pexp_construct "None" (lib/grammarFunctor.ml[1173,32132+25]..[1173,32132+29])
                                  None
                          ]
                        structure_item (lib/grammarFunctor.ml[1175,32205+6]..[1175,32205+27])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1175,32205+10]..[1175,32205+18])
                                Ppat_var "terminal" (lib/grammarFunctor.ml[1175,32205+10]..[1175,32205+18])
                              expression (lib/grammarFunctor.ml[1175,32205+19]..[1175,32205+27]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1175,32205+19]..[1175,32205+20])
                                  Ppat_any
                                expression (lib/grammarFunctor.ml[1175,32205+23]..[1175,32205+27])
                                  Pexp_construct "true" (lib/grammarFunctor.ml[1175,32205+23]..[1175,32205+27])
                                  None
                          ]
                        structure_item (lib/grammarFunctor.ml[1177,32308+6]..[1177,32308+36])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1177,32308+10]..[1177,32308+21])
                                Ppat_var "disjunction" (lib/grammarFunctor.ml[1177,32308+10]..[1177,32308+21])
                              expression (lib/grammarFunctor.ml[1177,32308+22]..[1177,32308+36]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1177,32308+22]..[1177,32308+23])
                                  Ppat_var "p" (lib/grammarFunctor.ml[1177,32308+22]..[1177,32308+23])
                                expression (lib/grammarFunctor.ml[1177,32308+24]..[1177,32308+36]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lib/grammarFunctor.ml[1177,32308+24]..[1177,32308+25])
                                    Ppat_var "q" (lib/grammarFunctor.ml[1177,32308+24]..[1177,32308+25])
                                  expression (lib/grammarFunctor.ml[1177,32308+28]..[1177,32308+36])
                                    Pexp_apply
                                    expression (lib/grammarFunctor.ml[1177,32308+30]..[1177,32308+32])
                                      Pexp_ident "||" (lib/grammarFunctor.ml[1177,32308+30]..[1177,32308+32])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[1177,32308+28]..[1177,32308+29])
                                          Pexp_ident "p" (lib/grammarFunctor.ml[1177,32308+28]..[1177,32308+29])
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[1177,32308+33]..[1177,32308+36])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[1177,32308+33]..[1177,32308+34])
                                            Pexp_ident "q" (lib/grammarFunctor.ml[1177,32308+33]..[1177,32308+34])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[1177,32308+34]..[1177,32308+36])
                                                Pexp_construct "()" (lib/grammarFunctor.ml[1177,32308+34]..[1177,32308+36])
                                                None
                                          ]
                                    ]
                          ]
                        structure_item (lib/grammarFunctor.ml[1179,32410+6]..[1179,32410+38])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1179,32410+10]..[1179,32410+21])
                                Ppat_var "conjunction" (lib/grammarFunctor.ml[1179,32410+10]..[1179,32410+21])
                              expression (lib/grammarFunctor.ml[1179,32410+22]..[1179,32410+38]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1179,32410+22]..[1179,32410+23])
                                  Ppat_any
                                expression (lib/grammarFunctor.ml[1179,32410+24]..[1179,32410+38]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lib/grammarFunctor.ml[1179,32410+24]..[1179,32410+25])
                                    Ppat_var "p" (lib/grammarFunctor.ml[1179,32410+24]..[1179,32410+25])
                                  expression (lib/grammarFunctor.ml[1179,32410+26]..[1179,32410+38]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lib/grammarFunctor.ml[1179,32410+26]..[1179,32410+27])
                                      Ppat_var "q" (lib/grammarFunctor.ml[1179,32410+26]..[1179,32410+27])
                                    expression (lib/grammarFunctor.ml[1179,32410+30]..[1179,32410+38])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[1179,32410+32]..[1179,32410+34])
                                        Pexp_ident "&&" (lib/grammarFunctor.ml[1179,32410+32]..[1179,32410+34])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1179,32410+30]..[1179,32410+31])
                                            Pexp_ident "p" (lib/grammarFunctor.ml[1179,32410+30]..[1179,32410+31])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1179,32410+35]..[1179,32410+38])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[1179,32410+35]..[1179,32410+36])
                                              Pexp_ident "q" (lib/grammarFunctor.ml[1179,32410+35]..[1179,32410+36])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1179,32410+36]..[1179,32410+38])
                                                  Pexp_construct "()" (lib/grammarFunctor.ml[1179,32410+36]..[1179,32410+38])
                                                  None
                                            ]
                                      ]
                          ]
                        structure_item (lib/grammarFunctor.ml[1182,32551+6]..[1182,32551+24])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1182,32551+10]..[1182,32551+17])
                                Ppat_var "epsilon" (lib/grammarFunctor.ml[1182,32551+10]..[1182,32551+17])
                              expression (lib/grammarFunctor.ml[1182,32551+20]..[1182,32551+24])
                                Pexp_construct "true" (lib/grammarFunctor.ml[1182,32551+20]..[1182,32551+24])
                                None
                          ]
                      ]
              structure_item (lib/grammarFunctor.ml[1185,32587+0]..[1198,33051+9])
                Pstr_module
                "NULLABLE" (lib/grammarFunctor.ml[1185,32587+7]..[1185,32587+15])
                  module_expr (lib/grammarFunctor.ml[1186,32605+2]..[1198,33051+9])
                    Pmod_apply
                    module_expr (lib/grammarFunctor.ml[1186,32605+2]..[1187,32623+22])
                      Pmod_apply
                      module_expr (lib/grammarFunctor.ml[1186,32605+2]..[1186,32605+17])
                        Pmod_ident "GenericAnalysis" (lib/grammarFunctor.ml[1186,32605+2]..[1186,32605+17])
                      module_expr (lib/grammarFunctor.ml[1187,32623+5]..[1187,32623+21])
                        Pmod_ident "Fix.Prop.Boolean" (lib/grammarFunctor.ml[1187,32623+5]..[1187,32623+21])
                    module_expr (lib/grammarFunctor.ml[1188,32646+5]..[1198,33051+8])
                      Pmod_structure
                      [
                        structure_item (lib/grammarFunctor.ml[1189,32658+6]..[1189,32658+29])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1189,32658+10]..[1189,32658+18])
                                Ppat_var "shortcut" (lib/grammarFunctor.ml[1189,32658+10]..[1189,32658+18])
                              expression (lib/grammarFunctor.ml[1189,32658+19]..[1189,32658+29]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1189,32658+19]..[1189,32658+22])
                                  Ppat_var "_nt" (lib/grammarFunctor.ml[1189,32658+19]..[1189,32658+22])
                                expression (lib/grammarFunctor.ml[1189,32658+25]..[1189,32658+29])
                                  Pexp_construct "None" (lib/grammarFunctor.ml[1189,32658+25]..[1189,32658+29])
                                  None
                          ]
                        structure_item (lib/grammarFunctor.ml[1191,32735+6]..[1191,32735+28])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1191,32735+10]..[1191,32735+18])
                                Ppat_var "terminal" (lib/grammarFunctor.ml[1191,32735+10]..[1191,32735+18])
                              expression (lib/grammarFunctor.ml[1191,32735+19]..[1191,32735+28]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1191,32735+19]..[1191,32735+20])
                                  Ppat_any
                                expression (lib/grammarFunctor.ml[1191,32735+23]..[1191,32735+28])
                                  Pexp_construct "false" (lib/grammarFunctor.ml[1191,32735+23]..[1191,32735+28])
                                  None
                          ]
                        structure_item (lib/grammarFunctor.ml[1193,32839+6]..[1193,32839+36])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1193,32839+10]..[1193,32839+21])
                                Ppat_var "disjunction" (lib/grammarFunctor.ml[1193,32839+10]..[1193,32839+21])
                              expression (lib/grammarFunctor.ml[1193,32839+22]..[1193,32839+36]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1193,32839+22]..[1193,32839+23])
                                  Ppat_var "p" (lib/grammarFunctor.ml[1193,32839+22]..[1193,32839+23])
                                expression (lib/grammarFunctor.ml[1193,32839+24]..[1193,32839+36]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lib/grammarFunctor.ml[1193,32839+24]..[1193,32839+25])
                                    Ppat_var "q" (lib/grammarFunctor.ml[1193,32839+24]..[1193,32839+25])
                                  expression (lib/grammarFunctor.ml[1193,32839+28]..[1193,32839+36])
                                    Pexp_apply
                                    expression (lib/grammarFunctor.ml[1193,32839+30]..[1193,32839+32])
                                      Pexp_ident "||" (lib/grammarFunctor.ml[1193,32839+30]..[1193,32839+32])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[1193,32839+28]..[1193,32839+29])
                                          Pexp_ident "p" (lib/grammarFunctor.ml[1193,32839+28]..[1193,32839+29])
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[1193,32839+33]..[1193,32839+36])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[1193,32839+33]..[1193,32839+34])
                                            Pexp_ident "q" (lib/grammarFunctor.ml[1193,32839+33]..[1193,32839+34])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[1193,32839+34]..[1193,32839+36])
                                                Pexp_construct "()" (lib/grammarFunctor.ml[1193,32839+34]..[1193,32839+36])
                                                None
                                          ]
                                    ]
                          ]
                        structure_item (lib/grammarFunctor.ml[1195,32941+6]..[1195,32941+38])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1195,32941+10]..[1195,32941+21])
                                Ppat_var "conjunction" (lib/grammarFunctor.ml[1195,32941+10]..[1195,32941+21])
                              expression (lib/grammarFunctor.ml[1195,32941+22]..[1195,32941+38]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1195,32941+22]..[1195,32941+23])
                                  Ppat_any
                                expression (lib/grammarFunctor.ml[1195,32941+24]..[1195,32941+38]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lib/grammarFunctor.ml[1195,32941+24]..[1195,32941+25])
                                    Ppat_var "p" (lib/grammarFunctor.ml[1195,32941+24]..[1195,32941+25])
                                  expression (lib/grammarFunctor.ml[1195,32941+26]..[1195,32941+38]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lib/grammarFunctor.ml[1195,32941+26]..[1195,32941+27])
                                      Ppat_var "q" (lib/grammarFunctor.ml[1195,32941+26]..[1195,32941+27])
                                    expression (lib/grammarFunctor.ml[1195,32941+30]..[1195,32941+38])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[1195,32941+32]..[1195,32941+34])
                                        Pexp_ident "&&" (lib/grammarFunctor.ml[1195,32941+32]..[1195,32941+34])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1195,32941+30]..[1195,32941+31])
                                            Pexp_ident "p" (lib/grammarFunctor.ml[1195,32941+30]..[1195,32941+31])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1195,32941+35]..[1195,32941+38])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[1195,32941+35]..[1195,32941+36])
                                              Pexp_ident "q" (lib/grammarFunctor.ml[1195,32941+35]..[1195,32941+36])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1195,32941+36]..[1195,32941+38])
                                                  Pexp_construct "()" (lib/grammarFunctor.ml[1195,32941+36]..[1195,32941+38])
                                                  None
                                            ]
                                      ]
                          ]
                        structure_item (lib/grammarFunctor.ml[1197,33026+6]..[1197,33026+24])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1197,33026+10]..[1197,33026+17])
                                Ppat_var "epsilon" (lib/grammarFunctor.ml[1197,33026+10]..[1197,33026+17])
                              expression (lib/grammarFunctor.ml[1197,33026+20]..[1197,33026+24])
                                Pexp_construct "true" (lib/grammarFunctor.ml[1197,33026+20]..[1197,33026+24])
                                None
                          ]
                      ]
              structure_item (lib/grammarFunctor.ml[1203,33168+0]..[1222,33909+9])
                Pstr_module
                "FIRST" (lib/grammarFunctor.ml[1203,33168+7]..[1203,33168+12])
                  module_expr (lib/grammarFunctor.ml[1204,33183+2]..[1222,33909+9])
                    Pmod_apply
                    module_expr (lib/grammarFunctor.ml[1204,33183+2]..[1205,33201+17])
                      Pmod_apply
                      module_expr (lib/grammarFunctor.ml[1204,33183+2]..[1204,33183+17])
                        Pmod_ident "GenericAnalysis" (lib/grammarFunctor.ml[1204,33183+2]..[1204,33183+17])
                      module_expr (lib/grammarFunctor.ml[1205,33201+5]..[1205,33201+16])
                        Pmod_ident "TerminalSet" (lib/grammarFunctor.ml[1205,33201+5]..[1205,33201+16])
                    module_expr (lib/grammarFunctor.ml[1206,33219+5]..[1222,33909+8])
                      Pmod_structure
                      [
                        structure_item (lib/grammarFunctor.ml[1207,33231+6]..[1207,33231+29])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1207,33231+10]..[1207,33231+18])
                                Ppat_var "shortcut" (lib/grammarFunctor.ml[1207,33231+10]..[1207,33231+18])
                              expression (lib/grammarFunctor.ml[1207,33231+19]..[1207,33231+29]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1207,33231+19]..[1207,33231+22])
                                  Ppat_var "_nt" (lib/grammarFunctor.ml[1207,33231+19]..[1207,33231+22])
                                expression (lib/grammarFunctor.ml[1207,33231+25]..[1207,33231+29])
                                  Pexp_construct "None" (lib/grammarFunctor.ml[1207,33231+25]..[1207,33231+29])
                                  None
                          ]
                        structure_item (lib/grammarFunctor.ml[1209,33318+6]..[1209,33318+42])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1209,33318+10]..[1209,33318+18])
                                Ppat_var "terminal" (lib/grammarFunctor.ml[1209,33318+10]..[1209,33318+18])
                              expression (lib/grammarFunctor.ml[1209,33318+21]..[1209,33318+42])
                                Pexp_ident "TerminalSet.singleton" (lib/grammarFunctor.ml[1209,33318+21]..[1209,33318+42])
                          ]
                        structure_item (lib/grammarFunctor.ml[1211,33437+6]..[1211,33437+53])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1211,33437+10]..[1211,33437+21])
                                Ppat_var "disjunction" (lib/grammarFunctor.ml[1211,33437+10]..[1211,33437+21])
                              expression (lib/grammarFunctor.ml[1211,33437+22]..[1211,33437+53]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1211,33437+22]..[1211,33437+23])
                                  Ppat_var "p" (lib/grammarFunctor.ml[1211,33437+22]..[1211,33437+23])
                                expression (lib/grammarFunctor.ml[1211,33437+24]..[1211,33437+53]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lib/grammarFunctor.ml[1211,33437+24]..[1211,33437+25])
                                    Ppat_var "q" (lib/grammarFunctor.ml[1211,33437+24]..[1211,33437+25])
                                  expression (lib/grammarFunctor.ml[1211,33437+28]..[1211,33437+53])
                                    Pexp_apply
                                    expression (lib/grammarFunctor.ml[1211,33437+28]..[1211,33437+45])
                                      Pexp_ident "TerminalSet.union" (lib/grammarFunctor.ml[1211,33437+28]..[1211,33437+45])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[1211,33437+46]..[1211,33437+47])
                                          Pexp_ident "p" (lib/grammarFunctor.ml[1211,33437+46]..[1211,33437+47])
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[1211,33437+48]..[1211,33437+53])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[1211,33437+49]..[1211,33437+50])
                                            Pexp_ident "q" (lib/grammarFunctor.ml[1211,33437+49]..[1211,33437+50])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[1211,33437+50]..[1211,33437+52])
                                                Pexp_construct "()" (lib/grammarFunctor.ml[1211,33437+50]..[1211,33437+52])
                                                None
                                          ]
                                    ]
                          ]
                        structure_item (lib/grammarFunctor.ml[1215,33678+6]..[1219,33801+11])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1215,33678+10]..[1215,33678+21])
                                Ppat_var "conjunction" (lib/grammarFunctor.ml[1215,33678+10]..[1215,33678+21])
                              expression (lib/grammarFunctor.ml[1215,33678+22]..[1219,33801+11]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1215,33678+22]..[1215,33678+28])
                                  Ppat_var "symbol" (lib/grammarFunctor.ml[1215,33678+22]..[1215,33678+28])
                                expression (lib/grammarFunctor.ml[1215,33678+29]..[1219,33801+11]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lib/grammarFunctor.ml[1215,33678+29]..[1215,33678+30])
                                    Ppat_var "p" (lib/grammarFunctor.ml[1215,33678+29]..[1215,33678+30])
                                  expression (lib/grammarFunctor.ml[1215,33678+31]..[1219,33801+11]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lib/grammarFunctor.ml[1215,33678+31]..[1215,33678+32])
                                      Ppat_var "q" (lib/grammarFunctor.ml[1215,33678+31]..[1215,33678+32])
                                    expression (lib/grammarFunctor.ml[1216,33713+8]..[1219,33801+11])
                                      Pexp_ifthenelse
                                      expression (lib/grammarFunctor.ml[1216,33713+11]..[1216,33713+33])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[1216,33713+11]..[1216,33713+26])
                                          Pexp_ident "NULLABLE.symbol" (lib/grammarFunctor.ml[1216,33713+11]..[1216,33713+26])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[1216,33713+27]..[1216,33713+33])
                                              Pexp_ident "symbol" (lib/grammarFunctor.ml[1216,33713+27]..[1216,33713+33])
                                        ]
                                      expression (lib/grammarFunctor.ml[1217,33752+10]..[1217,33752+35])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[1217,33752+10]..[1217,33752+27])
                                          Pexp_ident "TerminalSet.union" (lib/grammarFunctor.ml[1217,33752+10]..[1217,33752+27])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[1217,33752+28]..[1217,33752+29])
                                              Pexp_ident "p" (lib/grammarFunctor.ml[1217,33752+28]..[1217,33752+29])
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[1217,33752+30]..[1217,33752+35])
                                              Pexp_apply
                                              expression (lib/grammarFunctor.ml[1217,33752+31]..[1217,33752+32])
                                                Pexp_ident "q" (lib/grammarFunctor.ml[1217,33752+31]..[1217,33752+32])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[1217,33752+32]..[1217,33752+34])
                                                    Pexp_construct "()" (lib/grammarFunctor.ml[1217,33752+32]..[1217,33752+34])
                                                    None
                                              ]
                                        ]
                                      Some
                                        expression (lib/grammarFunctor.ml[1219,33801+10]..[1219,33801+11])
                                          Pexp_ident "p" (lib/grammarFunctor.ml[1219,33801+10]..[1219,33801+11])
                          ]
                        structure_item (lib/grammarFunctor.ml[1221,33871+6]..[1221,33871+37])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1221,33871+10]..[1221,33871+17])
                                Ppat_var "epsilon" (lib/grammarFunctor.ml[1221,33871+10]..[1221,33871+17])
                              expression (lib/grammarFunctor.ml[1221,33871+20]..[1221,33871+37])
                                Pexp_ident "TerminalSet.empty" (lib/grammarFunctor.ml[1221,33871+20]..[1221,33871+37])
                          ]
                      ]
              structure_item (lib/grammarFunctor.ml[1235,34531+0]..[1252,35105+9])
                Pstr_module
                "MINIMAL" (lib/grammarFunctor.ml[1235,34531+7]..[1235,34531+14])
                  module_expr (lib/grammarFunctor.ml[1236,34548+2]..[1252,35105+9])
                    Pmod_apply
                    module_expr (lib/grammarFunctor.ml[1236,34548+2]..[1240,34647+9])
                      Pmod_apply
                      module_expr (lib/grammarFunctor.ml[1236,34548+2]..[1236,34548+17])
                        Pmod_ident "GenericAnalysis" (lib/grammarFunctor.ml[1236,34548+2]..[1236,34548+17])
                      module_expr (lib/grammarFunctor.ml[1237,34566+5]..[1240,34647+8])
                        Pmod_structure
                        [
                          structure_item (lib/grammarFunctor.ml[1238,34578+6]..[1238,34578+33])
                            Pstr_include                            module_expr (lib/grammarFunctor.ml[1238,34578+14]..[1238,34578+33])
                              Pmod_ident "CompletedNatWitness" (lib/grammarFunctor.ml[1238,34578+14]..[1238,34578+33])
                          structure_item (lib/grammarFunctor.ml[1239,34612+6]..[1239,34612+34])
                            Pstr_type Rec
                            [
                              type_declaration "property" (lib/grammarFunctor.ml[1239,34612+11]..[1239,34612+19]) (lib/grammarFunctor.ml[1239,34612+6]..[1239,34612+34])
                                ptype_params =
                                  []
                                ptype_cstrs =
                                  []
                                ptype_kind =
                                  Ptype_abstract
                                ptype_private = Public
                                ptype_manifest =
                                  Some
                                    core_type (lib/grammarFunctor.ml[1239,34612+22]..[1239,34612+34])
                                      Ptyp_constr "t" (lib/grammarFunctor.ml[1239,34612+33]..[1239,34612+34])
                                      [
                                        core_type (lib/grammarFunctor.ml[1239,34612+22]..[1239,34612+32])
                                          Ptyp_constr "Terminal.t" (lib/grammarFunctor.ml[1239,34612+22]..[1239,34612+32])
                                          []
                                      ]
                            ]
                        ]
                    module_expr (lib/grammarFunctor.ml[1241,34657+5]..[1252,35105+8])
                      Pmod_structure
                      [
                        structure_item (lib/grammarFunctor.ml[1242,34669+6]..[1242,34669+29])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1242,34669+10]..[1242,34669+18])
                                Ppat_var "shortcut" (lib/grammarFunctor.ml[1242,34669+10]..[1242,34669+18])
                              expression (lib/grammarFunctor.ml[1242,34669+19]..[1242,34669+29]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1242,34669+19]..[1242,34669+22])
                                  Ppat_var "_nt" (lib/grammarFunctor.ml[1242,34669+19]..[1242,34669+22])
                                expression (lib/grammarFunctor.ml[1242,34669+25]..[1242,34669+29])
                                  Pexp_construct "None" (lib/grammarFunctor.ml[1242,34669+25]..[1242,34669+29])
                                  None
                          ]
                        structure_item (lib/grammarFunctor.ml[1243,34699+6]..[1243,34699+30])
                          Pstr_open Fresh
                          module_expr (lib/grammarFunctor.ml[1243,34699+11]..[1243,34699+30])
                            Pmod_ident "CompletedNatWitness" (lib/grammarFunctor.ml[1243,34699+11]..[1243,34699+30])
                        structure_item (lib/grammarFunctor.ml[1245,34774+6]..[1245,34774+30])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1245,34774+10]..[1245,34774+18])
                                Ppat_var "terminal" (lib/grammarFunctor.ml[1245,34774+10]..[1245,34774+18])
                              expression (lib/grammarFunctor.ml[1245,34774+21]..[1245,34774+30])
                                Pexp_ident "singleton" (lib/grammarFunctor.ml[1245,34774+21]..[1245,34774+30])
                          ]
                        structure_item (lib/grammarFunctor.ml[1247,34883+6]..[1247,34883+32])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1247,34883+10]..[1247,34883+21])
                                Ppat_var "disjunction" (lib/grammarFunctor.ml[1247,34883+10]..[1247,34883+21])
                              expression (lib/grammarFunctor.ml[1247,34883+24]..[1247,34883+32])
                                Pexp_ident "min_lazy" (lib/grammarFunctor.ml[1247,34883+24]..[1247,34883+32])
                          ]
                        structure_item (lib/grammarFunctor.ml[1249,34995+6]..[1249,34995+34])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1249,34995+10]..[1249,34995+21])
                                Ppat_var "conjunction" (lib/grammarFunctor.ml[1249,34995+10]..[1249,34995+21])
                              expression (lib/grammarFunctor.ml[1249,34995+22]..[1249,34995+34]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1249,34995+22]..[1249,34995+23])
                                  Ppat_any
                                expression (lib/grammarFunctor.ml[1249,34995+26]..[1249,34995+34])
                                  Pexp_ident "add_lazy" (lib/grammarFunctor.ml[1249,34995+26]..[1249,34995+34])
                          ]
                        structure_item (lib/grammarFunctor.ml[1251,35077+6]..[1251,35077+27])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1251,35077+10]..[1251,35077+17])
                                Ppat_var "epsilon" (lib/grammarFunctor.ml[1251,35077+10]..[1251,35077+17])
                              expression (lib/grammarFunctor.ml[1251,35077+20]..[1251,35077+27])
                                Pexp_ident "epsilon" (lib/grammarFunctor.ml[1251,35077+20]..[1251,35077+27])
                          ]
                      ]
              structure_item (lib/grammarFunctor.ml[1270,35962+0]..[1271,36006+50])
                Pstr_value Nonrec
                [
                  <def>
                    pattern (lib/grammarFunctor.ml[1270,35962+4]..[1270,35962+27])
                      Ppat_var "generates_nonempty_word" (lib/grammarFunctor.ml[1270,35962+4]..[1270,35962+27])
                    expression (lib/grammarFunctor.ml[1270,35962+28]..[1271,36006+50]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lib/grammarFunctor.ml[1270,35962+28]..[1270,35962+34])
                        Ppat_var "symbol" (lib/grammarFunctor.ml[1270,35962+28]..[1270,35962+34])
                      expression (lib/grammarFunctor.ml[1270,35962+35]..[1271,36006+50])
                        Pexp_constraint
                        expression (lib/grammarFunctor.ml[1271,36006+2]..[1271,36006+50])
                          Pexp_apply
                          expression (lib/grammarFunctor.ml[1271,36006+2]..[1271,36006+5])
                            Pexp_ident "not" (lib/grammarFunctor.ml[1271,36006+2]..[1271,36006+5])
                          [
                            <arg>
                            Nolabel
                              expression (lib/grammarFunctor.ml[1271,36006+6]..[1271,36006+50])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[1271,36006+7]..[1271,36006+27])
                                  Pexp_ident "TerminalSet.is_empty" (lib/grammarFunctor.ml[1271,36006+7]..[1271,36006+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[1271,36006+28]..[1271,36006+49])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[1271,36006+29]..[1271,36006+41])
                                        Pexp_ident "FIRST.symbol" (lib/grammarFunctor.ml[1271,36006+29]..[1271,36006+41])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1271,36006+42]..[1271,36006+48])
                                            Pexp_ident "symbol" (lib/grammarFunctor.ml[1271,36006+42]..[1271,36006+48])
                                      ]
                                ]
                          ]
                        core_type (lib/grammarFunctor.ml[1270,35962+37]..[1270,35962+41])
                          Ptyp_constr "bool" (lib/grammarFunctor.ml[1270,35962+37]..[1270,35962+41])
                          []
                ]
              structure_item (lib/grammarFunctor.ml[1279,36388+0]..[1304,37240+3])
                Pstr_module
                "G" (lib/grammarFunctor.ml[1279,36388+7]..[1279,36388+8])
                  module_expr (lib/grammarFunctor.ml[1279,36388+11]..[1304,37240+3])
                    Pmod_structure
                    [
                      structure_item (lib/grammarFunctor.ml[1280,36406+2]..[1280,36406+27])
                        Pstr_type Rec
                        [
                          type_declaration "node" (lib/grammarFunctor.ml[1280,36406+7]..[1280,36406+11]) (lib/grammarFunctor.ml[1280,36406+2]..[1280,36406+27])
                            ptype_params =
                              []
                            ptype_cstrs =
                              []
                            ptype_kind =
                              Ptype_abstract
                            ptype_private = Public
                            ptype_manifest =
                              Some
                                core_type (lib/grammarFunctor.ml[1280,36406+14]..[1280,36406+27])
                                  Ptyp_constr "Nonterminal.t" (lib/grammarFunctor.ml[1280,36406+14]..[1280,36406+27])
                                  []
                        ]
                      structure_item (lib/grammarFunctor.ml[1281,36434+2]..[1281,36434+23])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1281,36434+6]..[1281,36434+7])
                              Ppat_var "n" (lib/grammarFunctor.ml[1281,36434+6]..[1281,36434+7])
                            expression (lib/grammarFunctor.ml[1281,36434+10]..[1281,36434+23])
                              Pexp_ident "Nonterminal.n" (lib/grammarFunctor.ml[1281,36434+10]..[1281,36434+23])
                        ]
                      structure_item (lib/grammarFunctor.ml[1282,36458+2]..[1282,36458+19])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1282,36458+6]..[1282,36458+11])
                              Ppat_var "index" (lib/grammarFunctor.ml[1282,36458+6]..[1282,36458+11])
                            expression (lib/grammarFunctor.ml[1282,36458+12]..[1282,36458+19]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[1282,36458+12]..[1282,36458+14])
                                Ppat_var "nt" (lib/grammarFunctor.ml[1282,36458+12]..[1282,36458+14])
                              expression (lib/grammarFunctor.ml[1282,36458+17]..[1282,36458+19])
                                Pexp_ident "nt" (lib/grammarFunctor.ml[1282,36458+17]..[1282,36458+19])
                        ]
                      structure_item (lib/grammarFunctor.ml[1283,36478+2]..[1283,36478+29])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1283,36478+6]..[1283,36478+10])
                              Ppat_var "iter" (lib/grammarFunctor.ml[1283,36478+6]..[1283,36478+10])
                            expression (lib/grammarFunctor.ml[1283,36478+13]..[1283,36478+29])
                              Pexp_ident "Nonterminal.iter" (lib/grammarFunctor.ml[1283,36478+13]..[1283,36478+29])
                        ]
                      structure_item (lib/grammarFunctor.ml[1284,36508+2]..[1301,37152+5])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1284,36508+6]..[1284,36508+24])
                              Ppat_var "labeled_successors" (lib/grammarFunctor.ml[1284,36508+6]..[1284,36508+24])
                            expression (lib/grammarFunctor.ml[1284,36508+25]..[1301,37152+5]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[1284,36508+25]..[1284,36508+30])
                                Ppat_var "yield" (lib/grammarFunctor.ml[1284,36508+25]..[1284,36508+30])
                              expression (lib/grammarFunctor.ml[1284,36508+31]..[1301,37152+5]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1284,36508+31]..[1284,36508+33])
                                  Ppat_var "nt" (lib/grammarFunctor.ml[1284,36508+31]..[1284,36508+33])
                                expression (lib/grammarFunctor.ml[1285,36544+4]..[1301,37152+5])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[1285,36544+4]..[1285,36544+21])
                                    Pexp_ident "Production.iternt" (lib/grammarFunctor.ml[1285,36544+4]..[1285,36544+21])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[1285,36544+22]..[1285,36544+24])
                                        Pexp_ident "nt" (lib/grammarFunctor.ml[1285,36544+22]..[1285,36544+24])
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[1285,36544+25]..[1301,37152+5])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lib/grammarFunctor.ml[1285,36544+30]..[1285,36544+34])
                                          Ppat_var "prod" (lib/grammarFunctor.ml[1285,36544+30]..[1285,36544+34])
                                        expression (lib/grammarFunctor.ml[1286,36582+6]..[1300,37144+7])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/grammarFunctor.ml[1286,36582+10]..[1286,36582+13])
                                                Ppat_var "rhs" (lib/grammarFunctor.ml[1286,36582+10]..[1286,36582+13])
                                              expression (lib/grammarFunctor.ml[1286,36582+16]..[1286,36582+35])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[1286,36582+16]..[1286,36582+30])
                                                  Pexp_ident "Production.rhs" (lib/grammarFunctor.ml[1286,36582+16]..[1286,36582+30])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[1286,36582+31]..[1286,36582+35])
                                                      Pexp_ident "prod" (lib/grammarFunctor.ml[1286,36582+31]..[1286,36582+35])
                                                ]
                                          ]
                                          expression (lib/grammarFunctor.ml[1287,36621+6]..[1300,37144+7])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[1287,36621+13]..[1287,36621+24])
                                              Pexp_ident "Array.iteri" (lib/grammarFunctor.ml[1287,36621+13]..[1287,36621+24])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1287,36621+25]..[1300,37144+7])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (lib/grammarFunctor.ml[1287,36621+30]..[1287,36621+31])
                                                    Ppat_var "i" (lib/grammarFunctor.ml[1287,36621+30]..[1287,36621+31])
                                                  expression (lib/grammarFunctor.ml[1287,36621+32]..[1299,37118+25]) ghost
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (lib/grammarFunctor.ml[1287,36621+32]..[1287,36621+38])
                                                      Ppat_var "symbol" (lib/grammarFunctor.ml[1287,36621+32]..[1287,36621+38])
                                                    expression (lib/grammarFunctor.ml[1288,36663+8]..[1299,37118+25])
                                                      Pexp_match
                                                      expression (lib/grammarFunctor.ml[1288,36663+14]..[1288,36663+20])
                                                        Pexp_ident "symbol" (lib/grammarFunctor.ml[1288,36663+14]..[1288,36663+20])
                                                      [
                                                        <case>
                                                          pattern (lib/grammarFunctor.ml[1289,36689+10]..[1289,36689+20])
                                                            Ppat_construct "Symbol.T" (lib/grammarFunctor.ml[1289,36689+10]..[1289,36689+18])
                                                            Some
                                                              []
                                                              pattern (lib/grammarFunctor.ml[1289,36689+19]..[1289,36689+20])
                                                                Ppat_any
                                                          expression (lib/grammarFunctor.ml[1289,36689+26]..[1289,36689+28])
                                                            Pexp_construct "()" (lib/grammarFunctor.ml[1289,36689+26]..[1289,36689+28])
                                                            None
                                                        <case>
                                                          pattern (lib/grammarFunctor.ml[1290,36718+10]..[1290,36718+22])
                                                            Ppat_construct "Symbol.N" (lib/grammarFunctor.ml[1290,36718+10]..[1290,36718+18])
                                                            Some
                                                              []
                                                              pattern (lib/grammarFunctor.ml[1290,36718+19]..[1290,36718+22])
                                                                Ppat_var "nt'" (lib/grammarFunctor.ml[1290,36718+19]..[1290,36718+22])
                                                          expression (lib/grammarFunctor.ml[1294,36958+12]..[1299,37118+25])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (lib/grammarFunctor.ml[1294,36958+16]..[1294,36958+19])
                                                                  Ppat_var "gnw" (lib/grammarFunctor.ml[1294,36958+16]..[1294,36958+19])
                                                                expression (lib/grammarFunctor.ml[1295,36980+14]..[1297,37083+19])
                                                                  Pexp_apply
                                                                  expression (lib/grammarFunctor.ml[1295,36980+14]..[1295,36980+28])
                                                                    Pexp_ident "MArray.existsi" (lib/grammarFunctor.ml[1295,36980+14]..[1295,36980+28])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lib/grammarFunctor.ml[1295,36980+29]..[1297,37083+15])
Pexp_fun
Nolabel
None
pattern (lib/grammarFunctor.ml[1295,36980+34]..[1295,36980+35])
  Ppat_var "j" (lib/grammarFunctor.ml[1295,36980+34]..[1295,36980+35])
expression (lib/grammarFunctor.ml[1295,36980+36]..[1296,37026+56]) ghost
  Pexp_fun
  Nolabel
  None
  pattern (lib/grammarFunctor.ml[1295,36980+36]..[1295,36980+42])
    Ppat_var "symbol" (lib/grammarFunctor.ml[1295,36980+36]..[1295,36980+42])
  expression (lib/grammarFunctor.ml[1296,37026+16]..[1296,37026+56])
    Pexp_apply
    expression (lib/grammarFunctor.ml[1296,37026+23]..[1296,37026+25])
      Pexp_ident "&&" (lib/grammarFunctor.ml[1296,37026+23]..[1296,37026+25])
    [
      <arg>
      Nolabel
        expression (lib/grammarFunctor.ml[1296,37026+16]..[1296,37026+22])
          Pexp_apply
          expression (lib/grammarFunctor.ml[1296,37026+18]..[1296,37026+20])
            Pexp_ident "<>" (lib/grammarFunctor.ml[1296,37026+18]..[1296,37026+20])
          [
            <arg>
            Nolabel
              expression (lib/grammarFunctor.ml[1296,37026+16]..[1296,37026+17])
                Pexp_ident "i" (lib/grammarFunctor.ml[1296,37026+16]..[1296,37026+17])
            <arg>
            Nolabel
              expression (lib/grammarFunctor.ml[1296,37026+21]..[1296,37026+22])
                Pexp_ident "j" (lib/grammarFunctor.ml[1296,37026+21]..[1296,37026+22])
          ]
      <arg>
      Nolabel
        expression (lib/grammarFunctor.ml[1296,37026+26]..[1296,37026+56])
          Pexp_apply
          expression (lib/grammarFunctor.ml[1296,37026+26]..[1296,37026+49])
            Pexp_ident "generates_nonempty_word" (lib/grammarFunctor.ml[1296,37026+26]..[1296,37026+49])
          [
            <arg>
            Nolabel
              expression (lib/grammarFunctor.ml[1296,37026+50]..[1296,37026+56])
                Pexp_ident "symbol" (lib/grammarFunctor.ml[1296,37026+50]..[1296,37026+56])
          ]
    ]
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lib/grammarFunctor.ml[1297,37083+16]..[1297,37083+19])
Pexp_ident "rhs" (lib/grammarFunctor.ml[1297,37083+16]..[1297,37083+19])
                                                                  ]
                                                            ]
                                                            expression (lib/grammarFunctor.ml[1299,37118+12]..[1299,37118+25])
                                                              Pexp_apply
                                                              expression (lib/grammarFunctor.ml[1299,37118+12]..[1299,37118+17])
                                                                Pexp_ident "yield" (lib/grammarFunctor.ml[1299,37118+12]..[1299,37118+17])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/grammarFunctor.ml[1299,37118+18]..[1299,37118+21])
                                                                    Pexp_ident "gnw" (lib/grammarFunctor.ml[1299,37118+18]..[1299,37118+21])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/grammarFunctor.ml[1299,37118+22]..[1299,37118+25])
                                                                    Pexp_ident "nt'" (lib/grammarFunctor.ml[1299,37118+22]..[1299,37118+25])
                                                              ]
                                                      ]
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1287,36621+6]..[1287,36621+9])
                                                  Pexp_ident "rhs" (lib/grammarFunctor.ml[1287,36621+6]..[1287,36621+9])
                                            ]
                                  ]
                        ]
                      structure_item (lib/grammarFunctor.ml[1302,37158+2]..[1303,37186+53])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1302,37158+6]..[1302,37158+16])
                              Ppat_var "successors" (lib/grammarFunctor.ml[1302,37158+6]..[1302,37158+16])
                            expression (lib/grammarFunctor.ml[1302,37158+17]..[1303,37186+53]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[1302,37158+17]..[1302,37158+22])
                                Ppat_var "yield" (lib/grammarFunctor.ml[1302,37158+17]..[1302,37158+22])
                              expression (lib/grammarFunctor.ml[1302,37158+23]..[1303,37186+53]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1302,37158+23]..[1302,37158+25])
                                  Ppat_var "nt" (lib/grammarFunctor.ml[1302,37158+23]..[1302,37158+25])
                                expression (lib/grammarFunctor.ml[1303,37186+4]..[1303,37186+53])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[1303,37186+4]..[1303,37186+22])
                                    Pexp_ident "labeled_successors" (lib/grammarFunctor.ml[1303,37186+4]..[1303,37186+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[1303,37186+23]..[1303,37186+50])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lib/grammarFunctor.ml[1303,37186+28]..[1303,37186+32])
                                          Ppat_var "_gnw" (lib/grammarFunctor.ml[1303,37186+28]..[1303,37186+32])
                                        expression (lib/grammarFunctor.ml[1303,37186+33]..[1303,37186+49]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (lib/grammarFunctor.ml[1303,37186+33]..[1303,37186+36])
                                            Ppat_var "nt'" (lib/grammarFunctor.ml[1303,37186+33]..[1303,37186+36])
                                          expression (lib/grammarFunctor.ml[1303,37186+40]..[1303,37186+49])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[1303,37186+40]..[1303,37186+45])
                                              Pexp_ident "yield" (lib/grammarFunctor.ml[1303,37186+40]..[1303,37186+45])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1303,37186+46]..[1303,37186+49])
                                                  Pexp_ident "nt'" (lib/grammarFunctor.ml[1303,37186+46]..[1303,37186+49])
                                            ]
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[1303,37186+51]..[1303,37186+53])
                                        Pexp_ident "nt" (lib/grammarFunctor.ml[1303,37186+51]..[1303,37186+53])
                                  ]
                        ]
                    ]
              structure_item (lib/grammarFunctor.ml[1312,37583+0]..[1329,38242+5])
                Pstr_value Nonrec
                [
                  <def>
                    pattern (lib/grammarFunctor.ml[1312,37583+4]..[1312,37583+13])
                      Ppat_var "unbounded" (lib/grammarFunctor.ml[1312,37583+4]..[1312,37583+13])
                    core_type (lib/grammarFunctor.ml[1312,37583+16]..[1312,37583+33])
                      Ptyp_constr "Lazy.t" (lib/grammarFunctor.ml[1312,37583+27]..[1312,37583+33])
                      [
                        core_type (lib/grammarFunctor.ml[1312,37583+16]..[1312,37583+26])
                          Ptyp_constr "array" (lib/grammarFunctor.ml[1312,37583+21]..[1312,37583+26])
                          [
                            core_type (lib/grammarFunctor.ml[1312,37583+16]..[1312,37583+20])
                              Ptyp_constr "bool" (lib/grammarFunctor.ml[1312,37583+16]..[1312,37583+20])
                              []
                          ]
                      ]
                    expression (lib/grammarFunctor.ml[1313,37619+2]..[1329,38242+5])
                      Pexp_lazy
                      expression (lib/grammarFunctor.ml[1313,37619+7]..[1329,38242+5])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1314,37632+8]..[1314,37632+17])
                              Ppat_var "unbounded" (lib/grammarFunctor.ml[1314,37632+8]..[1314,37632+17])
                            expression (lib/grammarFunctor.ml[1314,37632+20]..[1314,37632+50])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[1314,37632+20]..[1314,37632+30])
                                Pexp_ident "Array.make" (lib/grammarFunctor.ml[1314,37632+20]..[1314,37632+30])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[1314,37632+31]..[1314,37632+44])
                                    Pexp_ident "Nonterminal.n" (lib/grammarFunctor.ml[1314,37632+31]..[1314,37632+44])
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[1314,37632+45]..[1314,37632+50])
                                    Pexp_construct "false" (lib/grammarFunctor.ml[1314,37632+45]..[1314,37632+50])
                                    None
                              ]
                        ]
                        expression (lib/grammarFunctor.ml[1315,37686+4]..[1328,38228+13])
                          Pexp_letmodule "T" (lib/grammarFunctor.ml[1315,37686+15]..[1315,37686+16])
                          module_expr (lib/grammarFunctor.ml[1315,37686+19]..[1315,37686+32])
                            Pmod_apply
                            module_expr (lib/grammarFunctor.ml[1315,37686+19]..[1315,37686+29])
                              Pmod_ident "Tarjan.Run" (lib/grammarFunctor.ml[1315,37686+19]..[1315,37686+29])
                            module_expr (lib/grammarFunctor.ml[1315,37686+30]..[1315,37686+31])
                              Pmod_ident "G" (lib/grammarFunctor.ml[1315,37686+30]..[1315,37686+31])
                          expression (lib/grammarFunctor.ml[1317,37778+4]..[1328,38228+13])
                            Pexp_sequence
                            expression (lib/grammarFunctor.ml[1317,37778+4]..[1327,38219+7])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[1317,37778+4]..[1317,37778+10])
                                Pexp_ident "G.iter" (lib/grammarFunctor.ml[1317,37778+4]..[1317,37778+10])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[1317,37778+11]..[1327,38219+7])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lib/grammarFunctor.ml[1317,37778+21]..[1317,37778+23])
                                      Ppat_var "nt" (lib/grammarFunctor.ml[1317,37778+21]..[1317,37778+23])
                                    expression (lib/grammarFunctor.ml[1318,37805+6]..[1326,38209+9])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[1318,37805+12]..[1318,37805+32])
                                        Pexp_ident "G.labeled_successors" (lib/grammarFunctor.ml[1318,37805+12]..[1318,37805+32])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1318,37805+33]..[1326,38209+9])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (lib/grammarFunctor.ml[1318,37805+43]..[1318,37805+46])
                                              Ppat_var "gnw" (lib/grammarFunctor.ml[1318,37805+43]..[1318,37805+46])
                                            expression (lib/grammarFunctor.ml[1318,37805+47]..[1325,38197+11]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (lib/grammarFunctor.ml[1318,37805+47]..[1318,37805+50])
                                                Ppat_var "nt'" (lib/grammarFunctor.ml[1318,37805+47]..[1318,37805+50])
                                              expression (lib/grammarFunctor.ml[1320,37938+8]..[1325,38197+11])
                                                Pexp_ifthenelse
                                                expression (lib/grammarFunctor.ml[1320,37938+11]..[1320,37938+60])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[1320,37938+15]..[1320,37938+17])
                                                    Pexp_ident "&&" (lib/grammarFunctor.ml[1320,37938+15]..[1320,37938+17])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[1320,37938+11]..[1320,37938+14])
                                                        Pexp_ident "gnw" (lib/grammarFunctor.ml[1320,37938+11]..[1320,37938+14])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[1320,37938+18]..[1320,37938+60])
                                                        Pexp_apply
                                                        expression (lib/grammarFunctor.ml[1320,37938+38]..[1320,37938+39])
                                                          Pexp_ident "=" (lib/grammarFunctor.ml[1320,37938+38]..[1320,37938+39])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/grammarFunctor.ml[1320,37938+18]..[1320,37938+37])
                                                              Pexp_apply
                                                              expression (lib/grammarFunctor.ml[1320,37938+18]..[1320,37938+34])
                                                                Pexp_ident "T.representative" (lib/grammarFunctor.ml[1320,37938+18]..[1320,37938+34])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/grammarFunctor.ml[1320,37938+35]..[1320,37938+37])
                                                                    Pexp_ident "nt" (lib/grammarFunctor.ml[1320,37938+35]..[1320,37938+37])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/grammarFunctor.ml[1320,37938+40]..[1320,37938+60])
                                                              Pexp_apply
                                                              expression (lib/grammarFunctor.ml[1320,37938+40]..[1320,37938+56])
                                                                Pexp_ident "T.representative" (lib/grammarFunctor.ml[1320,37938+40]..[1320,37938+56])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/grammarFunctor.ml[1320,37938+57]..[1320,37938+60])
                                                                    Pexp_ident "nt'" (lib/grammarFunctor.ml[1320,37938+57]..[1320,37938+60])
                                                              ]
                                                        ]
                                                  ]
                                                expression (lib/grammarFunctor.ml[1320,37938+66]..[1325,38197+11])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[1322,38081+41]..[1322,38081+50])
                                                    Pexp_ident "List.iter" (lib/grammarFunctor.ml[1322,38081+41]..[1322,38081+50])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[1322,38081+51]..[1324,38183+13])
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (lib/grammarFunctor.ml[1322,38081+61]..[1322,38081+63])
                                                          Ppat_var "nt" (lib/grammarFunctor.ml[1322,38081+61]..[1322,38081+63])
                                                        expression (lib/grammarFunctor.ml[1323,38148+12]..[1323,38148+34])
                                                          Pexp_apply
                                                          expression (lib/grammarFunctor.ml[1323,38148+12]..[1323,38148+34]) ghost
                                                            Pexp_ident "Array.set" (lib/grammarFunctor.ml[1323,38148+12]..[1323,38148+34]) ghost
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/grammarFunctor.ml[1323,38148+12]..[1323,38148+21])
                                                                Pexp_ident "unbounded" (lib/grammarFunctor.ml[1323,38148+12]..[1323,38148+21])
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/grammarFunctor.ml[1323,38148+23]..[1323,38148+25])
                                                                Pexp_ident "nt" (lib/grammarFunctor.ml[1323,38148+23]..[1323,38148+25])
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/grammarFunctor.ml[1323,38148+30]..[1323,38148+34])
                                                                Pexp_construct "true" (lib/grammarFunctor.ml[1323,38148+30]..[1323,38148+34])
                                                                None
                                                          ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[1322,38081+10]..[1322,38081+37])
                                                        Pexp_apply
                                                        expression (lib/grammarFunctor.ml[1322,38081+10]..[1322,38081+15])
                                                          Pexp_ident "T.scc" (lib/grammarFunctor.ml[1322,38081+10]..[1322,38081+15])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/grammarFunctor.ml[1322,38081+16]..[1322,38081+37])
                                                              Pexp_apply
                                                              expression (lib/grammarFunctor.ml[1322,38081+17]..[1322,38081+33])
                                                                Pexp_ident "T.representative" (lib/grammarFunctor.ml[1322,38081+17]..[1322,38081+33])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/grammarFunctor.ml[1322,38081+34]..[1322,38081+36])
                                                                    Pexp_ident "nt" (lib/grammarFunctor.ml[1322,38081+34]..[1322,38081+36])
                                                              ]
                                                        ]
                                                  ]
                                                None
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1318,37805+6]..[1318,37805+8])
                                            Pexp_ident "nt" (lib/grammarFunctor.ml[1318,37805+6]..[1318,37805+8])
                                      ]
                              ]
                            expression (lib/grammarFunctor.ml[1328,38228+4]..[1328,38228+13])
                              Pexp_ident "unbounded" (lib/grammarFunctor.ml[1328,38228+4]..[1328,38228+13])
                ]
              structure_item (lib/grammarFunctor.ml[1331,38249+0]..[1332,38275+29])
                Pstr_value Nonrec
                [
                  <def>
                    pattern (lib/grammarFunctor.ml[1331,38249+4]..[1331,38249+13])
                      Ppat_var "unbounded" (lib/grammarFunctor.ml[1331,38249+4]..[1331,38249+13])
                    expression (lib/grammarFunctor.ml[1331,38249+14]..[1332,38275+29]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lib/grammarFunctor.ml[1331,38249+14]..[1331,38249+16])
                        Ppat_var "nt" (lib/grammarFunctor.ml[1331,38249+14]..[1331,38249+16])
                      expression (lib/grammarFunctor.ml[1331,38249+17]..[1332,38275+29])
                        Pexp_constraint
                        expression (lib/grammarFunctor.ml[1332,38275+2]..[1332,38275+29])
                          Pexp_apply
                          expression (lib/grammarFunctor.ml[1332,38275+2]..[1332,38275+29]) ghost
                            Pexp_ident "Array.get" (lib/grammarFunctor.ml[1332,38275+2]..[1332,38275+29]) ghost
                          [
                            <arg>
                            Nolabel
                              expression (lib/grammarFunctor.ml[1332,38275+2]..[1332,38275+24])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[1332,38275+3]..[1332,38275+13])
                                  Pexp_ident "Lazy.force" (lib/grammarFunctor.ml[1332,38275+3]..[1332,38275+13])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[1332,38275+14]..[1332,38275+23])
                                      Pexp_ident "unbounded" (lib/grammarFunctor.ml[1332,38275+14]..[1332,38275+23])
                                ]
                            <arg>
                            Nolabel
                              expression (lib/grammarFunctor.ml[1332,38275+26]..[1332,38275+28])
                                Pexp_ident "nt" (lib/grammarFunctor.ml[1332,38275+26]..[1332,38275+28])
                          ]
                        core_type (lib/grammarFunctor.ml[1331,38249+19]..[1331,38249+23])
                          Ptyp_constr "bool" (lib/grammarFunctor.ml[1331,38249+19]..[1331,38249+23])
                          []
                ]
              structure_item (lib/grammarFunctor.ml[1346,39083+0]..[1360,39624+9])
                Pstr_module
                "MAXIMAL" (lib/grammarFunctor.ml[1346,39083+7]..[1346,39083+14])
                  module_expr (lib/grammarFunctor.ml[1347,39100+2]..[1360,39624+9])
                    Pmod_apply
                    module_expr (lib/grammarFunctor.ml[1347,39100+2]..[1348,39118+20])
                      Pmod_apply
                      module_expr (lib/grammarFunctor.ml[1347,39100+2]..[1347,39100+17])
                        Pmod_ident "GenericAnalysis" (lib/grammarFunctor.ml[1347,39100+2]..[1347,39100+17])
                      module_expr (lib/grammarFunctor.ml[1348,39118+5]..[1348,39118+19])
                        Pmod_ident "NatInfinityMax" (lib/grammarFunctor.ml[1348,39118+5]..[1348,39118+19])
                    module_expr (lib/grammarFunctor.ml[1349,39139+5]..[1360,39624+8])
                      Pmod_structure
                      [
                        structure_item (lib/grammarFunctor.ml[1350,39151+6]..[1350,39151+25])
                          Pstr_open Fresh
                          module_expr (lib/grammarFunctor.ml[1350,39151+11]..[1350,39151+25])
                            Pmod_ident "NatInfinityMax" (lib/grammarFunctor.ml[1350,39151+11]..[1350,39151+25])
                        structure_item (lib/grammarFunctor.ml[1351,39177+6]..[1351,39177+68])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1351,39177+10]..[1351,39177+18])
                                Ppat_var "shortcut" (lib/grammarFunctor.ml[1351,39177+10]..[1351,39177+18])
                              expression (lib/grammarFunctor.ml[1351,39177+19]..[1351,39177+68]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1351,39177+19]..[1351,39177+21])
                                  Ppat_var "nt" (lib/grammarFunctor.ml[1351,39177+19]..[1351,39177+21])
                                expression (lib/grammarFunctor.ml[1351,39177+24]..[1351,39177+68])
                                  Pexp_ifthenelse
                                  expression (lib/grammarFunctor.ml[1351,39177+27]..[1351,39177+39])
                                    Pexp_apply
                                    expression (lib/grammarFunctor.ml[1351,39177+27]..[1351,39177+36])
                                      Pexp_ident "unbounded" (lib/grammarFunctor.ml[1351,39177+27]..[1351,39177+36])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[1351,39177+37]..[1351,39177+39])
                                          Pexp_ident "nt" (lib/grammarFunctor.ml[1351,39177+37]..[1351,39177+39])
                                    ]
                                  expression (lib/grammarFunctor.ml[1351,39177+45]..[1351,39177+58])
                                    Pexp_construct "Some" (lib/grammarFunctor.ml[1351,39177+45]..[1351,39177+49])
                                    Some
                                      expression (lib/grammarFunctor.ml[1351,39177+50]..[1351,39177+58])
                                        Pexp_ident "infinity" (lib/grammarFunctor.ml[1351,39177+50]..[1351,39177+58])
                                  Some
                                    expression (lib/grammarFunctor.ml[1351,39177+64]..[1351,39177+68])
                                      Pexp_construct "None" (lib/grammarFunctor.ml[1351,39177+64]..[1351,39177+68])
                                      None
                          ]
                        structure_item (lib/grammarFunctor.ml[1353,39290+6]..[1353,39290+34])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1353,39290+10]..[1353,39290+18])
                                Ppat_var "terminal" (lib/grammarFunctor.ml[1353,39290+10]..[1353,39290+18])
                              expression (lib/grammarFunctor.ml[1353,39290+19]..[1353,39290+34]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1353,39290+19]..[1353,39290+23])
                                  Ppat_var "_tok" (lib/grammarFunctor.ml[1353,39290+19]..[1353,39290+23])
                                expression (lib/grammarFunctor.ml[1353,39290+26]..[1353,39290+34])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[1353,39290+26]..[1353,39290+32])
                                    Pexp_ident "finite" (lib/grammarFunctor.ml[1353,39290+26]..[1353,39290+32])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[1353,39290+33]..[1353,39290+34])
                                        Pexp_constant PConst_int (1,None)
                                  ]
                          ]
                        structure_item (lib/grammarFunctor.ml[1355,39403+6]..[1355,39403+32])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1355,39403+10]..[1355,39403+21])
                                Ppat_var "disjunction" (lib/grammarFunctor.ml[1355,39403+10]..[1355,39403+21])
                              expression (lib/grammarFunctor.ml[1355,39403+24]..[1355,39403+32])
                                Pexp_ident "max_lazy" (lib/grammarFunctor.ml[1355,39403+24]..[1355,39403+32])
                          ]
                        structure_item (lib/grammarFunctor.ml[1357,39515+6]..[1357,39515+34])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1357,39515+10]..[1357,39515+21])
                                Ppat_var "conjunction" (lib/grammarFunctor.ml[1357,39515+10]..[1357,39515+21])
                              expression (lib/grammarFunctor.ml[1357,39515+22]..[1357,39515+34]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1357,39515+22]..[1357,39515+23])
                                  Ppat_any
                                expression (lib/grammarFunctor.ml[1357,39515+26]..[1357,39515+34])
                                  Pexp_ident "add_lazy" (lib/grammarFunctor.ml[1357,39515+26]..[1357,39515+34])
                          ]
                        structure_item (lib/grammarFunctor.ml[1359,39597+6]..[1359,39597+26])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1359,39597+10]..[1359,39597+17])
                                Ppat_var "epsilon" (lib/grammarFunctor.ml[1359,39597+10]..[1359,39597+17])
                              expression (lib/grammarFunctor.ml[1359,39597+20]..[1359,39597+26])
                                Pexp_ident "bottom" (lib/grammarFunctor.ml[1359,39597+20]..[1359,39597+26])
                          ]
                      ]
              structure_item (lib/grammarFunctor.ml[1364,39715+0]..[1390,40972+5])
                Pstr_value Nonrec
                [
                  <def>
                    pattern (lib/grammarFunctor.ml[1364,39715+4]..[1364,39715+6])
                      Ppat_construct "()" (lib/grammarFunctor.ml[1364,39715+4]..[1364,39715+6])
                      None
                    expression (lib/grammarFunctor.ml[1365,39724+2]..[1390,40972+5])
                      Pexp_ifthenelse
                      expression (lib/grammarFunctor.ml[1365,39724+5]..[1365,39724+12])
                        Pexp_ident "verbose" (lib/grammarFunctor.ml[1365,39724+5]..[1365,39724+12])
                      expression (lib/grammarFunctor.ml[1365,39724+18]..[1390,40972+5])
                        Pexp_apply
                        expression (lib/grammarFunctor.ml[1372,40105+4]..[1372,40105+18])
                          Pexp_ident "StringSet.iter" (lib/grammarFunctor.ml[1372,40105+4]..[1372,40105+18])
                        [
                          <arg>
                          Nolabel
                            expression (lib/grammarFunctor.ml[1372,40105+19]..[1382,40552+5])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[1372,40105+24]..[1372,40105+30])
                                Ppat_var "symbol" (lib/grammarFunctor.ml[1372,40105+24]..[1372,40105+30])
                              expression (lib/grammarFunctor.ml[1373,40139+6]..[1381,40474+77])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/grammarFunctor.ml[1373,40139+10]..[1373,40139+12])
                                      Ppat_var "nt" (lib/grammarFunctor.ml[1373,40139+10]..[1373,40139+12])
                                    expression (lib/grammarFunctor.ml[1373,40139+15]..[1373,40139+40])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[1373,40139+15]..[1373,40139+33])
                                        Pexp_ident "Nonterminal.lookup" (lib/grammarFunctor.ml[1373,40139+15]..[1373,40139+33])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1373,40139+34]..[1373,40139+40])
                                            Pexp_ident "symbol" (lib/grammarFunctor.ml[1373,40139+34]..[1373,40139+40])
                                      ]
                                ]
                                expression (lib/grammarFunctor.ml[1374,40183+6]..[1381,40474+77])
                                  Pexp_sequence
                                  expression (lib/grammarFunctor.ml[1374,40183+6]..[1377,40284+73])
                                    Pexp_ifthenelse
                                    expression (lib/grammarFunctor.ml[1374,40183+9]..[1374,40183+38])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[1374,40183+9]..[1374,40183+12])
                                        Pexp_ident "not" (lib/grammarFunctor.ml[1374,40183+9]..[1374,40183+12])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1374,40183+13]..[1374,40183+38])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[1374,40183+14]..[1374,40183+34])
                                              Pexp_ident "NONEMPTY.nonterminal" (lib/grammarFunctor.ml[1374,40183+14]..[1374,40183+34])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1374,40183+35]..[1374,40183+37])
                                                  Pexp_ident "nt" (lib/grammarFunctor.ml[1374,40183+35]..[1374,40183+37])
                                            ]
                                      ]
                                    expression (lib/grammarFunctor.ml[1375,40227+8]..[1377,40284+73])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[1375,40227+8]..[1375,40227+19])
                                        Pexp_ident "Error.error" (lib/grammarFunctor.ml[1375,40227+8]..[1375,40227+19])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1376,40247+10]..[1376,40247+36])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[1376,40247+11]..[1376,40247+32])
                                              Pexp_ident "Nonterminal.positions" (lib/grammarFunctor.ml[1376,40247+11]..[1376,40247+32])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1376,40247+33]..[1376,40247+35])
                                                  Pexp_ident "nt" (lib/grammarFunctor.ml[1376,40247+33]..[1376,40247+35])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1377,40284+10]..[1377,40284+44])
                                            Pexp_constant PConst_string("%s generates the empty language.",(lib/grammarFunctor.ml[1377,40284+11]..[1377,40284+43]),None)
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1377,40284+45]..[1377,40284+73])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[1377,40284+46]..[1377,40284+63])
                                              Pexp_ident "Nonterminal.print" (lib/grammarFunctor.ml[1377,40284+46]..[1377,40284+63])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1377,40284+64]..[1377,40284+69])
                                                  Pexp_construct "false" (lib/grammarFunctor.ml[1377,40284+64]..[1377,40284+69])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1377,40284+70]..[1377,40284+72])
                                                  Pexp_ident "nt" (lib/grammarFunctor.ml[1377,40284+70]..[1377,40284+72])
                                            ]
                                      ]
                                    None
                                  expression (lib/grammarFunctor.ml[1378,40359+6]..[1381,40474+77])
                                    Pexp_ifthenelse
                                    expression (lib/grammarFunctor.ml[1378,40359+9]..[1378,40359+52])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[1378,40359+9]..[1378,40359+29])
                                        Pexp_ident "TerminalSet.is_empty" (lib/grammarFunctor.ml[1378,40359+9]..[1378,40359+29])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1378,40359+30]..[1378,40359+52])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[1378,40359+31]..[1378,40359+48])
                                              Pexp_ident "FIRST.nonterminal" (lib/grammarFunctor.ml[1378,40359+31]..[1378,40359+48])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1378,40359+49]..[1378,40359+51])
                                                  Pexp_ident "nt" (lib/grammarFunctor.ml[1378,40359+49]..[1378,40359+51])
                                            ]
                                      ]
                                    expression (lib/grammarFunctor.ml[1379,40417+8]..[1381,40474+77])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[1379,40417+8]..[1379,40417+19])
                                        Pexp_ident "Error.error" (lib/grammarFunctor.ml[1379,40417+8]..[1379,40417+19])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1380,40437+10]..[1380,40437+36])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[1380,40437+11]..[1380,40437+32])
                                              Pexp_ident "Nonterminal.positions" (lib/grammarFunctor.ml[1380,40437+11]..[1380,40437+32])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1380,40437+33]..[1380,40437+35])
                                                  Pexp_ident "nt" (lib/grammarFunctor.ml[1380,40437+33]..[1380,40437+35])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1381,40474+10]..[1381,40474+48])
                                            Pexp_constant PConst_string("%s generates the language {epsilon}.",(lib/grammarFunctor.ml[1381,40474+11]..[1381,40474+47]),None)
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1381,40474+49]..[1381,40474+77])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[1381,40474+50]..[1381,40474+67])
                                              Pexp_ident "Nonterminal.print" (lib/grammarFunctor.ml[1381,40474+50]..[1381,40474+67])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1381,40474+68]..[1381,40474+73])
                                                  Pexp_construct "false" (lib/grammarFunctor.ml[1381,40474+68]..[1381,40474+73])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1381,40474+74]..[1381,40474+76])
                                                  Pexp_ident "nt" (lib/grammarFunctor.ml[1381,40474+74]..[1381,40474+76])
                                            ]
                                      ]
                                    None
                          <arg>
                          Nolabel
                            expression (lib/grammarFunctor.ml[1382,40552+6]..[1382,40552+27])
                              Pexp_field
                              expression (lib/grammarFunctor.ml[1382,40552+6]..[1382,40552+13])
                                Pexp_ident "grammar" (lib/grammarFunctor.ml[1382,40552+6]..[1382,40552+13])
                              "start_symbols" (lib/grammarFunctor.ml[1382,40552+14]..[1382,40552+27])
                        ]
                      None
                ]
              structure_item (lib/grammarFunctor.ml[1434,42731+0]..[1493,44634+3])
                Pstr_module
                "FOLLOW" (lib/grammarFunctor.ml[1434,42731+7]..[1434,42731+13])
                  module_expr (lib/grammarFunctor.ml[1434,42731+14]..[1493,44634+3])
                    Pmod_functor "P" (lib/grammarFunctor.ml[1434,42731+15]..[1434,42731+16])
                    module_type (lib/grammarFunctor.ml[1434,42731+19]..[1439,42900+3])
                      Pmty_signature
                      [
                        signature_item (lib/grammarFunctor.ml[1435,42754+2]..[1435,42754+34])
                          Psig_include
                          module_type (lib/grammarFunctor.ml[1435,42754+10]..[1435,42754+34])
                            Pmty_ident "Fix.MINIMAL_SEMI_LATTICE" (lib/grammarFunctor.ml[1435,42754+10]..[1435,42754+34])
                        signature_item (lib/grammarFunctor.ml[1436,42789+2]..[1436,42789+22])
                          Psig_value
                          value_description "bottom" (lib/grammarFunctor.ml[1436,42789+6]..[1436,42789+12]) (lib/grammarFunctor.ml[1436,42789+2]..[1436,42789+22])
                            core_type (lib/grammarFunctor.ml[1436,42789+14]..[1436,42789+22])
                              Ptyp_constr "property" (lib/grammarFunctor.ml[1436,42789+14]..[1436,42789+22])
                              []
                            []
                        signature_item (lib/grammarFunctor.ml[1437,42812+2]..[1437,42812+38])
                          Psig_value
                          value_description "terminal" (lib/grammarFunctor.ml[1437,42812+6]..[1437,42812+14]) (lib/grammarFunctor.ml[1437,42812+2]..[1437,42812+38])
                            core_type (lib/grammarFunctor.ml[1437,42812+16]..[1437,42812+38])
                              Ptyp_arrow
                              Nolabel
                              core_type (lib/grammarFunctor.ml[1437,42812+16]..[1437,42812+26])
                                Ptyp_constr "Terminal.t" (lib/grammarFunctor.ml[1437,42812+16]..[1437,42812+26])
                                []
                              core_type (lib/grammarFunctor.ml[1437,42812+30]..[1437,42812+38])
                                Ptyp_constr "property" (lib/grammarFunctor.ml[1437,42812+30]..[1437,42812+38])
                                []
                            []
                        signature_item (lib/grammarFunctor.ml[1438,42851+2]..[1438,42851+48])
                          Psig_value
                          value_description "first" (lib/grammarFunctor.ml[1438,42851+6]..[1438,42851+11]) (lib/grammarFunctor.ml[1438,42851+2]..[1438,42851+48])
                            core_type (lib/grammarFunctor.ml[1438,42851+13]..[1438,42851+48])
                              Ptyp_arrow
                              Nolabel
                              core_type (lib/grammarFunctor.ml[1438,42851+13]..[1438,42851+29])
                                Ptyp_constr "Production.index" (lib/grammarFunctor.ml[1438,42851+13]..[1438,42851+29])
                                []
                              core_type (lib/grammarFunctor.ml[1438,42851+33]..[1438,42851+48])
                                Ptyp_arrow
                                Nolabel
                                core_type (lib/grammarFunctor.ml[1438,42851+33]..[1438,42851+36])
                                  Ptyp_constr "int" (lib/grammarFunctor.ml[1438,42851+33]..[1438,42851+36])
                                  []
                                core_type (lib/grammarFunctor.ml[1438,42851+40]..[1438,42851+48])
                                  Ptyp_constr "property" (lib/grammarFunctor.ml[1438,42851+40]..[1438,42851+48])
                                  []
                            []
                      ]
                    module_expr (lib/grammarFunctor.ml[1439,42900+7]..[1493,44634+3])
                      Pmod_structure
                      [
                        structure_item (lib/grammarFunctor.ml[1441,42915+2]..[1442,42928+48])
                          Pstr_module
                          "M" (lib/grammarFunctor.ml[1441,42915+9]..[1441,42915+10])
                            module_expr (lib/grammarFunctor.ml[1442,42928+4]..[1442,42928+48])
                              Pmod_apply
                              module_expr (lib/grammarFunctor.ml[1442,42928+4]..[1442,42928+35])
                                Pmod_ident "Fix.Glue.ArraysAsImperativeMaps" (lib/grammarFunctor.ml[1442,42928+4]..[1442,42928+35])
                              module_expr (lib/grammarFunctor.ml[1442,42928+36]..[1442,42928+47])
                                Pmod_ident "Nonterminal" (lib/grammarFunctor.ml[1442,42928+36]..[1442,42928+47])
                        structure_item (lib/grammarFunctor.ml[1444,42978+2]..[1445,42991+24])
                          Pstr_module
                          "S" (lib/grammarFunctor.ml[1444,42978+9]..[1444,42978+10])
                            module_expr (lib/grammarFunctor.ml[1445,42991+4]..[1445,42991+24])
                              Pmod_apply
                              module_expr (lib/grammarFunctor.ml[1445,42991+4]..[1445,42991+21])
                                Pmod_apply
                                module_expr (lib/grammarFunctor.ml[1445,42991+4]..[1445,42991+18])
                                  Pmod_ident "FixSolver.Make" (lib/grammarFunctor.ml[1445,42991+4]..[1445,42991+18])
                                module_expr (lib/grammarFunctor.ml[1445,42991+19]..[1445,42991+20])
                                  Pmod_ident "M" (lib/grammarFunctor.ml[1445,42991+19]..[1445,42991+20])
                              module_expr (lib/grammarFunctor.ml[1445,42991+22]..[1445,42991+23])
                                Pmod_ident "P" (lib/grammarFunctor.ml[1445,42991+22]..[1445,42991+23])
                        structure_item (lib/grammarFunctor.ml[1450,43097+2]..[1456,43309+8])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1450,43097+6]..[1450,43097+8])
                                Ppat_construct "()" (lib/grammarFunctor.ml[1450,43097+6]..[1450,43097+8])
                                None
                              expression (lib/grammarFunctor.ml[1451,43108+4]..[1456,43309+8])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/grammarFunctor.ml[1451,43108+8]..[1451,43108+13])
                                      Ppat_var "sharp" (lib/grammarFunctor.ml[1451,43108+8]..[1451,43108+13])
                                    expression (lib/grammarFunctor.ml[1451,43108+16]..[1451,43108+41])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[1451,43108+16]..[1451,43108+26])
                                        Pexp_ident "P.terminal" (lib/grammarFunctor.ml[1451,43108+16]..[1451,43108+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1451,43108+27]..[1451,43108+41])
                                            Pexp_ident "Terminal.sharp" (lib/grammarFunctor.ml[1451,43108+27]..[1451,43108+41])
                                      ]
                                ]
                                expression (lib/grammarFunctor.ml[1452,43153+4]..[1456,43309+8])
                                  Pexp_for Up
                                  pattern (lib/grammarFunctor.ml[1452,43153+8]..[1452,43153+10])
                                    Ppat_var "nt" (lib/grammarFunctor.ml[1452,43153+8]..[1452,43153+10])
                                  expression (lib/grammarFunctor.ml[1452,43153+13]..[1452,43153+14])
                                    Pexp_constant PConst_int (0,None)
                                  expression (lib/grammarFunctor.ml[1452,43153+18]..[1452,43153+39])
                                    Pexp_apply
                                    expression (lib/grammarFunctor.ml[1452,43153+36]..[1452,43153+37])
                                      Pexp_ident "-" (lib/grammarFunctor.ml[1452,43153+36]..[1452,43153+37])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[1452,43153+18]..[1452,43153+35])
                                          Pexp_ident "Nonterminal.start" (lib/grammarFunctor.ml[1452,43153+18]..[1452,43153+35])
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[1452,43153+38]..[1452,43153+39])
                                          Pexp_constant PConst_int (1,None)
                                    ]
                                  expression (lib/grammarFunctor.ml[1453,43196+6]..[1455,43278+30])
                                    Pexp_sequence
                                    expression (lib/grammarFunctor.ml[1453,43196+6]..[1453,43196+47])
                                      Pexp_assert
                                      expression (lib/grammarFunctor.ml[1453,43196+13]..[1453,43196+47])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[1453,43196+14]..[1453,43196+43])
                                          Pexp_ident "Nonterminal.is_internal_start" (lib/grammarFunctor.ml[1453,43196+14]..[1453,43196+43])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[1453,43196+44]..[1453,43196+46])
                                              Pexp_ident "nt" (lib/grammarFunctor.ml[1453,43196+44]..[1453,43196+46])
                                        ]
                                    expression (lib/grammarFunctor.ml[1455,43278+6]..[1455,43278+30])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[1455,43278+6]..[1455,43278+21])
                                        Pexp_ident "S.record_ConVar" (lib/grammarFunctor.ml[1455,43278+6]..[1455,43278+21])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1455,43278+22]..[1455,43278+27])
                                            Pexp_ident "sharp" (lib/grammarFunctor.ml[1455,43278+22]..[1455,43278+27])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1455,43278+28]..[1455,43278+30])
                                            Pexp_ident "nt" (lib/grammarFunctor.ml[1455,43278+28]..[1455,43278+30])
                                      ]
                          ]
                        structure_item (lib/grammarFunctor.ml[1462,43572+2]..[1480,44303+22])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1462,43572+6]..[1462,43572+8])
                                Ppat_construct "()" (lib/grammarFunctor.ml[1462,43572+6]..[1462,43572+8])
                                None
                              expression (lib/grammarFunctor.ml[1463,43583+4]..[1480,44303+22])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[1463,43583+4]..[1463,43583+15])
                                  Pexp_ident "Array.iteri" (lib/grammarFunctor.ml[1463,43583+4]..[1463,43583+15])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[1463,43583+16]..[1480,44303+5])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lib/grammarFunctor.ml[1463,43583+21]..[1463,43583+25])
                                        Ppat_var "prod" (lib/grammarFunctor.ml[1463,43583+21]..[1463,43583+25])
                                      expression (lib/grammarFunctor.ml[1463,43583+26]..[1479,44291+11]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lib/grammarFunctor.ml[1463,43583+26]..[1463,43583+36])
                                          Ppat_tuple
                                          [
                                            pattern (lib/grammarFunctor.ml[1463,43583+27]..[1463,43583+30])
                                              Ppat_var "nt1" (lib/grammarFunctor.ml[1463,43583+27]..[1463,43583+30])
                                            pattern (lib/grammarFunctor.ml[1463,43583+32]..[1463,43583+35])
                                              Ppat_var "rhs" (lib/grammarFunctor.ml[1463,43583+32]..[1463,43583+35])
                                          ]
                                        expression (lib/grammarFunctor.ml[1465,43702+6]..[1479,44291+11])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[1465,43702+6]..[1465,43702+17])
                                            Pexp_ident "Array.iteri" (lib/grammarFunctor.ml[1465,43702+6]..[1465,43702+17])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[1465,43702+18]..[1479,44291+7])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (lib/grammarFunctor.ml[1465,43702+23]..[1465,43702+24])
                                                  Ppat_var "i" (lib/grammarFunctor.ml[1465,43702+23]..[1465,43702+24])
                                                expression (lib/grammarFunctor.ml[1465,43702+25]..[1478,44253+37]) ghost
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (lib/grammarFunctor.ml[1465,43702+25]..[1465,43702+31])
                                                    Ppat_var "symbol" (lib/grammarFunctor.ml[1465,43702+25]..[1465,43702+31])
                                                  expression (lib/grammarFunctor.ml[1466,43737+8]..[1478,44253+37])
                                                    Pexp_match
                                                    expression (lib/grammarFunctor.ml[1466,43737+14]..[1466,43737+20])
                                                      Pexp_ident "symbol" (lib/grammarFunctor.ml[1466,43737+14]..[1466,43737+20])
                                                    [
                                                      <case>
                                                        pattern (lib/grammarFunctor.ml[1467,43763+10]..[1467,43763+20])
                                                          Ppat_construct "Symbol.T" (lib/grammarFunctor.ml[1467,43763+10]..[1467,43763+18])
                                                          Some
                                                            []
                                                            pattern (lib/grammarFunctor.ml[1467,43763+19]..[1467,43763+20])
                                                              Ppat_any
                                                        expression (lib/grammarFunctor.ml[1468,43787+12]..[1468,43787+14])
                                                          Pexp_construct "()" (lib/grammarFunctor.ml[1468,43787+12]..[1468,43787+14])
                                                          None
                                                      <case>
                                                        pattern (lib/grammarFunctor.ml[1469,43802+10]..[1469,43802+22])
                                                          Ppat_construct "Symbol.N" (lib/grammarFunctor.ml[1469,43802+10]..[1469,43802+18])
                                                          Some
                                                            []
                                                            pattern (lib/grammarFunctor.ml[1469,43802+19]..[1469,43802+22])
                                                              Ppat_var "nt2" (lib/grammarFunctor.ml[1469,43802+19]..[1469,43802+22])
                                                        expression (lib/grammarFunctor.ml[1470,43828+12]..[1478,44253+37])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (lib/grammarFunctor.ml[1470,43828+16]..[1470,43828+24])
                                                                Ppat_var "nullable" (lib/grammarFunctor.ml[1470,43828+16]..[1470,43828+24])
                                                              expression (lib/grammarFunctor.ml[1470,43828+27]..[1470,43828+57])
                                                                Pexp_apply
                                                                expression (lib/grammarFunctor.ml[1470,43828+27]..[1470,43828+46])
                                                                  Pexp_ident "NULLABLE.production" (lib/grammarFunctor.ml[1470,43828+27]..[1470,43828+46])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lib/grammarFunctor.ml[1470,43828+47]..[1470,43828+51])
                                                                      Pexp_ident "prod" (lib/grammarFunctor.ml[1470,43828+47]..[1470,43828+51])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lib/grammarFunctor.ml[1470,43828+52]..[1470,43828+57])
                                                                      Pexp_apply
                                                                      expression (lib/grammarFunctor.ml[1470,43828+54]..[1470,43828+55])
Pexp_ident "+" (lib/grammarFunctor.ml[1470,43828+54]..[1470,43828+55])
                                                                      [
<arg>
Nolabel
  expression (lib/grammarFunctor.ml[1470,43828+53]..[1470,43828+54])
    Pexp_ident "i" (lib/grammarFunctor.ml[1470,43828+53]..[1470,43828+54])
<arg>
Nolabel
  expression (lib/grammarFunctor.ml[1470,43828+55]..[1470,43828+56])
    Pexp_constant PConst_int (1,None)
                                                                      ]
                                                                ]
                                                            <def>
                                                              pattern (lib/grammarFunctor.ml[1471,43886+16]..[1471,43886+21])
                                                                Ppat_var "first" (lib/grammarFunctor.ml[1471,43886+16]..[1471,43886+21])
                                                              expression (lib/grammarFunctor.ml[1471,43886+24]..[1471,43886+42])
                                                                Pexp_apply
                                                                expression (lib/grammarFunctor.ml[1471,43886+24]..[1471,43886+31])
                                                                  Pexp_ident "P.first" (lib/grammarFunctor.ml[1471,43886+24]..[1471,43886+31])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lib/grammarFunctor.ml[1471,43886+32]..[1471,43886+36])
                                                                      Pexp_ident "prod" (lib/grammarFunctor.ml[1471,43886+32]..[1471,43886+36])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lib/grammarFunctor.ml[1471,43886+37]..[1471,43886+42])
                                                                      Pexp_apply
                                                                      expression (lib/grammarFunctor.ml[1471,43886+39]..[1471,43886+40])
Pexp_ident "+" (lib/grammarFunctor.ml[1471,43886+39]..[1471,43886+40])
                                                                      [
<arg>
Nolabel
  expression (lib/grammarFunctor.ml[1471,43886+38]..[1471,43886+39])
    Pexp_ident "i" (lib/grammarFunctor.ml[1471,43886+38]..[1471,43886+39])
<arg>
Nolabel
  expression (lib/grammarFunctor.ml[1471,43886+40]..[1471,43886+41])
    Pexp_constant PConst_int (1,None)
                                                                      ]
                                                                ]
                                                          ]
                                                          expression (lib/grammarFunctor.ml[1474,44059+12]..[1478,44253+37])
                                                            Pexp_sequence
                                                            expression (lib/grammarFunctor.ml[1474,44059+12]..[1474,44059+37])
                                                              Pexp_apply
                                                              expression (lib/grammarFunctor.ml[1474,44059+12]..[1474,44059+27])
                                                                Pexp_ident "S.record_ConVar" (lib/grammarFunctor.ml[1474,44059+12]..[1474,44059+27])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/grammarFunctor.ml[1474,44059+28]..[1474,44059+33])
                                                                    Pexp_ident "first" (lib/grammarFunctor.ml[1474,44059+28]..[1474,44059+33])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/grammarFunctor.ml[1474,44059+34]..[1474,44059+37])
                                                                    Pexp_ident "nt2" (lib/grammarFunctor.ml[1474,44059+34]..[1474,44059+37])
                                                              ]
                                                            expression (lib/grammarFunctor.ml[1477,44224+12]..[1478,44253+37])
                                                              Pexp_ifthenelse
                                                              expression (lib/grammarFunctor.ml[1477,44224+15]..[1477,44224+23])
                                                                Pexp_ident "nullable" (lib/grammarFunctor.ml[1477,44224+15]..[1477,44224+23])
                                                              expression (lib/grammarFunctor.ml[1478,44253+14]..[1478,44253+37])
                                                                Pexp_apply
                                                                expression (lib/grammarFunctor.ml[1478,44253+14]..[1478,44253+29])
                                                                  Pexp_ident "S.record_VarVar" (lib/grammarFunctor.ml[1478,44253+14]..[1478,44253+29])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lib/grammarFunctor.ml[1478,44253+30]..[1478,44253+33])
                                                                      Pexp_ident "nt1" (lib/grammarFunctor.ml[1478,44253+30]..[1478,44253+33])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lib/grammarFunctor.ml[1478,44253+34]..[1478,44253+37])
                                                                      Pexp_ident "nt2" (lib/grammarFunctor.ml[1478,44253+34]..[1478,44253+37])
                                                                ]
                                                              None
                                                    ]
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[1479,44291+8]..[1479,44291+11])
                                                Pexp_ident "rhs" (lib/grammarFunctor.ml[1479,44291+8]..[1479,44291+11])
                                          ]
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[1480,44303+6]..[1480,44303+22])
                                      Pexp_ident "Production.table" (lib/grammarFunctor.ml[1480,44303+6]..[1480,44303+22])
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[1484,44382+2]..[1488,44544+5])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1484,44382+6]..[1484,44382+12])
                                Ppat_var "follow" (lib/grammarFunctor.ml[1484,44382+6]..[1484,44382+12])
                              core_type (lib/grammarFunctor.ml[1484,44382+15]..[1484,44382+51])
                                Ptyp_constr "Lazy.t" (lib/grammarFunctor.ml[1484,44382+45]..[1484,44382+51])
                                [
                                  core_type (lib/grammarFunctor.ml[1484,44382+16]..[1484,44382+43])
                                    Ptyp_arrow
                                    Nolabel
                                    core_type (lib/grammarFunctor.ml[1484,44382+16]..[1484,44382+29])
                                      Ptyp_constr "Nonterminal.t" (lib/grammarFunctor.ml[1484,44382+16]..[1484,44382+29])
                                      []
                                    core_type (lib/grammarFunctor.ml[1484,44382+33]..[1484,44382+43])
                                      Ptyp_constr "P.property" (lib/grammarFunctor.ml[1484,44382+33]..[1484,44382+43])
                                      []
                                ]
                              expression (lib/grammarFunctor.ml[1485,44436+4]..[1488,44544+5])
                                Pexp_lazy
                                expression (lib/grammarFunctor.ml[1485,44436+9]..[1488,44544+5])
                                  Pexp_letmodule "S" (lib/grammarFunctor.ml[1486,44447+17]..[1486,44447+18])
                                  module_expr (lib/grammarFunctor.ml[1486,44447+21]..[1486,44447+30])
                                    Pmod_apply_unit
                                    module_expr (lib/grammarFunctor.ml[1486,44447+21]..[1486,44447+28])
                                      Pmod_ident "S.Solve" (lib/grammarFunctor.ml[1486,44447+21]..[1486,44447+28])
                                  expression (lib/grammarFunctor.ml[1487,44481+6]..[1487,44481+62])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lib/grammarFunctor.ml[1487,44481+10]..[1487,44481+12])
                                      Ppat_var "nt" (lib/grammarFunctor.ml[1487,44481+10]..[1487,44481+12])
                                    expression (lib/grammarFunctor.ml[1487,44481+16]..[1487,44481+62])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[1487,44481+16]..[1487,44481+28])
                                        Pexp_ident "Option.value" (lib/grammarFunctor.ml[1487,44481+16]..[1487,44481+28])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1487,44481+29]..[1487,44481+44])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[1487,44481+30]..[1487,44481+40])
                                              Pexp_ident "S.solution" (lib/grammarFunctor.ml[1487,44481+30]..[1487,44481+40])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1487,44481+41]..[1487,44481+43])
                                                  Pexp_ident "nt" (lib/grammarFunctor.ml[1487,44481+41]..[1487,44481+43])
                                            ]
                                        <arg>
                                        Labelled "default"
                                          expression (lib/grammarFunctor.ml[1487,44481+54]..[1487,44481+62])
                                            Pexp_ident "P.bottom" (lib/grammarFunctor.ml[1487,44481+54]..[1487,44481+62])
                                      ]
                          ]
                        structure_item (lib/grammarFunctor.ml[1490,44551+2]..[1491,44596+36])
                          Pstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1490,44551+6]..[1490,44551+12])
                                Ppat_var "follow" (lib/grammarFunctor.ml[1490,44551+6]..[1490,44551+12])
                              core_type (lib/grammarFunctor.ml[1490,44551+15]..[1490,44551+42])
                                Ptyp_arrow
                                Nolabel
                                core_type (lib/grammarFunctor.ml[1490,44551+15]..[1490,44551+28])
                                  Ptyp_constr "Nonterminal.t" (lib/grammarFunctor.ml[1490,44551+15]..[1490,44551+28])
                                  []
                                core_type (lib/grammarFunctor.ml[1490,44551+32]..[1490,44551+42])
                                  Ptyp_constr "P.property" (lib/grammarFunctor.ml[1490,44551+32]..[1490,44551+42])
                                  []
                              expression (lib/grammarFunctor.ml[1491,44596+4]..[1491,44596+36])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1491,44596+8]..[1491,44596+10])
                                  Ppat_var "nt" (lib/grammarFunctor.ml[1491,44596+8]..[1491,44596+10])
                                expression (lib/grammarFunctor.ml[1491,44596+14]..[1491,44596+36])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[1491,44596+14]..[1491,44596+33])
                                    Pexp_apply
                                    expression (lib/grammarFunctor.ml[1491,44596+15]..[1491,44596+25])
                                      Pexp_ident "Lazy.force" (lib/grammarFunctor.ml[1491,44596+15]..[1491,44596+25])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[1491,44596+26]..[1491,44596+32])
                                          Pexp_ident "follow" (lib/grammarFunctor.ml[1491,44596+26]..[1491,44596+32])
                                    ]
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[1491,44596+34]..[1491,44596+36])
                                        Pexp_ident "nt" (lib/grammarFunctor.ml[1491,44596+34]..[1491,44596+36])
                                  ]
                          ]
                      ]
              structure_item (lib/grammarFunctor.ml[1497,44715+0]..[1503,44888+10])
                Pstr_value Nonrec
                [
                  <def>
                    pattern (lib/grammarFunctor.ml[1497,44715+4]..[1497,44715+10])
                      Ppat_var "follow" (lib/grammarFunctor.ml[1497,44715+4]..[1497,44715+10])
                    core_type (lib/grammarFunctor.ml[1497,44715+13]..[1497,44715+43])
                      Ptyp_arrow
                      Nolabel
                      core_type (lib/grammarFunctor.ml[1497,44715+13]..[1497,44715+26])
                        Ptyp_constr "Nonterminal.t" (lib/grammarFunctor.ml[1497,44715+13]..[1497,44715+26])
                        []
                      core_type (lib/grammarFunctor.ml[1497,44715+30]..[1497,44715+43])
                        Ptyp_constr "TerminalSet.t" (lib/grammarFunctor.ml[1497,44715+30]..[1497,44715+43])
                        []
                    expression (lib/grammarFunctor.ml[1498,44761+2]..[1503,44888+10])
                      Pexp_letmodule "F" (lib/grammarFunctor.ml[1498,44761+13]..[1498,44761+14])
                      module_expr (lib/grammarFunctor.ml[1498,44761+17]..[1502,44878+6])
                        Pmod_apply
                        module_expr (lib/grammarFunctor.ml[1498,44761+17]..[1498,44761+23])
                          Pmod_ident "FOLLOW" (lib/grammarFunctor.ml[1498,44761+17]..[1498,44761+23])
                        module_expr (lib/grammarFunctor.ml[1498,44761+24]..[1502,44878+5])
                          Pmod_structure
                          [
                            structure_item (lib/grammarFunctor.ml[1499,44792+4]..[1499,44792+23])
                              Pstr_include                              module_expr (lib/grammarFunctor.ml[1499,44792+12]..[1499,44792+23])
                                Pmod_ident "TerminalSet" (lib/grammarFunctor.ml[1499,44792+12]..[1499,44792+23])
                            structure_item (lib/grammarFunctor.ml[1500,44816+4]..[1500,44816+28])
                              Pstr_value Nonrec
                              [
                                <def>
                                  pattern (lib/grammarFunctor.ml[1500,44816+8]..[1500,44816+16])
                                    Ppat_var "terminal" (lib/grammarFunctor.ml[1500,44816+8]..[1500,44816+16])
                                  expression (lib/grammarFunctor.ml[1500,44816+19]..[1500,44816+28])
                                    Pexp_ident "singleton" (lib/grammarFunctor.ml[1500,44816+19]..[1500,44816+28])
                              ]
                            structure_item (lib/grammarFunctor.ml[1501,44845+4]..[1501,44845+32])
                              Pstr_value Nonrec
                              [
                                <def>
                                  pattern (lib/grammarFunctor.ml[1501,44845+8]..[1501,44845+13])
                                    Ppat_var "first" (lib/grammarFunctor.ml[1501,44845+8]..[1501,44845+13])
                                  expression (lib/grammarFunctor.ml[1501,44845+16]..[1501,44845+32])
                                    Pexp_ident "FIRST.production" (lib/grammarFunctor.ml[1501,44845+16]..[1501,44845+32])
                              ]
                          ]
                      expression (lib/grammarFunctor.ml[1503,44888+2]..[1503,44888+10])
                        Pexp_ident "F.follow" (lib/grammarFunctor.ml[1503,44888+2]..[1503,44888+10])
                ]
              structure_item (lib/grammarFunctor.ml[1521,45467+0]..[1550,46455+3])
                Pstr_value Nonrec
                [
                  <def>
                    pattern (lib/grammarFunctor.ml[1521,45467+4]..[1521,45467+11])
                      Ppat_var "tfollow" (lib/grammarFunctor.ml[1521,45467+4]..[1521,45467+11])
                    core_type (lib/grammarFunctor.ml[1521,45467+14]..[1521,45467+40])
                      Ptyp_constr "Lazy.t" (lib/grammarFunctor.ml[1521,45467+34]..[1521,45467+40])
                      [
                        core_type (lib/grammarFunctor.ml[1521,45467+14]..[1521,45467+33])
                          Ptyp_constr "array" (lib/grammarFunctor.ml[1521,45467+28]..[1521,45467+33])
                          [
                            core_type (lib/grammarFunctor.ml[1521,45467+14]..[1521,45467+27])
                              Ptyp_constr "TerminalSet.t" (lib/grammarFunctor.ml[1521,45467+14]..[1521,45467+27])
                              []
                          ]
                      ]
                    expression (lib/grammarFunctor.ml[1522,45510+2]..[1550,46455+3])
                      Pexp_lazy
                      expression (lib/grammarFunctor.ml[1522,45510+7]..[1550,46455+3])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1524,45520+8]..[1524,45520+15])
                              Ppat_var "tfollow" (lib/grammarFunctor.ml[1524,45520+8]..[1524,45520+15])
                            expression (lib/grammarFunctor.ml[1525,45538+6]..[1525,45538+45])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[1525,45538+6]..[1525,45538+16])
                                Pexp_ident "Array.make" (lib/grammarFunctor.ml[1525,45538+6]..[1525,45538+16])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[1525,45538+17]..[1525,45538+27])
                                    Pexp_ident "Terminal.n" (lib/grammarFunctor.ml[1525,45538+17]..[1525,45538+27])
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[1525,45538+28]..[1525,45538+45])
                                    Pexp_ident "TerminalSet.empty" (lib/grammarFunctor.ml[1525,45538+28]..[1525,45538+45])
                              ]
                        ]
                        expression (lib/grammarFunctor.ml[1529,45632+4]..[1548,46442+11])
                          Pexp_sequence
                          expression (lib/grammarFunctor.ml[1529,45632+4]..[1546,46417+22])
                            Pexp_apply
                            expression (lib/grammarFunctor.ml[1529,45632+4]..[1529,45632+15])
                              Pexp_ident "Array.iteri" (lib/grammarFunctor.ml[1529,45632+4]..[1529,45632+15])
                            [
                              <arg>
                              Nolabel
                                expression (lib/grammarFunctor.ml[1529,45632+16]..[1546,46417+5])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lib/grammarFunctor.ml[1529,45632+21]..[1529,45632+25])
                                    Ppat_var "prod" (lib/grammarFunctor.ml[1529,45632+21]..[1529,45632+25])
                                  expression (lib/grammarFunctor.ml[1529,45632+26]..[1545,46405+11]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lib/grammarFunctor.ml[1529,45632+26]..[1529,45632+36])
                                      Ppat_tuple
                                      [
                                        pattern (lib/grammarFunctor.ml[1529,45632+27]..[1529,45632+30])
                                          Ppat_var "nt1" (lib/grammarFunctor.ml[1529,45632+27]..[1529,45632+30])
                                        pattern (lib/grammarFunctor.ml[1529,45632+32]..[1529,45632+35])
                                          Ppat_var "rhs" (lib/grammarFunctor.ml[1529,45632+32]..[1529,45632+35])
                                      ]
                                    expression (lib/grammarFunctor.ml[1531,45747+6]..[1545,46405+11])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[1531,45747+6]..[1531,45747+17])
                                        Pexp_ident "Array.iteri" (lib/grammarFunctor.ml[1531,45747+6]..[1531,45747+17])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1531,45747+18]..[1545,46405+7])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (lib/grammarFunctor.ml[1531,45747+23]..[1531,45747+24])
                                              Ppat_var "i" (lib/grammarFunctor.ml[1531,45747+23]..[1531,45747+24])
                                            expression (lib/grammarFunctor.ml[1531,45747+25]..[1544,46331+73]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (lib/grammarFunctor.ml[1531,45747+25]..[1531,45747+31])
                                                Ppat_var "symbol" (lib/grammarFunctor.ml[1531,45747+25]..[1531,45747+31])
                                              expression (lib/grammarFunctor.ml[1532,45782+8]..[1544,46331+73])
                                                Pexp_match
                                                expression (lib/grammarFunctor.ml[1532,45782+14]..[1532,45782+20])
                                                  Pexp_ident "symbol" (lib/grammarFunctor.ml[1532,45782+14]..[1532,45782+20])
                                                [
                                                  <case>
                                                    pattern (lib/grammarFunctor.ml[1533,45808+10]..[1533,45808+20])
                                                      Ppat_construct "Symbol.N" (lib/grammarFunctor.ml[1533,45808+10]..[1533,45808+18])
                                                      Some
                                                        []
                                                        pattern (lib/grammarFunctor.ml[1533,45808+19]..[1533,45808+20])
                                                          Ppat_any
                                                    expression (lib/grammarFunctor.ml[1534,45832+12]..[1534,45832+14])
                                                      Pexp_construct "()" (lib/grammarFunctor.ml[1534,45832+12]..[1534,45832+14])
                                                      None
                                                  <case>
                                                    pattern (lib/grammarFunctor.ml[1535,45847+10]..[1535,45847+21])
                                                      Ppat_construct "Symbol.T" (lib/grammarFunctor.ml[1535,45847+10]..[1535,45847+18])
                                                      Some
                                                        []
                                                        pattern (lib/grammarFunctor.ml[1535,45847+19]..[1535,45847+21])
                                                          Ppat_var "t2" (lib/grammarFunctor.ml[1535,45847+19]..[1535,45847+21])
                                                    expression (lib/grammarFunctor.ml[1536,45872+12]..[1544,46331+73])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (lib/grammarFunctor.ml[1536,45872+16]..[1536,45872+24])
                                                            Ppat_var "nullable" (lib/grammarFunctor.ml[1536,45872+16]..[1536,45872+24])
                                                          expression (lib/grammarFunctor.ml[1536,45872+27]..[1536,45872+57])
                                                            Pexp_apply
                                                            expression (lib/grammarFunctor.ml[1536,45872+27]..[1536,45872+46])
                                                              Pexp_ident "NULLABLE.production" (lib/grammarFunctor.ml[1536,45872+27]..[1536,45872+46])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/grammarFunctor.ml[1536,45872+47]..[1536,45872+51])
                                                                  Pexp_ident "prod" (lib/grammarFunctor.ml[1536,45872+47]..[1536,45872+51])
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/grammarFunctor.ml[1536,45872+52]..[1536,45872+57])
                                                                  Pexp_apply
                                                                  expression (lib/grammarFunctor.ml[1536,45872+54]..[1536,45872+55])
                                                                    Pexp_ident "+" (lib/grammarFunctor.ml[1536,45872+54]..[1536,45872+55])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lib/grammarFunctor.ml[1536,45872+53]..[1536,45872+54])
Pexp_ident "i" (lib/grammarFunctor.ml[1536,45872+53]..[1536,45872+54])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lib/grammarFunctor.ml[1536,45872+55]..[1536,45872+56])
Pexp_constant PConst_int (1,None)
                                                                  ]
                                                            ]
                                                        <def>
                                                          pattern (lib/grammarFunctor.ml[1537,45930+16]..[1537,45930+21])
                                                            Ppat_var "first" (lib/grammarFunctor.ml[1537,45930+16]..[1537,45930+21])
                                                          expression (lib/grammarFunctor.ml[1537,45930+24]..[1537,45930+51])
                                                            Pexp_apply
                                                            expression (lib/grammarFunctor.ml[1537,45930+24]..[1537,45930+40])
                                                              Pexp_ident "FIRST.production" (lib/grammarFunctor.ml[1537,45930+24]..[1537,45930+40])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/grammarFunctor.ml[1537,45930+41]..[1537,45930+45])
                                                                  Pexp_ident "prod" (lib/grammarFunctor.ml[1537,45930+41]..[1537,45930+45])
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/grammarFunctor.ml[1537,45930+46]..[1537,45930+51])
                                                                  Pexp_apply
                                                                  expression (lib/grammarFunctor.ml[1537,45930+48]..[1537,45930+49])
                                                                    Pexp_ident "+" (lib/grammarFunctor.ml[1537,45930+48]..[1537,45930+49])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lib/grammarFunctor.ml[1537,45930+47]..[1537,45930+48])
Pexp_ident "i" (lib/grammarFunctor.ml[1537,45930+47]..[1537,45930+48])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lib/grammarFunctor.ml[1537,45930+49]..[1537,45930+50])
Pexp_constant PConst_int (1,None)
                                                                  ]
                                                            ]
                                                      ]
                                                      expression (lib/grammarFunctor.ml[1540,46111+12]..[1544,46331+73])
                                                        Pexp_sequence
                                                        expression (lib/grammarFunctor.ml[1540,46111+12]..[1540,46111+64])
                                                          Pexp_apply
                                                          expression (lib/grammarFunctor.ml[1540,46111+12]..[1540,46111+64]) ghost
                                                            Pexp_ident "Array.set" (lib/grammarFunctor.ml[1540,46111+12]..[1540,46111+64]) ghost
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/grammarFunctor.ml[1540,46111+12]..[1540,46111+19])
                                                                Pexp_ident "tfollow" (lib/grammarFunctor.ml[1540,46111+12]..[1540,46111+19])
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/grammarFunctor.ml[1540,46111+21]..[1540,46111+23])
                                                                Pexp_ident "t2" (lib/grammarFunctor.ml[1540,46111+21]..[1540,46111+23])
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/grammarFunctor.ml[1540,46111+28]..[1540,46111+64])
                                                                Pexp_apply
                                                                expression (lib/grammarFunctor.ml[1540,46111+28]..[1540,46111+45])
                                                                  Pexp_ident "TerminalSet.union" (lib/grammarFunctor.ml[1540,46111+28]..[1540,46111+45])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lib/grammarFunctor.ml[1540,46111+46]..[1540,46111+51])
                                                                      Pexp_ident "first" (lib/grammarFunctor.ml[1540,46111+46]..[1540,46111+51])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lib/grammarFunctor.ml[1540,46111+52]..[1540,46111+64])
                                                                      Pexp_apply
                                                                      expression (lib/grammarFunctor.ml[1540,46111+52]..[1540,46111+64]) ghost
Pexp_ident "Array.get" (lib/grammarFunctor.ml[1540,46111+52]..[1540,46111+64]) ghost
                                                                      [
<arg>
Nolabel
  expression (lib/grammarFunctor.ml[1540,46111+52]..[1540,46111+59])
    Pexp_ident "tfollow" (lib/grammarFunctor.ml[1540,46111+52]..[1540,46111+59])
<arg>
Nolabel
  expression (lib/grammarFunctor.ml[1540,46111+61]..[1540,46111+63])
    Pexp_ident "t2" (lib/grammarFunctor.ml[1540,46111+61]..[1540,46111+63])
                                                                      ]
                                                                ]
                                                          ]
                                                        expression (lib/grammarFunctor.ml[1543,46302+12]..[1544,46331+73])
                                                          Pexp_ifthenelse
                                                          expression (lib/grammarFunctor.ml[1543,46302+15]..[1543,46302+23])
                                                            Pexp_ident "nullable" (lib/grammarFunctor.ml[1543,46302+15]..[1543,46302+23])
                                                          expression (lib/grammarFunctor.ml[1544,46331+14]..[1544,46331+73])
                                                            Pexp_apply
                                                            expression (lib/grammarFunctor.ml[1544,46331+14]..[1544,46331+73]) ghost
                                                              Pexp_ident "Array.set" (lib/grammarFunctor.ml[1544,46331+14]..[1544,46331+73]) ghost
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/grammarFunctor.ml[1544,46331+14]..[1544,46331+21])
                                                                  Pexp_ident "tfollow" (lib/grammarFunctor.ml[1544,46331+14]..[1544,46331+21])
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/grammarFunctor.ml[1544,46331+23]..[1544,46331+25])
                                                                  Pexp_ident "t2" (lib/grammarFunctor.ml[1544,46331+23]..[1544,46331+25])
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/grammarFunctor.ml[1544,46331+30]..[1544,46331+73])
                                                                  Pexp_apply
                                                                  expression (lib/grammarFunctor.ml[1544,46331+30]..[1544,46331+47])
                                                                    Pexp_ident "TerminalSet.union" (lib/grammarFunctor.ml[1544,46331+30]..[1544,46331+47])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lib/grammarFunctor.ml[1544,46331+48]..[1544,46331+60])
Pexp_apply
expression (lib/grammarFunctor.ml[1544,46331+49]..[1544,46331+55])
  Pexp_ident "follow" (lib/grammarFunctor.ml[1544,46331+49]..[1544,46331+55])
[
  <arg>
  Nolabel
    expression (lib/grammarFunctor.ml[1544,46331+56]..[1544,46331+59])
      Pexp_ident "nt1" (lib/grammarFunctor.ml[1544,46331+56]..[1544,46331+59])
]
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lib/grammarFunctor.ml[1544,46331+61]..[1544,46331+73])
Pexp_apply
expression (lib/grammarFunctor.ml[1544,46331+61]..[1544,46331+73]) ghost
  Pexp_ident "Array.get" (lib/grammarFunctor.ml[1544,46331+61]..[1544,46331+73]) ghost
[
  <arg>
  Nolabel
    expression (lib/grammarFunctor.ml[1544,46331+61]..[1544,46331+68])
      Pexp_ident "tfollow" (lib/grammarFunctor.ml[1544,46331+61]..[1544,46331+68])
  <arg>
  Nolabel
    expression (lib/grammarFunctor.ml[1544,46331+70]..[1544,46331+72])
      Pexp_ident "t2" (lib/grammarFunctor.ml[1544,46331+70]..[1544,46331+72])
]
                                                                  ]
                                                            ]
                                                          None
                                                ]
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1545,46405+8]..[1545,46405+11])
                                            Pexp_ident "rhs" (lib/grammarFunctor.ml[1545,46405+8]..[1545,46405+11])
                                      ]
                              <arg>
                              Nolabel
                                expression (lib/grammarFunctor.ml[1546,46417+6]..[1546,46417+22])
                                  Pexp_ident "Production.table" (lib/grammarFunctor.ml[1546,46417+6]..[1546,46417+22])
                            ]
                          expression (lib/grammarFunctor.ml[1548,46442+4]..[1548,46442+11])
                            Pexp_ident "tfollow" (lib/grammarFunctor.ml[1548,46442+4]..[1548,46442+11])
                ]
              structure_item (lib/grammarFunctor.ml[1554,46492+0]..[1555,46508+26])
                Pstr_value Nonrec
                [
                  <def>
                    pattern (lib/grammarFunctor.ml[1554,46492+4]..[1554,46492+11])
                      Ppat_var "tfollow" (lib/grammarFunctor.ml[1554,46492+4]..[1554,46492+11])
                    expression (lib/grammarFunctor.ml[1554,46492+12]..[1555,46508+26]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lib/grammarFunctor.ml[1554,46492+12]..[1554,46492+13])
                        Ppat_var "t" (lib/grammarFunctor.ml[1554,46492+12]..[1554,46492+13])
                      expression (lib/grammarFunctor.ml[1555,46508+2]..[1555,46508+26])
                        Pexp_apply
                        expression (lib/grammarFunctor.ml[1555,46508+2]..[1555,46508+26]) ghost
                          Pexp_ident "Array.get" (lib/grammarFunctor.ml[1555,46508+2]..[1555,46508+26]) ghost
                        [
                          <arg>
                          Nolabel
                            expression (lib/grammarFunctor.ml[1555,46508+2]..[1555,46508+22])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[1555,46508+3]..[1555,46508+13])
                                Pexp_ident "Lazy.force" (lib/grammarFunctor.ml[1555,46508+3]..[1555,46508+13])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[1555,46508+14]..[1555,46508+21])
                                    Pexp_ident "tfollow" (lib/grammarFunctor.ml[1555,46508+14]..[1555,46508+21])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/grammarFunctor.ml[1555,46508+24]..[1555,46508+25])
                              Pexp_ident "t" (lib/grammarFunctor.ml[1555,46508+24]..[1555,46508+25])
                        ]
                ]
              structure_item (lib/grammarFunctor.ml[1575,47116+0]..[1592,47763+8])
                Pstr_value Nonrec
                [
                  <def>
                    pattern (lib/grammarFunctor.ml[1575,47116+4]..[1575,47116+10])
                      Ppat_var "sfirst" (lib/grammarFunctor.ml[1575,47116+4]..[1575,47116+10])
                    expression (lib/grammarFunctor.ml[1575,47116+11]..[1592,47763+8]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lib/grammarFunctor.ml[1575,47116+11]..[1575,47116+15])
                        Ppat_var "prod" (lib/grammarFunctor.ml[1575,47116+11]..[1575,47116+15])
                      expression (lib/grammarFunctor.ml[1575,47116+16]..[1592,47763+8]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lib/grammarFunctor.ml[1575,47116+16]..[1575,47116+17])
                          Ppat_var "i" (lib/grammarFunctor.ml[1575,47116+16]..[1575,47116+17])
                        expression (lib/grammarFunctor.ml[1576,47136+2]..[1592,47763+8])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1576,47136+6]..[1576,47136+9])
                                Ppat_var "rhs" (lib/grammarFunctor.ml[1576,47136+6]..[1576,47136+9])
                              expression (lib/grammarFunctor.ml[1576,47136+12]..[1576,47136+31])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[1576,47136+12]..[1576,47136+26])
                                  Pexp_ident "Production.rhs" (lib/grammarFunctor.ml[1576,47136+12]..[1576,47136+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[1576,47136+27]..[1576,47136+31])
                                      Pexp_ident "prod" (lib/grammarFunctor.ml[1576,47136+27]..[1576,47136+31])
                                ]
                          ]
                          expression (lib/grammarFunctor.ml[1577,47171+2]..[1592,47763+8])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1577,47171+6]..[1577,47171+7])
                                  Ppat_var "n" (lib/grammarFunctor.ml[1577,47171+6]..[1577,47171+7])
                                expression (lib/grammarFunctor.ml[1577,47171+10]..[1577,47171+26])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[1577,47171+10]..[1577,47171+22])
                                    Pexp_ident "Array.length" (lib/grammarFunctor.ml[1577,47171+10]..[1577,47171+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[1577,47171+23]..[1577,47171+26])
                                        Pexp_ident "rhs" (lib/grammarFunctor.ml[1577,47171+23]..[1577,47171+26])
                                  ]
                            ]
                            expression (lib/grammarFunctor.ml[1578,47201+2]..[1592,47763+8])
                              Pexp_let Rec
                              [
                                <def>
                                  pattern (lib/grammarFunctor.ml[1578,47201+10]..[1578,47201+14])
                                    Ppat_var "loop" (lib/grammarFunctor.ml[1578,47201+10]..[1578,47201+14])
                                  expression (lib/grammarFunctor.ml[1578,47201+15]..[1590,47686+71]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lib/grammarFunctor.ml[1578,47201+15]..[1578,47201+16])
                                      Ppat_var "i" (lib/grammarFunctor.ml[1578,47201+15]..[1578,47201+16])
                                    expression (lib/grammarFunctor.ml[1579,47220+4]..[1590,47686+71])
                                      Pexp_ifthenelse
                                      expression (lib/grammarFunctor.ml[1579,47220+7]..[1579,47220+12])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[1579,47220+9]..[1579,47220+10])
                                          Pexp_ident "=" (lib/grammarFunctor.ml[1579,47220+9]..[1579,47220+10])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[1579,47220+7]..[1579,47220+8])
                                              Pexp_ident "i" (lib/grammarFunctor.ml[1579,47220+7]..[1579,47220+8])
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[1579,47220+11]..[1579,47220+12])
                                              Pexp_ident "n" (lib/grammarFunctor.ml[1579,47220+11]..[1579,47220+12])
                                        ]
                                      expression (lib/grammarFunctor.ml[1581,47299+6]..[1581,47299+21])
                                        Pexp_ident "SymbolSet.empty" (lib/grammarFunctor.ml[1581,47299+6]..[1581,47299+21])
                                      Some
                                        expression (lib/grammarFunctor.ml[1583,47330+6]..[1590,47686+71])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/grammarFunctor.ml[1583,47330+10]..[1583,47330+13])
                                                Ppat_var "sym" (lib/grammarFunctor.ml[1583,47330+10]..[1583,47330+13])
                                              expression (lib/grammarFunctor.ml[1583,47330+16]..[1583,47330+23])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[1583,47330+16]..[1583,47330+23]) ghost
                                                  Pexp_ident "Array.get" (lib/grammarFunctor.ml[1583,47330+16]..[1583,47330+23]) ghost
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[1583,47330+16]..[1583,47330+19])
                                                      Pexp_ident "rhs" (lib/grammarFunctor.ml[1583,47330+16]..[1583,47330+19])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[1583,47330+21]..[1583,47330+22])
                                                      Pexp_ident "i" (lib/grammarFunctor.ml[1583,47330+21]..[1583,47330+22])
                                                ]
                                          ]
                                          expression (lib/grammarFunctor.ml[1586,47497+6]..[1590,47686+71])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[1586,47497+6]..[1586,47497+21])
                                              Pexp_ident "SymbolSet.union" (lib/grammarFunctor.ml[1586,47497+6]..[1586,47497+21])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1587,47519+8]..[1587,47519+33])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[1587,47519+9]..[1587,47519+28])
                                                    Pexp_ident "SymbolSet.singleton" (lib/grammarFunctor.ml[1587,47519+9]..[1587,47519+28])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[1587,47519+29]..[1587,47519+32])
                                                        Pexp_ident "sym" (lib/grammarFunctor.ml[1587,47519+29]..[1587,47519+32])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1590,47686+8]..[1590,47686+71])
                                                  Pexp_ifthenelse
                                                  expression (lib/grammarFunctor.ml[1590,47686+12]..[1590,47686+31])
                                                    Pexp_apply
                                                    expression (lib/grammarFunctor.ml[1590,47686+12]..[1590,47686+27])
                                                      Pexp_ident "NULLABLE.symbol" (lib/grammarFunctor.ml[1590,47686+12]..[1590,47686+27])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[1590,47686+28]..[1590,47686+31])
                                                          Pexp_ident "sym" (lib/grammarFunctor.ml[1590,47686+28]..[1590,47686+31])
                                                    ]
                                                  expression (lib/grammarFunctor.ml[1590,47686+37]..[1590,47686+49])
                                                    Pexp_apply
                                                    expression (lib/grammarFunctor.ml[1590,47686+37]..[1590,47686+41])
                                                      Pexp_ident "loop" (lib/grammarFunctor.ml[1590,47686+37]..[1590,47686+41])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[1590,47686+42]..[1590,47686+49])
                                                          Pexp_apply
                                                          expression (lib/grammarFunctor.ml[1590,47686+45]..[1590,47686+46])
                                                            Pexp_ident "+" (lib/grammarFunctor.ml[1590,47686+45]..[1590,47686+46])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/grammarFunctor.ml[1590,47686+43]..[1590,47686+44])
                                                                Pexp_ident "i" (lib/grammarFunctor.ml[1590,47686+43]..[1590,47686+44])
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/grammarFunctor.ml[1590,47686+47]..[1590,47686+48])
                                                                Pexp_constant PConst_int (1,None)
                                                          ]
                                                    ]
                                                  Some
                                                    expression (lib/grammarFunctor.ml[1590,47686+55]..[1590,47686+70])
                                                      Pexp_ident "SymbolSet.empty" (lib/grammarFunctor.ml[1590,47686+55]..[1590,47686+70])
                                            ]
                              ]
                              expression (lib/grammarFunctor.ml[1592,47763+2]..[1592,47763+8])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[1592,47763+2]..[1592,47763+6])
                                  Pexp_ident "loop" (lib/grammarFunctor.ml[1592,47763+2]..[1592,47763+6])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[1592,47763+7]..[1592,47763+8])
                                      Pexp_ident "i" (lib/grammarFunctor.ml[1592,47763+7]..[1592,47763+8])
                                ]
                ]
              structure_item (lib/grammarFunctor.ml[1598,47919+0]..[1605,48167+10])
                Pstr_value Nonrec
                [
                  <def>
                    pattern (lib/grammarFunctor.ml[1598,47919+4]..[1598,47919+11])
                      Ppat_var "sfollow" (lib/grammarFunctor.ml[1598,47919+4]..[1598,47919+11])
                    core_type (lib/grammarFunctor.ml[1598,47919+14]..[1598,47919+42])
                      Ptyp_arrow
                      Nolabel
                      core_type (lib/grammarFunctor.ml[1598,47919+14]..[1598,47919+27])
                        Ptyp_constr "Nonterminal.t" (lib/grammarFunctor.ml[1598,47919+14]..[1598,47919+27])
                        []
                      core_type (lib/grammarFunctor.ml[1598,47919+31]..[1598,47919+42])
                        Ptyp_constr "SymbolSet.t" (lib/grammarFunctor.ml[1598,47919+31]..[1598,47919+42])
                        []
                    expression (lib/grammarFunctor.ml[1599,47964+2]..[1605,48167+10])
                      Pexp_letmodule "F" (lib/grammarFunctor.ml[1599,47964+13]..[1599,47964+14])
                      module_expr (lib/grammarFunctor.ml[1599,47964+17]..[1604,48157+6])
                        Pmod_apply
                        module_expr (lib/grammarFunctor.ml[1599,47964+17]..[1599,47964+23])
                          Pmod_ident "FOLLOW" (lib/grammarFunctor.ml[1599,47964+17]..[1599,47964+23])
                        module_expr (lib/grammarFunctor.ml[1599,47964+24]..[1604,48157+5])
                          Pmod_structure
                          [
                            structure_item (lib/grammarFunctor.ml[1600,47995+4]..[1600,47995+33])
                              Pstr_value Nonrec
                              [
                                <def>
                                  pattern (lib/grammarFunctor.ml[1600,47995+8]..[1600,47995+14])
                                    Ppat_var "bottom" (lib/grammarFunctor.ml[1600,47995+8]..[1600,47995+14])
                                  expression (lib/grammarFunctor.ml[1600,47995+17]..[1600,47995+33])
                                    Pexp_ident "SymbolSet.bottom" (lib/grammarFunctor.ml[1600,47995+17]..[1600,47995+33])
                              ]
                            structure_item (lib/grammarFunctor.ml[1601,48029+4]..[1601,48029+50])
                              Pstr_include                              module_expr (lib/grammarFunctor.ml[1601,48029+12]..[1601,48029+50])
                                Pmod_apply
                                module_expr (lib/grammarFunctor.ml[1601,48029+12]..[1601,48029+39])
                                  Pmod_ident "Fix.Glue.MinimalSemiLattice" (lib/grammarFunctor.ml[1601,48029+12]..[1601,48029+39])
                                module_expr (lib/grammarFunctor.ml[1601,48029+40]..[1601,48029+49])
                                  Pmod_ident "SymbolSet" (lib/grammarFunctor.ml[1601,48029+40]..[1601,48029+49])
                            structure_item (lib/grammarFunctor.ml[1602,48080+4]..[1602,48080+53])
                              Pstr_value Nonrec
                              [
                                <def>
                                  pattern (lib/grammarFunctor.ml[1602,48080+8]..[1602,48080+16])
                                    Ppat_var "terminal" (lib/grammarFunctor.ml[1602,48080+8]..[1602,48080+16])
                                  expression (lib/grammarFunctor.ml[1602,48080+17]..[1602,48080+53]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lib/grammarFunctor.ml[1602,48080+17]..[1602,48080+18])
                                      Ppat_var "t" (lib/grammarFunctor.ml[1602,48080+17]..[1602,48080+18])
                                    expression (lib/grammarFunctor.ml[1602,48080+21]..[1602,48080+53])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[1602,48080+21]..[1602,48080+40])
                                        Pexp_ident "SymbolSet.singleton" (lib/grammarFunctor.ml[1602,48080+21]..[1602,48080+40])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1602,48080+41]..[1602,48080+53])
                                            Pexp_construct "Symbol.T" (lib/grammarFunctor.ml[1602,48080+42]..[1602,48080+50])
                                            Some
                                              expression (lib/grammarFunctor.ml[1602,48080+51]..[1602,48080+52])
                                                Pexp_ident "t" (lib/grammarFunctor.ml[1602,48080+51]..[1602,48080+52])
                                      ]
                              ]
                            structure_item (lib/grammarFunctor.ml[1603,48134+4]..[1603,48134+22])
                              Pstr_value Nonrec
                              [
                                <def>
                                  pattern (lib/grammarFunctor.ml[1603,48134+8]..[1603,48134+13])
                                    Ppat_var "first" (lib/grammarFunctor.ml[1603,48134+8]..[1603,48134+13])
                                  expression (lib/grammarFunctor.ml[1603,48134+16]..[1603,48134+22])
                                    Pexp_ident "sfirst" (lib/grammarFunctor.ml[1603,48134+16]..[1603,48134+22])
                              ]
                          ]
                      expression (lib/grammarFunctor.ml[1605,48167+2]..[1605,48167+10])
                        Pexp_ident "F.follow" (lib/grammarFunctor.ml[1605,48167+2]..[1605,48167+10])
                ]
              structure_item (lib/grammarFunctor.ml[1632,49165+0]..[1635,49384+44])
                Pstr_type Rec
                [
                  type_declaration "explanation" (lib/grammarFunctor.ml[1632,49165+5]..[1632,49165+16]) (lib/grammarFunctor.ml[1632,49165+0]..[1635,49384+44])
                    ptype_params =
                      []
                    ptype_cstrs =
                      []
                    ptype_kind =
                      Ptype_variant
                        [
                          (lib/grammarFunctor.ml[1633,49184+2]..[1633,49184+12])
                            "EObvious" (lib/grammarFunctor.ml[1633,49184+4]..[1633,49184+12])
                            []
                            None
                          (lib/grammarFunctor.ml[1634,49270+2]..[1634,49270+40])
                            "EFirst" (lib/grammarFunctor.ml[1634,49270+4]..[1634,49270+10])
                            [
                              core_type (lib/grammarFunctor.ml[1634,49270+14]..[1634,49270+24])
                                Ptyp_constr "Terminal.t" (lib/grammarFunctor.ml[1634,49270+14]..[1634,49270+24])
                                []
                              core_type (lib/grammarFunctor.ml[1634,49270+27]..[1634,49270+40])
                                Ptyp_constr "Nonterminal.t" (lib/grammarFunctor.ml[1634,49270+27]..[1634,49270+40])
                                []
                            ]
                            None
                          (lib/grammarFunctor.ml[1635,49384+2]..[1635,49384+44])
                            "ENullable" (lib/grammarFunctor.ml[1635,49384+4]..[1635,49384+13])
                            [
                              core_type (lib/grammarFunctor.ml[1635,49384+17]..[1635,49384+30])
                                Ptyp_constr "list" (lib/grammarFunctor.ml[1635,49384+26]..[1635,49384+30])
                                [
                                  core_type (lib/grammarFunctor.ml[1635,49384+17]..[1635,49384+25])
                                    Ptyp_constr "Symbol.t" (lib/grammarFunctor.ml[1635,49384+17]..[1635,49384+25])
                                    []
                                ]
                              core_type (lib/grammarFunctor.ml[1635,49384+33]..[1635,49384+44])
                                Ptyp_constr "explanation" (lib/grammarFunctor.ml[1635,49384+33]..[1635,49384+44])
                                []
                            ]
                            None
                        ]
                    ptype_private = Public
                    ptype_manifest =
                      None
                ]
              structure_item (lib/grammarFunctor.ml[1637,49492+0]..[1658,50132+8])
                Pstr_value Nonrec
                [
                  <def>
                    pattern (lib/grammarFunctor.ml[1637,49492+4]..[1637,49492+11])
                      Ppat_var "explain" (lib/grammarFunctor.ml[1637,49492+4]..[1637,49492+11])
                    expression (lib/grammarFunctor.ml[1637,49492+12]..[1658,50132+8]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lib/grammarFunctor.ml[1637,49492+12]..[1637,49492+30])
                        Ppat_constraint
                        pattern (lib/grammarFunctor.ml[1637,49492+13]..[1637,49492+16])
                          Ppat_var "tok" (lib/grammarFunctor.ml[1637,49492+13]..[1637,49492+16])
                        core_type (lib/grammarFunctor.ml[1637,49492+19]..[1637,49492+29])
                          Ptyp_constr "Terminal.t" (lib/grammarFunctor.ml[1637,49492+19]..[1637,49492+29])
                          []
                      expression (lib/grammarFunctor.ml[1637,49492+31]..[1658,50132+8]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lib/grammarFunctor.ml[1637,49492+31]..[1637,49492+53])
                          Ppat_constraint
                          pattern (lib/grammarFunctor.ml[1637,49492+32]..[1637,49492+35])
                            Ppat_var "rhs" (lib/grammarFunctor.ml[1637,49492+32]..[1637,49492+35])
                          core_type (lib/grammarFunctor.ml[1637,49492+38]..[1637,49492+52])
                            Ptyp_constr "array" (lib/grammarFunctor.ml[1637,49492+47]..[1637,49492+52])
                            [
                              core_type (lib/grammarFunctor.ml[1637,49492+38]..[1637,49492+46])
                                Ptyp_constr "Symbol.t" (lib/grammarFunctor.ml[1637,49492+38]..[1637,49492+46])
                                []
                            ]
                        expression (lib/grammarFunctor.ml[1637,49492+54]..[1658,50132+8]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lib/grammarFunctor.ml[1637,49492+54]..[1637,49492+63])
                            Ppat_constraint
                            pattern (lib/grammarFunctor.ml[1637,49492+55]..[1637,49492+56])
                              Ppat_var "i" (lib/grammarFunctor.ml[1637,49492+55]..[1637,49492+56])
                            core_type (lib/grammarFunctor.ml[1637,49492+59]..[1637,49492+62])
                              Ptyp_constr "int" (lib/grammarFunctor.ml[1637,49492+59]..[1637,49492+62])
                              []
                          expression (lib/grammarFunctor.ml[1638,49558+2]..[1658,50132+8])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1638,49558+6]..[1638,49558+12])
                                  Ppat_var "length" (lib/grammarFunctor.ml[1638,49558+6]..[1638,49558+12])
                                expression (lib/grammarFunctor.ml[1638,49558+15]..[1638,49558+31])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[1638,49558+15]..[1638,49558+27])
                                    Pexp_ident "Array.length" (lib/grammarFunctor.ml[1638,49558+15]..[1638,49558+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[1638,49558+28]..[1638,49558+31])
                                        Pexp_ident "rhs" (lib/grammarFunctor.ml[1638,49558+28]..[1638,49558+31])
                                  ]
                            ]
                            expression (lib/grammarFunctor.ml[1639,49593+2]..[1658,50132+8])
                              Pexp_let Rec
                              [
                                <def>
                                  pattern (lib/grammarFunctor.ml[1639,49593+10]..[1639,49593+14])
                                    Ppat_var "loop" (lib/grammarFunctor.ml[1639,49593+10]..[1639,49593+14])
                                  expression (lib/grammarFunctor.ml[1639,49593+15]..[1656,50115+11]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lib/grammarFunctor.ml[1639,49593+15]..[1639,49593+16])
                                      Ppat_var "i" (lib/grammarFunctor.ml[1639,49593+15]..[1639,49593+16])
                                    expression (lib/grammarFunctor.ml[1640,49612+4]..[1656,50115+11])
                                      Pexp_sequence
                                      expression (lib/grammarFunctor.ml[1640,49612+4]..[1640,49612+23])
                                        Pexp_assert
                                        expression (lib/grammarFunctor.ml[1640,49612+11]..[1640,49612+23])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[1640,49612+14]..[1640,49612+15])
                                            Pexp_ident "<" (lib/grammarFunctor.ml[1640,49612+14]..[1640,49612+15])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[1640,49612+12]..[1640,49612+13])
                                                Pexp_ident "i" (lib/grammarFunctor.ml[1640,49612+12]..[1640,49612+13])
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[1640,49612+16]..[1640,49612+22])
                                                Pexp_ident "length" (lib/grammarFunctor.ml[1640,49612+16]..[1640,49612+22])
                                          ]
                                      expression (lib/grammarFunctor.ml[1641,49637+4]..[1656,50115+11])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/grammarFunctor.ml[1641,49637+8]..[1641,49637+14])
                                              Ppat_var "symbol" (lib/grammarFunctor.ml[1641,49637+8]..[1641,49637+14])
                                            expression (lib/grammarFunctor.ml[1641,49637+17]..[1641,49637+24])
                                              Pexp_apply
                                              expression (lib/grammarFunctor.ml[1641,49637+17]..[1641,49637+24]) ghost
                                                Pexp_ident "Array.get" (lib/grammarFunctor.ml[1641,49637+17]..[1641,49637+24]) ghost
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[1641,49637+17]..[1641,49637+20])
                                                    Pexp_ident "rhs" (lib/grammarFunctor.ml[1641,49637+17]..[1641,49637+20])
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[1641,49637+22]..[1641,49637+23])
                                                    Pexp_ident "i" (lib/grammarFunctor.ml[1641,49637+22]..[1641,49637+23])
                                              ]
                                        ]
                                        expression (lib/grammarFunctor.ml[1642,49665+4]..[1656,50115+11])
                                          Pexp_match
                                          expression (lib/grammarFunctor.ml[1642,49665+10]..[1642,49665+16])
                                            Pexp_ident "symbol" (lib/grammarFunctor.ml[1642,49665+10]..[1642,49665+16])
                                          [
                                            <case>
                                              pattern (lib/grammarFunctor.ml[1643,49687+6]..[1643,49687+19])
                                                Ppat_construct "Symbol.T" (lib/grammarFunctor.ml[1643,49687+6]..[1643,49687+14])
                                                Some
                                                  []
                                                  pattern (lib/grammarFunctor.ml[1643,49687+15]..[1643,49687+19])
                                                    Ppat_var "tok'" (lib/grammarFunctor.ml[1643,49687+15]..[1643,49687+19])
                                              expression (lib/grammarFunctor.ml[1644,49710+8]..[1645,49752+16])
                                                Pexp_sequence
                                                expression (lib/grammarFunctor.ml[1644,49710+8]..[1644,49710+40])
                                                  Pexp_assert
                                                  expression (lib/grammarFunctor.ml[1644,49710+15]..[1644,49710+40])
                                                    Pexp_apply
                                                    expression (lib/grammarFunctor.ml[1644,49710+16]..[1644,49710+30])
                                                      Pexp_ident "Terminal.equal" (lib/grammarFunctor.ml[1644,49710+16]..[1644,49710+30])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[1644,49710+31]..[1644,49710+34])
                                                          Pexp_ident "tok" (lib/grammarFunctor.ml[1644,49710+31]..[1644,49710+34])
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[1644,49710+35]..[1644,49710+39])
                                                          Pexp_ident "tok'" (lib/grammarFunctor.ml[1644,49710+35]..[1644,49710+39])
                                                    ]
                                                expression (lib/grammarFunctor.ml[1645,49752+8]..[1645,49752+16])
                                                  Pexp_construct "EObvious" (lib/grammarFunctor.ml[1645,49752+8]..[1645,49752+16])
                                                  None
                                            <case>
                                              pattern (lib/grammarFunctor.ml[1646,49769+6]..[1646,49769+17])
                                                Ppat_construct "Symbol.N" (lib/grammarFunctor.ml[1646,49769+6]..[1646,49769+14])
                                                Some
                                                  []
                                                  pattern (lib/grammarFunctor.ml[1646,49769+15]..[1646,49769+17])
                                                    Ppat_var "nt" (lib/grammarFunctor.ml[1646,49769+15]..[1646,49769+17])
                                              expression (lib/grammarFunctor.ml[1647,49790+8]..[1656,50115+11])
                                                Pexp_ifthenelse
                                                expression (lib/grammarFunctor.ml[1647,49790+11]..[1647,49790+53])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[1647,49790+11]..[1647,49790+26])
                                                    Pexp_ident "TerminalSet.mem" (lib/grammarFunctor.ml[1647,49790+11]..[1647,49790+26])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[1647,49790+27]..[1647,49790+30])
                                                        Pexp_ident "tok" (lib/grammarFunctor.ml[1647,49790+27]..[1647,49790+30])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[1647,49790+31]..[1647,49790+53])
                                                        Pexp_apply
                                                        expression (lib/grammarFunctor.ml[1647,49790+32]..[1647,49790+49])
                                                          Pexp_ident "FIRST.nonterminal" (lib/grammarFunctor.ml[1647,49790+32]..[1647,49790+49])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/grammarFunctor.ml[1647,49790+50]..[1647,49790+52])
                                                              Pexp_ident "nt" (lib/grammarFunctor.ml[1647,49790+50]..[1647,49790+52])
                                                        ]
                                                  ]
                                                expression (lib/grammarFunctor.ml[1648,49849+10]..[1648,49849+26])
                                                  Pexp_construct "EFirst" (lib/grammarFunctor.ml[1648,49849+10]..[1648,49849+16])
                                                  Some
                                                    expression (lib/grammarFunctor.ml[1648,49849+17]..[1648,49849+26])
                                                      Pexp_tuple
                                                      [
                                                        expression (lib/grammarFunctor.ml[1648,49849+18]..[1648,49849+21])
                                                          Pexp_ident "tok" (lib/grammarFunctor.ml[1648,49849+18]..[1648,49849+21])
                                                        expression (lib/grammarFunctor.ml[1648,49849+23]..[1648,49849+25])
                                                          Pexp_ident "nt" (lib/grammarFunctor.ml[1648,49849+23]..[1648,49849+25])
                                                      ]
                                                Some
                                                  expression (lib/grammarFunctor.ml[1649,49876+13]..[1656,50115+11])
                                                    Pexp_sequence
                                                    expression (lib/grammarFunctor.ml[1650,49895+10]..[1650,49895+42])
                                                      Pexp_assert
                                                      expression (lib/grammarFunctor.ml[1650,49895+17]..[1650,49895+42])
                                                        Pexp_apply
                                                        expression (lib/grammarFunctor.ml[1650,49895+18]..[1650,49895+38])
                                                          Pexp_ident "NULLABLE.nonterminal" (lib/grammarFunctor.ml[1650,49895+18]..[1650,49895+38])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/grammarFunctor.ml[1650,49895+39]..[1650,49895+41])
                                                              Pexp_ident "nt" (lib/grammarFunctor.ml[1650,49895+39]..[1650,49895+41])
                                                        ]
                                                    expression (lib/grammarFunctor.ml[1651,49939+10]..[1655,50075+39])
                                                      Pexp_match
                                                      expression (lib/grammarFunctor.ml[1651,49939+16]..[1651,49939+28])
                                                        Pexp_apply
                                                        expression (lib/grammarFunctor.ml[1651,49939+16]..[1651,49939+20])
                                                          Pexp_ident "loop" (lib/grammarFunctor.ml[1651,49939+16]..[1651,49939+20])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/grammarFunctor.ml[1651,49939+21]..[1651,49939+28])
                                                              Pexp_apply
                                                              expression (lib/grammarFunctor.ml[1651,49939+24]..[1651,49939+25])
                                                                Pexp_ident "+" (lib/grammarFunctor.ml[1651,49939+24]..[1651,49939+25])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/grammarFunctor.ml[1651,49939+22]..[1651,49939+23])
                                                                    Pexp_ident "i" (lib/grammarFunctor.ml[1651,49939+22]..[1651,49939+23])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/grammarFunctor.ml[1651,49939+26]..[1651,49939+27])
                                                                    Pexp_constant PConst_int (1,None)
                                                              ]
                                                        ]
                                                      [
                                                        <case>
                                                          pattern (lib/grammarFunctor.ml[1652,49973+12]..[1652,49973+34])
                                                            Ppat_construct "ENullable" (lib/grammarFunctor.ml[1652,49973+12]..[1652,49973+21])
                                                            Some
                                                              []
                                                              pattern (lib/grammarFunctor.ml[1652,49973+22]..[1652,49973+34])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (lib/grammarFunctor.ml[1652,49973+23]..[1652,49973+30])
                                                                    Ppat_var "symbols" (lib/grammarFunctor.ml[1652,49973+23]..[1652,49973+30])
                                                                  pattern (lib/grammarFunctor.ml[1652,49973+32]..[1652,49973+33])
                                                                    Ppat_var "e" (lib/grammarFunctor.ml[1652,49973+32]..[1652,49973+33])
                                                                ]
                                                          expression (lib/grammarFunctor.ml[1653,50011+14]..[1653,50011+46])
                                                            Pexp_construct "ENullable" (lib/grammarFunctor.ml[1653,50011+14]..[1653,50011+23])
                                                            Some
                                                              expression (lib/grammarFunctor.ml[1653,50011+24]..[1653,50011+46])
                                                                Pexp_tuple
                                                                [
                                                                  expression (lib/grammarFunctor.ml[1653,50011+25]..[1653,50011+42])
                                                                    Pexp_construct "::" (lib/grammarFunctor.ml[1653,50011+32]..[1653,50011+34])
                                                                    Some
                                                                      expression (lib/grammarFunctor.ml[1653,50011+25]..[1653,50011+42]) ghost
Pexp_tuple
[
  expression (lib/grammarFunctor.ml[1653,50011+25]..[1653,50011+31])
    Pexp_ident "symbol" (lib/grammarFunctor.ml[1653,50011+25]..[1653,50011+31])
  expression (lib/grammarFunctor.ml[1653,50011+35]..[1653,50011+42])
    Pexp_ident "symbols" (lib/grammarFunctor.ml[1653,50011+35]..[1653,50011+42])
]
                                                                  expression (lib/grammarFunctor.ml[1653,50011+44]..[1653,50011+45])
                                                                    Pexp_ident "e" (lib/grammarFunctor.ml[1653,50011+44]..[1653,50011+45])
                                                                ]
                                                        <case>
                                                          pattern (lib/grammarFunctor.ml[1654,50058+12]..[1654,50058+13])
                                                            Ppat_var "e" (lib/grammarFunctor.ml[1654,50058+12]..[1654,50058+13])
                                                          expression (lib/grammarFunctor.ml[1655,50075+14]..[1655,50075+39])
                                                            Pexp_construct "ENullable" (lib/grammarFunctor.ml[1655,50075+14]..[1655,50075+23])
                                                            Some
                                                              expression (lib/grammarFunctor.ml[1655,50075+24]..[1655,50075+39])
                                                                Pexp_tuple
                                                                [
                                                                  expression (lib/grammarFunctor.ml[1655,50075+25]..[1655,50075+35])
                                                                    Pexp_construct "::" (lib/grammarFunctor.ml[1655,50075+27]..[1655,50075+35]) ghost
                                                                    Some
                                                                      expression (lib/grammarFunctor.ml[1655,50075+27]..[1655,50075+35]) ghost
Pexp_tuple
[
  expression (lib/grammarFunctor.ml[1655,50075+27]..[1655,50075+33])
    Pexp_ident "symbol" (lib/grammarFunctor.ml[1655,50075+27]..[1655,50075+33])
  expression (lib/grammarFunctor.ml[1655,50075+34]..[1655,50075+35]) ghost
    Pexp_construct "[]" (lib/grammarFunctor.ml[1655,50075+34]..[1655,50075+35]) ghost
    None
]
                                                                  expression (lib/grammarFunctor.ml[1655,50075+37]..[1655,50075+38])
                                                                    Pexp_ident "e" (lib/grammarFunctor.ml[1655,50075+37]..[1655,50075+38])
                                                                ]
                                                      ]
                                          ]
                              ]
                              expression (lib/grammarFunctor.ml[1658,50132+2]..[1658,50132+8])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[1658,50132+2]..[1658,50132+6])
                                  Pexp_ident "loop" (lib/grammarFunctor.ml[1658,50132+2]..[1658,50132+6])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[1658,50132+7]..[1658,50132+8])
                                      Pexp_ident "i" (lib/grammarFunctor.ml[1658,50132+7]..[1658,50132+8])
                                ]
                ]
              structure_item (lib/grammarFunctor.ml[1660,50142+0]..[1672,50499+9])
                Pstr_value Rec
                [
                  <def>
                    pattern (lib/grammarFunctor.ml[1660,50142+8]..[1660,50142+15])
                      Ppat_var "convert" (lib/grammarFunctor.ml[1660,50142+8]..[1660,50142+15])
                    expression (lib/grammarFunctor.ml[1660,50142+18]..[1672,50499+9])
                      Pexp_function
                      [
                        <case>
                          pattern (lib/grammarFunctor.ml[1661,50169+4]..[1661,50169+12])
                            Ppat_construct "EObvious" (lib/grammarFunctor.ml[1661,50169+4]..[1661,50169+12])
                            None
                          expression (lib/grammarFunctor.ml[1662,50185+6]..[1662,50185+8])
                            Pexp_constant PConst_string("",(lib/grammarFunctor.ml[1662,50185+7]..[1662,50185+7]),None)
                        <case>
                          pattern (lib/grammarFunctor.ml[1663,50194+4]..[1663,50194+20])
                            Ppat_construct "EFirst" (lib/grammarFunctor.ml[1663,50194+4]..[1663,50194+10])
                            Some
                              []
                              pattern (lib/grammarFunctor.ml[1663,50194+11]..[1663,50194+20])
                                Ppat_tuple
                                [
                                  pattern (lib/grammarFunctor.ml[1663,50194+12]..[1663,50194+15])
                                    Ppat_var "tok" (lib/grammarFunctor.ml[1663,50194+12]..[1663,50194+15])
                                  pattern (lib/grammarFunctor.ml[1663,50194+17]..[1663,50194+19])
                                    Ppat_var "nt" (lib/grammarFunctor.ml[1663,50194+17]..[1663,50194+19])
                                ]
                          expression (lib/grammarFunctor.ml[1664,50218+6]..[1666,50299+28])
                            Pexp_apply
                            expression (lib/grammarFunctor.ml[1664,50218+6]..[1664,50218+20])
                              Pexp_ident "Printf.sprintf" (lib/grammarFunctor.ml[1664,50218+6]..[1664,50218+20])
                            [
                              <arg>
                              Nolabel
                                expression (lib/grammarFunctor.ml[1664,50218+21]..[1664,50218+43])
                                  Pexp_constant PConst_string("%s can begin with %s",(lib/grammarFunctor.ml[1664,50218+22]..[1664,50218+42]),None)
                              <arg>
                              Nolabel
                                expression (lib/grammarFunctor.ml[1665,50262+8]..[1665,50262+36])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[1665,50262+9]..[1665,50262+26])
                                    Pexp_ident "Nonterminal.print" (lib/grammarFunctor.ml[1665,50262+9]..[1665,50262+26])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[1665,50262+27]..[1665,50262+32])
                                        Pexp_construct "false" (lib/grammarFunctor.ml[1665,50262+27]..[1665,50262+32])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[1665,50262+33]..[1665,50262+35])
                                        Pexp_ident "nt" (lib/grammarFunctor.ml[1665,50262+33]..[1665,50262+35])
                                  ]
                              <arg>
                              Nolabel
                                expression (lib/grammarFunctor.ml[1666,50299+8]..[1666,50299+28])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[1666,50299+9]..[1666,50299+23])
                                    Pexp_ident "Terminal.print" (lib/grammarFunctor.ml[1666,50299+9]..[1666,50299+23])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[1666,50299+24]..[1666,50299+27])
                                        Pexp_ident "tok" (lib/grammarFunctor.ml[1666,50299+24]..[1666,50299+27])
                                  ]
                            ]
                        <case>
                          pattern (lib/grammarFunctor.ml[1667,50328+4]..[1667,50328+26])
                            Ppat_construct "ENullable" (lib/grammarFunctor.ml[1667,50328+4]..[1667,50328+13])
                            Some
                              []
                              pattern (lib/grammarFunctor.ml[1667,50328+14]..[1667,50328+26])
                                Ppat_tuple
                                [
                                  pattern (lib/grammarFunctor.ml[1667,50328+15]..[1667,50328+22])
                                    Ppat_var "symbols" (lib/grammarFunctor.ml[1667,50328+15]..[1667,50328+22])
                                  pattern (lib/grammarFunctor.ml[1667,50328+24]..[1667,50328+25])
                                    Ppat_var "e" (lib/grammarFunctor.ml[1667,50328+24]..[1667,50328+25])
                                ]
                          expression (lib/grammarFunctor.ml[1668,50358+6]..[1672,50499+9])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1668,50358+10]..[1668,50358+11])
                                  Ppat_var "e" (lib/grammarFunctor.ml[1668,50358+10]..[1668,50358+11])
                                expression (lib/grammarFunctor.ml[1668,50358+14]..[1668,50358+23])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[1668,50358+14]..[1668,50358+21])
                                    Pexp_ident "convert" (lib/grammarFunctor.ml[1668,50358+14]..[1668,50358+21])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[1668,50358+22]..[1668,50358+23])
                                        Pexp_ident "e" (lib/grammarFunctor.ml[1668,50358+22]..[1668,50358+23])
                                  ]
                            ]
                            expression (lib/grammarFunctor.ml[1669,50385+6]..[1672,50499+9])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[1669,50385+6]..[1669,50385+20])
                                Pexp_ident "Printf.sprintf" (lib/grammarFunctor.ml[1669,50385+6]..[1669,50385+20])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[1669,50385+21]..[1669,50385+40])
                                    Pexp_constant PConst_string("%s can vanish%s%s",(lib/grammarFunctor.ml[1669,50385+22]..[1669,50385+39]),None)
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[1670,50426+8]..[1670,50426+31])
                                    Pexp_apply
                                    expression (lib/grammarFunctor.ml[1670,50426+9]..[1670,50426+22])
                                      Pexp_ident "Symbol.printl" (lib/grammarFunctor.ml[1670,50426+9]..[1670,50426+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[1670,50426+23]..[1670,50426+30])
                                          Pexp_ident "symbols" (lib/grammarFunctor.ml[1670,50426+23]..[1670,50426+30])
                                    ]
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[1671,50458+8]..[1671,50458+40])
                                    Pexp_ifthenelse
                                    expression (lib/grammarFunctor.ml[1671,50458+12]..[1671,50458+18])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[1671,50458+14]..[1671,50458+15])
                                        Pexp_ident "=" (lib/grammarFunctor.ml[1671,50458+14]..[1671,50458+15])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1671,50458+12]..[1671,50458+13])
                                            Pexp_ident "e" (lib/grammarFunctor.ml[1671,50458+12]..[1671,50458+13])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1671,50458+16]..[1671,50458+18])
                                            Pexp_constant PConst_string("",(lib/grammarFunctor.ml[1671,50458+17]..[1671,50458+17]),None)
                                      ]
                                    expression (lib/grammarFunctor.ml[1671,50458+24]..[1671,50458+26])
                                      Pexp_constant PConst_string("",(lib/grammarFunctor.ml[1671,50458+25]..[1671,50458+25]),None)
                                    Some
                                      expression (lib/grammarFunctor.ml[1671,50458+32]..[1671,50458+39])
                                        Pexp_constant PConst_string(" and ",(lib/grammarFunctor.ml[1671,50458+33]..[1671,50458+38]),None)
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[1672,50499+8]..[1672,50499+9])
                                    Pexp_ident "e" (lib/grammarFunctor.ml[1672,50499+8]..[1672,50499+9])
                              ]
                      ]
                ]
              structure_item (lib/grammarFunctor.ml[1677,50626+0]..[1732,52002+3])
                Pstr_module
                "Analysis" (lib/grammarFunctor.ml[1677,50626+7]..[1677,50626+15])
                  module_expr (lib/grammarFunctor.ml[1677,50626+18]..[1732,52002+3])
                    Pmod_structure
                    [
                      structure_item (lib/grammarFunctor.ml[1679,50652+2]..[1679,50652+37])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1679,50652+6]..[1679,50652+14])
                              Ppat_var "nullable" (lib/grammarFunctor.ml[1679,50652+6]..[1679,50652+14])
                            expression (lib/grammarFunctor.ml[1679,50652+17]..[1679,50652+37])
                              Pexp_ident "NULLABLE.nonterminal" (lib/grammarFunctor.ml[1679,50652+17]..[1679,50652+37])
                        ]
                      structure_item (lib/grammarFunctor.ml[1681,50691+2]..[1681,50691+39])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1681,50691+6]..[1681,50691+21])
                              Ppat_var "nullable_symbol" (lib/grammarFunctor.ml[1681,50691+6]..[1681,50691+21])
                            expression (lib/grammarFunctor.ml[1681,50691+24]..[1681,50691+39])
                              Pexp_ident "NULLABLE.symbol" (lib/grammarFunctor.ml[1681,50691+24]..[1681,50691+39])
                        ]
                      structure_item (lib/grammarFunctor.ml[1683,50732+2]..[1683,50732+31])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1683,50732+6]..[1683,50732+11])
                              Ppat_var "first" (lib/grammarFunctor.ml[1683,50732+6]..[1683,50732+11])
                            expression (lib/grammarFunctor.ml[1683,50732+14]..[1683,50732+31])
                              Pexp_ident "FIRST.nonterminal" (lib/grammarFunctor.ml[1683,50732+14]..[1683,50732+31])
                        ]
                      structure_item (lib/grammarFunctor.ml[1685,50765+2]..[1685,50765+33])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1685,50765+6]..[1685,50765+18])
                              Ppat_var "first_symbol" (lib/grammarFunctor.ml[1685,50765+6]..[1685,50765+18])
                            expression (lib/grammarFunctor.ml[1685,50765+21]..[1685,50765+33])
                              Pexp_ident "FIRST.symbol" (lib/grammarFunctor.ml[1685,50765+21]..[1685,50765+33])
                        ]
                      structure_item (lib/grammarFunctor.ml[1689,50857+2]..[1691,50924+27])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1689,50857+6]..[1689,50857+25])
                              Ppat_var "nullable_first_prod" (lib/grammarFunctor.ml[1689,50857+6]..[1689,50857+25])
                            expression (lib/grammarFunctor.ml[1689,50857+26]..[1691,50924+27]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[1689,50857+26]..[1689,50857+30])
                                Ppat_var "prod" (lib/grammarFunctor.ml[1689,50857+26]..[1689,50857+30])
                              expression (lib/grammarFunctor.ml[1689,50857+31]..[1691,50924+27]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1689,50857+31]..[1689,50857+32])
                                  Ppat_var "i" (lib/grammarFunctor.ml[1689,50857+31]..[1689,50857+32])
                                expression (lib/grammarFunctor.ml[1690,50892+4]..[1691,50924+27])
                                  Pexp_tuple
                                  [
                                    expression (lib/grammarFunctor.ml[1690,50892+4]..[1690,50892+30])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[1690,50892+4]..[1690,50892+23])
                                        Pexp_ident "NULLABLE.production" (lib/grammarFunctor.ml[1690,50892+4]..[1690,50892+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1690,50892+24]..[1690,50892+28])
                                            Pexp_ident "prod" (lib/grammarFunctor.ml[1690,50892+24]..[1690,50892+28])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1690,50892+29]..[1690,50892+30])
                                            Pexp_ident "i" (lib/grammarFunctor.ml[1690,50892+29]..[1690,50892+30])
                                      ]
                                    expression (lib/grammarFunctor.ml[1691,50924+4]..[1691,50924+27])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[1691,50924+4]..[1691,50924+20])
                                        Pexp_ident "FIRST.production" (lib/grammarFunctor.ml[1691,50924+4]..[1691,50924+20])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1691,50924+21]..[1691,50924+25])
                                            Pexp_ident "prod" (lib/grammarFunctor.ml[1691,50924+21]..[1691,50924+25])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1691,50924+26]..[1691,50924+27])
                                            Pexp_ident "i" (lib/grammarFunctor.ml[1691,50924+26]..[1691,50924+27])
                                      ]
                                  ]
                        ]
                      structure_item (lib/grammarFunctor.ml[1696,51052+2]..[1701,51226+5])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1696,51052+6]..[1696,51052+25])
                              Ppat_var "nullable_first_prod" (lib/grammarFunctor.ml[1696,51052+6]..[1696,51052+25])
                            expression (lib/grammarFunctor.ml[1697,51080+4]..[1701,51226+5])
                              Pexp_apply
                              expression (lib/grammarFunctor.ml[1697,51080+4]..[1697,51080+17])
                                Pexp_ident "Misc.tabulate" (lib/grammarFunctor.ml[1697,51080+4]..[1697,51080+17])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[1697,51080+18]..[1697,51080+30])
                                    Pexp_ident "Production.n" (lib/grammarFunctor.ml[1697,51080+18]..[1697,51080+30])
                                <arg>
                                Nolabel
                                  expression (lib/grammarFunctor.ml[1697,51080+31]..[1701,51226+5])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lib/grammarFunctor.ml[1697,51080+36]..[1697,51080+40])
                                      Ppat_var "prod" (lib/grammarFunctor.ml[1697,51080+36]..[1697,51080+40])
                                    expression (lib/grammarFunctor.ml[1698,51124+6]..[1700,51218+7])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[1698,51124+6]..[1698,51124+19])
                                        Pexp_ident "Misc.tabulate" (lib/grammarFunctor.ml[1698,51124+6]..[1698,51124+19])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1698,51124+20]..[1698,51124+48])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[1698,51124+44]..[1698,51124+45])
                                              Pexp_ident "+" (lib/grammarFunctor.ml[1698,51124+44]..[1698,51124+45])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1698,51124+21]..[1698,51124+43])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[1698,51124+21]..[1698,51124+38])
                                                    Pexp_ident "Production.length" (lib/grammarFunctor.ml[1698,51124+21]..[1698,51124+38])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[1698,51124+39]..[1698,51124+43])
                                                        Pexp_ident "prod" (lib/grammarFunctor.ml[1698,51124+39]..[1698,51124+43])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1698,51124+46]..[1698,51124+47])
                                                  Pexp_constant PConst_int (1,None)
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1698,51124+49]..[1700,51218+7])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (lib/grammarFunctor.ml[1698,51124+54]..[1698,51124+55])
                                              Ppat_var "i" (lib/grammarFunctor.ml[1698,51124+54]..[1698,51124+55])
                                            expression (lib/grammarFunctor.ml[1699,51183+8]..[1699,51183+34])
                                              Pexp_apply
                                              expression (lib/grammarFunctor.ml[1699,51183+8]..[1699,51183+27])
                                                Pexp_ident "nullable_first_prod" (lib/grammarFunctor.ml[1699,51183+8]..[1699,51183+27])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[1699,51183+28]..[1699,51183+32])
                                                    Pexp_ident "prod" (lib/grammarFunctor.ml[1699,51183+28]..[1699,51183+32])
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[1699,51183+33]..[1699,51183+34])
                                                    Pexp_ident "i" (lib/grammarFunctor.ml[1699,51183+33]..[1699,51183+34])
                                              ]
                                      ]
                              ]
                        ]
                      structure_item (lib/grammarFunctor.ml[1703,51233+2]..[1708,51387+11])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1703,51233+6]..[1703,51233+26])
                              Ppat_var "first_prod_lookahead" (lib/grammarFunctor.ml[1703,51233+6]..[1703,51233+26])
                            expression (lib/grammarFunctor.ml[1703,51233+27]..[1708,51387+11]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[1703,51233+27]..[1703,51233+31])
                                Ppat_var "prod" (lib/grammarFunctor.ml[1703,51233+27]..[1703,51233+31])
                              expression (lib/grammarFunctor.ml[1703,51233+32]..[1708,51387+11]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1703,51233+32]..[1703,51233+33])
                                  Ppat_var "i" (lib/grammarFunctor.ml[1703,51233+32]..[1703,51233+33])
                                expression (lib/grammarFunctor.ml[1703,51233+34]..[1708,51387+11]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lib/grammarFunctor.ml[1703,51233+34]..[1703,51233+35])
                                    Ppat_var "z" (lib/grammarFunctor.ml[1703,51233+34]..[1703,51233+35])
                                  expression (lib/grammarFunctor.ml[1704,51271+4]..[1708,51387+11])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/grammarFunctor.ml[1704,51271+8]..[1704,51271+23])
                                          Ppat_tuple
                                          [
                                            pattern (lib/grammarFunctor.ml[1704,51271+8]..[1704,51271+16])
                                              Ppat_var "nullable" (lib/grammarFunctor.ml[1704,51271+8]..[1704,51271+16])
                                            pattern (lib/grammarFunctor.ml[1704,51271+18]..[1704,51271+23])
                                              Ppat_var "first" (lib/grammarFunctor.ml[1704,51271+18]..[1704,51271+23])
                                          ]
                                        expression (lib/grammarFunctor.ml[1704,51271+26]..[1704,51271+52])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[1704,51271+26]..[1704,51271+45])
                                            Pexp_ident "nullable_first_prod" (lib/grammarFunctor.ml[1704,51271+26]..[1704,51271+45])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[1704,51271+46]..[1704,51271+50])
                                                Pexp_ident "prod" (lib/grammarFunctor.ml[1704,51271+46]..[1704,51271+50])
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[1704,51271+51]..[1704,51271+52])
                                                Pexp_ident "i" (lib/grammarFunctor.ml[1704,51271+51]..[1704,51271+52])
                                          ]
                                    ]
                                    expression (lib/grammarFunctor.ml[1705,51327+4]..[1708,51387+11])
                                      Pexp_ifthenelse
                                      expression (lib/grammarFunctor.ml[1705,51327+7]..[1705,51327+15])
                                        Pexp_ident "nullable" (lib/grammarFunctor.ml[1705,51327+7]..[1705,51327+15])
                                      expression (lib/grammarFunctor.ml[1706,51348+6]..[1706,51348+29])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[1706,51348+6]..[1706,51348+21])
                                          Pexp_ident "TerminalSet.add" (lib/grammarFunctor.ml[1706,51348+6]..[1706,51348+21])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[1706,51348+22]..[1706,51348+23])
                                              Pexp_ident "z" (lib/grammarFunctor.ml[1706,51348+22]..[1706,51348+23])
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[1706,51348+24]..[1706,51348+29])
                                              Pexp_ident "first" (lib/grammarFunctor.ml[1706,51348+24]..[1706,51348+29])
                                        ]
                                      Some
                                        expression (lib/grammarFunctor.ml[1708,51387+6]..[1708,51387+11])
                                          Pexp_ident "first" (lib/grammarFunctor.ml[1708,51387+6]..[1708,51387+11])
                        ]
                      structure_item (lib/grammarFunctor.ml[1710,51400+2]..[1711,51478+31])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1710,51400+6]..[1710,51400+23])
                              Ppat_var "explain_first_rhs" (lib/grammarFunctor.ml[1710,51400+6]..[1710,51400+23])
                            expression (lib/grammarFunctor.ml[1710,51400+24]..[1711,51478+31]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[1710,51400+24]..[1710,51400+42])
                                Ppat_constraint
                                pattern (lib/grammarFunctor.ml[1710,51400+25]..[1710,51400+28])
                                  Ppat_var "tok" (lib/grammarFunctor.ml[1710,51400+25]..[1710,51400+28])
                                core_type (lib/grammarFunctor.ml[1710,51400+31]..[1710,51400+41])
                                  Ptyp_constr "Terminal.t" (lib/grammarFunctor.ml[1710,51400+31]..[1710,51400+41])
                                  []
                              expression (lib/grammarFunctor.ml[1710,51400+43]..[1711,51478+31]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1710,51400+43]..[1710,51400+65])
                                  Ppat_constraint
                                  pattern (lib/grammarFunctor.ml[1710,51400+44]..[1710,51400+47])
                                    Ppat_var "rhs" (lib/grammarFunctor.ml[1710,51400+44]..[1710,51400+47])
                                  core_type (lib/grammarFunctor.ml[1710,51400+50]..[1710,51400+64])
                                    Ptyp_constr "array" (lib/grammarFunctor.ml[1710,51400+59]..[1710,51400+64])
                                    [
                                      core_type (lib/grammarFunctor.ml[1710,51400+50]..[1710,51400+58])
                                        Ptyp_constr "Symbol.t" (lib/grammarFunctor.ml[1710,51400+50]..[1710,51400+58])
                                        []
                                    ]
                                expression (lib/grammarFunctor.ml[1710,51400+66]..[1711,51478+31]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lib/grammarFunctor.ml[1710,51400+66]..[1710,51400+75])
                                    Ppat_constraint
                                    pattern (lib/grammarFunctor.ml[1710,51400+67]..[1710,51400+68])
                                      Ppat_var "i" (lib/grammarFunctor.ml[1710,51400+67]..[1710,51400+68])
                                    core_type (lib/grammarFunctor.ml[1710,51400+71]..[1710,51400+74])
                                      Ptyp_constr "int" (lib/grammarFunctor.ml[1710,51400+71]..[1710,51400+74])
                                      []
                                  expression (lib/grammarFunctor.ml[1711,51478+4]..[1711,51478+31])
                                    Pexp_apply
                                    expression (lib/grammarFunctor.ml[1711,51478+4]..[1711,51478+11])
                                      Pexp_ident "convert" (lib/grammarFunctor.ml[1711,51478+4]..[1711,51478+11])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[1711,51478+12]..[1711,51478+31])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[1711,51478+13]..[1711,51478+20])
                                            Pexp_ident "explain" (lib/grammarFunctor.ml[1711,51478+13]..[1711,51478+20])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[1711,51478+21]..[1711,51478+24])
                                                Pexp_ident "tok" (lib/grammarFunctor.ml[1711,51478+21]..[1711,51478+24])
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[1711,51478+25]..[1711,51478+28])
                                                Pexp_ident "rhs" (lib/grammarFunctor.ml[1711,51478+25]..[1711,51478+28])
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[1711,51478+29]..[1711,51478+30])
                                                Pexp_ident "i" (lib/grammarFunctor.ml[1711,51478+29]..[1711,51478+30])
                                          ]
                                    ]
                        ]
                      structure_item (lib/grammarFunctor.ml[1713,51511+2]..[1713,51511+21])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1713,51511+6]..[1713,51511+12])
                              Ppat_var "follow" (lib/grammarFunctor.ml[1713,51511+6]..[1713,51511+12])
                            expression (lib/grammarFunctor.ml[1713,51511+15]..[1713,51511+21])
                              Pexp_ident "follow" (lib/grammarFunctor.ml[1713,51511+15]..[1713,51511+21])
                        ]
                      structure_item (lib/grammarFunctor.ml[1715,51534+2]..[1716,51553+25])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1715,51534+6]..[1715,51534+16])
                              Ppat_var "attributes" (lib/grammarFunctor.ml[1715,51534+6]..[1715,51534+16])
                            expression (lib/grammarFunctor.ml[1716,51553+4]..[1716,51553+25])
                              Pexp_field
                              expression (lib/grammarFunctor.ml[1716,51553+4]..[1716,51553+11])
                                Pexp_ident "grammar" (lib/grammarFunctor.ml[1716,51553+4]..[1716,51553+11])
                              "gr_attributes" (lib/grammarFunctor.ml[1716,51553+12]..[1716,51553+25])
                        ]
                      structure_item (lib/grammarFunctor.ml[1718,51580+2]..[1719,51599+55])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1718,51580+6]..[1718,51580+13])
                              Ppat_var "minimal" (lib/grammarFunctor.ml[1718,51580+6]..[1718,51580+13])
                            expression (lib/grammarFunctor.ml[1718,51580+14]..[1719,51599+55]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[1718,51580+14]..[1718,51580+16])
                                Ppat_var "nt" (lib/grammarFunctor.ml[1718,51580+14]..[1718,51580+16])
                              expression (lib/grammarFunctor.ml[1719,51599+4]..[1719,51599+55])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[1719,51599+4]..[1719,51599+30])
                                  Pexp_ident "CompletedNatWitness.to_int" (lib/grammarFunctor.ml[1719,51599+4]..[1719,51599+30])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[1719,51599+31]..[1719,51599+55])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[1719,51599+32]..[1719,51599+51])
                                        Pexp_ident "MINIMAL.nonterminal" (lib/grammarFunctor.ml[1719,51599+32]..[1719,51599+51])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1719,51599+52]..[1719,51599+54])
                                            Pexp_ident "nt" (lib/grammarFunctor.ml[1719,51599+52]..[1719,51599+54])
                                      ]
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[1721,51656+2]..[1723,51736+58])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1721,51656+6]..[1721,51656+18])
                              Ppat_var "minimal_prod" (lib/grammarFunctor.ml[1721,51656+6]..[1721,51656+18])
                            expression (lib/grammarFunctor.ml[1721,51656+19]..[1723,51736+58]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[1721,51656+19]..[1721,51656+23])
                                Ppat_var "prod" (lib/grammarFunctor.ml[1721,51656+19]..[1721,51656+23])
                              expression (lib/grammarFunctor.ml[1721,51656+24]..[1723,51736+58]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1721,51656+24]..[1721,51656+25])
                                  Ppat_var "i" (lib/grammarFunctor.ml[1721,51656+24]..[1721,51656+25])
                                expression (lib/grammarFunctor.ml[1722,51684+4]..[1723,51736+58])
                                  Pexp_sequence
                                  expression (lib/grammarFunctor.ml[1722,51684+4]..[1722,51684+50])
                                    Pexp_assert
                                    expression (lib/grammarFunctor.ml[1722,51684+11]..[1722,51684+50])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[1722,51684+19]..[1722,51684+21])
                                        Pexp_ident "&&" (lib/grammarFunctor.ml[1722,51684+19]..[1722,51684+21])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1722,51684+12]..[1722,51684+18])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[1722,51684+14]..[1722,51684+16])
                                              Pexp_ident "<=" (lib/grammarFunctor.ml[1722,51684+14]..[1722,51684+16])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1722,51684+12]..[1722,51684+13])
                                                  Pexp_constant PConst_int (0,None)
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1722,51684+17]..[1722,51684+18])
                                                  Pexp_ident "i" (lib/grammarFunctor.ml[1722,51684+17]..[1722,51684+18])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1722,51684+22]..[1722,51684+49])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[1722,51684+24]..[1722,51684+26])
                                              Pexp_ident "<=" (lib/grammarFunctor.ml[1722,51684+24]..[1722,51684+26])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1722,51684+22]..[1722,51684+23])
                                                  Pexp_ident "i" (lib/grammarFunctor.ml[1722,51684+22]..[1722,51684+23])
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1722,51684+27]..[1722,51684+49])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[1722,51684+27]..[1722,51684+44])
                                                    Pexp_ident "Production.length" (lib/grammarFunctor.ml[1722,51684+27]..[1722,51684+44])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[1722,51684+45]..[1722,51684+49])
                                                        Pexp_ident "prod" (lib/grammarFunctor.ml[1722,51684+45]..[1722,51684+49])
                                                  ]
                                            ]
                                      ]
                                  expression (lib/grammarFunctor.ml[1723,51736+4]..[1723,51736+58])
                                    Pexp_apply
                                    expression (lib/grammarFunctor.ml[1723,51736+4]..[1723,51736+30])
                                      Pexp_ident "CompletedNatWitness.to_int" (lib/grammarFunctor.ml[1723,51736+4]..[1723,51736+30])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[1723,51736+31]..[1723,51736+58])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[1723,51736+32]..[1723,51736+50])
                                            Pexp_ident "MINIMAL.production" (lib/grammarFunctor.ml[1723,51736+32]..[1723,51736+50])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[1723,51736+51]..[1723,51736+55])
                                                Pexp_ident "prod" (lib/grammarFunctor.ml[1723,51736+51]..[1723,51736+55])
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[1723,51736+56]..[1723,51736+57])
                                                Pexp_ident "i" (lib/grammarFunctor.ml[1723,51736+56]..[1723,51736+57])
                                          ]
                                    ]
                        ]
                      structure_item (lib/grammarFunctor.ml[1725,51796+2]..[1726,51815+50])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1725,51796+6]..[1725,51796+13])
                              Ppat_var "maximal" (lib/grammarFunctor.ml[1725,51796+6]..[1725,51796+13])
                            expression (lib/grammarFunctor.ml[1725,51796+14]..[1726,51815+50]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[1725,51796+14]..[1725,51796+16])
                                Ppat_var "nt" (lib/grammarFunctor.ml[1725,51796+14]..[1725,51796+16])
                              expression (lib/grammarFunctor.ml[1726,51815+4]..[1726,51815+50])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[1726,51815+4]..[1726,51815+25])
                                  Pexp_ident "NatInfinityMax.to_int" (lib/grammarFunctor.ml[1726,51815+4]..[1726,51815+25])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[1726,51815+26]..[1726,51815+50])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[1726,51815+27]..[1726,51815+46])
                                        Pexp_ident "MAXIMAL.nonterminal" (lib/grammarFunctor.ml[1726,51815+27]..[1726,51815+46])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1726,51815+47]..[1726,51815+49])
                                            Pexp_ident "nt" (lib/grammarFunctor.ml[1726,51815+47]..[1726,51815+49])
                                      ]
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[1728,51867+2]..[1730,51947+53])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1728,51867+6]..[1728,51867+18])
                              Ppat_var "maximal_prod" (lib/grammarFunctor.ml[1728,51867+6]..[1728,51867+18])
                            expression (lib/grammarFunctor.ml[1728,51867+19]..[1730,51947+53]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[1728,51867+19]..[1728,51867+23])
                                Ppat_var "prod" (lib/grammarFunctor.ml[1728,51867+19]..[1728,51867+23])
                              expression (lib/grammarFunctor.ml[1728,51867+24]..[1730,51947+53]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1728,51867+24]..[1728,51867+25])
                                  Ppat_var "i" (lib/grammarFunctor.ml[1728,51867+24]..[1728,51867+25])
                                expression (lib/grammarFunctor.ml[1729,51895+4]..[1730,51947+53])
                                  Pexp_sequence
                                  expression (lib/grammarFunctor.ml[1729,51895+4]..[1729,51895+50])
                                    Pexp_assert
                                    expression (lib/grammarFunctor.ml[1729,51895+11]..[1729,51895+50])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[1729,51895+19]..[1729,51895+21])
                                        Pexp_ident "&&" (lib/grammarFunctor.ml[1729,51895+19]..[1729,51895+21])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1729,51895+12]..[1729,51895+18])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[1729,51895+14]..[1729,51895+16])
                                              Pexp_ident "<=" (lib/grammarFunctor.ml[1729,51895+14]..[1729,51895+16])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1729,51895+12]..[1729,51895+13])
                                                  Pexp_constant PConst_int (0,None)
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1729,51895+17]..[1729,51895+18])
                                                  Pexp_ident "i" (lib/grammarFunctor.ml[1729,51895+17]..[1729,51895+18])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1729,51895+22]..[1729,51895+49])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[1729,51895+24]..[1729,51895+26])
                                              Pexp_ident "<=" (lib/grammarFunctor.ml[1729,51895+24]..[1729,51895+26])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1729,51895+22]..[1729,51895+23])
                                                  Pexp_ident "i" (lib/grammarFunctor.ml[1729,51895+22]..[1729,51895+23])
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1729,51895+27]..[1729,51895+49])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[1729,51895+27]..[1729,51895+44])
                                                    Pexp_ident "Production.length" (lib/grammarFunctor.ml[1729,51895+27]..[1729,51895+44])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[1729,51895+45]..[1729,51895+49])
                                                        Pexp_ident "prod" (lib/grammarFunctor.ml[1729,51895+45]..[1729,51895+49])
                                                  ]
                                            ]
                                      ]
                                  expression (lib/grammarFunctor.ml[1730,51947+4]..[1730,51947+53])
                                    Pexp_apply
                                    expression (lib/grammarFunctor.ml[1730,51947+4]..[1730,51947+25])
                                      Pexp_ident "NatInfinityMax.to_int" (lib/grammarFunctor.ml[1730,51947+4]..[1730,51947+25])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[1730,51947+26]..[1730,51947+53])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[1730,51947+27]..[1730,51947+45])
                                            Pexp_ident "MAXIMAL.production" (lib/grammarFunctor.ml[1730,51947+27]..[1730,51947+45])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[1730,51947+46]..[1730,51947+50])
                                                Pexp_ident "prod" (lib/grammarFunctor.ml[1730,51947+46]..[1730,51947+50])
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[1730,51947+51]..[1730,51947+52])
                                                Pexp_ident "i" (lib/grammarFunctor.ml[1730,51947+51]..[1730,51947+52])
                                          ]
                                    ]
                        ]
                    ]
              structure_item (lib/grammarFunctor.ml[1737,52130+0]..[1833,54751+3])
                Pstr_module
                "Precedence" (lib/grammarFunctor.ml[1737,52130+7]..[1737,52130+17])
                  module_expr (lib/grammarFunctor.ml[1737,52130+20]..[1833,54751+3])
                    Pmod_structure
                    [
                      structure_item (lib/grammarFunctor.ml[1739,52158+2]..[1743,52231+14])
                        Pstr_type Rec
                        [
                          type_declaration "choice" (lib/grammarFunctor.ml[1739,52158+7]..[1739,52158+13]) (lib/grammarFunctor.ml[1739,52158+2]..[1743,52231+14])
                            ptype_params =
                              []
                            ptype_cstrs =
                              []
                            ptype_kind =
                              Ptype_variant
                                [
                                  (lib/grammarFunctor.ml[1740,52174+4]..[1740,52174+17])
                                    "ChooseShift" (lib/grammarFunctor.ml[1740,52174+6]..[1740,52174+17])
                                    []
                                    None
                                  (lib/grammarFunctor.ml[1741,52192+4]..[1741,52192+18])
                                    "ChooseReduce" (lib/grammarFunctor.ml[1741,52192+6]..[1741,52192+18])
                                    []
                                    None
                                  (lib/grammarFunctor.ml[1742,52211+4]..[1742,52211+19])
                                    "ChooseNeither" (lib/grammarFunctor.ml[1742,52211+6]..[1742,52211+19])
                                    []
                                    None
                                  (lib/grammarFunctor.ml[1743,52231+4]..[1743,52231+14])
                                    "DontKnow" (lib/grammarFunctor.ml[1743,52231+6]..[1743,52231+14])
                                    []
                                    None
                                ]
                            ptype_private = Public
                            ptype_manifest =
                              None
                        ]
                      structure_item (lib/grammarFunctor.ml[1745,52247+2]..[1745,52247+32])
                        Pstr_type Rec
                        [
                          type_declaration "order" (lib/grammarFunctor.ml[1745,52247+7]..[1745,52247+12]) (lib/grammarFunctor.ml[1745,52247+2]..[1745,52247+32])
                            ptype_params =
                              []
                            ptype_cstrs =
                              []
                            ptype_kind =
                              Ptype_variant
                                [
                                  (lib/grammarFunctor.ml[1745,52247+15]..[1745,52247+17])
                                    "Lt" (lib/grammarFunctor.ml[1745,52247+15]..[1745,52247+17])
                                    []
                                    None
                                  (lib/grammarFunctor.ml[1745,52247+18]..[1745,52247+22])
                                    "Gt" (lib/grammarFunctor.ml[1745,52247+20]..[1745,52247+22])
                                    []
                                    None
                                  (lib/grammarFunctor.ml[1745,52247+23]..[1745,52247+27])
                                    "Eq" (lib/grammarFunctor.ml[1745,52247+25]..[1745,52247+27])
                                    []
                                    None
                                  (lib/grammarFunctor.ml[1745,52247+28]..[1745,52247+32])
                                    "Ic" (lib/grammarFunctor.ml[1745,52247+30]..[1745,52247+32])
                                    []
                                    None
                                ]
                            ptype_private = Public
                            ptype_manifest =
                              None
                        ]
                      structure_item (lib/grammarFunctor.ml[1747,52281+2]..[1761,52684+16])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1747,52281+6]..[1747,52281+22])
                              Ppat_var "precedence_order" (lib/grammarFunctor.ml[1747,52281+6]..[1747,52281+22])
                            expression (lib/grammarFunctor.ml[1747,52281+23]..[1761,52684+16]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[1747,52281+23]..[1747,52281+25])
                                Ppat_var "p1" (lib/grammarFunctor.ml[1747,52281+23]..[1747,52281+25])
                              expression (lib/grammarFunctor.ml[1747,52281+26]..[1761,52684+16]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1747,52281+26]..[1747,52281+28])
                                  Ppat_var "p2" (lib/grammarFunctor.ml[1747,52281+26]..[1747,52281+28])
                                expression (lib/grammarFunctor.ml[1748,52312+4]..[1761,52684+16])
                                  Pexp_match
                                  expression (lib/grammarFunctor.ml[1748,52312+10]..[1748,52312+16])
                                    Pexp_tuple
                                    [
                                      expression (lib/grammarFunctor.ml[1748,52312+10]..[1748,52312+12])
                                        Pexp_ident "p1" (lib/grammarFunctor.ml[1748,52312+10]..[1748,52312+12])
                                      expression (lib/grammarFunctor.ml[1748,52312+14]..[1748,52312+16])
                                        Pexp_ident "p2" (lib/grammarFunctor.ml[1748,52312+14]..[1748,52312+16])
                                    ]
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1749,52334+8]..[1750,52365+30])
                                        Ppat_or
                                        pattern (lib/grammarFunctor.ml[1749,52334+8]..[1749,52334+30])
                                          Ppat_tuple
                                          [
                                            pattern (lib/grammarFunctor.ml[1749,52334+8]..[1749,52334+27])
                                              Ppat_construct "UndefinedPrecedence" (lib/grammarFunctor.ml[1749,52334+8]..[1749,52334+27])
                                              None
                                            pattern (lib/grammarFunctor.ml[1749,52334+29]..[1749,52334+30])
                                              Ppat_any
                                          ]
                                        pattern (lib/grammarFunctor.ml[1750,52365+8]..[1750,52365+30])
                                          Ppat_tuple
                                          [
                                            pattern (lib/grammarFunctor.ml[1750,52365+8]..[1750,52365+9])
                                              Ppat_any
                                            pattern (lib/grammarFunctor.ml[1750,52365+11]..[1750,52365+30])
                                              Ppat_construct "UndefinedPrecedence" (lib/grammarFunctor.ml[1750,52365+11]..[1750,52365+30])
                                              None
                                          ]
                                      expression (lib/grammarFunctor.ml[1751,52399+10]..[1751,52399+12])
                                        Pexp_construct "Ic" (lib/grammarFunctor.ml[1751,52399+10]..[1751,52399+12])
                                        None
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1752,52412+8]..[1752,52412+70])
                                        Ppat_tuple
                                        [
                                          pattern (lib/grammarFunctor.ml[1752,52412+8]..[1752,52412+38])
                                            Ppat_construct "PrecedenceLevel" (lib/grammarFunctor.ml[1752,52412+8]..[1752,52412+23])
                                            Some
                                              []
                                              pattern (lib/grammarFunctor.ml[1752,52412+24]..[1752,52412+38])
                                                Ppat_tuple
                                                [
                                                  pattern (lib/grammarFunctor.ml[1752,52412+25]..[1752,52412+27])
                                                    Ppat_var "m1" (lib/grammarFunctor.ml[1752,52412+25]..[1752,52412+27])
                                                  pattern (lib/grammarFunctor.ml[1752,52412+29]..[1752,52412+31])
                                                    Ppat_var "l1" (lib/grammarFunctor.ml[1752,52412+29]..[1752,52412+31])
                                                  pattern (lib/grammarFunctor.ml[1752,52412+33]..[1752,52412+34])
                                                    Ppat_any
                                                  pattern (lib/grammarFunctor.ml[1752,52412+36]..[1752,52412+37])
                                                    Ppat_any
                                                ]
                                          pattern (lib/grammarFunctor.ml[1752,52412+40]..[1752,52412+70])
                                            Ppat_construct "PrecedenceLevel" (lib/grammarFunctor.ml[1752,52412+40]..[1752,52412+55])
                                            Some
                                              []
                                              pattern (lib/grammarFunctor.ml[1752,52412+56]..[1752,52412+70])
                                                Ppat_tuple
                                                [
                                                  pattern (lib/grammarFunctor.ml[1752,52412+57]..[1752,52412+59])
                                                    Ppat_var "m2" (lib/grammarFunctor.ml[1752,52412+57]..[1752,52412+59])
                                                  pattern (lib/grammarFunctor.ml[1752,52412+61]..[1752,52412+63])
                                                    Ppat_var "l2" (lib/grammarFunctor.ml[1752,52412+61]..[1752,52412+63])
                                                  pattern (lib/grammarFunctor.ml[1752,52412+65]..[1752,52412+66])
                                                    Ppat_any
                                                  pattern (lib/grammarFunctor.ml[1752,52412+68]..[1752,52412+69])
                                                    Ppat_any
                                                ]
                                        ]
                                      expression (lib/grammarFunctor.ml[1753,52486+10]..[1761,52684+16])
                                        Pexp_ifthenelse
                                        expression (lib/grammarFunctor.ml[1753,52486+13]..[1753,52486+50])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[1753,52486+13]..[1753,52486+16])
                                            Pexp_ident "not" (lib/grammarFunctor.ml[1753,52486+13]..[1753,52486+16])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[1753,52486+17]..[1753,52486+50])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[1753,52486+18]..[1753,52486+43])
                                                  Pexp_ident "InputFile.same_input_file" (lib/grammarFunctor.ml[1753,52486+18]..[1753,52486+43])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[1753,52486+44]..[1753,52486+46])
                                                      Pexp_ident "m1" (lib/grammarFunctor.ml[1753,52486+44]..[1753,52486+46])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[1753,52486+47]..[1753,52486+49])
                                                      Pexp_ident "m2" (lib/grammarFunctor.ml[1753,52486+47]..[1753,52486+49])
                                                ]
                                          ]
                                        expression (lib/grammarFunctor.ml[1754,52542+12]..[1754,52542+14])
                                          Pexp_construct "Ic" (lib/grammarFunctor.ml[1754,52542+12]..[1754,52542+14])
                                          None
                                        Some
                                          expression (lib/grammarFunctor.ml[1756,52572+12]..[1761,52684+16])
                                            Pexp_ifthenelse
                                            expression (lib/grammarFunctor.ml[1756,52572+15]..[1756,52572+22])
                                              Pexp_apply
                                              expression (lib/grammarFunctor.ml[1756,52572+18]..[1756,52572+19])
                                                Pexp_ident ">" (lib/grammarFunctor.ml[1756,52572+18]..[1756,52572+19])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[1756,52572+15]..[1756,52572+17])
                                                    Pexp_ident "l1" (lib/grammarFunctor.ml[1756,52572+15]..[1756,52572+17])
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[1756,52572+20]..[1756,52572+22])
                                                    Pexp_ident "l2" (lib/grammarFunctor.ml[1756,52572+20]..[1756,52572+22])
                                              ]
                                            expression (lib/grammarFunctor.ml[1757,52600+14]..[1757,52600+16])
                                              Pexp_construct "Gt" (lib/grammarFunctor.ml[1757,52600+14]..[1757,52600+16])
                                              None
                                            Some
                                              expression (lib/grammarFunctor.ml[1758,52617+17]..[1761,52684+16])
                                                Pexp_ifthenelse
                                                expression (lib/grammarFunctor.ml[1758,52617+20]..[1758,52617+27])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[1758,52617+23]..[1758,52617+24])
                                                    Pexp_ident "<" (lib/grammarFunctor.ml[1758,52617+23]..[1758,52617+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[1758,52617+20]..[1758,52617+22])
                                                        Pexp_ident "l1" (lib/grammarFunctor.ml[1758,52617+20]..[1758,52617+22])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[1758,52617+25]..[1758,52617+27])
                                                        Pexp_ident "l2" (lib/grammarFunctor.ml[1758,52617+25]..[1758,52617+27])
                                                  ]
                                                expression (lib/grammarFunctor.ml[1759,52650+14]..[1759,52650+16])
                                                  Pexp_construct "Lt" (lib/grammarFunctor.ml[1759,52650+14]..[1759,52650+16])
                                                  None
                                                Some
                                                  expression (lib/grammarFunctor.ml[1761,52684+14]..[1761,52684+16])
                                                    Pexp_construct "Eq" (lib/grammarFunctor.ml[1761,52684+14]..[1761,52684+16])
                                                    None
                                  ]
                        ]
                      structure_item (lib/grammarFunctor.ml[1763,52702+2]..[1774,53015+16])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1763,52702+6]..[1763,52702+22])
                              Ppat_var "production_order" (lib/grammarFunctor.ml[1763,52702+6]..[1763,52702+22])
                            expression (lib/grammarFunctor.ml[1763,52702+23]..[1774,53015+16]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[1763,52702+23]..[1763,52702+25])
                                Ppat_var "p1" (lib/grammarFunctor.ml[1763,52702+23]..[1763,52702+25])
                              expression (lib/grammarFunctor.ml[1763,52702+26]..[1774,53015+16]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1763,52702+26]..[1763,52702+28])
                                  Ppat_var "p2" (lib/grammarFunctor.ml[1763,52702+26]..[1763,52702+28])
                                expression (lib/grammarFunctor.ml[1764,52733+4]..[1774,53015+16])
                                  Pexp_match
                                  expression (lib/grammarFunctor.ml[1764,52733+10]..[1764,52733+16])
                                    Pexp_tuple
                                    [
                                      expression (lib/grammarFunctor.ml[1764,52733+10]..[1764,52733+12])
                                        Pexp_ident "p1" (lib/grammarFunctor.ml[1764,52733+10]..[1764,52733+12])
                                      expression (lib/grammarFunctor.ml[1764,52733+14]..[1764,52733+16])
                                        Pexp_ident "p2" (lib/grammarFunctor.ml[1764,52733+14]..[1764,52733+16])
                                    ]
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1765,52755+8]..[1765,52755+58])
                                        Ppat_tuple
                                        [
                                          pattern (lib/grammarFunctor.ml[1765,52755+8]..[1765,52755+32])
                                            Ppat_construct "ProductionLevel" (lib/grammarFunctor.ml[1765,52755+8]..[1765,52755+23])
                                            Some
                                              []
                                              pattern (lib/grammarFunctor.ml[1765,52755+24]..[1765,52755+32])
                                                Ppat_tuple
                                                [
                                                  pattern (lib/grammarFunctor.ml[1765,52755+25]..[1765,52755+27])
                                                    Ppat_var "m1" (lib/grammarFunctor.ml[1765,52755+25]..[1765,52755+27])
                                                  pattern (lib/grammarFunctor.ml[1765,52755+29]..[1765,52755+31])
                                                    Ppat_var "l1" (lib/grammarFunctor.ml[1765,52755+29]..[1765,52755+31])
                                                ]
                                          pattern (lib/grammarFunctor.ml[1765,52755+34]..[1765,52755+58])
                                            Ppat_construct "ProductionLevel" (lib/grammarFunctor.ml[1765,52755+34]..[1765,52755+49])
                                            Some
                                              []
                                              pattern (lib/grammarFunctor.ml[1765,52755+50]..[1765,52755+58])
                                                Ppat_tuple
                                                [
                                                  pattern (lib/grammarFunctor.ml[1765,52755+51]..[1765,52755+53])
                                                    Ppat_var "m2" (lib/grammarFunctor.ml[1765,52755+51]..[1765,52755+53])
                                                  pattern (lib/grammarFunctor.ml[1765,52755+55]..[1765,52755+57])
                                                    Ppat_var "l2" (lib/grammarFunctor.ml[1765,52755+55]..[1765,52755+57])
                                                ]
                                        ]
                                      expression (lib/grammarFunctor.ml[1766,52817+10]..[1774,53015+16])
                                        Pexp_ifthenelse
                                        expression (lib/grammarFunctor.ml[1766,52817+13]..[1766,52817+50])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[1766,52817+13]..[1766,52817+16])
                                            Pexp_ident "not" (lib/grammarFunctor.ml[1766,52817+13]..[1766,52817+16])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[1766,52817+17]..[1766,52817+50])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[1766,52817+18]..[1766,52817+43])
                                                  Pexp_ident "InputFile.same_input_file" (lib/grammarFunctor.ml[1766,52817+18]..[1766,52817+43])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[1766,52817+44]..[1766,52817+46])
                                                      Pexp_ident "m1" (lib/grammarFunctor.ml[1766,52817+44]..[1766,52817+46])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[1766,52817+47]..[1766,52817+49])
                                                      Pexp_ident "m2" (lib/grammarFunctor.ml[1766,52817+47]..[1766,52817+49])
                                                ]
                                          ]
                                        expression (lib/grammarFunctor.ml[1767,52873+12]..[1767,52873+14])
                                          Pexp_construct "Ic" (lib/grammarFunctor.ml[1767,52873+12]..[1767,52873+14])
                                          None
                                        Some
                                          expression (lib/grammarFunctor.ml[1769,52903+12]..[1774,53015+16])
                                            Pexp_ifthenelse
                                            expression (lib/grammarFunctor.ml[1769,52903+15]..[1769,52903+22])
                                              Pexp_apply
                                              expression (lib/grammarFunctor.ml[1769,52903+18]..[1769,52903+19])
                                                Pexp_ident ">" (lib/grammarFunctor.ml[1769,52903+18]..[1769,52903+19])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[1769,52903+15]..[1769,52903+17])
                                                    Pexp_ident "l1" (lib/grammarFunctor.ml[1769,52903+15]..[1769,52903+17])
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[1769,52903+20]..[1769,52903+22])
                                                    Pexp_ident "l2" (lib/grammarFunctor.ml[1769,52903+20]..[1769,52903+22])
                                              ]
                                            expression (lib/grammarFunctor.ml[1770,52931+14]..[1770,52931+16])
                                              Pexp_construct "Gt" (lib/grammarFunctor.ml[1770,52931+14]..[1770,52931+16])
                                              None
                                            Some
                                              expression (lib/grammarFunctor.ml[1771,52948+17]..[1774,53015+16])
                                                Pexp_ifthenelse
                                                expression (lib/grammarFunctor.ml[1771,52948+20]..[1771,52948+27])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[1771,52948+23]..[1771,52948+24])
                                                    Pexp_ident "<" (lib/grammarFunctor.ml[1771,52948+23]..[1771,52948+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[1771,52948+20]..[1771,52948+22])
                                                        Pexp_ident "l1" (lib/grammarFunctor.ml[1771,52948+20]..[1771,52948+22])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[1771,52948+25]..[1771,52948+27])
                                                        Pexp_ident "l2" (lib/grammarFunctor.ml[1771,52948+25]..[1771,52948+27])
                                                  ]
                                                expression (lib/grammarFunctor.ml[1772,52981+14]..[1772,52981+16])
                                                  Pexp_construct "Lt" (lib/grammarFunctor.ml[1772,52981+14]..[1772,52981+16])
                                                  None
                                                Some
                                                  expression (lib/grammarFunctor.ml[1774,53015+14]..[1774,53015+16])
                                                    Pexp_construct "Eq" (lib/grammarFunctor.ml[1774,53015+14]..[1774,53015+16])
                                                    None
                                  ]
                        ]
                      structure_item (lib/grammarFunctor.ml[1776,53033+2]..[1813,54142+23])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1776,53033+6]..[1776,53033+18])
                              Ppat_var "shift_reduce" (lib/grammarFunctor.ml[1776,53033+6]..[1776,53033+18])
                            expression (lib/grammarFunctor.ml[1776,53033+19]..[1813,54142+23]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[1776,53033+19]..[1776,53033+22])
                                Ppat_var "tok" (lib/grammarFunctor.ml[1776,53033+19]..[1776,53033+22])
                              expression (lib/grammarFunctor.ml[1776,53033+23]..[1813,54142+23]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1776,53033+23]..[1776,53033+27])
                                  Ppat_var "prod" (lib/grammarFunctor.ml[1776,53033+23]..[1776,53033+27])
                                expression (lib/grammarFunctor.ml[1777,53063+4]..[1813,54142+23])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/grammarFunctor.ml[1777,53063+8]..[1777,53063+19])
                                        Ppat_tuple
                                        [
                                          pattern (lib/grammarFunctor.ml[1777,53063+8]..[1777,53063+13])
                                            Ppat_var "fact1" (lib/grammarFunctor.ml[1777,53063+8]..[1777,53063+13])
                                          pattern (lib/grammarFunctor.ml[1777,53063+15]..[1777,53063+19])
                                            Ppat_var "tokp" (lib/grammarFunctor.ml[1777,53063+15]..[1777,53063+19])
                                        ]
                                      expression (lib/grammarFunctor.ml[1777,53063+23]..[1777,53063+52])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[1777,53063+23]..[1777,53063+48])
                                          Pexp_ident "Terminal.precedence_level" (lib/grammarFunctor.ml[1777,53063+23]..[1777,53063+48])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[1777,53063+49]..[1777,53063+52])
                                              Pexp_ident "tok" (lib/grammarFunctor.ml[1777,53063+49]..[1777,53063+52])
                                        ]
                                    <def>
                                      pattern (lib/grammarFunctor.ml[1778,53116+8]..[1778,53116+20])
                                        Ppat_tuple
                                        [
                                          pattern (lib/grammarFunctor.ml[1778,53116+8]..[1778,53116+13])
                                            Ppat_var "fact2" (lib/grammarFunctor.ml[1778,53116+8]..[1778,53116+13])
                                          pattern (lib/grammarFunctor.ml[1778,53116+15]..[1778,53116+20])
                                            Ppat_var "prodp" (lib/grammarFunctor.ml[1778,53116+15]..[1778,53116+20])
                                        ]
                                      expression (lib/grammarFunctor.ml[1778,53116+23]..[1778,53116+49])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[1778,53116+23]..[1778,53116+44])
                                          Pexp_ident "Production.precedence" (lib/grammarFunctor.ml[1778,53116+23]..[1778,53116+44])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[1778,53116+45]..[1778,53116+49])
                                              Pexp_ident "prod" (lib/grammarFunctor.ml[1778,53116+45]..[1778,53116+49])
                                        ]
                                  ]
                                  expression (lib/grammarFunctor.ml[1779,53169+4]..[1813,54142+23])
                                    Pexp_match
                                    expression (lib/grammarFunctor.ml[1779,53169+10]..[1779,53169+37])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[1779,53169+10]..[1779,53169+26])
                                        Pexp_ident "precedence_order" (lib/grammarFunctor.ml[1779,53169+10]..[1779,53169+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1779,53169+27]..[1779,53169+31])
                                            Pexp_ident "tokp" (lib/grammarFunctor.ml[1779,53169+27]..[1779,53169+31])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1779,53169+32]..[1779,53169+37])
                                            Pexp_ident "prodp" (lib/grammarFunctor.ml[1779,53169+32]..[1779,53169+37])
                                      ]
                                    [
                                      <case>
                                        pattern (lib/grammarFunctor.ml[1784,53351+6]..[1784,53351+8])
                                          Ppat_construct "Ic" (lib/grammarFunctor.ml[1784,53351+6]..[1784,53351+8])
                                          None
                                        expression (lib/grammarFunctor.ml[1785,53363+8]..[1785,53363+16])
                                          Pexp_construct "DontKnow" (lib/grammarFunctor.ml[1785,53363+8]..[1785,53363+16])
                                          None
                                      <case>
                                        pattern (lib/grammarFunctor.ml[1790,53482+6]..[1790,53482+25])
                                          Ppat_alias "c" (lib/grammarFunctor.ml[1790,53482+24]..[1790,53482+25])
                                          pattern (lib/grammarFunctor.ml[1790,53482+6]..[1790,53482+20])
                                            Ppat_or
                                            pattern (lib/grammarFunctor.ml[1790,53482+7]..[1790,53482+14])
                                              Ppat_or
                                              pattern (lib/grammarFunctor.ml[1790,53482+7]..[1790,53482+9])
                                                Ppat_construct "Eq" (lib/grammarFunctor.ml[1790,53482+7]..[1790,53482+9])
                                                None
                                              pattern (lib/grammarFunctor.ml[1790,53482+12]..[1790,53482+14])
                                                Ppat_construct "Lt" (lib/grammarFunctor.ml[1790,53482+12]..[1790,53482+14])
                                                None
                                            pattern (lib/grammarFunctor.ml[1790,53482+17]..[1790,53482+19])
                                              Ppat_construct "Gt" (lib/grammarFunctor.ml[1790,53482+17]..[1790,53482+19])
                                              None
                                        expression (lib/grammarFunctor.ml[1791,53511+8]..[1813,54142+23])
                                          Pexp_sequence
                                          expression (lib/grammarFunctor.ml[1791,53511+8]..[1791,53511+24])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[1791,53511+8]..[1791,53511+18])
                                              Pexp_ident "Lazy.force" (lib/grammarFunctor.ml[1791,53511+8]..[1791,53511+18])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1791,53511+19]..[1791,53511+24])
                                                  Pexp_ident "fact1" (lib/grammarFunctor.ml[1791,53511+19]..[1791,53511+24])
                                            ]
                                          expression (lib/grammarFunctor.ml[1792,53537+8]..[1813,54142+23])
                                            Pexp_sequence
                                            expression (lib/grammarFunctor.ml[1792,53537+8]..[1792,53537+24])
                                              Pexp_apply
                                              expression (lib/grammarFunctor.ml[1792,53537+8]..[1792,53537+18])
                                                Pexp_ident "Lazy.force" (lib/grammarFunctor.ml[1792,53537+8]..[1792,53537+18])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/grammarFunctor.ml[1792,53537+19]..[1792,53537+24])
                                                    Pexp_ident "fact2" (lib/grammarFunctor.ml[1792,53537+19]..[1792,53537+24])
                                              ]
                                            expression (lib/grammarFunctor.ml[1793,53563+8]..[1813,54142+23])
                                              Pexp_match
                                              expression (lib/grammarFunctor.ml[1793,53563+14]..[1793,53563+15])
                                                Pexp_ident "c" (lib/grammarFunctor.ml[1793,53563+14]..[1793,53563+15])
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[1795,53585+10]..[1795,53585+12])
                                                    Ppat_construct "Ic" (lib/grammarFunctor.ml[1795,53585+10]..[1795,53585+12])
                                                    None
                                                  expression (lib/grammarFunctor.ml[1796,53601+12]..[1796,53601+24])
                                                    Pexp_assert
                                                    expression (lib/grammarFunctor.ml[1796,53601+19]..[1796,53601+24])
                                                      Pexp_construct "false" (lib/grammarFunctor.ml[1796,53601+19]..[1796,53601+24])
                                                      None
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[1798,53652+10]..[1798,53652+12])
                                                    Ppat_construct "Eq" (lib/grammarFunctor.ml[1798,53652+10]..[1798,53652+12])
                                                    None
                                                  expression (lib/grammarFunctor.ml[1799,53668+12]..[1807,54067+15])
                                                    Pexp_match
                                                    expression (lib/grammarFunctor.ml[1800,53686+20]..[1800,53686+46])
                                                      Pexp_apply
                                                      expression (lib/grammarFunctor.ml[1800,53686+20]..[1800,53686+42])
                                                        Pexp_ident "Terminal.associativity" (lib/grammarFunctor.ml[1800,53686+20]..[1800,53686+42])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/grammarFunctor.ml[1800,53686+43]..[1800,53686+46])
                                                            Pexp_ident "tok" (lib/grammarFunctor.ml[1800,53686+43]..[1800,53686+46])
                                                      ]
                                                    [
                                                      <case>
                                                        pattern (lib/grammarFunctor.ml[1801,53738+16]..[1801,53738+25])
                                                          Ppat_construct "LeftAssoc" (lib/grammarFunctor.ml[1801,53738+16]..[1801,53738+25])
                                                          None
                                                        expression (lib/grammarFunctor.ml[1801,53738+30]..[1801,53738+42])
                                                          Pexp_construct "ChooseReduce" (lib/grammarFunctor.ml[1801,53738+30]..[1801,53738+42])
                                                          None
                                                      <case>
                                                        pattern (lib/grammarFunctor.ml[1802,53781+16]..[1802,53781+26])
                                                          Ppat_construct "RightAssoc" (lib/grammarFunctor.ml[1802,53781+16]..[1802,53781+26])
                                                          None
                                                        expression (lib/grammarFunctor.ml[1802,53781+30]..[1802,53781+41])
                                                          Pexp_construct "ChooseShift" (lib/grammarFunctor.ml[1802,53781+30]..[1802,53781+41])
                                                          None
                                                      <case>
                                                        pattern (lib/grammarFunctor.ml[1803,53823+16]..[1803,53823+24])
                                                          Ppat_construct "NonAssoc" (lib/grammarFunctor.ml[1803,53823+16]..[1803,53823+24])
                                                          None
                                                        expression (lib/grammarFunctor.ml[1803,53823+30]..[1803,53823+43])
                                                          Pexp_construct "ChooseNeither" (lib/grammarFunctor.ml[1803,53823+30]..[1803,53823+43])
                                                          None
                                                      <case>
                                                        pattern (lib/grammarFunctor.ml[1804,53867+16]..[1804,53867+17])
                                                          Ppat_any
                                                        expression (lib/grammarFunctor.ml[1804,53867+30]..[1804,53867+42])
                                                          Pexp_assert
                                                          expression (lib/grammarFunctor.ml[1804,53867+37]..[1804,53867+42])
                                                            Pexp_construct "false" (lib/grammarFunctor.ml[1804,53867+37]..[1804,53867+42])
                                                            None
                                                    ]
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[1809,54084+10]..[1809,54084+12])
                                                    Ppat_construct "Lt" (lib/grammarFunctor.ml[1809,54084+10]..[1809,54084+12])
                                                    None
                                                  expression (lib/grammarFunctor.ml[1810,54100+12]..[1810,54100+24])
                                                    Pexp_construct "ChooseReduce" (lib/grammarFunctor.ml[1810,54100+12]..[1810,54100+24])
                                                    None
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[1812,54126+10]..[1812,54126+12])
                                                    Ppat_construct "Gt" (lib/grammarFunctor.ml[1812,54126+10]..[1812,54126+12])
                                                    None
                                                  expression (lib/grammarFunctor.ml[1813,54142+12]..[1813,54142+23])
                                                    Pexp_construct "ChooseShift" (lib/grammarFunctor.ml[1813,54142+12]..[1813,54142+23])
                                                    None
                                              ]
                                    ]
                        ]
                      structure_item (lib/grammarFunctor.ml[1816,54168+2]..[1831,54737+12])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1816,54168+6]..[1816,54168+19])
                              Ppat_var "reduce_reduce" (lib/grammarFunctor.ml[1816,54168+6]..[1816,54168+19])
                            expression (lib/grammarFunctor.ml[1816,54168+20]..[1831,54737+12]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[1816,54168+20]..[1816,54168+25])
                                Ppat_var "prod1" (lib/grammarFunctor.ml[1816,54168+20]..[1816,54168+25])
                              expression (lib/grammarFunctor.ml[1816,54168+26]..[1831,54737+12]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1816,54168+26]..[1816,54168+31])
                                  Ppat_var "prod2" (lib/grammarFunctor.ml[1816,54168+26]..[1816,54168+31])
                                expression (lib/grammarFunctor.ml[1817,54202+4]..[1831,54737+12])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/grammarFunctor.ml[1817,54202+8]..[1817,54202+11])
                                        Ppat_var "pl1" (lib/grammarFunctor.ml[1817,54202+8]..[1817,54202+11])
                                      expression (lib/grammarFunctor.ml[1817,54202+14]..[1817,54202+49])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[1817,54202+14]..[1817,54202+49]) ghost
                                          Pexp_ident "Array.get" (lib/grammarFunctor.ml[1817,54202+14]..[1817,54202+49]) ghost
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[1817,54202+14]..[1817,54202+41])
                                              Pexp_ident "Production.production_level" (lib/grammarFunctor.ml[1817,54202+14]..[1817,54202+41])
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[1817,54202+43]..[1817,54202+48])
                                              Pexp_ident "prod1" (lib/grammarFunctor.ml[1817,54202+43]..[1817,54202+48])
                                        ]
                                    <def>
                                      pattern (lib/grammarFunctor.ml[1818,54252+8]..[1818,54252+11])
                                        Ppat_var "pl2" (lib/grammarFunctor.ml[1818,54252+8]..[1818,54252+11])
                                      expression (lib/grammarFunctor.ml[1818,54252+14]..[1818,54252+49])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[1818,54252+14]..[1818,54252+49]) ghost
                                          Pexp_ident "Array.get" (lib/grammarFunctor.ml[1818,54252+14]..[1818,54252+49]) ghost
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[1818,54252+14]..[1818,54252+41])
                                              Pexp_ident "Production.production_level" (lib/grammarFunctor.ml[1818,54252+14]..[1818,54252+41])
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[1818,54252+43]..[1818,54252+48])
                                              Pexp_ident "prod2" (lib/grammarFunctor.ml[1818,54252+43]..[1818,54252+48])
                                        ]
                                  ]
                                  expression (lib/grammarFunctor.ml[1819,54305+4]..[1831,54737+12])
                                    Pexp_match
                                    expression (lib/grammarFunctor.ml[1819,54305+10]..[1819,54305+34])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[1819,54305+10]..[1819,54305+26])
                                        Pexp_ident "production_order" (lib/grammarFunctor.ml[1819,54305+10]..[1819,54305+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1819,54305+27]..[1819,54305+30])
                                            Pexp_ident "pl1" (lib/grammarFunctor.ml[1819,54305+27]..[1819,54305+30])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1819,54305+31]..[1819,54305+34])
                                            Pexp_ident "pl2" (lib/grammarFunctor.ml[1819,54305+31]..[1819,54305+34])
                                      ]
                                    [
                                      <case>
                                        pattern (lib/grammarFunctor.ml[1820,54345+6]..[1820,54345+8])
                                          Ppat_construct "Lt" (lib/grammarFunctor.ml[1820,54345+6]..[1820,54345+8])
                                          None
                                        expression (lib/grammarFunctor.ml[1821,54357+8]..[1821,54357+18])
                                          Pexp_construct "Some" (lib/grammarFunctor.ml[1821,54357+8]..[1821,54357+12])
                                          Some
                                            expression (lib/grammarFunctor.ml[1821,54357+13]..[1821,54357+18])
                                              Pexp_ident "prod1" (lib/grammarFunctor.ml[1821,54357+13]..[1821,54357+18])
                                      <case>
                                        pattern (lib/grammarFunctor.ml[1822,54376+6]..[1822,54376+8])
                                          Ppat_construct "Gt" (lib/grammarFunctor.ml[1822,54376+6]..[1822,54376+8])
                                          None
                                        expression (lib/grammarFunctor.ml[1823,54388+8]..[1823,54388+18])
                                          Pexp_construct "Some" (lib/grammarFunctor.ml[1823,54388+8]..[1823,54388+12])
                                          Some
                                            expression (lib/grammarFunctor.ml[1823,54388+13]..[1823,54388+18])
                                              Pexp_ident "prod2" (lib/grammarFunctor.ml[1823,54388+13]..[1823,54388+18])
                                      <case>
                                        pattern (lib/grammarFunctor.ml[1824,54407+6]..[1824,54407+8])
                                          Ppat_construct "Eq" (lib/grammarFunctor.ml[1824,54407+6]..[1824,54407+8])
                                          None
                                        expression (lib/grammarFunctor.ml[1829,54712+8]..[1829,54712+12])
                                          Pexp_construct "None" (lib/grammarFunctor.ml[1829,54712+8]..[1829,54712+12])
                                          None
                                      <case>
                                        pattern (lib/grammarFunctor.ml[1830,54725+6]..[1830,54725+8])
                                          Ppat_construct "Ic" (lib/grammarFunctor.ml[1830,54725+6]..[1830,54725+8])
                                          None
                                        expression (lib/grammarFunctor.ml[1831,54737+8]..[1831,54737+12])
                                          Pexp_construct "None" (lib/grammarFunctor.ml[1831,54737+8]..[1831,54737+12])
                                          None
                                    ]
                        ]
                    ]
              structure_item (lib/grammarFunctor.ml[1848,55280+0]..[1911,57278+3])
                Pstr_module
                "OnErrorReduce" (lib/grammarFunctor.ml[1848,55280+7]..[1848,55280+20])
                  module_expr (lib/grammarFunctor.ml[1848,55280+23]..[1911,57278+3])
                    Pmod_structure
                    [
                      structure_item (lib/grammarFunctor.ml[1854,55521+2]..[1855,55585+27])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1854,55521+6]..[1854,55521+18])
                              Ppat_var "declarations" (lib/grammarFunctor.ml[1854,55521+6]..[1854,55521+18])
                            core_type (lib/grammarFunctor.ml[1854,55521+21]..[1854,55521+61])
                              Ptyp_constr "StringMap.t" (lib/grammarFunctor.ml[1854,55521+50]..[1854,55521+61])
                              [
                                core_type (lib/grammarFunctor.ml[1854,55521+21]..[1854,55521+49])
                                  Ptyp_constr "Syntax.on_error_reduce_level" (lib/grammarFunctor.ml[1854,55521+21]..[1854,55521+49])
                                  []
                              ]
                            expression (lib/grammarFunctor.ml[1855,55585+4]..[1855,55585+27])
                              Pexp_field
                              expression (lib/grammarFunctor.ml[1855,55585+4]..[1855,55585+11])
                                Pexp_ident "grammar" (lib/grammarFunctor.ml[1855,55585+4]..[1855,55585+11])
                              "on_error_reduce" (lib/grammarFunctor.ml[1855,55585+12]..[1855,55585+27])
                        ]
                      structure_item (lib/grammarFunctor.ml[1857,55614+2]..[1858,55658+30])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1857,55614+6]..[1857,55614+11])
                              Ppat_var "print" (lib/grammarFunctor.ml[1857,55614+6]..[1857,55614+11])
                            expression (lib/grammarFunctor.ml[1857,55614+12]..[1858,55658+30]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[1857,55614+12]..[1857,55614+32])
                                Ppat_constraint
                                pattern (lib/grammarFunctor.ml[1857,55614+13]..[1857,55614+15])
                                  Ppat_var "nt" (lib/grammarFunctor.ml[1857,55614+13]..[1857,55614+15])
                                core_type (lib/grammarFunctor.ml[1857,55614+18]..[1857,55614+31])
                                  Ptyp_constr "Nonterminal.t" (lib/grammarFunctor.ml[1857,55614+18]..[1857,55614+31])
                                  []
                              expression (lib/grammarFunctor.ml[1857,55614+33]..[1858,55658+30])
                                Pexp_constraint
                                expression (lib/grammarFunctor.ml[1858,55658+4]..[1858,55658+30])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[1858,55658+4]..[1858,55658+21])
                                    Pexp_ident "Nonterminal.print" (lib/grammarFunctor.ml[1858,55658+4]..[1858,55658+21])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[1858,55658+22]..[1858,55658+27])
                                        Pexp_construct "false" (lib/grammarFunctor.ml[1858,55658+22]..[1858,55658+27])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[1858,55658+28]..[1858,55658+30])
                                        Pexp_ident "nt" (lib/grammarFunctor.ml[1858,55658+28]..[1858,55658+30])
                                  ]
                                core_type (lib/grammarFunctor.ml[1857,55614+35]..[1857,55614+41])
                                  Ptyp_constr "string" (lib/grammarFunctor.ml[1857,55614+35]..[1857,55614+41])
                                  []
                        ]
                      structure_item (lib/grammarFunctor.ml[1860,55690+2]..[1866,55899+18])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1860,55690+6]..[1860,55690+12])
                              Ppat_var "lookup" (lib/grammarFunctor.ml[1860,55690+6]..[1860,55690+12])
                            expression (lib/grammarFunctor.ml[1860,55690+13]..[1866,55899+18]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[1860,55690+13]..[1860,55690+26])
                                Ppat_constraint
                                pattern (lib/grammarFunctor.ml[1860,55690+14]..[1860,55690+16])
                                  Ppat_var "nt" (lib/grammarFunctor.ml[1860,55690+14]..[1860,55690+16])
                                core_type (lib/grammarFunctor.ml[1860,55690+19]..[1860,55690+25])
                                  Ptyp_constr "string" (lib/grammarFunctor.ml[1860,55690+19]..[1860,55690+25])
                                  []
                              expression (lib/grammarFunctor.ml[1860,55690+27]..[1866,55899+18])
                                Pexp_constraint
                                expression (lib/grammarFunctor.ml[1861,55735+4]..[1866,55899+18])
                                  Pexp_try
                                  expression (lib/grammarFunctor.ml[1862,55743+6]..[1862,55743+27])
                                    Pexp_apply
                                    expression (lib/grammarFunctor.ml[1862,55743+6]..[1862,55743+24])
                                      Pexp_ident "Nonterminal.lookup" (lib/grammarFunctor.ml[1862,55743+6]..[1862,55743+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/grammarFunctor.ml[1862,55743+25]..[1862,55743+27])
                                          Pexp_ident "nt" (lib/grammarFunctor.ml[1862,55743+25]..[1862,55743+27])
                                    ]
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1863,55771+9]..[1863,55771+18])
                                        Ppat_construct "Not_found" (lib/grammarFunctor.ml[1863,55771+9]..[1863,55771+18])
                                        None
                                      expression (lib/grammarFunctor.ml[1866,55899+6]..[1866,55899+18])
                                        Pexp_assert
                                        expression (lib/grammarFunctor.ml[1866,55899+13]..[1866,55899+18])
                                          Pexp_construct "false" (lib/grammarFunctor.ml[1866,55899+13]..[1866,55899+18])
                                          None
                                  ]
                                core_type (lib/grammarFunctor.ml[1860,55690+29]..[1860,55690+42])
                                  Ptyp_constr "Nonterminal.t" (lib/grammarFunctor.ml[1860,55690+29]..[1860,55690+42])
                                  []
                        ]
                      structure_item (lib/grammarFunctor.ml[1868,55919+2]..[1870,55974+41])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1868,55919+6]..[1868,55919+12])
                              Ppat_var "reduce" (lib/grammarFunctor.ml[1868,55919+6]..[1868,55919+12])
                            expression (lib/grammarFunctor.ml[1868,55919+13]..[1870,55974+41]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[1868,55919+13]..[1868,55919+17])
                                Ppat_var "prod" (lib/grammarFunctor.ml[1868,55919+13]..[1868,55919+17])
                              expression (lib/grammarFunctor.ml[1869,55939+4]..[1870,55974+41])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/grammarFunctor.ml[1869,55939+8]..[1869,55939+10])
                                      Ppat_var "nt" (lib/grammarFunctor.ml[1869,55939+8]..[1869,55939+10])
                                    expression (lib/grammarFunctor.ml[1869,55939+13]..[1869,55939+31])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[1869,55939+13]..[1869,55939+26])
                                        Pexp_ident "Production.nt" (lib/grammarFunctor.ml[1869,55939+13]..[1869,55939+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1869,55939+27]..[1869,55939+31])
                                            Pexp_ident "prod" (lib/grammarFunctor.ml[1869,55939+27]..[1869,55939+31])
                                      ]
                                ]
                                expression (lib/grammarFunctor.ml[1870,55974+4]..[1870,55974+41])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[1870,55974+4]..[1870,55974+17])
                                    Pexp_ident "StringMap.mem" (lib/grammarFunctor.ml[1870,55974+4]..[1870,55974+17])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[1870,55974+18]..[1870,55974+28])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[1870,55974+19]..[1870,55974+24])
                                          Pexp_ident "print" (lib/grammarFunctor.ml[1870,55974+19]..[1870,55974+24])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[1870,55974+25]..[1870,55974+27])
                                              Pexp_ident "nt" (lib/grammarFunctor.ml[1870,55974+25]..[1870,55974+27])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[1870,55974+29]..[1870,55974+41])
                                        Pexp_ident "declarations" (lib/grammarFunctor.ml[1870,55974+29]..[1870,55974+41])
                                  ]
                        ]
                      structure_item (lib/grammarFunctor.ml[1872,56017+2]..[1875,56088+18])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1872,56017+6]..[1872,56017+10])
                              Ppat_var "iter" (lib/grammarFunctor.ml[1872,56017+6]..[1872,56017+10])
                            expression (lib/grammarFunctor.ml[1872,56017+11]..[1875,56088+18]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[1872,56017+11]..[1872,56017+12])
                                Ppat_var "f" (lib/grammarFunctor.ml[1872,56017+11]..[1872,56017+12])
                              expression (lib/grammarFunctor.ml[1873,56032+4]..[1875,56088+18])
                                Pexp_apply
                                expression (lib/grammarFunctor.ml[1873,56032+4]..[1873,56032+18])
                                  Pexp_ident "StringMap.iter" (lib/grammarFunctor.ml[1873,56032+4]..[1873,56032+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[1873,56032+19]..[1875,56088+5])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lib/grammarFunctor.ml[1873,56032+24]..[1873,56032+26])
                                        Ppat_var "nt" (lib/grammarFunctor.ml[1873,56032+24]..[1873,56032+26])
                                      expression (lib/grammarFunctor.ml[1873,56032+27]..[1874,56068+19]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lib/grammarFunctor.ml[1873,56032+27]..[1873,56032+32])
                                          Ppat_var "_prec" (lib/grammarFunctor.ml[1873,56032+27]..[1873,56032+32])
                                        expression (lib/grammarFunctor.ml[1874,56068+6]..[1874,56068+19])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[1874,56068+6]..[1874,56068+7])
                                            Pexp_ident "f" (lib/grammarFunctor.ml[1874,56068+6]..[1874,56068+7])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[1874,56068+8]..[1874,56068+19])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[1874,56068+9]..[1874,56068+15])
                                                  Pexp_ident "lookup" (lib/grammarFunctor.ml[1874,56068+9]..[1874,56068+15])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[1874,56068+16]..[1874,56068+18])
                                                      Pexp_ident "nt" (lib/grammarFunctor.ml[1874,56068+16]..[1874,56068+18])
                                                ]
                                          ]
                                  <arg>
                                  Nolabel
                                    expression (lib/grammarFunctor.ml[1875,56088+6]..[1875,56088+18])
                                      Pexp_ident "declarations" (lib/grammarFunctor.ml[1875,56088+6]..[1875,56088+18])
                                ]
                        ]
                      structure_item (lib/grammarFunctor.ml[1877,56108+2]..[1877,56108+17])
                        Pstr_open Fresh
                        module_expr (lib/grammarFunctor.ml[1877,56108+7]..[1877,56108+17])
                          Pmod_ident "Precedence" (lib/grammarFunctor.ml[1877,56108+7]..[1877,56108+17])
                      structure_item (lib/grammarFunctor.ml[1879,56127+2]..[1909,57263+13])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1879,56127+6]..[1879,56127+16])
                              Ppat_var "preferable" (lib/grammarFunctor.ml[1879,56127+6]..[1879,56127+16])
                            expression (lib/grammarFunctor.ml[1879,56127+17]..[1909,57263+13]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[1879,56127+17]..[1879,56127+22])
                                Ppat_var "prod1" (lib/grammarFunctor.ml[1879,56127+17]..[1879,56127+22])
                              expression (lib/grammarFunctor.ml[1879,56127+23]..[1909,57263+13]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1879,56127+23]..[1879,56127+28])
                                  Ppat_var "prod2" (lib/grammarFunctor.ml[1879,56127+23]..[1879,56127+28])
                                expression (lib/grammarFunctor.ml[1881,56228+4]..[1909,57263+13])
                                  Pexp_sequence
                                  expression (lib/grammarFunctor.ml[1881,56228+4]..[1881,56228+27])
                                    Pexp_assert
                                    expression (lib/grammarFunctor.ml[1881,56228+11]..[1881,56228+27])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[1881,56228+18]..[1881,56228+20])
                                        Pexp_ident "<>" (lib/grammarFunctor.ml[1881,56228+18]..[1881,56228+20])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1881,56228+12]..[1881,56228+17])
                                            Pexp_ident "prod1" (lib/grammarFunctor.ml[1881,56228+12]..[1881,56228+17])
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1881,56228+21]..[1881,56228+26])
                                            Pexp_ident "prod2" (lib/grammarFunctor.ml[1881,56228+21]..[1881,56228+26])
                                      ]
                                  expression (lib/grammarFunctor.ml[1882,56257+4]..[1909,57263+13])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/grammarFunctor.ml[1882,56257+8]..[1882,56257+11])
                                          Ppat_var "nt1" (lib/grammarFunctor.ml[1882,56257+8]..[1882,56257+11])
                                        expression (lib/grammarFunctor.ml[1882,56257+14]..[1882,56257+33])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[1882,56257+14]..[1882,56257+27])
                                            Pexp_ident "Production.nt" (lib/grammarFunctor.ml[1882,56257+14]..[1882,56257+27])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[1882,56257+28]..[1882,56257+33])
                                                Pexp_ident "prod1" (lib/grammarFunctor.ml[1882,56257+28]..[1882,56257+33])
                                          ]
                                      <def>
                                        pattern (lib/grammarFunctor.ml[1883,56291+8]..[1883,56291+11])
                                          Ppat_var "nt2" (lib/grammarFunctor.ml[1883,56291+8]..[1883,56291+11])
                                        expression (lib/grammarFunctor.ml[1883,56291+14]..[1883,56291+33])
                                          Pexp_apply
                                          expression (lib/grammarFunctor.ml[1883,56291+14]..[1883,56291+27])
                                            Pexp_ident "Production.nt" (lib/grammarFunctor.ml[1883,56291+14]..[1883,56291+27])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/grammarFunctor.ml[1883,56291+28]..[1883,56291+33])
                                                Pexp_ident "prod2" (lib/grammarFunctor.ml[1883,56291+28]..[1883,56291+33])
                                          ]
                                    ]
                                    expression (lib/grammarFunctor.ml[1886,56441+4]..[1909,57263+13])
                                      Pexp_apply
                                      expression (lib/grammarFunctor.ml[1886,56441+15]..[1886,56441+17])
                                        Pexp_ident "&&" (lib/grammarFunctor.ml[1886,56441+15]..[1886,56441+17])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1886,56441+4]..[1886,56441+14])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[1886,56441+8]..[1886,56441+10])
                                              Pexp_ident "<>" (lib/grammarFunctor.ml[1886,56441+8]..[1886,56441+10])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1886,56441+4]..[1886,56441+7])
                                                  Pexp_ident "nt1" (lib/grammarFunctor.ml[1886,56441+4]..[1886,56441+7])
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1886,56441+11]..[1886,56441+14])
                                                  Pexp_ident "nt2" (lib/grammarFunctor.ml[1886,56441+11]..[1886,56441+14])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/grammarFunctor.ml[1889,56556+4]..[1909,57263+13])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lib/grammarFunctor.ml[1889,56556+8]..[1889,56556+20])
                                                  Ppat_tuple
                                                  [
                                                    pattern (lib/grammarFunctor.ml[1889,56556+8]..[1889,56556+13])
                                                      Ppat_var "prec1" (lib/grammarFunctor.ml[1889,56556+8]..[1889,56556+13])
                                                    pattern (lib/grammarFunctor.ml[1889,56556+15]..[1889,56556+20])
                                                      Ppat_var "prec2" (lib/grammarFunctor.ml[1889,56556+15]..[1889,56556+20])
                                                  ]
                                                expression (lib/grammarFunctor.ml[1890,56579+6]..[1896,56841+20])
                                                  Pexp_try
                                                  expression (lib/grammarFunctor.ml[1891,56589+8]..[1892,56638+47])
                                                    Pexp_tuple
                                                    [
                                                      expression (lib/grammarFunctor.ml[1891,56589+8]..[1891,56589+47])
                                                        Pexp_apply
                                                        expression (lib/grammarFunctor.ml[1891,56589+8]..[1891,56589+22])
                                                          Pexp_ident "StringMap.find" (lib/grammarFunctor.ml[1891,56589+8]..[1891,56589+22])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/grammarFunctor.ml[1891,56589+23]..[1891,56589+34])
                                                              Pexp_apply
                                                              expression (lib/grammarFunctor.ml[1891,56589+24]..[1891,56589+29])
                                                                Pexp_ident "print" (lib/grammarFunctor.ml[1891,56589+24]..[1891,56589+29])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/grammarFunctor.ml[1891,56589+30]..[1891,56589+33])
                                                                    Pexp_ident "nt1" (lib/grammarFunctor.ml[1891,56589+30]..[1891,56589+33])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/grammarFunctor.ml[1891,56589+35]..[1891,56589+47])
                                                              Pexp_ident "declarations" (lib/grammarFunctor.ml[1891,56589+35]..[1891,56589+47])
                                                        ]
                                                      expression (lib/grammarFunctor.ml[1892,56638+8]..[1892,56638+47])
                                                        Pexp_apply
                                                        expression (lib/grammarFunctor.ml[1892,56638+8]..[1892,56638+22])
                                                          Pexp_ident "StringMap.find" (lib/grammarFunctor.ml[1892,56638+8]..[1892,56638+22])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/grammarFunctor.ml[1892,56638+23]..[1892,56638+34])
                                                              Pexp_apply
                                                              expression (lib/grammarFunctor.ml[1892,56638+24]..[1892,56638+29])
                                                                Pexp_ident "print" (lib/grammarFunctor.ml[1892,56638+24]..[1892,56638+29])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/grammarFunctor.ml[1892,56638+30]..[1892,56638+33])
                                                                    Pexp_ident "nt2" (lib/grammarFunctor.ml[1892,56638+30]..[1892,56638+33])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/grammarFunctor.ml[1892,56638+35]..[1892,56638+47])
                                                              Pexp_ident "declarations" (lib/grammarFunctor.ml[1892,56638+35]..[1892,56638+47])
                                                        ]
                                                    ]
                                                  [
                                                    <case>
                                                      pattern (lib/grammarFunctor.ml[1893,56686+11]..[1893,56686+20])
                                                        Ppat_construct "Not_found" (lib/grammarFunctor.ml[1893,56686+11]..[1893,56686+20])
                                                        None
                                                      expression (lib/grammarFunctor.ml[1896,56841+8]..[1896,56841+20])
                                                        Pexp_assert
                                                        expression (lib/grammarFunctor.ml[1896,56841+15]..[1896,56841+20])
                                                          Pexp_construct "false" (lib/grammarFunctor.ml[1896,56841+15]..[1896,56841+20])
                                                          None
                                                  ]
                                            ]
                                            expression (lib/grammarFunctor.ml[1898,56869+4]..[1909,57263+13])
                                              Pexp_match
                                              expression (lib/grammarFunctor.ml[1898,56869+10]..[1898,56869+38])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[1898,56869+10]..[1898,56869+26])
                                                  Pexp_ident "production_order" (lib/grammarFunctor.ml[1898,56869+10]..[1898,56869+26])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[1898,56869+27]..[1898,56869+32])
                                                      Pexp_ident "prec1" (lib/grammarFunctor.ml[1898,56869+27]..[1898,56869+32])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[1898,56869+33]..[1898,56869+38])
                                                      Pexp_ident "prec2" (lib/grammarFunctor.ml[1898,56869+33]..[1898,56869+38])
                                                ]
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[1899,56913+6]..[1899,56913+8])
                                                    Ppat_construct "Gt" (lib/grammarFunctor.ml[1899,56913+6]..[1899,56913+8])
                                                    None
                                                  expression (lib/grammarFunctor.ml[1903,57122+8]..[1903,57122+12])
                                                    Pexp_construct "true" (lib/grammarFunctor.ml[1903,57122+8]..[1903,57122+12])
                                                    None
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[1904,57135+6]..[1904,57135+8])
                                                    Ppat_construct "Lt" (lib/grammarFunctor.ml[1904,57135+6]..[1904,57135+8])
                                                    None
                                                  expression (lib/grammarFunctor.ml[1905,57147+8]..[1905,57147+13])
                                                    Pexp_construct "false" (lib/grammarFunctor.ml[1905,57147+8]..[1905,57147+13])
                                                    None
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[1906,57161+6]..[1907,57170+8])
                                                    Ppat_or
                                                    pattern (lib/grammarFunctor.ml[1906,57161+6]..[1906,57161+8])
                                                      Ppat_construct "Eq" (lib/grammarFunctor.ml[1906,57161+6]..[1906,57161+8])
                                                      None
                                                    pattern (lib/grammarFunctor.ml[1907,57170+6]..[1907,57170+8])
                                                      Ppat_construct "Ic" (lib/grammarFunctor.ml[1907,57170+6]..[1907,57170+8])
                                                      None
                                                  expression (lib/grammarFunctor.ml[1909,57263+8]..[1909,57263+13])
                                                    Pexp_construct "false" (lib/grammarFunctor.ml[1909,57263+8]..[1909,57263+13])
                                                    None
                                              ]
                                      ]
                        ]
                    ]
              structure_item (lib/grammarFunctor.ml[1916,57404+0]..[1950,58259+3])
                Pstr_module
                "Sentence" (lib/grammarFunctor.ml[1916,57404+7]..[1916,57404+15])
                  module_expr (lib/grammarFunctor.ml[1916,57404+18]..[1950,58259+3])
                    Pmod_structure
                    [
                      structure_item (lib/grammarFunctor.ml[1918,57430+2]..[1919,57448+42])
                        Pstr_type Rec
                        [
                          type_declaration "sentence" (lib/grammarFunctor.ml[1918,57430+7]..[1918,57430+15]) (lib/grammarFunctor.ml[1918,57430+2]..[1919,57448+42])
                            ptype_params =
                              []
                            ptype_cstrs =
                              []
                            ptype_kind =
                              Ptype_abstract
                            ptype_private = Public
                            ptype_manifest =
                              Some
                                core_type (lib/grammarFunctor.ml[1919,57448+4]..[1919,57448+42])
                                  Ptyp_tuple
                                  [
                                    core_type (lib/grammarFunctor.ml[1919,57448+4]..[1919,57448+24])
                                      Ptyp_constr "option" (lib/grammarFunctor.ml[1919,57448+18]..[1919,57448+24])
                                      [
                                        core_type (lib/grammarFunctor.ml[1919,57448+4]..[1919,57448+17])
                                          Ptyp_constr "Nonterminal.t" (lib/grammarFunctor.ml[1919,57448+4]..[1919,57448+17])
                                          []
                                      ]
                                    core_type (lib/grammarFunctor.ml[1919,57448+27]..[1919,57448+42])
                                      Ptyp_constr "list" (lib/grammarFunctor.ml[1919,57448+38]..[1919,57448+42])
                                      [
                                        core_type (lib/grammarFunctor.ml[1919,57448+27]..[1919,57448+37])
                                          Ptyp_constr "Terminal.t" (lib/grammarFunctor.ml[1919,57448+27]..[1919,57448+37])
                                          []
                                      ]
                                  ]
                        ]
                      structure_item (lib/grammarFunctor.ml[1921,57492+2]..[1921,57492+13])
                        Pstr_open Fresh
                        module_expr (lib/grammarFunctor.ml[1921,57492+7]..[1921,57492+13])
                          Pmod_ident "Printf" (lib/grammarFunctor.ml[1921,57492+7]..[1921,57492+13])
                      structure_item (lib/grammarFunctor.ml[1923,57507+2]..[1933,57854+5])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1923,57507+6]..[1923,57507+20])
                              Ppat_var "print_abstract" (lib/grammarFunctor.ml[1923,57507+6]..[1923,57507+20])
                            expression (lib/grammarFunctor.ml[1923,57507+21]..[1933,57854+5]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[1923,57507+21]..[1923,57507+37])
                                Ppat_tuple
                                [
                                  pattern (lib/grammarFunctor.ml[1923,57507+22]..[1923,57507+25])
                                    Ppat_var "nto" (lib/grammarFunctor.ml[1923,57507+22]..[1923,57507+25])
                                  pattern (lib/grammarFunctor.ml[1923,57507+27]..[1923,57507+36])
                                    Ppat_var "terminals" (lib/grammarFunctor.ml[1923,57507+27]..[1923,57507+36])
                                ]
                              expression (lib/grammarFunctor.ml[1923,57507+38]..[1933,57854+5])
                                Pexp_constraint
                                expression (lib/grammarFunctor.ml[1924,57556+4]..[1933,57854+5])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[1924,57556+4]..[1924,57556+20])
                                    Pexp_ident "Misc.with_buffer" (lib/grammarFunctor.ml[1924,57556+4]..[1924,57556+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[1924,57556+21]..[1924,57556+24])
                                        Pexp_constant PConst_int (128,None)
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[1924,57556+25]..[1933,57854+5])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lib/grammarFunctor.ml[1924,57556+30]..[1924,57556+31])
                                          Ppat_var "b" (lib/grammarFunctor.ml[1924,57556+30]..[1924,57556+31])
                                        expression (lib/grammarFunctor.ml[1925,57591+6]..[1932,57832+21])
                                          Pexp_sequence
                                          expression (lib/grammarFunctor.ml[1925,57591+6]..[1927,57674+11])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[1925,57591+6]..[1925,57591+17])
                                              Pexp_ident "Option.iter" (lib/grammarFunctor.ml[1925,57591+6]..[1925,57591+17])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1925,57591+18]..[1927,57674+7])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (lib/grammarFunctor.ml[1925,57591+23]..[1925,57591+25])
                                                    Ppat_var "nt" (lib/grammarFunctor.ml[1925,57591+23]..[1925,57591+25])
                                                  expression (lib/grammarFunctor.ml[1926,57620+8]..[1926,57620+53])
                                                    Pexp_apply
                                                    expression (lib/grammarFunctor.ml[1926,57620+8]..[1926,57620+15])
                                                      Pexp_ident "bprintf" (lib/grammarFunctor.ml[1926,57620+8]..[1926,57620+15])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[1926,57620+16]..[1926,57620+17])
                                                          Pexp_ident "b" (lib/grammarFunctor.ml[1926,57620+16]..[1926,57620+17])
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[1926,57620+18]..[1926,57620+24])
                                                          Pexp_constant PConst_string("%s: ",(lib/grammarFunctor.ml[1926,57620+19]..[1926,57620+23]),None)
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[1926,57620+25]..[1926,57620+53])
                                                          Pexp_apply
                                                          expression (lib/grammarFunctor.ml[1926,57620+26]..[1926,57620+43])
                                                            Pexp_ident "Nonterminal.print" (lib/grammarFunctor.ml[1926,57620+26]..[1926,57620+43])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/grammarFunctor.ml[1926,57620+44]..[1926,57620+49])
                                                                Pexp_construct "false" (lib/grammarFunctor.ml[1926,57620+44]..[1926,57620+49])
                                                                None
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/grammarFunctor.ml[1926,57620+50]..[1926,57620+52])
                                                                Pexp_ident "nt" (lib/grammarFunctor.ml[1926,57620+50]..[1926,57620+52])
                                                          ]
                                                    ]
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1927,57674+8]..[1927,57674+11])
                                                  Pexp_ident "nto" (lib/grammarFunctor.ml[1927,57674+8]..[1927,57674+11])
                                            ]
                                          expression (lib/grammarFunctor.ml[1928,57687+6]..[1932,57832+21])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lib/grammarFunctor.ml[1928,57687+10]..[1928,57687+19])
                                                  Ppat_var "separator" (lib/grammarFunctor.ml[1928,57687+10]..[1928,57687+19])
                                                expression (lib/grammarFunctor.ml[1928,57687+22]..[1928,57687+38])
                                                  Pexp_apply
                                                  expression (lib/grammarFunctor.ml[1928,57687+22]..[1928,57687+31])
                                                    Pexp_ident "Misc.once" (lib/grammarFunctor.ml[1928,57687+22]..[1928,57687+31])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[1928,57687+32]..[1928,57687+34])
                                                        Pexp_constant PConst_string("",(lib/grammarFunctor.ml[1928,57687+33]..[1928,57687+33]),None)
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/grammarFunctor.ml[1928,57687+35]..[1928,57687+38])
                                                        Pexp_constant PConst_string(" ",(lib/grammarFunctor.ml[1928,57687+36]..[1928,57687+37]),None)
                                                  ]
                                            ]
                                            expression (lib/grammarFunctor.ml[1929,57729+6]..[1932,57832+21])
                                              Pexp_sequence
                                              expression (lib/grammarFunctor.ml[1929,57729+6]..[1931,57813+17])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[1929,57729+6]..[1929,57729+15])
                                                  Pexp_ident "List.iter" (lib/grammarFunctor.ml[1929,57729+6]..[1929,57729+15])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[1929,57729+16]..[1931,57813+7])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (lib/grammarFunctor.ml[1929,57729+21]..[1929,57729+22])
                                                        Ppat_var "t" (lib/grammarFunctor.ml[1929,57729+21]..[1929,57729+22])
                                                      expression (lib/grammarFunctor.ml[1930,57755+8]..[1930,57755+57])
                                                        Pexp_apply
                                                        expression (lib/grammarFunctor.ml[1930,57755+8]..[1930,57755+15])
                                                          Pexp_ident "bprintf" (lib/grammarFunctor.ml[1930,57755+8]..[1930,57755+15])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/grammarFunctor.ml[1930,57755+16]..[1930,57755+17])
                                                              Pexp_ident "b" (lib/grammarFunctor.ml[1930,57755+16]..[1930,57755+17])
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/grammarFunctor.ml[1930,57755+18]..[1930,57755+24])
                                                              Pexp_constant PConst_string("%s%s",(lib/grammarFunctor.ml[1930,57755+19]..[1930,57755+23]),None)
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/grammarFunctor.ml[1930,57755+25]..[1930,57755+38])
                                                              Pexp_apply
                                                              expression (lib/grammarFunctor.ml[1930,57755+26]..[1930,57755+35])
                                                                Pexp_ident "separator" (lib/grammarFunctor.ml[1930,57755+26]..[1930,57755+35])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/grammarFunctor.ml[1930,57755+35]..[1930,57755+37])
                                                                    Pexp_construct "()" (lib/grammarFunctor.ml[1930,57755+35]..[1930,57755+37])
                                                                    None
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/grammarFunctor.ml[1930,57755+39]..[1930,57755+57])
                                                              Pexp_apply
                                                              expression (lib/grammarFunctor.ml[1930,57755+40]..[1930,57755+54])
                                                                Pexp_ident "Terminal.print" (lib/grammarFunctor.ml[1930,57755+40]..[1930,57755+54])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/grammarFunctor.ml[1930,57755+55]..[1930,57755+56])
                                                                    Pexp_ident "t" (lib/grammarFunctor.ml[1930,57755+55]..[1930,57755+56])
                                                              ]
                                                        ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[1931,57813+8]..[1931,57813+17])
                                                      Pexp_ident "terminals" (lib/grammarFunctor.ml[1931,57813+8]..[1931,57813+17])
                                                ]
                                              expression (lib/grammarFunctor.ml[1932,57832+6]..[1932,57832+20])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[1932,57832+6]..[1932,57832+13])
                                                  Pexp_ident "bprintf" (lib/grammarFunctor.ml[1932,57832+6]..[1932,57832+13])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[1932,57832+14]..[1932,57832+15])
                                                      Pexp_ident "b" (lib/grammarFunctor.ml[1932,57832+14]..[1932,57832+15])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[1932,57832+16]..[1932,57832+20])
                                                      Pexp_constant PConst_string("\n",(lib/grammarFunctor.ml[1932,57832+17]..[1932,57832+19]),None)
                                                ]
                                  ]
                                core_type (lib/grammarFunctor.ml[1923,57507+40]..[1923,57507+46])
                                  Ptyp_constr "string" (lib/grammarFunctor.ml[1923,57507+40]..[1923,57507+46])
                                  []
                        ]
                      structure_item (lib/grammarFunctor.ml[1935,57861+2]..[1941,58099+5])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1935,57861+6]..[1935,57861+20])
                              Ppat_var "print_concrete" (lib/grammarFunctor.ml[1935,57861+6]..[1935,57861+20])
                            expression (lib/grammarFunctor.ml[1935,57861+21]..[1941,58099+5]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[1935,57861+21]..[1935,57861+38])
                                Ppat_tuple
                                [
                                  pattern (lib/grammarFunctor.ml[1935,57861+22]..[1935,57861+26])
                                    Ppat_var "_nto" (lib/grammarFunctor.ml[1935,57861+22]..[1935,57861+26])
                                  pattern (lib/grammarFunctor.ml[1935,57861+28]..[1935,57861+37])
                                    Ppat_var "terminals" (lib/grammarFunctor.ml[1935,57861+28]..[1935,57861+37])
                                ]
                              expression (lib/grammarFunctor.ml[1935,57861+39]..[1941,58099+5])
                                Pexp_constraint
                                expression (lib/grammarFunctor.ml[1936,57911+4]..[1941,58099+5])
                                  Pexp_apply
                                  expression (lib/grammarFunctor.ml[1936,57911+4]..[1936,57911+20])
                                    Pexp_ident "Misc.with_buffer" (lib/grammarFunctor.ml[1936,57911+4]..[1936,57911+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[1936,57911+21]..[1936,57911+24])
                                        Pexp_constant PConst_int (128,None)
                                    <arg>
                                    Nolabel
                                      expression (lib/grammarFunctor.ml[1936,57911+25]..[1941,58099+5])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lib/grammarFunctor.ml[1936,57911+30]..[1936,57911+31])
                                          Ppat_var "b" (lib/grammarFunctor.ml[1936,57911+30]..[1936,57911+31])
                                        expression (lib/grammarFunctor.ml[1937,57946+6]..[1940,58081+17])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/grammarFunctor.ml[1937,57946+10]..[1937,57946+19])
                                                Ppat_var "separator" (lib/grammarFunctor.ml[1937,57946+10]..[1937,57946+19])
                                              expression (lib/grammarFunctor.ml[1937,57946+22]..[1937,57946+38])
                                                Pexp_apply
                                                expression (lib/grammarFunctor.ml[1937,57946+22]..[1937,57946+31])
                                                  Pexp_ident "Misc.once" (lib/grammarFunctor.ml[1937,57946+22]..[1937,57946+31])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[1937,57946+32]..[1937,57946+34])
                                                      Pexp_constant PConst_string("",(lib/grammarFunctor.ml[1937,57946+33]..[1937,57946+33]),None)
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/grammarFunctor.ml[1937,57946+35]..[1937,57946+38])
                                                      Pexp_constant PConst_string(" ",(lib/grammarFunctor.ml[1937,57946+36]..[1937,57946+37]),None)
                                                ]
                                          ]
                                          expression (lib/grammarFunctor.ml[1938,57988+6]..[1940,58081+17])
                                            Pexp_apply
                                            expression (lib/grammarFunctor.ml[1938,57988+6]..[1938,57988+15])
                                              Pexp_ident "List.iter" (lib/grammarFunctor.ml[1938,57988+6]..[1938,57988+15])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1938,57988+16]..[1940,58081+7])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (lib/grammarFunctor.ml[1938,57988+21]..[1938,57988+22])
                                                    Ppat_var "t" (lib/grammarFunctor.ml[1938,57988+21]..[1938,57988+22])
                                                  expression (lib/grammarFunctor.ml[1939,58014+8]..[1939,58014+66])
                                                    Pexp_apply
                                                    expression (lib/grammarFunctor.ml[1939,58014+8]..[1939,58014+15])
                                                      Pexp_ident "bprintf" (lib/grammarFunctor.ml[1939,58014+8]..[1939,58014+15])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[1939,58014+16]..[1939,58014+17])
                                                          Pexp_ident "b" (lib/grammarFunctor.ml[1939,58014+16]..[1939,58014+17])
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[1939,58014+18]..[1939,58014+24])
                                                          Pexp_constant PConst_string("%s%s",(lib/grammarFunctor.ml[1939,58014+19]..[1939,58014+23]),None)
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[1939,58014+25]..[1939,58014+38])
                                                          Pexp_apply
                                                          expression (lib/grammarFunctor.ml[1939,58014+26]..[1939,58014+35])
                                                            Pexp_ident "separator" (lib/grammarFunctor.ml[1939,58014+26]..[1939,58014+35])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/grammarFunctor.ml[1939,58014+35]..[1939,58014+37])
                                                                Pexp_construct "()" (lib/grammarFunctor.ml[1939,58014+35]..[1939,58014+37])
                                                                None
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/grammarFunctor.ml[1939,58014+39]..[1939,58014+66])
                                                          Pexp_apply
                                                          expression (lib/grammarFunctor.ml[1939,58014+40]..[1939,58014+63])
                                                            Pexp_ident "Terminal.print_concrete" (lib/grammarFunctor.ml[1939,58014+40]..[1939,58014+63])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/grammarFunctor.ml[1939,58014+64]..[1939,58014+65])
                                                                Pexp_ident "t" (lib/grammarFunctor.ml[1939,58014+64]..[1939,58014+65])
                                                          ]
                                                    ]
                                              <arg>
                                              Nolabel
                                                expression (lib/grammarFunctor.ml[1940,58081+8]..[1940,58081+17])
                                                  Pexp_ident "terminals" (lib/grammarFunctor.ml[1940,58081+8]..[1940,58081+17])
                                            ]
                                  ]
                                core_type (lib/grammarFunctor.ml[1935,57861+41]..[1935,57861+47])
                                  Ptyp_constr "string" (lib/grammarFunctor.ml[1935,57861+41]..[1935,57861+47])
                                  []
                        ]
                      structure_item (lib/grammarFunctor.ml[1943,58106+2]..[1948,58226+31])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lib/grammarFunctor.ml[1943,58106+6]..[1943,58106+11])
                              Ppat_var "print" (lib/grammarFunctor.ml[1943,58106+6]..[1943,58106+11])
                            expression (lib/grammarFunctor.ml[1943,58106+12]..[1948,58226+31]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lib/grammarFunctor.ml[1943,58106+12]..[1943,58106+17])
                                Ppat_var "style" (lib/grammarFunctor.ml[1943,58106+12]..[1943,58106+17])
                              expression (lib/grammarFunctor.ml[1943,58106+18]..[1948,58226+31]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lib/grammarFunctor.ml[1943,58106+18]..[1943,58106+26])
                                  Ppat_var "sentence" (lib/grammarFunctor.ml[1943,58106+18]..[1943,58106+26])
                                expression (lib/grammarFunctor.ml[1944,58135+4]..[1948,58226+31])
                                  Pexp_match
                                  expression (lib/grammarFunctor.ml[1944,58135+10]..[1944,58135+15])
                                    Pexp_ident "style" (lib/grammarFunctor.ml[1944,58135+10]..[1944,58135+15])
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1945,58156+6]..[1945,58156+15])
                                        Ppat_variant "Abstract"
                                        None
                                      expression (lib/grammarFunctor.ml[1946,58175+8]..[1946,58175+31])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[1946,58175+8]..[1946,58175+22])
                                          Pexp_ident "print_abstract" (lib/grammarFunctor.ml[1946,58175+8]..[1946,58175+22])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[1946,58175+23]..[1946,58175+31])
                                              Pexp_ident "sentence" (lib/grammarFunctor.ml[1946,58175+23]..[1946,58175+31])
                                        ]
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1947,58207+6]..[1947,58207+15])
                                        Ppat_variant "Concrete"
                                        None
                                      expression (lib/grammarFunctor.ml[1948,58226+8]..[1948,58226+31])
                                        Pexp_apply
                                        expression (lib/grammarFunctor.ml[1948,58226+8]..[1948,58226+22])
                                          Pexp_ident "print_concrete" (lib/grammarFunctor.ml[1948,58226+8]..[1948,58226+22])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/grammarFunctor.ml[1948,58226+23]..[1948,58226+31])
                                              Pexp_ident "sentence" (lib/grammarFunctor.ml[1948,58226+23]..[1948,58226+31])
                                        ]
                                  ]
                        ]
                    ]
            ]
  structure_item (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
          Ppat_construct "()" (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
          None
        expression (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
          Pexp_apply
          expression (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
            Pexp_ident "Ppx_inline_test_lib.unset_lib" (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
          [
            <arg>
            Nolabel
              expression (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost,None)
          ]
    ]
  structure_item (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
          Ppat_construct "()" (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
          None
        expression (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
          Pexp_apply
          expression (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
            Pexp_ident "Expect_test_collector.Current_file.unset" (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
          [
            <arg>
            Nolabel
              expression (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
                Pexp_construct "()" (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
                None
          ]
    ]
  structure_item (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
          Ppat_construct "()" (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
          None
        expression (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
          Pexp_apply
          expression (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
            Pexp_ident "Ppx_bench_lib.Benchmark_accumulator.Current_libname.unset" (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
          [
            <arg>
            Nolabel
              expression (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
                Pexp_construct "()" (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
                None
          ]
    ]
  structure_item (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
          Ppat_construct "()" (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
          None
        expression (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
          Pexp_apply
          expression (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
            Pexp_ident "Ppx_module_timer_runtime.record_until" (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
          [
            <arg>
            Nolabel
              expression (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
                Pexp_ident "Ppx_module_timer_runtime.__MODULE__" (lib/grammarFunctor.ml[1954,58344+3]..[1954,58344+3]) ghost
          ]
    ]
]

[@@@ocaml.ppx.context
  {
    tool_name = "ppx_driver";
    include_dirs = [];
    load_path = [];
    open_modules = [];
    for_package = None;
    debug = false;
    use_threads = false;
    use_vmthreads = false;
    recursive_types = false;
    principal = false;
    transparent_modules = false;
    unboxed_types = false;
    unsafe_string = false;
    cookies = [("inline_tests", "enabled"); ("library-name", "gbnf_parser")]
  }]
let () =
  Ppx_module_timer_runtime.record_start Ppx_module_timer_runtime.__MODULE__
let () =
  Ppx_bench_lib.Benchmark_accumulator.Current_libname.set "gbnf_parser"
let () =
  Expect_test_collector.Current_file.set
    ~absolute_filename:"lib/grammarFunctor.ml"
let () =
  Ppx_inline_test_lib.set_lib_and_partition "gbnf_parser" "grammarFunctor.ml"
open BasicSyntax
open Syntax
open Positions
module Make(G:sig val grammar : BasicSyntax.grammar val verbose : bool end)() =
  struct
    open G
    let index (strings : string list) =
      (let name = Array.of_list strings
       and (n, map) =
         List.fold_left
           (fun (n, map) -> fun s -> ((n + 1), (StringMap.add s n map)))
           (0, StringMap.empty) strings in
       (n, name, map) : (int * string array * int StringMap.t))
    module TokPrecedence =
      struct
        let ever_useful : StringSet.t ref = ref StringSet.empty
        let use id = ever_useful := (StringSet.add id (!ever_useful))
        let levelip id properties =
          ((lazy (use id)), (properties.tk_precedence))
        let leveli id =
          let properties =
            try StringMap.find id grammar.tokens
            with | Not_found -> assert false in
          levelip id properties
        let diagnostics () =
          StringMap.iter
            (fun id ->
               fun properties ->
                 if not (StringSet.mem id (!ever_useful))
                 then
                   match properties.tk_precedence with
                   | UndefinedPrecedence -> ()
                   | PrecedenceLevel (_, _, pos1, pos2) ->
                       Error.warning [Positions.import (pos1, pos2)]
                         "the precedence level assigned to %s is never useful."
                         id) grammar.tokens
      end
    module Nonterminal =
      struct
        type t = int
        let n2i i = i
        let equal (nt1 : t) (nt2 : t) = nt1 = nt2
        let compare = (-)
        let new_start_nonterminals =
          StringSet.fold (fun symbol -> fun ss -> (symbol ^ "'") :: ss)
            grammar.start_symbols []
        let original_nonterminals = nonterminals grammar
        let start = List.length new_start_nonterminals
        let ((n : int), (name : string array), (map : int StringMap.t)) =
          index (new_start_nonterminals @ original_nonterminals)
        let is_internal_start nt = nt < start
        let is_user_start nt =
          StringSet.mem (name.(nt)) grammar.start_symbols
        let print normalize nt =
          if normalize then Misc.normalize (name.(nt)) else name.(nt)
        let lookup name = StringMap.find name map
        let positions nt =
          (StringMap.find (print false nt) grammar.rules).positions
        let init f = Array.init n f
        let iter f = Misc.iteri n f
        let fold f accu = Misc.foldi n f accu
        let map f = Misc.mapi n f
        let iterx f = for nt = start to n - 1 do f nt done
        let foldx f accu = Misc.foldij start n f accu
        let ocamltype nt =
          assert (not (is_internal_start nt));
          (try Some (StringMap.find (print false nt) grammar.types)
           with | Not_found -> None)
        let ocamltype_of_start_symbol nt =
          match ocamltype nt with | Some typ -> typ | None -> assert false
        let tabulate f = Array.get (Array.init n f)
        let attributes : Syntax.attributes array = Array.make n []
        let () =
          StringMap.iter
            (fun nonterminal ->
               fun { attributes = attrs;_} ->
                 let nt = lookup nonterminal in attributes.(nt) <- attrs)
            grammar.rules
        let attributes nt = attributes.(nt)
      end
    module NonterminalMap = Patricia.Big
    module NonterminalSet = Patricia.Big.Domain
    module Terminal =
      struct
        type t = int
        let t2i i = i
        let i2t i = i
        let compare = (-)
        let equal (tok1 : t) (tok2 : t) = tok1 = tok2
        let ((n : int), (name : string array), (map : int StringMap.t)) =
          let tokens = tokens grammar in
          match tokens with
          | [] when verbose -> Error.error [] "no tokens have been declared."
          | _ -> index (("error" :: tokens) @ ["#"])
        let print tok = name.(tok)
        let lookup name = StringMap.find name map
        let sharp = lookup "#"
        let error = lookup "error"
        let pseudo tok = (tok = sharp) || (tok = error)
        let real t = (error <> t) && (t <> sharp)
        let non_error tok = tok <> error
        let token_properties =
          let not_so_dummy_properties =
            {
              tk_filename = "__primitives__";
              tk_precedence = UndefinedPrecedence;
              tk_associativity = UndefinedAssoc;
              tk_ocamltype = None;
              tk_is_declared = true;
              tk_position = Positions.dummy;
              tk_attributes = [];
              tk_alias = None
            } in
          Array.init n
            (fun tok ->
               try StringMap.find (name.(tok)) grammar.tokens
               with
               | Not_found ->
                   (assert ((tok = sharp) || (tok = error));
                    not_so_dummy_properties))
        let precedence_level tok =
          TokPrecedence.levelip (print tok) (token_properties.(tok))
        let associativity tok = (token_properties.(tok)).tk_associativity
        let ocamltype tok = (token_properties.(tok)).tk_ocamltype
        let init f = Array.init n f
        let iter f = Misc.iteri n f
        let fold f accu = Misc.foldi n f accu
        let map f = Misc.mapi n f
        let () = assert (sharp = (n - 1))
        let foldx f accu = Misc.foldi sharp f accu
        let mapx f = Misc.mapi sharp f
        let () = assert (error = 0)
        let iter_real f = for i = 1 to n - 2 do f i done
        let tokens_without_an_alias =
          let accu = ref [] in
          iter_real
            (fun tok ->
               let properties = token_properties.(tok) in
               if properties.tk_alias = None then accu := (tok :: (!accu)));
          List.rev (!accu)
        let every_token_has_an_alias = tokens_without_an_alias = []
        let alias tok = (token_properties.(tok)).tk_alias
        let unquoted_alias _ = ""
        let print_concrete _ = ""
        let eof = try Some (lookup "EOF") with | Not_found -> None
        let attributes tok = (token_properties.(tok)).tk_attributes
        module Word(X:sig  end) =
          struct
            let () = assert (n <= 256)
            let ((encode : string -> int), (decode : int -> string), verbose)
              = Misc.new_encode_decode 1024
            type word = int
            let epsilon = encode ""
            let singleton t = encode (String.make 1 (Char.chr t))
            let append i1 i2 =
              let w1 = decode i1
              and w2 = decode i2 in
              if (String.length w1) = 0
              then i2
              else if (String.length w2) = 0 then i1 else encode (w1 ^ w2)
            let length i = String.length (decode i)
            let first i z =
              let w = decode i in
              if (String.length w) > 0 then Char.code (w.[0]) else z
            let rec elements i n w =
              if i = n
              then []
              else (Char.code (w.[i])) :: (elements (i + 1) n w)
            let elements i =
              let w = decode i in elements 0 (String.length w) w
            let print i =
              let w = decode i in
              Misc.separated_iter_to_string (fun c -> print (Char.code c))
                " " (fun f -> String.iter f w)
            let compare i1 i2 = Generic.compare (decode i1) (decode i2)
          end
      end
    module TerminalSet =
      struct
        include ((BoundedBitSet.Make)(Terminal))()
        let print toks =
          Misc.separated_iter_to_string Terminal.print " "
            (fun f -> iter f toks)
        let universe =
          remove Terminal.sharp
            (remove Terminal.error (Terminal.fold add empty))
        type property = t
        let bottom = empty
        let is_maximal _ = false
        let leq_join = union
      end
    module TerminalMap = Patricia.Big
    module Symbol =
      struct
        type t =
          | N of Nonterminal.t 
          | T of Terminal.t 
        let is_terminal sym = match sym with | N _ -> false | T _ -> true
        let compare sym1 sym2 =
          match (sym1, sym2) with
          | (N nt1, N nt2) -> Nonterminal.compare nt1 nt2
          | (T tok1, T tok2) -> Terminal.compare tok1 tok2
          | (N _, T _) -> 1
          | (T _, N _) -> (-1)
        let equal sym1 sym2 = (compare sym1 sym2) = 0
        let rec lequal syms1 syms2 =
          match (syms1, syms2) with
          | ([], []) -> true
          | (sym1::syms1, sym2::syms2) ->
              (equal sym1 sym2) && (lequal syms1 syms2)
          | (_::_, []) | ([], _::_) -> false
        let non_error sym =
          match sym with | T tok -> Terminal.non_error tok | N _ -> true
        let print =
          function
          | N nt -> Nonterminal.print false nt
          | T tok -> Terminal.print tok
        let nonterminal = function | T _ -> false | N _ -> true
        let buffer = Buffer.create 1024
        let printaod offset dot symbols =
          let length = Array.length symbols in
          let first = ref true in
          let separate () =
            if not (!first) then Printf.bprintf buffer " "; first := false in
          for i = offset to length do
            (if i = dot then (separate (); Printf.bprintf buffer ".");
             if i < length
             then
               (separate (); Printf.bprintf buffer "%s" (print (symbols.(i)))))
          done;
          (let s = Buffer.contents buffer in Buffer.clear buffer; s)
        let printao offset symbols = printaod offset (-1) symbols
        let printa symbols = printao 0 symbols
        let printl symbols = printa (Array.of_list symbols)
        let lookup name =
          try T (Terminal.lookup name)
          with
          | Not_found ->
              (try N (Nonterminal.lookup name)
               with | Not_found -> assert false)
      end
    module SymbolSet =
      struct
        include (Set.Make)(Symbol)
        let print symbols = Symbol.printl (elements symbols)
        type property = t
        let bottom = empty
        let leq = subset
        let join = union
      end
    module SymbolMap =
      struct
        include (Map.Make)(Symbol)
        let domain m =
          fold (fun symbol -> fun _ -> fun accu -> symbol :: accu) m []
        let init f xs =
          List.fold_left (fun accu -> fun x -> add x (f x) accu) empty xs
        let purelynonterminal m =
          fold
            (fun symbol ->
               fun _ -> fun accu -> accu && (Symbol.nonterminal symbol)) m
            true
      end
    module Production =
      struct
        type index = int
        let compare = (-)
        let n : int =
          let n =
            StringMap.fold
              (fun _ ->
                 fun { branches;_} -> fun n -> n + (List.length branches))
              grammar.rules 0 in
          n + (StringSet.cardinal grammar.start_symbols)
        let p2i prod = prod
        let i2p prod = assert ((prod >= 0) && (prod < n)); prod
        let table : (Nonterminal.t * Symbol.t array) array =
          Array.make n ((-1), [||])
        let identifiers : identifier array array = Array.make n [||]
        let actions : action option array = Array.make n None
        let positions : Positions.t list array = Array.make n []
        let rhs_attributes : Syntax.attributes array array =
          Array.make n [||]
        let prec_decl : symbol located option array = Array.make n None
        let production_level : branch_production_level array =
          let dummy = ProductionLevel (InputFile.builtin_input_file, 0) in
          Array.make n dummy
        let ntprods : (int * int) array =
          Array.make Nonterminal.n ((-1), (-1))
        let grammar_uses_error_token = ref false
        let ((start : int), (startprods : index NonterminalMap.t)) =
          StringSet.fold
            (fun nonterminal ->
               fun (k, startprods) ->
                 let nt = Nonterminal.lookup nonterminal
                 and nt' = Nonterminal.lookup (nonterminal ^ "'") in
                 table.(k) <- (nt', [|(Symbol.N nt)|]);
                 identifiers.(k) <- [|"_1"|];
                 ntprods.(nt') <- (k, (k + 1));
                 positions.(k) <- (Nonterminal.positions nt);
                 ((k + 1), (NonterminalMap.add nt k startprods)))
            grammar.start_symbols (0, NonterminalMap.empty)
        let producer_symbol producer =
          Symbol.lookup (producer_symbol producer)
        let _ : int =
          StringMap.fold
            (fun nonterminal ->
               fun { branches;_} ->
                 fun k ->
                   let nt = Nonterminal.lookup nonterminal in
                   let k' =
                     List.fold_left
                       (fun k ->
                          fun branch ->
                            let producers = Array.of_list branch.producers in
                            let rhs = Array.map producer_symbol producers in
                            table.(k) <- (nt, rhs);
                            identifiers.(k) <-
                              (Array.map producer_identifier producers);
                            actions.(k) <- (Some (branch.action));
                            rhs_attributes.(k) <-
                              (Array.map producer_attributes producers);
                            production_level.(k) <-
                              (branch.branch_production_level);
                            prec_decl.(k) <- (branch.branch_prec_annotation);
                            positions.(k) <- [branch.branch_position];
                            if not (MArray.for_all Symbol.non_error rhs)
                            then grammar_uses_error_token := true;
                            k + 1) k branches in
                   ntprods.(nt) <- (k, k'); k') grammar.rules start
        let iternt nt f = let (k, k') = ntprods.(nt) in Misc.iterij k k' f
        let foldnt nt f accu =
          let (k, k') = ntprods.(nt) in Misc.foldij k k' f accu
        let mapnt nt f = let (k, k') = ntprods.(nt) in Misc.mapij k k' f
        let foldnt_lazy nt f accu =
          let (k, k') = ntprods.(nt) in Misc.foldij_lazy k k' f accu
        let def prod = table.(prod)
        let nt prod = let (nt, _) = table.(prod) in nt
        let rhs prod = let (_, rhs) = table.(prod) in rhs
        let length prod = Array.length (rhs prod)
        let identifiers prod = identifiers.(prod)
        let is_start prod = prod < start
        let classify prod =
          if is_start prod
          then
            match (rhs prod).(0) with
            | Symbol.N nt -> Some nt
            | Symbol.T _ -> assert false
          else None
        let action prod =
          match actions.(prod) with
          | Some action -> action
          | None -> (assert (is_start prod); assert false)
        let positions prod = positions.(prod)
        let lhs_attributes prod = Nonterminal.attributes (nt prod)
        let rhs_attributes prod = rhs_attributes.(prod)
        let startsymbol2startprod nt =
          try NonterminalMap.find nt startprods
          with | Not_found -> assert false
        let error_free prod = MArray.for_all Symbol.non_error (rhs prod)
        let init f = Array.init n f
        let iter f = Misc.iteri n f
        let fold f accu = Misc.foldi n f accu
        let map f = Misc.mapi n f
        let amap f = Array.init n f
        let iterx f = for prod = start to n - 1 do f prod done
        let foldx f accu = Misc.foldij start n f accu
        let mapx f = Misc.mapij start n f
        let print prod =
          assert (not (is_start prod));
          (let (nt, rhs) = table.(prod) in
           if (Array.length rhs) = 0
           then Printf.sprintf "%s ->" (Nonterminal.print false nt)
           else
             Printf.sprintf "%s -> %s" (Nonterminal.print false nt)
               (Symbol.printao 0 rhs))
        let describe gerund prod =
          match classify prod with
          | Some nt ->
              let ending = if gerund then "ing" else "" in
              Printf.sprintf "accept%s %s" ending
                (Nonterminal.print false nt)
          | None ->
              let ending = if gerund then "ing" else "e" in
              Printf.sprintf "reduc%s production %s" ending (print prod)
        let tabulate f = Misc.tabulate n f
        let sum f = Misc.sum n f
        let ever_useful : (Positions.t, unit) Hashtbl.t = Hashtbl.create 16
        let consult_prec_decl prod =
          let osym = prec_decl.(prod) in
          ((lazy
              (Option.iter
                 (fun sym ->
                    let pos = Positions.position sym in
                    Hashtbl.add ever_useful pos ()) osym)), osym)
        let diagnostics () =
          iterx
            (fun prod ->
               let osym = prec_decl.(prod) in
               Option.iter
                 (fun sym ->
                    let pos = Positions.position sym in
                    if not (Hashtbl.mem ever_useful pos)
                    then Hashtbl.add ever_useful pos ()) osym)
        type production_level =
          | PNone 
          | PRightmostToken of Terminal.t 
          | PPrecDecl of symbol 
        let rightmost_terminal prod =
          Array.fold_left
            (fun accu ->
               fun symbol ->
                 match symbol with
                 | Symbol.T tok -> PRightmostToken tok
                 | Symbol.N _ -> accu) PNone (rhs prod)
        let combine e1 e2 = lazy (Lazy.force e1; Lazy.force e2)
        let precedence prod =
          let (fact1, prec_decl) = consult_prec_decl prod in
          let oterminal =
            match prec_decl with
            | None -> rightmost_terminal prod
            | Some { value = terminal;_} -> PPrecDecl terminal in
          match oterminal with
          | PNone -> (fact1, UndefinedPrecedence)
          | PRightmostToken tok ->
              let (fact2, level) = Terminal.precedence_level tok in
              ((combine fact1 fact2), level)
          | PPrecDecl id ->
              let (fact2, level) = TokPrecedence.leveli id in
              ((combine fact1 fact2), level)
      end
    let grammar_uses_error_token = !Production.grammar_uses_error_token
    module ProductionMap =
      struct
        include Patricia.Big
        let start f =
          Misc.foldi Production.start
            (fun prod -> fun m -> add prod (f prod) m) empty
      end
    module GenericAnalysis(P:Fix.PROPERTY)(S:sig
                                               open P
                                               val shortcut :
                                                 Nonterminal.t ->
                                                   property option
                                               val terminal :
                                                 Terminal.t -> property
                                               val disjunction :
                                                 property ->
                                                   (unit -> property) ->
                                                     property
                                               val conjunction :
                                                 Symbol.t ->
                                                   property ->
                                                     (unit -> property) ->
                                                       property
                                               val epsilon : property
                                             end) :
      sig
        open P
        val nonterminal : Nonterminal.t -> property
        val symbol : Symbol.t -> property
        val production : Production.index -> int -> property
      end =
      struct
        open P
        let symbol sym get =
          (match sym with
           | Symbol.T tok -> S.terminal tok
           | Symbol.N nt -> get nt : property)
        let production prod i get =
          (let rhs = Production.rhs prod in
           let n = Array.length rhs in
           let rec loop i =
             if i = n
             then S.epsilon
             else
               (let sym = rhs.(i) in
                S.conjunction sym (symbol sym get) (fun () -> loop (i + 1))) in
           loop i : property)
        let nonterminal nt get =
          (match S.shortcut nt with
           | Some p -> p
           | None ->
               Production.foldnt_lazy nt
                 (fun prod ->
                    fun rest -> S.disjunction (production prod 0 get) rest)
                 P.bottom : property)
        module F =
          ((Fix.Make)((Fix.Glue.ArraysAsImperativeMaps)(Nonterminal)))(P)
        let nonterminal = F.lfp nonterminal
        let symbol sym = symbol sym nonterminal
        let production prod i = production prod i nonterminal
      end 
    module NONEMPTY =
      ((GenericAnalysis)(Fix.Prop.Boolean))(struct
                                              let shortcut _nt = None
                                              let terminal _ = true
                                              let disjunction p q =
                                                p || (q ())
                                              let conjunction _ p q =
                                                p && (q ())
                                              let epsilon = true
                                            end)
    module NULLABLE =
      ((GenericAnalysis)(Fix.Prop.Boolean))(struct
                                              let shortcut _nt = None
                                              let terminal _ = false
                                              let disjunction p q =
                                                p || (q ())
                                              let conjunction _ p q =
                                                p && (q ())
                                              let epsilon = true
                                            end)
    module FIRST =
      ((GenericAnalysis)(TerminalSet))(struct
                                         let shortcut _nt = None
                                         let terminal = TerminalSet.singleton
                                         let disjunction p q =
                                           TerminalSet.union p (q ())
                                         let conjunction symbol p q =
                                           if NULLABLE.symbol symbol
                                           then TerminalSet.union p (q ())
                                           else p
                                         let epsilon = TerminalSet.empty
                                       end)
    module MINIMAL =
      ((GenericAnalysis)(struct
                           include CompletedNatWitness
                           type property = Terminal.t t
                         end))(struct
                                 let shortcut _nt = None
                                 open CompletedNatWitness
                                 let terminal = singleton
                                 let disjunction = min_lazy
                                 let conjunction _ = add_lazy
                                 let epsilon = epsilon
                               end)
    let generates_nonempty_word symbol =
      (not (TerminalSet.is_empty (FIRST.symbol symbol)) : bool)
    module G =
      struct
        type node = Nonterminal.t
        let n = Nonterminal.n
        let index nt = nt
        let iter = Nonterminal.iter
        let labeled_successors yield nt =
          Production.iternt nt
            (fun prod ->
               let rhs = Production.rhs prod in
               Array.iteri
                 (fun i ->
                    fun symbol ->
                      match symbol with
                      | Symbol.T _ -> ()
                      | Symbol.N nt' ->
                          let gnw =
                            MArray.existsi
                              (fun j ->
                                 fun symbol ->
                                   (i <> j) &&
                                     (generates_nonempty_word symbol)) rhs in
                          yield gnw nt') rhs)
        let successors yield nt =
          labeled_successors (fun _gnw -> fun nt' -> yield nt') nt
      end
    let unbounded : bool array Lazy.t =
      lazy
        (let unbounded = Array.make Nonterminal.n false in
         let module T = (Tarjan.Run)(G) in
           G.iter
             (fun nt ->
                G.labeled_successors
                  (fun gnw ->
                     fun nt' ->
                       if
                         gnw &&
                           ((T.representative nt) = (T.representative nt'))
                       then
                         List.iter (fun nt -> unbounded.(nt) <- true)
                           (T.scc (T.representative nt))) nt);
           unbounded)
    let unbounded nt = ((Lazy.force unbounded).(nt) : bool)
    module MAXIMAL =
      ((GenericAnalysis)(NatInfinityMax))(struct
                                            open NatInfinityMax
                                            let shortcut nt =
                                              if unbounded nt
                                              then Some infinity
                                              else None
                                            let terminal _tok = finite 1
                                            let disjunction = max_lazy
                                            let conjunction _ = add_lazy
                                            let epsilon = bottom
                                          end)
    let () =
      if verbose
      then
        StringSet.iter
          (fun symbol ->
             let nt = Nonterminal.lookup symbol in
             if not (NONEMPTY.nonterminal nt)
             then
               Error.error (Nonterminal.positions nt)
                 "%s generates the empty language."
                 (Nonterminal.print false nt);
             if TerminalSet.is_empty (FIRST.nonterminal nt)
             then
               Error.error (Nonterminal.positions nt)
                 "%s generates the language {epsilon}."
                 (Nonterminal.print false nt)) grammar.start_symbols
    module FOLLOW(P:sig
                      include Fix.MINIMAL_SEMI_LATTICE
                      val bottom : property
                      val terminal : Terminal.t -> property
                      val first : Production.index -> int -> property
                    end) =
      struct
        module M = (Fix.Glue.ArraysAsImperativeMaps)(Nonterminal)
        module S = ((FixSolver.Make)(M))(P)
        let () =
          let sharp = P.terminal Terminal.sharp in
          for nt = 0 to Nonterminal.start - 1 do
            assert (Nonterminal.is_internal_start nt);
            S.record_ConVar sharp nt
          done
        let () =
          Array.iteri
            (fun prod ->
               fun (nt1, rhs) ->
                 Array.iteri
                   (fun i ->
                      fun symbol ->
                        match symbol with
                        | Symbol.T _ -> ()
                        | Symbol.N nt2 ->
                            let nullable = NULLABLE.production prod (i + 1)
                            and first = P.first prod (i + 1) in
                            (S.record_ConVar first nt2;
                             if nullable then S.record_VarVar nt1 nt2)) rhs)
            Production.table
        let follow : (Nonterminal.t -> P.property) Lazy.t =
          lazy
            (let module S = (S.Solve)() in
               fun nt -> Option.value (S.solution nt) ~default:P.bottom)
        let follow : Nonterminal.t -> P.property =
          fun nt -> (Lazy.force follow) nt
      end
    let follow : Nonterminal.t -> TerminalSet.t =
      let module F =
        (FOLLOW)(struct
                   include TerminalSet
                   let terminal = singleton
                   let first = FIRST.production
                 end) in F.follow
    let tfollow : TerminalSet.t array Lazy.t =
      lazy
        (let tfollow = Array.make Terminal.n TerminalSet.empty in
         Array.iteri
           (fun prod ->
              fun (nt1, rhs) ->
                Array.iteri
                  (fun i ->
                     fun symbol ->
                       match symbol with
                       | Symbol.N _ -> ()
                       | Symbol.T t2 ->
                           let nullable = NULLABLE.production prod (i + 1)
                           and first = FIRST.production prod (i + 1) in
                           (tfollow.(t2) <-
                              (TerminalSet.union first (tfollow.(t2)));
                            if nullable
                            then
                              tfollow.(t2) <-
                                (TerminalSet.union (follow nt1)
                                   (tfollow.(t2))))) rhs) Production.table;
         tfollow)
    let tfollow t = (Lazy.force tfollow).(t)
    let sfirst prod i =
      let rhs = Production.rhs prod in
      let n = Array.length rhs in
      let rec loop i =
        if i = n
        then SymbolSet.empty
        else
          (let sym = rhs.(i) in
           SymbolSet.union (SymbolSet.singleton sym)
             (if NULLABLE.symbol sym then loop (i + 1) else SymbolSet.empty)) in
      loop i
    let sfollow : Nonterminal.t -> SymbolSet.t =
      let module F =
        (FOLLOW)(struct
                   let bottom = SymbolSet.bottom
                   include (Fix.Glue.MinimalSemiLattice)(SymbolSet)
                   let terminal t = SymbolSet.singleton (Symbol.T t)
                   let first = sfirst
                 end) in F.follow
    type explanation =
      | EObvious 
      | EFirst of Terminal.t * Nonterminal.t 
      | ENullable of Symbol.t list * explanation 
    let explain (tok : Terminal.t) (rhs : Symbol.t array) (i : int) =
      let length = Array.length rhs in
      let rec loop i =
        assert (i < length);
        (let symbol = rhs.(i) in
         match symbol with
         | Symbol.T tok' -> (assert (Terminal.equal tok tok'); EObvious)
         | Symbol.N nt ->
             if TerminalSet.mem tok (FIRST.nonterminal nt)
             then EFirst (tok, nt)
             else
               (assert (NULLABLE.nonterminal nt);
                (match loop (i + 1) with
                 | ENullable (symbols, e) ->
                     ENullable ((symbol :: symbols), e)
                 | e -> ENullable ([symbol], e)))) in
      loop i
    let rec convert =
      function
      | EObvious -> ""
      | EFirst (tok, nt) ->
          Printf.sprintf "%s can begin with %s" (Nonterminal.print false nt)
            (Terminal.print tok)
      | ENullable (symbols, e) ->
          let e = convert e in
          Printf.sprintf "%s can vanish%s%s" (Symbol.printl symbols)
            (if e = "" then "" else " and ") e
    module Analysis =
      struct
        let nullable = NULLABLE.nonterminal
        let nullable_symbol = NULLABLE.symbol
        let first = FIRST.nonterminal
        let first_symbol = FIRST.symbol
        let nullable_first_prod prod i =
          ((NULLABLE.production prod i), (FIRST.production prod i))
        let nullable_first_prod =
          Misc.tabulate Production.n
            (fun prod ->
               Misc.tabulate ((Production.length prod) + 1)
                 (fun i -> nullable_first_prod prod i))
        let first_prod_lookahead prod i z =
          let (nullable, first) = nullable_first_prod prod i in
          if nullable then TerminalSet.add z first else first
        let explain_first_rhs (tok : Terminal.t) (rhs : Symbol.t array)
          (i : int) = convert (explain tok rhs i)
        let follow = follow
        let attributes = grammar.gr_attributes
        let minimal nt = CompletedNatWitness.to_int (MINIMAL.nonterminal nt)
        let minimal_prod prod i =
          assert ((0 <= i) && (i <= (Production.length prod)));
          CompletedNatWitness.to_int (MINIMAL.production prod i)
        let maximal nt = NatInfinityMax.to_int (MAXIMAL.nonterminal nt)
        let maximal_prod prod i =
          assert ((0 <= i) && (i <= (Production.length prod)));
          NatInfinityMax.to_int (MAXIMAL.production prod i)
      end
    module Precedence =
      struct
        type choice =
          | ChooseShift 
          | ChooseReduce 
          | ChooseNeither 
          | DontKnow 
        type order =
          | Lt 
          | Gt 
          | Eq 
          | Ic 
        let precedence_order p1 p2 =
          match (p1, p2) with
          | (UndefinedPrecedence, _) | (_, UndefinedPrecedence) -> Ic
          | (PrecedenceLevel (m1, l1, _, _), PrecedenceLevel (m2, l2, _, _))
              ->
              if not (InputFile.same_input_file m1 m2)
              then Ic
              else if l1 > l2 then Gt else if l1 < l2 then Lt else Eq
        let production_order p1 p2 =
          match (p1, p2) with
          | (ProductionLevel (m1, l1), ProductionLevel (m2, l2)) ->
              if not (InputFile.same_input_file m1 m2)
              then Ic
              else if l1 > l2 then Gt else if l1 < l2 then Lt else Eq
        let shift_reduce tok prod =
          let (fact1, tokp) = Terminal.precedence_level tok
          and (fact2, prodp) = Production.precedence prod in
          match precedence_order tokp prodp with
          | Ic -> DontKnow
          | Eq | Lt | Gt as c ->
              (Lazy.force fact1;
               Lazy.force fact2;
               (match c with
                | Ic -> assert false
                | Eq ->
                    (match Terminal.associativity tok with
                     | LeftAssoc -> ChooseReduce
                     | RightAssoc -> ChooseShift
                     | NonAssoc -> ChooseNeither
                     | _ -> assert false)
                | Lt -> ChooseReduce
                | Gt -> ChooseShift))
        let reduce_reduce prod1 prod2 =
          let pl1 = Production.production_level.(prod1)
          and pl2 = Production.production_level.(prod2) in
          match production_order pl1 pl2 with
          | Lt -> Some prod1
          | Gt -> Some prod2
          | Eq -> None
          | Ic -> None
      end
    module OnErrorReduce =
      struct
        let declarations : Syntax.on_error_reduce_level StringMap.t =
          grammar.on_error_reduce
        let print (nt : Nonterminal.t) =
          (Nonterminal.print false nt : string)
        let lookup (nt : string) =
          (try Nonterminal.lookup nt with | Not_found -> assert false : 
          Nonterminal.t)
        let reduce prod =
          let nt = Production.nt prod in
          StringMap.mem (print nt) declarations
        let iter f =
          StringMap.iter (fun nt -> fun _prec -> f (lookup nt)) declarations
        open Precedence
        let preferable prod1 prod2 =
          assert (prod1 <> prod2);
          (let nt1 = Production.nt prod1
           and nt2 = Production.nt prod2 in
           (nt1 <> nt2) &&
             (let (prec1, prec2) =
                try
                  ((StringMap.find (print nt1) declarations),
                    (StringMap.find (print nt2) declarations))
                with | Not_found -> assert false in
              match production_order prec1 prec2 with
              | Gt -> true
              | Lt -> false
              | Eq | Ic -> false))
      end
    module Sentence =
      struct
        type sentence = (Nonterminal.t option * Terminal.t list)
        open Printf
        let print_abstract (nto, terminals) =
          (Misc.with_buffer 128
             (fun b ->
                Option.iter
                  (fun nt -> bprintf b "%s: " (Nonterminal.print false nt))
                  nto;
                (let separator = Misc.once "" " " in
                 List.iter
                   (fun t ->
                      bprintf b "%s%s" (separator ()) (Terminal.print t))
                   terminals;
                 bprintf b "\n")) : string)
        let print_concrete (_nto, terminals) =
          (Misc.with_buffer 128
             (fun b ->
                let separator = Misc.once "" " " in
                List.iter
                  (fun t ->
                     bprintf b "%s%s" (separator ())
                       (Terminal.print_concrete t)) terminals) : string)
        let print style sentence =
          match style with
          | `Abstract -> print_abstract sentence
          | `Concrete -> print_concrete sentence
      end
  end
let () = Ppx_inline_test_lib.unset_lib "gbnf_parser"
let () = Expect_test_collector.Current_file.unset ()
let () = Ppx_bench_lib.Benchmark_accumulator.Current_libname.unset ()
let () =
  Ppx_module_timer_runtime.record_until Ppx_module_timer_runtime.__MODULE__
[
  structure_item (_none_[0,0+-1].._none_[0,0+-1]) ghost
    Tstr_attribute "ocaml.ppx.context"
    [
      structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
        Pstr_eval
        expression (_none_[0,0+-1]..[0,0+-1]) ghost
          Pexp_record
          [
            "tool_name" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_constant PConst_string("ppx_driver",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
            "include_dirs" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "load_path" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "open_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "for_package" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "None" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "debug" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_threads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_vmthreads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "recursive_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "principal" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "transparent_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unboxed_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unsafe_string" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "cookies" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                Some
                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                    Pexp_tuple
                    [
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_tuple
                        [
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_constant PConst_string("inline_tests",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                          expression (<command-line>[1,0+0]..[1,0+9])
                            Pexp_constant PConst_string("enabled",(<command-line>[1,0+1]..[1,0+8]),None)
                        ]
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                        Some
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_tuple
                            [
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_tuple
                                [
                                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                    Pexp_constant PConst_string("library-name",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                                  expression (<command-line>[1,0+0]..[1,0+13])
                                    Pexp_constant PConst_string("gbnf_parser",(<command-line>[1,0+1]..[1,0+12]),None)
                                ]
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                                None
                            ]
                    ]
          ]
          None
    ]
  structure_item (lib/grammarFunctor.ml[14,976+0]..lib/grammarFunctor.ml[14,976+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/grammarFunctor.ml[14,976+0]..lib/grammarFunctor.ml[14,976+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/grammarFunctor.ml[14,976+0]..lib/grammarFunctor.ml[14,976+0]) ghost
          Texp_apply
          expression (lib/grammarFunctor.ml[14,976+0]..lib/grammarFunctor.ml[14,976+0]) ghost
            Texp_ident "Ppx_module_timer_runtime!.record_start"
          [
            <arg>
              Nolabel
              expression (lib/grammarFunctor.ml[14,976+0]..lib/grammarFunctor.ml[14,976+0]) ghost
                Texp_ident "Ppx_module_timer_runtime!.__MODULE__"
          ]
    ]
  structure_item (lib/grammarFunctor.ml[14,976+0]..lib/grammarFunctor.ml[14,976+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/grammarFunctor.ml[14,976+0]..lib/grammarFunctor.ml[14,976+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/grammarFunctor.ml[14,976+0]..lib/grammarFunctor.ml[14,976+0]) ghost
          Texp_apply
          expression (lib/grammarFunctor.ml[14,976+0]..lib/grammarFunctor.ml[14,976+0]) ghost
            Texp_ident "Ppx_bench_lib!.Benchmark_accumulator.Current_libname.set"
          [
            <arg>
              Nolabel
              expression (lib/grammarFunctor.ml[14,976+0]..lib/grammarFunctor.ml[14,976+0]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/grammarFunctor.ml[14,976+0]..lib/grammarFunctor.ml[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/grammarFunctor.ml[14,976+0]..lib/grammarFunctor.ml[14,976+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/grammarFunctor.ml[14,976+0]..lib/grammarFunctor.ml[14,976+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/grammarFunctor.ml[14,976+0]..lib/grammarFunctor.ml[14,976+0]) ghost
          Texp_apply
          expression (lib/grammarFunctor.ml[14,976+0]..lib/grammarFunctor.ml[14,976+0]) ghost
            Texp_ident "Expect_test_collector!.Current_file.set"
          [
            <arg>
              Labelled "absolute_filename"
              expression (lib/grammarFunctor.ml[14,976+0]..lib/grammarFunctor.ml[14,976+0]) ghost
                Texp_constant Const_string("lib/grammarFunctor.ml",(lib/grammarFunctor.ml[14,976+0]..lib/grammarFunctor.ml[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/grammarFunctor.ml[14,976+0]..lib/grammarFunctor.ml[14,976+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/grammarFunctor.ml[14,976+0]..lib/grammarFunctor.ml[14,976+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/grammarFunctor.ml[14,976+0]..lib/grammarFunctor.ml[14,976+0]) ghost
          Texp_apply
          expression (lib/grammarFunctor.ml[14,976+0]..lib/grammarFunctor.ml[14,976+0]) ghost
            Texp_ident "Ppx_inline_test_lib!.set_lib_and_partition"
          [
            <arg>
              Nolabel
              expression (lib/grammarFunctor.ml[14,976+0]..lib/grammarFunctor.ml[14,976+0]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/grammarFunctor.ml[14,976+0]..lib/grammarFunctor.ml[14,976+0]) ghost,None)
            <arg>
              Nolabel
              expression (lib/grammarFunctor.ml[14,976+0]..lib/grammarFunctor.ml[14,976+0]) ghost
                Texp_constant Const_string("grammarFunctor.ml",(lib/grammarFunctor.ml[14,976+0]..lib/grammarFunctor.ml[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/grammarFunctor.ml[14,976+0]..lib/grammarFunctor.ml[14,976+16])
    Tstr_open Fresh
    module_expr (lib/grammarFunctor.ml[14,976+5]..lib/grammarFunctor.ml[14,976+16])
      Tmod_ident "Gbnf_parser!.BasicSyntax"
  structure_item (lib/grammarFunctor.ml[15,993+0]..lib/grammarFunctor.ml[15,993+11])
    Tstr_open Fresh
    module_expr (lib/grammarFunctor.ml[15,993+5]..lib/grammarFunctor.ml[15,993+11])
      Tmod_ident "Gbnf_parser!.Syntax"
  structure_item (lib/grammarFunctor.ml[16,1005+0]..lib/grammarFunctor.ml[16,1005+14])
    Tstr_open Fresh
    module_expr (lib/grammarFunctor.ml[16,1005+5]..lib/grammarFunctor.ml[16,1005+14])
      Tmod_ident "Gbnf_parser!.Positions"
  structure_item (lib/grammarFunctor.ml[18,1021+0]..lib/grammarFunctor.ml[1954,58344+3])
    Tstr_module
    Make/5132
      module_expr (lib/grammarFunctor.ml[18,1021+12]..lib/grammarFunctor.ml[1954,58344+3])
        Tmod_functor "G/1226"
        module_type (lib/grammarFunctor.ml[18,1021+17]..lib/grammarFunctor.ml[28,1349+3])
          Tmty_signature
          [
            signature_item (lib/grammarFunctor.ml[21,1092+2]..lib/grammarFunctor.ml[21,1092+34])
              Tsig_value
              value_description grammar/1224 (lib/grammarFunctor.ml[21,1092+2]..lib/grammarFunctor.ml[21,1092+34])
                core_type (lib/grammarFunctor.ml[21,1092+15]..lib/grammarFunctor.ml[21,1092+34])
                  Ttyp_constr "Gbnf_parser!.BasicSyntax.grammar"
                  []
                []
            signature_item (lib/grammarFunctor.ml[26,1328+2]..lib/grammarFunctor.ml[26,1328+19])
              Tsig_value
              value_description verbose/1225 (lib/grammarFunctor.ml[26,1328+2]..lib/grammarFunctor.ml[26,1328+19])
                core_type (lib/grammarFunctor.ml[26,1328+15]..lib/grammarFunctor.ml[26,1328+19])
                  Ttyp_constr "bool/5!"
                  []
                []
          ]
        module_expr (lib/grammarFunctor.ml[28,1349+5]..lib/grammarFunctor.ml[1954,58344+3])
          Tmod_functor ()
          module_expr (lib/grammarFunctor.ml[28,1349+10]..lib/grammarFunctor.ml[1954,58344+3])
            module_expr (lib/grammarFunctor.ml[28,1349+10]..lib/grammarFunctor.ml[1954,58344+3])
              Tmod_structure
              [
                structure_item (lib/grammarFunctor.ml[30,1367+2]..lib/grammarFunctor.ml[30,1367+8])
                  Tstr_open Fresh
                  module_expr (lib/grammarFunctor.ml[30,1367+7]..lib/grammarFunctor.ml[30,1367+8])
                    Tmod_ident "G/1226"
                structure_item (lib/grammarFunctor.ml[38,1624+0]..lib/grammarFunctor.ml[43,1850+14])
                  Tstr_value Nonrec
                  [
                    <def>
                      pattern (lib/grammarFunctor.ml[38,1624+4]..lib/grammarFunctor.ml[38,1624+9])
                        Tpat_var "index/1227"
                      expression (lib/grammarFunctor.ml[38,1624+10]..lib/grammarFunctor.ml[43,1850+14]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (lib/grammarFunctor.ml[38,1624+11]..lib/grammarFunctor.ml[38,1624+18])
                              extra
                                Tpat_extra_constraint
                                core_type (lib/grammarFunctor.ml[38,1624+21]..lib/grammarFunctor.ml[38,1624+32])
                                  Ttyp_constr "list/9!"
                                  [
                                    core_type (lib/grammarFunctor.ml[38,1624+21]..lib/grammarFunctor.ml[38,1624+27])
                                      Ttyp_constr "string/15!"
                                      []
                                  ]
                              Tpat_alias "strings/1229"
                              pattern (lib/grammarFunctor.ml[38,1624+11]..lib/grammarFunctor.ml[38,1624+18])
                                Tpat_any
                            expression (lib/grammarFunctor.ml[39,1699+2]..lib/grammarFunctor.ml[43,1850+14])
                              extra
                                Texp_constraint
                                core_type (lib/grammarFunctor.ml[38,1624+36]..lib/grammarFunctor.ml[38,1624+72])
                                  Ttyp_tuple
                                  [
                                    core_type (lib/grammarFunctor.ml[38,1624+36]..lib/grammarFunctor.ml[38,1624+39])
                                      Ttyp_constr "int/1!"
                                      []
                                    core_type (lib/grammarFunctor.ml[38,1624+42]..lib/grammarFunctor.ml[38,1624+54])
                                      Ttyp_constr "array/8!"
                                      [
                                        core_type (lib/grammarFunctor.ml[38,1624+42]..lib/grammarFunctor.ml[38,1624+48])
                                          Ttyp_constr "string/15!"
                                          []
                                      ]
                                    core_type (lib/grammarFunctor.ml[38,1624+57]..lib/grammarFunctor.ml[38,1624+72])
                                      Ttyp_constr "Gbnf_parser!.StringMap.t"
                                      [
                                        core_type (lib/grammarFunctor.ml[38,1624+57]..lib/grammarFunctor.ml[38,1624+60])
                                          Ttyp_constr "int/1!"
                                          []
                                      ]
                                  ]
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (lib/grammarFunctor.ml[39,1699+6]..lib/grammarFunctor.ml[39,1699+10])
                                    Tpat_var "name/1278"
                                  expression (lib/grammarFunctor.ml[39,1699+13]..lib/grammarFunctor.ml[39,1699+34])
                                    Texp_apply
                                    expression (lib/grammarFunctor.ml[39,1699+13]..lib/grammarFunctor.ml[39,1699+26])
                                      Texp_ident "Stdlib!.Array.of_list"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/grammarFunctor.ml[39,1699+27]..lib/grammarFunctor.ml[39,1699+34])
                                          Texp_ident "strings/1229"
                                    ]
                                <def>
                                  pattern (lib/grammarFunctor.ml[40,1734+6]..lib/grammarFunctor.ml[40,1734+12])
                                    Tpat_tuple
                                    [
                                      pattern (lib/grammarFunctor.ml[40,1734+6]..lib/grammarFunctor.ml[40,1734+7])
                                        Tpat_var "n/1279"
                                      pattern (lib/grammarFunctor.ml[40,1734+9]..lib/grammarFunctor.ml[40,1734+12])
                                        Tpat_var "map/1280"
                                    ]
                                  expression (lib/grammarFunctor.ml[40,1734+15]..lib/grammarFunctor.ml[42,1814+32])
                                    Texp_apply
                                    expression (lib/grammarFunctor.ml[40,1734+15]..lib/grammarFunctor.ml[40,1734+29])
                                      Texp_ident "Stdlib!.List.fold_left"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/grammarFunctor.ml[40,1734+30]..lib/grammarFunctor.ml[42,1814+3])
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (lib/grammarFunctor.ml[40,1734+35]..lib/grammarFunctor.ml[40,1734+43])
                                                Tpat_tuple
                                                [
                                                  pattern (lib/grammarFunctor.ml[40,1734+36]..lib/grammarFunctor.ml[40,1734+37])
                                                    Tpat_var "n/1395"
                                                  pattern (lib/grammarFunctor.ml[40,1734+39]..lib/grammarFunctor.ml[40,1734+42])
                                                    Tpat_var "map/1396"
                                                ]
                                              expression (lib/grammarFunctor.ml[40,1734+44]..lib/grammarFunctor.ml[41,1783+30]) ghost
                                                Texp_function
                                                Nolabel
                                                [
                                                  <case>
                                                    pattern (lib/grammarFunctor.ml[40,1734+44]..lib/grammarFunctor.ml[40,1734+45])
                                                      Tpat_var "s/1397"
                                                    expression (lib/grammarFunctor.ml[41,1783+4]..lib/grammarFunctor.ml[41,1783+30])
                                                      Texp_tuple
                                                      [
                                                        expression (lib/grammarFunctor.ml[41,1783+4]..lib/grammarFunctor.ml[41,1783+7])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[41,1783+5]..lib/grammarFunctor.ml[41,1783+6])
                                                            Texp_ident "Stdlib!.+"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[41,1783+4]..lib/grammarFunctor.ml[41,1783+5])
                                                                Texp_ident "n/1395"
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[41,1783+6]..lib/grammarFunctor.ml[41,1783+7])
                                                                Texp_constant Const_int 1
                                                          ]
                                                        expression (lib/grammarFunctor.ml[41,1783+9]..lib/grammarFunctor.ml[41,1783+30])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[41,1783+9]..lib/grammarFunctor.ml[41,1783+22])
                                                            Texp_ident "Gbnf_parser!.StringMap.add"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[41,1783+23]..lib/grammarFunctor.ml[41,1783+24])
                                                                Texp_ident "s/1397"
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[41,1783+25]..lib/grammarFunctor.ml[41,1783+26])
                                                                Texp_ident "n/1395"
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[41,1783+27]..lib/grammarFunctor.ml[41,1783+30])
                                                                Texp_ident "map/1396"
                                                          ]
                                                      ]
                                                ]
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (lib/grammarFunctor.ml[42,1814+4]..lib/grammarFunctor.ml[42,1814+24])
                                          Texp_tuple
                                          [
                                            expression (lib/grammarFunctor.ml[42,1814+5]..lib/grammarFunctor.ml[42,1814+6])
                                              Texp_constant Const_int 0
                                            expression (lib/grammarFunctor.ml[42,1814+8]..lib/grammarFunctor.ml[42,1814+23])
                                              Texp_ident "Gbnf_parser!.StringMap.empty"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (lib/grammarFunctor.ml[42,1814+25]..lib/grammarFunctor.ml[42,1814+32])
                                          Texp_ident "strings/1229"
                                    ]
                              ]
                              expression (lib/grammarFunctor.ml[43,1850+2]..lib/grammarFunctor.ml[43,1850+14])
                                Texp_tuple
                                [
                                  expression (lib/grammarFunctor.ml[43,1850+2]..lib/grammarFunctor.ml[43,1850+3])
                                    Texp_ident "n/1279"
                                  expression (lib/grammarFunctor.ml[43,1850+5]..lib/grammarFunctor.ml[43,1850+9])
                                    Texp_ident "name/1278"
                                  expression (lib/grammarFunctor.ml[43,1850+11]..lib/grammarFunctor.ml[43,1850+14])
                                    Texp_ident "map/1280"
                                ]
                        ]
                  ]
                structure_item (lib/grammarFunctor.ml[48,2005+0]..lib/grammarFunctor.ml[95,3698+3])
                  Tstr_module
                  TokPrecedence/1946
                    module_expr (lib/grammarFunctor.ml[48,2005+23]..lib/grammarFunctor.ml[95,3698+3])
                      Tmod_structure
                      [
                        structure_item (lib/grammarFunctor.ml[54,2222+2]..lib/grammarFunctor.ml[55,2260+23])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[54,2222+6]..lib/grammarFunctor.ml[54,2222+17])
                                extra
                                  Tpat_extra_constraint
                                  core_type (lib/grammarFunctor.ml[54,2222+20]..lib/grammarFunctor.ml[54,2222+35])
                                    Ttyp_constr "Stdlib!.ref"
                                    [
                                      core_type (lib/grammarFunctor.ml[54,2222+20]..lib/grammarFunctor.ml[54,2222+31])
                                        Ttyp_constr "Gbnf_parser!.StringSet.t"
                                        []
                                    ]
                                Tpat_alias "ever_useful/1654"
                                pattern (lib/grammarFunctor.ml[54,2222+6]..lib/grammarFunctor.ml[54,2222+17])
                                  Tpat_any
                              expression (lib/grammarFunctor.ml[55,2260+4]..lib/grammarFunctor.ml[55,2260+23])
                                extra
                                  Texp_constraint
                                  core_type (lib/grammarFunctor.ml[54,2222+20]..lib/grammarFunctor.ml[54,2222+35])
                                    Ttyp_constr "Stdlib!.ref"
                                    [
                                      core_type (lib/grammarFunctor.ml[54,2222+20]..lib/grammarFunctor.ml[54,2222+31])
                                        Ttyp_constr "Gbnf_parser!.StringSet.t"
                                        []
                                    ]
                                Texp_apply
                                expression (lib/grammarFunctor.ml[55,2260+4]..lib/grammarFunctor.ml[55,2260+7])
                                  Texp_ident "Stdlib!.ref"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/grammarFunctor.ml[55,2260+8]..lib/grammarFunctor.ml[55,2260+23])
                                      Texp_ident "Gbnf_parser!.StringSet.empty"
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[57,2285+2]..lib/grammarFunctor.ml[58,2300+48])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[57,2285+6]..lib/grammarFunctor.ml[57,2285+9])
                                Tpat_var "use/1655"
                              expression (lib/grammarFunctor.ml[57,2285+10]..lib/grammarFunctor.ml[58,2300+48]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[57,2285+10]..lib/grammarFunctor.ml[57,2285+12])
                                      Tpat_var "id/1657"
                                    expression (lib/grammarFunctor.ml[58,2300+4]..lib/grammarFunctor.ml[58,2300+48])
                                      Texp_apply
                                      expression (lib/grammarFunctor.ml[58,2300+16]..lib/grammarFunctor.ml[58,2300+18])
                                        Texp_ident "Stdlib!.:="
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[58,2300+4]..lib/grammarFunctor.ml[58,2300+15])
                                            Texp_ident "ever_useful/1654"
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[58,2300+19]..lib/grammarFunctor.ml[58,2300+48])
                                            Texp_apply
                                            expression (lib/grammarFunctor.ml[58,2300+19]..lib/grammarFunctor.ml[58,2300+32])
                                              Texp_ident "Gbnf_parser!.StringSet.add"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[58,2300+33]..lib/grammarFunctor.ml[58,2300+35])
                                                  Texp_ident "id/1657"
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[58,2300+36]..lib/grammarFunctor.ml[58,2300+48])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[58,2300+36]..lib/grammarFunctor.ml[58,2300+37])
                                                    Texp_ident "Stdlib!.!"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[58,2300+37]..lib/grammarFunctor.ml[58,2300+48])
                                                        Texp_ident "ever_useful/1654"
                                                  ]
                                            ]
                                      ]
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[68,2789+2]..lib/grammarFunctor.ml[69,2819+43])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[68,2789+6]..lib/grammarFunctor.ml[68,2789+13])
                                Tpat_var "levelip/1798"
                              expression (lib/grammarFunctor.ml[68,2789+14]..lib/grammarFunctor.ml[69,2819+43]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[68,2789+14]..lib/grammarFunctor.ml[68,2789+16])
                                      Tpat_var "id/1800"
                                    expression (lib/grammarFunctor.ml[68,2789+17]..lib/grammarFunctor.ml[69,2819+43]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (lib/grammarFunctor.ml[68,2789+17]..lib/grammarFunctor.ml[68,2789+27])
                                            Tpat_var "properties/1801"
                                          expression (lib/grammarFunctor.ml[69,2819+4]..lib/grammarFunctor.ml[69,2819+43])
                                            Texp_tuple
                                            [
                                              expression (lib/grammarFunctor.ml[69,2819+4]..lib/grammarFunctor.ml[69,2819+17])
                                                Texp_lazy                                                expression (lib/grammarFunctor.ml[69,2819+9]..lib/grammarFunctor.ml[69,2819+17])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[69,2819+10]..lib/grammarFunctor.ml[69,2819+13])
                                                    Texp_ident "use/1655"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[69,2819+14]..lib/grammarFunctor.ml[69,2819+16])
                                                        Texp_ident "id/1800"
                                                  ]
                                              expression (lib/grammarFunctor.ml[69,2819+19]..lib/grammarFunctor.ml[69,2819+43])
                                                Texp_field
                                                expression (lib/grammarFunctor.ml[69,2819+19]..lib/grammarFunctor.ml[69,2819+29])
                                                  Texp_ident "properties/1801"
                                                "tk_precedence"
                                            ]
                                      ]
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[71,2864+2]..lib/grammarFunctor.ml[78,3061+25])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[71,2864+6]..lib/grammarFunctor.ml[71,2864+12])
                                Tpat_var "leveli/1802"
                              expression (lib/grammarFunctor.ml[71,2864+13]..lib/grammarFunctor.ml[78,3061+25]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[71,2864+13]..lib/grammarFunctor.ml[71,2864+15])
                                      Tpat_var "id/1804"
                                    expression (lib/grammarFunctor.ml[72,2882+4]..lib/grammarFunctor.ml[78,3061+25])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (lib/grammarFunctor.ml[72,2882+8]..lib/grammarFunctor.ml[72,2882+18])
                                            Tpat_var "properties/1805"
                                          expression (lib/grammarFunctor.ml[73,2903+6]..lib/grammarFunctor.ml[76,2978+20])
                                            Texp_try
                                            expression (lib/grammarFunctor.ml[74,2913+8]..lib/grammarFunctor.ml[74,2913+40])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[74,2913+8]..lib/grammarFunctor.ml[74,2913+22])
                                                Texp_ident "Gbnf_parser!.StringMap.find"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[74,2913+23]..lib/grammarFunctor.ml[74,2913+25])
                                                    Texp_ident "id/1804"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[74,2913+26]..lib/grammarFunctor.ml[74,2913+40])
                                                    Texp_field
                                                    expression (lib/grammarFunctor.ml[74,2913+26]..lib/grammarFunctor.ml[74,2913+33])
                                                      Texp_ident "G/1226.grammar"
                                                    "tokens"
                                              ]
                                            [
                                              <case>
                                                pattern (lib/grammarFunctor.ml[75,2954+11]..lib/grammarFunctor.ml[75,2954+20])
                                                  Tpat_construct "Not_found"
                                                  []
                                                  None
                                                expression (lib/grammarFunctor.ml[76,2978+8]..lib/grammarFunctor.ml[76,2978+20])
                                                  Texp_assert                                                  expression (lib/grammarFunctor.ml[76,2978+15]..lib/grammarFunctor.ml[76,2978+20])
                                                    Texp_construct "false"
                                                    []
                                            ]
                                      ]
                                      expression (lib/grammarFunctor.ml[78,3061+4]..lib/grammarFunctor.ml[78,3061+25])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[78,3061+4]..lib/grammarFunctor.ml[78,3061+11])
                                          Texp_ident "levelip/1798"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[78,3061+12]..lib/grammarFunctor.ml[78,3061+14])
                                              Texp_ident "id/1804"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[78,3061+15]..lib/grammarFunctor.ml[78,3061+25])
                                              Texp_ident "properties/1805"
                                        ]
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[84,3292+2]..lib/grammarFunctor.ml[93,3676+20])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[84,3292+6]..lib/grammarFunctor.ml[84,3292+17])
                                Tpat_var "diagnostics/1863"
                              expression (lib/grammarFunctor.ml[84,3292+18]..lib/grammarFunctor.ml[93,3676+20]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[84,3292+18]..lib/grammarFunctor.ml[84,3292+20])
                                      Tpat_construct "()"
                                      []
                                      None
                                    expression (lib/grammarFunctor.ml[85,3315+4]..lib/grammarFunctor.ml[93,3676+20])
                                      Texp_apply
                                      expression (lib/grammarFunctor.ml[85,3315+4]..lib/grammarFunctor.ml[85,3315+18])
                                        Texp_ident "Gbnf_parser!.StringMap.iter"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[85,3315+19]..lib/grammarFunctor.ml[93,3676+5])
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (lib/grammarFunctor.ml[85,3315+24]..lib/grammarFunctor.ml[85,3315+26])
                                                  Tpat_var "id/1865"
                                                expression (lib/grammarFunctor.ml[85,3315+27]..lib/grammarFunctor.ml[92,3604+71]) ghost
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (lib/grammarFunctor.ml[85,3315+27]..lib/grammarFunctor.ml[85,3315+37])
                                                        Tpat_var "properties/1866"
                                                      expression (lib/grammarFunctor.ml[86,3356+6]..lib/grammarFunctor.ml[92,3604+71])
                                                        Texp_ifthenelse
                                                        expression (lib/grammarFunctor.ml[86,3356+9]..lib/grammarFunctor.ml[86,3356+44])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[86,3356+9]..lib/grammarFunctor.ml[86,3356+12])
                                                            Texp_ident "Stdlib!.not"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[86,3356+13]..lib/grammarFunctor.ml[86,3356+44])
                                                                Texp_apply
                                                                expression (lib/grammarFunctor.ml[86,3356+14]..lib/grammarFunctor.ml[86,3356+27])
                                                                  Texp_ident "Gbnf_parser!.StringSet.mem"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[86,3356+28]..lib/grammarFunctor.ml[86,3356+30])
                                                                      Texp_ident "id/1865"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[86,3356+31]..lib/grammarFunctor.ml[86,3356+43])
                                                                      Texp_apply
                                                                      expression (lib/grammarFunctor.ml[86,3356+31]..lib/grammarFunctor.ml[86,3356+32])
                                                                        Texp_ident "Stdlib!.!"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (lib/grammarFunctor.ml[86,3356+32]..lib/grammarFunctor.ml[86,3356+43])
                                                                            Texp_ident "ever_useful/1654"
                                                                      ]
                                                                ]
                                                          ]
                                                        expression (lib/grammarFunctor.ml[87,3406+8]..lib/grammarFunctor.ml[92,3604+71])
                                                          Texp_match
                                                          expression (lib/grammarFunctor.ml[87,3406+14]..lib/grammarFunctor.ml[87,3406+38])
                                                            Texp_field
                                                            expression (lib/grammarFunctor.ml[87,3406+14]..lib/grammarFunctor.ml[87,3406+24])
                                                              Texp_ident "properties/1866"
                                                            "tk_precedence"
                                                          [
                                                            <case>
                                                              pattern (lib/grammarFunctor.ml[88,3450+10]..lib/grammarFunctor.ml[88,3450+29])
                                                                Tpat_value
                                                                pattern (lib/grammarFunctor.ml[88,3450+10]..lib/grammarFunctor.ml[88,3450+29])
                                                                  Tpat_construct "UndefinedPrecedence"
                                                                  []
                                                                  None
                                                              expression (lib/grammarFunctor.ml[89,3483+12]..lib/grammarFunctor.ml[89,3483+14])
                                                                Texp_construct "()"
                                                                []
                                                            <case>
                                                              pattern (lib/grammarFunctor.ml[90,3498+10]..lib/grammarFunctor.ml[90,3498+44])
                                                                Tpat_value
                                                                pattern (lib/grammarFunctor.ml[90,3498+10]..lib/grammarFunctor.ml[90,3498+44])
                                                                  Tpat_construct "PrecedenceLevel"
                                                                  [
                                                                    pattern (lib/grammarFunctor.ml[90,3498+27]..lib/grammarFunctor.ml[90,3498+28])
                                                                      Tpat_any
                                                                    pattern (lib/grammarFunctor.ml[90,3498+30]..lib/grammarFunctor.ml[90,3498+31])
                                                                      Tpat_any
                                                                    pattern (lib/grammarFunctor.ml[90,3498+33]..lib/grammarFunctor.ml[90,3498+37])
                                                                      Tpat_var "pos1/1867"
                                                                    pattern (lib/grammarFunctor.ml[90,3498+39]..lib/grammarFunctor.ml[90,3498+43])
                                                                      Tpat_var "pos2/1868"
                                                                  ]
                                                                  None
                                                              expression (lib/grammarFunctor.ml[91,3546+12]..lib/grammarFunctor.ml[92,3604+71])
                                                                Texp_apply
                                                                expression (lib/grammarFunctor.ml[91,3546+12]..lib/grammarFunctor.ml[91,3546+25])
                                                                  Texp_ident "Gbnf_parser!.Error.warning"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[91,3546+26]..lib/grammarFunctor.ml[91,3546+57])
                                                                      Texp_construct "::"
                                                                      [
                                                                        expression (lib/grammarFunctor.ml[91,3546+27]..lib/grammarFunctor.ml[91,3546+56])
                                                                          Texp_apply
                                                                          expression (lib/grammarFunctor.ml[91,3546+27]..lib/grammarFunctor.ml[91,3546+43])
                                                                            Texp_ident "Gbnf_parser!.Positions.import"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (lib/grammarFunctor.ml[91,3546+44]..lib/grammarFunctor.ml[91,3546+56])
                                                                                Texp_tuple
                                                                                [
                                                                                  expression (lib/grammarFunctor.ml[91,3546+45]..lib/grammarFunctor.ml[91,3546+49])
                                                                                    Texp_ident "pos1/1867"
                                                                                  expression (lib/grammarFunctor.ml[91,3546+51]..lib/grammarFunctor.ml[91,3546+55])
                                                                                    Texp_ident "pos2/1868"
                                                                                ]
                                                                          ]
                                                                        expression (lib/grammarFunctor.ml[91,3546+56]..lib/grammarFunctor.ml[91,3546+57]) ghost
                                                                          Texp_construct "[]"
                                                                          []
                                                                      ]
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[92,3604+14]..lib/grammarFunctor.ml[92,3604+68])
                                                                      Texp_construct "CamlinternalFormatBasics.Format"
                                                                      [
                                                                        expression (lib/grammarFunctor.ml[92,3604+14]..lib/grammarFunctor.ml[92,3604+68]) ghost
                                                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                          [
                                                                            expression (lib/grammarFunctor.ml[92,3604+14]..lib/grammarFunctor.ml[92,3604+68]) ghost
                                                                              Texp_constant Const_string("the precedence level assigned to ",(lib/grammarFunctor.ml[92,3604+14]..lib/grammarFunctor.ml[92,3604+68]) ghost,None)
                                                                            expression (lib/grammarFunctor.ml[92,3604+14]..lib/grammarFunctor.ml[92,3604+68]) ghost
                                                                              Texp_construct "CamlinternalFormatBasics.String"
                                                                              [
                                                                                expression (lib/grammarFunctor.ml[92,3604+14]..lib/grammarFunctor.ml[92,3604+68]) ghost
                                                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                  []
                                                                                expression (lib/grammarFunctor.ml[92,3604+14]..lib/grammarFunctor.ml[92,3604+68]) ghost
                                                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                  [
                                                                                    expression (lib/grammarFunctor.ml[92,3604+14]..lib/grammarFunctor.ml[92,3604+68]) ghost
                                                                                      Texp_constant Const_string(" is never useful.",(lib/grammarFunctor.ml[92,3604+14]..lib/grammarFunctor.ml[92,3604+68]) ghost,None)
                                                                                    expression (lib/grammarFunctor.ml[92,3604+14]..lib/grammarFunctor.ml[92,3604+68]) ghost
                                                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                      []
                                                                                  ]
                                                                              ]
                                                                          ]
                                                                        expression (lib/grammarFunctor.ml[92,3604+14]..lib/grammarFunctor.ml[92,3604+68]) ghost
                                                                          Texp_constant Const_string("the precedence level assigned to %s is never useful.",(lib/grammarFunctor.ml[92,3604+14]..lib/grammarFunctor.ml[92,3604+68]) ghost,None)
                                                                      ]
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[92,3604+69]..lib/grammarFunctor.ml[92,3604+71])
                                                                      Texp_ident "id/1865"
                                                                ]
                                                          ]
                                                        None
                                                  ]
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[93,3676+6]..lib/grammarFunctor.ml[93,3676+20])
                                            Texp_field
                                            expression (lib/grammarFunctor.ml[93,3676+6]..lib/grammarFunctor.ml[93,3676+13])
                                              Texp_ident "G/1226.grammar"
                                            "tokens"
                                      ]
                                ]
                          ]
                      ]
                structure_item (lib/grammarFunctor.ml[100,3803+0]..lib/grammarFunctor.ml[203,5995+3])
                  Tstr_module
                  Nonterminal/2057
                    module_expr (lib/grammarFunctor.ml[100,3803+21]..lib/grammarFunctor.ml[203,5995+3])
                      module_expr (lib/grammarFunctor.ml[100,3803+21]..lib/grammarFunctor.ml[203,5995+3])
                        Tmod_structure
                        [
                          structure_item (lib/grammarFunctor.ml[102,3832+2]..lib/grammarFunctor.ml[102,3832+14])
                            Tstr_type Rec
                            [
                              type_declaration t/1947 (lib/grammarFunctor.ml[102,3832+2]..lib/grammarFunctor.ml[102,3832+14])
                                ptype_params =
                                  []
                                ptype_cstrs =
                                  []
                                ptype_kind =
                                  Ttype_abstract
                                ptype_private = Public
                                ptype_manifest =
                                  Some
                                    core_type (lib/grammarFunctor.ml[102,3832+11]..lib/grammarFunctor.ml[102,3832+14])
                                      Ttyp_constr "int/1!"
                                      []
                            ]
                          structure_item (lib/grammarFunctor.ml[104,3848+2]..lib/grammarFunctor.ml[104,3848+15])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[104,3848+6]..lib/grammarFunctor.ml[104,3848+9])
                                  Tpat_var "n2i/1948"
                                expression (lib/grammarFunctor.ml[104,3848+10]..lib/grammarFunctor.ml[104,3848+15]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[104,3848+10]..lib/grammarFunctor.ml[104,3848+11])
                                        Tpat_var "i/1950"
                                      expression (lib/grammarFunctor.ml[104,3848+14]..lib/grammarFunctor.ml[104,3848+15])
                                        Texp_ident "i/1950"
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[106,3865+2]..lib/grammarFunctor.ml[107,3899+13])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[106,3865+6]..lib/grammarFunctor.ml[106,3865+11])
                                  Tpat_var "equal/1951"
                                expression (lib/grammarFunctor.ml[106,3865+12]..lib/grammarFunctor.ml[107,3899+13]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[106,3865+13]..lib/grammarFunctor.ml[106,3865+16])
                                        extra
                                          Tpat_extra_constraint
                                          core_type (lib/grammarFunctor.ml[106,3865+19]..lib/grammarFunctor.ml[106,3865+20])
                                            Ttyp_constr "t/1947"
                                            []
                                        Tpat_alias "nt1/1953"
                                        pattern (lib/grammarFunctor.ml[106,3865+13]..lib/grammarFunctor.ml[106,3865+16])
                                          Tpat_any
                                      expression (lib/grammarFunctor.ml[106,3865+22]..lib/grammarFunctor.ml[107,3899+13]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[106,3865+23]..lib/grammarFunctor.ml[106,3865+26])
                                              extra
                                                Tpat_extra_constraint
                                                core_type (lib/grammarFunctor.ml[106,3865+29]..lib/grammarFunctor.ml[106,3865+30])
                                                  Ttyp_constr "t/1947"
                                                  []
                                              Tpat_alias "nt2/1954"
                                              pattern (lib/grammarFunctor.ml[106,3865+23]..lib/grammarFunctor.ml[106,3865+26])
                                                Tpat_any
                                            expression (lib/grammarFunctor.ml[107,3899+4]..lib/grammarFunctor.ml[107,3899+13])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[107,3899+8]..lib/grammarFunctor.ml[107,3899+9])
                                                Texp_ident "Stdlib!.="
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[107,3899+4]..lib/grammarFunctor.ml[107,3899+7])
                                                    Texp_ident "nt1/1953"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[107,3899+10]..lib/grammarFunctor.ml[107,3899+13])
                                                    Texp_ident "nt2/1954"
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[109,3914+2]..lib/grammarFunctor.ml[109,3914+19])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[109,3914+6]..lib/grammarFunctor.ml[109,3914+13])
                                  Tpat_var "compare/1955"
                                expression (lib/grammarFunctor.ml[109,3914+16]..lib/grammarFunctor.ml[109,3914+19])
                                  Texp_ident "Stdlib!.-"
                            ]
                          structure_item (lib/grammarFunctor.ml[115,4103+2]..lib/grammarFunctor.ml[116,4134+83])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[115,4103+6]..lib/grammarFunctor.ml[115,4103+28])
                                  Tpat_var "new_start_nonterminals/1956"
                                expression (lib/grammarFunctor.ml[116,4134+4]..lib/grammarFunctor.ml[116,4134+83])
                                  Texp_apply
                                  expression (lib/grammarFunctor.ml[116,4134+4]..lib/grammarFunctor.ml[116,4134+18])
                                    Texp_ident "Gbnf_parser!.StringSet.fold"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[116,4134+19]..lib/grammarFunctor.ml[116,4134+58])
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[116,4134+24]..lib/grammarFunctor.ml[116,4134+30])
                                              Tpat_var "symbol/1957"
                                            expression (lib/grammarFunctor.ml[116,4134+31]..lib/grammarFunctor.ml[116,4134+57]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[116,4134+31]..lib/grammarFunctor.ml[116,4134+33])
                                                    Tpat_var "ss/1958"
                                                  expression (lib/grammarFunctor.ml[116,4134+37]..lib/grammarFunctor.ml[116,4134+57])
                                                    Texp_construct "::"
                                                    [
                                                      expression (lib/grammarFunctor.ml[116,4134+37]..lib/grammarFunctor.ml[116,4134+51])
                                                        Texp_apply
                                                        expression (lib/grammarFunctor.ml[116,4134+45]..lib/grammarFunctor.ml[116,4134+46])
                                                          Texp_ident "Stdlib!.^"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[116,4134+38]..lib/grammarFunctor.ml[116,4134+44])
                                                              Texp_ident "symbol/1957"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[116,4134+47]..lib/grammarFunctor.ml[116,4134+50])
                                                              Texp_constant Const_string("'",(lib/grammarFunctor.ml[116,4134+48]..lib/grammarFunctor.ml[116,4134+49]),None)
                                                        ]
                                                      expression (lib/grammarFunctor.ml[116,4134+55]..lib/grammarFunctor.ml[116,4134+57])
                                                        Texp_ident "ss/1958"
                                                    ]
                                              ]
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[116,4134+59]..lib/grammarFunctor.ml[116,4134+80])
                                        Texp_field
                                        expression (lib/grammarFunctor.ml[116,4134+59]..lib/grammarFunctor.ml[116,4134+66])
                                          Texp_ident "G/1226.grammar"
                                        "start_symbols"
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[116,4134+81]..lib/grammarFunctor.ml[116,4134+83])
                                        Texp_construct "[]"
                                        []
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[118,4219+2]..lib/grammarFunctor.ml[119,4249+24])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[118,4219+6]..lib/grammarFunctor.ml[118,4219+27])
                                  Tpat_var "original_nonterminals/1959"
                                expression (lib/grammarFunctor.ml[119,4249+4]..lib/grammarFunctor.ml[119,4249+24])
                                  Texp_apply
                                  expression (lib/grammarFunctor.ml[119,4249+4]..lib/grammarFunctor.ml[119,4249+16])
                                    Texp_ident "Gbnf_parser!.BasicSyntax.nonterminals"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[119,4249+17]..lib/grammarFunctor.ml[119,4249+24])
                                        Texp_ident "G/1226.grammar"
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[121,4275+2]..lib/grammarFunctor.ml[122,4289+38])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[121,4275+6]..lib/grammarFunctor.ml[121,4275+11])
                                  Tpat_var "start/1960"
                                expression (lib/grammarFunctor.ml[122,4289+4]..lib/grammarFunctor.ml[122,4289+38])
                                  Texp_apply
                                  expression (lib/grammarFunctor.ml[122,4289+4]..lib/grammarFunctor.ml[122,4289+15])
                                    Texp_ident "Stdlib!.List.length"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[122,4289+16]..lib/grammarFunctor.ml[122,4289+38])
                                        Texp_ident "new_start_nonterminals/1956"
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[124,4329+2]..lib/grammarFunctor.ml[125,4395+58])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[124,4329+6]..lib/grammarFunctor.ml[124,4329+63])
                                  Tpat_tuple
                                  [
                                    pattern (lib/grammarFunctor.ml[124,4329+7]..lib/grammarFunctor.ml[124,4329+8])
                                      extra
                                        Tpat_extra_constraint
                                        core_type (lib/grammarFunctor.ml[124,4329+11]..lib/grammarFunctor.ml[124,4329+14])
                                          Ttyp_constr "int/1!"
                                          []
                                      Tpat_alias "n/1961"
                                      pattern (lib/grammarFunctor.ml[124,4329+7]..lib/grammarFunctor.ml[124,4329+8])
                                        Tpat_any
                                    pattern (lib/grammarFunctor.ml[124,4329+18]..lib/grammarFunctor.ml[124,4329+22])
                                      extra
                                        Tpat_extra_constraint
                                        core_type (lib/grammarFunctor.ml[124,4329+25]..lib/grammarFunctor.ml[124,4329+37])
                                          Ttyp_constr "array/8!"
                                          [
                                            core_type (lib/grammarFunctor.ml[124,4329+25]..lib/grammarFunctor.ml[124,4329+31])
                                              Ttyp_constr "string/15!"
                                              []
                                          ]
                                      Tpat_alias "name/1962"
                                      pattern (lib/grammarFunctor.ml[124,4329+18]..lib/grammarFunctor.ml[124,4329+22])
                                        Tpat_any
                                    pattern (lib/grammarFunctor.ml[124,4329+41]..lib/grammarFunctor.ml[124,4329+44])
                                      extra
                                        Tpat_extra_constraint
                                        core_type (lib/grammarFunctor.ml[124,4329+47]..lib/grammarFunctor.ml[124,4329+62])
                                          Ttyp_constr "Gbnf_parser!.StringMap.t"
                                          [
                                            core_type (lib/grammarFunctor.ml[124,4329+47]..lib/grammarFunctor.ml[124,4329+50])
                                              Ttyp_constr "int/1!"
                                              []
                                          ]
                                      Tpat_alias "map/1963"
                                      pattern (lib/grammarFunctor.ml[124,4329+41]..lib/grammarFunctor.ml[124,4329+44])
                                        Tpat_any
                                  ]
                                expression (lib/grammarFunctor.ml[125,4395+4]..lib/grammarFunctor.ml[125,4395+58])
                                  Texp_apply
                                  expression (lib/grammarFunctor.ml[125,4395+4]..lib/grammarFunctor.ml[125,4395+9])
                                    Texp_ident "index/1227"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[125,4395+10]..lib/grammarFunctor.ml[125,4395+58])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[125,4395+34]..lib/grammarFunctor.ml[125,4395+35])
                                          Texp_ident "Stdlib!.@"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[125,4395+11]..lib/grammarFunctor.ml[125,4395+33])
                                              Texp_ident "new_start_nonterminals/1956"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[125,4395+36]..lib/grammarFunctor.ml[125,4395+57])
                                              Texp_ident "original_nonterminals/1959"
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[135,4702+2]..lib/grammarFunctor.ml[136,4731+14])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[135,4702+6]..lib/grammarFunctor.ml[135,4702+23])
                                  Tpat_var "is_internal_start/1964"
                                expression (lib/grammarFunctor.ml[135,4702+24]..lib/grammarFunctor.ml[136,4731+14]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[135,4702+24]..lib/grammarFunctor.ml[135,4702+26])
                                        Tpat_var "nt/1966"
                                      expression (lib/grammarFunctor.ml[136,4731+4]..lib/grammarFunctor.ml[136,4731+14])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[136,4731+7]..lib/grammarFunctor.ml[136,4731+8])
                                          Texp_ident "Stdlib!.<"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[136,4731+4]..lib/grammarFunctor.ml[136,4731+6])
                                              Texp_ident "nt/1966"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[136,4731+9]..lib/grammarFunctor.ml[136,4731+14])
                                              Texp_ident "start/1960"
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[138,4747+2]..lib/grammarFunctor.ml[139,4772+49])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[138,4747+6]..lib/grammarFunctor.ml[138,4747+19])
                                  Tpat_var "is_user_start/1967"
                                expression (lib/grammarFunctor.ml[138,4747+20]..lib/grammarFunctor.ml[139,4772+49]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[138,4747+20]..lib/grammarFunctor.ml[138,4747+22])
                                        Tpat_var "nt/1969"
                                      expression (lib/grammarFunctor.ml[139,4772+4]..lib/grammarFunctor.ml[139,4772+49])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[139,4772+4]..lib/grammarFunctor.ml[139,4772+17])
                                          Texp_ident "Gbnf_parser!.StringSet.mem"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[139,4772+18]..lib/grammarFunctor.ml[139,4772+27])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[139,4772+18]..lib/grammarFunctor.ml[139,4772+27]) ghost
                                                Texp_ident "Stdlib!.Array.get"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[139,4772+18]..lib/grammarFunctor.ml[139,4772+22])
                                                    Texp_ident "name/1962"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[139,4772+24]..lib/grammarFunctor.ml[139,4772+26])
                                                    Texp_ident "nt/1969"
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[139,4772+28]..lib/grammarFunctor.ml[139,4772+49])
                                              Texp_field
                                              expression (lib/grammarFunctor.ml[139,4772+28]..lib/grammarFunctor.ml[139,4772+35])
                                                Texp_ident "G/1226.grammar"
                                              "start_symbols"
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[141,4823+2]..lib/grammarFunctor.ml[145,4912+15])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[141,4823+6]..lib/grammarFunctor.ml[141,4823+11])
                                  Tpat_var "print/1970"
                                expression (lib/grammarFunctor.ml[141,4823+12]..lib/grammarFunctor.ml[145,4912+15]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[141,4823+12]..lib/grammarFunctor.ml[141,4823+21])
                                        Tpat_var "normalize/1971"
                                      expression (lib/grammarFunctor.ml[141,4823+22]..lib/grammarFunctor.ml[145,4912+15]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[141,4823+22]..lib/grammarFunctor.ml[141,4823+24])
                                              Tpat_var "nt/1972"
                                            expression (lib/grammarFunctor.ml[142,4850+4]..lib/grammarFunctor.ml[145,4912+15])
                                              Texp_ifthenelse
                                              expression (lib/grammarFunctor.ml[142,4850+7]..lib/grammarFunctor.ml[142,4850+16])
                                                Texp_ident "normalize/1971"
                                              expression (lib/grammarFunctor.ml[143,4872+6]..lib/grammarFunctor.ml[143,4872+30])
                                                Texp_apply
                                                expression (lib/grammarFunctor.ml[143,4872+6]..lib/grammarFunctor.ml[143,4872+20])
                                                  Texp_ident "Gbnf_parser!.Misc.normalize"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[143,4872+21]..lib/grammarFunctor.ml[143,4872+30])
                                                      Texp_apply
                                                      expression (lib/grammarFunctor.ml[143,4872+21]..lib/grammarFunctor.ml[143,4872+30]) ghost
                                                        Texp_ident "Stdlib!.Array.get"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[143,4872+21]..lib/grammarFunctor.ml[143,4872+25])
                                                            Texp_ident "name/1962"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[143,4872+27]..lib/grammarFunctor.ml[143,4872+29])
                                                            Texp_ident "nt/1972"
                                                      ]
                                                ]
                                              Some
                                                expression (lib/grammarFunctor.ml[145,4912+6]..lib/grammarFunctor.ml[145,4912+15])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[145,4912+6]..lib/grammarFunctor.ml[145,4912+15]) ghost
                                                    Texp_ident "Stdlib!.Array.get"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[145,4912+6]..lib/grammarFunctor.ml[145,4912+10])
                                                        Texp_ident "name/1962"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[145,4912+12]..lib/grammarFunctor.ml[145,4912+14])
                                                        Texp_ident "nt/1972"
                                                  ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[147,4929+2]..lib/grammarFunctor.ml[148,4949+27])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[147,4929+6]..lib/grammarFunctor.ml[147,4929+12])
                                  Tpat_var "lookup/2014"
                                expression (lib/grammarFunctor.ml[147,4929+13]..lib/grammarFunctor.ml[148,4949+27]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[147,4929+13]..lib/grammarFunctor.ml[147,4929+17])
                                        Tpat_var "name/2016"
                                      expression (lib/grammarFunctor.ml[148,4949+4]..lib/grammarFunctor.ml[148,4949+27])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[148,4949+4]..lib/grammarFunctor.ml[148,4949+18])
                                          Texp_ident "Gbnf_parser!.StringMap.find"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[148,4949+19]..lib/grammarFunctor.ml[148,4949+23])
                                              Texp_ident "name/2016"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[148,4949+24]..lib/grammarFunctor.ml[148,4949+27])
                                              Texp_ident "map/1963"
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[150,4978+2]..lib/grammarFunctor.ml[151,4999+61])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[150,4978+6]..lib/grammarFunctor.ml[150,4978+15])
                                  Tpat_var "positions/2017"
                                expression (lib/grammarFunctor.ml[150,4978+16]..lib/grammarFunctor.ml[151,4999+61]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[150,4978+16]..lib/grammarFunctor.ml[150,4978+18])
                                        Tpat_var "nt/2019"
                                      expression (lib/grammarFunctor.ml[151,4999+4]..lib/grammarFunctor.ml[151,4999+61])
                                        Texp_field
                                        expression (lib/grammarFunctor.ml[151,4999+4]..lib/grammarFunctor.ml[151,4999+51])
                                          Texp_apply
                                          expression (lib/grammarFunctor.ml[151,4999+5]..lib/grammarFunctor.ml[151,4999+19])
                                            Texp_ident "Gbnf_parser!.StringMap.find"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[151,4999+20]..lib/grammarFunctor.ml[151,4999+36])
                                                Texp_apply
                                                expression (lib/grammarFunctor.ml[151,4999+21]..lib/grammarFunctor.ml[151,4999+26])
                                                  Texp_ident "print/1970"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[151,4999+27]..lib/grammarFunctor.ml[151,4999+32])
                                                      Texp_construct "false"
                                                      []
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[151,4999+33]..lib/grammarFunctor.ml[151,4999+35])
                                                      Texp_ident "nt/2019"
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[151,4999+37]..lib/grammarFunctor.ml[151,4999+50])
                                                Texp_field
                                                expression (lib/grammarFunctor.ml[151,4999+37]..lib/grammarFunctor.ml[151,4999+44])
                                                  Texp_ident "G/1226.grammar"
                                                "rules"
                                          ]
                                        "positions"
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[153,5062+2]..lib/grammarFunctor.ml[154,5077+18])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[153,5062+6]..lib/grammarFunctor.ml[153,5062+10])
                                  Tpat_var "init/2020"
                                expression (lib/grammarFunctor.ml[153,5062+11]..lib/grammarFunctor.ml[154,5077+18]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[153,5062+11]..lib/grammarFunctor.ml[153,5062+12])
                                        Tpat_var "f/2022"
                                      expression (lib/grammarFunctor.ml[154,5077+4]..lib/grammarFunctor.ml[154,5077+18])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[154,5077+4]..lib/grammarFunctor.ml[154,5077+14])
                                          Texp_ident "Stdlib!.Array.init"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[154,5077+15]..lib/grammarFunctor.ml[154,5077+16])
                                              Texp_ident "n/1961"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[154,5077+17]..lib/grammarFunctor.ml[154,5077+18])
                                              Texp_ident "f/2022"
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[156,5097+2]..lib/grammarFunctor.ml[157,5112+18])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[156,5097+6]..lib/grammarFunctor.ml[156,5097+10])
                                  Tpat_var "iter/2023"
                                expression (lib/grammarFunctor.ml[156,5097+11]..lib/grammarFunctor.ml[157,5112+18]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[156,5097+11]..lib/grammarFunctor.ml[156,5097+12])
                                        Tpat_var "f/2024"
                                      expression (lib/grammarFunctor.ml[157,5112+4]..lib/grammarFunctor.ml[157,5112+18])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[157,5112+4]..lib/grammarFunctor.ml[157,5112+14])
                                          Texp_ident "Gbnf_parser!.Misc.iteri"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[157,5112+15]..lib/grammarFunctor.ml[157,5112+16])
                                              Texp_ident "n/1961"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[157,5112+17]..lib/grammarFunctor.ml[157,5112+18])
                                              Texp_ident "f/2024"
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[159,5132+2]..lib/grammarFunctor.ml[160,5152+23])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[159,5132+6]..lib/grammarFunctor.ml[159,5132+10])
                                  Tpat_var "fold/2025"
                                expression (lib/grammarFunctor.ml[159,5132+11]..lib/grammarFunctor.ml[160,5152+23]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[159,5132+11]..lib/grammarFunctor.ml[159,5132+12])
                                        Tpat_var "f/2027"
                                      expression (lib/grammarFunctor.ml[159,5132+13]..lib/grammarFunctor.ml[160,5152+23]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[159,5132+13]..lib/grammarFunctor.ml[159,5132+17])
                                              Tpat_var "accu/2028"
                                            expression (lib/grammarFunctor.ml[160,5152+4]..lib/grammarFunctor.ml[160,5152+23])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[160,5152+4]..lib/grammarFunctor.ml[160,5152+14])
                                                Texp_ident "Gbnf_parser!.Misc.foldi"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[160,5152+15]..lib/grammarFunctor.ml[160,5152+16])
                                                    Texp_ident "n/1961"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[160,5152+17]..lib/grammarFunctor.ml[160,5152+18])
                                                    Texp_ident "f/2027"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[160,5152+19]..lib/grammarFunctor.ml[160,5152+23])
                                                    Texp_ident "accu/2028"
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[162,5177+2]..lib/grammarFunctor.ml[163,5191+17])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[162,5177+6]..lib/grammarFunctor.ml[162,5177+9])
                                  Tpat_var "map/2029"
                                expression (lib/grammarFunctor.ml[162,5177+10]..lib/grammarFunctor.ml[163,5191+17]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[162,5177+10]..lib/grammarFunctor.ml[162,5177+11])
                                        Tpat_var "f/2030"
                                      expression (lib/grammarFunctor.ml[163,5191+4]..lib/grammarFunctor.ml[163,5191+17])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[163,5191+4]..lib/grammarFunctor.ml[163,5191+13])
                                          Texp_ident "Gbnf_parser!.Misc.mapi"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[163,5191+14]..lib/grammarFunctor.ml[163,5191+15])
                                              Texp_ident "n/1961"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[163,5191+16]..lib/grammarFunctor.ml[163,5191+17])
                                              Texp_ident "f/2030"
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[165,5210+2]..lib/grammarFunctor.ml[168,5268+8])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[165,5210+6]..lib/grammarFunctor.ml[165,5210+11])
                                  Tpat_var "iterx/2031"
                                expression (lib/grammarFunctor.ml[165,5210+12]..lib/grammarFunctor.ml[168,5268+8]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[165,5210+12]..lib/grammarFunctor.ml[165,5210+13])
                                        Tpat_var "f/2033"
                                      expression (lib/grammarFunctor.ml[166,5226+4]..lib/grammarFunctor.ml[168,5268+8])
                                        Texp_for "nt/2034" Up
                                        expression (lib/grammarFunctor.ml[166,5226+13]..lib/grammarFunctor.ml[166,5226+18])
                                          Texp_ident "start/1960"
                                        expression (lib/grammarFunctor.ml[166,5226+22]..lib/grammarFunctor.ml[166,5226+27])
                                          Texp_apply
                                          expression (lib/grammarFunctor.ml[166,5226+24]..lib/grammarFunctor.ml[166,5226+25])
                                            Texp_ident "Stdlib!.-"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[166,5226+22]..lib/grammarFunctor.ml[166,5226+23])
                                                Texp_ident "n/1961"
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[166,5226+26]..lib/grammarFunctor.ml[166,5226+27])
                                                Texp_constant Const_int 1
                                          ]
                                        expression (lib/grammarFunctor.ml[167,5257+6]..lib/grammarFunctor.ml[167,5257+10])
                                          Texp_apply
                                          expression (lib/grammarFunctor.ml[167,5257+6]..lib/grammarFunctor.ml[167,5257+7])
                                            Texp_ident "f/2033"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[167,5257+8]..lib/grammarFunctor.ml[167,5257+10])
                                                Texp_ident "nt/2034"
                                          ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[170,5278+2]..lib/grammarFunctor.ml[171,5299+30])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[170,5278+6]..lib/grammarFunctor.ml[170,5278+11])
                                  Tpat_var "foldx/2035"
                                expression (lib/grammarFunctor.ml[170,5278+12]..lib/grammarFunctor.ml[171,5299+30]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[170,5278+12]..lib/grammarFunctor.ml[170,5278+13])
                                        Tpat_var "f/2037"
                                      expression (lib/grammarFunctor.ml[170,5278+14]..lib/grammarFunctor.ml[171,5299+30]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[170,5278+14]..lib/grammarFunctor.ml[170,5278+18])
                                              Tpat_var "accu/2038"
                                            expression (lib/grammarFunctor.ml[171,5299+4]..lib/grammarFunctor.ml[171,5299+30])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[171,5299+4]..lib/grammarFunctor.ml[171,5299+15])
                                                Texp_ident "Gbnf_parser!.Misc.foldij"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[171,5299+16]..lib/grammarFunctor.ml[171,5299+21])
                                                    Texp_ident "start/1960"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[171,5299+22]..lib/grammarFunctor.ml[171,5299+23])
                                                    Texp_ident "n/1961"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[171,5299+24]..lib/grammarFunctor.ml[171,5299+25])
                                                    Texp_ident "f/2037"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[171,5299+26]..lib/grammarFunctor.ml[171,5299+30])
                                                    Texp_ident "accu/2038"
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[173,5331+2]..lib/grammarFunctor.ml[178,5482+10])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[173,5331+6]..lib/grammarFunctor.ml[173,5331+15])
                                  Tpat_var "ocamltype/2039"
                                expression (lib/grammarFunctor.ml[173,5331+16]..lib/grammarFunctor.ml[178,5482+10]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[173,5331+16]..lib/grammarFunctor.ml[173,5331+18])
                                        Tpat_var "nt/2041"
                                      expression (lib/grammarFunctor.ml[174,5352+4]..lib/grammarFunctor.ml[178,5482+10])
                                        Texp_sequence
                                        expression (lib/grammarFunctor.ml[174,5352+4]..lib/grammarFunctor.ml[174,5352+39])
                                          Texp_assert                                          expression (lib/grammarFunctor.ml[174,5352+11]..lib/grammarFunctor.ml[174,5352+39])
                                            Texp_apply
                                            expression (lib/grammarFunctor.ml[174,5352+12]..lib/grammarFunctor.ml[174,5352+15])
                                              Texp_ident "Stdlib!.not"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[174,5352+16]..lib/grammarFunctor.ml[174,5352+38])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[174,5352+17]..lib/grammarFunctor.ml[174,5352+34])
                                                    Texp_ident "is_internal_start/1964"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[174,5352+35]..lib/grammarFunctor.ml[174,5352+37])
                                                        Texp_ident "nt/2041"
                                                  ]
                                            ]
                                        expression (lib/grammarFunctor.ml[175,5393+4]..lib/grammarFunctor.ml[178,5482+10])
                                          Texp_try
                                          expression (lib/grammarFunctor.ml[176,5401+6]..lib/grammarFunctor.ml[176,5401+58])
                                            Texp_construct "Some"
                                            [
                                              expression (lib/grammarFunctor.ml[176,5401+11]..lib/grammarFunctor.ml[176,5401+58])
                                                Texp_apply
                                                expression (lib/grammarFunctor.ml[176,5401+12]..lib/grammarFunctor.ml[176,5401+26])
                                                  Texp_ident "Gbnf_parser!.StringMap.find"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[176,5401+27]..lib/grammarFunctor.ml[176,5401+43])
                                                      Texp_apply
                                                      expression (lib/grammarFunctor.ml[176,5401+28]..lib/grammarFunctor.ml[176,5401+33])
                                                        Texp_ident "print/1970"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[176,5401+34]..lib/grammarFunctor.ml[176,5401+39])
                                                            Texp_construct "false"
                                                            []
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[176,5401+40]..lib/grammarFunctor.ml[176,5401+42])
                                                            Texp_ident "nt/2041"
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[176,5401+44]..lib/grammarFunctor.ml[176,5401+57])
                                                      Texp_field
                                                      expression (lib/grammarFunctor.ml[176,5401+44]..lib/grammarFunctor.ml[176,5401+51])
                                                        Texp_ident "G/1226.grammar"
                                                      "types"
                                                ]
                                            ]
                                          [
                                            <case>
                                              pattern (lib/grammarFunctor.ml[177,5460+9]..lib/grammarFunctor.ml[177,5460+18])
                                                Tpat_construct "Not_found"
                                                []
                                                None
                                              expression (lib/grammarFunctor.ml[178,5482+6]..lib/grammarFunctor.ml[178,5482+10])
                                                Texp_construct "None"
                                                []
                                          ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[180,5494+2]..lib/grammarFunctor.ml[186,5648+20])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[180,5494+6]..lib/grammarFunctor.ml[180,5494+31])
                                  Tpat_var "ocamltype_of_start_symbol/2042"
                                expression (lib/grammarFunctor.ml[180,5494+32]..lib/grammarFunctor.ml[186,5648+20]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[180,5494+32]..lib/grammarFunctor.ml[180,5494+34])
                                        Tpat_var "nt/2043"
                                      expression (lib/grammarFunctor.ml[181,5531+4]..lib/grammarFunctor.ml[186,5648+20])
                                        Texp_match
                                        expression (lib/grammarFunctor.ml[181,5531+10]..lib/grammarFunctor.ml[181,5531+22])
                                          Texp_apply
                                          expression (lib/grammarFunctor.ml[181,5531+10]..lib/grammarFunctor.ml[181,5531+19])
                                            Texp_ident "ocamltype/2039"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[181,5531+20]..lib/grammarFunctor.ml[181,5531+22])
                                                Texp_ident "nt/2043"
                                          ]
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[182,5559+6]..lib/grammarFunctor.ml[182,5559+14])
                                              Tpat_value
                                              pattern (lib/grammarFunctor.ml[182,5559+6]..lib/grammarFunctor.ml[182,5559+14])
                                                Tpat_construct "Some"
                                                [
                                                  pattern (lib/grammarFunctor.ml[182,5559+11]..lib/grammarFunctor.ml[182,5559+14])
                                                    Tpat_var "typ/2044"
                                                ]
                                                None
                                            expression (lib/grammarFunctor.ml[183,5577+8]..lib/grammarFunctor.ml[183,5577+11])
                                              Texp_ident "typ/2044"
                                          <case>
                                            pattern (lib/grammarFunctor.ml[184,5589+6]..lib/grammarFunctor.ml[184,5589+10])
                                              Tpat_value
                                              pattern (lib/grammarFunctor.ml[184,5589+6]..lib/grammarFunctor.ml[184,5589+10])
                                                Tpat_construct "None"
                                                []
                                                None
                                            expression (lib/grammarFunctor.ml[186,5648+8]..lib/grammarFunctor.ml[186,5648+20])
                                              Texp_assert                                              expression (lib/grammarFunctor.ml[186,5648+15]..lib/grammarFunctor.ml[186,5648+20])
                                                Texp_construct "false"
                                                []
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[188,5670+2]..lib/grammarFunctor.ml[189,5689+30])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[188,5670+6]..lib/grammarFunctor.ml[188,5670+14])
                                  Tpat_var "tabulate/2047"
                                expression (lib/grammarFunctor.ml[188,5670+15]..lib/grammarFunctor.ml[189,5689+30]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[188,5670+15]..lib/grammarFunctor.ml[188,5670+16])
                                        Tpat_var "f/2049"
                                      expression (lib/grammarFunctor.ml[189,5689+4]..lib/grammarFunctor.ml[189,5689+30])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[189,5689+4]..lib/grammarFunctor.ml[189,5689+13])
                                          Texp_ident "Stdlib!.Array.get"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[189,5689+14]..lib/grammarFunctor.ml[189,5689+30])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[189,5689+15]..lib/grammarFunctor.ml[189,5689+25])
                                                Texp_ident "Stdlib!.Array.init"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[189,5689+26]..lib/grammarFunctor.ml[189,5689+27])
                                                    Texp_ident "n/1961"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[189,5689+28]..lib/grammarFunctor.ml[189,5689+29])
                                                    Texp_ident "f/2049"
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[191,5721+2]..lib/grammarFunctor.ml[192,5766+19])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[191,5721+6]..lib/grammarFunctor.ml[191,5721+16])
                                  extra
                                    Tpat_extra_constraint
                                    core_type (lib/grammarFunctor.ml[191,5721+19]..lib/grammarFunctor.ml[191,5721+42])
                                      Ttyp_constr "array/8!"
                                      [
                                        core_type (lib/grammarFunctor.ml[191,5721+19]..lib/grammarFunctor.ml[191,5721+36])
                                          Ttyp_constr "Gbnf_parser!.Syntax.attributes"
                                          []
                                      ]
                                  Tpat_alias "attributes/2050"
                                  pattern (lib/grammarFunctor.ml[191,5721+6]..lib/grammarFunctor.ml[191,5721+16])
                                    Tpat_any
                                expression (lib/grammarFunctor.ml[192,5766+4]..lib/grammarFunctor.ml[192,5766+19])
                                  extra
                                    Texp_constraint
                                    core_type (lib/grammarFunctor.ml[191,5721+19]..lib/grammarFunctor.ml[191,5721+42])
                                      Ttyp_constr "array/8!"
                                      [
                                        core_type (lib/grammarFunctor.ml[191,5721+19]..lib/grammarFunctor.ml[191,5721+36])
                                          Ttyp_constr "Gbnf_parser!.Syntax.attributes"
                                          []
                                      ]
                                  Texp_apply
                                  expression (lib/grammarFunctor.ml[192,5766+4]..lib/grammarFunctor.ml[192,5766+14])
                                    Texp_ident "Stdlib!.Array.make"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[192,5766+15]..lib/grammarFunctor.ml[192,5766+16])
                                        Texp_ident "n/1961"
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[192,5766+17]..lib/grammarFunctor.ml[192,5766+19])
                                        Texp_construct "[]"
                                        []
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[194,5787+2]..lib/grammarFunctor.ml[198,5931+19])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[194,5787+6]..lib/grammarFunctor.ml[194,5787+8])
                                  Tpat_construct "()"
                                  []
                                  None
                                expression (lib/grammarFunctor.ml[195,5798+4]..lib/grammarFunctor.ml[198,5931+19])
                                  Texp_apply
                                  expression (lib/grammarFunctor.ml[195,5798+4]..lib/grammarFunctor.ml[195,5798+18])
                                    Texp_ident "Gbnf_parser!.StringMap.iter"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[195,5798+19]..lib/grammarFunctor.ml[198,5931+5])
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[195,5798+24]..lib/grammarFunctor.ml[195,5798+35])
                                              Tpat_var "nonterminal/2051"
                                            expression (lib/grammarFunctor.ml[195,5798+36]..lib/grammarFunctor.ml[197,5900+30]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[195,5798+36]..lib/grammarFunctor.ml[195,5798+61])
                                                    Tpat_record
                                                    [
                                                      "attributes"
                                                        pattern (lib/grammarFunctor.ml[195,5798+51]..lib/grammarFunctor.ml[195,5798+56])
                                                          Tpat_var "attrs/2052"
                                                    ]
                                                  expression (lib/grammarFunctor.ml[196,5863+6]..lib/grammarFunctor.ml[197,5900+30])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (lib/grammarFunctor.ml[196,5863+10]..lib/grammarFunctor.ml[196,5863+12])
                                                          Tpat_var "nt/2053"
                                                        expression (lib/grammarFunctor.ml[196,5863+15]..lib/grammarFunctor.ml[196,5863+33])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[196,5863+15]..lib/grammarFunctor.ml[196,5863+21])
                                                            Texp_ident "lookup/2014"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[196,5863+22]..lib/grammarFunctor.ml[196,5863+33])
                                                                Texp_ident "nonterminal/2051"
                                                          ]
                                                    ]
                                                    expression (lib/grammarFunctor.ml[197,5900+6]..lib/grammarFunctor.ml[197,5900+30])
                                                      Texp_apply
                                                      expression (lib/grammarFunctor.ml[197,5900+6]..lib/grammarFunctor.ml[197,5900+30]) ghost
                                                        Texp_ident "Stdlib!.Array.set"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[197,5900+6]..lib/grammarFunctor.ml[197,5900+16])
                                                            Texp_ident "attributes/2050"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[197,5900+18]..lib/grammarFunctor.ml[197,5900+20])
                                                            Texp_ident "nt/2053"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[197,5900+25]..lib/grammarFunctor.ml[197,5900+30])
                                                            Texp_ident "attrs/2052"
                                                      ]
                                              ]
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[198,5931+6]..lib/grammarFunctor.ml[198,5931+19])
                                        Texp_field
                                        expression (lib/grammarFunctor.ml[198,5931+6]..lib/grammarFunctor.ml[198,5931+13])
                                          Texp_ident "G/1226.grammar"
                                        "rules"
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[200,5952+2]..lib/grammarFunctor.ml[201,5974+19])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[200,5952+6]..lib/grammarFunctor.ml[200,5952+16])
                                  Tpat_var "attributes/2055"
                                expression (lib/grammarFunctor.ml[200,5952+17]..lib/grammarFunctor.ml[201,5974+19]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[200,5952+17]..lib/grammarFunctor.ml[200,5952+19])
                                        Tpat_var "nt/2056"
                                      expression (lib/grammarFunctor.ml[201,5974+4]..lib/grammarFunctor.ml[201,5974+19])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[201,5974+4]..lib/grammarFunctor.ml[201,5974+19]) ghost
                                          Texp_ident "Stdlib!.Array.get"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[201,5974+4]..lib/grammarFunctor.ml[201,5974+14])
                                              Texp_ident "attributes/2050"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[201,5974+16]..lib/grammarFunctor.ml[201,5974+18])
                                              Texp_ident "nt/2056"
                                        ]
                                  ]
                            ]
                        ]
                structure_item (lib/grammarFunctor.ml[207,6040+0]..lib/grammarFunctor.ml[207,6040+36])
                  Tstr_module
                  NonterminalMap/2063
                    module_expr (lib/grammarFunctor.ml[207,6040+24]..lib/grammarFunctor.ml[207,6040+36])
                      Tmod_ident "Gbnf_parser!.Patricia.Big"
                structure_item (lib/grammarFunctor.ml[209,6078+0]..lib/grammarFunctor.ml[209,6078+43])
                  Tstr_module
                  NonterminalSet/2110
                    module_expr (lib/grammarFunctor.ml[209,6078+24]..lib/grammarFunctor.ml[209,6078+43])
                      Tmod_ident "Gbnf_parser!.Patricia.Big.Domain"
                structure_item (lib/grammarFunctor.ml[214,6220+0]..lib/grammarFunctor.ml[466,12902+3])
                  Tstr_module
                  Terminal/2246
                    module_expr (lib/grammarFunctor.ml[214,6220+18]..lib/grammarFunctor.ml[466,12902+3])
                      module_expr (lib/grammarFunctor.ml[214,6220+18]..lib/grammarFunctor.ml[466,12902+3])
                        Tmod_structure
                        [
                          structure_item (lib/grammarFunctor.ml[216,6246+2]..lib/grammarFunctor.ml[216,6246+14])
                            Tstr_type Rec
                            [
                              type_declaration t/2111 (lib/grammarFunctor.ml[216,6246+2]..lib/grammarFunctor.ml[216,6246+14])
                                ptype_params =
                                  []
                                ptype_cstrs =
                                  []
                                ptype_kind =
                                  Ttype_abstract
                                ptype_private = Public
                                ptype_manifest =
                                  Some
                                    core_type (lib/grammarFunctor.ml[216,6246+11]..lib/grammarFunctor.ml[216,6246+14])
                                      Ttyp_constr "int/1!"
                                      []
                            ]
                          structure_item (lib/grammarFunctor.ml[218,6262+2]..lib/grammarFunctor.ml[218,6262+15])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[218,6262+6]..lib/grammarFunctor.ml[218,6262+9])
                                  Tpat_var "t2i/2112"
                                expression (lib/grammarFunctor.ml[218,6262+10]..lib/grammarFunctor.ml[218,6262+15]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[218,6262+10]..lib/grammarFunctor.ml[218,6262+11])
                                        Tpat_var "i/2114"
                                      expression (lib/grammarFunctor.ml[218,6262+14]..lib/grammarFunctor.ml[218,6262+15])
                                        Texp_ident "i/2114"
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[219,6278+2]..lib/grammarFunctor.ml[219,6278+15])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[219,6278+6]..lib/grammarFunctor.ml[219,6278+9])
                                  Tpat_var "i2t/2115"
                                expression (lib/grammarFunctor.ml[219,6278+10]..lib/grammarFunctor.ml[219,6278+15]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[219,6278+10]..lib/grammarFunctor.ml[219,6278+11])
                                        Tpat_var "i/2117"
                                      expression (lib/grammarFunctor.ml[219,6278+14]..lib/grammarFunctor.ml[219,6278+15])
                                        Texp_ident "i/2117"
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[221,6295+2]..lib/grammarFunctor.ml[221,6295+19])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[221,6295+6]..lib/grammarFunctor.ml[221,6295+13])
                                  Tpat_var "compare/2118"
                                expression (lib/grammarFunctor.ml[221,6295+16]..lib/grammarFunctor.ml[221,6295+19])
                                  Texp_ident "Stdlib!.-"
                            ]
                          structure_item (lib/grammarFunctor.ml[223,6316+2]..lib/grammarFunctor.ml[224,6352+15])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[223,6316+6]..lib/grammarFunctor.ml[223,6316+11])
                                  Tpat_var "equal/2119"
                                expression (lib/grammarFunctor.ml[223,6316+12]..lib/grammarFunctor.ml[224,6352+15]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[223,6316+13]..lib/grammarFunctor.ml[223,6316+17])
                                        extra
                                          Tpat_extra_constraint
                                          core_type (lib/grammarFunctor.ml[223,6316+20]..lib/grammarFunctor.ml[223,6316+21])
                                            Ttyp_constr "t/2111"
                                            []
                                        Tpat_alias "tok1/2121"
                                        pattern (lib/grammarFunctor.ml[223,6316+13]..lib/grammarFunctor.ml[223,6316+17])
                                          Tpat_any
                                      expression (lib/grammarFunctor.ml[223,6316+23]..lib/grammarFunctor.ml[224,6352+15]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[223,6316+24]..lib/grammarFunctor.ml[223,6316+28])
                                              extra
                                                Tpat_extra_constraint
                                                core_type (lib/grammarFunctor.ml[223,6316+31]..lib/grammarFunctor.ml[223,6316+32])
                                                  Ttyp_constr "t/2111"
                                                  []
                                              Tpat_alias "tok2/2122"
                                              pattern (lib/grammarFunctor.ml[223,6316+24]..lib/grammarFunctor.ml[223,6316+28])
                                                Tpat_any
                                            expression (lib/grammarFunctor.ml[224,6352+4]..lib/grammarFunctor.ml[224,6352+15])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[224,6352+9]..lib/grammarFunctor.ml[224,6352+10])
                                                Texp_ident "Stdlib!.="
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[224,6352+4]..lib/grammarFunctor.ml[224,6352+8])
                                                    Texp_ident "tok1/2121"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[224,6352+11]..lib/grammarFunctor.ml[224,6352+15])
                                                    Texp_ident "tok2/2122"
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[239,6971+2]..lib/grammarFunctor.ml[245,7185+43])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[239,6971+6]..lib/grammarFunctor.ml[239,6971+63])
                                  Tpat_tuple
                                  [
                                    pattern (lib/grammarFunctor.ml[239,6971+7]..lib/grammarFunctor.ml[239,6971+8])
                                      extra
                                        Tpat_extra_constraint
                                        core_type (lib/grammarFunctor.ml[239,6971+11]..lib/grammarFunctor.ml[239,6971+14])
                                          Ttyp_constr "int/1!"
                                          []
                                      Tpat_alias "n/2123"
                                      pattern (lib/grammarFunctor.ml[239,6971+7]..lib/grammarFunctor.ml[239,6971+8])
                                        Tpat_any
                                    pattern (lib/grammarFunctor.ml[239,6971+18]..lib/grammarFunctor.ml[239,6971+22])
                                      extra
                                        Tpat_extra_constraint
                                        core_type (lib/grammarFunctor.ml[239,6971+25]..lib/grammarFunctor.ml[239,6971+37])
                                          Ttyp_constr "array/8!"
                                          [
                                            core_type (lib/grammarFunctor.ml[239,6971+25]..lib/grammarFunctor.ml[239,6971+31])
                                              Ttyp_constr "string/15!"
                                              []
                                          ]
                                      Tpat_alias "name/2124"
                                      pattern (lib/grammarFunctor.ml[239,6971+18]..lib/grammarFunctor.ml[239,6971+22])
                                        Tpat_any
                                    pattern (lib/grammarFunctor.ml[239,6971+41]..lib/grammarFunctor.ml[239,6971+44])
                                      extra
                                        Tpat_extra_constraint
                                        core_type (lib/grammarFunctor.ml[239,6971+47]..lib/grammarFunctor.ml[239,6971+62])
                                          Ttyp_constr "Gbnf_parser!.StringMap.t"
                                          [
                                            core_type (lib/grammarFunctor.ml[239,6971+47]..lib/grammarFunctor.ml[239,6971+50])
                                              Ttyp_constr "int/1!"
                                              []
                                          ]
                                      Tpat_alias "map/2125"
                                      pattern (lib/grammarFunctor.ml[239,6971+41]..lib/grammarFunctor.ml[239,6971+44])
                                        Tpat_any
                                  ]
                                expression (lib/grammarFunctor.ml[240,7037+4]..lib/grammarFunctor.ml[245,7185+43])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/grammarFunctor.ml[240,7037+8]..lib/grammarFunctor.ml[240,7037+14])
                                        Tpat_var "tokens/2126"
                                      expression (lib/grammarFunctor.ml[240,7037+17]..lib/grammarFunctor.ml[240,7037+31])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[240,7037+17]..lib/grammarFunctor.ml[240,7037+23])
                                          Texp_ident "Gbnf_parser!.BasicSyntax.tokens"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[240,7037+24]..lib/grammarFunctor.ml[240,7037+31])
                                              Texp_ident "G/1226.grammar"
                                        ]
                                  ]
                                  expression (lib/grammarFunctor.ml[241,7072+4]..lib/grammarFunctor.ml[245,7185+43])
                                    Texp_match
                                    expression (lib/grammarFunctor.ml[241,7072+10]..lib/grammarFunctor.ml[241,7072+16])
                                      Texp_ident "tokens/2126"
                                    [
                                      <case>
                                        pattern (lib/grammarFunctor.ml[242,7094+6]..lib/grammarFunctor.ml[242,7094+8])
                                          Tpat_value
                                          pattern (lib/grammarFunctor.ml[242,7094+6]..lib/grammarFunctor.ml[242,7094+8])
                                            Tpat_construct "[]"
                                            []
                                            None
                                        <when>
                                          expression (lib/grammarFunctor.ml[242,7094+14]..lib/grammarFunctor.ml[242,7094+21])
                                            Texp_ident "G/1226.verbose"
                                        expression (lib/grammarFunctor.ml[243,7119+8]..lib/grammarFunctor.ml[243,7119+54])
                                          Texp_apply
                                          expression (lib/grammarFunctor.ml[243,7119+8]..lib/grammarFunctor.ml[243,7119+19])
                                            Texp_ident "Gbnf_parser!.Error.error"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[243,7119+20]..lib/grammarFunctor.ml[243,7119+22])
                                                Texp_construct "[]"
                                                []
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[243,7119+23]..lib/grammarFunctor.ml[243,7119+54])
                                                Texp_construct "CamlinternalFormatBasics.Format"
                                                [
                                                  expression (lib/grammarFunctor.ml[243,7119+23]..lib/grammarFunctor.ml[243,7119+54]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                    [
                                                      expression (lib/grammarFunctor.ml[243,7119+23]..lib/grammarFunctor.ml[243,7119+54]) ghost
                                                        Texp_constant Const_string("no tokens have been declared.",(lib/grammarFunctor.ml[243,7119+23]..lib/grammarFunctor.ml[243,7119+54]) ghost,None)
                                                      expression (lib/grammarFunctor.ml[243,7119+23]..lib/grammarFunctor.ml[243,7119+54]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                        []
                                                    ]
                                                  expression (lib/grammarFunctor.ml[243,7119+23]..lib/grammarFunctor.ml[243,7119+54]) ghost
                                                    Texp_constant Const_string("no tokens have been declared.",(lib/grammarFunctor.ml[243,7119+23]..lib/grammarFunctor.ml[243,7119+54]) ghost,None)
                                                ]
                                          ]
                                      <case>
                                        pattern (lib/grammarFunctor.ml[244,7174+6]..lib/grammarFunctor.ml[244,7174+7])
                                          Tpat_value
                                          pattern (lib/grammarFunctor.ml[244,7174+6]..lib/grammarFunctor.ml[244,7174+7])
                                            Tpat_any
                                        expression (lib/grammarFunctor.ml[245,7185+8]..lib/grammarFunctor.ml[245,7185+43])
                                          Texp_apply
                                          expression (lib/grammarFunctor.ml[245,7185+8]..lib/grammarFunctor.ml[245,7185+13])
                                            Texp_ident "index/1227"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[245,7185+14]..lib/grammarFunctor.ml[245,7185+43])
                                                Texp_apply
                                                expression (lib/grammarFunctor.ml[245,7185+33]..lib/grammarFunctor.ml[245,7185+34])
                                                  Texp_ident "Stdlib!.@"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[245,7185+15]..lib/grammarFunctor.ml[245,7185+32])
                                                      Texp_construct "::"
                                                      [
                                                        expression (lib/grammarFunctor.ml[245,7185+15]..lib/grammarFunctor.ml[245,7185+22])
                                                          Texp_constant Const_string("error",(lib/grammarFunctor.ml[245,7185+16]..lib/grammarFunctor.ml[245,7185+21]),None)
                                                        expression (lib/grammarFunctor.ml[245,7185+26]..lib/grammarFunctor.ml[245,7185+32])
                                                          Texp_ident "tokens/2126"
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[245,7185+35]..lib/grammarFunctor.ml[245,7185+42])
                                                      Texp_construct "::"
                                                      [
                                                        expression (lib/grammarFunctor.ml[245,7185+37]..lib/grammarFunctor.ml[245,7185+40])
                                                          Texp_constant Const_string("#",(lib/grammarFunctor.ml[245,7185+38]..lib/grammarFunctor.ml[245,7185+39]),None)
                                                        expression (lib/grammarFunctor.ml[245,7185+41]..lib/grammarFunctor.ml[245,7185+42]) ghost
                                                          Texp_construct "[]"
                                                          []
                                                      ]
                                                ]
                                          ]
                                    ]
                            ]
                          structure_item (lib/grammarFunctor.ml[247,7230+2]..lib/grammarFunctor.ml[248,7248+14])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[247,7230+6]..lib/grammarFunctor.ml[247,7230+11])
                                  Tpat_var "print/2127"
                                expression (lib/grammarFunctor.ml[247,7230+12]..lib/grammarFunctor.ml[248,7248+14]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[247,7230+12]..lib/grammarFunctor.ml[247,7230+15])
                                        Tpat_var "tok/2128"
                                      expression (lib/grammarFunctor.ml[248,7248+4]..lib/grammarFunctor.ml[248,7248+14])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[248,7248+4]..lib/grammarFunctor.ml[248,7248+14]) ghost
                                          Texp_ident "Stdlib!.Array.get"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[248,7248+4]..lib/grammarFunctor.ml[248,7248+8])
                                              Texp_ident "name/2124"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[248,7248+10]..lib/grammarFunctor.ml[248,7248+13])
                                              Texp_ident "tok/2128"
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[250,7264+2]..lib/grammarFunctor.ml[251,7284+27])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[250,7264+6]..lib/grammarFunctor.ml[250,7264+12])
                                  Tpat_var "lookup/2129"
                                expression (lib/grammarFunctor.ml[250,7264+13]..lib/grammarFunctor.ml[251,7284+27]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[250,7264+13]..lib/grammarFunctor.ml[250,7264+17])
                                        Tpat_var "name/2131"
                                      expression (lib/grammarFunctor.ml[251,7284+4]..lib/grammarFunctor.ml[251,7284+27])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[251,7284+4]..lib/grammarFunctor.ml[251,7284+18])
                                          Texp_ident "Gbnf_parser!.StringMap.find"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[251,7284+19]..lib/grammarFunctor.ml[251,7284+23])
                                              Texp_ident "name/2131"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[251,7284+24]..lib/grammarFunctor.ml[251,7284+27])
                                              Texp_ident "map/2125"
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[253,7313+2]..lib/grammarFunctor.ml[254,7327+14])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[253,7313+6]..lib/grammarFunctor.ml[253,7313+11])
                                  Tpat_var "sharp/2132"
                                expression (lib/grammarFunctor.ml[254,7327+4]..lib/grammarFunctor.ml[254,7327+14])
                                  Texp_apply
                                  expression (lib/grammarFunctor.ml[254,7327+4]..lib/grammarFunctor.ml[254,7327+10])
                                    Texp_ident "lookup/2129"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[254,7327+11]..lib/grammarFunctor.ml[254,7327+14])
                                        Texp_constant Const_string("#",(lib/grammarFunctor.ml[254,7327+12]..lib/grammarFunctor.ml[254,7327+13]),None)
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[256,7343+2]..lib/grammarFunctor.ml[257,7357+18])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[256,7343+6]..lib/grammarFunctor.ml[256,7343+11])
                                  Tpat_var "error/2133"
                                expression (lib/grammarFunctor.ml[257,7357+4]..lib/grammarFunctor.ml[257,7357+18])
                                  Texp_apply
                                  expression (lib/grammarFunctor.ml[257,7357+4]..lib/grammarFunctor.ml[257,7357+10])
                                    Texp_ident "lookup/2129"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[257,7357+11]..lib/grammarFunctor.ml[257,7357+18])
                                        Texp_constant Const_string("error",(lib/grammarFunctor.ml[257,7357+12]..lib/grammarFunctor.ml[257,7357+17]),None)
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[259,7377+2]..lib/grammarFunctor.ml[260,7396+34])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[259,7377+6]..lib/grammarFunctor.ml[259,7377+12])
                                  Tpat_var "pseudo/2134"
                                expression (lib/grammarFunctor.ml[259,7377+13]..lib/grammarFunctor.ml[260,7396+34]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[259,7377+13]..lib/grammarFunctor.ml[259,7377+16])
                                        Tpat_var "tok/2136"
                                      expression (lib/grammarFunctor.ml[260,7396+4]..lib/grammarFunctor.ml[260,7396+34])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[260,7396+18]..lib/grammarFunctor.ml[260,7396+20])
                                          Texp_ident "Stdlib!.||"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[260,7396+4]..lib/grammarFunctor.ml[260,7396+17])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[260,7396+9]..lib/grammarFunctor.ml[260,7396+10])
                                                Texp_ident "Stdlib!.="
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[260,7396+5]..lib/grammarFunctor.ml[260,7396+8])
                                                    Texp_ident "tok/2136"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[260,7396+11]..lib/grammarFunctor.ml[260,7396+16])
                                                    Texp_ident "sharp/2132"
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[260,7396+21]..lib/grammarFunctor.ml[260,7396+34])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[260,7396+26]..lib/grammarFunctor.ml[260,7396+27])
                                                Texp_ident "Stdlib!.="
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[260,7396+22]..lib/grammarFunctor.ml[260,7396+25])
                                                    Texp_ident "tok/2136"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[260,7396+28]..lib/grammarFunctor.ml[260,7396+33])
                                                    Texp_ident "error/2133"
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[262,7432+2]..lib/grammarFunctor.ml[263,7447+28])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[262,7432+6]..lib/grammarFunctor.ml[262,7432+10])
                                  Tpat_var "real/2137"
                                expression (lib/grammarFunctor.ml[262,7432+11]..lib/grammarFunctor.ml[263,7447+28]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[262,7432+11]..lib/grammarFunctor.ml[262,7432+12])
                                        Tpat_var "t/2139"
                                      expression (lib/grammarFunctor.ml[263,7447+4]..lib/grammarFunctor.ml[263,7447+28])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[263,7447+15]..lib/grammarFunctor.ml[263,7447+17])
                                          Texp_ident "Stdlib!.&&"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[263,7447+4]..lib/grammarFunctor.ml[263,7447+14])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[263,7447+10]..lib/grammarFunctor.ml[263,7447+12])
                                                Texp_ident "Stdlib!.<>"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[263,7447+4]..lib/grammarFunctor.ml[263,7447+9])
                                                    Texp_ident "error/2133"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[263,7447+13]..lib/grammarFunctor.ml[263,7447+14])
                                                    Texp_ident "t/2139"
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[263,7447+18]..lib/grammarFunctor.ml[263,7447+28])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[263,7447+20]..lib/grammarFunctor.ml[263,7447+22])
                                                Texp_ident "Stdlib!.<>"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[263,7447+18]..lib/grammarFunctor.ml[263,7447+19])
                                                    Texp_ident "t/2139"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[263,7447+23]..lib/grammarFunctor.ml[263,7447+28])
                                                    Texp_ident "sharp/2132"
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[265,7477+2]..lib/grammarFunctor.ml[266,7499+16])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[265,7477+6]..lib/grammarFunctor.ml[265,7477+15])
                                  Tpat_var "non_error/2140"
                                expression (lib/grammarFunctor.ml[265,7477+16]..lib/grammarFunctor.ml[266,7499+16]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[265,7477+16]..lib/grammarFunctor.ml[265,7477+19])
                                        Tpat_var "tok/2142"
                                      expression (lib/grammarFunctor.ml[266,7499+4]..lib/grammarFunctor.ml[266,7499+16])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[266,7499+8]..lib/grammarFunctor.ml[266,7499+10])
                                          Texp_ident "Stdlib!.<>"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[266,7499+4]..lib/grammarFunctor.ml[266,7499+7])
                                              Texp_ident "tok/2142"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[266,7499+11]..lib/grammarFunctor.ml[266,7499+16])
                                              Texp_ident "error/2133"
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[268,7517+2]..lib/grammarFunctor.ml[287,8138+5])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[268,7517+6]..lib/grammarFunctor.ml[268,7517+22])
                                  Tpat_var "token_properties/2143"
                                expression (lib/grammarFunctor.ml[269,7542+4]..lib/grammarFunctor.ml[287,8138+5])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/grammarFunctor.ml[269,7542+8]..lib/grammarFunctor.ml[269,7542+31])
                                        Tpat_var "not_so_dummy_properties/2144"
                                      expression (lib/grammarFunctor.ml[270,7612+6]..lib/grammarFunctor.ml[279,7930+7])
                                        Texp_record
                                          fields =
                                            [
                                              "tk_filename"
                                                expression (lib/grammarFunctor.ml[271,7620+27]..lib/grammarFunctor.ml[271,7620+43])
                                                  Texp_constant Const_string("__primitives__",(lib/grammarFunctor.ml[271,7620+28]..lib/grammarFunctor.ml[271,7620+42]),None)
                                              "tk_ocamltype"
                                                expression (lib/grammarFunctor.ml[274,7756+27]..lib/grammarFunctor.ml[274,7756+31])
                                                  Texp_construct "None"
                                                  []
                                              "tk_position"
                                                expression (lib/grammarFunctor.ml[276,7822+27]..lib/grammarFunctor.ml[276,7822+42])
                                                  Texp_ident "Gbnf_parser!.Positions.dummy"
                                              "tk_alias"
                                                expression (lib/grammarFunctor.ml[278,7897+27]..lib/grammarFunctor.ml[278,7897+31])
                                                  Texp_construct "None"
                                                  []
                                              "tk_attributes"
                                                expression (lib/grammarFunctor.ml[277,7866+27]..lib/grammarFunctor.ml[277,7866+29])
                                                  Texp_construct "[]"
                                                  []
                                              "tk_associativity"
                                                expression (lib/grammarFunctor.ml[273,7713+27]..lib/grammarFunctor.ml[273,7713+41])
                                                  Texp_construct "UndefinedAssoc"
                                                  []
                                              "tk_precedence"
                                                expression (lib/grammarFunctor.ml[272,7665+27]..lib/grammarFunctor.ml[272,7665+46])
                                                  Texp_construct "UndefinedPrecedence"
                                                  []
                                              "tk_is_declared"
                                                expression (lib/grammarFunctor.ml[275,7789+27]..lib/grammarFunctor.ml[275,7789+31])
                                                  Texp_construct "true"
                                                  []
                                            ]
                                          representation =
                                            Record_regular
                                          extended_expression =
                                            None
                                  ]
                                  expression (lib/grammarFunctor.ml[281,7945+4]..lib/grammarFunctor.ml[287,8138+5])
                                    Texp_apply
                                    expression (lib/grammarFunctor.ml[281,7945+4]..lib/grammarFunctor.ml[281,7945+14])
                                      Texp_ident "Stdlib!.Array.init"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/grammarFunctor.ml[281,7945+15]..lib/grammarFunctor.ml[281,7945+16])
                                          Texp_ident "n/2123"
                                      <arg>
                                        Nolabel
                                        expression (lib/grammarFunctor.ml[281,7945+17]..lib/grammarFunctor.ml[287,8138+5])
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (lib/grammarFunctor.ml[281,7945+22]..lib/grammarFunctor.ml[281,7945+25])
                                                Tpat_var "tok/2145"
                                              expression (lib/grammarFunctor.ml[282,7974+6]..lib/grammarFunctor.ml[286,8105+32])
                                                Texp_try
                                                expression (lib/grammarFunctor.ml[283,7984+9]..lib/grammarFunctor.ml[283,7984+49])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[283,7984+9]..lib/grammarFunctor.ml[283,7984+23])
                                                    Texp_ident "Gbnf_parser!.StringMap.find"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[283,7984+24]..lib/grammarFunctor.ml[283,7984+34])
                                                        Texp_apply
                                                        expression (lib/grammarFunctor.ml[283,7984+24]..lib/grammarFunctor.ml[283,7984+34]) ghost
                                                          Texp_ident "Stdlib!.Array.get"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[283,7984+24]..lib/grammarFunctor.ml[283,7984+28])
                                                              Texp_ident "name/2124"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[283,7984+30]..lib/grammarFunctor.ml[283,7984+33])
                                                              Texp_ident "tok/2145"
                                                        ]
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[283,7984+35]..lib/grammarFunctor.ml[283,7984+49])
                                                        Texp_field
                                                        expression (lib/grammarFunctor.ml[283,7984+35]..lib/grammarFunctor.ml[283,7984+42])
                                                          Texp_ident "G/1226.grammar"
                                                        "tokens"
                                                  ]
                                                [
                                                  <case>
                                                    pattern (lib/grammarFunctor.ml[284,8034+12]..lib/grammarFunctor.ml[284,8034+21])
                                                      Tpat_construct "Not_found"
                                                      []
                                                      None
                                                    expression (lib/grammarFunctor.ml[285,8059+9]..lib/grammarFunctor.ml[286,8105+32])
                                                      Texp_sequence
                                                      expression (lib/grammarFunctor.ml[285,8059+9]..lib/grammarFunctor.ml[285,8059+44])
                                                        Texp_assert                                                        expression (lib/grammarFunctor.ml[285,8059+16]..lib/grammarFunctor.ml[285,8059+44])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[285,8059+29]..lib/grammarFunctor.ml[285,8059+31])
                                                            Texp_ident "Stdlib!.||"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[285,8059+17]..lib/grammarFunctor.ml[285,8059+28])
                                                                Texp_apply
                                                                expression (lib/grammarFunctor.ml[285,8059+21]..lib/grammarFunctor.ml[285,8059+22])
                                                                  Texp_ident "Stdlib!.="
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[285,8059+17]..lib/grammarFunctor.ml[285,8059+20])
                                                                      Texp_ident "tok/2145"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[285,8059+23]..lib/grammarFunctor.ml[285,8059+28])
                                                                      Texp_ident "sharp/2132"
                                                                ]
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[285,8059+32]..lib/grammarFunctor.ml[285,8059+43])
                                                                Texp_apply
                                                                expression (lib/grammarFunctor.ml[285,8059+36]..lib/grammarFunctor.ml[285,8059+37])
                                                                  Texp_ident "Stdlib!.="
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[285,8059+32]..lib/grammarFunctor.ml[285,8059+35])
                                                                      Texp_ident "tok/2145"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[285,8059+38]..lib/grammarFunctor.ml[285,8059+43])
                                                                      Texp_ident "error/2133"
                                                                ]
                                                          ]
                                                      expression (lib/grammarFunctor.ml[286,8105+9]..lib/grammarFunctor.ml[286,8105+32])
                                                        Texp_ident "not_so_dummy_properties/2144"
                                                ]
                                          ]
                                    ]
                            ]
                          structure_item (lib/grammarFunctor.ml[295,8314+2]..lib/grammarFunctor.ml[296,8343+60])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[295,8314+6]..lib/grammarFunctor.ml[295,8314+22])
                                  Tpat_var "precedence_level/2146"
                                expression (lib/grammarFunctor.ml[295,8314+23]..lib/grammarFunctor.ml[296,8343+60]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[295,8314+23]..lib/grammarFunctor.ml[295,8314+26])
                                        Tpat_var "tok/2148"
                                      expression (lib/grammarFunctor.ml[296,8343+4]..lib/grammarFunctor.ml[296,8343+60])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[296,8343+4]..lib/grammarFunctor.ml[296,8343+25])
                                          Texp_ident "TokPrecedence/1946.levelip"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[296,8343+26]..lib/grammarFunctor.ml[296,8343+37])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[296,8343+27]..lib/grammarFunctor.ml[296,8343+32])
                                                Texp_ident "print/2127"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[296,8343+33]..lib/grammarFunctor.ml[296,8343+36])
                                                    Texp_ident "tok/2148"
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[296,8343+38]..lib/grammarFunctor.ml[296,8343+60])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[296,8343+38]..lib/grammarFunctor.ml[296,8343+60]) ghost
                                                Texp_ident "Stdlib!.Array.get"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[296,8343+38]..lib/grammarFunctor.ml[296,8343+54])
                                                    Texp_ident "token_properties/2143"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[296,8343+56]..lib/grammarFunctor.ml[296,8343+59])
                                                    Texp_ident "tok/2148"
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[298,8405+2]..lib/grammarFunctor.ml[299,8431+43])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[298,8405+6]..lib/grammarFunctor.ml[298,8405+19])
                                  Tpat_var "associativity/2149"
                                expression (lib/grammarFunctor.ml[298,8405+20]..lib/grammarFunctor.ml[299,8431+43]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[298,8405+20]..lib/grammarFunctor.ml[298,8405+23])
                                        Tpat_var "tok/2151"
                                      expression (lib/grammarFunctor.ml[299,8431+4]..lib/grammarFunctor.ml[299,8431+43])
                                        Texp_field
                                        expression (lib/grammarFunctor.ml[299,8431+4]..lib/grammarFunctor.ml[299,8431+26])
                                          Texp_apply
                                          expression (lib/grammarFunctor.ml[299,8431+4]..lib/grammarFunctor.ml[299,8431+26]) ghost
                                            Texp_ident "Stdlib!.Array.get"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[299,8431+4]..lib/grammarFunctor.ml[299,8431+20])
                                                Texp_ident "token_properties/2143"
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[299,8431+22]..lib/grammarFunctor.ml[299,8431+25])
                                                Texp_ident "tok/2151"
                                          ]
                                        "tk_associativity"
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[301,8476+2]..lib/grammarFunctor.ml[302,8498+39])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[301,8476+6]..lib/grammarFunctor.ml[301,8476+15])
                                  Tpat_var "ocamltype/2152"
                                expression (lib/grammarFunctor.ml[301,8476+16]..lib/grammarFunctor.ml[302,8498+39]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[301,8476+16]..lib/grammarFunctor.ml[301,8476+19])
                                        Tpat_var "tok/2154"
                                      expression (lib/grammarFunctor.ml[302,8498+4]..lib/grammarFunctor.ml[302,8498+39])
                                        Texp_field
                                        expression (lib/grammarFunctor.ml[302,8498+4]..lib/grammarFunctor.ml[302,8498+26])
                                          Texp_apply
                                          expression (lib/grammarFunctor.ml[302,8498+4]..lib/grammarFunctor.ml[302,8498+26]) ghost
                                            Texp_ident "Stdlib!.Array.get"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[302,8498+4]..lib/grammarFunctor.ml[302,8498+20])
                                                Texp_ident "token_properties/2143"
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[302,8498+22]..lib/grammarFunctor.ml[302,8498+25])
                                                Texp_ident "tok/2154"
                                          ]
                                        "tk_ocamltype"
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[304,8539+2]..lib/grammarFunctor.ml[305,8554+18])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[304,8539+6]..lib/grammarFunctor.ml[304,8539+10])
                                  Tpat_var "init/2155"
                                expression (lib/grammarFunctor.ml[304,8539+11]..lib/grammarFunctor.ml[305,8554+18]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[304,8539+11]..lib/grammarFunctor.ml[304,8539+12])
                                        Tpat_var "f/2157"
                                      expression (lib/grammarFunctor.ml[305,8554+4]..lib/grammarFunctor.ml[305,8554+18])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[305,8554+4]..lib/grammarFunctor.ml[305,8554+14])
                                          Texp_ident "Stdlib!.Array.init"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[305,8554+15]..lib/grammarFunctor.ml[305,8554+16])
                                              Texp_ident "n/2123"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[305,8554+17]..lib/grammarFunctor.ml[305,8554+18])
                                              Texp_ident "f/2157"
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[307,8574+2]..lib/grammarFunctor.ml[308,8589+18])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[307,8574+6]..lib/grammarFunctor.ml[307,8574+10])
                                  Tpat_var "iter/2158"
                                expression (lib/grammarFunctor.ml[307,8574+11]..lib/grammarFunctor.ml[308,8589+18]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[307,8574+11]..lib/grammarFunctor.ml[307,8574+12])
                                        Tpat_var "f/2159"
                                      expression (lib/grammarFunctor.ml[308,8589+4]..lib/grammarFunctor.ml[308,8589+18])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[308,8589+4]..lib/grammarFunctor.ml[308,8589+14])
                                          Texp_ident "Gbnf_parser!.Misc.iteri"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[308,8589+15]..lib/grammarFunctor.ml[308,8589+16])
                                              Texp_ident "n/2123"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[308,8589+17]..lib/grammarFunctor.ml[308,8589+18])
                                              Texp_ident "f/2159"
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[310,8609+2]..lib/grammarFunctor.ml[311,8629+23])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[310,8609+6]..lib/grammarFunctor.ml[310,8609+10])
                                  Tpat_var "fold/2160"
                                expression (lib/grammarFunctor.ml[310,8609+11]..lib/grammarFunctor.ml[311,8629+23]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[310,8609+11]..lib/grammarFunctor.ml[310,8609+12])
                                        Tpat_var "f/2162"
                                      expression (lib/grammarFunctor.ml[310,8609+13]..lib/grammarFunctor.ml[311,8629+23]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[310,8609+13]..lib/grammarFunctor.ml[310,8609+17])
                                              Tpat_var "accu/2163"
                                            expression (lib/grammarFunctor.ml[311,8629+4]..lib/grammarFunctor.ml[311,8629+23])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[311,8629+4]..lib/grammarFunctor.ml[311,8629+14])
                                                Texp_ident "Gbnf_parser!.Misc.foldi"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[311,8629+15]..lib/grammarFunctor.ml[311,8629+16])
                                                    Texp_ident "n/2123"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[311,8629+17]..lib/grammarFunctor.ml[311,8629+18])
                                                    Texp_ident "f/2162"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[311,8629+19]..lib/grammarFunctor.ml[311,8629+23])
                                                    Texp_ident "accu/2163"
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[313,8654+2]..lib/grammarFunctor.ml[314,8668+17])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[313,8654+6]..lib/grammarFunctor.ml[313,8654+9])
                                  Tpat_var "map/2164"
                                expression (lib/grammarFunctor.ml[313,8654+10]..lib/grammarFunctor.ml[314,8668+17]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[313,8654+10]..lib/grammarFunctor.ml[313,8654+11])
                                        Tpat_var "f/2165"
                                      expression (lib/grammarFunctor.ml[314,8668+4]..lib/grammarFunctor.ml[314,8668+17])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[314,8668+4]..lib/grammarFunctor.ml[314,8668+13])
                                          Texp_ident "Gbnf_parser!.Misc.mapi"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[314,8668+14]..lib/grammarFunctor.ml[314,8668+15])
                                              Texp_ident "n/2123"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[314,8668+16]..lib/grammarFunctor.ml[314,8668+17])
                                              Texp_ident "f/2165"
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[316,8687+2]..lib/grammarFunctor.ml[317,8698+26])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[316,8687+6]..lib/grammarFunctor.ml[316,8687+8])
                                  Tpat_construct "()"
                                  []
                                  None
                                expression (lib/grammarFunctor.ml[317,8698+4]..lib/grammarFunctor.ml[317,8698+26])
                                  Texp_assert                                  expression (lib/grammarFunctor.ml[317,8698+11]..lib/grammarFunctor.ml[317,8698+26])
                                    Texp_apply
                                    expression (lib/grammarFunctor.ml[317,8698+18]..lib/grammarFunctor.ml[317,8698+19])
                                      Texp_ident "Stdlib!.="
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/grammarFunctor.ml[317,8698+12]..lib/grammarFunctor.ml[317,8698+17])
                                          Texp_ident "sharp/2132"
                                      <arg>
                                        Nolabel
                                        expression (lib/grammarFunctor.ml[317,8698+20]..lib/grammarFunctor.ml[317,8698+25])
                                          Texp_apply
                                          expression (lib/grammarFunctor.ml[317,8698+22]..lib/grammarFunctor.ml[317,8698+23])
                                            Texp_ident "Stdlib!.-"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[317,8698+20]..lib/grammarFunctor.ml[317,8698+21])
                                                Texp_ident "n/2123"
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[317,8698+24]..lib/grammarFunctor.ml[317,8698+25])
                                                Texp_constant Const_int 1
                                          ]
                                    ]
                            ]
                          structure_item (lib/grammarFunctor.ml[318,8725+2]..lib/grammarFunctor.ml[319,8746+27])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[318,8725+6]..lib/grammarFunctor.ml[318,8725+11])
                                  Tpat_var "foldx/2166"
                                expression (lib/grammarFunctor.ml[318,8725+12]..lib/grammarFunctor.ml[319,8746+27]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[318,8725+12]..lib/grammarFunctor.ml[318,8725+13])
                                        Tpat_var "f/2168"
                                      expression (lib/grammarFunctor.ml[318,8725+14]..lib/grammarFunctor.ml[319,8746+27]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[318,8725+14]..lib/grammarFunctor.ml[318,8725+18])
                                              Tpat_var "accu/2169"
                                            expression (lib/grammarFunctor.ml[319,8746+4]..lib/grammarFunctor.ml[319,8746+27])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[319,8746+4]..lib/grammarFunctor.ml[319,8746+14])
                                                Texp_ident "Gbnf_parser!.Misc.foldi"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[319,8746+15]..lib/grammarFunctor.ml[319,8746+20])
                                                    Texp_ident "sharp/2132"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[319,8746+21]..lib/grammarFunctor.ml[319,8746+22])
                                                    Texp_ident "f/2168"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[319,8746+23]..lib/grammarFunctor.ml[319,8746+27])
                                                    Texp_ident "accu/2169"
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[320,8774+2]..lib/grammarFunctor.ml[321,8789+21])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[320,8774+6]..lib/grammarFunctor.ml[320,8774+10])
                                  Tpat_var "mapx/2170"
                                expression (lib/grammarFunctor.ml[320,8774+11]..lib/grammarFunctor.ml[321,8789+21]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[320,8774+11]..lib/grammarFunctor.ml[320,8774+12])
                                        Tpat_var "f/2172"
                                      expression (lib/grammarFunctor.ml[321,8789+4]..lib/grammarFunctor.ml[321,8789+21])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[321,8789+4]..lib/grammarFunctor.ml[321,8789+13])
                                          Texp_ident "Gbnf_parser!.Misc.mapi"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[321,8789+14]..lib/grammarFunctor.ml[321,8789+19])
                                              Texp_ident "sharp/2132"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[321,8789+20]..lib/grammarFunctor.ml[321,8789+21])
                                              Texp_ident "f/2172"
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[323,8812+2]..lib/grammarFunctor.ml[324,8823+22])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[323,8812+6]..lib/grammarFunctor.ml[323,8812+8])
                                  Tpat_construct "()"
                                  []
                                  None
                                expression (lib/grammarFunctor.ml[324,8823+4]..lib/grammarFunctor.ml[324,8823+22])
                                  Texp_assert                                  expression (lib/grammarFunctor.ml[324,8823+11]..lib/grammarFunctor.ml[324,8823+22])
                                    Texp_apply
                                    expression (lib/grammarFunctor.ml[324,8823+18]..lib/grammarFunctor.ml[324,8823+19])
                                      Texp_ident "Stdlib!.="
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/grammarFunctor.ml[324,8823+12]..lib/grammarFunctor.ml[324,8823+17])
                                          Texp_ident "error/2133"
                                      <arg>
                                        Nolabel
                                        expression (lib/grammarFunctor.ml[324,8823+20]..lib/grammarFunctor.ml[324,8823+21])
                                          Texp_constant Const_int 0
                                    ]
                            ]
                          structure_item (lib/grammarFunctor.ml[325,8846+2]..lib/grammarFunctor.ml[328,8900+8])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[325,8846+6]..lib/grammarFunctor.ml[325,8846+15])
                                  Tpat_var "iter_real/2173"
                                expression (lib/grammarFunctor.ml[325,8846+16]..lib/grammarFunctor.ml[328,8900+8]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[325,8846+16]..lib/grammarFunctor.ml[325,8846+17])
                                        Tpat_var "f/2175"
                                      expression (lib/grammarFunctor.ml[326,8866+4]..lib/grammarFunctor.ml[328,8900+8])
                                        Texp_for "i/2176" Up
                                        expression (lib/grammarFunctor.ml[326,8866+12]..lib/grammarFunctor.ml[326,8866+13])
                                          Texp_constant Const_int 1
                                        expression (lib/grammarFunctor.ml[326,8866+17]..lib/grammarFunctor.ml[326,8866+20])
                                          Texp_apply
                                          expression (lib/grammarFunctor.ml[326,8866+18]..lib/grammarFunctor.ml[326,8866+19])
                                            Texp_ident "Stdlib!.-"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[326,8866+17]..lib/grammarFunctor.ml[326,8866+18])
                                                Texp_ident "n/2123"
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[326,8866+19]..lib/grammarFunctor.ml[326,8866+20])
                                                Texp_constant Const_int 2
                                          ]
                                        expression (lib/grammarFunctor.ml[327,8890+6]..lib/grammarFunctor.ml[327,8890+9])
                                          Texp_apply
                                          expression (lib/grammarFunctor.ml[327,8890+6]..lib/grammarFunctor.ml[327,8890+7])
                                            Texp_ident "f/2175"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[327,8890+8]..lib/grammarFunctor.ml[327,8890+9])
                                                Texp_ident "i/2176"
                                          ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[330,8910+2]..lib/grammarFunctor.ml[337,9126+18])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[330,8910+6]..lib/grammarFunctor.ml[330,8910+29])
                                  Tpat_var "tokens_without_an_alias/2177"
                                expression (lib/grammarFunctor.ml[331,8942+4]..lib/grammarFunctor.ml[337,9126+18])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/grammarFunctor.ml[331,8942+8]..lib/grammarFunctor.ml[331,8942+12])
                                        Tpat_var "accu/2178"
                                      expression (lib/grammarFunctor.ml[331,8942+15]..lib/grammarFunctor.ml[331,8942+21])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[331,8942+15]..lib/grammarFunctor.ml[331,8942+18])
                                          Texp_ident "Stdlib!.ref"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[331,8942+19]..lib/grammarFunctor.ml[331,8942+21])
                                              Texp_construct "[]"
                                              []
                                        ]
                                  ]
                                  expression (lib/grammarFunctor.ml[332,8967+4]..lib/grammarFunctor.ml[337,9126+18])
                                    Texp_sequence
                                    expression (lib/grammarFunctor.ml[332,8967+4]..lib/grammarFunctor.ml[336,9117+7])
                                      Texp_apply
                                      expression (lib/grammarFunctor.ml[332,8967+4]..lib/grammarFunctor.ml[332,8967+13])
                                        Texp_ident "iter_real/2173"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[332,8967+14]..lib/grammarFunctor.ml[336,9117+7])
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (lib/grammarFunctor.ml[332,8967+24]..lib/grammarFunctor.ml[332,8967+27])
                                                  Tpat_var "tok/2179"
                                                expression (lib/grammarFunctor.ml[333,8998+6]..lib/grammarFunctor.ml[335,9088+28])
                                                  Texp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (lib/grammarFunctor.ml[333,8998+10]..lib/grammarFunctor.ml[333,8998+20])
                                                        Tpat_var "properties/2180"
                                                      expression (lib/grammarFunctor.ml[333,8998+23]..lib/grammarFunctor.ml[333,8998+45])
                                                        Texp_apply
                                                        expression (lib/grammarFunctor.ml[333,8998+23]..lib/grammarFunctor.ml[333,8998+45]) ghost
                                                          Texp_ident "Stdlib!.Array.get"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[333,8998+23]..lib/grammarFunctor.ml[333,8998+39])
                                                              Texp_ident "token_properties/2143"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[333,8998+41]..lib/grammarFunctor.ml[333,8998+44])
                                                              Texp_ident "tok/2179"
                                                        ]
                                                  ]
                                                  expression (lib/grammarFunctor.ml[334,9047+6]..lib/grammarFunctor.ml[335,9088+28])
                                                    Texp_ifthenelse
                                                    expression (lib/grammarFunctor.ml[334,9047+9]..lib/grammarFunctor.ml[334,9047+35])
                                                      Texp_apply
                                                      expression (lib/grammarFunctor.ml[334,9047+29]..lib/grammarFunctor.ml[334,9047+30])
                                                        Texp_ident "Stdlib!.="
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[334,9047+9]..lib/grammarFunctor.ml[334,9047+28])
                                                            Texp_field
                                                            expression (lib/grammarFunctor.ml[334,9047+9]..lib/grammarFunctor.ml[334,9047+19])
                                                              Texp_ident "properties/2180"
                                                            "tk_alias"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[334,9047+31]..lib/grammarFunctor.ml[334,9047+35])
                                                            Texp_construct "None"
                                                            []
                                                      ]
                                                    expression (lib/grammarFunctor.ml[335,9088+8]..lib/grammarFunctor.ml[335,9088+28])
                                                      Texp_apply
                                                      expression (lib/grammarFunctor.ml[335,9088+13]..lib/grammarFunctor.ml[335,9088+15])
                                                        Texp_ident "Stdlib!.:="
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[335,9088+8]..lib/grammarFunctor.ml[335,9088+12])
                                                            Texp_ident "accu/2178"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[335,9088+16]..lib/grammarFunctor.ml[335,9088+28])
                                                            Texp_construct "::"
                                                            [
                                                              expression (lib/grammarFunctor.ml[335,9088+16]..lib/grammarFunctor.ml[335,9088+19])
                                                                Texp_ident "tok/2179"
                                                              expression (lib/grammarFunctor.ml[335,9088+23]..lib/grammarFunctor.ml[335,9088+28])
                                                                Texp_apply
                                                                expression (lib/grammarFunctor.ml[335,9088+23]..lib/grammarFunctor.ml[335,9088+24])
                                                                  Texp_ident "Stdlib!.!"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[335,9088+24]..lib/grammarFunctor.ml[335,9088+28])
                                                                      Texp_ident "accu/2178"
                                                                ]
                                                            ]
                                                      ]
                                                    None
                                            ]
                                      ]
                                    expression (lib/grammarFunctor.ml[337,9126+4]..lib/grammarFunctor.ml[337,9126+18])
                                      Texp_apply
                                      expression (lib/grammarFunctor.ml[337,9126+4]..lib/grammarFunctor.ml[337,9126+12])
                                        Texp_ident "Stdlib!.List.rev"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[337,9126+13]..lib/grammarFunctor.ml[337,9126+18])
                                            Texp_apply
                                            expression (lib/grammarFunctor.ml[337,9126+13]..lib/grammarFunctor.ml[337,9126+14])
                                              Texp_ident "Stdlib!.!"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[337,9126+14]..lib/grammarFunctor.ml[337,9126+18])
                                                  Texp_ident "accu/2178"
                                            ]
                                      ]
                            ]
                          structure_item (lib/grammarFunctor.ml[349,9539+2]..lib/grammarFunctor.ml[350,9572+32])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[349,9539+6]..lib/grammarFunctor.ml[349,9539+30])
                                  Tpat_var "every_token_has_an_alias/2181"
                                expression (lib/grammarFunctor.ml[350,9572+4]..lib/grammarFunctor.ml[350,9572+32])
                                  Texp_apply
                                  expression (lib/grammarFunctor.ml[350,9572+28]..lib/grammarFunctor.ml[350,9572+29])
                                    Texp_ident "Stdlib!.="
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[350,9572+4]..lib/grammarFunctor.ml[350,9572+27])
                                        Texp_ident "tokens_without_an_alias/2177"
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[350,9572+30]..lib/grammarFunctor.ml[350,9572+32])
                                        Texp_construct "[]"
                                        []
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[352,9606+2]..lib/grammarFunctor.ml[353,9624+35])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[352,9606+6]..lib/grammarFunctor.ml[352,9606+11])
                                  Tpat_var "alias/2182"
                                expression (lib/grammarFunctor.ml[352,9606+12]..lib/grammarFunctor.ml[353,9624+35]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[352,9606+12]..lib/grammarFunctor.ml[352,9606+15])
                                        Tpat_var "tok/2184"
                                      expression (lib/grammarFunctor.ml[353,9624+4]..lib/grammarFunctor.ml[353,9624+35])
                                        Texp_field
                                        expression (lib/grammarFunctor.ml[353,9624+4]..lib/grammarFunctor.ml[353,9624+26])
                                          Texp_apply
                                          expression (lib/grammarFunctor.ml[353,9624+4]..lib/grammarFunctor.ml[353,9624+26]) ghost
                                            Texp_ident "Stdlib!.Array.get"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[353,9624+4]..lib/grammarFunctor.ml[353,9624+20])
                                                Texp_ident "token_properties/2143"
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[353,9624+22]..lib/grammarFunctor.ml[353,9624+25])
                                                Texp_ident "tok/2184"
                                          ]
                                        "tk_alias"
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[355,9661+3]..lib/grammarFunctor.ml[355,9661+28])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[355,9661+7]..lib/grammarFunctor.ml[355,9661+21])
                                  Tpat_var "unquoted_alias/2185"
                                expression (lib/grammarFunctor.ml[355,9661+22]..lib/grammarFunctor.ml[355,9661+28]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[355,9661+22]..lib/grammarFunctor.ml[355,9661+23])
                                        Tpat_any
                                      expression (lib/grammarFunctor.ml[355,9661+26]..lib/grammarFunctor.ml[355,9661+28])
                                        Texp_constant Const_string("",(lib/grammarFunctor.ml[355,9661+27]..lib/grammarFunctor.ml[355,9661+27]),None)
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[367,10140+3]..lib/grammarFunctor.ml[367,10140+28])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[367,10140+7]..lib/grammarFunctor.ml[367,10140+21])
                                  Tpat_var "print_concrete/2188"
                                expression (lib/grammarFunctor.ml[367,10140+22]..lib/grammarFunctor.ml[367,10140+28]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[367,10140+22]..lib/grammarFunctor.ml[367,10140+23])
                                        Tpat_any
                                      expression (lib/grammarFunctor.ml[367,10140+26]..lib/grammarFunctor.ml[367,10140+28])
                                        Texp_constant Const_string("",(lib/grammarFunctor.ml[367,10140+27]..lib/grammarFunctor.ml[367,10140+27]),None)
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[380,10568+2]..lib/grammarFunctor.ml[384,10636+10])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[380,10568+6]..lib/grammarFunctor.ml[380,10568+9])
                                  Tpat_var "eof/2191"
                                expression (lib/grammarFunctor.ml[381,10580+4]..lib/grammarFunctor.ml[384,10636+10])
                                  Texp_try
                                  expression (lib/grammarFunctor.ml[382,10588+6]..lib/grammarFunctor.ml[382,10588+25])
                                    Texp_construct "Some"
                                    [
                                      expression (lib/grammarFunctor.ml[382,10588+11]..lib/grammarFunctor.ml[382,10588+25])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[382,10588+12]..lib/grammarFunctor.ml[382,10588+18])
                                          Texp_ident "lookup/2129"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[382,10588+19]..lib/grammarFunctor.ml[382,10588+24])
                                              Texp_constant Const_string("EOF",(lib/grammarFunctor.ml[382,10588+20]..lib/grammarFunctor.ml[382,10588+23]),None)
                                        ]
                                    ]
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[383,10614+9]..lib/grammarFunctor.ml[383,10614+18])
                                        Tpat_construct "Not_found"
                                        []
                                        None
                                      expression (lib/grammarFunctor.ml[384,10636+6]..lib/grammarFunctor.ml[384,10636+10])
                                        Texp_construct "None"
                                        []
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[386,10648+2]..lib/grammarFunctor.ml[387,10671+40])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[386,10648+6]..lib/grammarFunctor.ml[386,10648+16])
                                  Tpat_var "attributes/2192"
                                expression (lib/grammarFunctor.ml[386,10648+17]..lib/grammarFunctor.ml[387,10671+40]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[386,10648+17]..lib/grammarFunctor.ml[386,10648+20])
                                        Tpat_var "tok/2194"
                                      expression (lib/grammarFunctor.ml[387,10671+4]..lib/grammarFunctor.ml[387,10671+40])
                                        Texp_field
                                        expression (lib/grammarFunctor.ml[387,10671+4]..lib/grammarFunctor.ml[387,10671+26])
                                          Texp_apply
                                          expression (lib/grammarFunctor.ml[387,10671+4]..lib/grammarFunctor.ml[387,10671+26]) ghost
                                            Texp_ident "Stdlib!.Array.get"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[387,10671+4]..lib/grammarFunctor.ml[387,10671+20])
                                                Texp_ident "token_properties/2143"
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[387,10671+22]..lib/grammarFunctor.ml[387,10671+25])
                                                Texp_ident "tok/2194"
                                          ]
                                        "tk_attributes"
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[395,11007+2]..lib/grammarFunctor.ml[464,12895+5])
                            Tstr_module
                            Word/2245
                              module_expr (lib/grammarFunctor.ml[395,11007+14]..lib/grammarFunctor.ml[464,12895+5])
                                Tmod_functor "X/2195"
                                module_type (lib/grammarFunctor.ml[395,11007+19]..lib/grammarFunctor.ml[395,11007+26])
                                  Tmty_signature
                                  []
                                module_expr (lib/grammarFunctor.ml[395,11007+30]..lib/grammarFunctor.ml[464,12895+5])
                                  module_expr (lib/grammarFunctor.ml[395,11007+30]..lib/grammarFunctor.ml[464,12895+5])
                                    Tmod_structure
                                    [
                                      structure_item (lib/grammarFunctor.ml[408,11719+4]..lib/grammarFunctor.ml[409,11732+23])
                                        Tstr_value Nonrec
                                        [
                                          <def>
                                            pattern (lib/grammarFunctor.ml[408,11719+8]..lib/grammarFunctor.ml[408,11719+10])
                                              Tpat_construct "()"
                                              []
                                              None
                                            expression (lib/grammarFunctor.ml[409,11732+6]..lib/grammarFunctor.ml[409,11732+23])
                                              Texp_assert                                              expression (lib/grammarFunctor.ml[409,11732+13]..lib/grammarFunctor.ml[409,11732+23])
                                                Texp_apply
                                                expression (lib/grammarFunctor.ml[409,11732+16]..lib/grammarFunctor.ml[409,11732+18])
                                                  Texp_ident "Stdlib!.<="
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[409,11732+14]..lib/grammarFunctor.ml[409,11732+15])
                                                      Texp_ident "n/2123"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[409,11732+19]..lib/grammarFunctor.ml[409,11732+22])
                                                      Texp_constant Const_int 256
                                                ]
                                        ]
                                      structure_item (lib/grammarFunctor.ml[411,11757+4]..lib/grammarFunctor.ml[412,11827+33])
                                        Tstr_value Nonrec
                                        [
                                          <def>
                                            pattern (lib/grammarFunctor.ml[411,11757+8]..lib/grammarFunctor.ml[411,11757+67])
                                              Tpat_tuple
                                              [
                                                pattern (lib/grammarFunctor.ml[411,11757+9]..lib/grammarFunctor.ml[411,11757+15])
                                                  extra
                                                    Tpat_extra_constraint
                                                    core_type (lib/grammarFunctor.ml[411,11757+18]..lib/grammarFunctor.ml[411,11757+31])
                                                      Ttyp_arrow
                                                      Nolabel
                                                      core_type (lib/grammarFunctor.ml[411,11757+18]..lib/grammarFunctor.ml[411,11757+24])
                                                        Ttyp_constr "string/15!"
                                                        []
                                                      core_type (lib/grammarFunctor.ml[411,11757+28]..lib/grammarFunctor.ml[411,11757+31])
                                                        Ttyp_constr "int/1!"
                                                        []
                                                  Tpat_alias "encode/2196"
                                                  pattern (lib/grammarFunctor.ml[411,11757+9]..lib/grammarFunctor.ml[411,11757+15])
                                                    Tpat_any
                                                pattern (lib/grammarFunctor.ml[411,11757+35]..lib/grammarFunctor.ml[411,11757+41])
                                                  extra
                                                    Tpat_extra_constraint
                                                    core_type (lib/grammarFunctor.ml[411,11757+44]..lib/grammarFunctor.ml[411,11757+57])
                                                      Ttyp_arrow
                                                      Nolabel
                                                      core_type (lib/grammarFunctor.ml[411,11757+44]..lib/grammarFunctor.ml[411,11757+47])
                                                        Ttyp_constr "int/1!"
                                                        []
                                                      core_type (lib/grammarFunctor.ml[411,11757+51]..lib/grammarFunctor.ml[411,11757+57])
                                                        Ttyp_constr "string/15!"
                                                        []
                                                  Tpat_alias "decode/2197"
                                                  pattern (lib/grammarFunctor.ml[411,11757+35]..lib/grammarFunctor.ml[411,11757+41])
                                                    Tpat_any
                                                pattern (lib/grammarFunctor.ml[411,11757+60]..lib/grammarFunctor.ml[411,11757+67])
                                                  Tpat_var "verbose/2198"
                                              ]
                                            expression (lib/grammarFunctor.ml[412,11827+6]..lib/grammarFunctor.ml[412,11827+33])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[412,11827+6]..lib/grammarFunctor.ml[412,11827+28])
                                                Texp_ident "Gbnf_parser!.Misc.new_encode_decode"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[412,11827+29]..lib/grammarFunctor.ml[412,11827+33])
                                                    Texp_constant Const_int 1024
                                              ]
                                        ]
                                      structure_item (lib/grammarFunctor.ml[414,11862+4]..lib/grammarFunctor.ml[415,11878+9])
                                        Tstr_type Rec
                                        [
                                          type_declaration word/2199 (lib/grammarFunctor.ml[414,11862+4]..lib/grammarFunctor.ml[415,11878+9])
                                            ptype_params =
                                              []
                                            ptype_cstrs =
                                              []
                                            ptype_kind =
                                              Ttype_abstract
                                            ptype_private = Public
                                            ptype_manifest =
                                              Some
                                                core_type (lib/grammarFunctor.ml[415,11878+6]..lib/grammarFunctor.ml[415,11878+9])
                                                  Ttyp_constr "int/1!"
                                                  []
                                        ]
                                      structure_item (lib/grammarFunctor.ml[417,11889+4]..lib/grammarFunctor.ml[418,11907+15])
                                        Tstr_value Nonrec
                                        [
                                          <def>
                                            pattern (lib/grammarFunctor.ml[417,11889+8]..lib/grammarFunctor.ml[417,11889+15])
                                              Tpat_var "epsilon/2200"
                                            expression (lib/grammarFunctor.ml[418,11907+6]..lib/grammarFunctor.ml[418,11907+15])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[418,11907+6]..lib/grammarFunctor.ml[418,11907+12])
                                                Texp_ident "encode/2196"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[418,11907+13]..lib/grammarFunctor.ml[418,11907+15])
                                                    Texp_constant Const_string("",(lib/grammarFunctor.ml[418,11907+14]..lib/grammarFunctor.ml[418,11907+14]),None)
                                              ]
                                        ]
                                      structure_item (lib/grammarFunctor.ml[420,11924+4]..lib/grammarFunctor.ml[421,11946+41])
                                        Tstr_value Nonrec
                                        [
                                          <def>
                                            pattern (lib/grammarFunctor.ml[420,11924+8]..lib/grammarFunctor.ml[420,11924+17])
                                              Tpat_var "singleton/2201"
                                            expression (lib/grammarFunctor.ml[420,11924+18]..lib/grammarFunctor.ml[421,11946+41]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[420,11924+18]..lib/grammarFunctor.ml[420,11924+19])
                                                    Tpat_var "t/2203"
                                                  expression (lib/grammarFunctor.ml[421,11946+6]..lib/grammarFunctor.ml[421,11946+41])
                                                    Texp_apply
                                                    expression (lib/grammarFunctor.ml[421,11946+6]..lib/grammarFunctor.ml[421,11946+12])
                                                      Texp_ident "encode/2196"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[421,11946+13]..lib/grammarFunctor.ml[421,11946+41])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[421,11946+14]..lib/grammarFunctor.ml[421,11946+25])
                                                            Texp_ident "Stdlib!.String.make"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[421,11946+26]..lib/grammarFunctor.ml[421,11946+27])
                                                                Texp_constant Const_int 1
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[421,11946+28]..lib/grammarFunctor.ml[421,11946+40])
                                                                Texp_apply
                                                                expression (lib/grammarFunctor.ml[421,11946+29]..lib/grammarFunctor.ml[421,11946+37])
                                                                  Texp_ident "Stdlib!.Char.chr"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[421,11946+38]..lib/grammarFunctor.ml[421,11946+39])
                                                                      Texp_ident "t/2203"
                                                                ]
                                                          ]
                                                    ]
                                              ]
                                        ]
                                      structure_item (lib/grammarFunctor.ml[423,11989+4]..lib/grammarFunctor.ml[431,12173+24])
                                        Tstr_value Nonrec
                                        [
                                          <def>
                                            pattern (lib/grammarFunctor.ml[423,11989+8]..lib/grammarFunctor.ml[423,11989+14])
                                              Tpat_var "append/2215"
                                            expression (lib/grammarFunctor.ml[423,11989+15]..lib/grammarFunctor.ml[431,12173+24]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[423,11989+15]..lib/grammarFunctor.ml[423,11989+17])
                                                    Tpat_var "i1/2217"
                                                  expression (lib/grammarFunctor.ml[423,11989+18]..lib/grammarFunctor.ml[431,12173+24]) ghost
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (lib/grammarFunctor.ml[423,11989+18]..lib/grammarFunctor.ml[423,11989+20])
                                                          Tpat_var "i2/2218"
                                                        expression (lib/grammarFunctor.ml[424,12012+6]..lib/grammarFunctor.ml[431,12173+24])
                                                          Texp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (lib/grammarFunctor.ml[424,12012+10]..lib/grammarFunctor.ml[424,12012+12])
                                                                Tpat_var "w1/2219"
                                                              expression (lib/grammarFunctor.ml[424,12012+15]..lib/grammarFunctor.ml[424,12012+24])
                                                                Texp_apply
                                                                expression (lib/grammarFunctor.ml[424,12012+15]..lib/grammarFunctor.ml[424,12012+21])
                                                                  Texp_ident "decode/2197"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[424,12012+22]..lib/grammarFunctor.ml[424,12012+24])
                                                                      Texp_ident "i1/2217"
                                                                ]
                                                            <def>
                                                              pattern (lib/grammarFunctor.ml[425,12037+10]..lib/grammarFunctor.ml[425,12037+12])
                                                                Tpat_var "w2/2220"
                                                              expression (lib/grammarFunctor.ml[425,12037+15]..lib/grammarFunctor.ml[425,12037+24])
                                                                Texp_apply
                                                                expression (lib/grammarFunctor.ml[425,12037+15]..lib/grammarFunctor.ml[425,12037+21])
                                                                  Texp_ident "decode/2197"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[425,12037+22]..lib/grammarFunctor.ml[425,12037+24])
                                                                      Texp_ident "i2/2218"
                                                                ]
                                                          ]
                                                          expression (lib/grammarFunctor.ml[426,12065+6]..lib/grammarFunctor.ml[431,12173+24])
                                                            Texp_ifthenelse
                                                            expression (lib/grammarFunctor.ml[426,12065+9]..lib/grammarFunctor.ml[426,12065+29])
                                                              Texp_apply
                                                              expression (lib/grammarFunctor.ml[426,12065+26]..lib/grammarFunctor.ml[426,12065+27])
                                                                Texp_ident "Stdlib!.="
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/grammarFunctor.ml[426,12065+9]..lib/grammarFunctor.ml[426,12065+25])
                                                                    Texp_apply
                                                                    expression (lib/grammarFunctor.ml[426,12065+9]..lib/grammarFunctor.ml[426,12065+22])
                                                                      Texp_ident "Stdlib!.String.length"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (lib/grammarFunctor.ml[426,12065+23]..lib/grammarFunctor.ml[426,12065+25])
                                                                          Texp_ident "w1/2219"
                                                                    ]
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/grammarFunctor.ml[426,12065+28]..lib/grammarFunctor.ml[426,12065+29])
                                                                    Texp_constant Const_int 0
                                                              ]
                                                            expression (lib/grammarFunctor.ml[427,12100+8]..lib/grammarFunctor.ml[427,12100+10])
                                                              Texp_ident "i2/2218"
                                                            Some
                                                              expression (lib/grammarFunctor.ml[428,12111+11]..lib/grammarFunctor.ml[431,12173+24])
                                                                Texp_ifthenelse
                                                                expression (lib/grammarFunctor.ml[428,12111+14]..lib/grammarFunctor.ml[428,12111+34])
                                                                  Texp_apply
                                                                  expression (lib/grammarFunctor.ml[428,12111+31]..lib/grammarFunctor.ml[428,12111+32])
                                                                    Texp_ident "Stdlib!.="
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[428,12111+14]..lib/grammarFunctor.ml[428,12111+30])
                                                                        Texp_apply
                                                                        expression (lib/grammarFunctor.ml[428,12111+14]..lib/grammarFunctor.ml[428,12111+27])
                                                                          Texp_ident "Stdlib!.String.length"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (lib/grammarFunctor.ml[428,12111+28]..lib/grammarFunctor.ml[428,12111+30])
                                                                              Texp_ident "w2/2220"
                                                                        ]
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[428,12111+33]..lib/grammarFunctor.ml[428,12111+34])
                                                                        Texp_constant Const_int 0
                                                                  ]
                                                                expression (lib/grammarFunctor.ml[429,12151+8]..lib/grammarFunctor.ml[429,12151+10])
                                                                  Texp_ident "i1/2217"
                                                                Some
                                                                  expression (lib/grammarFunctor.ml[431,12173+8]..lib/grammarFunctor.ml[431,12173+24])
                                                                    Texp_apply
                                                                    expression (lib/grammarFunctor.ml[431,12173+8]..lib/grammarFunctor.ml[431,12173+14])
                                                                      Texp_ident "encode/2196"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (lib/grammarFunctor.ml[431,12173+15]..lib/grammarFunctor.ml[431,12173+24])
                                                                          Texp_apply
                                                                          expression (lib/grammarFunctor.ml[431,12173+19]..lib/grammarFunctor.ml[431,12173+20])
                                                                            Texp_ident "Stdlib!.^"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (lib/grammarFunctor.ml[431,12173+16]..lib/grammarFunctor.ml[431,12173+18])
                                                                                Texp_ident "w1/2219"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (lib/grammarFunctor.ml[431,12173+21]..lib/grammarFunctor.ml[431,12173+23])
                                                                                Texp_ident "w2/2220"
                                                                          ]
                                                                    ]
                                                    ]
                                              ]
                                        ]
                                      structure_item (lib/grammarFunctor.ml[433,12199+4]..lib/grammarFunctor.ml[434,12218+30])
                                        Tstr_value Nonrec
                                        [
                                          <def>
                                            pattern (lib/grammarFunctor.ml[433,12199+8]..lib/grammarFunctor.ml[433,12199+14])
                                              Tpat_var "length/2221"
                                            expression (lib/grammarFunctor.ml[433,12199+15]..lib/grammarFunctor.ml[434,12218+30]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[433,12199+15]..lib/grammarFunctor.ml[433,12199+16])
                                                    Tpat_var "i/2223"
                                                  expression (lib/grammarFunctor.ml[434,12218+6]..lib/grammarFunctor.ml[434,12218+30])
                                                    Texp_apply
                                                    expression (lib/grammarFunctor.ml[434,12218+6]..lib/grammarFunctor.ml[434,12218+19])
                                                      Texp_ident "Stdlib!.String.length"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[434,12218+20]..lib/grammarFunctor.ml[434,12218+30])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[434,12218+21]..lib/grammarFunctor.ml[434,12218+27])
                                                            Texp_ident "decode/2197"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[434,12218+28]..lib/grammarFunctor.ml[434,12218+29])
                                                                Texp_ident "i/2223"
                                                          ]
                                                    ]
                                              ]
                                        ]
                                      structure_item (lib/grammarFunctor.ml[436,12250+4]..lib/grammarFunctor.ml[441,12365+9])
                                        Tstr_value Nonrec
                                        [
                                          <def>
                                            pattern (lib/grammarFunctor.ml[436,12250+8]..lib/grammarFunctor.ml[436,12250+13])
                                              Tpat_var "first/2224"
                                            expression (lib/grammarFunctor.ml[436,12250+14]..lib/grammarFunctor.ml[441,12365+9]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[436,12250+14]..lib/grammarFunctor.ml[436,12250+15])
                                                    Tpat_var "i/2226"
                                                  expression (lib/grammarFunctor.ml[436,12250+16]..lib/grammarFunctor.ml[441,12365+9]) ghost
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (lib/grammarFunctor.ml[436,12250+16]..lib/grammarFunctor.ml[436,12250+17])
                                                          Tpat_var "z/2227"
                                                        expression (lib/grammarFunctor.ml[437,12270+6]..lib/grammarFunctor.ml[441,12365+9])
                                                          Texp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (lib/grammarFunctor.ml[437,12270+10]..lib/grammarFunctor.ml[437,12270+11])
                                                                Tpat_var "w/2228"
                                                              expression (lib/grammarFunctor.ml[437,12270+14]..lib/grammarFunctor.ml[437,12270+22])
                                                                Texp_apply
                                                                expression (lib/grammarFunctor.ml[437,12270+14]..lib/grammarFunctor.ml[437,12270+20])
                                                                  Texp_ident "decode/2197"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[437,12270+21]..lib/grammarFunctor.ml[437,12270+22])
                                                                      Texp_ident "i/2226"
                                                                ]
                                                          ]
                                                          expression (lib/grammarFunctor.ml[438,12296+6]..lib/grammarFunctor.ml[441,12365+9])
                                                            Texp_ifthenelse
                                                            expression (lib/grammarFunctor.ml[438,12296+9]..lib/grammarFunctor.ml[438,12296+28])
                                                              Texp_apply
                                                              expression (lib/grammarFunctor.ml[438,12296+25]..lib/grammarFunctor.ml[438,12296+26])
                                                                Texp_ident "Stdlib!.>"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/grammarFunctor.ml[438,12296+9]..lib/grammarFunctor.ml[438,12296+24])
                                                                    Texp_apply
                                                                    expression (lib/grammarFunctor.ml[438,12296+9]..lib/grammarFunctor.ml[438,12296+22])
                                                                      Texp_ident "Stdlib!.String.length"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (lib/grammarFunctor.ml[438,12296+23]..lib/grammarFunctor.ml[438,12296+24])
                                                                          Texp_ident "w/2228"
                                                                    ]
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/grammarFunctor.ml[438,12296+27]..lib/grammarFunctor.ml[438,12296+28])
                                                                    Texp_constant Const_int 0
                                                              ]
                                                            expression (lib/grammarFunctor.ml[439,12330+8]..lib/grammarFunctor.ml[439,12330+23])
                                                              Texp_apply
                                                              expression (lib/grammarFunctor.ml[439,12330+8]..lib/grammarFunctor.ml[439,12330+17])
                                                                Texp_ident "Stdlib!.Char.code"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/grammarFunctor.ml[439,12330+18]..lib/grammarFunctor.ml[439,12330+23])
                                                                    Texp_apply
                                                                    expression (lib/grammarFunctor.ml[439,12330+18]..lib/grammarFunctor.ml[439,12330+23]) ghost
                                                                      Texp_ident "Stdlib!.String.get"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (lib/grammarFunctor.ml[439,12330+18]..lib/grammarFunctor.ml[439,12330+19])
                                                                          Texp_ident "w/2228"
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (lib/grammarFunctor.ml[439,12330+21]..lib/grammarFunctor.ml[439,12330+22])
                                                                          Texp_constant Const_int 0
                                                                    ]
                                                              ]
                                                            Some
                                                              expression (lib/grammarFunctor.ml[441,12365+8]..lib/grammarFunctor.ml[441,12365+9])
                                                                Texp_ident "z/2227"
                                                    ]
                                              ]
                                        ]
                                      structure_item (lib/grammarFunctor.ml[443,12376+4]..lib/grammarFunctor.ml[447,12447+47])
                                        Tstr_value Rec
                                        [
                                          <def>
                                            pattern (lib/grammarFunctor.ml[443,12376+12]..lib/grammarFunctor.ml[443,12376+20])
                                              Tpat_var "elements/2229"
                                            expression (lib/grammarFunctor.ml[443,12376+21]..lib/grammarFunctor.ml[447,12447+47]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[443,12376+21]..lib/grammarFunctor.ml[443,12376+22])
                                                    Tpat_var "i/2230"
                                                  expression (lib/grammarFunctor.ml[443,12376+23]..lib/grammarFunctor.ml[447,12447+47]) ghost
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (lib/grammarFunctor.ml[443,12376+23]..lib/grammarFunctor.ml[443,12376+24])
                                                          Tpat_var "n/2231"
                                                        expression (lib/grammarFunctor.ml[443,12376+25]..lib/grammarFunctor.ml[447,12447+47]) ghost
                                                          Texp_function
                                                          Nolabel
                                                          [
                                                            <case>
                                                              pattern (lib/grammarFunctor.ml[443,12376+25]..lib/grammarFunctor.ml[443,12376+26])
                                                                Tpat_var "w/2232"
                                                              expression (lib/grammarFunctor.ml[444,12405+6]..lib/grammarFunctor.ml[447,12447+47])
                                                                Texp_ifthenelse
                                                                expression (lib/grammarFunctor.ml[444,12405+9]..lib/grammarFunctor.ml[444,12405+14])
                                                                  Texp_apply
                                                                  expression (lib/grammarFunctor.ml[444,12405+11]..lib/grammarFunctor.ml[444,12405+12])
                                                                    Texp_ident "Stdlib!.="
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[444,12405+9]..lib/grammarFunctor.ml[444,12405+10])
                                                                        Texp_ident "i/2230"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[444,12405+13]..lib/grammarFunctor.ml[444,12405+14])
                                                                        Texp_ident "n/2231"
                                                                  ]
                                                                expression (lib/grammarFunctor.ml[445,12425+8]..lib/grammarFunctor.ml[445,12425+10])
                                                                  Texp_construct "[]"
                                                                  []
                                                                Some
                                                                  expression (lib/grammarFunctor.ml[447,12447+8]..lib/grammarFunctor.ml[447,12447+47])
                                                                    Texp_construct "::"
                                                                    [
                                                                      expression (lib/grammarFunctor.ml[447,12447+8]..lib/grammarFunctor.ml[447,12447+23])
                                                                        Texp_apply
                                                                        expression (lib/grammarFunctor.ml[447,12447+8]..lib/grammarFunctor.ml[447,12447+17])
                                                                          Texp_ident "Stdlib!.Char.code"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (lib/grammarFunctor.ml[447,12447+18]..lib/grammarFunctor.ml[447,12447+23])
                                                                              Texp_apply
                                                                              expression (lib/grammarFunctor.ml[447,12447+18]..lib/grammarFunctor.ml[447,12447+23]) ghost
                                                                                Texp_ident "Stdlib!.String.get"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (lib/grammarFunctor.ml[447,12447+18]..lib/grammarFunctor.ml[447,12447+19])
                                                                                    Texp_ident "w/2232"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (lib/grammarFunctor.ml[447,12447+21]..lib/grammarFunctor.ml[447,12447+22])
                                                                                    Texp_ident "i/2230"
                                                                              ]
                                                                        ]
                                                                      expression (lib/grammarFunctor.ml[447,12447+27]..lib/grammarFunctor.ml[447,12447+47])
                                                                        Texp_apply
                                                                        expression (lib/grammarFunctor.ml[447,12447+27]..lib/grammarFunctor.ml[447,12447+35])
                                                                          Texp_ident "elements/2229"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (lib/grammarFunctor.ml[447,12447+36]..lib/grammarFunctor.ml[447,12447+43])
                                                                              Texp_apply
                                                                              expression (lib/grammarFunctor.ml[447,12447+39]..lib/grammarFunctor.ml[447,12447+40])
                                                                                Texp_ident "Stdlib!.+"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (lib/grammarFunctor.ml[447,12447+37]..lib/grammarFunctor.ml[447,12447+38])
                                                                                    Texp_ident "i/2230"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (lib/grammarFunctor.ml[447,12447+41]..lib/grammarFunctor.ml[447,12447+42])
                                                                                    Texp_constant Const_int 1
                                                                              ]
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (lib/grammarFunctor.ml[447,12447+44]..lib/grammarFunctor.ml[447,12447+45])
                                                                              Texp_ident "n/2231"
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (lib/grammarFunctor.ml[447,12447+46]..lib/grammarFunctor.ml[447,12447+47])
                                                                              Texp_ident "w/2232"
                                                                        ]
                                                                    ]
                                                          ]
                                                    ]
                                              ]
                                        ]
                                      structure_item (lib/grammarFunctor.ml[449,12496+4]..lib/grammarFunctor.ml[451,12543+36])
                                        Tstr_value Nonrec
                                        [
                                          <def>
                                            pattern (lib/grammarFunctor.ml[449,12496+8]..lib/grammarFunctor.ml[449,12496+16])
                                              Tpat_var "elements/2233"
                                            expression (lib/grammarFunctor.ml[449,12496+17]..lib/grammarFunctor.ml[451,12543+36]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[449,12496+17]..lib/grammarFunctor.ml[449,12496+18])
                                                    Tpat_var "i/2234"
                                                  expression (lib/grammarFunctor.ml[450,12517+6]..lib/grammarFunctor.ml[451,12543+36])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (lib/grammarFunctor.ml[450,12517+10]..lib/grammarFunctor.ml[450,12517+11])
                                                          Tpat_var "w/2235"
                                                        expression (lib/grammarFunctor.ml[450,12517+14]..lib/grammarFunctor.ml[450,12517+22])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[450,12517+14]..lib/grammarFunctor.ml[450,12517+20])
                                                            Texp_ident "decode/2197"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[450,12517+21]..lib/grammarFunctor.ml[450,12517+22])
                                                                Texp_ident "i/2234"
                                                          ]
                                                    ]
                                                    expression (lib/grammarFunctor.ml[451,12543+6]..lib/grammarFunctor.ml[451,12543+36])
                                                      Texp_apply
                                                      expression (lib/grammarFunctor.ml[451,12543+6]..lib/grammarFunctor.ml[451,12543+14])
                                                        Texp_ident "elements/2229"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[451,12543+15]..lib/grammarFunctor.ml[451,12543+16])
                                                            Texp_constant Const_int 0
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[451,12543+17]..lib/grammarFunctor.ml[451,12543+34])
                                                            Texp_apply
                                                            expression (lib/grammarFunctor.ml[451,12543+18]..lib/grammarFunctor.ml[451,12543+31])
                                                              Texp_ident "Stdlib!.String.length"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/grammarFunctor.ml[451,12543+32]..lib/grammarFunctor.ml[451,12543+33])
                                                                  Texp_ident "w/2235"
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[451,12543+35]..lib/grammarFunctor.ml[451,12543+36])
                                                            Texp_ident "w/2235"
                                                      ]
                                              ]
                                        ]
                                      structure_item (lib/grammarFunctor.ml[453,12581+4]..lib/grammarFunctor.ml[458,12712+34])
                                        Tstr_value Nonrec
                                        [
                                          <def>
                                            pattern (lib/grammarFunctor.ml[453,12581+8]..lib/grammarFunctor.ml[453,12581+13])
                                              Tpat_var "print/2236"
                                            expression (lib/grammarFunctor.ml[453,12581+14]..lib/grammarFunctor.ml[458,12712+34]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[453,12581+14]..lib/grammarFunctor.ml[453,12581+15])
                                                    Tpat_var "i/2237"
                                                  expression (lib/grammarFunctor.ml[454,12599+6]..lib/grammarFunctor.ml[458,12712+34])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (lib/grammarFunctor.ml[454,12599+10]..lib/grammarFunctor.ml[454,12599+11])
                                                          Tpat_var "w/2238"
                                                        expression (lib/grammarFunctor.ml[454,12599+14]..lib/grammarFunctor.ml[454,12599+22])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[454,12599+14]..lib/grammarFunctor.ml[454,12599+20])
                                                            Texp_ident "decode/2197"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[454,12599+21]..lib/grammarFunctor.ml[454,12599+22])
                                                                Texp_ident "i/2237"
                                                          ]
                                                    ]
                                                    expression (lib/grammarFunctor.ml[455,12625+6]..lib/grammarFunctor.ml[458,12712+34])
                                                      Texp_apply
                                                      expression (lib/grammarFunctor.ml[455,12625+6]..lib/grammarFunctor.ml[455,12625+35])
                                                        Texp_ident "Gbnf_parser!.Misc.separated_iter_to_string"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[456,12661+8]..lib/grammarFunctor.ml[456,12661+38])
                                                            Texp_function
                                                            Nolabel
                                                            [
                                                              <case>
                                                                pattern (lib/grammarFunctor.ml[456,12661+13]..lib/grammarFunctor.ml[456,12661+14])
                                                                  Tpat_var "c/2239"
                                                                expression (lib/grammarFunctor.ml[456,12661+18]..lib/grammarFunctor.ml[456,12661+37])
                                                                  Texp_apply
                                                                  expression (lib/grammarFunctor.ml[456,12661+18]..lib/grammarFunctor.ml[456,12661+23])
                                                                    Texp_ident "print/2127"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[456,12661+24]..lib/grammarFunctor.ml[456,12661+37])
                                                                        Texp_apply
                                                                        expression (lib/grammarFunctor.ml[456,12661+25]..lib/grammarFunctor.ml[456,12661+34])
                                                                          Texp_ident "Stdlib!.Char.code"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (lib/grammarFunctor.ml[456,12661+35]..lib/grammarFunctor.ml[456,12661+36])
                                                                              Texp_ident "c/2239"
                                                                        ]
                                                                  ]
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[457,12700+8]..lib/grammarFunctor.ml[457,12700+11])
                                                            Texp_constant Const_string(" ",(lib/grammarFunctor.ml[457,12700+9]..lib/grammarFunctor.ml[457,12700+10]),None)
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[458,12712+8]..lib/grammarFunctor.ml[458,12712+34])
                                                            Texp_function
                                                            Nolabel
                                                            [
                                                              <case>
                                                                pattern (lib/grammarFunctor.ml[458,12712+13]..lib/grammarFunctor.ml[458,12712+14])
                                                                  Tpat_var "f/2240"
                                                                expression (lib/grammarFunctor.ml[458,12712+18]..lib/grammarFunctor.ml[458,12712+33])
                                                                  Texp_apply
                                                                  expression (lib/grammarFunctor.ml[458,12712+18]..lib/grammarFunctor.ml[458,12712+29])
                                                                    Texp_ident "Stdlib!.String.iter"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[458,12712+30]..lib/grammarFunctor.ml[458,12712+31])
                                                                        Texp_ident "f/2240"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[458,12712+32]..lib/grammarFunctor.ml[458,12712+33])
                                                                        Texp_ident "w/2238"
                                                                  ]
                                                            ]
                                                      ]
                                              ]
                                        ]
                                      structure_item (lib/grammarFunctor.ml[461,12824+4]..lib/grammarFunctor.ml[462,12848+45])
                                        Tstr_value Nonrec
                                        [
                                          <def>
                                            pattern (lib/grammarFunctor.ml[461,12824+8]..lib/grammarFunctor.ml[461,12824+15])
                                              Tpat_var "compare/2241"
                                            expression (lib/grammarFunctor.ml[461,12824+16]..lib/grammarFunctor.ml[462,12848+45]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[461,12824+16]..lib/grammarFunctor.ml[461,12824+18])
                                                    Tpat_var "i1/2242"
                                                  expression (lib/grammarFunctor.ml[461,12824+19]..lib/grammarFunctor.ml[462,12848+45]) ghost
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (lib/grammarFunctor.ml[461,12824+19]..lib/grammarFunctor.ml[461,12824+21])
                                                          Tpat_var "i2/2243"
                                                        expression (lib/grammarFunctor.ml[462,12848+6]..lib/grammarFunctor.ml[462,12848+45])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[462,12848+6]..lib/grammarFunctor.ml[462,12848+21])
                                                            Texp_ident "Gbnf_parser!.Generic.compare"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[462,12848+22]..lib/grammarFunctor.ml[462,12848+33])
                                                                Texp_apply
                                                                expression (lib/grammarFunctor.ml[462,12848+23]..lib/grammarFunctor.ml[462,12848+29])
                                                                  Texp_ident "decode/2197"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[462,12848+30]..lib/grammarFunctor.ml[462,12848+32])
                                                                      Texp_ident "i1/2242"
                                                                ]
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[462,12848+34]..lib/grammarFunctor.ml[462,12848+45])
                                                                Texp_apply
                                                                expression (lib/grammarFunctor.ml[462,12848+35]..lib/grammarFunctor.ml[462,12848+41])
                                                                  Texp_ident "decode/2197"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[462,12848+42]..lib/grammarFunctor.ml[462,12848+44])
                                                                      Texp_ident "i2/2243"
                                                                ]
                                                          ]
                                                    ]
                                              ]
                                        ]
                                    ]
                        ]
                structure_item (lib/grammarFunctor.ml[471,13041+0]..lib/grammarFunctor.ml[502,13642+3])
                  Tstr_module
                  TerminalSet/2387
                    module_expr (lib/grammarFunctor.ml[471,13041+21]..lib/grammarFunctor.ml[502,13642+3])
                      Tmod_structure
                      [
                        structure_item (lib/grammarFunctor.ml[475,13138+2]..lib/grammarFunctor.ml[475,13138+40])
                          Tstr_include                          module_expr (lib/grammarFunctor.ml[475,13138+10]..lib/grammarFunctor.ml[475,13138+38])
                            Tmod_apply_unit
                            module_expr (lib/grammarFunctor.ml[475,13138+10]..lib/grammarFunctor.ml[475,13138+38])
                              Tmod_apply
                              module_expr (lib/grammarFunctor.ml[475,13138+10]..lib/grammarFunctor.ml[475,13138+28])
                                module_expr (lib/grammarFunctor.ml[475,13138+10]..lib/grammarFunctor.ml[475,13138+28])
                                  Tmod_ident "Gbnf_parser!.BoundedBitSet.Make"
                              module_expr (lib/grammarFunctor.ml[475,13138+29]..lib/grammarFunctor.ml[475,13138+37])
                                Tmod_ident "Terminal/2246"
                        structure_item (lib/grammarFunctor.ml[477,13180+2]..lib/grammarFunctor.ml[478,13199+75])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[477,13180+6]..lib/grammarFunctor.ml[477,13180+11])
                                Tpat_var "print/2376"
                              expression (lib/grammarFunctor.ml[477,13180+12]..lib/grammarFunctor.ml[478,13199+75]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[477,13180+12]..lib/grammarFunctor.ml[477,13180+16])
                                      Tpat_var "toks/2377"
                                    expression (lib/grammarFunctor.ml[478,13199+4]..lib/grammarFunctor.ml[478,13199+75])
                                      Texp_apply
                                      expression (lib/grammarFunctor.ml[478,13199+4]..lib/grammarFunctor.ml[478,13199+33])
                                        Texp_ident "Gbnf_parser!.Misc.separated_iter_to_string"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[478,13199+34]..lib/grammarFunctor.ml[478,13199+48])
                                            Texp_ident "Terminal/2246.print"
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[478,13199+49]..lib/grammarFunctor.ml[478,13199+52])
                                            Texp_constant Const_string(" ",(lib/grammarFunctor.ml[478,13199+50]..lib/grammarFunctor.ml[478,13199+51]),None)
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[478,13199+53]..lib/grammarFunctor.ml[478,13199+75])
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (lib/grammarFunctor.ml[478,13199+58]..lib/grammarFunctor.ml[478,13199+59])
                                                  Tpat_var "f/2379"
                                                expression (lib/grammarFunctor.ml[478,13199+63]..lib/grammarFunctor.ml[478,13199+74])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[478,13199+63]..lib/grammarFunctor.ml[478,13199+67])
                                                    Texp_ident "iter/2350"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[478,13199+68]..lib/grammarFunctor.ml[478,13199+69])
                                                        Texp_ident "f/2379"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[478,13199+70]..lib/grammarFunctor.ml[478,13199+74])
                                                        Texp_ident "toks/2377"
                                                  ]
                                            ]
                                      ]
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[480,13276+2]..lib/grammarFunctor.ml[485,13391+5])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[480,13276+6]..lib/grammarFunctor.ml[480,13276+14])
                                Tpat_var "universe/2380"
                              expression (lib/grammarFunctor.ml[481,13293+4]..lib/grammarFunctor.ml[485,13391+5])
                                Texp_apply
                                expression (lib/grammarFunctor.ml[481,13293+4]..lib/grammarFunctor.ml[481,13293+10])
                                  Texp_ident "remove/2346"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/grammarFunctor.ml[481,13293+11]..lib/grammarFunctor.ml[481,13293+25])
                                      Texp_ident "Terminal/2246.sharp"
                                  <arg>
                                    Nolabel
                                    expression (lib/grammarFunctor.ml[481,13293+26]..lib/grammarFunctor.ml[485,13391+5])
                                      Texp_apply
                                      expression (lib/grammarFunctor.ml[482,13321+6]..lib/grammarFunctor.ml[482,13321+12])
                                        Texp_ident "remove/2346"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[482,13321+13]..lib/grammarFunctor.ml[482,13321+27])
                                            Texp_ident "Terminal/2246.error"
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[482,13321+28]..lib/grammarFunctor.ml[484,13383+7])
                                            Texp_apply
                                            expression (lib/grammarFunctor.ml[483,13351+8]..lib/grammarFunctor.ml[483,13351+21])
                                              Texp_ident "Terminal/2246.fold"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[483,13351+22]..lib/grammarFunctor.ml[483,13351+25])
                                                  Texp_ident "add/2345"
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[483,13351+26]..lib/grammarFunctor.ml[483,13351+31])
                                                  Texp_ident "empty/2338"
                                            ]
                                      ]
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[490,13531+2]..lib/grammarFunctor.ml[491,13549+5])
                          Tstr_type Rec
                          [
                            type_declaration property/2381 (lib/grammarFunctor.ml[490,13531+2]..lib/grammarFunctor.ml[491,13549+5])
                              ptype_params =
                                []
                              ptype_cstrs =
                                []
                              ptype_kind =
                                Ttype_abstract
                              ptype_private = Public
                              ptype_manifest =
                                Some
                                  core_type (lib/grammarFunctor.ml[491,13549+4]..lib/grammarFunctor.ml[491,13549+5])
                                    Ttyp_constr "t/2337"
                                    []
                          ]
                        structure_item (lib/grammarFunctor.ml[493,13556+2]..lib/grammarFunctor.ml[494,13571+9])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[493,13556+6]..lib/grammarFunctor.ml[493,13556+12])
                                Tpat_var "bottom/2382"
                              expression (lib/grammarFunctor.ml[494,13571+4]..lib/grammarFunctor.ml[494,13571+9])
                                Texp_ident "empty/2338"
                          ]
                        structure_item (lib/grammarFunctor.ml[496,13582+2]..lib/grammarFunctor.ml[497,13603+9])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[496,13582+6]..lib/grammarFunctor.ml[496,13582+16])
                                Tpat_var "is_maximal/2383"
                              expression (lib/grammarFunctor.ml[496,13582+17]..lib/grammarFunctor.ml[497,13603+9]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[496,13582+17]..lib/grammarFunctor.ml[496,13582+18])
                                      Tpat_any
                                    expression (lib/grammarFunctor.ml[497,13603+4]..lib/grammarFunctor.ml[497,13603+9])
                                      Texp_construct "false"
                                      []
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[499,13614+2]..lib/grammarFunctor.ml[500,13631+9])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[499,13614+6]..lib/grammarFunctor.ml[499,13614+14])
                                Tpat_var "leq_join/2386"
                              expression (lib/grammarFunctor.ml[500,13631+4]..lib/grammarFunctor.ml[500,13631+9])
                                Texp_ident "union/2347"
                          ]
                      ]
                structure_item (lib/grammarFunctor.ml[506,13675+0]..lib/grammarFunctor.ml[506,13675+33])
                  Tstr_module
                  TerminalMap/2388
                    module_expr (lib/grammarFunctor.ml[506,13675+21]..lib/grammarFunctor.ml[506,13675+33])
                      Tmod_ident "Gbnf_parser!.Patricia.Big"
                structure_item (lib/grammarFunctor.ml[511,13805+0]..lib/grammarFunctor.ml[614,15999+3])
                  Tstr_module
                  Symbol/2545
                    module_expr (lib/grammarFunctor.ml[511,13805+16]..lib/grammarFunctor.ml[614,15999+3])
                      Tmod_structure
                      [
                        structure_item (lib/grammarFunctor.ml[513,13829+2]..lib/grammarFunctor.ml[515,13865+21])
                          Tstr_type Rec
                          [
                            type_declaration t/2389 (lib/grammarFunctor.ml[513,13829+2]..lib/grammarFunctor.ml[515,13865+21])
                              ptype_params =
                                []
                              ptype_cstrs =
                                []
                              ptype_kind =
                                Ttype_variant
                                  [
                                    (lib/grammarFunctor.ml[514,13840+4]..lib/grammarFunctor.ml[514,13840+24])
                                      N/2390
                                      [
                                        core_type (lib/grammarFunctor.ml[514,13840+11]..lib/grammarFunctor.ml[514,13840+24])
                                          Ttyp_constr "Nonterminal/2057.t"
                                          []
                                      ]
                                      None
                                    (lib/grammarFunctor.ml[515,13865+4]..lib/grammarFunctor.ml[515,13865+21])
                                      T/2391
                                      [
                                        core_type (lib/grammarFunctor.ml[515,13865+11]..lib/grammarFunctor.ml[515,13865+21])
                                          Ttyp_constr "Terminal/2246.t"
                                          []
                                      ]
                                      None
                                  ]
                              ptype_private = Public
                              ptype_manifest =
                                None
                          ]
                        structure_item (lib/grammarFunctor.ml[517,13888+2]..lib/grammarFunctor.ml[522,13971+12])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[517,13888+6]..lib/grammarFunctor.ml[517,13888+17])
                                Tpat_var "is_terminal/2392"
                              expression (lib/grammarFunctor.ml[517,13888+18]..lib/grammarFunctor.ml[522,13971+12]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[517,13888+18]..lib/grammarFunctor.ml[517,13888+21])
                                      Tpat_var "sym/2394"
                                    expression (lib/grammarFunctor.ml[518,13912+4]..lib/grammarFunctor.ml[522,13971+12])
                                      Texp_match
                                      expression (lib/grammarFunctor.ml[518,13912+10]..lib/grammarFunctor.ml[518,13912+13])
                                        Texp_ident "sym/2394"
                                      [
                                        <case>
                                          pattern (lib/grammarFunctor.ml[519,13931+6]..lib/grammarFunctor.ml[519,13931+9])
                                            Tpat_value
                                            pattern (lib/grammarFunctor.ml[519,13931+6]..lib/grammarFunctor.ml[519,13931+9])
                                              Tpat_construct "N"
                                              [
                                                pattern (lib/grammarFunctor.ml[519,13931+8]..lib/grammarFunctor.ml[519,13931+9])
                                                  Tpat_any
                                              ]
                                              None
                                          expression (lib/grammarFunctor.ml[520,13944+8]..lib/grammarFunctor.ml[520,13944+13])
                                            Texp_construct "false"
                                            []
                                        <case>
                                          pattern (lib/grammarFunctor.ml[521,13958+6]..lib/grammarFunctor.ml[521,13958+9])
                                            Tpat_value
                                            pattern (lib/grammarFunctor.ml[521,13958+6]..lib/grammarFunctor.ml[521,13958+9])
                                              Tpat_construct "T"
                                              [
                                                pattern (lib/grammarFunctor.ml[521,13958+8]..lib/grammarFunctor.ml[521,13958+9])
                                                  Tpat_any
                                              ]
                                              None
                                          expression (lib/grammarFunctor.ml[522,13971+8]..lib/grammarFunctor.ml[522,13971+12])
                                            Texp_construct "true"
                                            []
                                      ]
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[524,13985+2]..lib/grammarFunctor.ml[533,14200+10])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[524,13985+6]..lib/grammarFunctor.ml[524,13985+13])
                                Tpat_var "compare/2395"
                              expression (lib/grammarFunctor.ml[524,13985+14]..lib/grammarFunctor.ml[533,14200+10]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[524,13985+14]..lib/grammarFunctor.ml[524,13985+18])
                                      Tpat_var "sym1/2396"
                                    expression (lib/grammarFunctor.ml[524,13985+19]..lib/grammarFunctor.ml[533,14200+10]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (lib/grammarFunctor.ml[524,13985+19]..lib/grammarFunctor.ml[524,13985+23])
                                            Tpat_var "sym2/2397"
                                          expression (lib/grammarFunctor.ml[525,14011+4]..lib/grammarFunctor.ml[533,14200+10])
                                            Texp_match
                                            expression (lib/grammarFunctor.ml[525,14011+10]..lib/grammarFunctor.ml[525,14011+20])
                                              Texp_tuple
                                              [
                                                expression (lib/grammarFunctor.ml[525,14011+10]..lib/grammarFunctor.ml[525,14011+14])
                                                  Texp_ident "sym1/2396"
                                                expression (lib/grammarFunctor.ml[525,14011+16]..lib/grammarFunctor.ml[525,14011+20])
                                                  Texp_ident "sym2/2397"
                                              ]
                                            [
                                              <case>
                                                pattern (lib/grammarFunctor.ml[526,14037+6]..lib/grammarFunctor.ml[526,14037+18])
                                                  Tpat_value
                                                  pattern (lib/grammarFunctor.ml[526,14037+6]..lib/grammarFunctor.ml[526,14037+18])
                                                    Tpat_tuple
                                                    [
                                                      pattern (lib/grammarFunctor.ml[526,14037+6]..lib/grammarFunctor.ml[526,14037+11])
                                                        Tpat_construct "N"
                                                        [
                                                          pattern (lib/grammarFunctor.ml[526,14037+8]..lib/grammarFunctor.ml[526,14037+11])
                                                            Tpat_var "nt1/2398"
                                                        ]
                                                        None
                                                      pattern (lib/grammarFunctor.ml[526,14037+13]..lib/grammarFunctor.ml[526,14037+18])
                                                        Tpat_construct "N"
                                                        [
                                                          pattern (lib/grammarFunctor.ml[526,14037+15]..lib/grammarFunctor.ml[526,14037+18])
                                                            Tpat_var "nt2/2399"
                                                        ]
                                                        None
                                                    ]
                                                expression (lib/grammarFunctor.ml[527,14059+8]..lib/grammarFunctor.ml[527,14059+35])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[527,14059+8]..lib/grammarFunctor.ml[527,14059+27])
                                                    Texp_ident "Nonterminal/2057.compare"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[527,14059+28]..lib/grammarFunctor.ml[527,14059+31])
                                                        Texp_ident "nt1/2398"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[527,14059+32]..lib/grammarFunctor.ml[527,14059+35])
                                                        Texp_ident "nt2/2399"
                                                  ]
                                              <case>
                                                pattern (lib/grammarFunctor.ml[528,14095+6]..lib/grammarFunctor.ml[528,14095+20])
                                                  Tpat_value
                                                  pattern (lib/grammarFunctor.ml[528,14095+6]..lib/grammarFunctor.ml[528,14095+20])
                                                    Tpat_tuple
                                                    [
                                                      pattern (lib/grammarFunctor.ml[528,14095+6]..lib/grammarFunctor.ml[528,14095+12])
                                                        Tpat_construct "T"
                                                        [
                                                          pattern (lib/grammarFunctor.ml[528,14095+8]..lib/grammarFunctor.ml[528,14095+12])
                                                            Tpat_var "tok1/2400"
                                                        ]
                                                        None
                                                      pattern (lib/grammarFunctor.ml[528,14095+14]..lib/grammarFunctor.ml[528,14095+20])
                                                        Tpat_construct "T"
                                                        [
                                                          pattern (lib/grammarFunctor.ml[528,14095+16]..lib/grammarFunctor.ml[528,14095+20])
                                                            Tpat_var "tok2/2401"
                                                        ]
                                                        None
                                                    ]
                                                expression (lib/grammarFunctor.ml[529,14119+8]..lib/grammarFunctor.ml[529,14119+34])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[529,14119+8]..lib/grammarFunctor.ml[529,14119+24])
                                                    Texp_ident "Terminal/2246.compare"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[529,14119+25]..lib/grammarFunctor.ml[529,14119+29])
                                                        Texp_ident "tok1/2400"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[529,14119+30]..lib/grammarFunctor.ml[529,14119+34])
                                                        Texp_ident "tok2/2401"
                                                  ]
                                              <case>
                                                pattern (lib/grammarFunctor.ml[530,14154+6]..lib/grammarFunctor.ml[530,14154+14])
                                                  Tpat_value
                                                  pattern (lib/grammarFunctor.ml[530,14154+6]..lib/grammarFunctor.ml[530,14154+14])
                                                    Tpat_tuple
                                                    [
                                                      pattern (lib/grammarFunctor.ml[530,14154+6]..lib/grammarFunctor.ml[530,14154+9])
                                                        Tpat_construct "N"
                                                        [
                                                          pattern (lib/grammarFunctor.ml[530,14154+8]..lib/grammarFunctor.ml[530,14154+9])
                                                            Tpat_any
                                                        ]
                                                        None
                                                      pattern (lib/grammarFunctor.ml[530,14154+11]..lib/grammarFunctor.ml[530,14154+14])
                                                        Tpat_construct "T"
                                                        [
                                                          pattern (lib/grammarFunctor.ml[530,14154+13]..lib/grammarFunctor.ml[530,14154+14])
                                                            Tpat_any
                                                        ]
                                                        None
                                                    ]
                                                expression (lib/grammarFunctor.ml[531,14172+8]..lib/grammarFunctor.ml[531,14172+9])
                                                  Texp_constant Const_int 1
                                              <case>
                                                pattern (lib/grammarFunctor.ml[532,14182+6]..lib/grammarFunctor.ml[532,14182+14])
                                                  Tpat_value
                                                  pattern (lib/grammarFunctor.ml[532,14182+6]..lib/grammarFunctor.ml[532,14182+14])
                                                    Tpat_tuple
                                                    [
                                                      pattern (lib/grammarFunctor.ml[532,14182+6]..lib/grammarFunctor.ml[532,14182+9])
                                                        Tpat_construct "T"
                                                        [
                                                          pattern (lib/grammarFunctor.ml[532,14182+8]..lib/grammarFunctor.ml[532,14182+9])
                                                            Tpat_any
                                                        ]
                                                        None
                                                      pattern (lib/grammarFunctor.ml[532,14182+11]..lib/grammarFunctor.ml[532,14182+14])
                                                        Tpat_construct "N"
                                                        [
                                                          pattern (lib/grammarFunctor.ml[532,14182+13]..lib/grammarFunctor.ml[532,14182+14])
                                                            Tpat_any
                                                        ]
                                                        None
                                                    ]
                                                expression (lib/grammarFunctor.ml[533,14200+8]..lib/grammarFunctor.ml[533,14200+10])
                                                  Texp_constant Const_int -1
                                            ]
                                      ]
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[535,14212+2]..lib/grammarFunctor.ml[536,14236+25])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[535,14212+6]..lib/grammarFunctor.ml[535,14212+11])
                                Tpat_var "equal/2402"
                              expression (lib/grammarFunctor.ml[535,14212+12]..lib/grammarFunctor.ml[536,14236+25]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[535,14212+12]..lib/grammarFunctor.ml[535,14212+16])
                                      Tpat_var "sym1/2404"
                                    expression (lib/grammarFunctor.ml[535,14212+17]..lib/grammarFunctor.ml[536,14236+25]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (lib/grammarFunctor.ml[535,14212+17]..lib/grammarFunctor.ml[535,14212+21])
                                            Tpat_var "sym2/2405"
                                          expression (lib/grammarFunctor.ml[536,14236+4]..lib/grammarFunctor.ml[536,14236+25])
                                            Texp_apply
                                            expression (lib/grammarFunctor.ml[536,14236+22]..lib/grammarFunctor.ml[536,14236+23])
                                              Texp_ident "Stdlib!.="
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[536,14236+4]..lib/grammarFunctor.ml[536,14236+21])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[536,14236+4]..lib/grammarFunctor.ml[536,14236+11])
                                                    Texp_ident "compare/2395"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[536,14236+12]..lib/grammarFunctor.ml[536,14236+16])
                                                        Texp_ident "sym1/2404"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[536,14236+17]..lib/grammarFunctor.ml[536,14236+21])
                                                        Texp_ident "sym2/2405"
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[536,14236+24]..lib/grammarFunctor.ml[536,14236+25])
                                                  Texp_constant Const_int 0
                                            ]
                                      ]
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[538,14263+2]..lib/grammarFunctor.ml[546,14472+13])
                          Tstr_value Rec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[538,14263+10]..lib/grammarFunctor.ml[538,14263+16])
                                Tpat_var "lequal/2406"
                              expression (lib/grammarFunctor.ml[538,14263+17]..lib/grammarFunctor.ml[546,14472+13]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[538,14263+17]..lib/grammarFunctor.ml[538,14263+22])
                                      Tpat_var "syms1/2407"
                                    expression (lib/grammarFunctor.ml[538,14263+23]..lib/grammarFunctor.ml[546,14472+13]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (lib/grammarFunctor.ml[538,14263+23]..lib/grammarFunctor.ml[538,14263+28])
                                            Tpat_var "syms2/2408"
                                          expression (lib/grammarFunctor.ml[539,14294+4]..lib/grammarFunctor.ml[546,14472+13])
                                            Texp_match
                                            expression (lib/grammarFunctor.ml[539,14294+10]..lib/grammarFunctor.ml[539,14294+22])
                                              Texp_tuple
                                              [
                                                expression (lib/grammarFunctor.ml[539,14294+10]..lib/grammarFunctor.ml[539,14294+15])
                                                  Texp_ident "syms1/2407"
                                                expression (lib/grammarFunctor.ml[539,14294+17]..lib/grammarFunctor.ml[539,14294+22])
                                                  Texp_ident "syms2/2408"
                                              ]
                                            [
                                              <case>
                                                pattern (lib/grammarFunctor.ml[540,14322+6]..lib/grammarFunctor.ml[540,14322+12])
                                                  Tpat_value
                                                  pattern (lib/grammarFunctor.ml[540,14322+6]..lib/grammarFunctor.ml[540,14322+12])
                                                    Tpat_tuple
                                                    [
                                                      pattern (lib/grammarFunctor.ml[540,14322+6]..lib/grammarFunctor.ml[540,14322+8])
                                                        Tpat_construct "[]"
                                                        []
                                                        None
                                                      pattern (lib/grammarFunctor.ml[540,14322+10]..lib/grammarFunctor.ml[540,14322+12])
                                                        Tpat_construct "[]"
                                                        []
                                                        None
                                                    ]
                                                expression (lib/grammarFunctor.ml[541,14338+8]..lib/grammarFunctor.ml[541,14338+12])
                                                  Texp_construct "true"
                                                  []
                                              <case>
                                                pattern (lib/grammarFunctor.ml[542,14351+6]..lib/grammarFunctor.ml[542,14351+34])
                                                  Tpat_value
                                                  pattern (lib/grammarFunctor.ml[542,14351+6]..lib/grammarFunctor.ml[542,14351+34])
                                                    Tpat_tuple
                                                    [
                                                      pattern (lib/grammarFunctor.ml[542,14351+6]..lib/grammarFunctor.ml[542,14351+19])
                                                        Tpat_construct "::"
                                                        [
                                                          pattern (lib/grammarFunctor.ml[542,14351+6]..lib/grammarFunctor.ml[542,14351+10])
                                                            Tpat_var "sym1/2409"
                                                          pattern (lib/grammarFunctor.ml[542,14351+14]..lib/grammarFunctor.ml[542,14351+19])
                                                            Tpat_var "syms1/2410"
                                                        ]
                                                        None
                                                      pattern (lib/grammarFunctor.ml[542,14351+21]..lib/grammarFunctor.ml[542,14351+34])
                                                        Tpat_construct "::"
                                                        [
                                                          pattern (lib/grammarFunctor.ml[542,14351+21]..lib/grammarFunctor.ml[542,14351+25])
                                                            Tpat_var "sym2/2411"
                                                          pattern (lib/grammarFunctor.ml[542,14351+29]..lib/grammarFunctor.ml[542,14351+34])
                                                            Tpat_var "syms2/2412"
                                                        ]
                                                        None
                                                    ]
                                                expression (lib/grammarFunctor.ml[543,14389+8]..lib/grammarFunctor.ml[543,14389+45])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[543,14389+24]..lib/grammarFunctor.ml[543,14389+26])
                                                    Texp_ident "Stdlib!.&&"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[543,14389+8]..lib/grammarFunctor.ml[543,14389+23])
                                                        Texp_apply
                                                        expression (lib/grammarFunctor.ml[543,14389+8]..lib/grammarFunctor.ml[543,14389+13])
                                                          Texp_ident "equal/2402"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[543,14389+14]..lib/grammarFunctor.ml[543,14389+18])
                                                              Texp_ident "sym1/2409"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[543,14389+19]..lib/grammarFunctor.ml[543,14389+23])
                                                              Texp_ident "sym2/2411"
                                                        ]
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[543,14389+27]..lib/grammarFunctor.ml[543,14389+45])
                                                        Texp_apply
                                                        expression (lib/grammarFunctor.ml[543,14389+27]..lib/grammarFunctor.ml[543,14389+33])
                                                          Texp_ident "lequal/2406"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[543,14389+34]..lib/grammarFunctor.ml[543,14389+39])
                                                              Texp_ident "syms1/2410"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[543,14389+40]..lib/grammarFunctor.ml[543,14389+45])
                                                              Texp_ident "syms2/2412"
                                                        ]
                                                  ]
                                              <case>
                                                pattern (lib/grammarFunctor.ml[544,14435+6]..lib/grammarFunctor.ml[545,14452+16])
                                                  Tpat_or
                                                  pattern (lib/grammarFunctor.ml[544,14435+6]..lib/grammarFunctor.ml[544,14435+16])
                                                    Tpat_value
                                                    pattern (lib/grammarFunctor.ml[544,14435+6]..lib/grammarFunctor.ml[544,14435+16])
                                                      Tpat_tuple
                                                      [
                                                        pattern (lib/grammarFunctor.ml[544,14435+6]..lib/grammarFunctor.ml[544,14435+12])
                                                          Tpat_construct "::"
                                                          [
                                                            pattern (lib/grammarFunctor.ml[544,14435+6]..lib/grammarFunctor.ml[544,14435+7])
                                                              Tpat_any
                                                            pattern (lib/grammarFunctor.ml[544,14435+11]..lib/grammarFunctor.ml[544,14435+12])
                                                              Tpat_any
                                                          ]
                                                          None
                                                        pattern (lib/grammarFunctor.ml[544,14435+14]..lib/grammarFunctor.ml[544,14435+16])
                                                          Tpat_construct "[]"
                                                          []
                                                          None
                                                      ]
                                                  pattern (lib/grammarFunctor.ml[545,14452+6]..lib/grammarFunctor.ml[545,14452+16])
                                                    Tpat_value
                                                    pattern (lib/grammarFunctor.ml[545,14452+6]..lib/grammarFunctor.ml[545,14452+16])
                                                      Tpat_tuple
                                                      [
                                                        pattern (lib/grammarFunctor.ml[545,14452+6]..lib/grammarFunctor.ml[545,14452+8])
                                                          Tpat_construct "[]"
                                                          []
                                                          None
                                                        pattern (lib/grammarFunctor.ml[545,14452+10]..lib/grammarFunctor.ml[545,14452+16])
                                                          Tpat_construct "::"
                                                          [
                                                            pattern (lib/grammarFunctor.ml[545,14452+10]..lib/grammarFunctor.ml[545,14452+11])
                                                              Tpat_any
                                                            pattern (lib/grammarFunctor.ml[545,14452+15]..lib/grammarFunctor.ml[545,14452+16])
                                                              Tpat_any
                                                          ]
                                                          None
                                                      ]
                                                expression (lib/grammarFunctor.ml[546,14472+8]..lib/grammarFunctor.ml[546,14472+13])
                                                  Texp_construct "false"
                                                  []
                                            ]
                                      ]
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[548,14487+2]..lib/grammarFunctor.ml[553,14587+12])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[548,14487+6]..lib/grammarFunctor.ml[548,14487+15])
                                Tpat_var "non_error/2413"
                              expression (lib/grammarFunctor.ml[548,14487+16]..lib/grammarFunctor.ml[553,14587+12]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[548,14487+16]..lib/grammarFunctor.ml[548,14487+19])
                                      Tpat_var "sym/2415"
                                    expression (lib/grammarFunctor.ml[549,14509+4]..lib/grammarFunctor.ml[553,14587+12])
                                      Texp_match
                                      expression (lib/grammarFunctor.ml[549,14509+10]..lib/grammarFunctor.ml[549,14509+13])
                                        Texp_ident "sym/2415"
                                      [
                                        <case>
                                          pattern (lib/grammarFunctor.ml[550,14528+6]..lib/grammarFunctor.ml[550,14528+11])
                                            Tpat_value
                                            pattern (lib/grammarFunctor.ml[550,14528+6]..lib/grammarFunctor.ml[550,14528+11])
                                              Tpat_construct "T"
                                              [
                                                pattern (lib/grammarFunctor.ml[550,14528+8]..lib/grammarFunctor.ml[550,14528+11])
                                                  Tpat_var "tok/2416"
                                              ]
                                              None
                                          expression (lib/grammarFunctor.ml[551,14543+8]..lib/grammarFunctor.ml[551,14543+30])
                                            Texp_apply
                                            expression (lib/grammarFunctor.ml[551,14543+8]..lib/grammarFunctor.ml[551,14543+26])
                                              Texp_ident "Terminal/2246.non_error"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[551,14543+27]..lib/grammarFunctor.ml[551,14543+30])
                                                  Texp_ident "tok/2416"
                                            ]
                                        <case>
                                          pattern (lib/grammarFunctor.ml[552,14574+6]..lib/grammarFunctor.ml[552,14574+9])
                                            Tpat_value
                                            pattern (lib/grammarFunctor.ml[552,14574+6]..lib/grammarFunctor.ml[552,14574+9])
                                              Tpat_construct "N"
                                              [
                                                pattern (lib/grammarFunctor.ml[552,14574+8]..lib/grammarFunctor.ml[552,14574+9])
                                                  Tpat_any
                                              ]
                                              None
                                          expression (lib/grammarFunctor.ml[553,14587+8]..lib/grammarFunctor.ml[553,14587+12])
                                            Texp_construct "true"
                                            []
                                      ]
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[555,14601+2]..lib/grammarFunctor.ml[559,14688+26])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[555,14601+6]..lib/grammarFunctor.ml[555,14601+11])
                                Tpat_var "print/2417"
                              expression (lib/grammarFunctor.ml[555,14601+14]..lib/grammarFunctor.ml[559,14688+26])
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[556,14624+6]..lib/grammarFunctor.ml[556,14624+10])
                                      Tpat_construct "N"
                                      [
                                        pattern (lib/grammarFunctor.ml[556,14624+8]..lib/grammarFunctor.ml[556,14624+10])
                                          Tpat_var "nt/2418"
                                      ]
                                      None
                                    expression (lib/grammarFunctor.ml[557,14638+8]..lib/grammarFunctor.ml[557,14638+34])
                                      Texp_apply
                                      expression (lib/grammarFunctor.ml[557,14638+8]..lib/grammarFunctor.ml[557,14638+25])
                                        Texp_ident "Nonterminal/2057.print"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[557,14638+26]..lib/grammarFunctor.ml[557,14638+31])
                                            Texp_construct "false"
                                            []
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[557,14638+32]..lib/grammarFunctor.ml[557,14638+34])
                                            Texp_ident "nt/2418"
                                      ]
                                  <case>
                                    pattern (lib/grammarFunctor.ml[558,14673+6]..lib/grammarFunctor.ml[558,14673+11])
                                      Tpat_construct "T"
                                      [
                                        pattern (lib/grammarFunctor.ml[558,14673+8]..lib/grammarFunctor.ml[558,14673+11])
                                          Tpat_var "tok/2419"
                                      ]
                                      None
                                    expression (lib/grammarFunctor.ml[559,14688+8]..lib/grammarFunctor.ml[559,14688+26])
                                      Texp_apply
                                      expression (lib/grammarFunctor.ml[559,14688+8]..lib/grammarFunctor.ml[559,14688+22])
                                        Texp_ident "Terminal/2246.print"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[559,14688+23]..lib/grammarFunctor.ml[559,14688+26])
                                            Texp_ident "tok/2419"
                                      ]
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[561,14716+2]..lib/grammarFunctor.ml[565,14785+12])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[561,14716+6]..lib/grammarFunctor.ml[561,14716+17])
                                Tpat_var "nonterminal/2421"
                              expression (lib/grammarFunctor.ml[561,14716+20]..lib/grammarFunctor.ml[565,14785+12])
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[562,14745+6]..lib/grammarFunctor.ml[562,14745+9])
                                      Tpat_construct "T"
                                      [
                                        pattern (lib/grammarFunctor.ml[562,14745+8]..lib/grammarFunctor.ml[562,14745+9])
                                          Tpat_any
                                      ]
                                      None
                                    expression (lib/grammarFunctor.ml[563,14758+8]..lib/grammarFunctor.ml[563,14758+13])
                                      Texp_construct "false"
                                      []
                                  <case>
                                    pattern (lib/grammarFunctor.ml[564,14772+6]..lib/grammarFunctor.ml[564,14772+9])
                                      Tpat_construct "N"
                                      [
                                        pattern (lib/grammarFunctor.ml[564,14772+8]..lib/grammarFunctor.ml[564,14772+9])
                                          Tpat_any
                                      ]
                                      None
                                    expression (lib/grammarFunctor.ml[565,14785+8]..lib/grammarFunctor.ml[565,14785+12])
                                      Texp_construct "true"
                                      []
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[572,15034+2]..lib/grammarFunctor.ml[573,15049+22])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[572,15034+6]..lib/grammarFunctor.ml[572,15034+12])
                                Tpat_var "buffer/2424"
                              expression (lib/grammarFunctor.ml[573,15049+4]..lib/grammarFunctor.ml[573,15049+22])
                                Texp_apply
                                expression (lib/grammarFunctor.ml[573,15049+4]..lib/grammarFunctor.ml[573,15049+17])
                                  Texp_ident "Stdlib!.Buffer.create"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/grammarFunctor.ml[573,15049+18]..lib/grammarFunctor.ml[573,15049+22])
                                      Texp_constant Const_int 1024
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[575,15073+2]..lib/grammarFunctor.ml[594,15594+5])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[575,15073+6]..lib/grammarFunctor.ml[575,15073+14])
                                Tpat_var "printaod/2507"
                              expression (lib/grammarFunctor.ml[575,15073+15]..lib/grammarFunctor.ml[594,15594+5]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[575,15073+15]..lib/grammarFunctor.ml[575,15073+21])
                                      Tpat_var "offset/2509"
                                    expression (lib/grammarFunctor.ml[575,15073+22]..lib/grammarFunctor.ml[594,15594+5]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (lib/grammarFunctor.ml[575,15073+22]..lib/grammarFunctor.ml[575,15073+25])
                                            Tpat_var "dot/2510"
                                          expression (lib/grammarFunctor.ml[575,15073+26]..lib/grammarFunctor.ml[594,15594+5]) ghost
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (lib/grammarFunctor.ml[575,15073+26]..lib/grammarFunctor.ml[575,15073+33])
                                                  Tpat_var "symbols/2511"
                                                expression (lib/grammarFunctor.ml[576,15109+4]..lib/grammarFunctor.ml[594,15594+5])
                                                  Texp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (lib/grammarFunctor.ml[576,15109+8]..lib/grammarFunctor.ml[576,15109+14])
                                                        Tpat_var "length/2512"
                                                      expression (lib/grammarFunctor.ml[576,15109+17]..lib/grammarFunctor.ml[576,15109+37])
                                                        Texp_apply
                                                        expression (lib/grammarFunctor.ml[576,15109+17]..lib/grammarFunctor.ml[576,15109+29])
                                                          Texp_ident "Stdlib!.Array.length"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[576,15109+30]..lib/grammarFunctor.ml[576,15109+37])
                                                              Texp_ident "symbols/2511"
                                                        ]
                                                  ]
                                                  expression (lib/grammarFunctor.ml[577,15150+4]..lib/grammarFunctor.ml[594,15594+5])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (lib/grammarFunctor.ml[577,15150+8]..lib/grammarFunctor.ml[577,15150+13])
                                                          Tpat_var "first/2513"
                                                        expression (lib/grammarFunctor.ml[577,15150+16]..lib/grammarFunctor.ml[577,15150+24])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[577,15150+16]..lib/grammarFunctor.ml[577,15150+19])
                                                            Texp_ident "Stdlib!.ref"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[577,15150+20]..lib/grammarFunctor.ml[577,15150+24])
                                                                Texp_construct "true"
                                                                []
                                                          ]
                                                    ]
                                                    expression (lib/grammarFunctor.ml[578,15178+4]..lib/grammarFunctor.ml[594,15594+5])
                                                      Texp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (lib/grammarFunctor.ml[578,15178+8]..lib/grammarFunctor.ml[578,15178+16])
                                                            Tpat_var "separate/2514"
                                                          expression (lib/grammarFunctor.ml[578,15178+17]..lib/grammarFunctor.ml[580,15252+20]) ghost
                                                            Texp_function
                                                            Nolabel
                                                            [
                                                              <case>
                                                                pattern (lib/grammarFunctor.ml[578,15178+17]..lib/grammarFunctor.ml[578,15178+19])
                                                                  Tpat_construct "()"
                                                                  []
                                                                  None
                                                                expression (lib/grammarFunctor.ml[579,15200+6]..lib/grammarFunctor.ml[580,15252+20])
                                                                  Texp_sequence
                                                                  expression (lib/grammarFunctor.ml[579,15200+6]..lib/grammarFunctor.ml[579,15200+50])
                                                                    Texp_ifthenelse
                                                                    expression (lib/grammarFunctor.ml[579,15200+9]..lib/grammarFunctor.ml[579,15200+19])
                                                                      Texp_apply
                                                                      expression (lib/grammarFunctor.ml[579,15200+9]..lib/grammarFunctor.ml[579,15200+12])
                                                                        Texp_ident "Stdlib!.not"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (lib/grammarFunctor.ml[579,15200+13]..lib/grammarFunctor.ml[579,15200+19])
                                                                            Texp_apply
                                                                            expression (lib/grammarFunctor.ml[579,15200+13]..lib/grammarFunctor.ml[579,15200+14])
                                                                              Texp_ident "Stdlib!.!"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (lib/grammarFunctor.ml[579,15200+14]..lib/grammarFunctor.ml[579,15200+19])
                                                                                  Texp_ident "first/2513"
                                                                            ]
                                                                      ]
                                                                    expression (lib/grammarFunctor.ml[579,15200+25]..lib/grammarFunctor.ml[579,15200+50])
                                                                      Texp_apply
                                                                      expression (lib/grammarFunctor.ml[579,15200+25]..lib/grammarFunctor.ml[579,15200+39])
                                                                        Texp_ident "Stdlib!.Printf.bprintf"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (lib/grammarFunctor.ml[579,15200+40]..lib/grammarFunctor.ml[579,15200+46])
                                                                            Texp_ident "buffer/2424"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (lib/grammarFunctor.ml[579,15200+47]..lib/grammarFunctor.ml[579,15200+50])
                                                                            Texp_construct "CamlinternalFormatBasics.Format"
                                                                            [
                                                                              expression (lib/grammarFunctor.ml[579,15200+47]..lib/grammarFunctor.ml[579,15200+50]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                [
                                                                                  expression (lib/grammarFunctor.ml[579,15200+47]..lib/grammarFunctor.ml[579,15200+50]) ghost
                                                                                    Texp_constant Const_char 20
                                                                                  expression (lib/grammarFunctor.ml[579,15200+47]..lib/grammarFunctor.ml[579,15200+50]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                    []
                                                                                ]
                                                                              expression (lib/grammarFunctor.ml[579,15200+47]..lib/grammarFunctor.ml[579,15200+50]) ghost
                                                                                Texp_constant Const_string(" ",(lib/grammarFunctor.ml[579,15200+47]..lib/grammarFunctor.ml[579,15200+50]) ghost,None)
                                                                            ]
                                                                      ]
                                                                    None
                                                                  expression (lib/grammarFunctor.ml[580,15252+6]..lib/grammarFunctor.ml[580,15252+20])
                                                                    Texp_apply
                                                                    expression (lib/grammarFunctor.ml[580,15252+12]..lib/grammarFunctor.ml[580,15252+14])
                                                                      Texp_ident "Stdlib!.:="
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (lib/grammarFunctor.ml[580,15252+6]..lib/grammarFunctor.ml[580,15252+11])
                                                                          Texp_ident "first/2513"
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (lib/grammarFunctor.ml[580,15252+15]..lib/grammarFunctor.ml[580,15252+20])
                                                                          Texp_construct "false"
                                                                          []
                                                                    ]
                                                            ]
                                                      ]
                                                      expression (lib/grammarFunctor.ml[582,15280+4]..lib/grammarFunctor.ml[594,15594+5])
                                                        Texp_sequence
                                                        expression (lib/grammarFunctor.ml[582,15280+4]..lib/grammarFunctor.ml[591,15521+8])
                                                          Texp_for "i/2530" Up
                                                          expression (lib/grammarFunctor.ml[582,15280+12]..lib/grammarFunctor.ml[582,15280+18])
                                                            Texp_ident "offset/2509"
                                                          expression (lib/grammarFunctor.ml[582,15280+22]..lib/grammarFunctor.ml[582,15280+28])
                                                            Texp_ident "length/2512"
                                                          expression (lib/grammarFunctor.ml[583,15312+6]..lib/grammarFunctor.ml[590,15511+9])
                                                            Texp_sequence
                                                            expression (lib/grammarFunctor.ml[583,15312+6]..lib/grammarFunctor.ml[586,15394+9])
                                                              Texp_ifthenelse
                                                              expression (lib/grammarFunctor.ml[583,15312+9]..lib/grammarFunctor.ml[583,15312+16])
                                                                Texp_apply
                                                                expression (lib/grammarFunctor.ml[583,15312+11]..lib/grammarFunctor.ml[583,15312+12])
                                                                  Texp_ident "Stdlib!.="
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[583,15312+9]..lib/grammarFunctor.ml[583,15312+10])
                                                                      Texp_ident "i/2530"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[583,15312+13]..lib/grammarFunctor.ml[583,15312+16])
                                                                      Texp_ident "dot/2510"
                                                                ]
                                                              expression (lib/grammarFunctor.ml[583,15312+22]..lib/grammarFunctor.ml[586,15394+9])
                                                                Texp_sequence
                                                                expression (lib/grammarFunctor.ml[584,15340+8]..lib/grammarFunctor.ml[584,15340+18])
                                                                  Texp_apply
                                                                  expression (lib/grammarFunctor.ml[584,15340+8]..lib/grammarFunctor.ml[584,15340+16])
                                                                    Texp_ident "separate/2514"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[584,15340+16]..lib/grammarFunctor.ml[584,15340+18])
                                                                        Texp_construct "()"
                                                                        []
                                                                  ]
                                                                expression (lib/grammarFunctor.ml[585,15360+8]..lib/grammarFunctor.ml[585,15360+33])
                                                                  Texp_apply
                                                                  expression (lib/grammarFunctor.ml[585,15360+8]..lib/grammarFunctor.ml[585,15360+22])
                                                                    Texp_ident "Stdlib!.Printf.bprintf"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[585,15360+23]..lib/grammarFunctor.ml[585,15360+29])
                                                                        Texp_ident "buffer/2424"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[585,15360+30]..lib/grammarFunctor.ml[585,15360+33])
                                                                        Texp_construct "CamlinternalFormatBasics.Format"
                                                                        [
                                                                          expression (lib/grammarFunctor.ml[585,15360+30]..lib/grammarFunctor.ml[585,15360+33]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                            [
                                                                              expression (lib/grammarFunctor.ml[585,15360+30]..lib/grammarFunctor.ml[585,15360+33]) ghost
                                                                                Texp_constant Const_char 2e
                                                                              expression (lib/grammarFunctor.ml[585,15360+30]..lib/grammarFunctor.ml[585,15360+33]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                []
                                                                            ]
                                                                          expression (lib/grammarFunctor.ml[585,15360+30]..lib/grammarFunctor.ml[585,15360+33]) ghost
                                                                            Texp_constant Const_string(".",(lib/grammarFunctor.ml[585,15360+30]..lib/grammarFunctor.ml[585,15360+33]) ghost,None)
                                                                        ]
                                                                  ]
                                                              None
                                                            expression (lib/grammarFunctor.ml[587,15405+6]..lib/grammarFunctor.ml[590,15511+9])
                                                              Texp_ifthenelse
                                                              expression (lib/grammarFunctor.ml[587,15405+9]..lib/grammarFunctor.ml[587,15405+19])
                                                                Texp_apply
                                                                expression (lib/grammarFunctor.ml[587,15405+11]..lib/grammarFunctor.ml[587,15405+12])
                                                                  Texp_ident "Stdlib!.<"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[587,15405+9]..lib/grammarFunctor.ml[587,15405+10])
                                                                      Texp_ident "i/2530"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[587,15405+13]..lib/grammarFunctor.ml[587,15405+19])
                                                                      Texp_ident "length/2512"
                                                                ]
                                                              expression (lib/grammarFunctor.ml[587,15405+25]..lib/grammarFunctor.ml[590,15511+9])
                                                                Texp_sequence
                                                                expression (lib/grammarFunctor.ml[588,15436+8]..lib/grammarFunctor.ml[588,15436+18])
                                                                  Texp_apply
                                                                  expression (lib/grammarFunctor.ml[588,15436+8]..lib/grammarFunctor.ml[588,15436+16])
                                                                    Texp_ident "separate/2514"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[588,15436+16]..lib/grammarFunctor.ml[588,15436+18])
                                                                        Texp_construct "()"
                                                                        []
                                                                  ]
                                                                expression (lib/grammarFunctor.ml[589,15456+8]..lib/grammarFunctor.ml[589,15456+54])
                                                                  Texp_apply
                                                                  expression (lib/grammarFunctor.ml[589,15456+8]..lib/grammarFunctor.ml[589,15456+22])
                                                                    Texp_ident "Stdlib!.Printf.bprintf"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[589,15456+23]..lib/grammarFunctor.ml[589,15456+29])
                                                                        Texp_ident "buffer/2424"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[589,15456+30]..lib/grammarFunctor.ml[589,15456+34])
                                                                        Texp_construct "CamlinternalFormatBasics.Format"
                                                                        [
                                                                          expression (lib/grammarFunctor.ml[589,15456+30]..lib/grammarFunctor.ml[589,15456+34]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.String"
                                                                            [
                                                                              expression (lib/grammarFunctor.ml[589,15456+30]..lib/grammarFunctor.ml[589,15456+34]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                []
                                                                              expression (lib/grammarFunctor.ml[589,15456+30]..lib/grammarFunctor.ml[589,15456+34]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                []
                                                                            ]
                                                                          expression (lib/grammarFunctor.ml[589,15456+30]..lib/grammarFunctor.ml[589,15456+34]) ghost
                                                                            Texp_constant Const_string("%s",(lib/grammarFunctor.ml[589,15456+30]..lib/grammarFunctor.ml[589,15456+34]) ghost,None)
                                                                        ]
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[589,15456+35]..lib/grammarFunctor.ml[589,15456+54])
                                                                        Texp_apply
                                                                        expression (lib/grammarFunctor.ml[589,15456+36]..lib/grammarFunctor.ml[589,15456+41])
                                                                          Texp_ident "print/2417"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (lib/grammarFunctor.ml[589,15456+42]..lib/grammarFunctor.ml[589,15456+53])
                                                                              Texp_apply
                                                                              expression (lib/grammarFunctor.ml[589,15456+42]..lib/grammarFunctor.ml[589,15456+53]) ghost
                                                                                Texp_ident "Stdlib!.Array.get"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (lib/grammarFunctor.ml[589,15456+42]..lib/grammarFunctor.ml[589,15456+49])
                                                                                    Texp_ident "symbols/2511"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (lib/grammarFunctor.ml[589,15456+51]..lib/grammarFunctor.ml[589,15456+52])
                                                                                    Texp_ident "i/2530"
                                                                              ]
                                                                        ]
                                                                  ]
                                                              None
                                                        expression (lib/grammarFunctor.ml[592,15531+4]..lib/grammarFunctor.ml[594,15594+5])
                                                          Texp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (lib/grammarFunctor.ml[592,15531+8]..lib/grammarFunctor.ml[592,15531+9])
                                                                Tpat_var "s/2531"
                                                              expression (lib/grammarFunctor.ml[592,15531+12]..lib/grammarFunctor.ml[592,15531+34])
                                                                Texp_apply
                                                                expression (lib/grammarFunctor.ml[592,15531+12]..lib/grammarFunctor.ml[592,15531+27])
                                                                  Texp_ident "Stdlib!.Buffer.contents"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[592,15531+28]..lib/grammarFunctor.ml[592,15531+34])
                                                                      Texp_ident "buffer/2424"
                                                                ]
                                                          ]
                                                          expression (lib/grammarFunctor.ml[593,15569+4]..lib/grammarFunctor.ml[594,15594+5])
                                                            Texp_sequence
                                                            expression (lib/grammarFunctor.ml[593,15569+4]..lib/grammarFunctor.ml[593,15569+23])
                                                              Texp_apply
                                                              expression (lib/grammarFunctor.ml[593,15569+4]..lib/grammarFunctor.ml[593,15569+16])
                                                                Texp_ident "Stdlib!.Buffer.clear"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/grammarFunctor.ml[593,15569+17]..lib/grammarFunctor.ml[593,15569+23])
                                                                    Texp_ident "buffer/2424"
                                                              ]
                                                            expression (lib/grammarFunctor.ml[594,15594+4]..lib/grammarFunctor.ml[594,15594+5])
                                                              Texp_ident "s/2531"
                                            ]
                                      ]
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[596,15601+2]..lib/grammarFunctor.ml[597,15632+32])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[596,15601+6]..lib/grammarFunctor.ml[596,15601+13])
                                Tpat_var "printao/2532"
                              expression (lib/grammarFunctor.ml[596,15601+14]..lib/grammarFunctor.ml[597,15632+32]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[596,15601+14]..lib/grammarFunctor.ml[596,15601+20])
                                      Tpat_var "offset/2534"
                                    expression (lib/grammarFunctor.ml[596,15601+21]..lib/grammarFunctor.ml[597,15632+32]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (lib/grammarFunctor.ml[596,15601+21]..lib/grammarFunctor.ml[596,15601+28])
                                            Tpat_var "symbols/2535"
                                          expression (lib/grammarFunctor.ml[597,15632+4]..lib/grammarFunctor.ml[597,15632+32])
                                            Texp_apply
                                            expression (lib/grammarFunctor.ml[597,15632+4]..lib/grammarFunctor.ml[597,15632+12])
                                              Texp_ident "printaod/2507"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[597,15632+13]..lib/grammarFunctor.ml[597,15632+19])
                                                  Texp_ident "offset/2534"
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[597,15632+20]..lib/grammarFunctor.ml[597,15632+24])
                                                  Texp_constant Const_int -1
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[597,15632+25]..lib/grammarFunctor.ml[597,15632+32])
                                                  Texp_ident "symbols/2535"
                                            ]
                                      ]
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[599,15666+2]..lib/grammarFunctor.ml[600,15689+21])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[599,15666+6]..lib/grammarFunctor.ml[599,15666+12])
                                Tpat_var "printa/2536"
                              expression (lib/grammarFunctor.ml[599,15666+13]..lib/grammarFunctor.ml[600,15689+21]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[599,15666+13]..lib/grammarFunctor.ml[599,15666+20])
                                      Tpat_var "symbols/2538"
                                    expression (lib/grammarFunctor.ml[600,15689+4]..lib/grammarFunctor.ml[600,15689+21])
                                      Texp_apply
                                      expression (lib/grammarFunctor.ml[600,15689+4]..lib/grammarFunctor.ml[600,15689+11])
                                        Texp_ident "printao/2532"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[600,15689+12]..lib/grammarFunctor.ml[600,15689+13])
                                            Texp_constant Const_int 0
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[600,15689+14]..lib/grammarFunctor.ml[600,15689+21])
                                            Texp_ident "symbols/2538"
                                      ]
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[602,15712+2]..lib/grammarFunctor.ml[603,15735+34])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[602,15712+6]..lib/grammarFunctor.ml[602,15712+12])
                                Tpat_var "printl/2539"
                              expression (lib/grammarFunctor.ml[602,15712+13]..lib/grammarFunctor.ml[603,15735+34]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[602,15712+13]..lib/grammarFunctor.ml[602,15712+20])
                                      Tpat_var "symbols/2541"
                                    expression (lib/grammarFunctor.ml[603,15735+4]..lib/grammarFunctor.ml[603,15735+34])
                                      Texp_apply
                                      expression (lib/grammarFunctor.ml[603,15735+4]..lib/grammarFunctor.ml[603,15735+10])
                                        Texp_ident "printa/2536"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[603,15735+11]..lib/grammarFunctor.ml[603,15735+34])
                                            Texp_apply
                                            expression (lib/grammarFunctor.ml[603,15735+12]..lib/grammarFunctor.ml[603,15735+25])
                                              Texp_ident "Stdlib!.Array.of_list"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[603,15735+26]..lib/grammarFunctor.ml[603,15735+33])
                                                  Texp_ident "symbols/2541"
                                            ]
                                      ]
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[605,15771+2]..lib/grammarFunctor.ml[612,15922+20])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[605,15771+6]..lib/grammarFunctor.ml[605,15771+12])
                                Tpat_var "lookup/2542"
                              expression (lib/grammarFunctor.ml[605,15771+13]..lib/grammarFunctor.ml[612,15922+20]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[605,15771+13]..lib/grammarFunctor.ml[605,15771+17])
                                      Tpat_var "name/2544"
                                    expression (lib/grammarFunctor.ml[606,15791+4]..lib/grammarFunctor.ml[612,15922+20])
                                      Texp_try
                                      expression (lib/grammarFunctor.ml[607,15799+6]..lib/grammarFunctor.ml[607,15799+30])
                                        Texp_construct "T"
                                        [
                                          expression (lib/grammarFunctor.ml[607,15799+8]..lib/grammarFunctor.ml[607,15799+30])
                                            Texp_apply
                                            expression (lib/grammarFunctor.ml[607,15799+9]..lib/grammarFunctor.ml[607,15799+24])
                                              Texp_ident "Terminal/2246.lookup"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[607,15799+25]..lib/grammarFunctor.ml[607,15799+29])
                                                  Texp_ident "name/2544"
                                            ]
                                        ]
                                      [
                                        <case>
                                          pattern (lib/grammarFunctor.ml[608,15830+9]..lib/grammarFunctor.ml[608,15830+18])
                                            Tpat_construct "Not_found"
                                            []
                                            None
                                          expression (lib/grammarFunctor.ml[609,15852+6]..lib/grammarFunctor.ml[612,15922+20])
                                            Texp_try
                                            expression (lib/grammarFunctor.ml[610,15862+8]..lib/grammarFunctor.ml[610,15862+35])
                                              Texp_construct "N"
                                              [
                                                expression (lib/grammarFunctor.ml[610,15862+10]..lib/grammarFunctor.ml[610,15862+35])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[610,15862+11]..lib/grammarFunctor.ml[610,15862+29])
                                                    Texp_ident "Nonterminal/2057.lookup"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[610,15862+30]..lib/grammarFunctor.ml[610,15862+34])
                                                        Texp_ident "name/2544"
                                                  ]
                                              ]
                                            [
                                              <case>
                                                pattern (lib/grammarFunctor.ml[611,15898+11]..lib/grammarFunctor.ml[611,15898+20])
                                                  Tpat_construct "Not_found"
                                                  []
                                                  None
                                                expression (lib/grammarFunctor.ml[612,15922+8]..lib/grammarFunctor.ml[612,15922+20])
                                                  Texp_assert                                                  expression (lib/grammarFunctor.ml[612,15922+15]..lib/grammarFunctor.ml[612,15922+20])
                                                    Texp_construct "false"
                                                    []
                                            ]
                                      ]
                                ]
                          ]
                      ]
                structure_item (lib/grammarFunctor.ml[618,16028+0]..lib/grammarFunctor.ml[640,16385+3])
                  Tstr_module
                  SymbolSet/2738
                    module_expr (lib/grammarFunctor.ml[618,16028+19]..lib/grammarFunctor.ml[640,16385+3])
                      Tmod_structure
                      [
                        structure_item (lib/grammarFunctor.ml[620,16055+2]..lib/grammarFunctor.ml[620,16055+26])
                          Tstr_include                          module_expr (lib/grammarFunctor.ml[620,16055+10]..lib/grammarFunctor.ml[620,16055+26])
                            Tmod_apply
                            module_expr (lib/grammarFunctor.ml[620,16055+10]..lib/grammarFunctor.ml[620,16055+18])
                              module_expr (lib/grammarFunctor.ml[620,16055+10]..lib/grammarFunctor.ml[620,16055+18])
                                Tmod_ident "Stdlib!.Set.Make"
                            module_expr (lib/grammarFunctor.ml[620,16055+19]..lib/grammarFunctor.ml[620,16055+25])
                              Tmod_ident "Symbol/2545"
                        structure_item (lib/grammarFunctor.ml[622,16083+2]..lib/grammarFunctor.ml[623,16105+36])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[622,16083+6]..lib/grammarFunctor.ml[622,16083+11])
                                Tpat_var "print/2687"
                              expression (lib/grammarFunctor.ml[622,16083+12]..lib/grammarFunctor.ml[623,16105+36]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[622,16083+12]..lib/grammarFunctor.ml[622,16083+19])
                                      Tpat_var "symbols/2688"
                                    expression (lib/grammarFunctor.ml[623,16105+4]..lib/grammarFunctor.ml[623,16105+36])
                                      Texp_apply
                                      expression (lib/grammarFunctor.ml[623,16105+4]..lib/grammarFunctor.ml[623,16105+17])
                                        Texp_ident "Symbol/2545.printl"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[623,16105+18]..lib/grammarFunctor.ml[623,16105+36])
                                            Texp_apply
                                            expression (lib/grammarFunctor.ml[623,16105+19]..lib/grammarFunctor.ml[623,16105+27])
                                              Texp_ident "elements/2653"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[623,16105+28]..lib/grammarFunctor.ml[623,16105+35])
                                                  Texp_ident "symbols/2688"
                                            ]
                                      ]
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[628,16286+2]..lib/grammarFunctor.ml[629,16304+5])
                          Tstr_type Rec
                          [
                            type_declaration property/2734 (lib/grammarFunctor.ml[628,16286+2]..lib/grammarFunctor.ml[629,16304+5])
                              ptype_params =
                                []
                              ptype_cstrs =
                                []
                              ptype_kind =
                                Ttype_abstract
                              ptype_private = Public
                              ptype_manifest =
                                Some
                                  core_type (lib/grammarFunctor.ml[629,16304+4]..lib/grammarFunctor.ml[629,16304+5])
                                    Ttyp_constr "t/2643"
                                    []
                          ]
                        structure_item (lib/grammarFunctor.ml[631,16311+2]..lib/grammarFunctor.ml[632,16326+9])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[631,16311+6]..lib/grammarFunctor.ml[631,16311+12])
                                Tpat_var "bottom/2735"
                              expression (lib/grammarFunctor.ml[632,16326+4]..lib/grammarFunctor.ml[632,16326+9])
                                Texp_ident "empty/2644"
                          ]
                        structure_item (lib/grammarFunctor.ml[634,16337+2]..lib/grammarFunctor.ml[635,16349+10])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[634,16337+6]..lib/grammarFunctor.ml[634,16337+9])
                                Tpat_var "leq/2736"
                              expression (lib/grammarFunctor.ml[635,16349+4]..lib/grammarFunctor.ml[635,16349+10])
                                Texp_ident "subset/2677"
                          ]
                        structure_item (lib/grammarFunctor.ml[637,16361+2]..lib/grammarFunctor.ml[638,16374+9])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[637,16361+6]..lib/grammarFunctor.ml[637,16361+10])
                                Tpat_var "join/2737"
                              expression (lib/grammarFunctor.ml[638,16374+4]..lib/grammarFunctor.ml[638,16374+9])
                                Texp_ident "union/2648"
                          ]
                      ]
                structure_item (lib/grammarFunctor.ml[644,16416+0]..lib/grammarFunctor.ml[663,16756+3])
                  Tstr_module
                  SymbolMap/2943
                    module_expr (lib/grammarFunctor.ml[644,16416+19]..lib/grammarFunctor.ml[663,16756+3])
                      Tmod_structure
                      [
                        structure_item (lib/grammarFunctor.ml[646,16443+2]..lib/grammarFunctor.ml[646,16443+26])
                          Tstr_include                          module_expr (lib/grammarFunctor.ml[646,16443+10]..lib/grammarFunctor.ml[646,16443+26])
                            Tmod_apply
                            module_expr (lib/grammarFunctor.ml[646,16443+10]..lib/grammarFunctor.ml[646,16443+18])
                              module_expr (lib/grammarFunctor.ml[646,16443+10]..lib/grammarFunctor.ml[646,16443+18])
                                Tmod_ident "Stdlib!.Map.Make"
                            module_expr (lib/grammarFunctor.ml[646,16443+19]..lib/grammarFunctor.ml[646,16443+25])
                              Tmod_ident "Symbol/2545"
                        structure_item (lib/grammarFunctor.ml[648,16471+2]..lib/grammarFunctor.ml[651,16540+10])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[648,16471+6]..lib/grammarFunctor.ml[648,16471+12])
                                Tpat_var "domain/2880"
                              expression (lib/grammarFunctor.ml[648,16471+13]..lib/grammarFunctor.ml[651,16540+10]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[648,16471+13]..lib/grammarFunctor.ml[648,16471+14])
                                      Tpat_var "m/2882"
                                    expression (lib/grammarFunctor.ml[649,16488+4]..lib/grammarFunctor.ml[651,16540+10])
                                      Texp_apply
                                      expression (lib/grammarFunctor.ml[649,16488+4]..lib/grammarFunctor.ml[649,16488+8])
                                        Texp_ident "fold/2860"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[649,16488+9]..lib/grammarFunctor.ml[651,16540+5])
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (lib/grammarFunctor.ml[649,16488+14]..lib/grammarFunctor.ml[649,16488+20])
                                                  Tpat_var "symbol/2883"
                                                expression (lib/grammarFunctor.ml[649,16488+21]..lib/grammarFunctor.ml[650,16519+20]) ghost
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (lib/grammarFunctor.ml[649,16488+21]..lib/grammarFunctor.ml[649,16488+22])
                                                        Tpat_any
                                                      expression (lib/grammarFunctor.ml[649,16488+23]..lib/grammarFunctor.ml[650,16519+20]) ghost
                                                        Texp_function
                                                        Nolabel
                                                        [
                                                          <case>
                                                            pattern (lib/grammarFunctor.ml[649,16488+23]..lib/grammarFunctor.ml[649,16488+27])
                                                              Tpat_var "accu/2884"
                                                            expression (lib/grammarFunctor.ml[650,16519+6]..lib/grammarFunctor.ml[650,16519+20])
                                                              Texp_construct "::"
                                                              [
                                                                expression (lib/grammarFunctor.ml[650,16519+6]..lib/grammarFunctor.ml[650,16519+12])
                                                                  Texp_ident "symbol/2883"
                                                                expression (lib/grammarFunctor.ml[650,16519+16]..lib/grammarFunctor.ml[650,16519+20])
                                                                  Texp_ident "accu/2884"
                                                              ]
                                                        ]
                                                  ]
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[651,16540+6]..lib/grammarFunctor.ml[651,16540+7])
                                            Texp_ident "m/2882"
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[651,16540+8]..lib/grammarFunctor.ml[651,16540+10])
                                            Texp_construct "[]"
                                            []
                                      ]
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[653,16552+2]..lib/grammarFunctor.ml[656,16627+14])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[653,16552+6]..lib/grammarFunctor.ml[653,16552+10])
                                Tpat_var "init/2931"
                              expression (lib/grammarFunctor.ml[653,16552+11]..lib/grammarFunctor.ml[656,16627+14]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[653,16552+11]..lib/grammarFunctor.ml[653,16552+12])
                                      Tpat_var "f/2933"
                                    expression (lib/grammarFunctor.ml[653,16552+13]..lib/grammarFunctor.ml[656,16627+14]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (lib/grammarFunctor.ml[653,16552+13]..lib/grammarFunctor.ml[653,16552+15])
                                            Tpat_var "xs/2934"
                                          expression (lib/grammarFunctor.ml[654,16570+4]..lib/grammarFunctor.ml[656,16627+14])
                                            Texp_apply
                                            expression (lib/grammarFunctor.ml[654,16570+4]..lib/grammarFunctor.ml[654,16570+18])
                                              Texp_ident "Stdlib!.List.fold_left"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[654,16570+19]..lib/grammarFunctor.ml[656,16627+5])
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (lib/grammarFunctor.ml[654,16570+24]..lib/grammarFunctor.ml[654,16570+28])
                                                        Tpat_var "accu/2935"
                                                      expression (lib/grammarFunctor.ml[654,16570+29]..lib/grammarFunctor.ml[655,16604+22]) ghost
                                                        Texp_function
                                                        Nolabel
                                                        [
                                                          <case>
                                                            pattern (lib/grammarFunctor.ml[654,16570+29]..lib/grammarFunctor.ml[654,16570+30])
                                                              Tpat_var "x/2936"
                                                            expression (lib/grammarFunctor.ml[655,16604+6]..lib/grammarFunctor.ml[655,16604+22])
                                                              Texp_apply
                                                              expression (lib/grammarFunctor.ml[655,16604+6]..lib/grammarFunctor.ml[655,16604+9])
                                                                Texp_ident "add/2838"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/grammarFunctor.ml[655,16604+10]..lib/grammarFunctor.ml[655,16604+11])
                                                                    Texp_ident "x/2936"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/grammarFunctor.ml[655,16604+12]..lib/grammarFunctor.ml[655,16604+17])
                                                                    Texp_apply
                                                                    expression (lib/grammarFunctor.ml[655,16604+13]..lib/grammarFunctor.ml[655,16604+14])
                                                                      Texp_ident "f/2933"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (lib/grammarFunctor.ml[655,16604+15]..lib/grammarFunctor.ml[655,16604+16])
                                                                          Texp_ident "x/2936"
                                                                    ]
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/grammarFunctor.ml[655,16604+18]..lib/grammarFunctor.ml[655,16604+22])
                                                                    Texp_ident "accu/2935"
                                                              ]
                                                        ]
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[656,16627+6]..lib/grammarFunctor.ml[656,16627+11])
                                                  Texp_ident "empty/2837"
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[656,16627+12]..lib/grammarFunctor.ml[656,16627+14])
                                                  Texp_ident "xs/2934"
                                            ]
                                      ]
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[658,16643+2]..lib/grammarFunctor.ml[661,16742+12])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[658,16643+6]..lib/grammarFunctor.ml[658,16643+23])
                                Tpat_var "purelynonterminal/2937"
                              expression (lib/grammarFunctor.ml[658,16643+24]..lib/grammarFunctor.ml[661,16742+12]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[658,16643+24]..lib/grammarFunctor.ml[658,16643+25])
                                      Tpat_var "m/2939"
                                    expression (lib/grammarFunctor.ml[659,16671+4]..lib/grammarFunctor.ml[661,16742+12])
                                      Texp_apply
                                      expression (lib/grammarFunctor.ml[659,16671+4]..lib/grammarFunctor.ml[659,16671+8])
                                        Texp_ident "fold/2860"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[659,16671+9]..lib/grammarFunctor.ml[661,16742+5])
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (lib/grammarFunctor.ml[659,16671+14]..lib/grammarFunctor.ml[659,16671+20])
                                                  Tpat_var "symbol/2940"
                                                expression (lib/grammarFunctor.ml[659,16671+21]..lib/grammarFunctor.ml[660,16702+39]) ghost
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (lib/grammarFunctor.ml[659,16671+21]..lib/grammarFunctor.ml[659,16671+22])
                                                        Tpat_any
                                                      expression (lib/grammarFunctor.ml[659,16671+23]..lib/grammarFunctor.ml[660,16702+39]) ghost
                                                        Texp_function
                                                        Nolabel
                                                        [
                                                          <case>
                                                            pattern (lib/grammarFunctor.ml[659,16671+23]..lib/grammarFunctor.ml[659,16671+27])
                                                              Tpat_var "accu/2941"
                                                            expression (lib/grammarFunctor.ml[660,16702+6]..lib/grammarFunctor.ml[660,16702+39])
                                                              Texp_apply
                                                              expression (lib/grammarFunctor.ml[660,16702+11]..lib/grammarFunctor.ml[660,16702+13])
                                                                Texp_ident "Stdlib!.&&"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/grammarFunctor.ml[660,16702+6]..lib/grammarFunctor.ml[660,16702+10])
                                                                    Texp_ident "accu/2941"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/grammarFunctor.ml[660,16702+14]..lib/grammarFunctor.ml[660,16702+39])
                                                                    Texp_apply
                                                                    expression (lib/grammarFunctor.ml[660,16702+14]..lib/grammarFunctor.ml[660,16702+32])
                                                                      Texp_ident "Symbol/2545.nonterminal"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (lib/grammarFunctor.ml[660,16702+33]..lib/grammarFunctor.ml[660,16702+39])
                                                                          Texp_ident "symbol/2940"
                                                                    ]
                                                              ]
                                                        ]
                                                  ]
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[661,16742+6]..lib/grammarFunctor.ml[661,16742+7])
                                            Texp_ident "m/2939"
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[661,16742+8]..lib/grammarFunctor.ml[661,16742+12])
                                            Texp_construct "true"
                                            []
                                      ]
                                ]
                          ]
                      ]
                structure_item (lib/grammarFunctor.ml[668,16860+0]..lib/grammarFunctor.ml[1006,26734+3])
                  Tstr_module
                  Production/3564
                    module_expr (lib/grammarFunctor.ml[668,16860+20]..lib/grammarFunctor.ml[1006,26734+3])
                      module_expr (lib/grammarFunctor.ml[668,16860+20]..lib/grammarFunctor.ml[1006,26734+3])
                        Tmod_structure
                        [
                          structure_item (lib/grammarFunctor.ml[670,16888+2]..lib/grammarFunctor.ml[671,16903+9])
                            Tstr_type Rec
                            [
                              type_declaration index/2944 (lib/grammarFunctor.ml[670,16888+2]..lib/grammarFunctor.ml[671,16903+9])
                                ptype_params =
                                  []
                                ptype_cstrs =
                                  []
                                ptype_kind =
                                  Ttype_abstract
                                ptype_private = Public
                                ptype_manifest =
                                  Some
                                    core_type (lib/grammarFunctor.ml[671,16903+6]..lib/grammarFunctor.ml[671,16903+9])
                                      Ttyp_constr "int/1!"
                                      []
                            ]
                          structure_item (lib/grammarFunctor.ml[673,16914+2]..lib/grammarFunctor.ml[674,16930+7])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[673,16914+6]..lib/grammarFunctor.ml[673,16914+13])
                                  Tpat_var "compare/2945"
                                expression (lib/grammarFunctor.ml[674,16930+4]..lib/grammarFunctor.ml[674,16930+7])
                                  Texp_ident "Stdlib!.-"
                            ]
                          structure_item (lib/grammarFunctor.ml[682,17146+2]..lib/grammarFunctor.ml[688,17398+48])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[682,17146+6]..lib/grammarFunctor.ml[682,17146+7])
                                  extra
                                    Tpat_extra_constraint
                                    core_type (lib/grammarFunctor.ml[682,17146+10]..lib/grammarFunctor.ml[682,17146+13])
                                      Ttyp_constr "int/1!"
                                      []
                                  Tpat_alias "n/2946"
                                  pattern (lib/grammarFunctor.ml[682,17146+6]..lib/grammarFunctor.ml[682,17146+7])
                                    Tpat_any
                                expression (lib/grammarFunctor.ml[683,17162+4]..lib/grammarFunctor.ml[688,17398+48])
                                  extra
                                    Texp_constraint
                                    core_type (lib/grammarFunctor.ml[682,17146+10]..lib/grammarFunctor.ml[682,17146+13])
                                      Ttyp_constr "int/1!"
                                      []
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/grammarFunctor.ml[683,17162+8]..lib/grammarFunctor.ml[683,17162+9])
                                        Tpat_var "n/2947"
                                      expression (lib/grammarFunctor.ml[683,17162+12]..lib/grammarFunctor.ml[685,17259+21])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[683,17162+12]..lib/grammarFunctor.ml[683,17162+26])
                                          Texp_ident "Gbnf_parser!.StringMap.fold"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[683,17162+27]..lib/grammarFunctor.ml[685,17259+5])
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[683,17162+32]..lib/grammarFunctor.ml[683,17162+33])
                                                    Tpat_any
                                                  expression (lib/grammarFunctor.ml[683,17162+34]..lib/grammarFunctor.ml[684,17228+30]) ghost
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (lib/grammarFunctor.ml[683,17162+34]..lib/grammarFunctor.ml[683,17162+60])
                                                          Tpat_record
                                                          [
                                                            "branches"
                                                              pattern (lib/grammarFunctor.ml[683,17162+47]..lib/grammarFunctor.ml[683,17162+55])
                                                                Tpat_var "branches/2948"
                                                          ]
                                                        expression (lib/grammarFunctor.ml[683,17162+61]..lib/grammarFunctor.ml[684,17228+30]) ghost
                                                          Texp_function
                                                          Nolabel
                                                          [
                                                            <case>
                                                              pattern (lib/grammarFunctor.ml[683,17162+61]..lib/grammarFunctor.ml[683,17162+62])
                                                                Tpat_var "n/2949"
                                                              expression (lib/grammarFunctor.ml[684,17228+6]..lib/grammarFunctor.ml[684,17228+30])
                                                                Texp_apply
                                                                expression (lib/grammarFunctor.ml[684,17228+8]..lib/grammarFunctor.ml[684,17228+9])
                                                                  Texp_ident "Stdlib!.+"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[684,17228+6]..lib/grammarFunctor.ml[684,17228+7])
                                                                      Texp_ident "n/2949"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[684,17228+10]..lib/grammarFunctor.ml[684,17228+30])
                                                                      Texp_apply
                                                                      expression (lib/grammarFunctor.ml[684,17228+10]..lib/grammarFunctor.ml[684,17228+21])
                                                                        Texp_ident "Stdlib!.List.length"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (lib/grammarFunctor.ml[684,17228+22]..lib/grammarFunctor.ml[684,17228+30])
                                                                            Texp_ident "branches/2948"
                                                                      ]
                                                                ]
                                                          ]
                                                    ]
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[685,17259+6]..lib/grammarFunctor.ml[685,17259+19])
                                              Texp_field
                                              expression (lib/grammarFunctor.ml[685,17259+6]..lib/grammarFunctor.ml[685,17259+13])
                                                Texp_ident "G/1226.grammar"
                                              "rules"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[685,17259+20]..lib/grammarFunctor.ml[685,17259+21])
                                              Texp_constant Const_int 0
                                        ]
                                  ]
                                  expression (lib/grammarFunctor.ml[688,17398+4]..lib/grammarFunctor.ml[688,17398+48])
                                    Texp_apply
                                    expression (lib/grammarFunctor.ml[688,17398+6]..lib/grammarFunctor.ml[688,17398+7])
                                      Texp_ident "Stdlib!.+"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/grammarFunctor.ml[688,17398+4]..lib/grammarFunctor.ml[688,17398+5])
                                          Texp_ident "n/2947"
                                      <arg>
                                        Nolabel
                                        expression (lib/grammarFunctor.ml[688,17398+8]..lib/grammarFunctor.ml[688,17398+48])
                                          Texp_apply
                                          expression (lib/grammarFunctor.ml[688,17398+8]..lib/grammarFunctor.ml[688,17398+26])
                                            Texp_ident "Gbnf_parser!.StringSet.cardinal"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[688,17398+27]..lib/grammarFunctor.ml[688,17398+48])
                                                Texp_field
                                                expression (lib/grammarFunctor.ml[688,17398+27]..lib/grammarFunctor.ml[688,17398+34])
                                                  Texp_ident "G/1226.grammar"
                                                "start_symbols"
                                          ]
                                    ]
                            ]
                          structure_item (lib/grammarFunctor.ml[690,17448+2]..lib/grammarFunctor.ml[691,17465+8])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[690,17448+6]..lib/grammarFunctor.ml[690,17448+9])
                                  Tpat_var "p2i/2952"
                                expression (lib/grammarFunctor.ml[690,17448+10]..lib/grammarFunctor.ml[691,17465+8]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[690,17448+10]..lib/grammarFunctor.ml[690,17448+14])
                                        Tpat_var "prod/2954"
                                      expression (lib/grammarFunctor.ml[691,17465+4]..lib/grammarFunctor.ml[691,17465+8])
                                        Texp_ident "prod/2954"
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[693,17475+2]..lib/grammarFunctor.ml[695,17528+8])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[693,17475+6]..lib/grammarFunctor.ml[693,17475+9])
                                  Tpat_var "i2p/2955"
                                expression (lib/grammarFunctor.ml[693,17475+10]..lib/grammarFunctor.ml[695,17528+8]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[693,17475+10]..lib/grammarFunctor.ml[693,17475+14])
                                        Tpat_var "prod/2957"
                                      expression (lib/grammarFunctor.ml[694,17492+4]..lib/grammarFunctor.ml[695,17528+8])
                                        Texp_sequence
                                        expression (lib/grammarFunctor.ml[694,17492+4]..lib/grammarFunctor.ml[694,17492+34])
                                          Texp_assert                                          expression (lib/grammarFunctor.ml[694,17492+11]..lib/grammarFunctor.ml[694,17492+34])
                                            Texp_apply
                                            expression (lib/grammarFunctor.ml[694,17492+22]..lib/grammarFunctor.ml[694,17492+24])
                                              Texp_ident "Stdlib!.&&"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[694,17492+12]..lib/grammarFunctor.ml[694,17492+21])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[694,17492+17]..lib/grammarFunctor.ml[694,17492+19])
                                                    Texp_ident "Stdlib!.>="
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[694,17492+12]..lib/grammarFunctor.ml[694,17492+16])
                                                        Texp_ident "prod/2957"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[694,17492+20]..lib/grammarFunctor.ml[694,17492+21])
                                                        Texp_constant Const_int 0
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[694,17492+25]..lib/grammarFunctor.ml[694,17492+33])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[694,17492+30]..lib/grammarFunctor.ml[694,17492+31])
                                                    Texp_ident "Stdlib!.<"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[694,17492+25]..lib/grammarFunctor.ml[694,17492+29])
                                                        Texp_ident "prod/2957"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[694,17492+32]..lib/grammarFunctor.ml[694,17492+33])
                                                        Texp_ident "n/2946"
                                                  ]
                                            ]
                                        expression (lib/grammarFunctor.ml[695,17528+4]..lib/grammarFunctor.ml[695,17528+8])
                                          Texp_ident "prod/2957"
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[711,18397+2]..lib/grammarFunctor.ml[712,18452+27])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[711,18397+6]..lib/grammarFunctor.ml[711,18397+11])
                                  extra
                                    Tpat_extra_constraint
                                    core_type (lib/grammarFunctor.ml[711,18397+14]..lib/grammarFunctor.ml[711,18397+52])
                                      Ttyp_constr "array/8!"
                                      [
                                        core_type (lib/grammarFunctor.ml[711,18397+15]..lib/grammarFunctor.ml[711,18397+45])
                                          Ttyp_tuple
                                          [
                                            core_type (lib/grammarFunctor.ml[711,18397+15]..lib/grammarFunctor.ml[711,18397+28])
                                              Ttyp_constr "Nonterminal/2057.t"
                                              []
                                            core_type (lib/grammarFunctor.ml[711,18397+31]..lib/grammarFunctor.ml[711,18397+45])
                                              Ttyp_constr "array/8!"
                                              [
                                                core_type (lib/grammarFunctor.ml[711,18397+31]..lib/grammarFunctor.ml[711,18397+39])
                                                  Ttyp_constr "Symbol/2545.t"
                                                  []
                                              ]
                                          ]
                                      ]
                                  Tpat_alias "table/2958"
                                  pattern (lib/grammarFunctor.ml[711,18397+6]..lib/grammarFunctor.ml[711,18397+11])
                                    Tpat_any
                                expression (lib/grammarFunctor.ml[712,18452+4]..lib/grammarFunctor.ml[712,18452+27])
                                  extra
                                    Texp_constraint
                                    core_type (lib/grammarFunctor.ml[711,18397+14]..lib/grammarFunctor.ml[711,18397+52])
                                      Ttyp_constr "array/8!"
                                      [
                                        core_type (lib/grammarFunctor.ml[711,18397+15]..lib/grammarFunctor.ml[711,18397+45])
                                          Ttyp_tuple
                                          [
                                            core_type (lib/grammarFunctor.ml[711,18397+15]..lib/grammarFunctor.ml[711,18397+28])
                                              Ttyp_constr "Nonterminal/2057.t"
                                              []
                                            core_type (lib/grammarFunctor.ml[711,18397+31]..lib/grammarFunctor.ml[711,18397+45])
                                              Ttyp_constr "array/8!"
                                              [
                                                core_type (lib/grammarFunctor.ml[711,18397+31]..lib/grammarFunctor.ml[711,18397+39])
                                                  Ttyp_constr "Symbol/2545.t"
                                                  []
                                              ]
                                          ]
                                      ]
                                  Texp_apply
                                  expression (lib/grammarFunctor.ml[712,18452+4]..lib/grammarFunctor.ml[712,18452+14])
                                    Texp_ident "Stdlib!.Array.make"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[712,18452+15]..lib/grammarFunctor.ml[712,18452+16])
                                        Texp_ident "n/2946"
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[712,18452+17]..lib/grammarFunctor.ml[712,18452+27])
                                        Texp_tuple
                                        [
                                          expression (lib/grammarFunctor.ml[712,18452+18]..lib/grammarFunctor.ml[712,18452+20])
                                            Texp_constant Const_int -1
                                          expression (lib/grammarFunctor.ml[712,18452+22]..lib/grammarFunctor.ml[712,18452+26])
                                            Texp_array
                                            []
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[714,18481+2]..lib/grammarFunctor.ml[715,18526+21])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[714,18481+6]..lib/grammarFunctor.ml[714,18481+17])
                                  extra
                                    Tpat_extra_constraint
                                    core_type (lib/grammarFunctor.ml[714,18481+20]..lib/grammarFunctor.ml[714,18481+42])
                                      Ttyp_constr "array/8!"
                                      [
                                        core_type (lib/grammarFunctor.ml[714,18481+20]..lib/grammarFunctor.ml[714,18481+36])
                                          Ttyp_constr "array/8!"
                                          [
                                            core_type (lib/grammarFunctor.ml[714,18481+20]..lib/grammarFunctor.ml[714,18481+30])
                                              Ttyp_constr "Gbnf_parser!.Syntax.identifier"
                                              []
                                          ]
                                      ]
                                  Tpat_alias "identifiers/2959"
                                  pattern (lib/grammarFunctor.ml[714,18481+6]..lib/grammarFunctor.ml[714,18481+17])
                                    Tpat_any
                                expression (lib/grammarFunctor.ml[715,18526+4]..lib/grammarFunctor.ml[715,18526+21])
                                  extra
                                    Texp_constraint
                                    core_type (lib/grammarFunctor.ml[714,18481+20]..lib/grammarFunctor.ml[714,18481+42])
                                      Ttyp_constr "array/8!"
                                      [
                                        core_type (lib/grammarFunctor.ml[714,18481+20]..lib/grammarFunctor.ml[714,18481+36])
                                          Ttyp_constr "array/8!"
                                          [
                                            core_type (lib/grammarFunctor.ml[714,18481+20]..lib/grammarFunctor.ml[714,18481+30])
                                              Ttyp_constr "Gbnf_parser!.Syntax.identifier"
                                              []
                                          ]
                                      ]
                                  Texp_apply
                                  expression (lib/grammarFunctor.ml[715,18526+4]..lib/grammarFunctor.ml[715,18526+14])
                                    Texp_ident "Stdlib!.Array.make"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[715,18526+15]..lib/grammarFunctor.ml[715,18526+16])
                                        Texp_ident "n/2946"
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[715,18526+17]..lib/grammarFunctor.ml[715,18526+21])
                                        Texp_array
                                        []
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[717,18549+2]..lib/grammarFunctor.ml[718,18587+21])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[717,18549+6]..lib/grammarFunctor.ml[717,18549+13])
                                  extra
                                    Tpat_extra_constraint
                                    core_type (lib/grammarFunctor.ml[717,18549+16]..lib/grammarFunctor.ml[717,18549+35])
                                      Ttyp_constr "array/8!"
                                      [
                                        core_type (lib/grammarFunctor.ml[717,18549+16]..lib/grammarFunctor.ml[717,18549+29])
                                          Ttyp_constr "option/10!"
                                          [
                                            core_type (lib/grammarFunctor.ml[717,18549+16]..lib/grammarFunctor.ml[717,18549+22])
                                              Ttyp_constr "Gbnf_parser!.Syntax.action"
                                              []
                                          ]
                                      ]
                                  Tpat_alias "actions/2960"
                                  pattern (lib/grammarFunctor.ml[717,18549+6]..lib/grammarFunctor.ml[717,18549+13])
                                    Tpat_any
                                expression (lib/grammarFunctor.ml[718,18587+4]..lib/grammarFunctor.ml[718,18587+21])
                                  extra
                                    Texp_constraint
                                    core_type (lib/grammarFunctor.ml[717,18549+16]..lib/grammarFunctor.ml[717,18549+35])
                                      Ttyp_constr "array/8!"
                                      [
                                        core_type (lib/grammarFunctor.ml[717,18549+16]..lib/grammarFunctor.ml[717,18549+29])
                                          Ttyp_constr "option/10!"
                                          [
                                            core_type (lib/grammarFunctor.ml[717,18549+16]..lib/grammarFunctor.ml[717,18549+22])
                                              Ttyp_constr "Gbnf_parser!.Syntax.action"
                                              []
                                          ]
                                      ]
                                  Texp_apply
                                  expression (lib/grammarFunctor.ml[718,18587+4]..lib/grammarFunctor.ml[718,18587+14])
                                    Texp_ident "Stdlib!.Array.make"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[718,18587+15]..lib/grammarFunctor.ml[718,18587+16])
                                        Texp_ident "n/2946"
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[718,18587+17]..lib/grammarFunctor.ml[718,18587+21])
                                        Texp_construct "None"
                                        []
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[720,18610+2]..lib/grammarFunctor.ml[721,18653+19])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[720,18610+6]..lib/grammarFunctor.ml[720,18610+15])
                                  extra
                                    Tpat_extra_constraint
                                    core_type (lib/grammarFunctor.ml[720,18610+18]..lib/grammarFunctor.ml[720,18610+40])
                                      Ttyp_constr "array/8!"
                                      [
                                        core_type (lib/grammarFunctor.ml[720,18610+18]..lib/grammarFunctor.ml[720,18610+34])
                                          Ttyp_constr "list/9!"
                                          [
                                            core_type (lib/grammarFunctor.ml[720,18610+18]..lib/grammarFunctor.ml[720,18610+29])
                                              Ttyp_constr "Gbnf_parser!.Positions.t"
                                              []
                                          ]
                                      ]
                                  Tpat_alias "positions/2961"
                                  pattern (lib/grammarFunctor.ml[720,18610+6]..lib/grammarFunctor.ml[720,18610+15])
                                    Tpat_any
                                expression (lib/grammarFunctor.ml[721,18653+4]..lib/grammarFunctor.ml[721,18653+19])
                                  extra
                                    Texp_constraint
                                    core_type (lib/grammarFunctor.ml[720,18610+18]..lib/grammarFunctor.ml[720,18610+40])
                                      Ttyp_constr "array/8!"
                                      [
                                        core_type (lib/grammarFunctor.ml[720,18610+18]..lib/grammarFunctor.ml[720,18610+34])
                                          Ttyp_constr "list/9!"
                                          [
                                            core_type (lib/grammarFunctor.ml[720,18610+18]..lib/grammarFunctor.ml[720,18610+29])
                                              Ttyp_constr "Gbnf_parser!.Positions.t"
                                              []
                                          ]
                                      ]
                                  Texp_apply
                                  expression (lib/grammarFunctor.ml[721,18653+4]..lib/grammarFunctor.ml[721,18653+14])
                                    Texp_ident "Stdlib!.Array.make"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[721,18653+15]..lib/grammarFunctor.ml[721,18653+16])
                                        Texp_ident "n/2946"
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[721,18653+17]..lib/grammarFunctor.ml[721,18653+19])
                                        Texp_construct "[]"
                                        []
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[723,18674+2]..lib/grammarFunctor.ml[724,18729+21])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[723,18674+6]..lib/grammarFunctor.ml[723,18674+20])
                                  extra
                                    Tpat_extra_constraint
                                    core_type (lib/grammarFunctor.ml[723,18674+23]..lib/grammarFunctor.ml[723,18674+52])
                                      Ttyp_constr "array/8!"
                                      [
                                        core_type (lib/grammarFunctor.ml[723,18674+23]..lib/grammarFunctor.ml[723,18674+46])
                                          Ttyp_constr "array/8!"
                                          [
                                            core_type (lib/grammarFunctor.ml[723,18674+23]..lib/grammarFunctor.ml[723,18674+40])
                                              Ttyp_constr "Gbnf_parser!.Syntax.attributes"
                                              []
                                          ]
                                      ]
                                  Tpat_alias "rhs_attributes/2962"
                                  pattern (lib/grammarFunctor.ml[723,18674+6]..lib/grammarFunctor.ml[723,18674+20])
                                    Tpat_any
                                expression (lib/grammarFunctor.ml[724,18729+4]..lib/grammarFunctor.ml[724,18729+21])
                                  extra
                                    Texp_constraint
                                    core_type (lib/grammarFunctor.ml[723,18674+23]..lib/grammarFunctor.ml[723,18674+52])
                                      Ttyp_constr "array/8!"
                                      [
                                        core_type (lib/grammarFunctor.ml[723,18674+23]..lib/grammarFunctor.ml[723,18674+46])
                                          Ttyp_constr "array/8!"
                                          [
                                            core_type (lib/grammarFunctor.ml[723,18674+23]..lib/grammarFunctor.ml[723,18674+40])
                                              Ttyp_constr "Gbnf_parser!.Syntax.attributes"
                                              []
                                          ]
                                      ]
                                  Texp_apply
                                  expression (lib/grammarFunctor.ml[724,18729+4]..lib/grammarFunctor.ml[724,18729+14])
                                    Texp_ident "Stdlib!.Array.make"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[724,18729+15]..lib/grammarFunctor.ml[724,18729+16])
                                        Texp_ident "n/2946"
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[724,18729+17]..lib/grammarFunctor.ml[724,18729+21])
                                        Texp_array
                                        []
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[726,18752+2]..lib/grammarFunctor.ml[727,18800+21])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[726,18752+6]..lib/grammarFunctor.ml[726,18752+15])
                                  extra
                                    Tpat_extra_constraint
                                    core_type (lib/grammarFunctor.ml[726,18752+18]..lib/grammarFunctor.ml[726,18752+45])
                                      Ttyp_constr "array/8!"
                                      [
                                        core_type (lib/grammarFunctor.ml[726,18752+18]..lib/grammarFunctor.ml[726,18752+39])
                                          Ttyp_constr "option/10!"
                                          [
                                            core_type (lib/grammarFunctor.ml[726,18752+18]..lib/grammarFunctor.ml[726,18752+32])
                                              Ttyp_constr "Gbnf_parser!.Positions.located"
                                              [
                                                core_type (lib/grammarFunctor.ml[726,18752+18]..lib/grammarFunctor.ml[726,18752+24])
                                                  Ttyp_constr "Gbnf_parser!.Syntax.symbol"
                                                  []
                                              ]
                                          ]
                                      ]
                                  Tpat_alias "prec_decl/2963"
                                  pattern (lib/grammarFunctor.ml[726,18752+6]..lib/grammarFunctor.ml[726,18752+15])
                                    Tpat_any
                                expression (lib/grammarFunctor.ml[727,18800+4]..lib/grammarFunctor.ml[727,18800+21])
                                  extra
                                    Texp_constraint
                                    core_type (lib/grammarFunctor.ml[726,18752+18]..lib/grammarFunctor.ml[726,18752+45])
                                      Ttyp_constr "array/8!"
                                      [
                                        core_type (lib/grammarFunctor.ml[726,18752+18]..lib/grammarFunctor.ml[726,18752+39])
                                          Ttyp_constr "option/10!"
                                          [
                                            core_type (lib/grammarFunctor.ml[726,18752+18]..lib/grammarFunctor.ml[726,18752+32])
                                              Ttyp_constr "Gbnf_parser!.Positions.located"
                                              [
                                                core_type (lib/grammarFunctor.ml[726,18752+18]..lib/grammarFunctor.ml[726,18752+24])
                                                  Ttyp_constr "Gbnf_parser!.Syntax.symbol"
                                                  []
                                              ]
                                          ]
                                      ]
                                  Texp_apply
                                  expression (lib/grammarFunctor.ml[727,18800+4]..lib/grammarFunctor.ml[727,18800+14])
                                    Texp_ident "Stdlib!.Array.make"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[727,18800+15]..lib/grammarFunctor.ml[727,18800+16])
                                        Texp_ident "n/2946"
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[727,18800+17]..lib/grammarFunctor.ml[727,18800+21])
                                        Texp_construct "None"
                                        []
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[729,18823+2]..lib/grammarFunctor.ml[734,19159+22])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[729,18823+6]..lib/grammarFunctor.ml[729,18823+22])
                                  extra
                                    Tpat_extra_constraint
                                    core_type (lib/grammarFunctor.ml[729,18823+25]..lib/grammarFunctor.ml[729,18823+54])
                                      Ttyp_constr "array/8!"
                                      [
                                        core_type (lib/grammarFunctor.ml[729,18823+25]..lib/grammarFunctor.ml[729,18823+48])
                                          Ttyp_constr "Gbnf_parser!.Syntax.branch_production_level"
                                          []
                                      ]
                                  Tpat_alias "production_level/2999"
                                  pattern (lib/grammarFunctor.ml[729,18823+6]..lib/grammarFunctor.ml[729,18823+22])
                                    Tpat_any
                                expression (lib/grammarFunctor.ml[733,19090+4]..lib/grammarFunctor.ml[734,19159+22])
                                  extra
                                    Texp_constraint
                                    core_type (lib/grammarFunctor.ml[729,18823+25]..lib/grammarFunctor.ml[729,18823+54])
                                      Ttyp_constr "array/8!"
                                      [
                                        core_type (lib/grammarFunctor.ml[729,18823+25]..lib/grammarFunctor.ml[729,18823+48])
                                          Ttyp_constr "Gbnf_parser!.Syntax.branch_production_level"
                                          []
                                      ]
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/grammarFunctor.ml[733,19090+8]..lib/grammarFunctor.ml[733,19090+13])
                                        Tpat_var "dummy/3000"
                                      expression (lib/grammarFunctor.ml[733,19090+16]..lib/grammarFunctor.ml[733,19090+65])
                                        Texp_construct "ProductionLevel"
                                        [
                                          expression (lib/grammarFunctor.ml[733,19090+33]..lib/grammarFunctor.ml[733,19090+61])
                                            Texp_ident "Gbnf_parser!.InputFile.builtin_input_file"
                                          expression (lib/grammarFunctor.ml[733,19090+63]..lib/grammarFunctor.ml[733,19090+64])
                                            Texp_constant Const_int 0
                                        ]
                                  ]
                                  expression (lib/grammarFunctor.ml[734,19159+4]..lib/grammarFunctor.ml[734,19159+22])
                                    Texp_apply
                                    expression (lib/grammarFunctor.ml[734,19159+4]..lib/grammarFunctor.ml[734,19159+14])
                                      Texp_ident "Stdlib!.Array.make"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/grammarFunctor.ml[734,19159+15]..lib/grammarFunctor.ml[734,19159+16])
                                          Texp_ident "n/2946"
                                      <arg>
                                        Nolabel
                                        expression (lib/grammarFunctor.ml[734,19159+17]..lib/grammarFunctor.ml[734,19159+22])
                                          Texp_ident "dummy/3000"
                                    ]
                            ]
                          structure_item (lib/grammarFunctor.ml[738,19264+2]..lib/grammarFunctor.ml[739,19300+37])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[738,19264+6]..lib/grammarFunctor.ml[738,19264+13])
                                  extra
                                    Tpat_extra_constraint
                                    core_type (lib/grammarFunctor.ml[738,19264+16]..lib/grammarFunctor.ml[738,19264+33])
                                      Ttyp_constr "array/8!"
                                      [
                                        core_type (lib/grammarFunctor.ml[738,19264+17]..lib/grammarFunctor.ml[738,19264+26])
                                          Ttyp_tuple
                                          [
                                            core_type (lib/grammarFunctor.ml[738,19264+17]..lib/grammarFunctor.ml[738,19264+20])
                                              Ttyp_constr "int/1!"
                                              []
                                            core_type (lib/grammarFunctor.ml[738,19264+23]..lib/grammarFunctor.ml[738,19264+26])
                                              Ttyp_constr "int/1!"
                                              []
                                          ]
                                      ]
                                  Tpat_alias "ntprods/3015"
                                  pattern (lib/grammarFunctor.ml[738,19264+6]..lib/grammarFunctor.ml[738,19264+13])
                                    Tpat_any
                                expression (lib/grammarFunctor.ml[739,19300+4]..lib/grammarFunctor.ml[739,19300+37])
                                  extra
                                    Texp_constraint
                                    core_type (lib/grammarFunctor.ml[738,19264+16]..lib/grammarFunctor.ml[738,19264+33])
                                      Ttyp_constr "array/8!"
                                      [
                                        core_type (lib/grammarFunctor.ml[738,19264+17]..lib/grammarFunctor.ml[738,19264+26])
                                          Ttyp_tuple
                                          [
                                            core_type (lib/grammarFunctor.ml[738,19264+17]..lib/grammarFunctor.ml[738,19264+20])
                                              Ttyp_constr "int/1!"
                                              []
                                            core_type (lib/grammarFunctor.ml[738,19264+23]..lib/grammarFunctor.ml[738,19264+26])
                                              Ttyp_constr "int/1!"
                                              []
                                          ]
                                      ]
                                  Texp_apply
                                  expression (lib/grammarFunctor.ml[739,19300+4]..lib/grammarFunctor.ml[739,19300+14])
                                    Texp_ident "Stdlib!.Array.make"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[739,19300+15]..lib/grammarFunctor.ml[739,19300+28])
                                        Texp_ident "Nonterminal/2057.n"
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[739,19300+29]..lib/grammarFunctor.ml[739,19300+37])
                                        Texp_tuple
                                        [
                                          expression (lib/grammarFunctor.ml[739,19300+30]..lib/grammarFunctor.ml[739,19300+32])
                                            Texp_constant Const_int -1
                                          expression (lib/grammarFunctor.ml[739,19300+34]..lib/grammarFunctor.ml[739,19300+36])
                                            Texp_constant Const_int -1
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[743,19418+2]..lib/grammarFunctor.ml[744,19451+13])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[743,19418+6]..lib/grammarFunctor.ml[743,19418+30])
                                  Tpat_var "grammar_uses_error_token/3016"
                                expression (lib/grammarFunctor.ml[744,19451+4]..lib/grammarFunctor.ml[744,19451+13])
                                  Texp_apply
                                  expression (lib/grammarFunctor.ml[744,19451+4]..lib/grammarFunctor.ml[744,19451+7])
                                    Texp_ident "Stdlib!.ref"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[744,19451+8]..lib/grammarFunctor.ml[744,19451+13])
                                        Texp_construct "false"
                                        []
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[751,19755+2]..lib/grammarFunctor.ml[762,20197+53])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[751,19755+6]..lib/grammarFunctor.ml[752,19776+43])
                                  Tpat_tuple
                                  [
                                    pattern (lib/grammarFunctor.ml[751,19755+7]..lib/grammarFunctor.ml[751,19755+12])
                                      extra
                                        Tpat_extra_constraint
                                        core_type (lib/grammarFunctor.ml[751,19755+15]..lib/grammarFunctor.ml[751,19755+18])
                                          Ttyp_constr "int/1!"
                                          []
                                      Tpat_alias "start/3017"
                                      pattern (lib/grammarFunctor.ml[751,19755+7]..lib/grammarFunctor.ml[751,19755+12])
                                        Tpat_any
                                    pattern (lib/grammarFunctor.ml[752,19776+7]..lib/grammarFunctor.ml[752,19776+17])
                                      extra
                                        Tpat_extra_constraint
                                        core_type (lib/grammarFunctor.ml[752,19776+20]..lib/grammarFunctor.ml[752,19776+42])
                                          Ttyp_constr "NonterminalMap/2063.t"
                                          [
                                            core_type (lib/grammarFunctor.ml[752,19776+20]..lib/grammarFunctor.ml[752,19776+25])
                                              Ttyp_constr "index/2944"
                                              []
                                          ]
                                      Tpat_alias "startprods/3018"
                                      pattern (lib/grammarFunctor.ml[752,19776+7]..lib/grammarFunctor.ml[752,19776+17])
                                        Tpat_any
                                  ]
                                expression (lib/grammarFunctor.ml[753,19822+4]..lib/grammarFunctor.ml[762,20197+53])
                                  Texp_apply
                                  expression (lib/grammarFunctor.ml[753,19822+4]..lib/grammarFunctor.ml[753,19822+18])
                                    Texp_ident "Gbnf_parser!.StringSet.fold"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[753,19822+19]..lib/grammarFunctor.ml[762,20197+5])
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[753,19822+24]..lib/grammarFunctor.ml[753,19822+35])
                                              Tpat_var "nonterminal/3019"
                                            expression (lib/grammarFunctor.ml[753,19822+36]..lib/grammarFunctor.ml[761,20156+40]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[753,19822+36]..lib/grammarFunctor.ml[753,19822+51])
                                                    Tpat_tuple
                                                    [
                                                      pattern (lib/grammarFunctor.ml[753,19822+37]..lib/grammarFunctor.ml[753,19822+38])
                                                        Tpat_var "k/3020"
                                                      pattern (lib/grammarFunctor.ml[753,19822+40]..lib/grammarFunctor.ml[753,19822+50])
                                                        Tpat_var "startprods/3021"
                                                    ]
                                                  expression (lib/grammarFunctor.ml[754,19877+6]..lib/grammarFunctor.ml[761,20156+40])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (lib/grammarFunctor.ml[754,19877+10]..lib/grammarFunctor.ml[754,19877+12])
                                                          Tpat_var "nt/3022"
                                                        expression (lib/grammarFunctor.ml[754,19877+15]..lib/grammarFunctor.ml[754,19877+45])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[754,19877+15]..lib/grammarFunctor.ml[754,19877+33])
                                                            Texp_ident "Nonterminal/2057.lookup"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[754,19877+34]..lib/grammarFunctor.ml[754,19877+45])
                                                                Texp_ident "nonterminal/3019"
                                                          ]
                                                      <def>
                                                        pattern (lib/grammarFunctor.ml[755,19923+10]..lib/grammarFunctor.ml[755,19923+13])
                                                          Tpat_var "nt'/3023"
                                                        expression (lib/grammarFunctor.ml[755,19923+16]..lib/grammarFunctor.ml[755,19923+54])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[755,19923+16]..lib/grammarFunctor.ml[755,19923+34])
                                                            Texp_ident "Nonterminal/2057.lookup"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[755,19923+35]..lib/grammarFunctor.ml[755,19923+54])
                                                                Texp_apply
                                                                expression (lib/grammarFunctor.ml[755,19923+48]..lib/grammarFunctor.ml[755,19923+49])
                                                                  Texp_ident "Stdlib!.^"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[755,19923+36]..lib/grammarFunctor.ml[755,19923+47])
                                                                      Texp_ident "nonterminal/3019"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[755,19923+50]..lib/grammarFunctor.ml[755,19923+53])
                                                                      Texp_constant Const_string("'",(lib/grammarFunctor.ml[755,19923+51]..lib/grammarFunctor.ml[755,19923+52]),None)
                                                                ]
                                                          ]
                                                    ]
                                                    expression (lib/grammarFunctor.ml[756,19981+6]..lib/grammarFunctor.ml[761,20156+40])
                                                      Texp_sequence
                                                      expression (lib/grammarFunctor.ml[756,19981+6]..lib/grammarFunctor.ml[756,19981+43])
                                                        Texp_apply
                                                        expression (lib/grammarFunctor.ml[756,19981+6]..lib/grammarFunctor.ml[756,19981+43]) ghost
                                                          Texp_ident "Stdlib!.Array.set"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[756,19981+6]..lib/grammarFunctor.ml[756,19981+11])
                                                              Texp_ident "table/2958"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[756,19981+13]..lib/grammarFunctor.ml[756,19981+14])
                                                              Texp_ident "k/3020"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[756,19981+19]..lib/grammarFunctor.ml[756,19981+43])
                                                              Texp_tuple
                                                              [
                                                                expression (lib/grammarFunctor.ml[756,19981+20]..lib/grammarFunctor.ml[756,19981+23])
                                                                  Texp_ident "nt'/3023"
                                                                expression (lib/grammarFunctor.ml[756,19981+25]..lib/grammarFunctor.ml[756,19981+42])
                                                                  Texp_array
                                                                  [
                                                                    expression (lib/grammarFunctor.ml[756,19981+28]..lib/grammarFunctor.ml[756,19981+39])
                                                                      Texp_construct "Symbol.N"
                                                                      [
                                                                        expression (lib/grammarFunctor.ml[756,19981+37]..lib/grammarFunctor.ml[756,19981+39])
                                                                          Texp_ident "nt/3022"
                                                                      ]
                                                                  ]
                                                              ]
                                                        ]
                                                      expression (lib/grammarFunctor.ml[757,20026+6]..lib/grammarFunctor.ml[761,20156+40])
                                                        Texp_sequence
                                                        expression (lib/grammarFunctor.ml[757,20026+6]..lib/grammarFunctor.ml[757,20026+35])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[757,20026+6]..lib/grammarFunctor.ml[757,20026+35]) ghost
                                                            Texp_ident "Stdlib!.Array.set"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[757,20026+6]..lib/grammarFunctor.ml[757,20026+17])
                                                                Texp_ident "identifiers/2959"
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[757,20026+19]..lib/grammarFunctor.ml[757,20026+20])
                                                                Texp_ident "k/3020"
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[757,20026+25]..lib/grammarFunctor.ml[757,20026+35])
                                                                Texp_array
                                                                [
                                                                  expression (lib/grammarFunctor.ml[757,20026+28]..lib/grammarFunctor.ml[757,20026+32])
                                                                    Texp_constant Const_string("_1",(lib/grammarFunctor.ml[757,20026+29]..lib/grammarFunctor.ml[757,20026+31]),None)
                                                                ]
                                                          ]
                                                        expression (lib/grammarFunctor.ml[758,20063+6]..lib/grammarFunctor.ml[761,20156+40])
                                                          Texp_sequence
                                                          expression (lib/grammarFunctor.ml[758,20063+6]..lib/grammarFunctor.ml[758,20063+31])
                                                            Texp_apply
                                                            expression (lib/grammarFunctor.ml[758,20063+6]..lib/grammarFunctor.ml[758,20063+31]) ghost
                                                              Texp_ident "Stdlib!.Array.set"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/grammarFunctor.ml[758,20063+6]..lib/grammarFunctor.ml[758,20063+13])
                                                                  Texp_ident "ntprods/3015"
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/grammarFunctor.ml[758,20063+15]..lib/grammarFunctor.ml[758,20063+18])
                                                                  Texp_ident "nt'/3023"
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/grammarFunctor.ml[758,20063+23]..lib/grammarFunctor.ml[758,20063+31])
                                                                  Texp_tuple
                                                                  [
                                                                    expression (lib/grammarFunctor.ml[758,20063+24]..lib/grammarFunctor.ml[758,20063+25])
                                                                      Texp_ident "k/3020"
                                                                    expression (lib/grammarFunctor.ml[758,20063+27]..lib/grammarFunctor.ml[758,20063+30])
                                                                      Texp_apply
                                                                      expression (lib/grammarFunctor.ml[758,20063+28]..lib/grammarFunctor.ml[758,20063+29])
                                                                        Texp_ident "Stdlib!.+"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (lib/grammarFunctor.ml[758,20063+27]..lib/grammarFunctor.ml[758,20063+28])
                                                                            Texp_ident "k/3020"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (lib/grammarFunctor.ml[758,20063+29]..lib/grammarFunctor.ml[758,20063+30])
                                                                            Texp_constant Const_int 1
                                                                      ]
                                                                  ]
                                                            ]
                                                          expression (lib/grammarFunctor.ml[759,20096+6]..lib/grammarFunctor.ml[761,20156+40])
                                                            Texp_sequence
                                                            expression (lib/grammarFunctor.ml[759,20096+6]..lib/grammarFunctor.ml[759,20096+47])
                                                              Texp_apply
                                                              expression (lib/grammarFunctor.ml[759,20096+6]..lib/grammarFunctor.ml[759,20096+47]) ghost
                                                                Texp_ident "Stdlib!.Array.set"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/grammarFunctor.ml[759,20096+6]..lib/grammarFunctor.ml[759,20096+15])
                                                                    Texp_ident "positions/2961"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/grammarFunctor.ml[759,20096+17]..lib/grammarFunctor.ml[759,20096+18])
                                                                    Texp_ident "k/3020"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/grammarFunctor.ml[759,20096+23]..lib/grammarFunctor.ml[759,20096+47])
                                                                    Texp_apply
                                                                    expression (lib/grammarFunctor.ml[759,20096+23]..lib/grammarFunctor.ml[759,20096+44])
                                                                      Texp_ident "Nonterminal/2057.positions"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (lib/grammarFunctor.ml[759,20096+45]..lib/grammarFunctor.ml[759,20096+47])
                                                                          Texp_ident "nt/3022"
                                                                    ]
                                                              ]
                                                            expression (lib/grammarFunctor.ml[760,20145+6]..lib/grammarFunctor.ml[761,20156+40])
                                                              Texp_tuple
                                                              [
                                                                expression (lib/grammarFunctor.ml[760,20145+6]..lib/grammarFunctor.ml[760,20145+9])
                                                                  Texp_apply
                                                                  expression (lib/grammarFunctor.ml[760,20145+7]..lib/grammarFunctor.ml[760,20145+8])
                                                                    Texp_ident "Stdlib!.+"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[760,20145+6]..lib/grammarFunctor.ml[760,20145+7])
                                                                        Texp_ident "k/3020"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[760,20145+8]..lib/grammarFunctor.ml[760,20145+9])
                                                                        Texp_constant Const_int 1
                                                                  ]
                                                                expression (lib/grammarFunctor.ml[761,20156+6]..lib/grammarFunctor.ml[761,20156+40])
                                                                  Texp_apply
                                                                  expression (lib/grammarFunctor.ml[761,20156+6]..lib/grammarFunctor.ml[761,20156+24])
                                                                    Texp_ident "NonterminalMap/2063.add"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[761,20156+25]..lib/grammarFunctor.ml[761,20156+27])
                                                                        Texp_ident "nt/3022"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[761,20156+28]..lib/grammarFunctor.ml[761,20156+29])
                                                                        Texp_ident "k/3020"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[761,20156+30]..lib/grammarFunctor.ml[761,20156+40])
                                                                        Texp_ident "startprods/3021"
                                                                  ]
                                                              ]
                                              ]
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[762,20197+6]..lib/grammarFunctor.ml[762,20197+27])
                                        Texp_field
                                        expression (lib/grammarFunctor.ml[762,20197+6]..lib/grammarFunctor.ml[762,20197+13])
                                          Texp_ident "G/1226.grammar"
                                        "start_symbols"
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[762,20197+28]..lib/grammarFunctor.ml[762,20197+53])
                                        Texp_tuple
                                        [
                                          expression (lib/grammarFunctor.ml[762,20197+29]..lib/grammarFunctor.ml[762,20197+30])
                                            Texp_constant Const_int 0
                                          expression (lib/grammarFunctor.ml[762,20197+32]..lib/grammarFunctor.ml[762,20197+52])
                                            Texp_ident "NonterminalMap/2063.empty"
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[766,20324+2]..lib/grammarFunctor.ml[767,20357+44])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[766,20324+6]..lib/grammarFunctor.ml[766,20324+21])
                                  Tpat_var "producer_symbol/3164"
                                expression (lib/grammarFunctor.ml[766,20324+22]..lib/grammarFunctor.ml[767,20357+44]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[766,20324+22]..lib/grammarFunctor.ml[766,20324+30])
                                        Tpat_var "producer/3165"
                                      expression (lib/grammarFunctor.ml[767,20357+4]..lib/grammarFunctor.ml[767,20357+44])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[767,20357+4]..lib/grammarFunctor.ml[767,20357+17])
                                          Texp_ident "Symbol/2545.lookup"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[767,20357+18]..lib/grammarFunctor.ml[767,20357+44])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[767,20357+19]..lib/grammarFunctor.ml[767,20357+34])
                                                Texp_ident "Gbnf_parser!.BasicSyntax.producer_symbol"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[767,20357+35]..lib/grammarFunctor.ml[767,20357+43])
                                                    Texp_ident "producer/3165"
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[769,20403+2]..lib/grammarFunctor.ml[787,21214+23])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[769,20403+7]..lib/grammarFunctor.ml[769,20403+8])
                                  extra
                                    Tpat_extra_constraint
                                    core_type (lib/grammarFunctor.ml[769,20403+11]..lib/grammarFunctor.ml[769,20403+14])
                                      Ttyp_constr "int/1!"
                                      []
                                  Tpat_any
                                expression (lib/grammarFunctor.ml[769,20403+18]..lib/grammarFunctor.ml[787,21214+23])
                                  extra
                                    Texp_constraint
                                    core_type (lib/grammarFunctor.ml[769,20403+11]..lib/grammarFunctor.ml[769,20403+14])
                                      Ttyp_constr "int/1!"
                                      []
                                  Texp_apply
                                  expression (lib/grammarFunctor.ml[769,20403+18]..lib/grammarFunctor.ml[769,20403+32])
                                    Texp_ident "Gbnf_parser!.StringMap.fold"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[769,20403+33]..lib/grammarFunctor.ml[787,21214+3])
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[769,20403+38]..lib/grammarFunctor.ml[769,20403+49])
                                              Tpat_var "nonterminal/3166"
                                            expression (lib/grammarFunctor.ml[769,20403+50]..lib/grammarFunctor.ml[786,21207+6]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[769,20403+50]..lib/grammarFunctor.ml[769,20403+65])
                                                    Tpat_record
                                                    [
                                                      "branches"
                                                        pattern (lib/grammarFunctor.ml[769,20403+52]..lib/grammarFunctor.ml[769,20403+60])
                                                          Tpat_var "branches/3167"
                                                    ]
                                                  expression (lib/grammarFunctor.ml[769,20403+66]..lib/grammarFunctor.ml[786,21207+6]) ghost
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (lib/grammarFunctor.ml[769,20403+66]..lib/grammarFunctor.ml[769,20403+67])
                                                          Tpat_var "k/3168"
                                                        expression (lib/grammarFunctor.ml[770,20474+4]..lib/grammarFunctor.ml[786,21207+6])
                                                          Texp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (lib/grammarFunctor.ml[770,20474+8]..lib/grammarFunctor.ml[770,20474+10])
                                                                Tpat_var "nt/3169"
                                                              expression (lib/grammarFunctor.ml[770,20474+13]..lib/grammarFunctor.ml[770,20474+43])
                                                                Texp_apply
                                                                expression (lib/grammarFunctor.ml[770,20474+13]..lib/grammarFunctor.ml[770,20474+31])
                                                                  Texp_ident "Nonterminal/2057.lookup"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[770,20474+32]..lib/grammarFunctor.ml[770,20474+43])
                                                                      Texp_ident "nonterminal/3166"
                                                                ]
                                                          ]
                                                          expression (lib/grammarFunctor.ml[771,20521+4]..lib/grammarFunctor.ml[786,21207+6])
                                                            Texp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (lib/grammarFunctor.ml[771,20521+8]..lib/grammarFunctor.ml[771,20521+10])
                                                                  Tpat_var "k'/3170"
                                                                expression (lib/grammarFunctor.ml[771,20521+13]..lib/grammarFunctor.ml[784,21158+16])
                                                                  Texp_apply
                                                                  expression (lib/grammarFunctor.ml[771,20521+13]..lib/grammarFunctor.ml[771,20521+27])
                                                                    Texp_ident "Stdlib!.List.fold_left"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[771,20521+28]..lib/grammarFunctor.ml[784,21158+5])
                                                                        Texp_function
                                                                        Nolabel
                                                                        [
                                                                          <case>
                                                                            pattern (lib/grammarFunctor.ml[771,20521+33]..lib/grammarFunctor.ml[771,20521+34])
                                                                              Tpat_var "k/3171"
                                                                            expression (lib/grammarFunctor.ml[771,20521+35]..lib/grammarFunctor.ml[783,21148+9]) ghost
                                                                              Texp_function
                                                                              Nolabel
                                                                              [
                                                                                <case>
                                                                                  pattern (lib/grammarFunctor.ml[771,20521+35]..lib/grammarFunctor.ml[771,20521+41])
                                                                                    Tpat_var "branch/3172"
                                                                                  expression (lib/grammarFunctor.ml[772,20566+6]..lib/grammarFunctor.ml[783,21148+9])
                                                                                    Texp_let Nonrec
                                                                                    [
                                                                                      <def>
                                                                                        pattern (lib/grammarFunctor.ml[772,20566+10]..lib/grammarFunctor.ml[772,20566+19])
                                                                                          Tpat_var "producers/3173"
                                                                                        expression (lib/grammarFunctor.ml[772,20566+22]..lib/grammarFunctor.ml[772,20566+52])
                                                                                          Texp_apply
                                                                                          expression (lib/grammarFunctor.ml[772,20566+22]..lib/grammarFunctor.ml[772,20566+35])
                                                                                            Texp_ident "Stdlib!.Array.of_list"
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (lib/grammarFunctor.ml[772,20566+36]..lib/grammarFunctor.ml[772,20566+52])
                                                                                                Texp_field
                                                                                                expression (lib/grammarFunctor.ml[772,20566+36]..lib/grammarFunctor.ml[772,20566+42])
                                                                                                  Texp_ident "branch/3172"
                                                                                                "producers"
                                                                                          ]
                                                                                    ]
                                                                                    expression (lib/grammarFunctor.ml[773,20622+6]..lib/grammarFunctor.ml[783,21148+9])
                                                                                      Texp_let Nonrec
                                                                                      [
                                                                                        <def>
                                                                                          pattern (lib/grammarFunctor.ml[773,20622+10]..lib/grammarFunctor.ml[773,20622+13])
                                                                                            Tpat_var "rhs/3174"
                                                                                          expression (lib/grammarFunctor.ml[773,20622+16]..lib/grammarFunctor.ml[773,20622+51])
                                                                                            Texp_apply
                                                                                            expression (lib/grammarFunctor.ml[773,20622+16]..lib/grammarFunctor.ml[773,20622+25])
                                                                                              Texp_ident "Stdlib!.Array.map"
                                                                                            [
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (lib/grammarFunctor.ml[773,20622+26]..lib/grammarFunctor.ml[773,20622+41])
                                                                                                  Texp_ident "producer_symbol/3164"
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (lib/grammarFunctor.ml[773,20622+42]..lib/grammarFunctor.ml[773,20622+51])
                                                                                                  Texp_ident "producers/3173"
                                                                                            ]
                                                                                      ]
                                                                                      expression (lib/grammarFunctor.ml[774,20677+6]..lib/grammarFunctor.ml[783,21148+9])
                                                                                        Texp_sequence
                                                                                        expression (lib/grammarFunctor.ml[774,20677+6]..lib/grammarFunctor.ml[774,20677+28])
                                                                                          Texp_apply
                                                                                          expression (lib/grammarFunctor.ml[774,20677+6]..lib/grammarFunctor.ml[774,20677+28]) ghost
                                                                                            Texp_ident "Stdlib!.Array.set"
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (lib/grammarFunctor.ml[774,20677+6]..lib/grammarFunctor.ml[774,20677+11])
                                                                                                Texp_ident "table/2958"
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (lib/grammarFunctor.ml[774,20677+13]..lib/grammarFunctor.ml[774,20677+14])
                                                                                                Texp_ident "k/3171"
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (lib/grammarFunctor.ml[774,20677+19]..lib/grammarFunctor.ml[774,20677+28])
                                                                                                Texp_tuple
                                                                                                [
                                                                                                  expression (lib/grammarFunctor.ml[774,20677+20]..lib/grammarFunctor.ml[774,20677+22])
                                                                                                    Texp_ident "nt/3169"
                                                                                                  expression (lib/grammarFunctor.ml[774,20677+24]..lib/grammarFunctor.ml[774,20677+27])
                                                                                                    Texp_ident "rhs/3174"
                                                                                                ]
                                                                                          ]
                                                                                        expression (lib/grammarFunctor.ml[775,20707+6]..lib/grammarFunctor.ml[783,21148+9])
                                                                                          Texp_sequence
                                                                                          expression (lib/grammarFunctor.ml[775,20707+6]..lib/grammarFunctor.ml[775,20707+64])
                                                                                            Texp_apply
                                                                                            expression (lib/grammarFunctor.ml[775,20707+6]..lib/grammarFunctor.ml[775,20707+64]) ghost
                                                                                              Texp_ident "Stdlib!.Array.set"
                                                                                            [
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (lib/grammarFunctor.ml[775,20707+6]..lib/grammarFunctor.ml[775,20707+17])
                                                                                                  Texp_ident "identifiers/2959"
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (lib/grammarFunctor.ml[775,20707+19]..lib/grammarFunctor.ml[775,20707+20])
                                                                                                  Texp_ident "k/3171"
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (lib/grammarFunctor.ml[775,20707+25]..lib/grammarFunctor.ml[775,20707+64])
                                                                                                  Texp_apply
                                                                                                  expression (lib/grammarFunctor.ml[775,20707+25]..lib/grammarFunctor.ml[775,20707+34])
                                                                                                    Texp_ident "Stdlib!.Array.map"
                                                                                                  [
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (lib/grammarFunctor.ml[775,20707+35]..lib/grammarFunctor.ml[775,20707+54])
                                                                                                        Texp_ident "Gbnf_parser!.BasicSyntax.producer_identifier"
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (lib/grammarFunctor.ml[775,20707+55]..lib/grammarFunctor.ml[775,20707+64])
                                                                                                        Texp_ident "producers/3173"
                                                                                                  ]
                                                                                            ]
                                                                                          expression (lib/grammarFunctor.ml[776,20773+6]..lib/grammarFunctor.ml[783,21148+9])
                                                                                            Texp_sequence
                                                                                            expression (lib/grammarFunctor.ml[776,20773+6]..lib/grammarFunctor.ml[776,20773+39])
                                                                                              Texp_apply
                                                                                              expression (lib/grammarFunctor.ml[776,20773+6]..lib/grammarFunctor.ml[776,20773+39]) ghost
                                                                                                Texp_ident "Stdlib!.Array.set"
                                                                                              [
                                                                                                <arg>
                                                                                                  Nolabel
                                                                                                  expression (lib/grammarFunctor.ml[776,20773+6]..lib/grammarFunctor.ml[776,20773+13])
                                                                                                    Texp_ident "actions/2960"
                                                                                                <arg>
                                                                                                  Nolabel
                                                                                                  expression (lib/grammarFunctor.ml[776,20773+15]..lib/grammarFunctor.ml[776,20773+16])
                                                                                                    Texp_ident "k/3171"
                                                                                                <arg>
                                                                                                  Nolabel
                                                                                                  expression (lib/grammarFunctor.ml[776,20773+21]..lib/grammarFunctor.ml[776,20773+39])
                                                                                                    Texp_construct "Some"
                                                                                                    [
                                                                                                      expression (lib/grammarFunctor.ml[776,20773+26]..lib/grammarFunctor.ml[776,20773+39])
                                                                                                        Texp_field
                                                                                                        expression (lib/grammarFunctor.ml[776,20773+26]..lib/grammarFunctor.ml[776,20773+32])
                                                                                                          Texp_ident "branch/3172"
                                                                                                        "action"
                                                                                                    ]
                                                                                              ]
                                                                                            expression (lib/grammarFunctor.ml[777,20814+6]..lib/grammarFunctor.ml[783,21148+9])
                                                                                              Texp_sequence
                                                                                              expression (lib/grammarFunctor.ml[777,20814+6]..lib/grammarFunctor.ml[777,20814+67])
                                                                                                Texp_apply
                                                                                                expression (lib/grammarFunctor.ml[777,20814+6]..lib/grammarFunctor.ml[777,20814+67]) ghost
                                                                                                  Texp_ident "Stdlib!.Array.set"
                                                                                                [
                                                                                                  <arg>
                                                                                                    Nolabel
                                                                                                    expression (lib/grammarFunctor.ml[777,20814+6]..lib/grammarFunctor.ml[777,20814+20])
                                                                                                      Texp_ident "rhs_attributes/2962"
                                                                                                  <arg>
                                                                                                    Nolabel
                                                                                                    expression (lib/grammarFunctor.ml[777,20814+22]..lib/grammarFunctor.ml[777,20814+23])
                                                                                                      Texp_ident "k/3171"
                                                                                                  <arg>
                                                                                                    Nolabel
                                                                                                    expression (lib/grammarFunctor.ml[777,20814+28]..lib/grammarFunctor.ml[777,20814+67])
                                                                                                      Texp_apply
                                                                                                      expression (lib/grammarFunctor.ml[777,20814+28]..lib/grammarFunctor.ml[777,20814+37])
                                                                                                        Texp_ident "Stdlib!.Array.map"
                                                                                                      [
                                                                                                        <arg>
                                                                                                          Nolabel
                                                                                                          expression (lib/grammarFunctor.ml[777,20814+38]..lib/grammarFunctor.ml[777,20814+57])
                                                                                                            Texp_ident "Gbnf_parser!.BasicSyntax.producer_attributes"
                                                                                                        <arg>
                                                                                                          Nolabel
                                                                                                          expression (lib/grammarFunctor.ml[777,20814+58]..lib/grammarFunctor.ml[777,20814+67])
                                                                                                            Texp_ident "producers/3173"
                                                                                                      ]
                                                                                                ]
                                                                                              expression (lib/grammarFunctor.ml[778,20883+6]..lib/grammarFunctor.ml[783,21148+9])
                                                                                                Texp_sequence
                                                                                                expression (lib/grammarFunctor.ml[778,20883+6]..lib/grammarFunctor.ml[778,20883+60])
                                                                                                  Texp_apply
                                                                                                  expression (lib/grammarFunctor.ml[778,20883+6]..lib/grammarFunctor.ml[778,20883+60]) ghost
                                                                                                    Texp_ident "Stdlib!.Array.set"
                                                                                                  [
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (lib/grammarFunctor.ml[778,20883+6]..lib/grammarFunctor.ml[778,20883+22])
                                                                                                        Texp_ident "production_level/2999"
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (lib/grammarFunctor.ml[778,20883+24]..lib/grammarFunctor.ml[778,20883+25])
                                                                                                        Texp_ident "k/3171"
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (lib/grammarFunctor.ml[778,20883+30]..lib/grammarFunctor.ml[778,20883+60])
                                                                                                        Texp_field
                                                                                                        expression (lib/grammarFunctor.ml[778,20883+30]..lib/grammarFunctor.ml[778,20883+36])
                                                                                                          Texp_ident "branch/3172"
                                                                                                        "branch_production_level"
                                                                                                  ]
                                                                                                expression (lib/grammarFunctor.ml[779,20945+6]..lib/grammarFunctor.ml[783,21148+9])
                                                                                                  Texp_sequence
                                                                                                  expression (lib/grammarFunctor.ml[779,20945+6]..lib/grammarFunctor.ml[779,20945+52])
                                                                                                    Texp_apply
                                                                                                    expression (lib/grammarFunctor.ml[779,20945+6]..lib/grammarFunctor.ml[779,20945+52]) ghost
                                                                                                      Texp_ident "Stdlib!.Array.set"
                                                                                                    [
                                                                                                      <arg>
                                                                                                        Nolabel
                                                                                                        expression (lib/grammarFunctor.ml[779,20945+6]..lib/grammarFunctor.ml[779,20945+15])
                                                                                                          Texp_ident "prec_decl/2963"
                                                                                                      <arg>
                                                                                                        Nolabel
                                                                                                        expression (lib/grammarFunctor.ml[779,20945+17]..lib/grammarFunctor.ml[779,20945+18])
                                                                                                          Texp_ident "k/3171"
                                                                                                      <arg>
                                                                                                        Nolabel
                                                                                                        expression (lib/grammarFunctor.ml[779,20945+23]..lib/grammarFunctor.ml[779,20945+52])
                                                                                                          Texp_field
                                                                                                          expression (lib/grammarFunctor.ml[779,20945+23]..lib/grammarFunctor.ml[779,20945+29])
                                                                                                            Texp_ident "branch/3172"
                                                                                                          "branch_prec_annotation"
                                                                                                    ]
                                                                                                  expression (lib/grammarFunctor.ml[780,20999+6]..lib/grammarFunctor.ml[783,21148+9])
                                                                                                    Texp_sequence
                                                                                                    expression (lib/grammarFunctor.ml[780,20999+6]..lib/grammarFunctor.ml[780,20999+49])
                                                                                                      Texp_apply
                                                                                                      expression (lib/grammarFunctor.ml[780,20999+6]..lib/grammarFunctor.ml[780,20999+49]) ghost
                                                                                                        Texp_ident "Stdlib!.Array.set"
                                                                                                      [
                                                                                                        <arg>
                                                                                                          Nolabel
                                                                                                          expression (lib/grammarFunctor.ml[780,20999+6]..lib/grammarFunctor.ml[780,20999+15])
                                                                                                            Texp_ident "positions/2961"
                                                                                                        <arg>
                                                                                                          Nolabel
                                                                                                          expression (lib/grammarFunctor.ml[780,20999+17]..lib/grammarFunctor.ml[780,20999+18])
                                                                                                            Texp_ident "k/3171"
                                                                                                        <arg>
                                                                                                          Nolabel
                                                                                                          expression (lib/grammarFunctor.ml[780,20999+23]..lib/grammarFunctor.ml[780,20999+49])
                                                                                                            Texp_construct "::"
                                                                                                            [
                                                                                                              expression (lib/grammarFunctor.ml[780,20999+25]..lib/grammarFunctor.ml[780,20999+47])
                                                                                                                Texp_field
                                                                                                                expression (lib/grammarFunctor.ml[780,20999+25]..lib/grammarFunctor.ml[780,20999+31])
                                                                                                                  Texp_ident "branch/3172"
                                                                                                                "branch_position"
                                                                                                              expression (lib/grammarFunctor.ml[780,20999+48]..lib/grammarFunctor.ml[780,20999+49]) ghost
                                                                                                                Texp_construct "[]"
                                                                                                                []
                                                                                                            ]
                                                                                                      ]
                                                                                                    expression (lib/grammarFunctor.ml[781,21050+6]..lib/grammarFunctor.ml[783,21148+9])
                                                                                                      Texp_sequence
                                                                                                      expression (lib/grammarFunctor.ml[781,21050+6]..lib/grammarFunctor.ml[782,21106+40])
                                                                                                        Texp_ifthenelse
                                                                                                        expression (lib/grammarFunctor.ml[781,21050+9]..lib/grammarFunctor.ml[781,21050+50])
                                                                                                          Texp_apply
                                                                                                          expression (lib/grammarFunctor.ml[781,21050+9]..lib/grammarFunctor.ml[781,21050+12])
                                                                                                            Texp_ident "Stdlib!.not"
                                                                                                          [
                                                                                                            <arg>
                                                                                                              Nolabel
                                                                                                              expression (lib/grammarFunctor.ml[781,21050+13]..lib/grammarFunctor.ml[781,21050+50])
                                                                                                                Texp_apply
                                                                                                                expression (lib/grammarFunctor.ml[781,21050+14]..lib/grammarFunctor.ml[781,21050+28])
                                                                                                                  Texp_ident "Gbnf_parser!.MArray.for_all"
                                                                                                                [
                                                                                                                  <arg>
                                                                                                                    Nolabel
                                                                                                                    expression (lib/grammarFunctor.ml[781,21050+29]..lib/grammarFunctor.ml[781,21050+45])
                                                                                                                      Texp_ident "Symbol/2545.non_error"
                                                                                                                  <arg>
                                                                                                                    Nolabel
                                                                                                                    expression (lib/grammarFunctor.ml[781,21050+46]..lib/grammarFunctor.ml[781,21050+49])
                                                                                                                      Texp_ident "rhs/3174"
                                                                                                                ]
                                                                                                          ]
                                                                                                        expression (lib/grammarFunctor.ml[782,21106+8]..lib/grammarFunctor.ml[782,21106+40])
                                                                                                          Texp_apply
                                                                                                          expression (lib/grammarFunctor.ml[782,21106+33]..lib/grammarFunctor.ml[782,21106+35])
                                                                                                            Texp_ident "Stdlib!.:="
                                                                                                          [
                                                                                                            <arg>
                                                                                                              Nolabel
                                                                                                              expression (lib/grammarFunctor.ml[782,21106+8]..lib/grammarFunctor.ml[782,21106+32])
                                                                                                                Texp_ident "grammar_uses_error_token/3016"
                                                                                                            <arg>
                                                                                                              Nolabel
                                                                                                              expression (lib/grammarFunctor.ml[782,21106+36]..lib/grammarFunctor.ml[782,21106+40])
                                                                                                                Texp_construct "true"
                                                                                                                []
                                                                                                          ]
                                                                                                        None
                                                                                                      expression (lib/grammarFunctor.ml[783,21148+6]..lib/grammarFunctor.ml[783,21148+9])
                                                                                                        Texp_apply
                                                                                                        expression (lib/grammarFunctor.ml[783,21148+7]..lib/grammarFunctor.ml[783,21148+8])
                                                                                                          Texp_ident "Stdlib!.+"
                                                                                                        [
                                                                                                          <arg>
                                                                                                            Nolabel
                                                                                                            expression (lib/grammarFunctor.ml[783,21148+6]..lib/grammarFunctor.ml[783,21148+7])
                                                                                                              Texp_ident "k/3171"
                                                                                                          <arg>
                                                                                                            Nolabel
                                                                                                            expression (lib/grammarFunctor.ml[783,21148+8]..lib/grammarFunctor.ml[783,21148+9])
                                                                                                              Texp_constant Const_int 1
                                                                                                        ]
                                                                              ]
                                                                        ]
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[784,21158+6]..lib/grammarFunctor.ml[784,21158+7])
                                                                        Texp_ident "k/3168"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[784,21158+8]..lib/grammarFunctor.ml[784,21158+16])
                                                                        Texp_ident "branches/3167"
                                                                  ]
                                                            ]
                                                            expression (lib/grammarFunctor.ml[785,21178+4]..lib/grammarFunctor.ml[786,21207+6])
                                                              Texp_sequence
                                                              expression (lib/grammarFunctor.ml[785,21178+4]..lib/grammarFunctor.ml[785,21178+27])
                                                                Texp_apply
                                                                expression (lib/grammarFunctor.ml[785,21178+4]..lib/grammarFunctor.ml[785,21178+27]) ghost
                                                                  Texp_ident "Stdlib!.Array.set"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[785,21178+4]..lib/grammarFunctor.ml[785,21178+11])
                                                                      Texp_ident "ntprods/3015"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[785,21178+13]..lib/grammarFunctor.ml[785,21178+15])
                                                                      Texp_ident "nt/3169"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[785,21178+20]..lib/grammarFunctor.ml[785,21178+27])
                                                                      Texp_tuple
                                                                      [
                                                                        expression (lib/grammarFunctor.ml[785,21178+21]..lib/grammarFunctor.ml[785,21178+22])
                                                                          Texp_ident "k/3168"
                                                                        expression (lib/grammarFunctor.ml[785,21178+24]..lib/grammarFunctor.ml[785,21178+26])
                                                                          Texp_ident "k'/3170"
                                                                      ]
                                                                ]
                                                              expression (lib/grammarFunctor.ml[786,21207+4]..lib/grammarFunctor.ml[786,21207+6])
                                                                Texp_ident "k'/3170"
                                                    ]
                                              ]
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[787,21214+4]..lib/grammarFunctor.ml[787,21214+17])
                                        Texp_field
                                        expression (lib/grammarFunctor.ml[787,21214+4]..lib/grammarFunctor.ml[787,21214+11])
                                          Texp_ident "G/1226.grammar"
                                        "rules"
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[787,21214+18]..lib/grammarFunctor.ml[787,21214+23])
                                        Texp_ident "start/3017"
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[791,21319+2]..lib/grammarFunctor.ml[793,21371+22])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[791,21319+6]..lib/grammarFunctor.ml[791,21319+12])
                                  Tpat_var "iternt/3305"
                                expression (lib/grammarFunctor.ml[791,21319+13]..lib/grammarFunctor.ml[793,21371+22]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[791,21319+13]..lib/grammarFunctor.ml[791,21319+15])
                                        Tpat_var "nt/3307"
                                      expression (lib/grammarFunctor.ml[791,21319+16]..lib/grammarFunctor.ml[793,21371+22]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[791,21319+16]..lib/grammarFunctor.ml[791,21319+17])
                                              Tpat_var "f/3308"
                                            expression (lib/grammarFunctor.ml[792,21339+4]..lib/grammarFunctor.ml[793,21371+22])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (lib/grammarFunctor.ml[792,21339+8]..lib/grammarFunctor.ml[792,21339+13])
                                                    Tpat_tuple
                                                    [
                                                      pattern (lib/grammarFunctor.ml[792,21339+8]..lib/grammarFunctor.ml[792,21339+9])
                                                        Tpat_var "k/3309"
                                                      pattern (lib/grammarFunctor.ml[792,21339+11]..lib/grammarFunctor.ml[792,21339+13])
                                                        Tpat_var "k'/3310"
                                                    ]
                                                  expression (lib/grammarFunctor.ml[792,21339+16]..lib/grammarFunctor.ml[792,21339+28])
                                                    Texp_apply
                                                    expression (lib/grammarFunctor.ml[792,21339+16]..lib/grammarFunctor.ml[792,21339+28]) ghost
                                                      Texp_ident "Stdlib!.Array.get"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[792,21339+16]..lib/grammarFunctor.ml[792,21339+23])
                                                          Texp_ident "ntprods/3015"
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[792,21339+25]..lib/grammarFunctor.ml[792,21339+27])
                                                          Texp_ident "nt/3307"
                                                    ]
                                              ]
                                              expression (lib/grammarFunctor.ml[793,21371+4]..lib/grammarFunctor.ml[793,21371+22])
                                                Texp_apply
                                                expression (lib/grammarFunctor.ml[793,21371+4]..lib/grammarFunctor.ml[793,21371+15])
                                                  Texp_ident "Gbnf_parser!.Misc.iterij"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[793,21371+16]..lib/grammarFunctor.ml[793,21371+17])
                                                      Texp_ident "k/3309"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[793,21371+18]..lib/grammarFunctor.ml[793,21371+20])
                                                      Texp_ident "k'/3310"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[793,21371+21]..lib/grammarFunctor.ml[793,21371+22])
                                                      Texp_ident "f/3308"
                                                ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[795,21395+2]..lib/grammarFunctor.ml[797,21452+27])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[795,21395+6]..lib/grammarFunctor.ml[795,21395+12])
                                  Tpat_var "foldnt/3311"
                                expression (lib/grammarFunctor.ml[795,21395+13]..lib/grammarFunctor.ml[797,21452+27]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[795,21395+13]..lib/grammarFunctor.ml[795,21395+15])
                                        Tpat_var "nt/3313"
                                      expression (lib/grammarFunctor.ml[795,21395+16]..lib/grammarFunctor.ml[797,21452+27]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[795,21395+16]..lib/grammarFunctor.ml[795,21395+17])
                                              Tpat_var "f/3314"
                                            expression (lib/grammarFunctor.ml[795,21395+18]..lib/grammarFunctor.ml[797,21452+27]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[795,21395+18]..lib/grammarFunctor.ml[795,21395+22])
                                                    Tpat_var "accu/3315"
                                                  expression (lib/grammarFunctor.ml[796,21420+4]..lib/grammarFunctor.ml[797,21452+27])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (lib/grammarFunctor.ml[796,21420+8]..lib/grammarFunctor.ml[796,21420+13])
                                                          Tpat_tuple
                                                          [
                                                            pattern (lib/grammarFunctor.ml[796,21420+8]..lib/grammarFunctor.ml[796,21420+9])
                                                              Tpat_var "k/3316"
                                                            pattern (lib/grammarFunctor.ml[796,21420+11]..lib/grammarFunctor.ml[796,21420+13])
                                                              Tpat_var "k'/3317"
                                                          ]
                                                        expression (lib/grammarFunctor.ml[796,21420+16]..lib/grammarFunctor.ml[796,21420+28])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[796,21420+16]..lib/grammarFunctor.ml[796,21420+28]) ghost
                                                            Texp_ident "Stdlib!.Array.get"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[796,21420+16]..lib/grammarFunctor.ml[796,21420+23])
                                                                Texp_ident "ntprods/3015"
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[796,21420+25]..lib/grammarFunctor.ml[796,21420+27])
                                                                Texp_ident "nt/3313"
                                                          ]
                                                    ]
                                                    expression (lib/grammarFunctor.ml[797,21452+4]..lib/grammarFunctor.ml[797,21452+27])
                                                      Texp_apply
                                                      expression (lib/grammarFunctor.ml[797,21452+4]..lib/grammarFunctor.ml[797,21452+15])
                                                        Texp_ident "Gbnf_parser!.Misc.foldij"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[797,21452+16]..lib/grammarFunctor.ml[797,21452+17])
                                                            Texp_ident "k/3316"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[797,21452+18]..lib/grammarFunctor.ml[797,21452+20])
                                                            Texp_ident "k'/3317"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[797,21452+21]..lib/grammarFunctor.ml[797,21452+22])
                                                            Texp_ident "f/3314"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[797,21452+23]..lib/grammarFunctor.ml[797,21452+27])
                                                            Texp_ident "accu/3315"
                                                      ]
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[799,21481+2]..lib/grammarFunctor.ml[801,21532+21])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[799,21481+6]..lib/grammarFunctor.ml[799,21481+11])
                                  Tpat_var "mapnt/3318"
                                expression (lib/grammarFunctor.ml[799,21481+12]..lib/grammarFunctor.ml[801,21532+21]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[799,21481+12]..lib/grammarFunctor.ml[799,21481+14])
                                        Tpat_var "nt/3320"
                                      expression (lib/grammarFunctor.ml[799,21481+15]..lib/grammarFunctor.ml[801,21532+21]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[799,21481+15]..lib/grammarFunctor.ml[799,21481+16])
                                              Tpat_var "f/3321"
                                            expression (lib/grammarFunctor.ml[800,21500+4]..lib/grammarFunctor.ml[801,21532+21])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (lib/grammarFunctor.ml[800,21500+8]..lib/grammarFunctor.ml[800,21500+13])
                                                    Tpat_tuple
                                                    [
                                                      pattern (lib/grammarFunctor.ml[800,21500+8]..lib/grammarFunctor.ml[800,21500+9])
                                                        Tpat_var "k/3322"
                                                      pattern (lib/grammarFunctor.ml[800,21500+11]..lib/grammarFunctor.ml[800,21500+13])
                                                        Tpat_var "k'/3323"
                                                    ]
                                                  expression (lib/grammarFunctor.ml[800,21500+16]..lib/grammarFunctor.ml[800,21500+28])
                                                    Texp_apply
                                                    expression (lib/grammarFunctor.ml[800,21500+16]..lib/grammarFunctor.ml[800,21500+28]) ghost
                                                      Texp_ident "Stdlib!.Array.get"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[800,21500+16]..lib/grammarFunctor.ml[800,21500+23])
                                                          Texp_ident "ntprods/3015"
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[800,21500+25]..lib/grammarFunctor.ml[800,21500+27])
                                                          Texp_ident "nt/3320"
                                                    ]
                                              ]
                                              expression (lib/grammarFunctor.ml[801,21532+4]..lib/grammarFunctor.ml[801,21532+21])
                                                Texp_apply
                                                expression (lib/grammarFunctor.ml[801,21532+4]..lib/grammarFunctor.ml[801,21532+14])
                                                  Texp_ident "Gbnf_parser!.Misc.mapij"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[801,21532+15]..lib/grammarFunctor.ml[801,21532+16])
                                                      Texp_ident "k/3322"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[801,21532+17]..lib/grammarFunctor.ml[801,21532+19])
                                                      Texp_ident "k'/3323"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[801,21532+20]..lib/grammarFunctor.ml[801,21532+21])
                                                      Texp_ident "f/3321"
                                                ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[803,21555+2]..lib/grammarFunctor.ml[805,21617+32])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[803,21555+6]..lib/grammarFunctor.ml[803,21555+17])
                                  Tpat_var "foldnt_lazy/3324"
                                expression (lib/grammarFunctor.ml[803,21555+18]..lib/grammarFunctor.ml[805,21617+32]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[803,21555+18]..lib/grammarFunctor.ml[803,21555+20])
                                        Tpat_var "nt/3326"
                                      expression (lib/grammarFunctor.ml[803,21555+21]..lib/grammarFunctor.ml[805,21617+32]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[803,21555+21]..lib/grammarFunctor.ml[803,21555+22])
                                              Tpat_var "f/3327"
                                            expression (lib/grammarFunctor.ml[803,21555+23]..lib/grammarFunctor.ml[805,21617+32]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[803,21555+23]..lib/grammarFunctor.ml[803,21555+27])
                                                    Tpat_var "accu/3328"
                                                  expression (lib/grammarFunctor.ml[804,21585+4]..lib/grammarFunctor.ml[805,21617+32])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (lib/grammarFunctor.ml[804,21585+8]..lib/grammarFunctor.ml[804,21585+13])
                                                          Tpat_tuple
                                                          [
                                                            pattern (lib/grammarFunctor.ml[804,21585+8]..lib/grammarFunctor.ml[804,21585+9])
                                                              Tpat_var "k/3329"
                                                            pattern (lib/grammarFunctor.ml[804,21585+11]..lib/grammarFunctor.ml[804,21585+13])
                                                              Tpat_var "k'/3330"
                                                          ]
                                                        expression (lib/grammarFunctor.ml[804,21585+16]..lib/grammarFunctor.ml[804,21585+28])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[804,21585+16]..lib/grammarFunctor.ml[804,21585+28]) ghost
                                                            Texp_ident "Stdlib!.Array.get"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[804,21585+16]..lib/grammarFunctor.ml[804,21585+23])
                                                                Texp_ident "ntprods/3015"
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[804,21585+25]..lib/grammarFunctor.ml[804,21585+27])
                                                                Texp_ident "nt/3326"
                                                          ]
                                                    ]
                                                    expression (lib/grammarFunctor.ml[805,21617+4]..lib/grammarFunctor.ml[805,21617+32])
                                                      Texp_apply
                                                      expression (lib/grammarFunctor.ml[805,21617+4]..lib/grammarFunctor.ml[805,21617+20])
                                                        Texp_ident "Gbnf_parser!.Misc.foldij_lazy"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[805,21617+21]..lib/grammarFunctor.ml[805,21617+22])
                                                            Texp_ident "k/3329"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[805,21617+23]..lib/grammarFunctor.ml[805,21617+25])
                                                            Texp_ident "k'/3330"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[805,21617+26]..lib/grammarFunctor.ml[805,21617+27])
                                                            Texp_ident "f/3327"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[805,21617+28]..lib/grammarFunctor.ml[805,21617+32])
                                                            Texp_ident "accu/3328"
                                                      ]
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[809,21671+2]..lib/grammarFunctor.ml[810,21688+16])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[809,21671+6]..lib/grammarFunctor.ml[809,21671+9])
                                  Tpat_var "def/3331"
                                expression (lib/grammarFunctor.ml[809,21671+10]..lib/grammarFunctor.ml[810,21688+16]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[809,21671+10]..lib/grammarFunctor.ml[809,21671+14])
                                        Tpat_var "prod/3333"
                                      expression (lib/grammarFunctor.ml[810,21688+4]..lib/grammarFunctor.ml[810,21688+16])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[810,21688+4]..lib/grammarFunctor.ml[810,21688+16]) ghost
                                          Texp_ident "Stdlib!.Array.get"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[810,21688+4]..lib/grammarFunctor.ml[810,21688+9])
                                              Texp_ident "table/2958"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[810,21688+11]..lib/grammarFunctor.ml[810,21688+15])
                                              Texp_ident "prod/3333"
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[812,21706+2]..lib/grammarFunctor.ml[814,21754+6])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[812,21706+6]..lib/grammarFunctor.ml[812,21706+8])
                                  Tpat_var "nt/3334"
                                expression (lib/grammarFunctor.ml[812,21706+9]..lib/grammarFunctor.ml[814,21754+6]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[812,21706+9]..lib/grammarFunctor.ml[812,21706+13])
                                        Tpat_var "prod/3336"
                                      expression (lib/grammarFunctor.ml[813,21722+4]..lib/grammarFunctor.ml[814,21754+6])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/grammarFunctor.ml[813,21722+8]..lib/grammarFunctor.ml[813,21722+13])
                                              Tpat_tuple
                                              [
                                                pattern (lib/grammarFunctor.ml[813,21722+8]..lib/grammarFunctor.ml[813,21722+10])
                                                  Tpat_var "nt/3337"
                                                pattern (lib/grammarFunctor.ml[813,21722+12]..lib/grammarFunctor.ml[813,21722+13])
                                                  Tpat_any
                                              ]
                                            expression (lib/grammarFunctor.ml[813,21722+16]..lib/grammarFunctor.ml[813,21722+28])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[813,21722+16]..lib/grammarFunctor.ml[813,21722+28]) ghost
                                                Texp_ident "Stdlib!.Array.get"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[813,21722+16]..lib/grammarFunctor.ml[813,21722+21])
                                                    Texp_ident "table/2958"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[813,21722+23]..lib/grammarFunctor.ml[813,21722+27])
                                                    Texp_ident "prod/3336"
                                              ]
                                        ]
                                        expression (lib/grammarFunctor.ml[814,21754+4]..lib/grammarFunctor.ml[814,21754+6])
                                          Texp_ident "nt/3337"
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[816,21762+2]..lib/grammarFunctor.ml[818,21812+7])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[816,21762+6]..lib/grammarFunctor.ml[816,21762+9])
                                  Tpat_var "rhs/3338"
                                expression (lib/grammarFunctor.ml[816,21762+10]..lib/grammarFunctor.ml[818,21812+7]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[816,21762+10]..lib/grammarFunctor.ml[816,21762+14])
                                        Tpat_var "prod/3340"
                                      expression (lib/grammarFunctor.ml[817,21779+4]..lib/grammarFunctor.ml[818,21812+7])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/grammarFunctor.ml[817,21779+8]..lib/grammarFunctor.ml[817,21779+14])
                                              Tpat_tuple
                                              [
                                                pattern (lib/grammarFunctor.ml[817,21779+8]..lib/grammarFunctor.ml[817,21779+9])
                                                  Tpat_any
                                                pattern (lib/grammarFunctor.ml[817,21779+11]..lib/grammarFunctor.ml[817,21779+14])
                                                  Tpat_var "rhs/3341"
                                              ]
                                            expression (lib/grammarFunctor.ml[817,21779+17]..lib/grammarFunctor.ml[817,21779+29])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[817,21779+17]..lib/grammarFunctor.ml[817,21779+29]) ghost
                                                Texp_ident "Stdlib!.Array.get"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[817,21779+17]..lib/grammarFunctor.ml[817,21779+22])
                                                    Texp_ident "table/2958"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[817,21779+24]..lib/grammarFunctor.ml[817,21779+28])
                                                    Texp_ident "prod/3340"
                                              ]
                                        ]
                                        expression (lib/grammarFunctor.ml[818,21812+4]..lib/grammarFunctor.ml[818,21812+7])
                                          Texp_ident "rhs/3341"
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[820,21821+2]..lib/grammarFunctor.ml[821,21841+27])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[820,21821+6]..lib/grammarFunctor.ml[820,21821+12])
                                  Tpat_var "length/3342"
                                expression (lib/grammarFunctor.ml[820,21821+13]..lib/grammarFunctor.ml[821,21841+27]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[820,21821+13]..lib/grammarFunctor.ml[820,21821+17])
                                        Tpat_var "prod/3344"
                                      expression (lib/grammarFunctor.ml[821,21841+4]..lib/grammarFunctor.ml[821,21841+27])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[821,21841+4]..lib/grammarFunctor.ml[821,21841+16])
                                          Texp_ident "Stdlib!.Array.length"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[821,21841+17]..lib/grammarFunctor.ml[821,21841+27])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[821,21841+18]..lib/grammarFunctor.ml[821,21841+21])
                                                Texp_ident "rhs/3338"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[821,21841+22]..lib/grammarFunctor.ml[821,21841+26])
                                                    Texp_ident "prod/3344"
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[823,21870+2]..lib/grammarFunctor.ml[824,21895+22])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[823,21870+6]..lib/grammarFunctor.ml[823,21870+17])
                                  Tpat_var "identifiers/3345"
                                expression (lib/grammarFunctor.ml[823,21870+18]..lib/grammarFunctor.ml[824,21895+22]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[823,21870+18]..lib/grammarFunctor.ml[823,21870+22])
                                        Tpat_var "prod/3346"
                                      expression (lib/grammarFunctor.ml[824,21895+4]..lib/grammarFunctor.ml[824,21895+22])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[824,21895+4]..lib/grammarFunctor.ml[824,21895+22]) ghost
                                          Texp_ident "Stdlib!.Array.get"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[824,21895+4]..lib/grammarFunctor.ml[824,21895+15])
                                              Texp_ident "identifiers/2959"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[824,21895+17]..lib/grammarFunctor.ml[824,21895+21])
                                              Texp_ident "prod/3346"
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[826,21919+2]..lib/grammarFunctor.ml[827,21941+16])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[826,21919+6]..lib/grammarFunctor.ml[826,21919+14])
                                  Tpat_var "is_start/3347"
                                expression (lib/grammarFunctor.ml[826,21919+15]..lib/grammarFunctor.ml[827,21941+16]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[826,21919+15]..lib/grammarFunctor.ml[826,21919+19])
                                        Tpat_var "prod/3349"
                                      expression (lib/grammarFunctor.ml[827,21941+4]..lib/grammarFunctor.ml[827,21941+16])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[827,21941+9]..lib/grammarFunctor.ml[827,21941+10])
                                          Texp_ident "Stdlib!.<"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[827,21941+4]..lib/grammarFunctor.ml[827,21941+8])
                                              Texp_ident "prod/3349"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[827,21941+11]..lib/grammarFunctor.ml[827,21941+16])
                                              Texp_ident "start/3017"
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[829,21959+2]..lib/grammarFunctor.ml[837,22134+10])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[829,21959+6]..lib/grammarFunctor.ml[829,21959+14])
                                  Tpat_var "classify/3350"
                                expression (lib/grammarFunctor.ml[829,21959+15]..lib/grammarFunctor.ml[837,22134+10]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[829,21959+15]..lib/grammarFunctor.ml[829,21959+19])
                                        Tpat_var "prod/3352"
                                      expression (lib/grammarFunctor.ml[830,21981+4]..lib/grammarFunctor.ml[837,22134+10])
                                        Texp_ifthenelse
                                        expression (lib/grammarFunctor.ml[830,21981+7]..lib/grammarFunctor.ml[830,21981+20])
                                          Texp_apply
                                          expression (lib/grammarFunctor.ml[830,21981+7]..lib/grammarFunctor.ml[830,21981+15])
                                            Texp_ident "is_start/3347"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[830,21981+16]..lib/grammarFunctor.ml[830,21981+20])
                                                Texp_ident "prod/3352"
                                          ]
                                        expression (lib/grammarFunctor.ml[831,22007+6]..lib/grammarFunctor.ml[835,22102+22])
                                          Texp_match
                                          expression (lib/grammarFunctor.ml[831,22007+12]..lib/grammarFunctor.ml[831,22007+26])
                                            Texp_apply
                                            expression (lib/grammarFunctor.ml[831,22007+12]..lib/grammarFunctor.ml[831,22007+26]) ghost
                                              Texp_ident "Stdlib!.Array.get"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[831,22007+12]..lib/grammarFunctor.ml[831,22007+22])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[831,22007+13]..lib/grammarFunctor.ml[831,22007+16])
                                                    Texp_ident "rhs/3338"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[831,22007+17]..lib/grammarFunctor.ml[831,22007+21])
                                                        Texp_ident "prod/3352"
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[831,22007+24]..lib/grammarFunctor.ml[831,22007+25])
                                                  Texp_constant Const_int 0
                                            ]
                                          [
                                            <case>
                                              pattern (lib/grammarFunctor.ml[832,22039+8]..lib/grammarFunctor.ml[832,22039+19])
                                                Tpat_value
                                                pattern (lib/grammarFunctor.ml[832,22039+8]..lib/grammarFunctor.ml[832,22039+19])
                                                  Tpat_construct "Symbol.N"
                                                  [
                                                    pattern (lib/grammarFunctor.ml[832,22039+17]..lib/grammarFunctor.ml[832,22039+19])
                                                      Tpat_var "nt/3353"
                                                  ]
                                                  None
                                              expression (lib/grammarFunctor.ml[833,22062+10]..lib/grammarFunctor.ml[833,22062+17])
                                                Texp_construct "Some"
                                                [
                                                  expression (lib/grammarFunctor.ml[833,22062+15]..lib/grammarFunctor.ml[833,22062+17])
                                                    Texp_ident "nt/3353"
                                                ]
                                            <case>
                                              pattern (lib/grammarFunctor.ml[834,22080+8]..lib/grammarFunctor.ml[834,22080+18])
                                                Tpat_value
                                                pattern (lib/grammarFunctor.ml[834,22080+8]..lib/grammarFunctor.ml[834,22080+18])
                                                  Tpat_construct "Symbol.T"
                                                  [
                                                    pattern (lib/grammarFunctor.ml[834,22080+17]..lib/grammarFunctor.ml[834,22080+18])
                                                      Tpat_any
                                                  ]
                                                  None
                                              expression (lib/grammarFunctor.ml[835,22102+10]..lib/grammarFunctor.ml[835,22102+22])
                                                Texp_assert                                                expression (lib/grammarFunctor.ml[835,22102+17]..lib/grammarFunctor.ml[835,22102+22])
                                                  Texp_construct "false"
                                                  []
                                          ]
                                        Some
                                          expression (lib/grammarFunctor.ml[837,22134+6]..lib/grammarFunctor.ml[837,22134+10])
                                            Texp_construct "None"
                                            []
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[839,22146+2]..lib/grammarFunctor.ml[846,22326+20])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[839,22146+6]..lib/grammarFunctor.ml[839,22146+12])
                                  Tpat_var "action/3354"
                                expression (lib/grammarFunctor.ml[839,22146+13]..lib/grammarFunctor.ml[846,22326+20]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[839,22146+13]..lib/grammarFunctor.ml[839,22146+17])
                                        Tpat_var "prod/3356"
                                      expression (lib/grammarFunctor.ml[840,22166+4]..lib/grammarFunctor.ml[846,22326+20])
                                        Texp_match
                                        expression (lib/grammarFunctor.ml[840,22166+10]..lib/grammarFunctor.ml[840,22166+24])
                                          Texp_apply
                                          expression (lib/grammarFunctor.ml[840,22166+10]..lib/grammarFunctor.ml[840,22166+24]) ghost
                                            Texp_ident "Stdlib!.Array.get"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[840,22166+10]..lib/grammarFunctor.ml[840,22166+17])
                                                Texp_ident "actions/2960"
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[840,22166+19]..lib/grammarFunctor.ml[840,22166+23])
                                                Texp_ident "prod/3356"
                                          ]
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[841,22196+6]..lib/grammarFunctor.ml[841,22196+17])
                                              Tpat_value
                                              pattern (lib/grammarFunctor.ml[841,22196+6]..lib/grammarFunctor.ml[841,22196+17])
                                                Tpat_construct "Some"
                                                [
                                                  pattern (lib/grammarFunctor.ml[841,22196+11]..lib/grammarFunctor.ml[841,22196+17])
                                                    Tpat_var "action/3357"
                                                ]
                                                None
                                            expression (lib/grammarFunctor.ml[842,22217+8]..lib/grammarFunctor.ml[842,22217+14])
                                              Texp_ident "action/3357"
                                          <case>
                                            pattern (lib/grammarFunctor.ml[843,22232+6]..lib/grammarFunctor.ml[843,22232+10])
                                              Tpat_value
                                              pattern (lib/grammarFunctor.ml[843,22232+6]..lib/grammarFunctor.ml[843,22232+10])
                                                Tpat_construct "None"
                                                []
                                                None
                                            expression (lib/grammarFunctor.ml[845,22294+8]..lib/grammarFunctor.ml[846,22326+20])
                                              Texp_sequence
                                              expression (lib/grammarFunctor.ml[845,22294+8]..lib/grammarFunctor.ml[845,22294+30])
                                                Texp_assert                                                expression (lib/grammarFunctor.ml[845,22294+15]..lib/grammarFunctor.ml[845,22294+30])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[845,22294+16]..lib/grammarFunctor.ml[845,22294+24])
                                                    Texp_ident "is_start/3347"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[845,22294+25]..lib/grammarFunctor.ml[845,22294+29])
                                                        Texp_ident "prod/3356"
                                                  ]
                                              expression (lib/grammarFunctor.ml[846,22326+8]..lib/grammarFunctor.ml[846,22326+20])
                                                Texp_assert                                                expression (lib/grammarFunctor.ml[846,22326+15]..lib/grammarFunctor.ml[846,22326+20])
                                                  Texp_construct "false"
                                                  []
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[848,22348+2]..lib/grammarFunctor.ml[849,22371+20])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[848,22348+6]..lib/grammarFunctor.ml[848,22348+15])
                                  Tpat_var "positions/3358"
                                expression (lib/grammarFunctor.ml[848,22348+16]..lib/grammarFunctor.ml[849,22371+20]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[848,22348+16]..lib/grammarFunctor.ml[848,22348+20])
                                        Tpat_var "prod/3359"
                                      expression (lib/grammarFunctor.ml[849,22371+4]..lib/grammarFunctor.ml[849,22371+20])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[849,22371+4]..lib/grammarFunctor.ml[849,22371+20]) ghost
                                          Texp_ident "Stdlib!.Array.get"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[849,22371+4]..lib/grammarFunctor.ml[849,22371+13])
                                              Texp_ident "positions/2961"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[849,22371+15]..lib/grammarFunctor.ml[849,22371+19])
                                              Texp_ident "prod/3359"
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[851,22393+2]..lib/grammarFunctor.ml[852,22421+36])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[851,22393+6]..lib/grammarFunctor.ml[851,22393+20])
                                  Tpat_var "lhs_attributes/3360"
                                expression (lib/grammarFunctor.ml[851,22393+21]..lib/grammarFunctor.ml[852,22421+36]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[851,22393+21]..lib/grammarFunctor.ml[851,22393+25])
                                        Tpat_var "prod/3362"
                                      expression (lib/grammarFunctor.ml[852,22421+4]..lib/grammarFunctor.ml[852,22421+36])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[852,22421+4]..lib/grammarFunctor.ml[852,22421+26])
                                          Texp_ident "Nonterminal/2057.attributes"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[852,22421+27]..lib/grammarFunctor.ml[852,22421+36])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[852,22421+28]..lib/grammarFunctor.ml[852,22421+30])
                                                Texp_ident "nt/3334"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[852,22421+31]..lib/grammarFunctor.ml[852,22421+35])
                                                    Texp_ident "prod/3362"
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[854,22459+2]..lib/grammarFunctor.ml[855,22487+25])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[854,22459+6]..lib/grammarFunctor.ml[854,22459+20])
                                  Tpat_var "rhs_attributes/3363"
                                expression (lib/grammarFunctor.ml[854,22459+21]..lib/grammarFunctor.ml[855,22487+25]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[854,22459+21]..lib/grammarFunctor.ml[854,22459+25])
                                        Tpat_var "prod/3364"
                                      expression (lib/grammarFunctor.ml[855,22487+4]..lib/grammarFunctor.ml[855,22487+25])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[855,22487+4]..lib/grammarFunctor.ml[855,22487+25]) ghost
                                          Texp_ident "Stdlib!.Array.get"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[855,22487+4]..lib/grammarFunctor.ml[855,22487+18])
                                              Texp_ident "rhs_attributes/2962"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[855,22487+20]..lib/grammarFunctor.ml[855,22487+24])
                                              Texp_ident "prod/3364"
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[857,22514+2]..lib/grammarFunctor.ml[861,22617+18])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[857,22514+6]..lib/grammarFunctor.ml[857,22514+27])
                                  Tpat_var "startsymbol2startprod/3365"
                                expression (lib/grammarFunctor.ml[857,22514+28]..lib/grammarFunctor.ml[861,22617+18]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[857,22514+28]..lib/grammarFunctor.ml[857,22514+30])
                                        Tpat_var "nt/3367"
                                      expression (lib/grammarFunctor.ml[858,22547+4]..lib/grammarFunctor.ml[861,22617+18])
                                        Texp_try
                                        expression (lib/grammarFunctor.ml[859,22555+6]..lib/grammarFunctor.ml[859,22555+39])
                                          Texp_apply
                                          expression (lib/grammarFunctor.ml[859,22555+6]..lib/grammarFunctor.ml[859,22555+25])
                                            Texp_ident "NonterminalMap/2063.find"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[859,22555+26]..lib/grammarFunctor.ml[859,22555+28])
                                                Texp_ident "nt/3367"
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[859,22555+29]..lib/grammarFunctor.ml[859,22555+39])
                                                Texp_ident "startprods/3018"
                                          ]
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[860,22595+9]..lib/grammarFunctor.ml[860,22595+18])
                                              Tpat_construct "Not_found"
                                              []
                                              None
                                            expression (lib/grammarFunctor.ml[861,22617+6]..lib/grammarFunctor.ml[861,22617+18])
                                              Texp_assert                                              expression (lib/grammarFunctor.ml[861,22617+13]..lib/grammarFunctor.ml[861,22617+18])
                                                Texp_construct "false"
                                                []
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[863,22670+2]..lib/grammarFunctor.ml[864,22694+46])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[863,22670+6]..lib/grammarFunctor.ml[863,22670+16])
                                  Tpat_var "error_free/3368"
                                expression (lib/grammarFunctor.ml[863,22670+17]..lib/grammarFunctor.ml[864,22694+46]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[863,22670+17]..lib/grammarFunctor.ml[863,22670+21])
                                        Tpat_var "prod/3370"
                                      expression (lib/grammarFunctor.ml[864,22694+4]..lib/grammarFunctor.ml[864,22694+46])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[864,22694+4]..lib/grammarFunctor.ml[864,22694+18])
                                          Texp_ident "Gbnf_parser!.MArray.for_all"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[864,22694+19]..lib/grammarFunctor.ml[864,22694+35])
                                              Texp_ident "Symbol/2545.non_error"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[864,22694+36]..lib/grammarFunctor.ml[864,22694+46])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[864,22694+37]..lib/grammarFunctor.ml[864,22694+40])
                                                Texp_ident "rhs/3338"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[864,22694+41]..lib/grammarFunctor.ml[864,22694+45])
                                                    Texp_ident "prod/3370"
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[868,22762+2]..lib/grammarFunctor.ml[869,22777+18])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[868,22762+6]..lib/grammarFunctor.ml[868,22762+10])
                                  Tpat_var "init/3371"
                                expression (lib/grammarFunctor.ml[868,22762+11]..lib/grammarFunctor.ml[869,22777+18]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[868,22762+11]..lib/grammarFunctor.ml[868,22762+12])
                                        Tpat_var "f/3373"
                                      expression (lib/grammarFunctor.ml[869,22777+4]..lib/grammarFunctor.ml[869,22777+18])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[869,22777+4]..lib/grammarFunctor.ml[869,22777+14])
                                          Texp_ident "Stdlib!.Array.init"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[869,22777+15]..lib/grammarFunctor.ml[869,22777+16])
                                              Texp_ident "n/2946"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[869,22777+17]..lib/grammarFunctor.ml[869,22777+18])
                                              Texp_ident "f/3373"
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[871,22797+2]..lib/grammarFunctor.ml[872,22812+18])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[871,22797+6]..lib/grammarFunctor.ml[871,22797+10])
                                  Tpat_var "iter/3374"
                                expression (lib/grammarFunctor.ml[871,22797+11]..lib/grammarFunctor.ml[872,22812+18]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[871,22797+11]..lib/grammarFunctor.ml[871,22797+12])
                                        Tpat_var "f/3375"
                                      expression (lib/grammarFunctor.ml[872,22812+4]..lib/grammarFunctor.ml[872,22812+18])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[872,22812+4]..lib/grammarFunctor.ml[872,22812+14])
                                          Texp_ident "Gbnf_parser!.Misc.iteri"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[872,22812+15]..lib/grammarFunctor.ml[872,22812+16])
                                              Texp_ident "n/2946"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[872,22812+17]..lib/grammarFunctor.ml[872,22812+18])
                                              Texp_ident "f/3375"
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[874,22832+2]..lib/grammarFunctor.ml[875,22852+23])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[874,22832+6]..lib/grammarFunctor.ml[874,22832+10])
                                  Tpat_var "fold/3376"
                                expression (lib/grammarFunctor.ml[874,22832+11]..lib/grammarFunctor.ml[875,22852+23]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[874,22832+11]..lib/grammarFunctor.ml[874,22832+12])
                                        Tpat_var "f/3378"
                                      expression (lib/grammarFunctor.ml[874,22832+13]..lib/grammarFunctor.ml[875,22852+23]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[874,22832+13]..lib/grammarFunctor.ml[874,22832+17])
                                              Tpat_var "accu/3379"
                                            expression (lib/grammarFunctor.ml[875,22852+4]..lib/grammarFunctor.ml[875,22852+23])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[875,22852+4]..lib/grammarFunctor.ml[875,22852+14])
                                                Texp_ident "Gbnf_parser!.Misc.foldi"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[875,22852+15]..lib/grammarFunctor.ml[875,22852+16])
                                                    Texp_ident "n/2946"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[875,22852+17]..lib/grammarFunctor.ml[875,22852+18])
                                                    Texp_ident "f/3378"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[875,22852+19]..lib/grammarFunctor.ml[875,22852+23])
                                                    Texp_ident "accu/3379"
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[877,22877+2]..lib/grammarFunctor.ml[878,22891+17])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[877,22877+6]..lib/grammarFunctor.ml[877,22877+9])
                                  Tpat_var "map/3380"
                                expression (lib/grammarFunctor.ml[877,22877+10]..lib/grammarFunctor.ml[878,22891+17]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[877,22877+10]..lib/grammarFunctor.ml[877,22877+11])
                                        Tpat_var "f/3381"
                                      expression (lib/grammarFunctor.ml[878,22891+4]..lib/grammarFunctor.ml[878,22891+17])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[878,22891+4]..lib/grammarFunctor.ml[878,22891+13])
                                          Texp_ident "Gbnf_parser!.Misc.mapi"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[878,22891+14]..lib/grammarFunctor.ml[878,22891+15])
                                              Texp_ident "n/2946"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[878,22891+16]..lib/grammarFunctor.ml[878,22891+17])
                                              Texp_ident "f/3381"
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[880,22910+2]..lib/grammarFunctor.ml[881,22925+18])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[880,22910+6]..lib/grammarFunctor.ml[880,22910+10])
                                  Tpat_var "amap/3382"
                                expression (lib/grammarFunctor.ml[880,22910+11]..lib/grammarFunctor.ml[881,22925+18]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[880,22910+11]..lib/grammarFunctor.ml[880,22910+12])
                                        Tpat_var "f/3384"
                                      expression (lib/grammarFunctor.ml[881,22925+4]..lib/grammarFunctor.ml[881,22925+18])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[881,22925+4]..lib/grammarFunctor.ml[881,22925+14])
                                          Texp_ident "Stdlib!.Array.init"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[881,22925+15]..lib/grammarFunctor.ml[881,22925+16])
                                              Texp_ident "n/2946"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[881,22925+17]..lib/grammarFunctor.ml[881,22925+18])
                                              Texp_ident "f/3384"
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[883,22945+2]..lib/grammarFunctor.ml[886,23007+8])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[883,22945+6]..lib/grammarFunctor.ml[883,22945+11])
                                  Tpat_var "iterx/3385"
                                expression (lib/grammarFunctor.ml[883,22945+12]..lib/grammarFunctor.ml[886,23007+8]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[883,22945+12]..lib/grammarFunctor.ml[883,22945+13])
                                        Tpat_var "f/3387"
                                      expression (lib/grammarFunctor.ml[884,22961+4]..lib/grammarFunctor.ml[886,23007+8])
                                        Texp_for "prod/3388" Up
                                        expression (lib/grammarFunctor.ml[884,22961+15]..lib/grammarFunctor.ml[884,22961+20])
                                          Texp_ident "start/3017"
                                        expression (lib/grammarFunctor.ml[884,22961+24]..lib/grammarFunctor.ml[884,22961+29])
                                          Texp_apply
                                          expression (lib/grammarFunctor.ml[884,22961+26]..lib/grammarFunctor.ml[884,22961+27])
                                            Texp_ident "Stdlib!.-"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[884,22961+24]..lib/grammarFunctor.ml[884,22961+25])
                                                Texp_ident "n/2946"
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[884,22961+28]..lib/grammarFunctor.ml[884,22961+29])
                                                Texp_constant Const_int 1
                                          ]
                                        expression (lib/grammarFunctor.ml[885,22994+6]..lib/grammarFunctor.ml[885,22994+12])
                                          Texp_apply
                                          expression (lib/grammarFunctor.ml[885,22994+6]..lib/grammarFunctor.ml[885,22994+7])
                                            Texp_ident "f/3387"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[885,22994+8]..lib/grammarFunctor.ml[885,22994+12])
                                                Texp_ident "prod/3388"
                                          ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[888,23017+2]..lib/grammarFunctor.ml[889,23038+30])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[888,23017+6]..lib/grammarFunctor.ml[888,23017+11])
                                  Tpat_var "foldx/3389"
                                expression (lib/grammarFunctor.ml[888,23017+12]..lib/grammarFunctor.ml[889,23038+30]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[888,23017+12]..lib/grammarFunctor.ml[888,23017+13])
                                        Tpat_var "f/3391"
                                      expression (lib/grammarFunctor.ml[888,23017+14]..lib/grammarFunctor.ml[889,23038+30]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[888,23017+14]..lib/grammarFunctor.ml[888,23017+18])
                                              Tpat_var "accu/3392"
                                            expression (lib/grammarFunctor.ml[889,23038+4]..lib/grammarFunctor.ml[889,23038+30])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[889,23038+4]..lib/grammarFunctor.ml[889,23038+15])
                                                Texp_ident "Gbnf_parser!.Misc.foldij"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[889,23038+16]..lib/grammarFunctor.ml[889,23038+21])
                                                    Texp_ident "start/3017"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[889,23038+22]..lib/grammarFunctor.ml[889,23038+23])
                                                    Texp_ident "n/2946"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[889,23038+24]..lib/grammarFunctor.ml[889,23038+25])
                                                    Texp_ident "f/3391"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[889,23038+26]..lib/grammarFunctor.ml[889,23038+30])
                                                    Texp_ident "accu/3392"
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[891,23070+2]..lib/grammarFunctor.ml[892,23085+24])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[891,23070+6]..lib/grammarFunctor.ml[891,23070+10])
                                  Tpat_var "mapx/3393"
                                expression (lib/grammarFunctor.ml[891,23070+11]..lib/grammarFunctor.ml[892,23085+24]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[891,23070+11]..lib/grammarFunctor.ml[891,23070+12])
                                        Tpat_var "f/3395"
                                      expression (lib/grammarFunctor.ml[892,23085+4]..lib/grammarFunctor.ml[892,23085+24])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[892,23085+4]..lib/grammarFunctor.ml[892,23085+14])
                                          Texp_ident "Gbnf_parser!.Misc.mapij"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[892,23085+15]..lib/grammarFunctor.ml[892,23085+20])
                                              Texp_ident "start/3017"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[892,23085+21]..lib/grammarFunctor.ml[892,23085+22])
                                              Texp_ident "n/2946"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[892,23085+23]..lib/grammarFunctor.ml[892,23085+24])
                                              Texp_ident "f/3395"
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[896,23143+2]..lib/grammarFunctor.ml[903,23376+83])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[896,23143+6]..lib/grammarFunctor.ml[896,23143+11])
                                  Tpat_var "print/3396"
                                expression (lib/grammarFunctor.ml[896,23143+12]..lib/grammarFunctor.ml[903,23376+83]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[896,23143+12]..lib/grammarFunctor.ml[896,23143+16])
                                        Tpat_var "prod/3397"
                                      expression (lib/grammarFunctor.ml[897,23162+4]..lib/grammarFunctor.ml[903,23376+83])
                                        Texp_sequence
                                        expression (lib/grammarFunctor.ml[897,23162+4]..lib/grammarFunctor.ml[897,23162+32])
                                          Texp_assert                                          expression (lib/grammarFunctor.ml[897,23162+11]..lib/grammarFunctor.ml[897,23162+32])
                                            Texp_apply
                                            expression (lib/grammarFunctor.ml[897,23162+12]..lib/grammarFunctor.ml[897,23162+15])
                                              Texp_ident "Stdlib!.not"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[897,23162+16]..lib/grammarFunctor.ml[897,23162+31])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[897,23162+17]..lib/grammarFunctor.ml[897,23162+25])
                                                    Texp_ident "is_start/3347"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[897,23162+26]..lib/grammarFunctor.ml[897,23162+30])
                                                        Texp_ident "prod/3397"
                                                  ]
                                            ]
                                        expression (lib/grammarFunctor.ml[898,23196+4]..lib/grammarFunctor.ml[903,23376+83])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/grammarFunctor.ml[898,23196+8]..lib/grammarFunctor.ml[898,23196+15])
                                                Tpat_tuple
                                                [
                                                  pattern (lib/grammarFunctor.ml[898,23196+8]..lib/grammarFunctor.ml[898,23196+10])
                                                    Tpat_var "nt/3398"
                                                  pattern (lib/grammarFunctor.ml[898,23196+12]..lib/grammarFunctor.ml[898,23196+15])
                                                    Tpat_var "rhs/3399"
                                                ]
                                              expression (lib/grammarFunctor.ml[898,23196+18]..lib/grammarFunctor.ml[898,23196+30])
                                                Texp_apply
                                                expression (lib/grammarFunctor.ml[898,23196+18]..lib/grammarFunctor.ml[898,23196+30]) ghost
                                                  Texp_ident "Stdlib!.Array.get"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[898,23196+18]..lib/grammarFunctor.ml[898,23196+23])
                                                      Texp_ident "table/2958"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[898,23196+25]..lib/grammarFunctor.ml[898,23196+29])
                                                      Texp_ident "prod/3397"
                                                ]
                                          ]
                                          expression (lib/grammarFunctor.ml[899,23230+4]..lib/grammarFunctor.ml[903,23376+83])
                                            Texp_ifthenelse
                                            expression (lib/grammarFunctor.ml[899,23230+7]..lib/grammarFunctor.ml[899,23230+27])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[899,23230+24]..lib/grammarFunctor.ml[899,23230+25])
                                                Texp_ident "Stdlib!.="
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[899,23230+7]..lib/grammarFunctor.ml[899,23230+23])
                                                    Texp_apply
                                                    expression (lib/grammarFunctor.ml[899,23230+7]..lib/grammarFunctor.ml[899,23230+19])
                                                      Texp_ident "Stdlib!.Array.length"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[899,23230+20]..lib/grammarFunctor.ml[899,23230+23])
                                                          Texp_ident "rhs/3399"
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[899,23230+26]..lib/grammarFunctor.ml[899,23230+27])
                                                    Texp_constant Const_int 0
                                              ]
                                            expression (lib/grammarFunctor.ml[901,23309+6]..lib/grammarFunctor.ml[901,23309+57])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[901,23309+6]..lib/grammarFunctor.ml[901,23309+20])
                                                Texp_ident "Stdlib!.Printf.sprintf"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[901,23309+21]..lib/grammarFunctor.ml[901,23309+28])
                                                    Texp_construct "CamlinternalFormatBasics.Format"
                                                    [
                                                      expression (lib/grammarFunctor.ml[901,23309+21]..lib/grammarFunctor.ml[901,23309+28]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.String"
                                                        [
                                                          expression (lib/grammarFunctor.ml[901,23309+21]..lib/grammarFunctor.ml[901,23309+28]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                                            []
                                                          expression (lib/grammarFunctor.ml[901,23309+21]..lib/grammarFunctor.ml[901,23309+28]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                            [
                                                              expression (lib/grammarFunctor.ml[901,23309+21]..lib/grammarFunctor.ml[901,23309+28]) ghost
                                                                Texp_constant Const_string(" ->",(lib/grammarFunctor.ml[901,23309+21]..lib/grammarFunctor.ml[901,23309+28]) ghost,None)
                                                              expression (lib/grammarFunctor.ml[901,23309+21]..lib/grammarFunctor.ml[901,23309+28]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                []
                                                            ]
                                                        ]
                                                      expression (lib/grammarFunctor.ml[901,23309+21]..lib/grammarFunctor.ml[901,23309+28]) ghost
                                                        Texp_constant Const_string("%s ->",(lib/grammarFunctor.ml[901,23309+21]..lib/grammarFunctor.ml[901,23309+28]) ghost,None)
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[901,23309+29]..lib/grammarFunctor.ml[901,23309+57])
                                                    Texp_apply
                                                    expression (lib/grammarFunctor.ml[901,23309+30]..lib/grammarFunctor.ml[901,23309+47])
                                                      Texp_ident "Nonterminal/2057.print"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[901,23309+48]..lib/grammarFunctor.ml[901,23309+53])
                                                          Texp_construct "false"
                                                          []
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[901,23309+54]..lib/grammarFunctor.ml[901,23309+56])
                                                          Texp_ident "nt/3398"
                                                    ]
                                              ]
                                            Some
                                              expression (lib/grammarFunctor.ml[903,23376+6]..lib/grammarFunctor.ml[903,23376+83])
                                                Texp_apply
                                                expression (lib/grammarFunctor.ml[903,23376+6]..lib/grammarFunctor.ml[903,23376+20])
                                                  Texp_ident "Stdlib!.Printf.sprintf"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[903,23376+21]..lib/grammarFunctor.ml[903,23376+31])
                                                      Texp_construct "CamlinternalFormatBasics.Format"
                                                      [
                                                        expression (lib/grammarFunctor.ml[903,23376+21]..lib/grammarFunctor.ml[903,23376+31]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.String"
                                                          [
                                                            expression (lib/grammarFunctor.ml[903,23376+21]..lib/grammarFunctor.ml[903,23376+31]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.No_padding"
                                                              []
                                                            expression (lib/grammarFunctor.ml[903,23376+21]..lib/grammarFunctor.ml[903,23376+31]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                              [
                                                                expression (lib/grammarFunctor.ml[903,23376+21]..lib/grammarFunctor.ml[903,23376+31]) ghost
                                                                  Texp_constant Const_string(" -> ",(lib/grammarFunctor.ml[903,23376+21]..lib/grammarFunctor.ml[903,23376+31]) ghost,None)
                                                                expression (lib/grammarFunctor.ml[903,23376+21]..lib/grammarFunctor.ml[903,23376+31]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.String"
                                                                  [
                                                                    expression (lib/grammarFunctor.ml[903,23376+21]..lib/grammarFunctor.ml[903,23376+31]) ghost
                                                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                      []
                                                                    expression (lib/grammarFunctor.ml[903,23376+21]..lib/grammarFunctor.ml[903,23376+31]) ghost
                                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                      []
                                                                  ]
                                                              ]
                                                          ]
                                                        expression (lib/grammarFunctor.ml[903,23376+21]..lib/grammarFunctor.ml[903,23376+31]) ghost
                                                          Texp_constant Const_string("%s -> %s",(lib/grammarFunctor.ml[903,23376+21]..lib/grammarFunctor.ml[903,23376+31]) ghost,None)
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[903,23376+32]..lib/grammarFunctor.ml[903,23376+60])
                                                      Texp_apply
                                                      expression (lib/grammarFunctor.ml[903,23376+33]..lib/grammarFunctor.ml[903,23376+50])
                                                        Texp_ident "Nonterminal/2057.print"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[903,23376+51]..lib/grammarFunctor.ml[903,23376+56])
                                                            Texp_construct "false"
                                                            []
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[903,23376+57]..lib/grammarFunctor.ml[903,23376+59])
                                                            Texp_ident "nt/3398"
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[903,23376+61]..lib/grammarFunctor.ml[903,23376+83])
                                                      Texp_apply
                                                      expression (lib/grammarFunctor.ml[903,23376+62]..lib/grammarFunctor.ml[903,23376+76])
                                                        Texp_ident "Symbol/2545.printao"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[903,23376+77]..lib/grammarFunctor.ml[903,23376+78])
                                                            Texp_constant Const_int 0
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[903,23376+79]..lib/grammarFunctor.ml[903,23376+82])
                                                            Texp_ident "rhs/3399"
                                                      ]
                                                ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[905,23461+2]..lib/grammarFunctor.ml[912,23730+66])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[905,23461+6]..lib/grammarFunctor.ml[905,23461+14])
                                  Tpat_var "describe/3400"
                                expression (lib/grammarFunctor.ml[905,23461+15]..lib/grammarFunctor.ml[912,23730+66]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[905,23461+15]..lib/grammarFunctor.ml[905,23461+21])
                                        Tpat_var "gerund/3402"
                                      expression (lib/grammarFunctor.ml[905,23461+22]..lib/grammarFunctor.ml[912,23730+66]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[905,23461+22]..lib/grammarFunctor.ml[905,23461+26])
                                              Tpat_var "prod/3403"
                                            expression (lib/grammarFunctor.ml[906,23490+4]..lib/grammarFunctor.ml[912,23730+66])
                                              Texp_match
                                              expression (lib/grammarFunctor.ml[906,23490+10]..lib/grammarFunctor.ml[906,23490+23])
                                                Texp_apply
                                                expression (lib/grammarFunctor.ml[906,23490+10]..lib/grammarFunctor.ml[906,23490+18])
                                                  Texp_ident "classify/3350"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[906,23490+19]..lib/grammarFunctor.ml[906,23490+23])
                                                      Texp_ident "prod/3403"
                                                ]
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[907,23519+6]..lib/grammarFunctor.ml[907,23519+13])
                                                    Tpat_value
                                                    pattern (lib/grammarFunctor.ml[907,23519+6]..lib/grammarFunctor.ml[907,23519+13])
                                                      Tpat_construct "Some"
                                                      [
                                                        pattern (lib/grammarFunctor.ml[907,23519+11]..lib/grammarFunctor.ml[907,23519+13])
                                                          Tpat_var "nt/3404"
                                                      ]
                                                      None
                                                  expression (lib/grammarFunctor.ml[908,23536+8]..lib/grammarFunctor.ml[909,23589+72])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (lib/grammarFunctor.ml[908,23536+12]..lib/grammarFunctor.ml[908,23536+18])
                                                          Tpat_var "ending/3405"
                                                        expression (lib/grammarFunctor.ml[908,23536+21]..lib/grammarFunctor.ml[908,23536+49])
                                                          Texp_ifthenelse
                                                          expression (lib/grammarFunctor.ml[908,23536+24]..lib/grammarFunctor.ml[908,23536+30])
                                                            Texp_ident "gerund/3402"
                                                          expression (lib/grammarFunctor.ml[908,23536+36]..lib/grammarFunctor.ml[908,23536+41])
                                                            Texp_constant Const_string("ing",(lib/grammarFunctor.ml[908,23536+37]..lib/grammarFunctor.ml[908,23536+40]),None)
                                                          Some
                                                            expression (lib/grammarFunctor.ml[908,23536+47]..lib/grammarFunctor.ml[908,23536+49])
                                                              Texp_constant Const_string("",(lib/grammarFunctor.ml[908,23536+48]..lib/grammarFunctor.ml[908,23536+48]),None)
                                                    ]
                                                    expression (lib/grammarFunctor.ml[909,23589+8]..lib/grammarFunctor.ml[909,23589+72])
                                                      Texp_apply
                                                      expression (lib/grammarFunctor.ml[909,23589+8]..lib/grammarFunctor.ml[909,23589+22])
                                                        Texp_ident "Stdlib!.Printf.sprintf"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[909,23589+23]..lib/grammarFunctor.ml[909,23589+36])
                                                            Texp_construct "CamlinternalFormatBasics.Format"
                                                            [
                                                              expression (lib/grammarFunctor.ml[909,23589+23]..lib/grammarFunctor.ml[909,23589+36]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                [
                                                                  expression (lib/grammarFunctor.ml[909,23589+23]..lib/grammarFunctor.ml[909,23589+36]) ghost
                                                                    Texp_constant Const_string("accept",(lib/grammarFunctor.ml[909,23589+23]..lib/grammarFunctor.ml[909,23589+36]) ghost,None)
                                                                  expression (lib/grammarFunctor.ml[909,23589+23]..lib/grammarFunctor.ml[909,23589+36]) ghost
                                                                    Texp_construct "CamlinternalFormatBasics.String"
                                                                    [
                                                                      expression (lib/grammarFunctor.ml[909,23589+23]..lib/grammarFunctor.ml[909,23589+36]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                        []
                                                                      expression (lib/grammarFunctor.ml[909,23589+23]..lib/grammarFunctor.ml[909,23589+36]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                        [
                                                                          expression (lib/grammarFunctor.ml[909,23589+23]..lib/grammarFunctor.ml[909,23589+36]) ghost
                                                                            Texp_constant Const_char 20
                                                                          expression (lib/grammarFunctor.ml[909,23589+23]..lib/grammarFunctor.ml[909,23589+36]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.String"
                                                                            [
                                                                              expression (lib/grammarFunctor.ml[909,23589+23]..lib/grammarFunctor.ml[909,23589+36]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                []
                                                                              expression (lib/grammarFunctor.ml[909,23589+23]..lib/grammarFunctor.ml[909,23589+36]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                []
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                              expression (lib/grammarFunctor.ml[909,23589+23]..lib/grammarFunctor.ml[909,23589+36]) ghost
                                                                Texp_constant Const_string("accept%s %s",(lib/grammarFunctor.ml[909,23589+23]..lib/grammarFunctor.ml[909,23589+36]) ghost,None)
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[909,23589+37]..lib/grammarFunctor.ml[909,23589+43])
                                                            Texp_ident "ending/3405"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[909,23589+44]..lib/grammarFunctor.ml[909,23589+72])
                                                            Texp_apply
                                                            expression (lib/grammarFunctor.ml[909,23589+45]..lib/grammarFunctor.ml[909,23589+62])
                                                              Texp_ident "Nonterminal/2057.print"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/grammarFunctor.ml[909,23589+63]..lib/grammarFunctor.ml[909,23589+68])
                                                                  Texp_construct "false"
                                                                  []
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/grammarFunctor.ml[909,23589+69]..lib/grammarFunctor.ml[909,23589+71])
                                                                  Texp_ident "nt/3404"
                                                            ]
                                                      ]
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[910,23662+6]..lib/grammarFunctor.ml[910,23662+10])
                                                    Tpat_value
                                                    pattern (lib/grammarFunctor.ml[910,23662+6]..lib/grammarFunctor.ml[910,23662+10])
                                                      Tpat_construct "None"
                                                      []
                                                      None
                                                  expression (lib/grammarFunctor.ml[911,23676+8]..lib/grammarFunctor.ml[912,23730+66])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (lib/grammarFunctor.ml[911,23676+12]..lib/grammarFunctor.ml[911,23676+18])
                                                          Tpat_var "ending/3406"
                                                        expression (lib/grammarFunctor.ml[911,23676+21]..lib/grammarFunctor.ml[911,23676+50])
                                                          Texp_ifthenelse
                                                          expression (lib/grammarFunctor.ml[911,23676+24]..lib/grammarFunctor.ml[911,23676+30])
                                                            Texp_ident "gerund/3402"
                                                          expression (lib/grammarFunctor.ml[911,23676+36]..lib/grammarFunctor.ml[911,23676+41])
                                                            Texp_constant Const_string("ing",(lib/grammarFunctor.ml[911,23676+37]..lib/grammarFunctor.ml[911,23676+40]),None)
                                                          Some
                                                            expression (lib/grammarFunctor.ml[911,23676+47]..lib/grammarFunctor.ml[911,23676+50])
                                                              Texp_constant Const_string("e",(lib/grammarFunctor.ml[911,23676+48]..lib/grammarFunctor.ml[911,23676+49]),None)
                                                    ]
                                                    expression (lib/grammarFunctor.ml[912,23730+8]..lib/grammarFunctor.ml[912,23730+66])
                                                      Texp_apply
                                                      expression (lib/grammarFunctor.ml[912,23730+8]..lib/grammarFunctor.ml[912,23730+22])
                                                        Texp_ident "Stdlib!.Printf.sprintf"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[912,23730+23]..lib/grammarFunctor.ml[912,23730+46])
                                                            Texp_construct "CamlinternalFormatBasics.Format"
                                                            [
                                                              expression (lib/grammarFunctor.ml[912,23730+23]..lib/grammarFunctor.ml[912,23730+46]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                [
                                                                  expression (lib/grammarFunctor.ml[912,23730+23]..lib/grammarFunctor.ml[912,23730+46]) ghost
                                                                    Texp_constant Const_string("reduc",(lib/grammarFunctor.ml[912,23730+23]..lib/grammarFunctor.ml[912,23730+46]) ghost,None)
                                                                  expression (lib/grammarFunctor.ml[912,23730+23]..lib/grammarFunctor.ml[912,23730+46]) ghost
                                                                    Texp_construct "CamlinternalFormatBasics.String"
                                                                    [
                                                                      expression (lib/grammarFunctor.ml[912,23730+23]..lib/grammarFunctor.ml[912,23730+46]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                        []
                                                                      expression (lib/grammarFunctor.ml[912,23730+23]..lib/grammarFunctor.ml[912,23730+46]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                        [
                                                                          expression (lib/grammarFunctor.ml[912,23730+23]..lib/grammarFunctor.ml[912,23730+46]) ghost
                                                                            Texp_constant Const_string(" production ",(lib/grammarFunctor.ml[912,23730+23]..lib/grammarFunctor.ml[912,23730+46]) ghost,None)
                                                                          expression (lib/grammarFunctor.ml[912,23730+23]..lib/grammarFunctor.ml[912,23730+46]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.String"
                                                                            [
                                                                              expression (lib/grammarFunctor.ml[912,23730+23]..lib/grammarFunctor.ml[912,23730+46]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                []
                                                                              expression (lib/grammarFunctor.ml[912,23730+23]..lib/grammarFunctor.ml[912,23730+46]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                []
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                              expression (lib/grammarFunctor.ml[912,23730+23]..lib/grammarFunctor.ml[912,23730+46]) ghost
                                                                Texp_constant Const_string("reduc%s production %s",(lib/grammarFunctor.ml[912,23730+23]..lib/grammarFunctor.ml[912,23730+46]) ghost,None)
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[912,23730+47]..lib/grammarFunctor.ml[912,23730+53])
                                                            Texp_ident "ending/3406"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[912,23730+54]..lib/grammarFunctor.ml[912,23730+66])
                                                            Texp_apply
                                                            expression (lib/grammarFunctor.ml[912,23730+55]..lib/grammarFunctor.ml[912,23730+60])
                                                              Texp_ident "print/3396"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/grammarFunctor.ml[912,23730+61]..lib/grammarFunctor.ml[912,23730+65])
                                                                  Texp_ident "prod/3403"
                                                            ]
                                                      ]
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[916,23827+2]..lib/grammarFunctor.ml[917,23846+21])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[916,23827+6]..lib/grammarFunctor.ml[916,23827+14])
                                  Tpat_var "tabulate/3407"
                                expression (lib/grammarFunctor.ml[916,23827+15]..lib/grammarFunctor.ml[917,23846+21]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[916,23827+15]..lib/grammarFunctor.ml[916,23827+16])
                                        Tpat_var "f/3409"
                                      expression (lib/grammarFunctor.ml[917,23846+4]..lib/grammarFunctor.ml[917,23846+21])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[917,23846+4]..lib/grammarFunctor.ml[917,23846+17])
                                          Texp_ident "Gbnf_parser!.Misc.tabulate"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[917,23846+18]..lib/grammarFunctor.ml[917,23846+19])
                                              Texp_ident "n/2946"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[917,23846+20]..lib/grammarFunctor.ml[917,23846+21])
                                              Texp_ident "f/3409"
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[919,23869+2]..lib/grammarFunctor.ml[920,23883+16])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[919,23869+6]..lib/grammarFunctor.ml[919,23869+9])
                                  Tpat_var "sum/3410"
                                expression (lib/grammarFunctor.ml[919,23869+10]..lib/grammarFunctor.ml[920,23883+16]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[919,23869+10]..lib/grammarFunctor.ml[919,23869+11])
                                        Tpat_var "f/3412"
                                      expression (lib/grammarFunctor.ml[920,23883+4]..lib/grammarFunctor.ml[920,23883+16])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[920,23883+4]..lib/grammarFunctor.ml[920,23883+12])
                                          Texp_ident "Gbnf_parser!.Misc.sum"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[920,23883+13]..lib/grammarFunctor.ml[920,23883+14])
                                              Texp_ident "n/2946"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[920,23883+15]..lib/grammarFunctor.ml[920,23883+16])
                                              Texp_ident "f/3412"
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[933,24486+2]..lib/grammarFunctor.ml[935,24611+21])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[933,24486+6]..lib/grammarFunctor.ml[933,24486+17])
                                  extra
                                    Tpat_extra_constraint
                                    core_type (lib/grammarFunctor.ml[933,24486+20]..lib/grammarFunctor.ml[933,24486+49])
                                      Ttyp_constr "Stdlib!.Hashtbl.t"
                                      [
                                        core_type (lib/grammarFunctor.ml[933,24486+21]..lib/grammarFunctor.ml[933,24486+32])
                                          Ttyp_constr "Gbnf_parser!.Positions.t"
                                          []
                                        core_type (lib/grammarFunctor.ml[933,24486+34]..lib/grammarFunctor.ml[933,24486+38])
                                          Ttyp_constr "unit/6!"
                                          []
                                      ]
                                  Tpat_alias "ever_useful/3452"
                                  pattern (lib/grammarFunctor.ml[933,24486+6]..lib/grammarFunctor.ml[933,24486+17])
                                    Tpat_any
                                expression (lib/grammarFunctor.ml[935,24611+4]..lib/grammarFunctor.ml[935,24611+21])
                                  extra
                                    Texp_constraint
                                    core_type (lib/grammarFunctor.ml[933,24486+20]..lib/grammarFunctor.ml[933,24486+49])
                                      Ttyp_constr "Stdlib!.Hashtbl.t"
                                      [
                                        core_type (lib/grammarFunctor.ml[933,24486+21]..lib/grammarFunctor.ml[933,24486+32])
                                          Ttyp_constr "Gbnf_parser!.Positions.t"
                                          []
                                        core_type (lib/grammarFunctor.ml[933,24486+34]..lib/grammarFunctor.ml[933,24486+38])
                                          Ttyp_constr "unit/6!"
                                          []
                                      ]
                                  Texp_apply
                                  expression (lib/grammarFunctor.ml[935,24611+4]..lib/grammarFunctor.ml[935,24611+18])
                                    Texp_ident "Stdlib!.Hashtbl.create"
                                  [
                                    <arg>
                                      Optional "random"
                                      expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                        Texp_construct "None"
                                        []
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[935,24611+19]..lib/grammarFunctor.ml[935,24611+21])
                                        Texp_constant Const_int 16
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[937,24634+2]..lib/grammarFunctor.ml[946,24897+8])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[937,24634+6]..lib/grammarFunctor.ml[937,24634+23])
                                  Tpat_var "consult_prec_decl/3494"
                                expression (lib/grammarFunctor.ml[937,24634+24]..lib/grammarFunctor.ml[946,24897+8]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[937,24634+24]..lib/grammarFunctor.ml[937,24634+28])
                                        Tpat_var "prod/3496"
                                      expression (lib/grammarFunctor.ml[938,24665+4]..lib/grammarFunctor.ml[946,24897+8])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/grammarFunctor.ml[938,24665+8]..lib/grammarFunctor.ml[938,24665+12])
                                              Tpat_var "osym/3497"
                                            expression (lib/grammarFunctor.ml[938,24665+15]..lib/grammarFunctor.ml[938,24665+31])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[938,24665+15]..lib/grammarFunctor.ml[938,24665+31]) ghost
                                                Texp_ident "Stdlib!.Array.get"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[938,24665+15]..lib/grammarFunctor.ml[938,24665+24])
                                                    Texp_ident "prec_decl/2963"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[938,24665+26]..lib/grammarFunctor.ml[938,24665+30])
                                                    Texp_ident "prod/3496"
                                              ]
                                        ]
                                        expression (lib/grammarFunctor.ml[939,24700+4]..lib/grammarFunctor.ml[946,24897+8])
                                          Texp_tuple
                                          [
                                            expression (lib/grammarFunctor.ml[939,24700+4]..lib/grammarFunctor.ml[945,24890+5])
                                              Texp_lazy                                              expression (lib/grammarFunctor.ml[939,24700+9]..lib/grammarFunctor.ml[945,24890+5])
                                                Texp_apply
                                                expression (lib/grammarFunctor.ml[940,24711+6]..lib/grammarFunctor.ml[940,24711+17])
                                                  Texp_ident "Stdlib!.Option.iter"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[940,24711+18]..lib/grammarFunctor.ml[944,24877+7])
                                                      Texp_function
                                                      Nolabel
                                                      [
                                                        <case>
                                                          pattern (lib/grammarFunctor.ml[940,24711+23]..lib/grammarFunctor.ml[940,24711+26])
                                                            Tpat_var "sym/3515"
                                                          expression (lib/grammarFunctor.ml[942,24794+8]..lib/grammarFunctor.ml[943,24838+38])
                                                            Texp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (lib/grammarFunctor.ml[942,24794+12]..lib/grammarFunctor.ml[942,24794+15])
                                                                  Tpat_var "pos/3516"
                                                                expression (lib/grammarFunctor.ml[942,24794+18]..lib/grammarFunctor.ml[942,24794+40])
                                                                  Texp_apply
                                                                  expression (lib/grammarFunctor.ml[942,24794+18]..lib/grammarFunctor.ml[942,24794+36])
                                                                    Texp_ident "Gbnf_parser!.Positions.position"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[942,24794+37]..lib/grammarFunctor.ml[942,24794+40])
                                                                        Texp_ident "sym/3515"
                                                                  ]
                                                            ]
                                                            expression (lib/grammarFunctor.ml[943,24838+8]..lib/grammarFunctor.ml[943,24838+38])
                                                              Texp_apply
                                                              expression (lib/grammarFunctor.ml[943,24838+8]..lib/grammarFunctor.ml[943,24838+19])
                                                                Texp_ident "Stdlib!.Hashtbl.add"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/grammarFunctor.ml[943,24838+20]..lib/grammarFunctor.ml[943,24838+31])
                                                                    Texp_ident "ever_useful/3452"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/grammarFunctor.ml[943,24838+32]..lib/grammarFunctor.ml[943,24838+35])
                                                                    Texp_ident "pos/3516"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/grammarFunctor.ml[943,24838+36]..lib/grammarFunctor.ml[943,24838+38])
                                                                    Texp_construct "()"
                                                                    []
                                                              ]
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[944,24877+8]..lib/grammarFunctor.ml[944,24877+12])
                                                      Texp_ident "osym/3497"
                                                ]
                                            expression (lib/grammarFunctor.ml[946,24897+4]..lib/grammarFunctor.ml[946,24897+8])
                                              Texp_ident "osym/3497"
                                          ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[952,25087+2]..lib/grammarFunctor.ml[963,25570+5])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[952,25087+6]..lib/grammarFunctor.ml[952,25087+17])
                                  Tpat_var "diagnostics/3517"
                                expression (lib/grammarFunctor.ml[952,25087+18]..lib/grammarFunctor.ml[963,25570+5]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[952,25087+18]..lib/grammarFunctor.ml[952,25087+20])
                                        Tpat_construct "()"
                                        []
                                        None
                                      expression (lib/grammarFunctor.ml[953,25110+4]..lib/grammarFunctor.ml[963,25570+5])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[953,25110+4]..lib/grammarFunctor.ml[953,25110+9])
                                          Texp_ident "iterx/3385"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[953,25110+10]..lib/grammarFunctor.ml[963,25570+5])
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[953,25110+15]..lib/grammarFunctor.ml[953,25110+19])
                                                    Tpat_var "prod/3519"
                                                  expression (lib/grammarFunctor.ml[954,25133+6]..lib/grammarFunctor.ml[962,25557+12])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (lib/grammarFunctor.ml[954,25133+10]..lib/grammarFunctor.ml[954,25133+14])
                                                          Tpat_var "osym/3520"
                                                        expression (lib/grammarFunctor.ml[954,25133+17]..lib/grammarFunctor.ml[954,25133+33])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[954,25133+17]..lib/grammarFunctor.ml[954,25133+33]) ghost
                                                            Texp_ident "Stdlib!.Array.get"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[954,25133+17]..lib/grammarFunctor.ml[954,25133+26])
                                                                Texp_ident "prec_decl/2963"
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[954,25133+28]..lib/grammarFunctor.ml[954,25133+32])
                                                                Texp_ident "prod/3519"
                                                          ]
                                                    ]
                                                    expression (lib/grammarFunctor.ml[955,25170+6]..lib/grammarFunctor.ml[962,25557+12])
                                                      Texp_apply
                                                      expression (lib/grammarFunctor.ml[955,25170+6]..lib/grammarFunctor.ml[955,25170+17])
                                                        Texp_ident "Stdlib!.Option.iter"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[955,25170+18]..lib/grammarFunctor.ml[962,25557+7])
                                                            Texp_function
                                                            Nolabel
                                                            [
                                                              <case>
                                                                pattern (lib/grammarFunctor.ml[955,25170+23]..lib/grammarFunctor.ml[955,25170+26])
                                                                  Tpat_var "sym/3521"
                                                                expression (lib/grammarFunctor.ml[957,25264+8]..lib/grammarFunctor.ml[961,25545+11])
                                                                  Texp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (lib/grammarFunctor.ml[957,25264+12]..lib/grammarFunctor.ml[957,25264+15])
                                                                        Tpat_var "pos/3522"
                                                                      expression (lib/grammarFunctor.ml[957,25264+18]..lib/grammarFunctor.ml[957,25264+40])
                                                                        Texp_apply
                                                                        expression (lib/grammarFunctor.ml[957,25264+18]..lib/grammarFunctor.ml[957,25264+36])
                                                                          Texp_ident "Gbnf_parser!.Positions.position"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (lib/grammarFunctor.ml[957,25264+37]..lib/grammarFunctor.ml[957,25264+40])
                                                                              Texp_ident "sym/3521"
                                                                        ]
                                                                  ]
                                                                  expression (lib/grammarFunctor.ml[958,25308+8]..lib/grammarFunctor.ml[961,25545+11])
                                                                    Texp_ifthenelse
                                                                    expression (lib/grammarFunctor.ml[958,25308+11]..lib/grammarFunctor.ml[958,25308+44])
                                                                      Texp_apply
                                                                      expression (lib/grammarFunctor.ml[958,25308+11]..lib/grammarFunctor.ml[958,25308+14])
                                                                        Texp_ident "Stdlib!.not"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (lib/grammarFunctor.ml[958,25308+15]..lib/grammarFunctor.ml[958,25308+44])
                                                                            Texp_apply
                                                                            expression (lib/grammarFunctor.ml[958,25308+16]..lib/grammarFunctor.ml[958,25308+27])
                                                                              Texp_ident "Stdlib!.Hashtbl.mem"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (lib/grammarFunctor.ml[958,25308+28]..lib/grammarFunctor.ml[958,25308+39])
                                                                                  Texp_ident "ever_useful/3452"
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (lib/grammarFunctor.ml[958,25308+40]..lib/grammarFunctor.ml[958,25308+43])
                                                                                  Texp_ident "pos/3522"
                                                                            ]
                                                                      ]
                                                                    expression (lib/grammarFunctor.ml[958,25308+50]..lib/grammarFunctor.ml[961,25545+11])
                                                                      Texp_apply
                                                                      expression (lib/grammarFunctor.ml[960,25452+10]..lib/grammarFunctor.ml[960,25452+21])
                                                                        Texp_ident "Stdlib!.Hashtbl.add"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (lib/grammarFunctor.ml[960,25452+22]..lib/grammarFunctor.ml[960,25452+33])
                                                                            Texp_ident "ever_useful/3452"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (lib/grammarFunctor.ml[960,25452+34]..lib/grammarFunctor.ml[960,25452+37])
                                                                            Texp_ident "pos/3522"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (lib/grammarFunctor.ml[960,25452+38]..lib/grammarFunctor.ml[960,25452+40])
                                                                            Texp_construct "()"
                                                                            []
                                                                      ]
                                                                    None
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[962,25557+8]..lib/grammarFunctor.ml[962,25557+12])
                                                            Texp_ident "osym/3520"
                                                      ]
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[970,25797+2]..lib/grammarFunctor.ml[973,25871+25])
                            Tstr_type Rec
                            [
                              type_declaration production_level/3524 (lib/grammarFunctor.ml[970,25797+2]..lib/grammarFunctor.ml[973,25871+25])
                                ptype_params =
                                  []
                                ptype_cstrs =
                                  []
                                ptype_kind =
                                  Ttype_variant
                                    [
                                      (lib/grammarFunctor.ml[971,25823+4]..lib/grammarFunctor.ml[971,25823+11])
                                        PNone/3525
                                        []
                                        None
                                      (lib/grammarFunctor.ml[972,25835+4]..lib/grammarFunctor.ml[972,25835+35])
                                        PRightmostToken/3526
                                        [
                                          core_type (lib/grammarFunctor.ml[972,25835+25]..lib/grammarFunctor.ml[972,25835+35])
                                            Ttyp_constr "Terminal/2246.t"
                                            []
                                        ]
                                        None
                                      (lib/grammarFunctor.ml[973,25871+4]..lib/grammarFunctor.ml[973,25871+25])
                                        PPrecDecl/3527
                                        [
                                          core_type (lib/grammarFunctor.ml[973,25871+19]..lib/grammarFunctor.ml[973,25871+25])
                                            Ttyp_constr "Gbnf_parser!.Syntax.symbol"
                                            []
                                        ]
                                        None
                                    ]
                                ptype_private = Public
                                ptype_manifest =
                                  None
                            ]
                          structure_item (lib/grammarFunctor.ml[975,25898+2]..lib/grammarFunctor.ml[982,26085+22])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[975,25898+6]..lib/grammarFunctor.ml[975,25898+24])
                                  Tpat_var "rightmost_terminal/3528"
                                expression (lib/grammarFunctor.ml[975,25898+25]..lib/grammarFunctor.ml[982,26085+22]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[975,25898+25]..lib/grammarFunctor.ml[975,25898+29])
                                        Tpat_var "prod/3530"
                                      expression (lib/grammarFunctor.ml[976,25930+4]..lib/grammarFunctor.ml[982,26085+22])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[976,25930+4]..lib/grammarFunctor.ml[976,25930+19])
                                          Texp_ident "Stdlib!.Array.fold_left"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[976,25930+20]..lib/grammarFunctor.ml[982,26085+5])
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[976,25930+25]..lib/grammarFunctor.ml[976,25930+29])
                                                    Tpat_var "accu/3531"
                                                  expression (lib/grammarFunctor.ml[976,25930+30]..lib/grammarFunctor.ml[981,26070+14]) ghost
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (lib/grammarFunctor.ml[976,25930+30]..lib/grammarFunctor.ml[976,25930+36])
                                                          Tpat_var "symbol/3532"
                                                        expression (lib/grammarFunctor.ml[977,25970+6]..lib/grammarFunctor.ml[981,26070+14])
                                                          Texp_match
                                                          expression (lib/grammarFunctor.ml[977,25970+12]..lib/grammarFunctor.ml[977,25970+18])
                                                            Texp_ident "symbol/3532"
                                                          [
                                                            <case>
                                                              pattern (lib/grammarFunctor.ml[978,25994+8]..lib/grammarFunctor.ml[978,25994+20])
                                                                Tpat_value
                                                                pattern (lib/grammarFunctor.ml[978,25994+8]..lib/grammarFunctor.ml[978,25994+20])
                                                                  Tpat_construct "Symbol.T"
                                                                  [
                                                                    pattern (lib/grammarFunctor.ml[978,25994+17]..lib/grammarFunctor.ml[978,25994+20])
                                                                      Tpat_var "tok/3533"
                                                                  ]
                                                                  None
                                                              expression (lib/grammarFunctor.ml[979,26018+10]..lib/grammarFunctor.ml[979,26018+29])
                                                                Texp_construct "PRightmostToken"
                                                                [
                                                                  expression (lib/grammarFunctor.ml[979,26018+26]..lib/grammarFunctor.ml[979,26018+29])
                                                                    Texp_ident "tok/3533"
                                                                ]
                                                            <case>
                                                              pattern (lib/grammarFunctor.ml[980,26048+8]..lib/grammarFunctor.ml[980,26048+18])
                                                                Tpat_value
                                                                pattern (lib/grammarFunctor.ml[980,26048+8]..lib/grammarFunctor.ml[980,26048+18])
                                                                  Tpat_construct "Symbol.N"
                                                                  [
                                                                    pattern (lib/grammarFunctor.ml[980,26048+17]..lib/grammarFunctor.ml[980,26048+18])
                                                                      Tpat_any
                                                                  ]
                                                                  None
                                                              expression (lib/grammarFunctor.ml[981,26070+10]..lib/grammarFunctor.ml[981,26070+14])
                                                                Texp_ident "accu/3531"
                                                          ]
                                                    ]
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[982,26085+6]..lib/grammarFunctor.ml[982,26085+11])
                                              Texp_construct "PNone"
                                              []
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[982,26085+12]..lib/grammarFunctor.ml[982,26085+22])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[982,26085+13]..lib/grammarFunctor.ml[982,26085+16])
                                                Texp_ident "rhs/3338"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[982,26085+17]..lib/grammarFunctor.ml[982,26085+21])
                                                    Texp_ident "prod/3530"
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[984,26109+2]..lib/grammarFunctor.ml[985,26131+39])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[984,26109+6]..lib/grammarFunctor.ml[984,26109+13])
                                  Tpat_var "combine/3534"
                                expression (lib/grammarFunctor.ml[984,26109+14]..lib/grammarFunctor.ml[985,26131+39]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[984,26109+14]..lib/grammarFunctor.ml[984,26109+16])
                                        Tpat_var "e1/3536"
                                      expression (lib/grammarFunctor.ml[984,26109+17]..lib/grammarFunctor.ml[985,26131+39]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[984,26109+17]..lib/grammarFunctor.ml[984,26109+19])
                                              Tpat_var "e2/3537"
                                            expression (lib/grammarFunctor.ml[985,26131+4]..lib/grammarFunctor.ml[985,26131+39])
                                              Texp_lazy                                              expression (lib/grammarFunctor.ml[985,26131+9]..lib/grammarFunctor.ml[985,26131+39])
                                                Texp_sequence
                                                expression (lib/grammarFunctor.ml[985,26131+10]..lib/grammarFunctor.ml[985,26131+23])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[985,26131+10]..lib/grammarFunctor.ml[985,26131+20])
                                                    Texp_ident "Stdlib!.Lazy.force"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[985,26131+21]..lib/grammarFunctor.ml[985,26131+23])
                                                        Texp_ident "e1/3536"
                                                  ]
                                                expression (lib/grammarFunctor.ml[985,26131+25]..lib/grammarFunctor.ml[985,26131+38])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[985,26131+25]..lib/grammarFunctor.ml[985,26131+35])
                                                    Texp_ident "Stdlib!.Lazy.force"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[985,26131+36]..lib/grammarFunctor.ml[985,26131+38])
                                                        Texp_ident "e2/3537"
                                                  ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[987,26172+2]..lib/grammarFunctor.ml[1004,26698+34])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[987,26172+6]..lib/grammarFunctor.ml[987,26172+16])
                                  Tpat_var "precedence/3551"
                                expression (lib/grammarFunctor.ml[987,26172+17]..lib/grammarFunctor.ml[1004,26698+34]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[987,26172+17]..lib/grammarFunctor.ml[987,26172+21])
                                        Tpat_var "prod/3553"
                                      expression (lib/grammarFunctor.ml[988,26196+4]..lib/grammarFunctor.ml[1004,26698+34])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/grammarFunctor.ml[988,26196+8]..lib/grammarFunctor.ml[988,26196+24])
                                              Tpat_tuple
                                              [
                                                pattern (lib/grammarFunctor.ml[988,26196+8]..lib/grammarFunctor.ml[988,26196+13])
                                                  Tpat_var "fact1/3554"
                                                pattern (lib/grammarFunctor.ml[988,26196+15]..lib/grammarFunctor.ml[988,26196+24])
                                                  Tpat_var "prec_decl/3555"
                                              ]
                                            expression (lib/grammarFunctor.ml[988,26196+27]..lib/grammarFunctor.ml[988,26196+49])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[988,26196+27]..lib/grammarFunctor.ml[988,26196+44])
                                                Texp_ident "consult_prec_decl/3494"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[988,26196+45]..lib/grammarFunctor.ml[988,26196+49])
                                                    Texp_ident "prod/3553"
                                              ]
                                        ]
                                        expression (lib/grammarFunctor.ml[989,26249+4]..lib/grammarFunctor.ml[1004,26698+34])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/grammarFunctor.ml[989,26249+8]..lib/grammarFunctor.ml[989,26249+17])
                                                Tpat_var "oterminal/3556"
                                              expression (lib/grammarFunctor.ml[990,26269+6]..lib/grammarFunctor.ml[994,26386+28])
                                                Texp_match
                                                expression (lib/grammarFunctor.ml[990,26269+12]..lib/grammarFunctor.ml[990,26269+21])
                                                  Texp_ident "prec_decl/3555"
                                                [
                                                  <case>
                                                    pattern (lib/grammarFunctor.ml[991,26296+8]..lib/grammarFunctor.ml[991,26296+12])
                                                      Tpat_value
                                                      pattern (lib/grammarFunctor.ml[991,26296+8]..lib/grammarFunctor.ml[991,26296+12])
                                                        Tpat_construct "None"
                                                        []
                                                        None
                                                    expression (lib/grammarFunctor.ml[992,26312+10]..lib/grammarFunctor.ml[992,26312+33])
                                                      Texp_apply
                                                      expression (lib/grammarFunctor.ml[992,26312+10]..lib/grammarFunctor.ml[992,26312+28])
                                                        Texp_ident "rightmost_terminal/3528"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[992,26312+29]..lib/grammarFunctor.ml[992,26312+33])
                                                            Texp_ident "prod/3553"
                                                      ]
                                                  <case>
                                                    pattern (lib/grammarFunctor.ml[993,26346+8]..lib/grammarFunctor.ml[993,26346+36])
                                                      Tpat_value
                                                      pattern (lib/grammarFunctor.ml[993,26346+8]..lib/grammarFunctor.ml[993,26346+36])
                                                        Tpat_construct "Some"
                                                        [
                                                          pattern (lib/grammarFunctor.ml[993,26346+13]..lib/grammarFunctor.ml[993,26346+36])
                                                            Tpat_record
                                                            [
                                                              "value"
                                                                pattern (lib/grammarFunctor.ml[993,26346+23]..lib/grammarFunctor.ml[993,26346+31])
                                                                  Tpat_var "terminal/3557"
                                                            ]
                                                        ]
                                                        None
                                                    expression (lib/grammarFunctor.ml[994,26386+10]..lib/grammarFunctor.ml[994,26386+28])
                                                      Texp_construct "PPrecDecl"
                                                      [
                                                        expression (lib/grammarFunctor.ml[994,26386+20]..lib/grammarFunctor.ml[994,26386+28])
                                                          Texp_ident "terminal/3557"
                                                      ]
                                                ]
                                          ]
                                          expression (lib/grammarFunctor.ml[996,26422+4]..lib/grammarFunctor.ml[1004,26698+34])
                                            Texp_match
                                            expression (lib/grammarFunctor.ml[996,26422+10]..lib/grammarFunctor.ml[996,26422+19])
                                              Texp_ident "oterminal/3556"
                                            [
                                              <case>
                                                pattern (lib/grammarFunctor.ml[997,26447+6]..lib/grammarFunctor.ml[997,26447+11])
                                                  Tpat_value
                                                  pattern (lib/grammarFunctor.ml[997,26447+6]..lib/grammarFunctor.ml[997,26447+11])
                                                    Tpat_construct "PNone"
                                                    []
                                                    None
                                                expression (lib/grammarFunctor.ml[998,26462+8]..lib/grammarFunctor.ml[998,26462+34])
                                                  Texp_tuple
                                                  [
                                                    expression (lib/grammarFunctor.ml[998,26462+8]..lib/grammarFunctor.ml[998,26462+13])
                                                      Texp_ident "fact1/3554"
                                                    expression (lib/grammarFunctor.ml[998,26462+15]..lib/grammarFunctor.ml[998,26462+34])
                                                      Texp_construct "UndefinedPrecedence"
                                                      []
                                                  ]
                                              <case>
                                                pattern (lib/grammarFunctor.ml[999,26497+6]..lib/grammarFunctor.ml[999,26497+25])
                                                  Tpat_value
                                                  pattern (lib/grammarFunctor.ml[999,26497+6]..lib/grammarFunctor.ml[999,26497+25])
                                                    Tpat_construct "PRightmostToken"
                                                    [
                                                      pattern (lib/grammarFunctor.ml[999,26497+22]..lib/grammarFunctor.ml[999,26497+25])
                                                        Tpat_var "tok/3558"
                                                    ]
                                                    None
                                                expression (lib/grammarFunctor.ml[1000,26526+8]..lib/grammarFunctor.ml[1001,26586+34])
                                                  Texp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (lib/grammarFunctor.ml[1000,26526+12]..lib/grammarFunctor.ml[1000,26526+24])
                                                        Tpat_tuple
                                                        [
                                                          pattern (lib/grammarFunctor.ml[1000,26526+12]..lib/grammarFunctor.ml[1000,26526+17])
                                                            Tpat_var "fact2/3560"
                                                          pattern (lib/grammarFunctor.ml[1000,26526+19]..lib/grammarFunctor.ml[1000,26526+24])
                                                            Tpat_var "level/3561"
                                                        ]
                                                      expression (lib/grammarFunctor.ml[1000,26526+27]..lib/grammarFunctor.ml[1000,26526+56])
                                                        Texp_apply
                                                        expression (lib/grammarFunctor.ml[1000,26526+27]..lib/grammarFunctor.ml[1000,26526+52])
                                                          Texp_ident "Terminal/2246.precedence_level"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1000,26526+53]..lib/grammarFunctor.ml[1000,26526+56])
                                                              Texp_ident "tok/3558"
                                                        ]
                                                  ]
                                                  expression (lib/grammarFunctor.ml[1001,26586+8]..lib/grammarFunctor.ml[1001,26586+34])
                                                    Texp_tuple
                                                    [
                                                      expression (lib/grammarFunctor.ml[1001,26586+8]..lib/grammarFunctor.ml[1001,26586+27])
                                                        Texp_apply
                                                        expression (lib/grammarFunctor.ml[1001,26586+8]..lib/grammarFunctor.ml[1001,26586+15])
                                                          Texp_ident "combine/3534"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1001,26586+16]..lib/grammarFunctor.ml[1001,26586+21])
                                                              Texp_ident "fact1/3554"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1001,26586+22]..lib/grammarFunctor.ml[1001,26586+27])
                                                              Texp_ident "fact2/3560"
                                                        ]
                                                      expression (lib/grammarFunctor.ml[1001,26586+29]..lib/grammarFunctor.ml[1001,26586+34])
                                                        Texp_ident "level/3561"
                                                    ]
                                              <case>
                                                pattern (lib/grammarFunctor.ml[1002,26621+6]..lib/grammarFunctor.ml[1002,26621+18])
                                                  Tpat_value
                                                  pattern (lib/grammarFunctor.ml[1002,26621+6]..lib/grammarFunctor.ml[1002,26621+18])
                                                    Tpat_construct "PPrecDecl"
                                                    [
                                                      pattern (lib/grammarFunctor.ml[1002,26621+16]..lib/grammarFunctor.ml[1002,26621+18])
                                                        Tpat_var "id/3559"
                                                    ]
                                                    None
                                                expression (lib/grammarFunctor.ml[1003,26643+8]..lib/grammarFunctor.ml[1004,26698+34])
                                                  Texp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (lib/grammarFunctor.ml[1003,26643+12]..lib/grammarFunctor.ml[1003,26643+24])
                                                        Tpat_tuple
                                                        [
                                                          pattern (lib/grammarFunctor.ml[1003,26643+12]..lib/grammarFunctor.ml[1003,26643+17])
                                                            Tpat_var "fact2/3562"
                                                          pattern (lib/grammarFunctor.ml[1003,26643+19]..lib/grammarFunctor.ml[1003,26643+24])
                                                            Tpat_var "level/3563"
                                                        ]
                                                      expression (lib/grammarFunctor.ml[1003,26643+27]..lib/grammarFunctor.ml[1003,26643+50])
                                                        Texp_apply
                                                        expression (lib/grammarFunctor.ml[1003,26643+27]..lib/grammarFunctor.ml[1003,26643+47])
                                                          Texp_ident "TokPrecedence/1946.leveli"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1003,26643+48]..lib/grammarFunctor.ml[1003,26643+50])
                                                              Texp_ident "id/3559"
                                                        ]
                                                  ]
                                                  expression (lib/grammarFunctor.ml[1004,26698+8]..lib/grammarFunctor.ml[1004,26698+34])
                                                    Texp_tuple
                                                    [
                                                      expression (lib/grammarFunctor.ml[1004,26698+8]..lib/grammarFunctor.ml[1004,26698+27])
                                                        Texp_apply
                                                        expression (lib/grammarFunctor.ml[1004,26698+8]..lib/grammarFunctor.ml[1004,26698+15])
                                                          Texp_ident "combine/3534"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1004,26698+16]..lib/grammarFunctor.ml[1004,26698+21])
                                                              Texp_ident "fact1/3554"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1004,26698+22]..lib/grammarFunctor.ml[1004,26698+27])
                                                              Texp_ident "fact2/3562"
                                                        ]
                                                      expression (lib/grammarFunctor.ml[1004,26698+29]..lib/grammarFunctor.ml[1004,26698+34])
                                                        Texp_ident "level/3563"
                                                    ]
                                            ]
                                  ]
                            ]
                        ]
                structure_item (lib/grammarFunctor.ml[1008,26739+0]..lib/grammarFunctor.ml[1009,26770+38])
                  Tstr_value Nonrec
                  [
                    <def>
                      pattern (lib/grammarFunctor.ml[1008,26739+4]..lib/grammarFunctor.ml[1008,26739+28])
                        Tpat_var "grammar_uses_error_token/3565"
                      expression (lib/grammarFunctor.ml[1009,26770+2]..lib/grammarFunctor.ml[1009,26770+38])
                        Texp_apply
                        expression (lib/grammarFunctor.ml[1009,26770+2]..lib/grammarFunctor.ml[1009,26770+3])
                          Texp_ident "Stdlib!.!"
                        [
                          <arg>
                            Nolabel
                            expression (lib/grammarFunctor.ml[1009,26770+3]..lib/grammarFunctor.ml[1009,26770+38])
                              Texp_ident "Production/3564.grammar_uses_error_token"
                        ]
                  ]
                structure_item (lib/grammarFunctor.ml[1014,26919+0]..lib/grammarFunctor.ml[1025,27128+3])
                  Tstr_module
                  ProductionMap/3611
                    module_expr (lib/grammarFunctor.ml[1014,26919+23]..lib/grammarFunctor.ml[1025,27128+3])
                      Tmod_structure
                      [
                        structure_item (lib/grammarFunctor.ml[1016,26950+2]..lib/grammarFunctor.ml[1016,26950+22])
                          Tstr_include                          module_expr (lib/grammarFunctor.ml[1016,26950+10]..lib/grammarFunctor.ml[1016,26950+22])
                            module_expr (lib/grammarFunctor.ml[1016,26950+10]..lib/grammarFunctor.ml[1016,26950+22])
                              Tmod_ident "Gbnf_parser!.Patricia.Big"
                        structure_item (lib/grammarFunctor.ml[1020,27026+2]..lib/grammarFunctor.ml[1023,27115+11])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1020,27026+6]..lib/grammarFunctor.ml[1020,27026+11])
                                Tpat_var "start/3606"
                              expression (lib/grammarFunctor.ml[1020,27026+12]..lib/grammarFunctor.ml[1023,27115+11]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[1020,27026+12]..lib/grammarFunctor.ml[1020,27026+13])
                                      Tpat_var "f/3608"
                                    expression (lib/grammarFunctor.ml[1021,27042+4]..lib/grammarFunctor.ml[1023,27115+11])
                                      Texp_apply
                                      expression (lib/grammarFunctor.ml[1021,27042+4]..lib/grammarFunctor.ml[1021,27042+14])
                                        Texp_ident "Gbnf_parser!.Misc.foldi"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[1021,27042+15]..lib/grammarFunctor.ml[1021,27042+31])
                                            Texp_ident "Production/3564.start"
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[1021,27042+32]..lib/grammarFunctor.ml[1023,27115+5])
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (lib/grammarFunctor.ml[1021,27042+37]..lib/grammarFunctor.ml[1021,27042+41])
                                                  Tpat_var "prod/3609"
                                                expression (lib/grammarFunctor.ml[1021,27042+42]..lib/grammarFunctor.ml[1022,27089+25]) ghost
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (lib/grammarFunctor.ml[1021,27042+42]..lib/grammarFunctor.ml[1021,27042+43])
                                                        Tpat_var "m/3610"
                                                      expression (lib/grammarFunctor.ml[1022,27089+6]..lib/grammarFunctor.ml[1022,27089+25])
                                                        Texp_apply
                                                        expression (lib/grammarFunctor.ml[1022,27089+6]..lib/grammarFunctor.ml[1022,27089+9])
                                                          Texp_ident "add/3580"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1022,27089+10]..lib/grammarFunctor.ml[1022,27089+14])
                                                              Texp_ident "prod/3609"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1022,27089+15]..lib/grammarFunctor.ml[1022,27089+23])
                                                              Texp_apply
                                                              expression (lib/grammarFunctor.ml[1022,27089+16]..lib/grammarFunctor.ml[1022,27089+17])
                                                                Texp_ident "f/3608"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/grammarFunctor.ml[1022,27089+18]..lib/grammarFunctor.ml[1022,27089+22])
                                                                    Texp_ident "prod/3609"
                                                              ]
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1022,27089+24]..lib/grammarFunctor.ml[1022,27089+25])
                                                              Texp_ident "m/3610"
                                                        ]
                                                  ]
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[1023,27115+6]..lib/grammarFunctor.ml[1023,27115+11])
                                            Texp_ident "empty/3568"
                                      ]
                                ]
                          ]
                      ]
                structure_item (lib/grammarFunctor.ml[1036,27594+0]..lib/grammarFunctor.ml[1160,31687+3])
                  Tstr_module
                  GenericAnalysis/4037
                    module_expr (lib/grammarFunctor.ml[1037,27617+2]..lib/grammarFunctor.ml[1160,31687+3])
                      Tmod_functor "P/3733"
                      module_type (lib/grammarFunctor.ml[1037,27617+7]..lib/grammarFunctor.ml[1037,27617+19])
                        Tmty_ident "Gbnf_parser!.Fix.PROPERTY"
                      module_expr (lib/grammarFunctor.ml[1038,27638+2]..lib/grammarFunctor.ml[1160,31687+3])
                        Tmod_functor "S/3739"
                        module_type (lib/grammarFunctor.ml[1038,27638+7]..lib/grammarFunctor.ml[1070,29048+5])
                          Tmty_signature
                          [
                            signature_item (lib/grammarFunctor.ml[1039,27649+4]..lib/grammarFunctor.ml[1039,27649+10])
                              Tsig_open Fresh "P/3733"
                            signature_item (lib/grammarFunctor.ml[1045,27876+4]..lib/grammarFunctor.ml[1045,27876+50])
                              Tsig_value
                              value_description shortcut/3734 (lib/grammarFunctor.ml[1045,27876+4]..lib/grammarFunctor.ml[1045,27876+50])
                                core_type (lib/grammarFunctor.ml[1045,27876+18]..lib/grammarFunctor.ml[1045,27876+50])
                                  Ttyp_arrow
                                  Nolabel
                                  core_type (lib/grammarFunctor.ml[1045,27876+18]..lib/grammarFunctor.ml[1045,27876+31])
                                    Ttyp_constr "Nonterminal/2057.t"
                                    []
                                  core_type (lib/grammarFunctor.ml[1045,27876+35]..lib/grammarFunctor.ml[1045,27876+50])
                                    Ttyp_constr "option/10!"
                                    [
                                      core_type (lib/grammarFunctor.ml[1045,27876+35]..lib/grammarFunctor.ml[1045,27876+43])
                                        Ttyp_constr "P/3733.property"
                                        []
                                    ]
                                []
                            signature_item (lib/grammarFunctor.ml[1048,27987+4]..lib/grammarFunctor.ml[1048,27987+40])
                              Tsig_value
                              value_description terminal/3735 (lib/grammarFunctor.ml[1048,27987+4]..lib/grammarFunctor.ml[1048,27987+40])
                                core_type (lib/grammarFunctor.ml[1048,27987+18]..lib/grammarFunctor.ml[1048,27987+40])
                                  Ttyp_arrow
                                  Nolabel
                                  core_type (lib/grammarFunctor.ml[1048,27987+18]..lib/grammarFunctor.ml[1048,27987+28])
                                    Ttyp_constr "Terminal/2246.t"
                                    []
                                  core_type (lib/grammarFunctor.ml[1048,27987+32]..lib/grammarFunctor.ml[1048,27987+40])
                                    Ttyp_constr "P/3733.property"
                                    []
                                []
                            signature_item (lib/grammarFunctor.ml[1054,28283+4]..lib/grammarFunctor.ml[1054,28283+63])
                              Tsig_value
                              value_description disjunction/3736 (lib/grammarFunctor.ml[1054,28283+4]..lib/grammarFunctor.ml[1054,28283+63])
                                core_type (lib/grammarFunctor.ml[1054,28283+21]..lib/grammarFunctor.ml[1054,28283+63])
                                  Ttyp_arrow
                                  Nolabel
                                  core_type (lib/grammarFunctor.ml[1054,28283+21]..lib/grammarFunctor.ml[1054,28283+29])
                                    Ttyp_constr "P/3733.property"
                                    []
                                  core_type (lib/grammarFunctor.ml[1054,28283+33]..lib/grammarFunctor.ml[1054,28283+63])
                                    Ttyp_arrow
                                    Nolabel
                                    core_type (lib/grammarFunctor.ml[1054,28283+34]..lib/grammarFunctor.ml[1054,28283+50])
                                      Ttyp_arrow
                                      Nolabel
                                      core_type (lib/grammarFunctor.ml[1054,28283+34]..lib/grammarFunctor.ml[1054,28283+38])
                                        Ttyp_constr "unit/6!"
                                        []
                                      core_type (lib/grammarFunctor.ml[1054,28283+42]..lib/grammarFunctor.ml[1054,28283+50])
                                        Ttyp_constr "P/3733.property"
                                        []
                                    core_type (lib/grammarFunctor.ml[1054,28283+55]..lib/grammarFunctor.ml[1054,28283+63])
                                      Ttyp_constr "P/3733.property"
                                      []
                                []
                            signature_item (lib/grammarFunctor.ml[1064,28837+4]..lib/grammarFunctor.ml[1064,28837+75])
                              Tsig_value
                              value_description conjunction/3737 (lib/grammarFunctor.ml[1064,28837+4]..lib/grammarFunctor.ml[1064,28837+75])
                                core_type (lib/grammarFunctor.ml[1064,28837+21]..lib/grammarFunctor.ml[1064,28837+75])
                                  Ttyp_arrow
                                  Nolabel
                                  core_type (lib/grammarFunctor.ml[1064,28837+21]..lib/grammarFunctor.ml[1064,28837+29])
                                    Ttyp_constr "Symbol/2545.t"
                                    []
                                  core_type (lib/grammarFunctor.ml[1064,28837+33]..lib/grammarFunctor.ml[1064,28837+75])
                                    Ttyp_arrow
                                    Nolabel
                                    core_type (lib/grammarFunctor.ml[1064,28837+33]..lib/grammarFunctor.ml[1064,28837+41])
                                      Ttyp_constr "P/3733.property"
                                      []
                                    core_type (lib/grammarFunctor.ml[1064,28837+45]..lib/grammarFunctor.ml[1064,28837+75])
                                      Ttyp_arrow
                                      Nolabel
                                      core_type (lib/grammarFunctor.ml[1064,28837+46]..lib/grammarFunctor.ml[1064,28837+62])
                                        Ttyp_arrow
                                        Nolabel
                                        core_type (lib/grammarFunctor.ml[1064,28837+46]..lib/grammarFunctor.ml[1064,28837+50])
                                          Ttyp_constr "unit/6!"
                                          []
                                        core_type (lib/grammarFunctor.ml[1064,28837+54]..lib/grammarFunctor.ml[1064,28837+62])
                                          Ttyp_constr "P/3733.property"
                                          []
                                      core_type (lib/grammarFunctor.ml[1064,28837+67]..lib/grammarFunctor.ml[1064,28837+75])
                                        Ttyp_constr "P/3733.property"
                                        []
                                []
                            signature_item (lib/grammarFunctor.ml[1068,29021+4]..lib/grammarFunctor.ml[1068,29021+25])
                              Tsig_value
                              value_description epsilon/3738 (lib/grammarFunctor.ml[1068,29021+4]..lib/grammarFunctor.ml[1068,29021+25])
                                core_type (lib/grammarFunctor.ml[1068,29021+17]..lib/grammarFunctor.ml[1068,29021+25])
                                  Ttyp_constr "P/3733.property"
                                  []
                                []
                          ]
                        module_expr (lib/grammarFunctor.ml[1071,29055+0]..lib/grammarFunctor.ml[1160,31687+3])
                          Tmod_constraint
                          module_expr (lib/grammarFunctor.ml[1088,29622+6]..lib/grammarFunctor.ml[1160,31687+3])
                            module_expr (lib/grammarFunctor.ml[1088,29622+6]..lib/grammarFunctor.ml[1160,31687+3])
                              Tmod_structure
                              [
                                structure_item (lib/grammarFunctor.ml[1089,29635+2]..lib/grammarFunctor.ml[1089,29635+8])
                                  Tstr_open Fresh
                                  module_expr (lib/grammarFunctor.ml[1089,29635+7]..lib/grammarFunctor.ml[1089,29635+8])
                                    Tmod_ident "P/3733"
                                structure_item (lib/grammarFunctor.ml[1097,29883+2]..lib/grammarFunctor.ml[1103,30059+14])
                                  Tstr_value Nonrec
                                  [
                                    <def>
                                      pattern (lib/grammarFunctor.ml[1097,29883+6]..lib/grammarFunctor.ml[1097,29883+12])
                                        Tpat_var "symbol/3740"
                                      expression (lib/grammarFunctor.ml[1097,29883+13]..lib/grammarFunctor.ml[1103,30059+14]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[1097,29883+13]..lib/grammarFunctor.ml[1097,29883+16])
                                              Tpat_var "sym/3742"
                                            expression (lib/grammarFunctor.ml[1097,29883+17]..lib/grammarFunctor.ml[1103,30059+14]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[1097,29883+17]..lib/grammarFunctor.ml[1097,29883+20])
                                                    Tpat_var "get/3743"
                                                  expression (lib/grammarFunctor.ml[1098,29917+4]..lib/grammarFunctor.ml[1103,30059+14])
                                                    extra
                                                      Texp_constraint
                                                      core_type (lib/grammarFunctor.ml[1097,29883+23]..lib/grammarFunctor.ml[1097,29883+31])
                                                        Ttyp_constr "P/3733.property"
                                                        []
                                                    Texp_match
                                                    expression (lib/grammarFunctor.ml[1098,29917+10]..lib/grammarFunctor.ml[1098,29917+13])
                                                      Texp_ident "sym/3742"
                                                    [
                                                      <case>
                                                        pattern (lib/grammarFunctor.ml[1099,29936+6]..lib/grammarFunctor.ml[1099,29936+18])
                                                          Tpat_value
                                                          pattern (lib/grammarFunctor.ml[1099,29936+6]..lib/grammarFunctor.ml[1099,29936+18])
                                                            Tpat_construct "Symbol.T"
                                                            [
                                                              pattern (lib/grammarFunctor.ml[1099,29936+15]..lib/grammarFunctor.ml[1099,29936+18])
                                                                Tpat_var "tok/3744"
                                                            ]
                                                            None
                                                        expression (lib/grammarFunctor.ml[1100,29958+8]..lib/grammarFunctor.ml[1100,29958+22])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[1100,29958+8]..lib/grammarFunctor.ml[1100,29958+18])
                                                            Texp_ident "S/3739.terminal"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[1100,29958+19]..lib/grammarFunctor.ml[1100,29958+22])
                                                                Texp_ident "tok/3744"
                                                          ]
                                                      <case>
                                                        pattern (lib/grammarFunctor.ml[1101,29981+6]..lib/grammarFunctor.ml[1101,29981+17])
                                                          Tpat_value
                                                          pattern (lib/grammarFunctor.ml[1101,29981+6]..lib/grammarFunctor.ml[1101,29981+17])
                                                            Tpat_construct "Symbol.N"
                                                            [
                                                              pattern (lib/grammarFunctor.ml[1101,29981+15]..lib/grammarFunctor.ml[1101,29981+17])
                                                                Tpat_var "nt/3745"
                                                            ]
                                                            None
                                                        expression (lib/grammarFunctor.ml[1103,30059+8]..lib/grammarFunctor.ml[1103,30059+14])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[1103,30059+8]..lib/grammarFunctor.ml[1103,30059+11])
                                                            Texp_ident "get/3743"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[1103,30059+12]..lib/grammarFunctor.ml[1103,30059+14])
                                                                Texp_ident "nt/3745"
                                                          ]
                                                    ]
                                              ]
                                        ]
                                  ]
                                structure_item (lib/grammarFunctor.ml[1107,30154+2]..lib/grammarFunctor.ml[1123,30714+10])
                                  Tstr_value Nonrec
                                  [
                                    <def>
                                      pattern (lib/grammarFunctor.ml[1107,30154+6]..lib/grammarFunctor.ml[1107,30154+16])
                                        Tpat_var "production/3746"
                                      expression (lib/grammarFunctor.ml[1107,30154+17]..lib/grammarFunctor.ml[1123,30714+10]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[1107,30154+17]..lib/grammarFunctor.ml[1107,30154+21])
                                              Tpat_var "prod/3748"
                                            expression (lib/grammarFunctor.ml[1107,30154+22]..lib/grammarFunctor.ml[1123,30714+10]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[1107,30154+22]..lib/grammarFunctor.ml[1107,30154+23])
                                                    Tpat_var "i/3749"
                                                  expression (lib/grammarFunctor.ml[1107,30154+24]..lib/grammarFunctor.ml[1123,30714+10]) ghost
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (lib/grammarFunctor.ml[1107,30154+24]..lib/grammarFunctor.ml[1107,30154+27])
                                                          Tpat_var "get/3750"
                                                        expression (lib/grammarFunctor.ml[1108,30195+4]..lib/grammarFunctor.ml[1123,30714+10])
                                                          extra
                                                            Texp_constraint
                                                            core_type (lib/grammarFunctor.ml[1107,30154+30]..lib/grammarFunctor.ml[1107,30154+38])
                                                              Ttyp_constr "P/3733.property"
                                                              []
                                                          Texp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (lib/grammarFunctor.ml[1108,30195+8]..lib/grammarFunctor.ml[1108,30195+11])
                                                                Tpat_var "rhs/3751"
                                                              expression (lib/grammarFunctor.ml[1108,30195+14]..lib/grammarFunctor.ml[1108,30195+33])
                                                                Texp_apply
                                                                expression (lib/grammarFunctor.ml[1108,30195+14]..lib/grammarFunctor.ml[1108,30195+28])
                                                                  Texp_ident "Production/3564.rhs"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[1108,30195+29]..lib/grammarFunctor.ml[1108,30195+33])
                                                                      Texp_ident "prod/3748"
                                                                ]
                                                          ]
                                                          expression (lib/grammarFunctor.ml[1109,30232+4]..lib/grammarFunctor.ml[1123,30714+10])
                                                            Texp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (lib/grammarFunctor.ml[1109,30232+8]..lib/grammarFunctor.ml[1109,30232+9])
                                                                  Tpat_var "n/3752"
                                                                expression (lib/grammarFunctor.ml[1109,30232+12]..lib/grammarFunctor.ml[1109,30232+28])
                                                                  Texp_apply
                                                                  expression (lib/grammarFunctor.ml[1109,30232+12]..lib/grammarFunctor.ml[1109,30232+24])
                                                                    Texp_ident "Stdlib!.Array.length"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[1109,30232+25]..lib/grammarFunctor.ml[1109,30232+28])
                                                                        Texp_ident "rhs/3751"
                                                                  ]
                                                            ]
                                                            expression (lib/grammarFunctor.ml[1114,30522+4]..lib/grammarFunctor.ml[1123,30714+10])
                                                              Texp_let Rec
                                                              [
                                                                <def>
                                                                  pattern (lib/grammarFunctor.ml[1114,30522+12]..lib/grammarFunctor.ml[1114,30522+16])
                                                                    Tpat_var "loop/3753"
                                                                  expression (lib/grammarFunctor.ml[1114,30522+17]..lib/grammarFunctor.ml[1121,30674+32]) ghost
                                                                    Texp_function
                                                                    Nolabel
                                                                    [
                                                                      <case>
                                                                        pattern (lib/grammarFunctor.ml[1114,30522+17]..lib/grammarFunctor.ml[1114,30522+18])
                                                                          Tpat_var "i/3754"
                                                                        expression (lib/grammarFunctor.ml[1115,30543+6]..lib/grammarFunctor.ml[1121,30674+32])
                                                                          Texp_ifthenelse
                                                                          expression (lib/grammarFunctor.ml[1115,30543+9]..lib/grammarFunctor.ml[1115,30543+14])
                                                                            Texp_apply
                                                                            expression (lib/grammarFunctor.ml[1115,30543+11]..lib/grammarFunctor.ml[1115,30543+12])
                                                                              Texp_ident "Stdlib!.="
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (lib/grammarFunctor.ml[1115,30543+9]..lib/grammarFunctor.ml[1115,30543+10])
                                                                                  Texp_ident "i/3754"
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (lib/grammarFunctor.ml[1115,30543+13]..lib/grammarFunctor.ml[1115,30543+14])
                                                                                  Texp_ident "n/3752"
                                                                            ]
                                                                          expression (lib/grammarFunctor.ml[1116,30563+8]..lib/grammarFunctor.ml[1116,30563+17])
                                                                            Texp_ident "S/3739.epsilon"
                                                                          Some
                                                                            expression (lib/grammarFunctor.ml[1118,30592+8]..lib/grammarFunctor.ml[1121,30674+32])
                                                                              Texp_let Nonrec
                                                                              [
                                                                                <def>
                                                                                  pattern (lib/grammarFunctor.ml[1118,30592+12]..lib/grammarFunctor.ml[1118,30592+15])
                                                                                    Tpat_var "sym/3755"
                                                                                  expression (lib/grammarFunctor.ml[1118,30592+18]..lib/grammarFunctor.ml[1118,30592+25])
                                                                                    Texp_apply
                                                                                    expression (lib/grammarFunctor.ml[1118,30592+18]..lib/grammarFunctor.ml[1118,30592+25]) ghost
                                                                                      Texp_ident "Stdlib!.Array.get"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/grammarFunctor.ml[1118,30592+18]..lib/grammarFunctor.ml[1118,30592+21])
                                                                                          Texp_ident "rhs/3751"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/grammarFunctor.ml[1118,30592+23]..lib/grammarFunctor.ml[1118,30592+24])
                                                                                          Texp_ident "i/3754"
                                                                                    ]
                                                                              ]
                                                                              expression (lib/grammarFunctor.ml[1119,30621+8]..lib/grammarFunctor.ml[1121,30674+32])
                                                                                Texp_apply
                                                                                expression (lib/grammarFunctor.ml[1119,30621+8]..lib/grammarFunctor.ml[1119,30621+21])
                                                                                  Texp_ident "S/3739.conjunction"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (lib/grammarFunctor.ml[1119,30621+22]..lib/grammarFunctor.ml[1119,30621+25])
                                                                                      Texp_ident "sym/3755"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (lib/grammarFunctor.ml[1120,30647+10]..lib/grammarFunctor.ml[1120,30647+26])
                                                                                      Texp_apply
                                                                                      expression (lib/grammarFunctor.ml[1120,30647+11]..lib/grammarFunctor.ml[1120,30647+17])
                                                                                        Texp_ident "symbol/3740"
                                                                                      [
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (lib/grammarFunctor.ml[1120,30647+18]..lib/grammarFunctor.ml[1120,30647+21])
                                                                                            Texp_ident "sym/3755"
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (lib/grammarFunctor.ml[1120,30647+22]..lib/grammarFunctor.ml[1120,30647+25])
                                                                                            Texp_ident "get/3750"
                                                                                      ]
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (lib/grammarFunctor.ml[1121,30674+10]..lib/grammarFunctor.ml[1121,30674+32])
                                                                                      Texp_function
                                                                                      Nolabel
                                                                                      [
                                                                                        <case>
                                                                                          pattern (lib/grammarFunctor.ml[1121,30674+15]..lib/grammarFunctor.ml[1121,30674+17])
                                                                                            Tpat_construct "()"
                                                                                            []
                                                                                            None
                                                                                          expression (lib/grammarFunctor.ml[1121,30674+21]..lib/grammarFunctor.ml[1121,30674+31])
                                                                                            Texp_apply
                                                                                            expression (lib/grammarFunctor.ml[1121,30674+21]..lib/grammarFunctor.ml[1121,30674+25])
                                                                                              Texp_ident "loop/3753"
                                                                                            [
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (lib/grammarFunctor.ml[1121,30674+26]..lib/grammarFunctor.ml[1121,30674+31])
                                                                                                  Texp_apply
                                                                                                  expression (lib/grammarFunctor.ml[1121,30674+28]..lib/grammarFunctor.ml[1121,30674+29])
                                                                                                    Texp_ident "Stdlib!.+"
                                                                                                  [
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (lib/grammarFunctor.ml[1121,30674+27]..lib/grammarFunctor.ml[1121,30674+28])
                                                                                                        Texp_ident "i/3754"
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (lib/grammarFunctor.ml[1121,30674+29]..lib/grammarFunctor.ml[1121,30674+30])
                                                                                                        Texp_constant Const_int 1
                                                                                                  ]
                                                                                            ]
                                                                                      ]
                                                                                ]
                                                                    ]
                                                              ]
                                                              expression (lib/grammarFunctor.ml[1123,30714+4]..lib/grammarFunctor.ml[1123,30714+10])
                                                                Texp_apply
                                                                expression (lib/grammarFunctor.ml[1123,30714+4]..lib/grammarFunctor.ml[1123,30714+8])
                                                                  Texp_ident "loop/3753"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[1123,30714+9]..lib/grammarFunctor.ml[1123,30714+10])
                                                                      Texp_ident "i/3749"
                                                                ]
                                                    ]
                                              ]
                                        ]
                                  ]
                                structure_item (lib/grammarFunctor.ml[1129,30934+2]..lib/grammarFunctor.ml[1139,31246+18])
                                  Tstr_value Nonrec
                                  [
                                    <def>
                                      pattern (lib/grammarFunctor.ml[1129,30934+6]..lib/grammarFunctor.ml[1129,30934+17])
                                        Tpat_var "nonterminal/3757"
                                      expression (lib/grammarFunctor.ml[1129,30934+18]..lib/grammarFunctor.ml[1139,31246+18]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[1129,30934+18]..lib/grammarFunctor.ml[1129,30934+20])
                                              Tpat_var "nt/3759"
                                            expression (lib/grammarFunctor.ml[1129,30934+21]..lib/grammarFunctor.ml[1139,31246+18]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[1129,30934+21]..lib/grammarFunctor.ml[1129,30934+24])
                                                    Tpat_var "get/3760"
                                                  expression (lib/grammarFunctor.ml[1130,30972+4]..lib/grammarFunctor.ml[1139,31246+18])
                                                    extra
                                                      Texp_constraint
                                                      core_type (lib/grammarFunctor.ml[1129,30934+27]..lib/grammarFunctor.ml[1129,30934+35])
                                                        Ttyp_constr "P/3733.property"
                                                        []
                                                    Texp_match
                                                    expression (lib/grammarFunctor.ml[1130,30972+10]..lib/grammarFunctor.ml[1130,30972+23])
                                                      Texp_apply
                                                      expression (lib/grammarFunctor.ml[1130,30972+10]..lib/grammarFunctor.ml[1130,30972+20])
                                                        Texp_ident "S/3739.shortcut"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[1130,30972+21]..lib/grammarFunctor.ml[1130,30972+23])
                                                            Texp_ident "nt/3759"
                                                      ]
                                                    [
                                                      <case>
                                                        pattern (lib/grammarFunctor.ml[1131,31001+6]..lib/grammarFunctor.ml[1131,31001+12])
                                                          Tpat_value
                                                          pattern (lib/grammarFunctor.ml[1131,31001+6]..lib/grammarFunctor.ml[1131,31001+12])
                                                            Tpat_construct "Some"
                                                            [
                                                              pattern (lib/grammarFunctor.ml[1131,31001+11]..lib/grammarFunctor.ml[1131,31001+12])
                                                                Tpat_var "p/3761"
                                                            ]
                                                            None
                                                        expression (lib/grammarFunctor.ml[1132,31017+8]..lib/grammarFunctor.ml[1132,31017+9])
                                                          Texp_ident "p/3761"
                                                      <case>
                                                        pattern (lib/grammarFunctor.ml[1133,31027+6]..lib/grammarFunctor.ml[1133,31027+10])
                                                          Tpat_value
                                                          pattern (lib/grammarFunctor.ml[1133,31027+6]..lib/grammarFunctor.ml[1133,31027+10])
                                                            Tpat_construct "None"
                                                            []
                                                            None
                                                        expression (lib/grammarFunctor.ml[1135,31117+8]..lib/grammarFunctor.ml[1139,31246+18])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[1135,31117+8]..lib/grammarFunctor.ml[1135,31117+30])
                                                            Texp_ident "Production/3564.foldnt_lazy"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[1135,31117+31]..lib/grammarFunctor.ml[1135,31117+33])
                                                                Texp_ident "nt/3759"
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[1135,31117+34]..lib/grammarFunctor.ml[1139,31246+9])
                                                                Texp_function
                                                                Nolabel
                                                                [
                                                                  <case>
                                                                    pattern (lib/grammarFunctor.ml[1135,31117+39]..lib/grammarFunctor.ml[1135,31117+43])
                                                                      Tpat_var "prod/3762"
                                                                    expression (lib/grammarFunctor.ml[1135,31117+44]..lib/grammarFunctor.ml[1138,31229+16]) ghost
                                                                      Texp_function
                                                                      Nolabel
                                                                      [
                                                                        <case>
                                                                          pattern (lib/grammarFunctor.ml[1135,31117+44]..lib/grammarFunctor.ml[1135,31117+48])
                                                                            Tpat_var "rest/3763"
                                                                          expression (lib/grammarFunctor.ml[1136,31169+10]..lib/grammarFunctor.ml[1138,31229+16])
                                                                            Texp_apply
                                                                            expression (lib/grammarFunctor.ml[1136,31169+10]..lib/grammarFunctor.ml[1136,31169+23])
                                                                              Texp_ident "S/3739.disjunction"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (lib/grammarFunctor.ml[1137,31193+12]..lib/grammarFunctor.ml[1137,31193+35])
                                                                                  Texp_apply
                                                                                  expression (lib/grammarFunctor.ml[1137,31193+13]..lib/grammarFunctor.ml[1137,31193+23])
                                                                                    Texp_ident "production/3746"
                                                                                  [
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (lib/grammarFunctor.ml[1137,31193+24]..lib/grammarFunctor.ml[1137,31193+28])
                                                                                        Texp_ident "prod/3762"
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (lib/grammarFunctor.ml[1137,31193+29]..lib/grammarFunctor.ml[1137,31193+30])
                                                                                        Texp_constant Const_int 0
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (lib/grammarFunctor.ml[1137,31193+31]..lib/grammarFunctor.ml[1137,31193+34])
                                                                                        Texp_ident "get/3760"
                                                                                  ]
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (lib/grammarFunctor.ml[1138,31229+12]..lib/grammarFunctor.ml[1138,31229+16])
                                                                                  Texp_ident "rest/3763"
                                                                            ]
                                                                      ]
                                                                ]
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[1139,31246+10]..lib/grammarFunctor.ml[1139,31246+18])
                                                                Texp_ident "P/3733.bottom"
                                                          ]
                                                    ]
                                              ]
                                        ]
                                  ]
                                structure_item (lib/grammarFunctor.ml[1144,31391+2]..lib/grammarFunctor.ml[1147,31470+9])
                                  Tstr_module
                                  F/3913
                                    module_expr (lib/grammarFunctor.ml[1145,31404+4]..lib/grammarFunctor.ml[1147,31470+9])
                                      Tmod_apply
                                      module_expr (lib/grammarFunctor.ml[1145,31404+4]..lib/grammarFunctor.ml[1146,31417+52])
                                        Tmod_apply
                                        module_expr (lib/grammarFunctor.ml[1145,31404+4]..lib/grammarFunctor.ml[1145,31404+12])
                                          module_expr (lib/grammarFunctor.ml[1145,31404+4]..lib/grammarFunctor.ml[1145,31404+12])
                                            Tmod_ident "Gbnf_parser!.Fix.Make"
                                        module_expr (lib/grammarFunctor.ml[1146,31417+7]..lib/grammarFunctor.ml[1146,31417+51])
                                          Tmod_apply
                                          module_expr (lib/grammarFunctor.ml[1146,31417+7]..lib/grammarFunctor.ml[1146,31417+38])
                                            module_expr (lib/grammarFunctor.ml[1146,31417+7]..lib/grammarFunctor.ml[1146,31417+38])
                                              Tmod_ident "Gbnf_parser!.Fix.Glue.ArraysAsImperativeMaps"
                                          module_expr (lib/grammarFunctor.ml[1146,31417+39]..lib/grammarFunctor.ml[1146,31417+50])
                                            Tmod_ident "Nonterminal/2057"
                                      module_expr (lib/grammarFunctor.ml[1147,31470+7]..lib/grammarFunctor.ml[1147,31470+8])
                                        Tmod_ident "P/3733"
                                structure_item (lib/grammarFunctor.ml[1149,31481+2]..lib/grammarFunctor.ml[1150,31501+21])
                                  Tstr_value Nonrec
                                  [
                                    <def>
                                      pattern (lib/grammarFunctor.ml[1149,31481+6]..lib/grammarFunctor.ml[1149,31481+17])
                                        Tpat_var "nonterminal/3914"
                                      expression (lib/grammarFunctor.ml[1150,31501+4]..lib/grammarFunctor.ml[1150,31501+21])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[1150,31501+4]..lib/grammarFunctor.ml[1150,31501+9])
                                          Texp_ident "F/3913.lfp"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[1150,31501+10]..lib/grammarFunctor.ml[1150,31501+21])
                                              Texp_ident "nonterminal/3757"
                                        ]
                                  ]
                                structure_item (lib/grammarFunctor.ml[1154,31579+2]..lib/grammarFunctor.ml[1155,31598+26])
                                  Tstr_value Nonrec
                                  [
                                    <def>
                                      pattern (lib/grammarFunctor.ml[1154,31579+6]..lib/grammarFunctor.ml[1154,31579+12])
                                        Tpat_var "symbol/3930"
                                      expression (lib/grammarFunctor.ml[1154,31579+13]..lib/grammarFunctor.ml[1155,31598+26]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[1154,31579+13]..lib/grammarFunctor.ml[1154,31579+16])
                                              Tpat_var "sym/3931"
                                            expression (lib/grammarFunctor.ml[1155,31598+4]..lib/grammarFunctor.ml[1155,31598+26])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[1155,31598+4]..lib/grammarFunctor.ml[1155,31598+10])
                                                Texp_ident "symbol/3740"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[1155,31598+11]..lib/grammarFunctor.ml[1155,31598+14])
                                                    Texp_ident "sym/3931"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[1155,31598+15]..lib/grammarFunctor.ml[1155,31598+26])
                                                    Texp_ident "nonterminal/3914"
                                              ]
                                        ]
                                  ]
                                structure_item (lib/grammarFunctor.ml[1157,31626+2]..lib/grammarFunctor.ml[1158,31652+33])
                                  Tstr_value Nonrec
                                  [
                                    <def>
                                      pattern (lib/grammarFunctor.ml[1157,31626+6]..lib/grammarFunctor.ml[1157,31626+16])
                                        Tpat_var "production/3932"
                                      expression (lib/grammarFunctor.ml[1157,31626+17]..lib/grammarFunctor.ml[1158,31652+33]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[1157,31626+17]..lib/grammarFunctor.ml[1157,31626+21])
                                              Tpat_var "prod/3933"
                                            expression (lib/grammarFunctor.ml[1157,31626+22]..lib/grammarFunctor.ml[1158,31652+33]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[1157,31626+22]..lib/grammarFunctor.ml[1157,31626+23])
                                                    Tpat_var "i/3934"
                                                  expression (lib/grammarFunctor.ml[1158,31652+4]..lib/grammarFunctor.ml[1158,31652+33])
                                                    Texp_apply
                                                    expression (lib/grammarFunctor.ml[1158,31652+4]..lib/grammarFunctor.ml[1158,31652+14])
                                                      Texp_ident "production/3746"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[1158,31652+15]..lib/grammarFunctor.ml[1158,31652+19])
                                                          Texp_ident "prod/3933"
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[1158,31652+20]..lib/grammarFunctor.ml[1158,31652+21])
                                                          Texp_ident "i/3934"
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[1158,31652+22]..lib/grammarFunctor.ml[1158,31652+33])
                                                          Texp_ident "nonterminal/3914"
                                                    ]
                                              ]
                                        ]
                                  ]
                              ]
                          module_type (lib/grammarFunctor.ml[1071,29055+2]..lib/grammarFunctor.ml[1088,29622+3])
                            Tmty_signature
                            [
                              signature_item (lib/grammarFunctor.ml[1072,29061+2]..lib/grammarFunctor.ml[1072,29061+8])
                                Tsig_open Fresh "P/3733"
                              signature_item (lib/grammarFunctor.ml[1077,29195+2]..lib/grammarFunctor.ml[1077,29195+44])
                                Tsig_value
                                value_description nonterminal/4034 (lib/grammarFunctor.ml[1077,29195+2]..lib/grammarFunctor.ml[1077,29195+44])
                                  core_type (lib/grammarFunctor.ml[1077,29195+19]..lib/grammarFunctor.ml[1077,29195+44])
                                    Ttyp_arrow
                                    Nolabel
                                    core_type (lib/grammarFunctor.ml[1077,29195+19]..lib/grammarFunctor.ml[1077,29195+32])
                                      Ttyp_constr "Nonterminal/2057.t"
                                      []
                                    core_type (lib/grammarFunctor.ml[1077,29195+36]..lib/grammarFunctor.ml[1077,29195+44])
                                      Ttyp_constr "P/3733.property"
                                      []
                                  []
                              signature_item (lib/grammarFunctor.ml[1080,29291+2]..lib/grammarFunctor.ml[1080,29291+34])
                                Tsig_value
                                value_description symbol/4035 (lib/grammarFunctor.ml[1080,29291+2]..lib/grammarFunctor.ml[1080,29291+34])
                                  core_type (lib/grammarFunctor.ml[1080,29291+14]..lib/grammarFunctor.ml[1080,29291+34])
                                    Ttyp_arrow
                                    Nolabel
                                    core_type (lib/grammarFunctor.ml[1080,29291+14]..lib/grammarFunctor.ml[1080,29291+22])
                                      Ttyp_constr "Symbol/2545.t"
                                      []
                                    core_type (lib/grammarFunctor.ml[1080,29291+26]..lib/grammarFunctor.ml[1080,29291+34])
                                      Ttyp_constr "P/3733.property"
                                      []
                                  []
                              signature_item (lib/grammarFunctor.ml[1086,29567+2]..lib/grammarFunctor.ml[1086,29567+53])
                                Tsig_value
                                value_description production/4036 (lib/grammarFunctor.ml[1086,29567+2]..lib/grammarFunctor.ml[1086,29567+53])
                                  core_type (lib/grammarFunctor.ml[1086,29567+18]..lib/grammarFunctor.ml[1086,29567+53])
                                    Ttyp_arrow
                                    Nolabel
                                    core_type (lib/grammarFunctor.ml[1086,29567+18]..lib/grammarFunctor.ml[1086,29567+34])
                                      Ttyp_constr "Production/3564.index"
                                      []
                                    core_type (lib/grammarFunctor.ml[1086,29567+38]..lib/grammarFunctor.ml[1086,29567+53])
                                      Ttyp_arrow
                                      Nolabel
                                      core_type (lib/grammarFunctor.ml[1086,29567+38]..lib/grammarFunctor.ml[1086,29567+41])
                                        Ttyp_constr "int/1!"
                                        []
                                      core_type (lib/grammarFunctor.ml[1086,29567+45]..lib/grammarFunctor.ml[1086,29567+53])
                                        Ttyp_constr "P/3733.property"
                                        []
                                  []
                            ]
                structure_item (lib/grammarFunctor.ml[1169,32061+0]..lib/grammarFunctor.ml[1183,32576+9])
                  Tstr_module
                  NONEMPTY/4094
                    module_expr (lib/grammarFunctor.ml[1170,32079+2]..lib/grammarFunctor.ml[1183,32576+9])
                      Tmod_apply
                      module_expr (lib/grammarFunctor.ml[1170,32079+2]..lib/grammarFunctor.ml[1171,32097+22])
                        Tmod_apply
                        module_expr (lib/grammarFunctor.ml[1170,32079+2]..lib/grammarFunctor.ml[1170,32079+17])
                          Tmod_ident "GenericAnalysis/4037"
                        module_expr (lib/grammarFunctor.ml[1171,32097+5]..lib/grammarFunctor.ml[1171,32097+21])
                          module_expr (lib/grammarFunctor.ml[1171,32097+5]..lib/grammarFunctor.ml[1171,32097+21])
                            Tmod_ident "Gbnf_parser!.Fix.Prop.Boolean"
                      module_expr (lib/grammarFunctor.ml[1172,32120+5]..lib/grammarFunctor.ml[1183,32576+8])
                        Tmod_structure
                        [
                          structure_item (lib/grammarFunctor.ml[1173,32132+6]..lib/grammarFunctor.ml[1173,32132+29])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1173,32132+10]..lib/grammarFunctor.ml[1173,32132+18])
                                  Tpat_var "shortcut/4038"
                                expression (lib/grammarFunctor.ml[1173,32132+19]..lib/grammarFunctor.ml[1173,32132+29]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1173,32132+19]..lib/grammarFunctor.ml[1173,32132+22])
                                        Tpat_var "_nt/4040"
                                      expression (lib/grammarFunctor.ml[1173,32132+25]..lib/grammarFunctor.ml[1173,32132+29])
                                        Texp_construct "None"
                                        []
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[1175,32205+6]..lib/grammarFunctor.ml[1175,32205+27])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1175,32205+10]..lib/grammarFunctor.ml[1175,32205+18])
                                  Tpat_var "terminal/4041"
                                expression (lib/grammarFunctor.ml[1175,32205+19]..lib/grammarFunctor.ml[1175,32205+27]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1175,32205+19]..lib/grammarFunctor.ml[1175,32205+20])
                                        Tpat_any
                                      expression (lib/grammarFunctor.ml[1175,32205+23]..lib/grammarFunctor.ml[1175,32205+27])
                                        Texp_construct "true"
                                        []
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[1177,32308+6]..lib/grammarFunctor.ml[1177,32308+36])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1177,32308+10]..lib/grammarFunctor.ml[1177,32308+21])
                                  Tpat_var "disjunction/4044"
                                expression (lib/grammarFunctor.ml[1177,32308+22]..lib/grammarFunctor.ml[1177,32308+36]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1177,32308+22]..lib/grammarFunctor.ml[1177,32308+23])
                                        Tpat_var "p/4046"
                                      expression (lib/grammarFunctor.ml[1177,32308+24]..lib/grammarFunctor.ml[1177,32308+36]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[1177,32308+24]..lib/grammarFunctor.ml[1177,32308+25])
                                              Tpat_var "q/4047"
                                            expression (lib/grammarFunctor.ml[1177,32308+28]..lib/grammarFunctor.ml[1177,32308+36])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[1177,32308+30]..lib/grammarFunctor.ml[1177,32308+32])
                                                Texp_ident "Stdlib!.||"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[1177,32308+28]..lib/grammarFunctor.ml[1177,32308+29])
                                                    Texp_ident "p/4046"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[1177,32308+33]..lib/grammarFunctor.ml[1177,32308+36])
                                                    Texp_apply
                                                    expression (lib/grammarFunctor.ml[1177,32308+33]..lib/grammarFunctor.ml[1177,32308+34])
                                                      Texp_ident "q/4047"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[1177,32308+34]..lib/grammarFunctor.ml[1177,32308+36])
                                                          Texp_construct "()"
                                                          []
                                                    ]
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[1179,32410+6]..lib/grammarFunctor.ml[1179,32410+38])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1179,32410+10]..lib/grammarFunctor.ml[1179,32410+21])
                                  Tpat_var "conjunction/4048"
                                expression (lib/grammarFunctor.ml[1179,32410+22]..lib/grammarFunctor.ml[1179,32410+38]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1179,32410+22]..lib/grammarFunctor.ml[1179,32410+23])
                                        Tpat_any
                                      expression (lib/grammarFunctor.ml[1179,32410+24]..lib/grammarFunctor.ml[1179,32410+38]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[1179,32410+24]..lib/grammarFunctor.ml[1179,32410+25])
                                              Tpat_var "p/4050"
                                            expression (lib/grammarFunctor.ml[1179,32410+26]..lib/grammarFunctor.ml[1179,32410+38]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[1179,32410+26]..lib/grammarFunctor.ml[1179,32410+27])
                                                    Tpat_var "q/4051"
                                                  expression (lib/grammarFunctor.ml[1179,32410+30]..lib/grammarFunctor.ml[1179,32410+38])
                                                    Texp_apply
                                                    expression (lib/grammarFunctor.ml[1179,32410+32]..lib/grammarFunctor.ml[1179,32410+34])
                                                      Texp_ident "Stdlib!.&&"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[1179,32410+30]..lib/grammarFunctor.ml[1179,32410+31])
                                                          Texp_ident "p/4050"
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[1179,32410+35]..lib/grammarFunctor.ml[1179,32410+38])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[1179,32410+35]..lib/grammarFunctor.ml[1179,32410+36])
                                                            Texp_ident "q/4051"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[1179,32410+36]..lib/grammarFunctor.ml[1179,32410+38])
                                                                Texp_construct "()"
                                                                []
                                                          ]
                                                    ]
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[1182,32551+6]..lib/grammarFunctor.ml[1182,32551+24])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1182,32551+10]..lib/grammarFunctor.ml[1182,32551+17])
                                  Tpat_var "epsilon/4053"
                                expression (lib/grammarFunctor.ml[1182,32551+20]..lib/grammarFunctor.ml[1182,32551+24])
                                  Texp_construct "true"
                                  []
                            ]
                        ]
                structure_item (lib/grammarFunctor.ml[1185,32587+0]..lib/grammarFunctor.ml[1198,33051+9])
                  Tstr_module
                  NULLABLE/4123
                    module_expr (lib/grammarFunctor.ml[1186,32605+2]..lib/grammarFunctor.ml[1198,33051+9])
                      Tmod_apply
                      module_expr (lib/grammarFunctor.ml[1186,32605+2]..lib/grammarFunctor.ml[1187,32623+22])
                        Tmod_apply
                        module_expr (lib/grammarFunctor.ml[1186,32605+2]..lib/grammarFunctor.ml[1186,32605+17])
                          Tmod_ident "GenericAnalysis/4037"
                        module_expr (lib/grammarFunctor.ml[1187,32623+5]..lib/grammarFunctor.ml[1187,32623+21])
                          module_expr (lib/grammarFunctor.ml[1187,32623+5]..lib/grammarFunctor.ml[1187,32623+21])
                            Tmod_ident "Gbnf_parser!.Fix.Prop.Boolean"
                      module_expr (lib/grammarFunctor.ml[1188,32646+5]..lib/grammarFunctor.ml[1198,33051+8])
                        Tmod_structure
                        [
                          structure_item (lib/grammarFunctor.ml[1189,32658+6]..lib/grammarFunctor.ml[1189,32658+29])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1189,32658+10]..lib/grammarFunctor.ml[1189,32658+18])
                                  Tpat_var "shortcut/4095"
                                expression (lib/grammarFunctor.ml[1189,32658+19]..lib/grammarFunctor.ml[1189,32658+29]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1189,32658+19]..lib/grammarFunctor.ml[1189,32658+22])
                                        Tpat_var "_nt/4097"
                                      expression (lib/grammarFunctor.ml[1189,32658+25]..lib/grammarFunctor.ml[1189,32658+29])
                                        Texp_construct "None"
                                        []
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[1191,32735+6]..lib/grammarFunctor.ml[1191,32735+28])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1191,32735+10]..lib/grammarFunctor.ml[1191,32735+18])
                                  Tpat_var "terminal/4098"
                                expression (lib/grammarFunctor.ml[1191,32735+19]..lib/grammarFunctor.ml[1191,32735+28]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1191,32735+19]..lib/grammarFunctor.ml[1191,32735+20])
                                        Tpat_any
                                      expression (lib/grammarFunctor.ml[1191,32735+23]..lib/grammarFunctor.ml[1191,32735+28])
                                        Texp_construct "false"
                                        []
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[1193,32839+6]..lib/grammarFunctor.ml[1193,32839+36])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1193,32839+10]..lib/grammarFunctor.ml[1193,32839+21])
                                  Tpat_var "disjunction/4101"
                                expression (lib/grammarFunctor.ml[1193,32839+22]..lib/grammarFunctor.ml[1193,32839+36]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1193,32839+22]..lib/grammarFunctor.ml[1193,32839+23])
                                        Tpat_var "p/4103"
                                      expression (lib/grammarFunctor.ml[1193,32839+24]..lib/grammarFunctor.ml[1193,32839+36]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[1193,32839+24]..lib/grammarFunctor.ml[1193,32839+25])
                                              Tpat_var "q/4104"
                                            expression (lib/grammarFunctor.ml[1193,32839+28]..lib/grammarFunctor.ml[1193,32839+36])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[1193,32839+30]..lib/grammarFunctor.ml[1193,32839+32])
                                                Texp_ident "Stdlib!.||"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[1193,32839+28]..lib/grammarFunctor.ml[1193,32839+29])
                                                    Texp_ident "p/4103"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[1193,32839+33]..lib/grammarFunctor.ml[1193,32839+36])
                                                    Texp_apply
                                                    expression (lib/grammarFunctor.ml[1193,32839+33]..lib/grammarFunctor.ml[1193,32839+34])
                                                      Texp_ident "q/4104"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[1193,32839+34]..lib/grammarFunctor.ml[1193,32839+36])
                                                          Texp_construct "()"
                                                          []
                                                    ]
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[1195,32941+6]..lib/grammarFunctor.ml[1195,32941+38])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1195,32941+10]..lib/grammarFunctor.ml[1195,32941+21])
                                  Tpat_var "conjunction/4105"
                                expression (lib/grammarFunctor.ml[1195,32941+22]..lib/grammarFunctor.ml[1195,32941+38]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1195,32941+22]..lib/grammarFunctor.ml[1195,32941+23])
                                        Tpat_any
                                      expression (lib/grammarFunctor.ml[1195,32941+24]..lib/grammarFunctor.ml[1195,32941+38]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[1195,32941+24]..lib/grammarFunctor.ml[1195,32941+25])
                                              Tpat_var "p/4107"
                                            expression (lib/grammarFunctor.ml[1195,32941+26]..lib/grammarFunctor.ml[1195,32941+38]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[1195,32941+26]..lib/grammarFunctor.ml[1195,32941+27])
                                                    Tpat_var "q/4108"
                                                  expression (lib/grammarFunctor.ml[1195,32941+30]..lib/grammarFunctor.ml[1195,32941+38])
                                                    Texp_apply
                                                    expression (lib/grammarFunctor.ml[1195,32941+32]..lib/grammarFunctor.ml[1195,32941+34])
                                                      Texp_ident "Stdlib!.&&"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[1195,32941+30]..lib/grammarFunctor.ml[1195,32941+31])
                                                          Texp_ident "p/4107"
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[1195,32941+35]..lib/grammarFunctor.ml[1195,32941+38])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[1195,32941+35]..lib/grammarFunctor.ml[1195,32941+36])
                                                            Texp_ident "q/4108"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[1195,32941+36]..lib/grammarFunctor.ml[1195,32941+38])
                                                                Texp_construct "()"
                                                                []
                                                          ]
                                                    ]
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[1197,33026+6]..lib/grammarFunctor.ml[1197,33026+24])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1197,33026+10]..lib/grammarFunctor.ml[1197,33026+17])
                                  Tpat_var "epsilon/4110"
                                expression (lib/grammarFunctor.ml[1197,33026+20]..lib/grammarFunctor.ml[1197,33026+24])
                                  Texp_construct "true"
                                  []
                            ]
                        ]
                structure_item (lib/grammarFunctor.ml[1203,33168+0]..lib/grammarFunctor.ml[1222,33909+9])
                  Tstr_module
                  FIRST/4150
                    module_expr (lib/grammarFunctor.ml[1204,33183+2]..lib/grammarFunctor.ml[1222,33909+9])
                      Tmod_apply
                      module_expr (lib/grammarFunctor.ml[1204,33183+2]..lib/grammarFunctor.ml[1205,33201+17])
                        Tmod_apply
                        module_expr (lib/grammarFunctor.ml[1204,33183+2]..lib/grammarFunctor.ml[1204,33183+17])
                          Tmod_ident "GenericAnalysis/4037"
                        module_expr (lib/grammarFunctor.ml[1205,33201+5]..lib/grammarFunctor.ml[1205,33201+16])
                          Tmod_ident "TerminalSet/2387"
                      module_expr (lib/grammarFunctor.ml[1206,33219+5]..lib/grammarFunctor.ml[1222,33909+8])
                        Tmod_structure
                        [
                          structure_item (lib/grammarFunctor.ml[1207,33231+6]..lib/grammarFunctor.ml[1207,33231+29])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1207,33231+10]..lib/grammarFunctor.ml[1207,33231+18])
                                  Tpat_var "shortcut/4124"
                                expression (lib/grammarFunctor.ml[1207,33231+19]..lib/grammarFunctor.ml[1207,33231+29]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1207,33231+19]..lib/grammarFunctor.ml[1207,33231+22])
                                        Tpat_var "_nt/4126"
                                      expression (lib/grammarFunctor.ml[1207,33231+25]..lib/grammarFunctor.ml[1207,33231+29])
                                        Texp_construct "None"
                                        []
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[1209,33318+6]..lib/grammarFunctor.ml[1209,33318+42])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1209,33318+10]..lib/grammarFunctor.ml[1209,33318+18])
                                  Tpat_var "terminal/4127"
                                expression (lib/grammarFunctor.ml[1209,33318+21]..lib/grammarFunctor.ml[1209,33318+42])
                                  Texp_ident "TerminalSet/2387.singleton"
                            ]
                          structure_item (lib/grammarFunctor.ml[1211,33437+6]..lib/grammarFunctor.ml[1211,33437+53])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1211,33437+10]..lib/grammarFunctor.ml[1211,33437+21])
                                  Tpat_var "disjunction/4128"
                                expression (lib/grammarFunctor.ml[1211,33437+22]..lib/grammarFunctor.ml[1211,33437+53]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1211,33437+22]..lib/grammarFunctor.ml[1211,33437+23])
                                        Tpat_var "p/4130"
                                      expression (lib/grammarFunctor.ml[1211,33437+24]..lib/grammarFunctor.ml[1211,33437+53]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[1211,33437+24]..lib/grammarFunctor.ml[1211,33437+25])
                                              Tpat_var "q/4131"
                                            expression (lib/grammarFunctor.ml[1211,33437+28]..lib/grammarFunctor.ml[1211,33437+53])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[1211,33437+28]..lib/grammarFunctor.ml[1211,33437+45])
                                                Texp_ident "TerminalSet/2387.union"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[1211,33437+46]..lib/grammarFunctor.ml[1211,33437+47])
                                                    Texp_ident "p/4130"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[1211,33437+48]..lib/grammarFunctor.ml[1211,33437+53])
                                                    Texp_apply
                                                    expression (lib/grammarFunctor.ml[1211,33437+49]..lib/grammarFunctor.ml[1211,33437+50])
                                                      Texp_ident "q/4131"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[1211,33437+50]..lib/grammarFunctor.ml[1211,33437+52])
                                                          Texp_construct "()"
                                                          []
                                                    ]
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[1215,33678+6]..lib/grammarFunctor.ml[1219,33801+11])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1215,33678+10]..lib/grammarFunctor.ml[1215,33678+21])
                                  Tpat_var "conjunction/4132"
                                expression (lib/grammarFunctor.ml[1215,33678+22]..lib/grammarFunctor.ml[1219,33801+11]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1215,33678+22]..lib/grammarFunctor.ml[1215,33678+28])
                                        Tpat_var "symbol/4134"
                                      expression (lib/grammarFunctor.ml[1215,33678+29]..lib/grammarFunctor.ml[1219,33801+11]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[1215,33678+29]..lib/grammarFunctor.ml[1215,33678+30])
                                              Tpat_var "p/4135"
                                            expression (lib/grammarFunctor.ml[1215,33678+31]..lib/grammarFunctor.ml[1219,33801+11]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[1215,33678+31]..lib/grammarFunctor.ml[1215,33678+32])
                                                    Tpat_var "q/4136"
                                                  expression (lib/grammarFunctor.ml[1216,33713+8]..lib/grammarFunctor.ml[1219,33801+11])
                                                    Texp_ifthenelse
                                                    expression (lib/grammarFunctor.ml[1216,33713+11]..lib/grammarFunctor.ml[1216,33713+33])
                                                      Texp_apply
                                                      expression (lib/grammarFunctor.ml[1216,33713+11]..lib/grammarFunctor.ml[1216,33713+26])
                                                        Texp_ident "NULLABLE/4123.symbol"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[1216,33713+27]..lib/grammarFunctor.ml[1216,33713+33])
                                                            Texp_ident "symbol/4134"
                                                      ]
                                                    expression (lib/grammarFunctor.ml[1217,33752+10]..lib/grammarFunctor.ml[1217,33752+35])
                                                      Texp_apply
                                                      expression (lib/grammarFunctor.ml[1217,33752+10]..lib/grammarFunctor.ml[1217,33752+27])
                                                        Texp_ident "TerminalSet/2387.union"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[1217,33752+28]..lib/grammarFunctor.ml[1217,33752+29])
                                                            Texp_ident "p/4135"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[1217,33752+30]..lib/grammarFunctor.ml[1217,33752+35])
                                                            Texp_apply
                                                            expression (lib/grammarFunctor.ml[1217,33752+31]..lib/grammarFunctor.ml[1217,33752+32])
                                                              Texp_ident "q/4136"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/grammarFunctor.ml[1217,33752+32]..lib/grammarFunctor.ml[1217,33752+34])
                                                                  Texp_construct "()"
                                                                  []
                                                            ]
                                                      ]
                                                    Some
                                                      expression (lib/grammarFunctor.ml[1219,33801+10]..lib/grammarFunctor.ml[1219,33801+11])
                                                        Texp_ident "p/4135"
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[1221,33871+6]..lib/grammarFunctor.ml[1221,33871+37])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1221,33871+10]..lib/grammarFunctor.ml[1221,33871+17])
                                  Tpat_var "epsilon/4137"
                                expression (lib/grammarFunctor.ml[1221,33871+20]..lib/grammarFunctor.ml[1221,33871+37])
                                  Texp_ident "TerminalSet/2387.empty"
                            ]
                        ]
                structure_item (lib/grammarFunctor.ml[1235,34531+0]..lib/grammarFunctor.ml[1252,35105+9])
                  Tstr_module
                  MINIMAL/4217
                    module_expr (lib/grammarFunctor.ml[1236,34548+2]..lib/grammarFunctor.ml[1252,35105+9])
                      Tmod_apply
                      module_expr (lib/grammarFunctor.ml[1236,34548+2]..lib/grammarFunctor.ml[1240,34647+9])
                        Tmod_apply
                        module_expr (lib/grammarFunctor.ml[1236,34548+2]..lib/grammarFunctor.ml[1236,34548+17])
                          Tmod_ident "GenericAnalysis/4037"
                        module_expr (lib/grammarFunctor.ml[1237,34566+5]..lib/grammarFunctor.ml[1240,34647+8])
                          Tmod_structure
                          [
                            structure_item (lib/grammarFunctor.ml[1238,34578+6]..lib/grammarFunctor.ml[1238,34578+33])
                              Tstr_include                              module_expr (lib/grammarFunctor.ml[1238,34578+14]..lib/grammarFunctor.ml[1238,34578+33])
                                module_expr (lib/grammarFunctor.ml[1238,34578+14]..lib/grammarFunctor.ml[1238,34578+33])
                                  Tmod_ident "Gbnf_parser!.CompletedNatWitness"
                            structure_item (lib/grammarFunctor.ml[1239,34612+6]..lib/grammarFunctor.ml[1239,34612+34])
                              Tstr_type Rec
                              [
                                type_declaration property/4186 (lib/grammarFunctor.ml[1239,34612+6]..lib/grammarFunctor.ml[1239,34612+34])
                                  ptype_params =
                                    []
                                  ptype_cstrs =
                                    []
                                  ptype_kind =
                                    Ttype_abstract
                                  ptype_private = Public
                                  ptype_manifest =
                                    Some
                                      core_type (lib/grammarFunctor.ml[1239,34612+22]..lib/grammarFunctor.ml[1239,34612+34])
                                        Ttyp_constr "t/4173"
                                        [
                                          core_type (lib/grammarFunctor.ml[1239,34612+22]..lib/grammarFunctor.ml[1239,34612+32])
                                            Ttyp_constr "Terminal/2246.t"
                                            []
                                        ]
                              ]
                          ]
                      module_expr (lib/grammarFunctor.ml[1241,34657+5]..lib/grammarFunctor.ml[1252,35105+8])
                        Tmod_structure
                        [
                          structure_item (lib/grammarFunctor.ml[1242,34669+6]..lib/grammarFunctor.ml[1242,34669+29])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1242,34669+10]..lib/grammarFunctor.ml[1242,34669+18])
                                  Tpat_var "shortcut/4151"
                                expression (lib/grammarFunctor.ml[1242,34669+19]..lib/grammarFunctor.ml[1242,34669+29]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1242,34669+19]..lib/grammarFunctor.ml[1242,34669+22])
                                        Tpat_var "_nt/4153"
                                      expression (lib/grammarFunctor.ml[1242,34669+25]..lib/grammarFunctor.ml[1242,34669+29])
                                        Texp_construct "None"
                                        []
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[1243,34699+6]..lib/grammarFunctor.ml[1243,34699+30])
                            Tstr_open Fresh
                            module_expr (lib/grammarFunctor.ml[1243,34699+11]..lib/grammarFunctor.ml[1243,34699+30])
                              Tmod_ident "Gbnf_parser!.CompletedNatWitness"
                          structure_item (lib/grammarFunctor.ml[1245,34774+6]..lib/grammarFunctor.ml[1245,34774+30])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1245,34774+10]..lib/grammarFunctor.ml[1245,34774+18])
                                  Tpat_var "terminal/4167"
                                expression (lib/grammarFunctor.ml[1245,34774+21]..lib/grammarFunctor.ml[1245,34774+30])
                                  Texp_ident "Gbnf_parser!.CompletedNatWitness.singleton"
                            ]
                          structure_item (lib/grammarFunctor.ml[1247,34883+6]..lib/grammarFunctor.ml[1247,34883+32])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1247,34883+10]..lib/grammarFunctor.ml[1247,34883+21])
                                  Tpat_var "disjunction/4168"
                                expression (lib/grammarFunctor.ml[1247,34883+24]..lib/grammarFunctor.ml[1247,34883+32])
                                  Texp_ident "Gbnf_parser!.CompletedNatWitness.min_lazy"
                            ]
                          structure_item (lib/grammarFunctor.ml[1249,34995+6]..lib/grammarFunctor.ml[1249,34995+34])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1249,34995+10]..lib/grammarFunctor.ml[1249,34995+21])
                                  Tpat_var "conjunction/4169"
                                expression (lib/grammarFunctor.ml[1249,34995+22]..lib/grammarFunctor.ml[1249,34995+34]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1249,34995+22]..lib/grammarFunctor.ml[1249,34995+23])
                                        Tpat_any
                                      expression (lib/grammarFunctor.ml[1249,34995+26]..lib/grammarFunctor.ml[1249,34995+34])
                                        Texp_ident "Gbnf_parser!.CompletedNatWitness.add_lazy"
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[1251,35077+6]..lib/grammarFunctor.ml[1251,35077+27])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1251,35077+10]..lib/grammarFunctor.ml[1251,35077+17])
                                  Tpat_var "epsilon/4172"
                                expression (lib/grammarFunctor.ml[1251,35077+20]..lib/grammarFunctor.ml[1251,35077+27])
                                  Texp_ident "Gbnf_parser!.CompletedNatWitness.epsilon"
                            ]
                        ]
                structure_item (lib/grammarFunctor.ml[1270,35962+0]..lib/grammarFunctor.ml[1271,36006+50])
                  Tstr_value Nonrec
                  [
                    <def>
                      pattern (lib/grammarFunctor.ml[1270,35962+4]..lib/grammarFunctor.ml[1270,35962+27])
                        Tpat_var "generates_nonempty_word/4218"
                      expression (lib/grammarFunctor.ml[1270,35962+28]..lib/grammarFunctor.ml[1271,36006+50]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (lib/grammarFunctor.ml[1270,35962+28]..lib/grammarFunctor.ml[1270,35962+34])
                              Tpat_var "symbol/4220"
                            expression (lib/grammarFunctor.ml[1271,36006+2]..lib/grammarFunctor.ml[1271,36006+50])
                              extra
                                Texp_constraint
                                core_type (lib/grammarFunctor.ml[1270,35962+37]..lib/grammarFunctor.ml[1270,35962+41])
                                  Ttyp_constr "bool/5!"
                                  []
                              Texp_apply
                              expression (lib/grammarFunctor.ml[1271,36006+2]..lib/grammarFunctor.ml[1271,36006+5])
                                Texp_ident "Stdlib!.not"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/grammarFunctor.ml[1271,36006+6]..lib/grammarFunctor.ml[1271,36006+50])
                                    Texp_apply
                                    expression (lib/grammarFunctor.ml[1271,36006+7]..lib/grammarFunctor.ml[1271,36006+27])
                                      Texp_ident "TerminalSet/2387.is_empty"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/grammarFunctor.ml[1271,36006+28]..lib/grammarFunctor.ml[1271,36006+49])
                                          Texp_apply
                                          expression (lib/grammarFunctor.ml[1271,36006+29]..lib/grammarFunctor.ml[1271,36006+41])
                                            Texp_ident "FIRST/4150.symbol"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[1271,36006+42]..lib/grammarFunctor.ml[1271,36006+48])
                                                Texp_ident "symbol/4220"
                                          ]
                                    ]
                              ]
                        ]
                  ]
                structure_item (lib/grammarFunctor.ml[1279,36388+0]..lib/grammarFunctor.ml[1304,37240+3])
                  Tstr_module
                  G/4244
                    module_expr (lib/grammarFunctor.ml[1279,36388+11]..lib/grammarFunctor.ml[1304,37240+3])
                      Tmod_structure
                      [
                        structure_item (lib/grammarFunctor.ml[1280,36406+2]..lib/grammarFunctor.ml[1280,36406+27])
                          Tstr_type Rec
                          [
                            type_declaration node/4221 (lib/grammarFunctor.ml[1280,36406+2]..lib/grammarFunctor.ml[1280,36406+27])
                              ptype_params =
                                []
                              ptype_cstrs =
                                []
                              ptype_kind =
                                Ttype_abstract
                              ptype_private = Public
                              ptype_manifest =
                                Some
                                  core_type (lib/grammarFunctor.ml[1280,36406+14]..lib/grammarFunctor.ml[1280,36406+27])
                                    Ttyp_constr "Nonterminal/2057.t"
                                    []
                          ]
                        structure_item (lib/grammarFunctor.ml[1281,36434+2]..lib/grammarFunctor.ml[1281,36434+23])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1281,36434+6]..lib/grammarFunctor.ml[1281,36434+7])
                                Tpat_var "n/4222"
                              expression (lib/grammarFunctor.ml[1281,36434+10]..lib/grammarFunctor.ml[1281,36434+23])
                                Texp_ident "Nonterminal/2057.n"
                          ]
                        structure_item (lib/grammarFunctor.ml[1282,36458+2]..lib/grammarFunctor.ml[1282,36458+19])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1282,36458+6]..lib/grammarFunctor.ml[1282,36458+11])
                                Tpat_var "index/4223"
                              expression (lib/grammarFunctor.ml[1282,36458+12]..lib/grammarFunctor.ml[1282,36458+19]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[1282,36458+12]..lib/grammarFunctor.ml[1282,36458+14])
                                      Tpat_var "nt/4224"
                                    expression (lib/grammarFunctor.ml[1282,36458+17]..lib/grammarFunctor.ml[1282,36458+19])
                                      Texp_ident "nt/4224"
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[1283,36478+2]..lib/grammarFunctor.ml[1283,36478+29])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1283,36478+6]..lib/grammarFunctor.ml[1283,36478+10])
                                Tpat_var "iter/4225"
                              expression (lib/grammarFunctor.ml[1283,36478+13]..lib/grammarFunctor.ml[1283,36478+29])
                                Texp_ident "Nonterminal/2057.iter"
                          ]
                        structure_item (lib/grammarFunctor.ml[1284,36508+2]..lib/grammarFunctor.ml[1301,37152+5])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1284,36508+6]..lib/grammarFunctor.ml[1284,36508+24])
                                Tpat_var "labeled_successors/4226"
                              expression (lib/grammarFunctor.ml[1284,36508+25]..lib/grammarFunctor.ml[1301,37152+5]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[1284,36508+25]..lib/grammarFunctor.ml[1284,36508+30])
                                      Tpat_var "yield/4228"
                                    expression (lib/grammarFunctor.ml[1284,36508+31]..lib/grammarFunctor.ml[1301,37152+5]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (lib/grammarFunctor.ml[1284,36508+31]..lib/grammarFunctor.ml[1284,36508+33])
                                            Tpat_var "nt/4229"
                                          expression (lib/grammarFunctor.ml[1285,36544+4]..lib/grammarFunctor.ml[1301,37152+5])
                                            Texp_apply
                                            expression (lib/grammarFunctor.ml[1285,36544+4]..lib/grammarFunctor.ml[1285,36544+21])
                                              Texp_ident "Production/3564.iternt"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[1285,36544+22]..lib/grammarFunctor.ml[1285,36544+24])
                                                  Texp_ident "nt/4229"
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[1285,36544+25]..lib/grammarFunctor.ml[1301,37152+5])
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (lib/grammarFunctor.ml[1285,36544+30]..lib/grammarFunctor.ml[1285,36544+34])
                                                        Tpat_var "prod/4230"
                                                      expression (lib/grammarFunctor.ml[1286,36582+6]..lib/grammarFunctor.ml[1300,37144+7])
                                                        Texp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (lib/grammarFunctor.ml[1286,36582+10]..lib/grammarFunctor.ml[1286,36582+13])
                                                              Tpat_var "rhs/4231"
                                                            expression (lib/grammarFunctor.ml[1286,36582+16]..lib/grammarFunctor.ml[1286,36582+35])
                                                              Texp_apply
                                                              expression (lib/grammarFunctor.ml[1286,36582+16]..lib/grammarFunctor.ml[1286,36582+30])
                                                                Texp_ident "Production/3564.rhs"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/grammarFunctor.ml[1286,36582+31]..lib/grammarFunctor.ml[1286,36582+35])
                                                                    Texp_ident "prod/4230"
                                                              ]
                                                        ]
                                                        expression (lib/grammarFunctor.ml[1287,36621+6]..lib/grammarFunctor.ml[1300,37144+7])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[1287,36621+13]..lib/grammarFunctor.ml[1287,36621+24])
                                                            Texp_ident "Stdlib!.Array.iteri"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[1287,36621+25]..lib/grammarFunctor.ml[1300,37144+7])
                                                                Texp_function
                                                                Nolabel
                                                                [
                                                                  <case>
                                                                    pattern (lib/grammarFunctor.ml[1287,36621+30]..lib/grammarFunctor.ml[1287,36621+31])
                                                                      Tpat_var "i/4232"
                                                                    expression (lib/grammarFunctor.ml[1287,36621+32]..lib/grammarFunctor.ml[1299,37118+25]) ghost
                                                                      Texp_function
                                                                      Nolabel
                                                                      [
                                                                        <case>
                                                                          pattern (lib/grammarFunctor.ml[1287,36621+32]..lib/grammarFunctor.ml[1287,36621+38])
                                                                            Tpat_var "symbol/4233"
                                                                          expression (lib/grammarFunctor.ml[1288,36663+8]..lib/grammarFunctor.ml[1299,37118+25])
                                                                            Texp_match
                                                                            expression (lib/grammarFunctor.ml[1288,36663+14]..lib/grammarFunctor.ml[1288,36663+20])
                                                                              Texp_ident "symbol/4233"
                                                                            [
                                                                              <case>
                                                                                pattern (lib/grammarFunctor.ml[1289,36689+10]..lib/grammarFunctor.ml[1289,36689+20])
                                                                                  Tpat_value
                                                                                  pattern (lib/grammarFunctor.ml[1289,36689+10]..lib/grammarFunctor.ml[1289,36689+20])
                                                                                    Tpat_construct "Symbol.T"
                                                                                    [
                                                                                      pattern (lib/grammarFunctor.ml[1289,36689+19]..lib/grammarFunctor.ml[1289,36689+20])
                                                                                        Tpat_any
                                                                                    ]
                                                                                    None
                                                                                expression (lib/grammarFunctor.ml[1289,36689+26]..lib/grammarFunctor.ml[1289,36689+28])
                                                                                  Texp_construct "()"
                                                                                  []
                                                                              <case>
                                                                                pattern (lib/grammarFunctor.ml[1290,36718+10]..lib/grammarFunctor.ml[1290,36718+22])
                                                                                  Tpat_value
                                                                                  pattern (lib/grammarFunctor.ml[1290,36718+10]..lib/grammarFunctor.ml[1290,36718+22])
                                                                                    Tpat_construct "Symbol.N"
                                                                                    [
                                                                                      pattern (lib/grammarFunctor.ml[1290,36718+19]..lib/grammarFunctor.ml[1290,36718+22])
                                                                                        Tpat_var "nt'/4234"
                                                                                    ]
                                                                                    None
                                                                                expression (lib/grammarFunctor.ml[1294,36958+12]..lib/grammarFunctor.ml[1299,37118+25])
                                                                                  Texp_let Nonrec
                                                                                  [
                                                                                    <def>
                                                                                      pattern (lib/grammarFunctor.ml[1294,36958+16]..lib/grammarFunctor.ml[1294,36958+19])
                                                                                        Tpat_var "gnw/4235"
                                                                                      expression (lib/grammarFunctor.ml[1295,36980+14]..lib/grammarFunctor.ml[1297,37083+19])
                                                                                        Texp_apply
                                                                                        expression (lib/grammarFunctor.ml[1295,36980+14]..lib/grammarFunctor.ml[1295,36980+28])
                                                                                          Texp_ident "Gbnf_parser!.MArray.existsi"
                                                                                        [
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (lib/grammarFunctor.ml[1295,36980+29]..lib/grammarFunctor.ml[1297,37083+15])
                                                                                              Texp_function
                                                                                              Nolabel
                                                                                              [
                                                                                                <case>
                                                                                                  pattern (lib/grammarFunctor.ml[1295,36980+34]..lib/grammarFunctor.ml[1295,36980+35])
                                                                                                    Tpat_var "j/4236"
                                                                                                  expression (lib/grammarFunctor.ml[1295,36980+36]..lib/grammarFunctor.ml[1296,37026+56]) ghost
                                                                                                    Texp_function
                                                                                                    Nolabel
                                                                                                    [
                                                                                                      <case>
                                                                                                        pattern (lib/grammarFunctor.ml[1295,36980+36]..lib/grammarFunctor.ml[1295,36980+42])
                                                                                                          Tpat_var "symbol/4237"
                                                                                                        expression (lib/grammarFunctor.ml[1296,37026+16]..lib/grammarFunctor.ml[1296,37026+56])
                                                                                                          Texp_apply
                                                                                                          expression (lib/grammarFunctor.ml[1296,37026+23]..lib/grammarFunctor.ml[1296,37026+25])
                                                                                                            Texp_ident "Stdlib!.&&"
                                                                                                          [
                                                                                                            <arg>
                                                                                                              Nolabel
                                                                                                              expression (lib/grammarFunctor.ml[1296,37026+16]..lib/grammarFunctor.ml[1296,37026+22])
                                                                                                                Texp_apply
                                                                                                                expression (lib/grammarFunctor.ml[1296,37026+18]..lib/grammarFunctor.ml[1296,37026+20])
                                                                                                                  Texp_ident "Stdlib!.<>"
                                                                                                                [
                                                                                                                  <arg>
                                                                                                                    Nolabel
                                                                                                                    expression (lib/grammarFunctor.ml[1296,37026+16]..lib/grammarFunctor.ml[1296,37026+17])
                                                                                                                      Texp_ident "i/4232"
                                                                                                                  <arg>
                                                                                                                    Nolabel
                                                                                                                    expression (lib/grammarFunctor.ml[1296,37026+21]..lib/grammarFunctor.ml[1296,37026+22])
                                                                                                                      Texp_ident "j/4236"
                                                                                                                ]
                                                                                                            <arg>
                                                                                                              Nolabel
                                                                                                              expression (lib/grammarFunctor.ml[1296,37026+26]..lib/grammarFunctor.ml[1296,37026+56])
                                                                                                                Texp_apply
                                                                                                                expression (lib/grammarFunctor.ml[1296,37026+26]..lib/grammarFunctor.ml[1296,37026+49])
                                                                                                                  Texp_ident "generates_nonempty_word/4218"
                                                                                                                [
                                                                                                                  <arg>
                                                                                                                    Nolabel
                                                                                                                    expression (lib/grammarFunctor.ml[1296,37026+50]..lib/grammarFunctor.ml[1296,37026+56])
                                                                                                                      Texp_ident "symbol/4237"
                                                                                                                ]
                                                                                                          ]
                                                                                                    ]
                                                                                              ]
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (lib/grammarFunctor.ml[1297,37083+16]..lib/grammarFunctor.ml[1297,37083+19])
                                                                                              Texp_ident "rhs/4231"
                                                                                        ]
                                                                                  ]
                                                                                  expression (lib/grammarFunctor.ml[1299,37118+12]..lib/grammarFunctor.ml[1299,37118+25])
                                                                                    Texp_apply
                                                                                    expression (lib/grammarFunctor.ml[1299,37118+12]..lib/grammarFunctor.ml[1299,37118+17])
                                                                                      Texp_ident "yield/4228"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/grammarFunctor.ml[1299,37118+18]..lib/grammarFunctor.ml[1299,37118+21])
                                                                                          Texp_ident "gnw/4235"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/grammarFunctor.ml[1299,37118+22]..lib/grammarFunctor.ml[1299,37118+25])
                                                                                          Texp_ident "nt'/4234"
                                                                                    ]
                                                                            ]
                                                                      ]
                                                                ]
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[1287,36621+6]..lib/grammarFunctor.ml[1287,36621+9])
                                                                Texp_ident "rhs/4231"
                                                          ]
                                                  ]
                                            ]
                                      ]
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[1302,37158+2]..lib/grammarFunctor.ml[1303,37186+53])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1302,37158+6]..lib/grammarFunctor.ml[1302,37158+16])
                                Tpat_var "successors/4238"
                              expression (lib/grammarFunctor.ml[1302,37158+17]..lib/grammarFunctor.ml[1303,37186+53]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[1302,37158+17]..lib/grammarFunctor.ml[1302,37158+22])
                                      Tpat_var "yield/4240"
                                    expression (lib/grammarFunctor.ml[1302,37158+23]..lib/grammarFunctor.ml[1303,37186+53]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (lib/grammarFunctor.ml[1302,37158+23]..lib/grammarFunctor.ml[1302,37158+25])
                                            Tpat_var "nt/4241"
                                          expression (lib/grammarFunctor.ml[1303,37186+4]..lib/grammarFunctor.ml[1303,37186+53])
                                            Texp_apply
                                            expression (lib/grammarFunctor.ml[1303,37186+4]..lib/grammarFunctor.ml[1303,37186+22])
                                              Texp_ident "labeled_successors/4226"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[1303,37186+23]..lib/grammarFunctor.ml[1303,37186+50])
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (lib/grammarFunctor.ml[1303,37186+28]..lib/grammarFunctor.ml[1303,37186+32])
                                                        Tpat_var "_gnw/4242"
                                                      expression (lib/grammarFunctor.ml[1303,37186+33]..lib/grammarFunctor.ml[1303,37186+49]) ghost
                                                        Texp_function
                                                        Nolabel
                                                        [
                                                          <case>
                                                            pattern (lib/grammarFunctor.ml[1303,37186+33]..lib/grammarFunctor.ml[1303,37186+36])
                                                              Tpat_var "nt'/4243"
                                                            expression (lib/grammarFunctor.ml[1303,37186+40]..lib/grammarFunctor.ml[1303,37186+49])
                                                              Texp_apply
                                                              expression (lib/grammarFunctor.ml[1303,37186+40]..lib/grammarFunctor.ml[1303,37186+45])
                                                                Texp_ident "yield/4240"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/grammarFunctor.ml[1303,37186+46]..lib/grammarFunctor.ml[1303,37186+49])
                                                                    Texp_ident "nt'/4243"
                                                              ]
                                                        ]
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[1303,37186+51]..lib/grammarFunctor.ml[1303,37186+53])
                                                  Texp_ident "nt/4241"
                                            ]
                                      ]
                                ]
                          ]
                      ]
                structure_item (lib/grammarFunctor.ml[1312,37583+0]..lib/grammarFunctor.ml[1329,38242+5])
                  Tstr_value Nonrec
                  [
                    <def>
                      pattern (lib/grammarFunctor.ml[1312,37583+4]..lib/grammarFunctor.ml[1312,37583+13])
                        extra
                          Tpat_extra_constraint
                          core_type (lib/grammarFunctor.ml[1312,37583+16]..lib/grammarFunctor.ml[1312,37583+33])
                            Ttyp_constr "Stdlib!.Lazy.t"
                            [
                              core_type (lib/grammarFunctor.ml[1312,37583+16]..lib/grammarFunctor.ml[1312,37583+26])
                                Ttyp_constr "array/8!"
                                [
                                  core_type (lib/grammarFunctor.ml[1312,37583+16]..lib/grammarFunctor.ml[1312,37583+20])
                                    Ttyp_constr "bool/5!"
                                    []
                                ]
                            ]
                        Tpat_alias "unbounded/4245"
                        pattern (lib/grammarFunctor.ml[1312,37583+4]..lib/grammarFunctor.ml[1312,37583+13])
                          Tpat_any
                      expression (lib/grammarFunctor.ml[1313,37619+2]..lib/grammarFunctor.ml[1329,38242+5])
                        extra
                          Texp_constraint
                          core_type (lib/grammarFunctor.ml[1312,37583+16]..lib/grammarFunctor.ml[1312,37583+33])
                            Ttyp_constr "Stdlib!.Lazy.t"
                            [
                              core_type (lib/grammarFunctor.ml[1312,37583+16]..lib/grammarFunctor.ml[1312,37583+26])
                                Ttyp_constr "array/8!"
                                [
                                  core_type (lib/grammarFunctor.ml[1312,37583+16]..lib/grammarFunctor.ml[1312,37583+20])
                                    Ttyp_constr "bool/5!"
                                    []
                                ]
                            ]
                        Texp_lazy                        expression (lib/grammarFunctor.ml[1313,37619+7]..lib/grammarFunctor.ml[1329,38242+5])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1314,37632+8]..lib/grammarFunctor.ml[1314,37632+17])
                                Tpat_var "unbounded/4246"
                              expression (lib/grammarFunctor.ml[1314,37632+20]..lib/grammarFunctor.ml[1314,37632+50])
                                Texp_apply
                                expression (lib/grammarFunctor.ml[1314,37632+20]..lib/grammarFunctor.ml[1314,37632+30])
                                  Texp_ident "Stdlib!.Array.make"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/grammarFunctor.ml[1314,37632+31]..lib/grammarFunctor.ml[1314,37632+44])
                                      Texp_ident "Nonterminal/2057.n"
                                  <arg>
                                    Nolabel
                                    expression (lib/grammarFunctor.ml[1314,37632+45]..lib/grammarFunctor.ml[1314,37632+50])
                                      Texp_construct "false"
                                      []
                                ]
                          ]
                          expression (lib/grammarFunctor.ml[1315,37686+4]..lib/grammarFunctor.ml[1328,38228+13])
                            Texp_letmodule "T/4277"
                            module_expr (lib/grammarFunctor.ml[1315,37686+19]..lib/grammarFunctor.ml[1315,37686+32])
                              Tmod_apply
                              module_expr (lib/grammarFunctor.ml[1315,37686+19]..lib/grammarFunctor.ml[1315,37686+29])
                                module_expr (lib/grammarFunctor.ml[1315,37686+19]..lib/grammarFunctor.ml[1315,37686+29])
                                  Tmod_ident "Gbnf_parser!.Tarjan.Run"
                              module_expr (lib/grammarFunctor.ml[1315,37686+30]..lib/grammarFunctor.ml[1315,37686+31])
                                Tmod_ident "G/4244"
                            expression (lib/grammarFunctor.ml[1317,37778+4]..lib/grammarFunctor.ml[1328,38228+13])
                              Texp_sequence
                              expression (lib/grammarFunctor.ml[1317,37778+4]..lib/grammarFunctor.ml[1327,38219+7])
                                Texp_apply
                                expression (lib/grammarFunctor.ml[1317,37778+4]..lib/grammarFunctor.ml[1317,37778+10])
                                  Texp_ident "G/4244.iter"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/grammarFunctor.ml[1317,37778+11]..lib/grammarFunctor.ml[1327,38219+7])
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (lib/grammarFunctor.ml[1317,37778+21]..lib/grammarFunctor.ml[1317,37778+23])
                                            Tpat_var "nt/4278"
                                          expression (lib/grammarFunctor.ml[1318,37805+6]..lib/grammarFunctor.ml[1326,38209+9])
                                            Texp_apply
                                            expression (lib/grammarFunctor.ml[1318,37805+12]..lib/grammarFunctor.ml[1318,37805+32])
                                              Texp_ident "G/4244.labeled_successors"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[1318,37805+33]..lib/grammarFunctor.ml[1326,38209+9])
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (lib/grammarFunctor.ml[1318,37805+43]..lib/grammarFunctor.ml[1318,37805+46])
                                                        Tpat_var "gnw/4279"
                                                      expression (lib/grammarFunctor.ml[1318,37805+47]..lib/grammarFunctor.ml[1325,38197+11]) ghost
                                                        Texp_function
                                                        Nolabel
                                                        [
                                                          <case>
                                                            pattern (lib/grammarFunctor.ml[1318,37805+47]..lib/grammarFunctor.ml[1318,37805+50])
                                                              Tpat_var "nt'/4280"
                                                            expression (lib/grammarFunctor.ml[1320,37938+8]..lib/grammarFunctor.ml[1325,38197+11])
                                                              Texp_ifthenelse
                                                              expression (lib/grammarFunctor.ml[1320,37938+11]..lib/grammarFunctor.ml[1320,37938+60])
                                                                Texp_apply
                                                                expression (lib/grammarFunctor.ml[1320,37938+15]..lib/grammarFunctor.ml[1320,37938+17])
                                                                  Texp_ident "Stdlib!.&&"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[1320,37938+11]..lib/grammarFunctor.ml[1320,37938+14])
                                                                      Texp_ident "gnw/4279"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[1320,37938+18]..lib/grammarFunctor.ml[1320,37938+60])
                                                                      Texp_apply
                                                                      expression (lib/grammarFunctor.ml[1320,37938+38]..lib/grammarFunctor.ml[1320,37938+39])
                                                                        Texp_ident "Stdlib!.="
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (lib/grammarFunctor.ml[1320,37938+18]..lib/grammarFunctor.ml[1320,37938+37])
                                                                            Texp_apply
                                                                            expression (lib/grammarFunctor.ml[1320,37938+18]..lib/grammarFunctor.ml[1320,37938+34])
                                                                              Texp_ident "T/4277.representative"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (lib/grammarFunctor.ml[1320,37938+35]..lib/grammarFunctor.ml[1320,37938+37])
                                                                                  Texp_ident "nt/4278"
                                                                            ]
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (lib/grammarFunctor.ml[1320,37938+40]..lib/grammarFunctor.ml[1320,37938+60])
                                                                            Texp_apply
                                                                            expression (lib/grammarFunctor.ml[1320,37938+40]..lib/grammarFunctor.ml[1320,37938+56])
                                                                              Texp_ident "T/4277.representative"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (lib/grammarFunctor.ml[1320,37938+57]..lib/grammarFunctor.ml[1320,37938+60])
                                                                                  Texp_ident "nt'/4280"
                                                                            ]
                                                                      ]
                                                                ]
                                                              expression (lib/grammarFunctor.ml[1320,37938+66]..lib/grammarFunctor.ml[1325,38197+11])
                                                                Texp_apply
                                                                expression (lib/grammarFunctor.ml[1322,38081+41]..lib/grammarFunctor.ml[1322,38081+50])
                                                                  Texp_ident "Stdlib!.List.iter"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[1322,38081+51]..lib/grammarFunctor.ml[1324,38183+13])
                                                                      Texp_function
                                                                      Nolabel
                                                                      [
                                                                        <case>
                                                                          pattern (lib/grammarFunctor.ml[1322,38081+61]..lib/grammarFunctor.ml[1322,38081+63])
                                                                            Tpat_var "nt/4281"
                                                                          expression (lib/grammarFunctor.ml[1323,38148+12]..lib/grammarFunctor.ml[1323,38148+34])
                                                                            Texp_apply
                                                                            expression (lib/grammarFunctor.ml[1323,38148+12]..lib/grammarFunctor.ml[1323,38148+34]) ghost
                                                                              Texp_ident "Stdlib!.Array.set"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (lib/grammarFunctor.ml[1323,38148+12]..lib/grammarFunctor.ml[1323,38148+21])
                                                                                  Texp_ident "unbounded/4246"
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (lib/grammarFunctor.ml[1323,38148+23]..lib/grammarFunctor.ml[1323,38148+25])
                                                                                  Texp_ident "nt/4281"
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (lib/grammarFunctor.ml[1323,38148+30]..lib/grammarFunctor.ml[1323,38148+34])
                                                                                  Texp_construct "true"
                                                                                  []
                                                                            ]
                                                                      ]
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[1322,38081+10]..lib/grammarFunctor.ml[1322,38081+37])
                                                                      Texp_apply
                                                                      expression (lib/grammarFunctor.ml[1322,38081+10]..lib/grammarFunctor.ml[1322,38081+15])
                                                                        Texp_ident "T/4277.scc"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (lib/grammarFunctor.ml[1322,38081+16]..lib/grammarFunctor.ml[1322,38081+37])
                                                                            Texp_apply
                                                                            expression (lib/grammarFunctor.ml[1322,38081+17]..lib/grammarFunctor.ml[1322,38081+33])
                                                                              Texp_ident "T/4277.representative"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (lib/grammarFunctor.ml[1322,38081+34]..lib/grammarFunctor.ml[1322,38081+36])
                                                                                  Texp_ident "nt/4278"
                                                                            ]
                                                                      ]
                                                                ]
                                                              None
                                                        ]
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[1318,37805+6]..lib/grammarFunctor.ml[1318,37805+8])
                                                  Texp_ident "nt/4278"
                                            ]
                                      ]
                                ]
                              expression (lib/grammarFunctor.ml[1328,38228+4]..lib/grammarFunctor.ml[1328,38228+13])
                                Texp_ident "unbounded/4246"
                  ]
                structure_item (lib/grammarFunctor.ml[1331,38249+0]..lib/grammarFunctor.ml[1332,38275+29])
                  Tstr_value Nonrec
                  [
                    <def>
                      pattern (lib/grammarFunctor.ml[1331,38249+4]..lib/grammarFunctor.ml[1331,38249+13])
                        Tpat_var "unbounded/4282"
                      expression (lib/grammarFunctor.ml[1331,38249+14]..lib/grammarFunctor.ml[1332,38275+29]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (lib/grammarFunctor.ml[1331,38249+14]..lib/grammarFunctor.ml[1331,38249+16])
                              Tpat_var "nt/4283"
                            expression (lib/grammarFunctor.ml[1332,38275+2]..lib/grammarFunctor.ml[1332,38275+29])
                              extra
                                Texp_constraint
                                core_type (lib/grammarFunctor.ml[1331,38249+19]..lib/grammarFunctor.ml[1331,38249+23])
                                  Ttyp_constr "bool/5!"
                                  []
                              Texp_apply
                              expression (lib/grammarFunctor.ml[1332,38275+2]..lib/grammarFunctor.ml[1332,38275+29]) ghost
                                Texp_ident "Stdlib!.Array.get"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/grammarFunctor.ml[1332,38275+2]..lib/grammarFunctor.ml[1332,38275+24])
                                    Texp_apply
                                    expression (lib/grammarFunctor.ml[1332,38275+3]..lib/grammarFunctor.ml[1332,38275+13])
                                      Texp_ident "Stdlib!.Lazy.force"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/grammarFunctor.ml[1332,38275+14]..lib/grammarFunctor.ml[1332,38275+23])
                                          Texp_ident "unbounded/4245"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (lib/grammarFunctor.ml[1332,38275+26]..lib/grammarFunctor.ml[1332,38275+28])
                                    Texp_ident "nt/4283"
                              ]
                        ]
                  ]
                structure_item (lib/grammarFunctor.ml[1346,39083+0]..lib/grammarFunctor.ml[1360,39624+9])
                  Tstr_module
                  MAXIMAL/4319
                    module_expr (lib/grammarFunctor.ml[1347,39100+2]..lib/grammarFunctor.ml[1360,39624+9])
                      Tmod_apply
                      module_expr (lib/grammarFunctor.ml[1347,39100+2]..lib/grammarFunctor.ml[1348,39118+20])
                        Tmod_apply
                        module_expr (lib/grammarFunctor.ml[1347,39100+2]..lib/grammarFunctor.ml[1347,39100+17])
                          Tmod_ident "GenericAnalysis/4037"
                        module_expr (lib/grammarFunctor.ml[1348,39118+5]..lib/grammarFunctor.ml[1348,39118+19])
                          module_expr (lib/grammarFunctor.ml[1348,39118+5]..lib/grammarFunctor.ml[1348,39118+19])
                            Tmod_ident "Gbnf_parser!.NatInfinityMax"
                      module_expr (lib/grammarFunctor.ml[1349,39139+5]..lib/grammarFunctor.ml[1360,39624+8])
                        Tmod_structure
                        [
                          structure_item (lib/grammarFunctor.ml[1350,39151+6]..lib/grammarFunctor.ml[1350,39151+25])
                            Tstr_open Fresh
                            module_expr (lib/grammarFunctor.ml[1350,39151+11]..lib/grammarFunctor.ml[1350,39151+25])
                              Tmod_ident "Gbnf_parser!.NatInfinityMax"
                          structure_item (lib/grammarFunctor.ml[1351,39177+6]..lib/grammarFunctor.ml[1351,39177+68])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1351,39177+10]..lib/grammarFunctor.ml[1351,39177+18])
                                  Tpat_var "shortcut/4296"
                                expression (lib/grammarFunctor.ml[1351,39177+19]..lib/grammarFunctor.ml[1351,39177+68]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1351,39177+19]..lib/grammarFunctor.ml[1351,39177+21])
                                        Tpat_var "nt/4298"
                                      expression (lib/grammarFunctor.ml[1351,39177+24]..lib/grammarFunctor.ml[1351,39177+68])
                                        Texp_ifthenelse
                                        expression (lib/grammarFunctor.ml[1351,39177+27]..lib/grammarFunctor.ml[1351,39177+39])
                                          Texp_apply
                                          expression (lib/grammarFunctor.ml[1351,39177+27]..lib/grammarFunctor.ml[1351,39177+36])
                                            Texp_ident "unbounded/4282"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[1351,39177+37]..lib/grammarFunctor.ml[1351,39177+39])
                                                Texp_ident "nt/4298"
                                          ]
                                        expression (lib/grammarFunctor.ml[1351,39177+45]..lib/grammarFunctor.ml[1351,39177+58])
                                          Texp_construct "Some"
                                          [
                                            expression (lib/grammarFunctor.ml[1351,39177+50]..lib/grammarFunctor.ml[1351,39177+58])
                                              Texp_ident "Gbnf_parser!.NatInfinityMax.infinity"
                                          ]
                                        Some
                                          expression (lib/grammarFunctor.ml[1351,39177+64]..lib/grammarFunctor.ml[1351,39177+68])
                                            Texp_construct "None"
                                            []
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[1353,39290+6]..lib/grammarFunctor.ml[1353,39290+34])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1353,39290+10]..lib/grammarFunctor.ml[1353,39290+18])
                                  Tpat_var "terminal/4299"
                                expression (lib/grammarFunctor.ml[1353,39290+19]..lib/grammarFunctor.ml[1353,39290+34]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1353,39290+19]..lib/grammarFunctor.ml[1353,39290+23])
                                        Tpat_var "_tok/4301"
                                      expression (lib/grammarFunctor.ml[1353,39290+26]..lib/grammarFunctor.ml[1353,39290+34])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[1353,39290+26]..lib/grammarFunctor.ml[1353,39290+32])
                                          Texp_ident "Gbnf_parser!.NatInfinityMax.finite"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[1353,39290+33]..lib/grammarFunctor.ml[1353,39290+34])
                                              Texp_constant Const_int 1
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[1355,39403+6]..lib/grammarFunctor.ml[1355,39403+32])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1355,39403+10]..lib/grammarFunctor.ml[1355,39403+21])
                                  Tpat_var "disjunction/4302"
                                expression (lib/grammarFunctor.ml[1355,39403+24]..lib/grammarFunctor.ml[1355,39403+32])
                                  Texp_ident "Gbnf_parser!.NatInfinityMax.max_lazy"
                            ]
                          structure_item (lib/grammarFunctor.ml[1357,39515+6]..lib/grammarFunctor.ml[1357,39515+34])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1357,39515+10]..lib/grammarFunctor.ml[1357,39515+21])
                                  Tpat_var "conjunction/4303"
                                expression (lib/grammarFunctor.ml[1357,39515+22]..lib/grammarFunctor.ml[1357,39515+34]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1357,39515+22]..lib/grammarFunctor.ml[1357,39515+23])
                                        Tpat_any
                                      expression (lib/grammarFunctor.ml[1357,39515+26]..lib/grammarFunctor.ml[1357,39515+34])
                                        Texp_ident "Gbnf_parser!.NatInfinityMax.add_lazy"
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[1359,39597+6]..lib/grammarFunctor.ml[1359,39597+26])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1359,39597+10]..lib/grammarFunctor.ml[1359,39597+17])
                                  Tpat_var "epsilon/4306"
                                expression (lib/grammarFunctor.ml[1359,39597+20]..lib/grammarFunctor.ml[1359,39597+26])
                                  Texp_ident "Gbnf_parser!.NatInfinityMax.bottom"
                            ]
                        ]
                structure_item (lib/grammarFunctor.ml[1364,39715+0]..lib/grammarFunctor.ml[1390,40972+5])
                  Tstr_value Nonrec
                  [
                    <def>
                      pattern (lib/grammarFunctor.ml[1364,39715+4]..lib/grammarFunctor.ml[1364,39715+6])
                        Tpat_construct "()"
                        []
                        None
                      expression (lib/grammarFunctor.ml[1365,39724+2]..lib/grammarFunctor.ml[1390,40972+5])
                        Texp_ifthenelse
                        expression (lib/grammarFunctor.ml[1365,39724+5]..lib/grammarFunctor.ml[1365,39724+12])
                          Texp_ident "G/1226.verbose"
                        expression (lib/grammarFunctor.ml[1365,39724+18]..lib/grammarFunctor.ml[1390,40972+5])
                          Texp_apply
                          expression (lib/grammarFunctor.ml[1372,40105+4]..lib/grammarFunctor.ml[1372,40105+18])
                            Texp_ident "Gbnf_parser!.StringSet.iter"
                          [
                            <arg>
                              Nolabel
                              expression (lib/grammarFunctor.ml[1372,40105+19]..lib/grammarFunctor.ml[1382,40552+5])
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[1372,40105+24]..lib/grammarFunctor.ml[1372,40105+30])
                                      Tpat_var "symbol/4320"
                                    expression (lib/grammarFunctor.ml[1373,40139+6]..lib/grammarFunctor.ml[1381,40474+77])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (lib/grammarFunctor.ml[1373,40139+10]..lib/grammarFunctor.ml[1373,40139+12])
                                            Tpat_var "nt/4321"
                                          expression (lib/grammarFunctor.ml[1373,40139+15]..lib/grammarFunctor.ml[1373,40139+40])
                                            Texp_apply
                                            expression (lib/grammarFunctor.ml[1373,40139+15]..lib/grammarFunctor.ml[1373,40139+33])
                                              Texp_ident "Nonterminal/2057.lookup"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[1373,40139+34]..lib/grammarFunctor.ml[1373,40139+40])
                                                  Texp_ident "symbol/4320"
                                            ]
                                      ]
                                      expression (lib/grammarFunctor.ml[1374,40183+6]..lib/grammarFunctor.ml[1381,40474+77])
                                        Texp_sequence
                                        expression (lib/grammarFunctor.ml[1374,40183+6]..lib/grammarFunctor.ml[1377,40284+73])
                                          Texp_ifthenelse
                                          expression (lib/grammarFunctor.ml[1374,40183+9]..lib/grammarFunctor.ml[1374,40183+38])
                                            Texp_apply
                                            expression (lib/grammarFunctor.ml[1374,40183+9]..lib/grammarFunctor.ml[1374,40183+12])
                                              Texp_ident "Stdlib!.not"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[1374,40183+13]..lib/grammarFunctor.ml[1374,40183+38])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[1374,40183+14]..lib/grammarFunctor.ml[1374,40183+34])
                                                    Texp_ident "NONEMPTY/4094.nonterminal"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[1374,40183+35]..lib/grammarFunctor.ml[1374,40183+37])
                                                        Texp_ident "nt/4321"
                                                  ]
                                            ]
                                          expression (lib/grammarFunctor.ml[1375,40227+8]..lib/grammarFunctor.ml[1377,40284+73])
                                            Texp_apply
                                            expression (lib/grammarFunctor.ml[1375,40227+8]..lib/grammarFunctor.ml[1375,40227+19])
                                              Texp_ident "Gbnf_parser!.Error.error"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[1376,40247+10]..lib/grammarFunctor.ml[1376,40247+36])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[1376,40247+11]..lib/grammarFunctor.ml[1376,40247+32])
                                                    Texp_ident "Nonterminal/2057.positions"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[1376,40247+33]..lib/grammarFunctor.ml[1376,40247+35])
                                                        Texp_ident "nt/4321"
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[1377,40284+10]..lib/grammarFunctor.ml[1377,40284+44])
                                                  Texp_construct "CamlinternalFormatBasics.Format"
                                                  [
                                                    expression (lib/grammarFunctor.ml[1377,40284+10]..lib/grammarFunctor.ml[1377,40284+44]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.String"
                                                      [
                                                        expression (lib/grammarFunctor.ml[1377,40284+10]..lib/grammarFunctor.ml[1377,40284+44]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                                          []
                                                        expression (lib/grammarFunctor.ml[1377,40284+10]..lib/grammarFunctor.ml[1377,40284+44]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                                          [
                                                            expression (lib/grammarFunctor.ml[1377,40284+10]..lib/grammarFunctor.ml[1377,40284+44]) ghost
                                                              Texp_constant Const_string(" generates the empty language.",(lib/grammarFunctor.ml[1377,40284+10]..lib/grammarFunctor.ml[1377,40284+44]) ghost,None)
                                                            expression (lib/grammarFunctor.ml[1377,40284+10]..lib/grammarFunctor.ml[1377,40284+44]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                              []
                                                          ]
                                                      ]
                                                    expression (lib/grammarFunctor.ml[1377,40284+10]..lib/grammarFunctor.ml[1377,40284+44]) ghost
                                                      Texp_constant Const_string("%s generates the empty language.",(lib/grammarFunctor.ml[1377,40284+10]..lib/grammarFunctor.ml[1377,40284+44]) ghost,None)
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[1377,40284+45]..lib/grammarFunctor.ml[1377,40284+73])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[1377,40284+46]..lib/grammarFunctor.ml[1377,40284+63])
                                                    Texp_ident "Nonterminal/2057.print"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[1377,40284+64]..lib/grammarFunctor.ml[1377,40284+69])
                                                        Texp_construct "false"
                                                        []
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[1377,40284+70]..lib/grammarFunctor.ml[1377,40284+72])
                                                        Texp_ident "nt/4321"
                                                  ]
                                            ]
                                          None
                                        expression (lib/grammarFunctor.ml[1378,40359+6]..lib/grammarFunctor.ml[1381,40474+77])
                                          Texp_ifthenelse
                                          expression (lib/grammarFunctor.ml[1378,40359+9]..lib/grammarFunctor.ml[1378,40359+52])
                                            Texp_apply
                                            expression (lib/grammarFunctor.ml[1378,40359+9]..lib/grammarFunctor.ml[1378,40359+29])
                                              Texp_ident "TerminalSet/2387.is_empty"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[1378,40359+30]..lib/grammarFunctor.ml[1378,40359+52])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[1378,40359+31]..lib/grammarFunctor.ml[1378,40359+48])
                                                    Texp_ident "FIRST/4150.nonterminal"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[1378,40359+49]..lib/grammarFunctor.ml[1378,40359+51])
                                                        Texp_ident "nt/4321"
                                                  ]
                                            ]
                                          expression (lib/grammarFunctor.ml[1379,40417+8]..lib/grammarFunctor.ml[1381,40474+77])
                                            Texp_apply
                                            expression (lib/grammarFunctor.ml[1379,40417+8]..lib/grammarFunctor.ml[1379,40417+19])
                                              Texp_ident "Gbnf_parser!.Error.error"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[1380,40437+10]..lib/grammarFunctor.ml[1380,40437+36])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[1380,40437+11]..lib/grammarFunctor.ml[1380,40437+32])
                                                    Texp_ident "Nonterminal/2057.positions"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[1380,40437+33]..lib/grammarFunctor.ml[1380,40437+35])
                                                        Texp_ident "nt/4321"
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[1381,40474+10]..lib/grammarFunctor.ml[1381,40474+48])
                                                  Texp_construct "CamlinternalFormatBasics.Format"
                                                  [
                                                    expression (lib/grammarFunctor.ml[1381,40474+10]..lib/grammarFunctor.ml[1381,40474+48]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.String"
                                                      [
                                                        expression (lib/grammarFunctor.ml[1381,40474+10]..lib/grammarFunctor.ml[1381,40474+48]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                                          []
                                                        expression (lib/grammarFunctor.ml[1381,40474+10]..lib/grammarFunctor.ml[1381,40474+48]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                                          [
                                                            expression (lib/grammarFunctor.ml[1381,40474+10]..lib/grammarFunctor.ml[1381,40474+48]) ghost
                                                              Texp_constant Const_string(" generates the language {epsilon}.",(lib/grammarFunctor.ml[1381,40474+10]..lib/grammarFunctor.ml[1381,40474+48]) ghost,None)
                                                            expression (lib/grammarFunctor.ml[1381,40474+10]..lib/grammarFunctor.ml[1381,40474+48]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                              []
                                                          ]
                                                      ]
                                                    expression (lib/grammarFunctor.ml[1381,40474+10]..lib/grammarFunctor.ml[1381,40474+48]) ghost
                                                      Texp_constant Const_string("%s generates the language {epsilon}.",(lib/grammarFunctor.ml[1381,40474+10]..lib/grammarFunctor.ml[1381,40474+48]) ghost,None)
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[1381,40474+49]..lib/grammarFunctor.ml[1381,40474+77])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[1381,40474+50]..lib/grammarFunctor.ml[1381,40474+67])
                                                    Texp_ident "Nonterminal/2057.print"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[1381,40474+68]..lib/grammarFunctor.ml[1381,40474+73])
                                                        Texp_construct "false"
                                                        []
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[1381,40474+74]..lib/grammarFunctor.ml[1381,40474+76])
                                                        Texp_ident "nt/4321"
                                                  ]
                                            ]
                                          None
                                ]
                            <arg>
                              Nolabel
                              expression (lib/grammarFunctor.ml[1382,40552+6]..lib/grammarFunctor.ml[1382,40552+27])
                                Texp_field
                                expression (lib/grammarFunctor.ml[1382,40552+6]..lib/grammarFunctor.ml[1382,40552+13])
                                  Texp_ident "G/1226.grammar"
                                "start_symbols"
                          ]
                        None
                  ]
                structure_item (lib/grammarFunctor.ml[1434,42731+0]..lib/grammarFunctor.ml[1493,44634+3])
                  Tstr_module
                  FOLLOW/4509
                    module_expr (lib/grammarFunctor.ml[1434,42731+14]..lib/grammarFunctor.ml[1493,44634+3])
                      Tmod_functor "P/4329"
                      module_type (lib/grammarFunctor.ml[1434,42731+19]..lib/grammarFunctor.ml[1439,42900+3])
                        Tmty_signature
                        [
                          signature_item (lib/grammarFunctor.ml[1435,42754+2]..lib/grammarFunctor.ml[1435,42754+34])
                            Tsig_include
                            module_type (lib/grammarFunctor.ml[1435,42754+10]..lib/grammarFunctor.ml[1435,42754+34])
                              Tmty_ident "Gbnf_parser!.Fix.MINIMAL_SEMI_LATTICE"
                          signature_item (lib/grammarFunctor.ml[1436,42789+2]..lib/grammarFunctor.ml[1436,42789+22])
                            Tsig_value
                            value_description bottom/4326 (lib/grammarFunctor.ml[1436,42789+2]..lib/grammarFunctor.ml[1436,42789+22])
                              core_type (lib/grammarFunctor.ml[1436,42789+14]..lib/grammarFunctor.ml[1436,42789+22])
                                Ttyp_constr "property/4324"
                                []
                              []
                          signature_item (lib/grammarFunctor.ml[1437,42812+2]..lib/grammarFunctor.ml[1437,42812+38])
                            Tsig_value
                            value_description terminal/4327 (lib/grammarFunctor.ml[1437,42812+2]..lib/grammarFunctor.ml[1437,42812+38])
                              core_type (lib/grammarFunctor.ml[1437,42812+16]..lib/grammarFunctor.ml[1437,42812+38])
                                Ttyp_arrow
                                Nolabel
                                core_type (lib/grammarFunctor.ml[1437,42812+16]..lib/grammarFunctor.ml[1437,42812+26])
                                  Ttyp_constr "Terminal/2246.t"
                                  []
                                core_type (lib/grammarFunctor.ml[1437,42812+30]..lib/grammarFunctor.ml[1437,42812+38])
                                  Ttyp_constr "property/4324"
                                  []
                              []
                          signature_item (lib/grammarFunctor.ml[1438,42851+2]..lib/grammarFunctor.ml[1438,42851+48])
                            Tsig_value
                            value_description first/4328 (lib/grammarFunctor.ml[1438,42851+2]..lib/grammarFunctor.ml[1438,42851+48])
                              core_type (lib/grammarFunctor.ml[1438,42851+13]..lib/grammarFunctor.ml[1438,42851+48])
                                Ttyp_arrow
                                Nolabel
                                core_type (lib/grammarFunctor.ml[1438,42851+13]..lib/grammarFunctor.ml[1438,42851+29])
                                  Ttyp_constr "Production/3564.index"
                                  []
                                core_type (lib/grammarFunctor.ml[1438,42851+33]..lib/grammarFunctor.ml[1438,42851+48])
                                  Ttyp_arrow
                                  Nolabel
                                  core_type (lib/grammarFunctor.ml[1438,42851+33]..lib/grammarFunctor.ml[1438,42851+36])
                                    Ttyp_constr "int/1!"
                                    []
                                  core_type (lib/grammarFunctor.ml[1438,42851+40]..lib/grammarFunctor.ml[1438,42851+48])
                                    Ttyp_constr "property/4324"
                                    []
                              []
                        ]
                      module_expr (lib/grammarFunctor.ml[1439,42900+7]..lib/grammarFunctor.ml[1493,44634+3])
                        module_expr (lib/grammarFunctor.ml[1439,42900+7]..lib/grammarFunctor.ml[1493,44634+3])
                          Tmod_structure
                          [
                            structure_item (lib/grammarFunctor.ml[1441,42915+2]..lib/grammarFunctor.ml[1442,42928+48])
                              Tstr_module
                              M/4337
                                module_expr (lib/grammarFunctor.ml[1442,42928+4]..lib/grammarFunctor.ml[1442,42928+48])
                                  Tmod_apply
                                  module_expr (lib/grammarFunctor.ml[1442,42928+4]..lib/grammarFunctor.ml[1442,42928+35])
                                    module_expr (lib/grammarFunctor.ml[1442,42928+4]..lib/grammarFunctor.ml[1442,42928+35])
                                      Tmod_ident "Gbnf_parser!.Fix.Glue.ArraysAsImperativeMaps"
                                  module_expr (lib/grammarFunctor.ml[1442,42928+36]..lib/grammarFunctor.ml[1442,42928+47])
                                    Tmod_ident "Nonterminal/2057"
                            structure_item (lib/grammarFunctor.ml[1444,42978+2]..lib/grammarFunctor.ml[1445,42991+24])
                              Tstr_module
                              S/4419
                                module_expr (lib/grammarFunctor.ml[1445,42991+4]..lib/grammarFunctor.ml[1445,42991+24])
                                  Tmod_apply
                                  module_expr (lib/grammarFunctor.ml[1445,42991+4]..lib/grammarFunctor.ml[1445,42991+21])
                                    Tmod_apply
                                    module_expr (lib/grammarFunctor.ml[1445,42991+4]..lib/grammarFunctor.ml[1445,42991+18])
                                      module_expr (lib/grammarFunctor.ml[1445,42991+4]..lib/grammarFunctor.ml[1445,42991+18])
                                        Tmod_ident "Gbnf_parser!.FixSolver.Make"
                                    module_expr (lib/grammarFunctor.ml[1445,42991+19]..lib/grammarFunctor.ml[1445,42991+20])
                                      Tmod_ident "M/4337"
                                  module_expr (lib/grammarFunctor.ml[1445,42991+22]..lib/grammarFunctor.ml[1445,42991+23])
                                    Tmod_ident "P/4329"
                            structure_item (lib/grammarFunctor.ml[1450,43097+2]..lib/grammarFunctor.ml[1456,43309+8])
                              Tstr_value Nonrec
                              [
                                <def>
                                  pattern (lib/grammarFunctor.ml[1450,43097+6]..lib/grammarFunctor.ml[1450,43097+8])
                                    Tpat_construct "()"
                                    []
                                    None
                                  expression (lib/grammarFunctor.ml[1451,43108+4]..lib/grammarFunctor.ml[1456,43309+8])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/grammarFunctor.ml[1451,43108+8]..lib/grammarFunctor.ml[1451,43108+13])
                                          Tpat_var "sharp/4420"
                                        expression (lib/grammarFunctor.ml[1451,43108+16]..lib/grammarFunctor.ml[1451,43108+41])
                                          Texp_apply
                                          expression (lib/grammarFunctor.ml[1451,43108+16]..lib/grammarFunctor.ml[1451,43108+26])
                                            Texp_ident "P/4329.terminal"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[1451,43108+27]..lib/grammarFunctor.ml[1451,43108+41])
                                                Texp_ident "Terminal/2246.sharp"
                                          ]
                                    ]
                                    expression (lib/grammarFunctor.ml[1452,43153+4]..lib/grammarFunctor.ml[1456,43309+8])
                                      Texp_for "nt/4421" Up
                                      expression (lib/grammarFunctor.ml[1452,43153+13]..lib/grammarFunctor.ml[1452,43153+14])
                                        Texp_constant Const_int 0
                                      expression (lib/grammarFunctor.ml[1452,43153+18]..lib/grammarFunctor.ml[1452,43153+39])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[1452,43153+36]..lib/grammarFunctor.ml[1452,43153+37])
                                          Texp_ident "Stdlib!.-"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[1452,43153+18]..lib/grammarFunctor.ml[1452,43153+35])
                                              Texp_ident "Nonterminal/2057.start"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[1452,43153+38]..lib/grammarFunctor.ml[1452,43153+39])
                                              Texp_constant Const_int 1
                                        ]
                                      expression (lib/grammarFunctor.ml[1453,43196+6]..lib/grammarFunctor.ml[1455,43278+30])
                                        Texp_sequence
                                        expression (lib/grammarFunctor.ml[1453,43196+6]..lib/grammarFunctor.ml[1453,43196+47])
                                          Texp_assert                                          expression (lib/grammarFunctor.ml[1453,43196+13]..lib/grammarFunctor.ml[1453,43196+47])
                                            Texp_apply
                                            expression (lib/grammarFunctor.ml[1453,43196+14]..lib/grammarFunctor.ml[1453,43196+43])
                                              Texp_ident "Nonterminal/2057.is_internal_start"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[1453,43196+44]..lib/grammarFunctor.ml[1453,43196+46])
                                                  Texp_ident "nt/4421"
                                            ]
                                        expression (lib/grammarFunctor.ml[1455,43278+6]..lib/grammarFunctor.ml[1455,43278+30])
                                          Texp_apply
                                          expression (lib/grammarFunctor.ml[1455,43278+6]..lib/grammarFunctor.ml[1455,43278+21])
                                            Texp_ident "S/4419.record_ConVar"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[1455,43278+22]..lib/grammarFunctor.ml[1455,43278+27])
                                                Texp_ident "sharp/4420"
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[1455,43278+28]..lib/grammarFunctor.ml[1455,43278+30])
                                                Texp_ident "nt/4421"
                                          ]
                              ]
                            structure_item (lib/grammarFunctor.ml[1462,43572+2]..lib/grammarFunctor.ml[1480,44303+22])
                              Tstr_value Nonrec
                              [
                                <def>
                                  pattern (lib/grammarFunctor.ml[1462,43572+6]..lib/grammarFunctor.ml[1462,43572+8])
                                    Tpat_construct "()"
                                    []
                                    None
                                  expression (lib/grammarFunctor.ml[1463,43583+4]..lib/grammarFunctor.ml[1480,44303+22])
                                    Texp_apply
                                    expression (lib/grammarFunctor.ml[1463,43583+4]..lib/grammarFunctor.ml[1463,43583+15])
                                      Texp_ident "Stdlib!.Array.iteri"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/grammarFunctor.ml[1463,43583+16]..lib/grammarFunctor.ml[1480,44303+5])
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (lib/grammarFunctor.ml[1463,43583+21]..lib/grammarFunctor.ml[1463,43583+25])
                                                Tpat_var "prod/4422"
                                              expression (lib/grammarFunctor.ml[1463,43583+26]..lib/grammarFunctor.ml[1479,44291+11]) ghost
                                                Texp_function
                                                Nolabel
                                                [
                                                  <case>
                                                    pattern (lib/grammarFunctor.ml[1463,43583+26]..lib/grammarFunctor.ml[1463,43583+36])
                                                      Tpat_tuple
                                                      [
                                                        pattern (lib/grammarFunctor.ml[1463,43583+27]..lib/grammarFunctor.ml[1463,43583+30])
                                                          Tpat_var "nt1/4423"
                                                        pattern (lib/grammarFunctor.ml[1463,43583+32]..lib/grammarFunctor.ml[1463,43583+35])
                                                          Tpat_var "rhs/4424"
                                                      ]
                                                    expression (lib/grammarFunctor.ml[1465,43702+6]..lib/grammarFunctor.ml[1479,44291+11])
                                                      Texp_apply
                                                      expression (lib/grammarFunctor.ml[1465,43702+6]..lib/grammarFunctor.ml[1465,43702+17])
                                                        Texp_ident "Stdlib!.Array.iteri"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[1465,43702+18]..lib/grammarFunctor.ml[1479,44291+7])
                                                            Texp_function
                                                            Nolabel
                                                            [
                                                              <case>
                                                                pattern (lib/grammarFunctor.ml[1465,43702+23]..lib/grammarFunctor.ml[1465,43702+24])
                                                                  Tpat_var "i/4425"
                                                                expression (lib/grammarFunctor.ml[1465,43702+25]..lib/grammarFunctor.ml[1478,44253+37]) ghost
                                                                  Texp_function
                                                                  Nolabel
                                                                  [
                                                                    <case>
                                                                      pattern (lib/grammarFunctor.ml[1465,43702+25]..lib/grammarFunctor.ml[1465,43702+31])
                                                                        Tpat_var "symbol/4426"
                                                                      expression (lib/grammarFunctor.ml[1466,43737+8]..lib/grammarFunctor.ml[1478,44253+37])
                                                                        Texp_match
                                                                        expression (lib/grammarFunctor.ml[1466,43737+14]..lib/grammarFunctor.ml[1466,43737+20])
                                                                          Texp_ident "symbol/4426"
                                                                        [
                                                                          <case>
                                                                            pattern (lib/grammarFunctor.ml[1467,43763+10]..lib/grammarFunctor.ml[1467,43763+20])
                                                                              Tpat_value
                                                                              pattern (lib/grammarFunctor.ml[1467,43763+10]..lib/grammarFunctor.ml[1467,43763+20])
                                                                                Tpat_construct "Symbol.T"
                                                                                [
                                                                                  pattern (lib/grammarFunctor.ml[1467,43763+19]..lib/grammarFunctor.ml[1467,43763+20])
                                                                                    Tpat_any
                                                                                ]
                                                                                None
                                                                            expression (lib/grammarFunctor.ml[1468,43787+12]..lib/grammarFunctor.ml[1468,43787+14])
                                                                              Texp_construct "()"
                                                                              []
                                                                          <case>
                                                                            pattern (lib/grammarFunctor.ml[1469,43802+10]..lib/grammarFunctor.ml[1469,43802+22])
                                                                              Tpat_value
                                                                              pattern (lib/grammarFunctor.ml[1469,43802+10]..lib/grammarFunctor.ml[1469,43802+22])
                                                                                Tpat_construct "Symbol.N"
                                                                                [
                                                                                  pattern (lib/grammarFunctor.ml[1469,43802+19]..lib/grammarFunctor.ml[1469,43802+22])
                                                                                    Tpat_var "nt2/4427"
                                                                                ]
                                                                                None
                                                                            expression (lib/grammarFunctor.ml[1470,43828+12]..lib/grammarFunctor.ml[1478,44253+37])
                                                                              Texp_let Nonrec
                                                                              [
                                                                                <def>
                                                                                  pattern (lib/grammarFunctor.ml[1470,43828+16]..lib/grammarFunctor.ml[1470,43828+24])
                                                                                    Tpat_var "nullable/4428"
                                                                                  expression (lib/grammarFunctor.ml[1470,43828+27]..lib/grammarFunctor.ml[1470,43828+57])
                                                                                    Texp_apply
                                                                                    expression (lib/grammarFunctor.ml[1470,43828+27]..lib/grammarFunctor.ml[1470,43828+46])
                                                                                      Texp_ident "NULLABLE/4123.production"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/grammarFunctor.ml[1470,43828+47]..lib/grammarFunctor.ml[1470,43828+51])
                                                                                          Texp_ident "prod/4422"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/grammarFunctor.ml[1470,43828+52]..lib/grammarFunctor.ml[1470,43828+57])
                                                                                          Texp_apply
                                                                                          expression (lib/grammarFunctor.ml[1470,43828+54]..lib/grammarFunctor.ml[1470,43828+55])
                                                                                            Texp_ident "Stdlib!.+"
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (lib/grammarFunctor.ml[1470,43828+53]..lib/grammarFunctor.ml[1470,43828+54])
                                                                                                Texp_ident "i/4425"
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (lib/grammarFunctor.ml[1470,43828+55]..lib/grammarFunctor.ml[1470,43828+56])
                                                                                                Texp_constant Const_int 1
                                                                                          ]
                                                                                    ]
                                                                                <def>
                                                                                  pattern (lib/grammarFunctor.ml[1471,43886+16]..lib/grammarFunctor.ml[1471,43886+21])
                                                                                    Tpat_var "first/4429"
                                                                                  expression (lib/grammarFunctor.ml[1471,43886+24]..lib/grammarFunctor.ml[1471,43886+42])
                                                                                    Texp_apply
                                                                                    expression (lib/grammarFunctor.ml[1471,43886+24]..lib/grammarFunctor.ml[1471,43886+31])
                                                                                      Texp_ident "P/4329.first"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/grammarFunctor.ml[1471,43886+32]..lib/grammarFunctor.ml[1471,43886+36])
                                                                                          Texp_ident "prod/4422"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/grammarFunctor.ml[1471,43886+37]..lib/grammarFunctor.ml[1471,43886+42])
                                                                                          Texp_apply
                                                                                          expression (lib/grammarFunctor.ml[1471,43886+39]..lib/grammarFunctor.ml[1471,43886+40])
                                                                                            Texp_ident "Stdlib!.+"
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (lib/grammarFunctor.ml[1471,43886+38]..lib/grammarFunctor.ml[1471,43886+39])
                                                                                                Texp_ident "i/4425"
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (lib/grammarFunctor.ml[1471,43886+40]..lib/grammarFunctor.ml[1471,43886+41])
                                                                                                Texp_constant Const_int 1
                                                                                          ]
                                                                                    ]
                                                                              ]
                                                                              expression (lib/grammarFunctor.ml[1474,44059+12]..lib/grammarFunctor.ml[1478,44253+37])
                                                                                Texp_sequence
                                                                                expression (lib/grammarFunctor.ml[1474,44059+12]..lib/grammarFunctor.ml[1474,44059+37])
                                                                                  Texp_apply
                                                                                  expression (lib/grammarFunctor.ml[1474,44059+12]..lib/grammarFunctor.ml[1474,44059+27])
                                                                                    Texp_ident "S/4419.record_ConVar"
                                                                                  [
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (lib/grammarFunctor.ml[1474,44059+28]..lib/grammarFunctor.ml[1474,44059+33])
                                                                                        Texp_ident "first/4429"
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (lib/grammarFunctor.ml[1474,44059+34]..lib/grammarFunctor.ml[1474,44059+37])
                                                                                        Texp_ident "nt2/4427"
                                                                                  ]
                                                                                expression (lib/grammarFunctor.ml[1477,44224+12]..lib/grammarFunctor.ml[1478,44253+37])
                                                                                  Texp_ifthenelse
                                                                                  expression (lib/grammarFunctor.ml[1477,44224+15]..lib/grammarFunctor.ml[1477,44224+23])
                                                                                    Texp_ident "nullable/4428"
                                                                                  expression (lib/grammarFunctor.ml[1478,44253+14]..lib/grammarFunctor.ml[1478,44253+37])
                                                                                    Texp_apply
                                                                                    expression (lib/grammarFunctor.ml[1478,44253+14]..lib/grammarFunctor.ml[1478,44253+29])
                                                                                      Texp_ident "S/4419.record_VarVar"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/grammarFunctor.ml[1478,44253+30]..lib/grammarFunctor.ml[1478,44253+33])
                                                                                          Texp_ident "nt1/4423"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/grammarFunctor.ml[1478,44253+34]..lib/grammarFunctor.ml[1478,44253+37])
                                                                                          Texp_ident "nt2/4427"
                                                                                    ]
                                                                                  None
                                                                        ]
                                                                  ]
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[1479,44291+8]..lib/grammarFunctor.ml[1479,44291+11])
                                                            Texp_ident "rhs/4424"
                                                      ]
                                                ]
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (lib/grammarFunctor.ml[1480,44303+6]..lib/grammarFunctor.ml[1480,44303+22])
                                          Texp_ident "Production/3564.table"
                                    ]
                              ]
                            structure_item (lib/grammarFunctor.ml[1484,44382+2]..lib/grammarFunctor.ml[1488,44544+5])
                              Tstr_value Nonrec
                              [
                                <def>
                                  pattern (lib/grammarFunctor.ml[1484,44382+6]..lib/grammarFunctor.ml[1484,44382+12])
                                    extra
                                      Tpat_extra_constraint
                                      core_type (lib/grammarFunctor.ml[1484,44382+15]..lib/grammarFunctor.ml[1484,44382+51])
                                        Ttyp_constr "Stdlib!.Lazy.t"
                                        [
                                          core_type (lib/grammarFunctor.ml[1484,44382+16]..lib/grammarFunctor.ml[1484,44382+43])
                                            Ttyp_arrow
                                            Nolabel
                                            core_type (lib/grammarFunctor.ml[1484,44382+16]..lib/grammarFunctor.ml[1484,44382+29])
                                              Ttyp_constr "Nonterminal/2057.t"
                                              []
                                            core_type (lib/grammarFunctor.ml[1484,44382+33]..lib/grammarFunctor.ml[1484,44382+43])
                                              Ttyp_constr "P/4329.property"
                                              []
                                        ]
                                    Tpat_alias "follow/4431"
                                    pattern (lib/grammarFunctor.ml[1484,44382+6]..lib/grammarFunctor.ml[1484,44382+12])
                                      Tpat_any
                                  expression (lib/grammarFunctor.ml[1485,44436+4]..lib/grammarFunctor.ml[1488,44544+5])
                                    extra
                                      Texp_constraint
                                      core_type (lib/grammarFunctor.ml[1484,44382+15]..lib/grammarFunctor.ml[1484,44382+51])
                                        Ttyp_constr "Stdlib!.Lazy.t"
                                        [
                                          core_type (lib/grammarFunctor.ml[1484,44382+16]..lib/grammarFunctor.ml[1484,44382+43])
                                            Ttyp_arrow
                                            Nolabel
                                            core_type (lib/grammarFunctor.ml[1484,44382+16]..lib/grammarFunctor.ml[1484,44382+29])
                                              Ttyp_constr "Nonterminal/2057.t"
                                              []
                                            core_type (lib/grammarFunctor.ml[1484,44382+33]..lib/grammarFunctor.ml[1484,44382+43])
                                              Ttyp_constr "P/4329.property"
                                              []
                                        ]
                                    Texp_lazy                                    expression (lib/grammarFunctor.ml[1485,44436+9]..lib/grammarFunctor.ml[1488,44544+5])
                                      Texp_letmodule "S/4447"
                                      module_expr (lib/grammarFunctor.ml[1486,44447+21]..lib/grammarFunctor.ml[1486,44447+28])
                                        Tmod_apply_unit
                                        module_expr (lib/grammarFunctor.ml[1486,44447+21]..lib/grammarFunctor.ml[1486,44447+28])
                                          Tmod_ident "S/4419.Solve"
                                      expression (lib/grammarFunctor.ml[1487,44481+6]..lib/grammarFunctor.ml[1487,44481+62])
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[1487,44481+10]..lib/grammarFunctor.ml[1487,44481+12])
                                              Tpat_var "nt/4448"
                                            expression (lib/grammarFunctor.ml[1487,44481+16]..lib/grammarFunctor.ml[1487,44481+62])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[1487,44481+16]..lib/grammarFunctor.ml[1487,44481+28])
                                                Texp_ident "Stdlib!.Option.value"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[1487,44481+29]..lib/grammarFunctor.ml[1487,44481+44])
                                                    Texp_apply
                                                    expression (lib/grammarFunctor.ml[1487,44481+30]..lib/grammarFunctor.ml[1487,44481+40])
                                                      Texp_ident "S/4447.solution"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[1487,44481+41]..lib/grammarFunctor.ml[1487,44481+43])
                                                          Texp_ident "nt/4448"
                                                    ]
                                                <arg>
                                                  Labelled "default"
                                                  expression (lib/grammarFunctor.ml[1487,44481+54]..lib/grammarFunctor.ml[1487,44481+62])
                                                    Texp_ident "P/4329.bottom"
                                              ]
                                        ]
                              ]
                            structure_item (lib/grammarFunctor.ml[1490,44551+2]..lib/grammarFunctor.ml[1491,44596+36])
                              Tstr_value Nonrec
                              [
                                <def>
                                  pattern (lib/grammarFunctor.ml[1490,44551+6]..lib/grammarFunctor.ml[1490,44551+12])
                                    extra
                                      Tpat_extra_constraint
                                      core_type (lib/grammarFunctor.ml[1490,44551+15]..lib/grammarFunctor.ml[1490,44551+42])
                                        Ttyp_arrow
                                        Nolabel
                                        core_type (lib/grammarFunctor.ml[1490,44551+15]..lib/grammarFunctor.ml[1490,44551+28])
                                          Ttyp_constr "Nonterminal/2057.t"
                                          []
                                        core_type (lib/grammarFunctor.ml[1490,44551+32]..lib/grammarFunctor.ml[1490,44551+42])
                                          Ttyp_constr "P/4329.property"
                                          []
                                    Tpat_alias "follow/4449"
                                    pattern (lib/grammarFunctor.ml[1490,44551+6]..lib/grammarFunctor.ml[1490,44551+12])
                                      Tpat_any
                                  expression (lib/grammarFunctor.ml[1491,44596+4]..lib/grammarFunctor.ml[1491,44596+36])
                                    extra
                                      Texp_constraint
                                      core_type (lib/grammarFunctor.ml[1490,44551+15]..lib/grammarFunctor.ml[1490,44551+42])
                                        Ttyp_arrow
                                        Nolabel
                                        core_type (lib/grammarFunctor.ml[1490,44551+15]..lib/grammarFunctor.ml[1490,44551+28])
                                          Ttyp_constr "Nonterminal/2057.t"
                                          []
                                        core_type (lib/grammarFunctor.ml[1490,44551+32]..lib/grammarFunctor.ml[1490,44551+42])
                                          Ttyp_constr "P/4329.property"
                                          []
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (lib/grammarFunctor.ml[1491,44596+8]..lib/grammarFunctor.ml[1491,44596+10])
                                          Tpat_var "nt/4450"
                                        expression (lib/grammarFunctor.ml[1491,44596+14]..lib/grammarFunctor.ml[1491,44596+36])
                                          Texp_apply
                                          expression (lib/grammarFunctor.ml[1491,44596+14]..lib/grammarFunctor.ml[1491,44596+33])
                                            Texp_apply
                                            expression (lib/grammarFunctor.ml[1491,44596+15]..lib/grammarFunctor.ml[1491,44596+25])
                                              Texp_ident "Stdlib!.Lazy.force"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[1491,44596+26]..lib/grammarFunctor.ml[1491,44596+32])
                                                  Texp_ident "follow/4431"
                                            ]
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[1491,44596+34]..lib/grammarFunctor.ml[1491,44596+36])
                                                Texp_ident "nt/4450"
                                          ]
                                    ]
                              ]
                          ]
                structure_item (lib/grammarFunctor.ml[1497,44715+0]..lib/grammarFunctor.ml[1503,44888+10])
                  Tstr_value Nonrec
                  [
                    <def>
                      pattern (lib/grammarFunctor.ml[1497,44715+4]..lib/grammarFunctor.ml[1497,44715+10])
                        extra
                          Tpat_extra_constraint
                          core_type (lib/grammarFunctor.ml[1497,44715+13]..lib/grammarFunctor.ml[1497,44715+43])
                            Ttyp_arrow
                            Nolabel
                            core_type (lib/grammarFunctor.ml[1497,44715+13]..lib/grammarFunctor.ml[1497,44715+26])
                              Ttyp_constr "Nonterminal/2057.t"
                              []
                            core_type (lib/grammarFunctor.ml[1497,44715+30]..lib/grammarFunctor.ml[1497,44715+43])
                              Ttyp_constr "TerminalSet/2387.t"
                              []
                        Tpat_alias "follow/4510"
                        pattern (lib/grammarFunctor.ml[1497,44715+4]..lib/grammarFunctor.ml[1497,44715+10])
                          Tpat_any
                      expression (lib/grammarFunctor.ml[1498,44761+2]..lib/grammarFunctor.ml[1503,44888+10])
                        extra
                          Texp_constraint
                          core_type (lib/grammarFunctor.ml[1497,44715+13]..lib/grammarFunctor.ml[1497,44715+43])
                            Ttyp_arrow
                            Nolabel
                            core_type (lib/grammarFunctor.ml[1497,44715+13]..lib/grammarFunctor.ml[1497,44715+26])
                              Ttyp_constr "Nonterminal/2057.t"
                              []
                            core_type (lib/grammarFunctor.ml[1497,44715+30]..lib/grammarFunctor.ml[1497,44715+43])
                              Ttyp_constr "TerminalSet/2387.t"
                              []
                        Texp_letmodule "F/4640"
                        module_expr (lib/grammarFunctor.ml[1498,44761+17]..lib/grammarFunctor.ml[1502,44878+6])
                          Tmod_apply
                          module_expr (lib/grammarFunctor.ml[1498,44761+17]..lib/grammarFunctor.ml[1498,44761+23])
                            Tmod_ident "FOLLOW/4509"
                          module_expr (lib/grammarFunctor.ml[1498,44761+24]..lib/grammarFunctor.ml[1502,44878+5])
                            Tmod_structure
                            [
                              structure_item (lib/grammarFunctor.ml[1499,44792+4]..lib/grammarFunctor.ml[1499,44792+23])
                                Tstr_include                                module_expr (lib/grammarFunctor.ml[1499,44792+12]..lib/grammarFunctor.ml[1499,44792+23])
                                  Tmod_ident "TerminalSet/2387"
                              structure_item (lib/grammarFunctor.ml[1500,44816+4]..lib/grammarFunctor.ml[1500,44816+28])
                                Tstr_value Nonrec
                                [
                                  <def>
                                    pattern (lib/grammarFunctor.ml[1500,44816+8]..lib/grammarFunctor.ml[1500,44816+16])
                                      Tpat_var "terminal/4538"
                                    expression (lib/grammarFunctor.ml[1500,44816+19]..lib/grammarFunctor.ml[1500,44816+28])
                                      Texp_ident "singleton/4516"
                                ]
                              structure_item (lib/grammarFunctor.ml[1501,44845+4]..lib/grammarFunctor.ml[1501,44845+32])
                                Tstr_value Nonrec
                                [
                                  <def>
                                    pattern (lib/grammarFunctor.ml[1501,44845+8]..lib/grammarFunctor.ml[1501,44845+13])
                                      Tpat_var "first/4539"
                                    expression (lib/grammarFunctor.ml[1501,44845+16]..lib/grammarFunctor.ml[1501,44845+32])
                                      Texp_ident "FIRST/4150.production"
                                ]
                            ]
                        expression (lib/grammarFunctor.ml[1503,44888+2]..lib/grammarFunctor.ml[1503,44888+10])
                          Texp_ident "F/4640.follow"
                  ]
                structure_item (lib/grammarFunctor.ml[1521,45467+0]..lib/grammarFunctor.ml[1550,46455+3])
                  Tstr_value Nonrec
                  [
                    <def>
                      pattern (lib/grammarFunctor.ml[1521,45467+4]..lib/grammarFunctor.ml[1521,45467+11])
                        extra
                          Tpat_extra_constraint
                          core_type (lib/grammarFunctor.ml[1521,45467+14]..lib/grammarFunctor.ml[1521,45467+40])
                            Ttyp_constr "Stdlib!.Lazy.t"
                            [
                              core_type (lib/grammarFunctor.ml[1521,45467+14]..lib/grammarFunctor.ml[1521,45467+33])
                                Ttyp_constr "array/8!"
                                [
                                  core_type (lib/grammarFunctor.ml[1521,45467+14]..lib/grammarFunctor.ml[1521,45467+27])
                                    Ttyp_constr "TerminalSet/2387.t"
                                    []
                                ]
                            ]
                        Tpat_alias "tfollow/4641"
                        pattern (lib/grammarFunctor.ml[1521,45467+4]..lib/grammarFunctor.ml[1521,45467+11])
                          Tpat_any
                      expression (lib/grammarFunctor.ml[1522,45510+2]..lib/grammarFunctor.ml[1550,46455+3])
                        extra
                          Texp_constraint
                          core_type (lib/grammarFunctor.ml[1521,45467+14]..lib/grammarFunctor.ml[1521,45467+40])
                            Ttyp_constr "Stdlib!.Lazy.t"
                            [
                              core_type (lib/grammarFunctor.ml[1521,45467+14]..lib/grammarFunctor.ml[1521,45467+33])
                                Ttyp_constr "array/8!"
                                [
                                  core_type (lib/grammarFunctor.ml[1521,45467+14]..lib/grammarFunctor.ml[1521,45467+27])
                                    Ttyp_constr "TerminalSet/2387.t"
                                    []
                                ]
                            ]
                        Texp_lazy                        expression (lib/grammarFunctor.ml[1522,45510+7]..lib/grammarFunctor.ml[1550,46455+3])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1524,45520+8]..lib/grammarFunctor.ml[1524,45520+15])
                                Tpat_var "tfollow/4642"
                              expression (lib/grammarFunctor.ml[1525,45538+6]..lib/grammarFunctor.ml[1525,45538+45])
                                Texp_apply
                                expression (lib/grammarFunctor.ml[1525,45538+6]..lib/grammarFunctor.ml[1525,45538+16])
                                  Texp_ident "Stdlib!.Array.make"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/grammarFunctor.ml[1525,45538+17]..lib/grammarFunctor.ml[1525,45538+27])
                                      Texp_ident "Terminal/2246.n"
                                  <arg>
                                    Nolabel
                                    expression (lib/grammarFunctor.ml[1525,45538+28]..lib/grammarFunctor.ml[1525,45538+45])
                                      Texp_ident "TerminalSet/2387.empty"
                                ]
                          ]
                          expression (lib/grammarFunctor.ml[1529,45632+4]..lib/grammarFunctor.ml[1548,46442+11])
                            Texp_sequence
                            expression (lib/grammarFunctor.ml[1529,45632+4]..lib/grammarFunctor.ml[1546,46417+22])
                              Texp_apply
                              expression (lib/grammarFunctor.ml[1529,45632+4]..lib/grammarFunctor.ml[1529,45632+15])
                                Texp_ident "Stdlib!.Array.iteri"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/grammarFunctor.ml[1529,45632+16]..lib/grammarFunctor.ml[1546,46417+5])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (lib/grammarFunctor.ml[1529,45632+21]..lib/grammarFunctor.ml[1529,45632+25])
                                          Tpat_var "prod/4643"
                                        expression (lib/grammarFunctor.ml[1529,45632+26]..lib/grammarFunctor.ml[1545,46405+11]) ghost
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (lib/grammarFunctor.ml[1529,45632+26]..lib/grammarFunctor.ml[1529,45632+36])
                                                Tpat_tuple
                                                [
                                                  pattern (lib/grammarFunctor.ml[1529,45632+27]..lib/grammarFunctor.ml[1529,45632+30])
                                                    Tpat_var "nt1/4644"
                                                  pattern (lib/grammarFunctor.ml[1529,45632+32]..lib/grammarFunctor.ml[1529,45632+35])
                                                    Tpat_var "rhs/4645"
                                                ]
                                              expression (lib/grammarFunctor.ml[1531,45747+6]..lib/grammarFunctor.ml[1545,46405+11])
                                                Texp_apply
                                                expression (lib/grammarFunctor.ml[1531,45747+6]..lib/grammarFunctor.ml[1531,45747+17])
                                                  Texp_ident "Stdlib!.Array.iteri"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[1531,45747+18]..lib/grammarFunctor.ml[1545,46405+7])
                                                      Texp_function
                                                      Nolabel
                                                      [
                                                        <case>
                                                          pattern (lib/grammarFunctor.ml[1531,45747+23]..lib/grammarFunctor.ml[1531,45747+24])
                                                            Tpat_var "i/4646"
                                                          expression (lib/grammarFunctor.ml[1531,45747+25]..lib/grammarFunctor.ml[1544,46331+73]) ghost
                                                            Texp_function
                                                            Nolabel
                                                            [
                                                              <case>
                                                                pattern (lib/grammarFunctor.ml[1531,45747+25]..lib/grammarFunctor.ml[1531,45747+31])
                                                                  Tpat_var "symbol/4647"
                                                                expression (lib/grammarFunctor.ml[1532,45782+8]..lib/grammarFunctor.ml[1544,46331+73])
                                                                  Texp_match
                                                                  expression (lib/grammarFunctor.ml[1532,45782+14]..lib/grammarFunctor.ml[1532,45782+20])
                                                                    Texp_ident "symbol/4647"
                                                                  [
                                                                    <case>
                                                                      pattern (lib/grammarFunctor.ml[1533,45808+10]..lib/grammarFunctor.ml[1533,45808+20])
                                                                        Tpat_value
                                                                        pattern (lib/grammarFunctor.ml[1533,45808+10]..lib/grammarFunctor.ml[1533,45808+20])
                                                                          Tpat_construct "Symbol.N"
                                                                          [
                                                                            pattern (lib/grammarFunctor.ml[1533,45808+19]..lib/grammarFunctor.ml[1533,45808+20])
                                                                              Tpat_any
                                                                          ]
                                                                          None
                                                                      expression (lib/grammarFunctor.ml[1534,45832+12]..lib/grammarFunctor.ml[1534,45832+14])
                                                                        Texp_construct "()"
                                                                        []
                                                                    <case>
                                                                      pattern (lib/grammarFunctor.ml[1535,45847+10]..lib/grammarFunctor.ml[1535,45847+21])
                                                                        Tpat_value
                                                                        pattern (lib/grammarFunctor.ml[1535,45847+10]..lib/grammarFunctor.ml[1535,45847+21])
                                                                          Tpat_construct "Symbol.T"
                                                                          [
                                                                            pattern (lib/grammarFunctor.ml[1535,45847+19]..lib/grammarFunctor.ml[1535,45847+21])
                                                                              Tpat_var "t2/4648"
                                                                          ]
                                                                          None
                                                                      expression (lib/grammarFunctor.ml[1536,45872+12]..lib/grammarFunctor.ml[1544,46331+73])
                                                                        Texp_let Nonrec
                                                                        [
                                                                          <def>
                                                                            pattern (lib/grammarFunctor.ml[1536,45872+16]..lib/grammarFunctor.ml[1536,45872+24])
                                                                              Tpat_var "nullable/4649"
                                                                            expression (lib/grammarFunctor.ml[1536,45872+27]..lib/grammarFunctor.ml[1536,45872+57])
                                                                              Texp_apply
                                                                              expression (lib/grammarFunctor.ml[1536,45872+27]..lib/grammarFunctor.ml[1536,45872+46])
                                                                                Texp_ident "NULLABLE/4123.production"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (lib/grammarFunctor.ml[1536,45872+47]..lib/grammarFunctor.ml[1536,45872+51])
                                                                                    Texp_ident "prod/4643"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (lib/grammarFunctor.ml[1536,45872+52]..lib/grammarFunctor.ml[1536,45872+57])
                                                                                    Texp_apply
                                                                                    expression (lib/grammarFunctor.ml[1536,45872+54]..lib/grammarFunctor.ml[1536,45872+55])
                                                                                      Texp_ident "Stdlib!.+"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/grammarFunctor.ml[1536,45872+53]..lib/grammarFunctor.ml[1536,45872+54])
                                                                                          Texp_ident "i/4646"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/grammarFunctor.ml[1536,45872+55]..lib/grammarFunctor.ml[1536,45872+56])
                                                                                          Texp_constant Const_int 1
                                                                                    ]
                                                                              ]
                                                                          <def>
                                                                            pattern (lib/grammarFunctor.ml[1537,45930+16]..lib/grammarFunctor.ml[1537,45930+21])
                                                                              Tpat_var "first/4650"
                                                                            expression (lib/grammarFunctor.ml[1537,45930+24]..lib/grammarFunctor.ml[1537,45930+51])
                                                                              Texp_apply
                                                                              expression (lib/grammarFunctor.ml[1537,45930+24]..lib/grammarFunctor.ml[1537,45930+40])
                                                                                Texp_ident "FIRST/4150.production"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (lib/grammarFunctor.ml[1537,45930+41]..lib/grammarFunctor.ml[1537,45930+45])
                                                                                    Texp_ident "prod/4643"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (lib/grammarFunctor.ml[1537,45930+46]..lib/grammarFunctor.ml[1537,45930+51])
                                                                                    Texp_apply
                                                                                    expression (lib/grammarFunctor.ml[1537,45930+48]..lib/grammarFunctor.ml[1537,45930+49])
                                                                                      Texp_ident "Stdlib!.+"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/grammarFunctor.ml[1537,45930+47]..lib/grammarFunctor.ml[1537,45930+48])
                                                                                          Texp_ident "i/4646"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/grammarFunctor.ml[1537,45930+49]..lib/grammarFunctor.ml[1537,45930+50])
                                                                                          Texp_constant Const_int 1
                                                                                    ]
                                                                              ]
                                                                        ]
                                                                        expression (lib/grammarFunctor.ml[1540,46111+12]..lib/grammarFunctor.ml[1544,46331+73])
                                                                          Texp_sequence
                                                                          expression (lib/grammarFunctor.ml[1540,46111+12]..lib/grammarFunctor.ml[1540,46111+64])
                                                                            Texp_apply
                                                                            expression (lib/grammarFunctor.ml[1540,46111+12]..lib/grammarFunctor.ml[1540,46111+64]) ghost
                                                                              Texp_ident "Stdlib!.Array.set"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (lib/grammarFunctor.ml[1540,46111+12]..lib/grammarFunctor.ml[1540,46111+19])
                                                                                  Texp_ident "tfollow/4642"
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (lib/grammarFunctor.ml[1540,46111+21]..lib/grammarFunctor.ml[1540,46111+23])
                                                                                  Texp_ident "t2/4648"
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (lib/grammarFunctor.ml[1540,46111+28]..lib/grammarFunctor.ml[1540,46111+64])
                                                                                  Texp_apply
                                                                                  expression (lib/grammarFunctor.ml[1540,46111+28]..lib/grammarFunctor.ml[1540,46111+45])
                                                                                    Texp_ident "TerminalSet/2387.union"
                                                                                  [
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (lib/grammarFunctor.ml[1540,46111+46]..lib/grammarFunctor.ml[1540,46111+51])
                                                                                        Texp_ident "first/4650"
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (lib/grammarFunctor.ml[1540,46111+52]..lib/grammarFunctor.ml[1540,46111+64])
                                                                                        Texp_apply
                                                                                        expression (lib/grammarFunctor.ml[1540,46111+52]..lib/grammarFunctor.ml[1540,46111+64]) ghost
                                                                                          Texp_ident "Stdlib!.Array.get"
                                                                                        [
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (lib/grammarFunctor.ml[1540,46111+52]..lib/grammarFunctor.ml[1540,46111+59])
                                                                                              Texp_ident "tfollow/4642"
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (lib/grammarFunctor.ml[1540,46111+61]..lib/grammarFunctor.ml[1540,46111+63])
                                                                                              Texp_ident "t2/4648"
                                                                                        ]
                                                                                  ]
                                                                            ]
                                                                          expression (lib/grammarFunctor.ml[1543,46302+12]..lib/grammarFunctor.ml[1544,46331+73])
                                                                            Texp_ifthenelse
                                                                            expression (lib/grammarFunctor.ml[1543,46302+15]..lib/grammarFunctor.ml[1543,46302+23])
                                                                              Texp_ident "nullable/4649"
                                                                            expression (lib/grammarFunctor.ml[1544,46331+14]..lib/grammarFunctor.ml[1544,46331+73])
                                                                              Texp_apply
                                                                              expression (lib/grammarFunctor.ml[1544,46331+14]..lib/grammarFunctor.ml[1544,46331+73]) ghost
                                                                                Texp_ident "Stdlib!.Array.set"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (lib/grammarFunctor.ml[1544,46331+14]..lib/grammarFunctor.ml[1544,46331+21])
                                                                                    Texp_ident "tfollow/4642"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (lib/grammarFunctor.ml[1544,46331+23]..lib/grammarFunctor.ml[1544,46331+25])
                                                                                    Texp_ident "t2/4648"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (lib/grammarFunctor.ml[1544,46331+30]..lib/grammarFunctor.ml[1544,46331+73])
                                                                                    Texp_apply
                                                                                    expression (lib/grammarFunctor.ml[1544,46331+30]..lib/grammarFunctor.ml[1544,46331+47])
                                                                                      Texp_ident "TerminalSet/2387.union"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/grammarFunctor.ml[1544,46331+48]..lib/grammarFunctor.ml[1544,46331+60])
                                                                                          Texp_apply
                                                                                          expression (lib/grammarFunctor.ml[1544,46331+49]..lib/grammarFunctor.ml[1544,46331+55])
                                                                                            Texp_ident "follow/4510"
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (lib/grammarFunctor.ml[1544,46331+56]..lib/grammarFunctor.ml[1544,46331+59])
                                                                                                Texp_ident "nt1/4644"
                                                                                          ]
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/grammarFunctor.ml[1544,46331+61]..lib/grammarFunctor.ml[1544,46331+73])
                                                                                          Texp_apply
                                                                                          expression (lib/grammarFunctor.ml[1544,46331+61]..lib/grammarFunctor.ml[1544,46331+73]) ghost
                                                                                            Texp_ident "Stdlib!.Array.get"
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (lib/grammarFunctor.ml[1544,46331+61]..lib/grammarFunctor.ml[1544,46331+68])
                                                                                                Texp_ident "tfollow/4642"
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (lib/grammarFunctor.ml[1544,46331+70]..lib/grammarFunctor.ml[1544,46331+72])
                                                                                                Texp_ident "t2/4648"
                                                                                          ]
                                                                                    ]
                                                                              ]
                                                                            None
                                                                  ]
                                                            ]
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[1545,46405+8]..lib/grammarFunctor.ml[1545,46405+11])
                                                      Texp_ident "rhs/4645"
                                                ]
                                          ]
                                    ]
                                <arg>
                                  Nolabel
                                  expression (lib/grammarFunctor.ml[1546,46417+6]..lib/grammarFunctor.ml[1546,46417+22])
                                    Texp_ident "Production/3564.table"
                              ]
                            expression (lib/grammarFunctor.ml[1548,46442+4]..lib/grammarFunctor.ml[1548,46442+11])
                              Texp_ident "tfollow/4642"
                  ]
                structure_item (lib/grammarFunctor.ml[1554,46492+0]..lib/grammarFunctor.ml[1555,46508+26])
                  Tstr_value Nonrec
                  [
                    <def>
                      pattern (lib/grammarFunctor.ml[1554,46492+4]..lib/grammarFunctor.ml[1554,46492+11])
                        Tpat_var "tfollow/4652"
                      expression (lib/grammarFunctor.ml[1554,46492+12]..lib/grammarFunctor.ml[1555,46508+26]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (lib/grammarFunctor.ml[1554,46492+12]..lib/grammarFunctor.ml[1554,46492+13])
                              Tpat_var "t/4653"
                            expression (lib/grammarFunctor.ml[1555,46508+2]..lib/grammarFunctor.ml[1555,46508+26])
                              Texp_apply
                              expression (lib/grammarFunctor.ml[1555,46508+2]..lib/grammarFunctor.ml[1555,46508+26]) ghost
                                Texp_ident "Stdlib!.Array.get"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/grammarFunctor.ml[1555,46508+2]..lib/grammarFunctor.ml[1555,46508+22])
                                    Texp_apply
                                    expression (lib/grammarFunctor.ml[1555,46508+3]..lib/grammarFunctor.ml[1555,46508+13])
                                      Texp_ident "Stdlib!.Lazy.force"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/grammarFunctor.ml[1555,46508+14]..lib/grammarFunctor.ml[1555,46508+21])
                                          Texp_ident "tfollow/4641"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (lib/grammarFunctor.ml[1555,46508+24]..lib/grammarFunctor.ml[1555,46508+25])
                                    Texp_ident "t/4653"
                              ]
                        ]
                  ]
                structure_item (lib/grammarFunctor.ml[1575,47116+0]..lib/grammarFunctor.ml[1592,47763+8])
                  Tstr_value Nonrec
                  [
                    <def>
                      pattern (lib/grammarFunctor.ml[1575,47116+4]..lib/grammarFunctor.ml[1575,47116+10])
                        Tpat_var "sfirst/4654"
                      expression (lib/grammarFunctor.ml[1575,47116+11]..lib/grammarFunctor.ml[1592,47763+8]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (lib/grammarFunctor.ml[1575,47116+11]..lib/grammarFunctor.ml[1575,47116+15])
                              Tpat_var "prod/4656"
                            expression (lib/grammarFunctor.ml[1575,47116+16]..lib/grammarFunctor.ml[1592,47763+8]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (lib/grammarFunctor.ml[1575,47116+16]..lib/grammarFunctor.ml[1575,47116+17])
                                    Tpat_var "i/4657"
                                  expression (lib/grammarFunctor.ml[1576,47136+2]..lib/grammarFunctor.ml[1592,47763+8])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/grammarFunctor.ml[1576,47136+6]..lib/grammarFunctor.ml[1576,47136+9])
                                          Tpat_var "rhs/4658"
                                        expression (lib/grammarFunctor.ml[1576,47136+12]..lib/grammarFunctor.ml[1576,47136+31])
                                          Texp_apply
                                          expression (lib/grammarFunctor.ml[1576,47136+12]..lib/grammarFunctor.ml[1576,47136+26])
                                            Texp_ident "Production/3564.rhs"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[1576,47136+27]..lib/grammarFunctor.ml[1576,47136+31])
                                                Texp_ident "prod/4656"
                                          ]
                                    ]
                                    expression (lib/grammarFunctor.ml[1577,47171+2]..lib/grammarFunctor.ml[1592,47763+8])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (lib/grammarFunctor.ml[1577,47171+6]..lib/grammarFunctor.ml[1577,47171+7])
                                            Tpat_var "n/4659"
                                          expression (lib/grammarFunctor.ml[1577,47171+10]..lib/grammarFunctor.ml[1577,47171+26])
                                            Texp_apply
                                            expression (lib/grammarFunctor.ml[1577,47171+10]..lib/grammarFunctor.ml[1577,47171+22])
                                              Texp_ident "Stdlib!.Array.length"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[1577,47171+23]..lib/grammarFunctor.ml[1577,47171+26])
                                                  Texp_ident "rhs/4658"
                                            ]
                                      ]
                                      expression (lib/grammarFunctor.ml[1578,47201+2]..lib/grammarFunctor.ml[1592,47763+8])
                                        Texp_let Rec
                                        [
                                          <def>
                                            pattern (lib/grammarFunctor.ml[1578,47201+10]..lib/grammarFunctor.ml[1578,47201+14])
                                              Tpat_var "loop/4660"
                                            expression (lib/grammarFunctor.ml[1578,47201+15]..lib/grammarFunctor.ml[1590,47686+71]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[1578,47201+15]..lib/grammarFunctor.ml[1578,47201+16])
                                                    Tpat_var "i/4661"
                                                  expression (lib/grammarFunctor.ml[1579,47220+4]..lib/grammarFunctor.ml[1590,47686+71])
                                                    Texp_ifthenelse
                                                    expression (lib/grammarFunctor.ml[1579,47220+7]..lib/grammarFunctor.ml[1579,47220+12])
                                                      Texp_apply
                                                      expression (lib/grammarFunctor.ml[1579,47220+9]..lib/grammarFunctor.ml[1579,47220+10])
                                                        Texp_ident "Stdlib!.="
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[1579,47220+7]..lib/grammarFunctor.ml[1579,47220+8])
                                                            Texp_ident "i/4661"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[1579,47220+11]..lib/grammarFunctor.ml[1579,47220+12])
                                                            Texp_ident "n/4659"
                                                      ]
                                                    expression (lib/grammarFunctor.ml[1581,47299+6]..lib/grammarFunctor.ml[1581,47299+21])
                                                      Texp_ident "SymbolSet/2738.empty"
                                                    Some
                                                      expression (lib/grammarFunctor.ml[1583,47330+6]..lib/grammarFunctor.ml[1590,47686+71])
                                                        Texp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (lib/grammarFunctor.ml[1583,47330+10]..lib/grammarFunctor.ml[1583,47330+13])
                                                              Tpat_var "sym/4662"
                                                            expression (lib/grammarFunctor.ml[1583,47330+16]..lib/grammarFunctor.ml[1583,47330+23])
                                                              Texp_apply
                                                              expression (lib/grammarFunctor.ml[1583,47330+16]..lib/grammarFunctor.ml[1583,47330+23]) ghost
                                                                Texp_ident "Stdlib!.Array.get"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/grammarFunctor.ml[1583,47330+16]..lib/grammarFunctor.ml[1583,47330+19])
                                                                    Texp_ident "rhs/4658"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/grammarFunctor.ml[1583,47330+21]..lib/grammarFunctor.ml[1583,47330+22])
                                                                    Texp_ident "i/4661"
                                                              ]
                                                        ]
                                                        expression (lib/grammarFunctor.ml[1586,47497+6]..lib/grammarFunctor.ml[1590,47686+71])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[1586,47497+6]..lib/grammarFunctor.ml[1586,47497+21])
                                                            Texp_ident "SymbolSet/2738.union"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[1587,47519+8]..lib/grammarFunctor.ml[1587,47519+33])
                                                                Texp_apply
                                                                expression (lib/grammarFunctor.ml[1587,47519+9]..lib/grammarFunctor.ml[1587,47519+28])
                                                                  Texp_ident "SymbolSet/2738.singleton"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[1587,47519+29]..lib/grammarFunctor.ml[1587,47519+32])
                                                                      Texp_ident "sym/4662"
                                                                ]
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[1590,47686+8]..lib/grammarFunctor.ml[1590,47686+71])
                                                                Texp_ifthenelse
                                                                expression (lib/grammarFunctor.ml[1590,47686+12]..lib/grammarFunctor.ml[1590,47686+31])
                                                                  Texp_apply
                                                                  expression (lib/grammarFunctor.ml[1590,47686+12]..lib/grammarFunctor.ml[1590,47686+27])
                                                                    Texp_ident "NULLABLE/4123.symbol"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[1590,47686+28]..lib/grammarFunctor.ml[1590,47686+31])
                                                                        Texp_ident "sym/4662"
                                                                  ]
                                                                expression (lib/grammarFunctor.ml[1590,47686+37]..lib/grammarFunctor.ml[1590,47686+49])
                                                                  Texp_apply
                                                                  expression (lib/grammarFunctor.ml[1590,47686+37]..lib/grammarFunctor.ml[1590,47686+41])
                                                                    Texp_ident "loop/4660"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[1590,47686+42]..lib/grammarFunctor.ml[1590,47686+49])
                                                                        Texp_apply
                                                                        expression (lib/grammarFunctor.ml[1590,47686+45]..lib/grammarFunctor.ml[1590,47686+46])
                                                                          Texp_ident "Stdlib!.+"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (lib/grammarFunctor.ml[1590,47686+43]..lib/grammarFunctor.ml[1590,47686+44])
                                                                              Texp_ident "i/4661"
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (lib/grammarFunctor.ml[1590,47686+47]..lib/grammarFunctor.ml[1590,47686+48])
                                                                              Texp_constant Const_int 1
                                                                        ]
                                                                  ]
                                                                Some
                                                                  expression (lib/grammarFunctor.ml[1590,47686+55]..lib/grammarFunctor.ml[1590,47686+70])
                                                                    Texp_ident "SymbolSet/2738.empty"
                                                          ]
                                              ]
                                        ]
                                        expression (lib/grammarFunctor.ml[1592,47763+2]..lib/grammarFunctor.ml[1592,47763+8])
                                          Texp_apply
                                          expression (lib/grammarFunctor.ml[1592,47763+2]..lib/grammarFunctor.ml[1592,47763+6])
                                            Texp_ident "loop/4660"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/grammarFunctor.ml[1592,47763+7]..lib/grammarFunctor.ml[1592,47763+8])
                                                Texp_ident "i/4657"
                                          ]
                              ]
                        ]
                  ]
                structure_item (lib/grammarFunctor.ml[1598,47919+0]..lib/grammarFunctor.ml[1605,48167+10])
                  Tstr_value Nonrec
                  [
                    <def>
                      pattern (lib/grammarFunctor.ml[1598,47919+4]..lib/grammarFunctor.ml[1598,47919+11])
                        extra
                          Tpat_extra_constraint
                          core_type (lib/grammarFunctor.ml[1598,47919+14]..lib/grammarFunctor.ml[1598,47919+42])
                            Ttyp_arrow
                            Nolabel
                            core_type (lib/grammarFunctor.ml[1598,47919+14]..lib/grammarFunctor.ml[1598,47919+27])
                              Ttyp_constr "Nonterminal/2057.t"
                              []
                            core_type (lib/grammarFunctor.ml[1598,47919+31]..lib/grammarFunctor.ml[1598,47919+42])
                              Ttyp_constr "SymbolSet/2738.t"
                              []
                        Tpat_alias "sfollow/4663"
                        pattern (lib/grammarFunctor.ml[1598,47919+4]..lib/grammarFunctor.ml[1598,47919+11])
                          Tpat_any
                      expression (lib/grammarFunctor.ml[1599,47964+2]..lib/grammarFunctor.ml[1605,48167+10])
                        extra
                          Texp_constraint
                          core_type (lib/grammarFunctor.ml[1598,47919+14]..lib/grammarFunctor.ml[1598,47919+42])
                            Ttyp_arrow
                            Nolabel
                            core_type (lib/grammarFunctor.ml[1598,47919+14]..lib/grammarFunctor.ml[1598,47919+27])
                              Ttyp_constr "Nonterminal/2057.t"
                              []
                            core_type (lib/grammarFunctor.ml[1598,47919+31]..lib/grammarFunctor.ml[1598,47919+42])
                              Ttyp_constr "SymbolSet/2738.t"
                              []
                        Texp_letmodule "F/4778"
                        module_expr (lib/grammarFunctor.ml[1599,47964+17]..lib/grammarFunctor.ml[1604,48157+6])
                          Tmod_apply
                          module_expr (lib/grammarFunctor.ml[1599,47964+17]..lib/grammarFunctor.ml[1599,47964+23])
                            Tmod_ident "FOLLOW/4509"
                          module_expr (lib/grammarFunctor.ml[1599,47964+24]..lib/grammarFunctor.ml[1604,48157+5])
                            Tmod_structure
                            [
                              structure_item (lib/grammarFunctor.ml[1600,47995+4]..lib/grammarFunctor.ml[1600,47995+33])
                                Tstr_value Nonrec
                                [
                                  <def>
                                    pattern (lib/grammarFunctor.ml[1600,47995+8]..lib/grammarFunctor.ml[1600,47995+14])
                                      Tpat_var "bottom/4664"
                                    expression (lib/grammarFunctor.ml[1600,47995+17]..lib/grammarFunctor.ml[1600,47995+33])
                                      Texp_ident "SymbolSet/2738.bottom"
                                ]
                              structure_item (lib/grammarFunctor.ml[1601,48029+4]..lib/grammarFunctor.ml[1601,48029+50])
                                Tstr_include                                module_expr (lib/grammarFunctor.ml[1601,48029+12]..lib/grammarFunctor.ml[1601,48029+50])
                                  Tmod_apply
                                  module_expr (lib/grammarFunctor.ml[1601,48029+12]..lib/grammarFunctor.ml[1601,48029+39])
                                    module_expr (lib/grammarFunctor.ml[1601,48029+12]..lib/grammarFunctor.ml[1601,48029+39])
                                      Tmod_ident "Gbnf_parser!.Fix.Glue.MinimalSemiLattice"
                                  module_expr (lib/grammarFunctor.ml[1601,48029+40]..lib/grammarFunctor.ml[1601,48029+49])
                                    Tmod_ident "SymbolSet/2738"
                              structure_item (lib/grammarFunctor.ml[1602,48080+4]..lib/grammarFunctor.ml[1602,48080+53])
                                Tstr_value Nonrec
                                [
                                  <def>
                                    pattern (lib/grammarFunctor.ml[1602,48080+8]..lib/grammarFunctor.ml[1602,48080+16])
                                      Tpat_var "terminal/4674"
                                    expression (lib/grammarFunctor.ml[1602,48080+17]..lib/grammarFunctor.ml[1602,48080+53]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (lib/grammarFunctor.ml[1602,48080+17]..lib/grammarFunctor.ml[1602,48080+18])
                                            Tpat_var "t/4676"
                                          expression (lib/grammarFunctor.ml[1602,48080+21]..lib/grammarFunctor.ml[1602,48080+53])
                                            Texp_apply
                                            expression (lib/grammarFunctor.ml[1602,48080+21]..lib/grammarFunctor.ml[1602,48080+40])
                                              Texp_ident "SymbolSet/2738.singleton"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[1602,48080+41]..lib/grammarFunctor.ml[1602,48080+53])
                                                  Texp_construct "Symbol.T"
                                                  [
                                                    expression (lib/grammarFunctor.ml[1602,48080+51]..lib/grammarFunctor.ml[1602,48080+52])
                                                      Texp_ident "t/4676"
                                                  ]
                                            ]
                                      ]
                                ]
                              structure_item (lib/grammarFunctor.ml[1603,48134+4]..lib/grammarFunctor.ml[1603,48134+22])
                                Tstr_value Nonrec
                                [
                                  <def>
                                    pattern (lib/grammarFunctor.ml[1603,48134+8]..lib/grammarFunctor.ml[1603,48134+13])
                                      Tpat_var "first/4677"
                                    expression (lib/grammarFunctor.ml[1603,48134+16]..lib/grammarFunctor.ml[1603,48134+22])
                                      Texp_ident "sfirst/4654"
                                ]
                            ]
                        expression (lib/grammarFunctor.ml[1605,48167+2]..lib/grammarFunctor.ml[1605,48167+10])
                          Texp_ident "F/4778.follow"
                  ]
                structure_item (lib/grammarFunctor.ml[1632,49165+0]..lib/grammarFunctor.ml[1635,49384+44])
                  Tstr_type Rec
                  [
                    type_declaration explanation/4779 (lib/grammarFunctor.ml[1632,49165+0]..lib/grammarFunctor.ml[1635,49384+44])
                      ptype_params =
                        []
                      ptype_cstrs =
                        []
                      ptype_kind =
                        Ttype_variant
                          [
                            (lib/grammarFunctor.ml[1633,49184+2]..lib/grammarFunctor.ml[1633,49184+12])
                              EObvious/4780
                              []
                              None
                            (lib/grammarFunctor.ml[1634,49270+2]..lib/grammarFunctor.ml[1634,49270+40])
                              EFirst/4781
                              [
                                core_type (lib/grammarFunctor.ml[1634,49270+14]..lib/grammarFunctor.ml[1634,49270+24])
                                  Ttyp_constr "Terminal/2246.t"
                                  []
                                core_type (lib/grammarFunctor.ml[1634,49270+27]..lib/grammarFunctor.ml[1634,49270+40])
                                  Ttyp_constr "Nonterminal/2057.t"
                                  []
                              ]
                              None
                            (lib/grammarFunctor.ml[1635,49384+2]..lib/grammarFunctor.ml[1635,49384+44])
                              ENullable/4782
                              [
                                core_type (lib/grammarFunctor.ml[1635,49384+17]..lib/grammarFunctor.ml[1635,49384+30])
                                  Ttyp_constr "list/9!"
                                  [
                                    core_type (lib/grammarFunctor.ml[1635,49384+17]..lib/grammarFunctor.ml[1635,49384+25])
                                      Ttyp_constr "Symbol/2545.t"
                                      []
                                  ]
                                core_type (lib/grammarFunctor.ml[1635,49384+33]..lib/grammarFunctor.ml[1635,49384+44])
                                  Ttyp_constr "explanation/4779"
                                  []
                              ]
                              None
                          ]
                      ptype_private = Public
                      ptype_manifest =
                        None
                  ]
                structure_item (lib/grammarFunctor.ml[1637,49492+0]..lib/grammarFunctor.ml[1658,50132+8])
                  Tstr_value Nonrec
                  [
                    <def>
                      pattern (lib/grammarFunctor.ml[1637,49492+4]..lib/grammarFunctor.ml[1637,49492+11])
                        Tpat_var "explain/4783"
                      expression (lib/grammarFunctor.ml[1637,49492+12]..lib/grammarFunctor.ml[1658,50132+8]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (lib/grammarFunctor.ml[1637,49492+13]..lib/grammarFunctor.ml[1637,49492+16])
                              extra
                                Tpat_extra_constraint
                                core_type (lib/grammarFunctor.ml[1637,49492+19]..lib/grammarFunctor.ml[1637,49492+29])
                                  Ttyp_constr "Terminal/2246.t"
                                  []
                              Tpat_alias "tok/4785"
                              pattern (lib/grammarFunctor.ml[1637,49492+13]..lib/grammarFunctor.ml[1637,49492+16])
                                Tpat_any
                            expression (lib/grammarFunctor.ml[1637,49492+31]..lib/grammarFunctor.ml[1658,50132+8]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (lib/grammarFunctor.ml[1637,49492+32]..lib/grammarFunctor.ml[1637,49492+35])
                                    extra
                                      Tpat_extra_constraint
                                      core_type (lib/grammarFunctor.ml[1637,49492+38]..lib/grammarFunctor.ml[1637,49492+52])
                                        Ttyp_constr "array/8!"
                                        [
                                          core_type (lib/grammarFunctor.ml[1637,49492+38]..lib/grammarFunctor.ml[1637,49492+46])
                                            Ttyp_constr "Symbol/2545.t"
                                            []
                                        ]
                                    Tpat_alias "rhs/4786"
                                    pattern (lib/grammarFunctor.ml[1637,49492+32]..lib/grammarFunctor.ml[1637,49492+35])
                                      Tpat_any
                                  expression (lib/grammarFunctor.ml[1637,49492+54]..lib/grammarFunctor.ml[1658,50132+8]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (lib/grammarFunctor.ml[1637,49492+55]..lib/grammarFunctor.ml[1637,49492+56])
                                          extra
                                            Tpat_extra_constraint
                                            core_type (lib/grammarFunctor.ml[1637,49492+59]..lib/grammarFunctor.ml[1637,49492+62])
                                              Ttyp_constr "int/1!"
                                              []
                                          Tpat_alias "i/4787"
                                          pattern (lib/grammarFunctor.ml[1637,49492+55]..lib/grammarFunctor.ml[1637,49492+56])
                                            Tpat_any
                                        expression (lib/grammarFunctor.ml[1638,49558+2]..lib/grammarFunctor.ml[1658,50132+8])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/grammarFunctor.ml[1638,49558+6]..lib/grammarFunctor.ml[1638,49558+12])
                                                Tpat_var "length/4788"
                                              expression (lib/grammarFunctor.ml[1638,49558+15]..lib/grammarFunctor.ml[1638,49558+31])
                                                Texp_apply
                                                expression (lib/grammarFunctor.ml[1638,49558+15]..lib/grammarFunctor.ml[1638,49558+27])
                                                  Texp_ident "Stdlib!.Array.length"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[1638,49558+28]..lib/grammarFunctor.ml[1638,49558+31])
                                                      Texp_ident "rhs/4786"
                                                ]
                                          ]
                                          expression (lib/grammarFunctor.ml[1639,49593+2]..lib/grammarFunctor.ml[1658,50132+8])
                                            Texp_let Rec
                                            [
                                              <def>
                                                pattern (lib/grammarFunctor.ml[1639,49593+10]..lib/grammarFunctor.ml[1639,49593+14])
                                                  Tpat_var "loop/4789"
                                                expression (lib/grammarFunctor.ml[1639,49593+15]..lib/grammarFunctor.ml[1656,50115+11]) ghost
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (lib/grammarFunctor.ml[1639,49593+15]..lib/grammarFunctor.ml[1639,49593+16])
                                                        Tpat_var "i/4790"
                                                      expression (lib/grammarFunctor.ml[1640,49612+4]..lib/grammarFunctor.ml[1656,50115+11])
                                                        Texp_sequence
                                                        expression (lib/grammarFunctor.ml[1640,49612+4]..lib/grammarFunctor.ml[1640,49612+23])
                                                          Texp_assert                                                          expression (lib/grammarFunctor.ml[1640,49612+11]..lib/grammarFunctor.ml[1640,49612+23])
                                                            Texp_apply
                                                            expression (lib/grammarFunctor.ml[1640,49612+14]..lib/grammarFunctor.ml[1640,49612+15])
                                                              Texp_ident "Stdlib!.<"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/grammarFunctor.ml[1640,49612+12]..lib/grammarFunctor.ml[1640,49612+13])
                                                                  Texp_ident "i/4790"
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/grammarFunctor.ml[1640,49612+16]..lib/grammarFunctor.ml[1640,49612+22])
                                                                  Texp_ident "length/4788"
                                                            ]
                                                        expression (lib/grammarFunctor.ml[1641,49637+4]..lib/grammarFunctor.ml[1656,50115+11])
                                                          Texp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (lib/grammarFunctor.ml[1641,49637+8]..lib/grammarFunctor.ml[1641,49637+14])
                                                                Tpat_var "symbol/4791"
                                                              expression (lib/grammarFunctor.ml[1641,49637+17]..lib/grammarFunctor.ml[1641,49637+24])
                                                                Texp_apply
                                                                expression (lib/grammarFunctor.ml[1641,49637+17]..lib/grammarFunctor.ml[1641,49637+24]) ghost
                                                                  Texp_ident "Stdlib!.Array.get"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[1641,49637+17]..lib/grammarFunctor.ml[1641,49637+20])
                                                                      Texp_ident "rhs/4786"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[1641,49637+22]..lib/grammarFunctor.ml[1641,49637+23])
                                                                      Texp_ident "i/4790"
                                                                ]
                                                          ]
                                                          expression (lib/grammarFunctor.ml[1642,49665+4]..lib/grammarFunctor.ml[1656,50115+11])
                                                            Texp_match
                                                            expression (lib/grammarFunctor.ml[1642,49665+10]..lib/grammarFunctor.ml[1642,49665+16])
                                                              Texp_ident "symbol/4791"
                                                            [
                                                              <case>
                                                                pattern (lib/grammarFunctor.ml[1643,49687+6]..lib/grammarFunctor.ml[1643,49687+19])
                                                                  Tpat_value
                                                                  pattern (lib/grammarFunctor.ml[1643,49687+6]..lib/grammarFunctor.ml[1643,49687+19])
                                                                    Tpat_construct "Symbol.T"
                                                                    [
                                                                      pattern (lib/grammarFunctor.ml[1643,49687+15]..lib/grammarFunctor.ml[1643,49687+19])
                                                                        Tpat_var "tok'/4792"
                                                                    ]
                                                                    None
                                                                expression (lib/grammarFunctor.ml[1644,49710+8]..lib/grammarFunctor.ml[1645,49752+16])
                                                                  Texp_sequence
                                                                  expression (lib/grammarFunctor.ml[1644,49710+8]..lib/grammarFunctor.ml[1644,49710+40])
                                                                    Texp_assert                                                                    expression (lib/grammarFunctor.ml[1644,49710+15]..lib/grammarFunctor.ml[1644,49710+40])
                                                                      Texp_apply
                                                                      expression (lib/grammarFunctor.ml[1644,49710+16]..lib/grammarFunctor.ml[1644,49710+30])
                                                                        Texp_ident "Terminal/2246.equal"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (lib/grammarFunctor.ml[1644,49710+31]..lib/grammarFunctor.ml[1644,49710+34])
                                                                            Texp_ident "tok/4785"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (lib/grammarFunctor.ml[1644,49710+35]..lib/grammarFunctor.ml[1644,49710+39])
                                                                            Texp_ident "tok'/4792"
                                                                      ]
                                                                  expression (lib/grammarFunctor.ml[1645,49752+8]..lib/grammarFunctor.ml[1645,49752+16])
                                                                    Texp_construct "EObvious"
                                                                    []
                                                              <case>
                                                                pattern (lib/grammarFunctor.ml[1646,49769+6]..lib/grammarFunctor.ml[1646,49769+17])
                                                                  Tpat_value
                                                                  pattern (lib/grammarFunctor.ml[1646,49769+6]..lib/grammarFunctor.ml[1646,49769+17])
                                                                    Tpat_construct "Symbol.N"
                                                                    [
                                                                      pattern (lib/grammarFunctor.ml[1646,49769+15]..lib/grammarFunctor.ml[1646,49769+17])
                                                                        Tpat_var "nt/4793"
                                                                    ]
                                                                    None
                                                                expression (lib/grammarFunctor.ml[1647,49790+8]..lib/grammarFunctor.ml[1656,50115+11])
                                                                  Texp_ifthenelse
                                                                  expression (lib/grammarFunctor.ml[1647,49790+11]..lib/grammarFunctor.ml[1647,49790+53])
                                                                    Texp_apply
                                                                    expression (lib/grammarFunctor.ml[1647,49790+11]..lib/grammarFunctor.ml[1647,49790+26])
                                                                      Texp_ident "TerminalSet/2387.mem"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (lib/grammarFunctor.ml[1647,49790+27]..lib/grammarFunctor.ml[1647,49790+30])
                                                                          Texp_ident "tok/4785"
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (lib/grammarFunctor.ml[1647,49790+31]..lib/grammarFunctor.ml[1647,49790+53])
                                                                          Texp_apply
                                                                          expression (lib/grammarFunctor.ml[1647,49790+32]..lib/grammarFunctor.ml[1647,49790+49])
                                                                            Texp_ident "FIRST/4150.nonterminal"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (lib/grammarFunctor.ml[1647,49790+50]..lib/grammarFunctor.ml[1647,49790+52])
                                                                                Texp_ident "nt/4793"
                                                                          ]
                                                                    ]
                                                                  expression (lib/grammarFunctor.ml[1648,49849+10]..lib/grammarFunctor.ml[1648,49849+26])
                                                                    Texp_construct "EFirst"
                                                                    [
                                                                      expression (lib/grammarFunctor.ml[1648,49849+18]..lib/grammarFunctor.ml[1648,49849+21])
                                                                        Texp_ident "tok/4785"
                                                                      expression (lib/grammarFunctor.ml[1648,49849+23]..lib/grammarFunctor.ml[1648,49849+25])
                                                                        Texp_ident "nt/4793"
                                                                    ]
                                                                  Some
                                                                    expression (lib/grammarFunctor.ml[1649,49876+13]..lib/grammarFunctor.ml[1656,50115+11])
                                                                      Texp_sequence
                                                                      expression (lib/grammarFunctor.ml[1650,49895+10]..lib/grammarFunctor.ml[1650,49895+42])
                                                                        Texp_assert                                                                        expression (lib/grammarFunctor.ml[1650,49895+17]..lib/grammarFunctor.ml[1650,49895+42])
                                                                          Texp_apply
                                                                          expression (lib/grammarFunctor.ml[1650,49895+18]..lib/grammarFunctor.ml[1650,49895+38])
                                                                            Texp_ident "NULLABLE/4123.nonterminal"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (lib/grammarFunctor.ml[1650,49895+39]..lib/grammarFunctor.ml[1650,49895+41])
                                                                                Texp_ident "nt/4793"
                                                                          ]
                                                                      expression (lib/grammarFunctor.ml[1651,49939+10]..lib/grammarFunctor.ml[1655,50075+39])
                                                                        Texp_match
                                                                        expression (lib/grammarFunctor.ml[1651,49939+16]..lib/grammarFunctor.ml[1651,49939+28])
                                                                          Texp_apply
                                                                          expression (lib/grammarFunctor.ml[1651,49939+16]..lib/grammarFunctor.ml[1651,49939+20])
                                                                            Texp_ident "loop/4789"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (lib/grammarFunctor.ml[1651,49939+21]..lib/grammarFunctor.ml[1651,49939+28])
                                                                                Texp_apply
                                                                                expression (lib/grammarFunctor.ml[1651,49939+24]..lib/grammarFunctor.ml[1651,49939+25])
                                                                                  Texp_ident "Stdlib!.+"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (lib/grammarFunctor.ml[1651,49939+22]..lib/grammarFunctor.ml[1651,49939+23])
                                                                                      Texp_ident "i/4790"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (lib/grammarFunctor.ml[1651,49939+26]..lib/grammarFunctor.ml[1651,49939+27])
                                                                                      Texp_constant Const_int 1
                                                                                ]
                                                                          ]
                                                                        [
                                                                          <case>
                                                                            pattern (lib/grammarFunctor.ml[1652,49973+12]..lib/grammarFunctor.ml[1652,49973+34])
                                                                              Tpat_value
                                                                              pattern (lib/grammarFunctor.ml[1652,49973+12]..lib/grammarFunctor.ml[1652,49973+34])
                                                                                Tpat_construct "ENullable"
                                                                                [
                                                                                  pattern (lib/grammarFunctor.ml[1652,49973+23]..lib/grammarFunctor.ml[1652,49973+30])
                                                                                    Tpat_var "symbols/4794"
                                                                                  pattern (lib/grammarFunctor.ml[1652,49973+32]..lib/grammarFunctor.ml[1652,49973+33])
                                                                                    Tpat_var "e/4795"
                                                                                ]
                                                                                None
                                                                            expression (lib/grammarFunctor.ml[1653,50011+14]..lib/grammarFunctor.ml[1653,50011+46])
                                                                              Texp_construct "ENullable"
                                                                              [
                                                                                expression (lib/grammarFunctor.ml[1653,50011+25]..lib/grammarFunctor.ml[1653,50011+42])
                                                                                  Texp_construct "::"
                                                                                  [
                                                                                    expression (lib/grammarFunctor.ml[1653,50011+25]..lib/grammarFunctor.ml[1653,50011+31])
                                                                                      Texp_ident "symbol/4791"
                                                                                    expression (lib/grammarFunctor.ml[1653,50011+35]..lib/grammarFunctor.ml[1653,50011+42])
                                                                                      Texp_ident "symbols/4794"
                                                                                  ]
                                                                                expression (lib/grammarFunctor.ml[1653,50011+44]..lib/grammarFunctor.ml[1653,50011+45])
                                                                                  Texp_ident "e/4795"
                                                                              ]
                                                                          <case>
                                                                            pattern (lib/grammarFunctor.ml[1654,50058+12]..lib/grammarFunctor.ml[1654,50058+13])
                                                                              Tpat_value
                                                                              pattern (lib/grammarFunctor.ml[1654,50058+12]..lib/grammarFunctor.ml[1654,50058+13])
                                                                                Tpat_var "e/4796"
                                                                            expression (lib/grammarFunctor.ml[1655,50075+14]..lib/grammarFunctor.ml[1655,50075+39])
                                                                              Texp_construct "ENullable"
                                                                              [
                                                                                expression (lib/grammarFunctor.ml[1655,50075+25]..lib/grammarFunctor.ml[1655,50075+35])
                                                                                  Texp_construct "::"
                                                                                  [
                                                                                    expression (lib/grammarFunctor.ml[1655,50075+27]..lib/grammarFunctor.ml[1655,50075+33])
                                                                                      Texp_ident "symbol/4791"
                                                                                    expression (lib/grammarFunctor.ml[1655,50075+34]..lib/grammarFunctor.ml[1655,50075+35]) ghost
                                                                                      Texp_construct "[]"
                                                                                      []
                                                                                  ]
                                                                                expression (lib/grammarFunctor.ml[1655,50075+37]..lib/grammarFunctor.ml[1655,50075+38])
                                                                                  Texp_ident "e/4796"
                                                                              ]
                                                                        ]
                                                            ]
                                                  ]
                                            ]
                                            expression (lib/grammarFunctor.ml[1658,50132+2]..lib/grammarFunctor.ml[1658,50132+8])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[1658,50132+2]..lib/grammarFunctor.ml[1658,50132+6])
                                                Texp_ident "loop/4789"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[1658,50132+7]..lib/grammarFunctor.ml[1658,50132+8])
                                                    Texp_ident "i/4787"
                                              ]
                                    ]
                              ]
                        ]
                  ]
                structure_item (lib/grammarFunctor.ml[1660,50142+0]..lib/grammarFunctor.ml[1672,50499+9])
                  Tstr_value Rec
                  [
                    <def>
                      pattern (lib/grammarFunctor.ml[1660,50142+8]..lib/grammarFunctor.ml[1660,50142+15])
                        Tpat_var "convert/4797"
                      expression (lib/grammarFunctor.ml[1660,50142+18]..lib/grammarFunctor.ml[1672,50499+9])
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (lib/grammarFunctor.ml[1661,50169+4]..lib/grammarFunctor.ml[1661,50169+12])
                              Tpat_construct "EObvious"
                              []
                              None
                            expression (lib/grammarFunctor.ml[1662,50185+6]..lib/grammarFunctor.ml[1662,50185+8])
                              Texp_constant Const_string("",(lib/grammarFunctor.ml[1662,50185+7]..lib/grammarFunctor.ml[1662,50185+7]),None)
                          <case>
                            pattern (lib/grammarFunctor.ml[1663,50194+4]..lib/grammarFunctor.ml[1663,50194+20])
                              Tpat_construct "EFirst"
                              [
                                pattern (lib/grammarFunctor.ml[1663,50194+12]..lib/grammarFunctor.ml[1663,50194+15])
                                  Tpat_var "tok/4798"
                                pattern (lib/grammarFunctor.ml[1663,50194+17]..lib/grammarFunctor.ml[1663,50194+19])
                                  Tpat_var "nt/4799"
                              ]
                              None
                            expression (lib/grammarFunctor.ml[1664,50218+6]..lib/grammarFunctor.ml[1666,50299+28])
                              Texp_apply
                              expression (lib/grammarFunctor.ml[1664,50218+6]..lib/grammarFunctor.ml[1664,50218+20])
                                Texp_ident "Stdlib!.Printf.sprintf"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/grammarFunctor.ml[1664,50218+21]..lib/grammarFunctor.ml[1664,50218+43])
                                    Texp_construct "CamlinternalFormatBasics.Format"
                                    [
                                      expression (lib/grammarFunctor.ml[1664,50218+21]..lib/grammarFunctor.ml[1664,50218+43]) ghost
                                        Texp_construct "CamlinternalFormatBasics.String"
                                        [
                                          expression (lib/grammarFunctor.ml[1664,50218+21]..lib/grammarFunctor.ml[1664,50218+43]) ghost
                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                            []
                                          expression (lib/grammarFunctor.ml[1664,50218+21]..lib/grammarFunctor.ml[1664,50218+43]) ghost
                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                            [
                                              expression (lib/grammarFunctor.ml[1664,50218+21]..lib/grammarFunctor.ml[1664,50218+43]) ghost
                                                Texp_constant Const_string(" can begin with ",(lib/grammarFunctor.ml[1664,50218+21]..lib/grammarFunctor.ml[1664,50218+43]) ghost,None)
                                              expression (lib/grammarFunctor.ml[1664,50218+21]..lib/grammarFunctor.ml[1664,50218+43]) ghost
                                                Texp_construct "CamlinternalFormatBasics.String"
                                                [
                                                  expression (lib/grammarFunctor.ml[1664,50218+21]..lib/grammarFunctor.ml[1664,50218+43]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                    []
                                                  expression (lib/grammarFunctor.ml[1664,50218+21]..lib/grammarFunctor.ml[1664,50218+43]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                    []
                                                ]
                                            ]
                                        ]
                                      expression (lib/grammarFunctor.ml[1664,50218+21]..lib/grammarFunctor.ml[1664,50218+43]) ghost
                                        Texp_constant Const_string("%s can begin with %s",(lib/grammarFunctor.ml[1664,50218+21]..lib/grammarFunctor.ml[1664,50218+43]) ghost,None)
                                    ]
                                <arg>
                                  Nolabel
                                  expression (lib/grammarFunctor.ml[1665,50262+8]..lib/grammarFunctor.ml[1665,50262+36])
                                    Texp_apply
                                    expression (lib/grammarFunctor.ml[1665,50262+9]..lib/grammarFunctor.ml[1665,50262+26])
                                      Texp_ident "Nonterminal/2057.print"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/grammarFunctor.ml[1665,50262+27]..lib/grammarFunctor.ml[1665,50262+32])
                                          Texp_construct "false"
                                          []
                                      <arg>
                                        Nolabel
                                        expression (lib/grammarFunctor.ml[1665,50262+33]..lib/grammarFunctor.ml[1665,50262+35])
                                          Texp_ident "nt/4799"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (lib/grammarFunctor.ml[1666,50299+8]..lib/grammarFunctor.ml[1666,50299+28])
                                    Texp_apply
                                    expression (lib/grammarFunctor.ml[1666,50299+9]..lib/grammarFunctor.ml[1666,50299+23])
                                      Texp_ident "Terminal/2246.print"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/grammarFunctor.ml[1666,50299+24]..lib/grammarFunctor.ml[1666,50299+27])
                                          Texp_ident "tok/4798"
                                    ]
                              ]
                          <case>
                            pattern (lib/grammarFunctor.ml[1667,50328+4]..lib/grammarFunctor.ml[1667,50328+26])
                              Tpat_construct "ENullable"
                              [
                                pattern (lib/grammarFunctor.ml[1667,50328+15]..lib/grammarFunctor.ml[1667,50328+22])
                                  Tpat_var "symbols/4800"
                                pattern (lib/grammarFunctor.ml[1667,50328+24]..lib/grammarFunctor.ml[1667,50328+25])
                                  Tpat_var "e/4801"
                              ]
                              None
                            expression (lib/grammarFunctor.ml[1668,50358+6]..lib/grammarFunctor.ml[1672,50499+9])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (lib/grammarFunctor.ml[1668,50358+10]..lib/grammarFunctor.ml[1668,50358+11])
                                    Tpat_var "e/4802"
                                  expression (lib/grammarFunctor.ml[1668,50358+14]..lib/grammarFunctor.ml[1668,50358+23])
                                    Texp_apply
                                    expression (lib/grammarFunctor.ml[1668,50358+14]..lib/grammarFunctor.ml[1668,50358+21])
                                      Texp_ident "convert/4797"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/grammarFunctor.ml[1668,50358+22]..lib/grammarFunctor.ml[1668,50358+23])
                                          Texp_ident "e/4801"
                                    ]
                              ]
                              expression (lib/grammarFunctor.ml[1669,50385+6]..lib/grammarFunctor.ml[1672,50499+9])
                                Texp_apply
                                expression (lib/grammarFunctor.ml[1669,50385+6]..lib/grammarFunctor.ml[1669,50385+20])
                                  Texp_ident "Stdlib!.Printf.sprintf"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/grammarFunctor.ml[1669,50385+21]..lib/grammarFunctor.ml[1669,50385+40])
                                      Texp_construct "CamlinternalFormatBasics.Format"
                                      [
                                        expression (lib/grammarFunctor.ml[1669,50385+21]..lib/grammarFunctor.ml[1669,50385+40]) ghost
                                          Texp_construct "CamlinternalFormatBasics.String"
                                          [
                                            expression (lib/grammarFunctor.ml[1669,50385+21]..lib/grammarFunctor.ml[1669,50385+40]) ghost
                                              Texp_construct "CamlinternalFormatBasics.No_padding"
                                              []
                                            expression (lib/grammarFunctor.ml[1669,50385+21]..lib/grammarFunctor.ml[1669,50385+40]) ghost
                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                              [
                                                expression (lib/grammarFunctor.ml[1669,50385+21]..lib/grammarFunctor.ml[1669,50385+40]) ghost
                                                  Texp_constant Const_string(" can vanish",(lib/grammarFunctor.ml[1669,50385+21]..lib/grammarFunctor.ml[1669,50385+40]) ghost,None)
                                                expression (lib/grammarFunctor.ml[1669,50385+21]..lib/grammarFunctor.ml[1669,50385+40]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.String"
                                                  [
                                                    expression (lib/grammarFunctor.ml[1669,50385+21]..lib/grammarFunctor.ml[1669,50385+40]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                                      []
                                                    expression (lib/grammarFunctor.ml[1669,50385+21]..lib/grammarFunctor.ml[1669,50385+40]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.String"
                                                      [
                                                        expression (lib/grammarFunctor.ml[1669,50385+21]..lib/grammarFunctor.ml[1669,50385+40]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                                          []
                                                        expression (lib/grammarFunctor.ml[1669,50385+21]..lib/grammarFunctor.ml[1669,50385+40]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                          []
                                                      ]
                                                  ]
                                              ]
                                          ]
                                        expression (lib/grammarFunctor.ml[1669,50385+21]..lib/grammarFunctor.ml[1669,50385+40]) ghost
                                          Texp_constant Const_string("%s can vanish%s%s",(lib/grammarFunctor.ml[1669,50385+21]..lib/grammarFunctor.ml[1669,50385+40]) ghost,None)
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (lib/grammarFunctor.ml[1670,50426+8]..lib/grammarFunctor.ml[1670,50426+31])
                                      Texp_apply
                                      expression (lib/grammarFunctor.ml[1670,50426+9]..lib/grammarFunctor.ml[1670,50426+22])
                                        Texp_ident "Symbol/2545.printl"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[1670,50426+23]..lib/grammarFunctor.ml[1670,50426+30])
                                            Texp_ident "symbols/4800"
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (lib/grammarFunctor.ml[1671,50458+8]..lib/grammarFunctor.ml[1671,50458+40])
                                      Texp_ifthenelse
                                      expression (lib/grammarFunctor.ml[1671,50458+12]..lib/grammarFunctor.ml[1671,50458+18])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[1671,50458+14]..lib/grammarFunctor.ml[1671,50458+15])
                                          Texp_ident "Stdlib!.="
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[1671,50458+12]..lib/grammarFunctor.ml[1671,50458+13])
                                              Texp_ident "e/4802"
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[1671,50458+16]..lib/grammarFunctor.ml[1671,50458+18])
                                              Texp_constant Const_string("",(lib/grammarFunctor.ml[1671,50458+17]..lib/grammarFunctor.ml[1671,50458+17]),None)
                                        ]
                                      expression (lib/grammarFunctor.ml[1671,50458+24]..lib/grammarFunctor.ml[1671,50458+26])
                                        Texp_constant Const_string("",(lib/grammarFunctor.ml[1671,50458+25]..lib/grammarFunctor.ml[1671,50458+25]),None)
                                      Some
                                        expression (lib/grammarFunctor.ml[1671,50458+32]..lib/grammarFunctor.ml[1671,50458+39])
                                          Texp_constant Const_string(" and ",(lib/grammarFunctor.ml[1671,50458+33]..lib/grammarFunctor.ml[1671,50458+38]),None)
                                  <arg>
                                    Nolabel
                                    expression (lib/grammarFunctor.ml[1672,50499+8]..lib/grammarFunctor.ml[1672,50499+9])
                                      Texp_ident "e/4802"
                                ]
                        ]
                  ]
                structure_item (lib/grammarFunctor.ml[1677,50626+0]..lib/grammarFunctor.ml[1732,52002+3])
                  Tstr_module
                  Analysis/4843
                    module_expr (lib/grammarFunctor.ml[1677,50626+18]..lib/grammarFunctor.ml[1732,52002+3])
                      module_expr (lib/grammarFunctor.ml[1677,50626+18]..lib/grammarFunctor.ml[1732,52002+3])
                        Tmod_structure
                        [
                          structure_item (lib/grammarFunctor.ml[1679,50652+2]..lib/grammarFunctor.ml[1679,50652+37])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1679,50652+6]..lib/grammarFunctor.ml[1679,50652+14])
                                  Tpat_var "nullable/4804"
                                expression (lib/grammarFunctor.ml[1679,50652+17]..lib/grammarFunctor.ml[1679,50652+37])
                                  Texp_ident "NULLABLE/4123.nonterminal"
                            ]
                          structure_item (lib/grammarFunctor.ml[1681,50691+2]..lib/grammarFunctor.ml[1681,50691+39])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1681,50691+6]..lib/grammarFunctor.ml[1681,50691+21])
                                  Tpat_var "nullable_symbol/4805"
                                expression (lib/grammarFunctor.ml[1681,50691+24]..lib/grammarFunctor.ml[1681,50691+39])
                                  Texp_ident "NULLABLE/4123.symbol"
                            ]
                          structure_item (lib/grammarFunctor.ml[1683,50732+2]..lib/grammarFunctor.ml[1683,50732+31])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1683,50732+6]..lib/grammarFunctor.ml[1683,50732+11])
                                  Tpat_var "first/4806"
                                expression (lib/grammarFunctor.ml[1683,50732+14]..lib/grammarFunctor.ml[1683,50732+31])
                                  Texp_ident "FIRST/4150.nonterminal"
                            ]
                          structure_item (lib/grammarFunctor.ml[1685,50765+2]..lib/grammarFunctor.ml[1685,50765+33])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1685,50765+6]..lib/grammarFunctor.ml[1685,50765+18])
                                  Tpat_var "first_symbol/4807"
                                expression (lib/grammarFunctor.ml[1685,50765+21]..lib/grammarFunctor.ml[1685,50765+33])
                                  Texp_ident "FIRST/4150.symbol"
                            ]
                          structure_item (lib/grammarFunctor.ml[1689,50857+2]..lib/grammarFunctor.ml[1691,50924+27])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1689,50857+6]..lib/grammarFunctor.ml[1689,50857+25])
                                  Tpat_var "nullable_first_prod/4808"
                                expression (lib/grammarFunctor.ml[1689,50857+26]..lib/grammarFunctor.ml[1691,50924+27]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1689,50857+26]..lib/grammarFunctor.ml[1689,50857+30])
                                        Tpat_var "prod/4810"
                                      expression (lib/grammarFunctor.ml[1689,50857+31]..lib/grammarFunctor.ml[1691,50924+27]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[1689,50857+31]..lib/grammarFunctor.ml[1689,50857+32])
                                              Tpat_var "i/4811"
                                            expression (lib/grammarFunctor.ml[1690,50892+4]..lib/grammarFunctor.ml[1691,50924+27])
                                              Texp_tuple
                                              [
                                                expression (lib/grammarFunctor.ml[1690,50892+4]..lib/grammarFunctor.ml[1690,50892+30])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[1690,50892+4]..lib/grammarFunctor.ml[1690,50892+23])
                                                    Texp_ident "NULLABLE/4123.production"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[1690,50892+24]..lib/grammarFunctor.ml[1690,50892+28])
                                                        Texp_ident "prod/4810"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[1690,50892+29]..lib/grammarFunctor.ml[1690,50892+30])
                                                        Texp_ident "i/4811"
                                                  ]
                                                expression (lib/grammarFunctor.ml[1691,50924+4]..lib/grammarFunctor.ml[1691,50924+27])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[1691,50924+4]..lib/grammarFunctor.ml[1691,50924+20])
                                                    Texp_ident "FIRST/4150.production"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[1691,50924+21]..lib/grammarFunctor.ml[1691,50924+25])
                                                        Texp_ident "prod/4810"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[1691,50924+26]..lib/grammarFunctor.ml[1691,50924+27])
                                                        Texp_ident "i/4811"
                                                  ]
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[1696,51052+2]..lib/grammarFunctor.ml[1701,51226+5])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1696,51052+6]..lib/grammarFunctor.ml[1696,51052+25])
                                  Tpat_var "nullable_first_prod/4812"
                                expression (lib/grammarFunctor.ml[1697,51080+4]..lib/grammarFunctor.ml[1701,51226+5])
                                  Texp_apply
                                  expression (lib/grammarFunctor.ml[1697,51080+4]..lib/grammarFunctor.ml[1697,51080+17])
                                    Texp_ident "Gbnf_parser!.Misc.tabulate"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[1697,51080+18]..lib/grammarFunctor.ml[1697,51080+30])
                                        Texp_ident "Production/3564.n"
                                    <arg>
                                      Nolabel
                                      expression (lib/grammarFunctor.ml[1697,51080+31]..lib/grammarFunctor.ml[1701,51226+5])
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[1697,51080+36]..lib/grammarFunctor.ml[1697,51080+40])
                                              Tpat_var "prod/4813"
                                            expression (lib/grammarFunctor.ml[1698,51124+6]..lib/grammarFunctor.ml[1700,51218+7])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[1698,51124+6]..lib/grammarFunctor.ml[1698,51124+19])
                                                Texp_ident "Gbnf_parser!.Misc.tabulate"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[1698,51124+20]..lib/grammarFunctor.ml[1698,51124+48])
                                                    Texp_apply
                                                    expression (lib/grammarFunctor.ml[1698,51124+44]..lib/grammarFunctor.ml[1698,51124+45])
                                                      Texp_ident "Stdlib!.+"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[1698,51124+21]..lib/grammarFunctor.ml[1698,51124+43])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[1698,51124+21]..lib/grammarFunctor.ml[1698,51124+38])
                                                            Texp_ident "Production/3564.length"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[1698,51124+39]..lib/grammarFunctor.ml[1698,51124+43])
                                                                Texp_ident "prod/4813"
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[1698,51124+46]..lib/grammarFunctor.ml[1698,51124+47])
                                                          Texp_constant Const_int 1
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[1698,51124+49]..lib/grammarFunctor.ml[1700,51218+7])
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (lib/grammarFunctor.ml[1698,51124+54]..lib/grammarFunctor.ml[1698,51124+55])
                                                          Tpat_var "i/4814"
                                                        expression (lib/grammarFunctor.ml[1699,51183+8]..lib/grammarFunctor.ml[1699,51183+34])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[1699,51183+8]..lib/grammarFunctor.ml[1699,51183+27])
                                                            Texp_ident "nullable_first_prod/4808"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[1699,51183+28]..lib/grammarFunctor.ml[1699,51183+32])
                                                                Texp_ident "prod/4813"
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[1699,51183+33]..lib/grammarFunctor.ml[1699,51183+34])
                                                                Texp_ident "i/4814"
                                                          ]
                                                    ]
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[1703,51233+2]..lib/grammarFunctor.ml[1708,51387+11])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1703,51233+6]..lib/grammarFunctor.ml[1703,51233+26])
                                  Tpat_var "first_prod_lookahead/4815"
                                expression (lib/grammarFunctor.ml[1703,51233+27]..lib/grammarFunctor.ml[1708,51387+11]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1703,51233+27]..lib/grammarFunctor.ml[1703,51233+31])
                                        Tpat_var "prod/4817"
                                      expression (lib/grammarFunctor.ml[1703,51233+32]..lib/grammarFunctor.ml[1708,51387+11]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[1703,51233+32]..lib/grammarFunctor.ml[1703,51233+33])
                                              Tpat_var "i/4818"
                                            expression (lib/grammarFunctor.ml[1703,51233+34]..lib/grammarFunctor.ml[1708,51387+11]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[1703,51233+34]..lib/grammarFunctor.ml[1703,51233+35])
                                                    Tpat_var "z/4819"
                                                  expression (lib/grammarFunctor.ml[1704,51271+4]..lib/grammarFunctor.ml[1708,51387+11])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (lib/grammarFunctor.ml[1704,51271+8]..lib/grammarFunctor.ml[1704,51271+23])
                                                          Tpat_tuple
                                                          [
                                                            pattern (lib/grammarFunctor.ml[1704,51271+8]..lib/grammarFunctor.ml[1704,51271+16])
                                                              Tpat_var "nullable/4820"
                                                            pattern (lib/grammarFunctor.ml[1704,51271+18]..lib/grammarFunctor.ml[1704,51271+23])
                                                              Tpat_var "first/4821"
                                                          ]
                                                        expression (lib/grammarFunctor.ml[1704,51271+26]..lib/grammarFunctor.ml[1704,51271+52])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[1704,51271+26]..lib/grammarFunctor.ml[1704,51271+45])
                                                            Texp_ident "nullable_first_prod/4812"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[1704,51271+46]..lib/grammarFunctor.ml[1704,51271+50])
                                                                Texp_ident "prod/4817"
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[1704,51271+51]..lib/grammarFunctor.ml[1704,51271+52])
                                                                Texp_ident "i/4818"
                                                          ]
                                                    ]
                                                    expression (lib/grammarFunctor.ml[1705,51327+4]..lib/grammarFunctor.ml[1708,51387+11])
                                                      Texp_ifthenelse
                                                      expression (lib/grammarFunctor.ml[1705,51327+7]..lib/grammarFunctor.ml[1705,51327+15])
                                                        Texp_ident "nullable/4820"
                                                      expression (lib/grammarFunctor.ml[1706,51348+6]..lib/grammarFunctor.ml[1706,51348+29])
                                                        Texp_apply
                                                        expression (lib/grammarFunctor.ml[1706,51348+6]..lib/grammarFunctor.ml[1706,51348+21])
                                                          Texp_ident "TerminalSet/2387.add"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1706,51348+22]..lib/grammarFunctor.ml[1706,51348+23])
                                                              Texp_ident "z/4819"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1706,51348+24]..lib/grammarFunctor.ml[1706,51348+29])
                                                              Texp_ident "first/4821"
                                                        ]
                                                      Some
                                                        expression (lib/grammarFunctor.ml[1708,51387+6]..lib/grammarFunctor.ml[1708,51387+11])
                                                          Texp_ident "first/4821"
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[1710,51400+2]..lib/grammarFunctor.ml[1711,51478+31])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1710,51400+6]..lib/grammarFunctor.ml[1710,51400+23])
                                  Tpat_var "explain_first_rhs/4822"
                                expression (lib/grammarFunctor.ml[1710,51400+24]..lib/grammarFunctor.ml[1711,51478+31]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1710,51400+25]..lib/grammarFunctor.ml[1710,51400+28])
                                        extra
                                          Tpat_extra_constraint
                                          core_type (lib/grammarFunctor.ml[1710,51400+31]..lib/grammarFunctor.ml[1710,51400+41])
                                            Ttyp_constr "Terminal/2246.t"
                                            []
                                        Tpat_alias "tok/4824"
                                        pattern (lib/grammarFunctor.ml[1710,51400+25]..lib/grammarFunctor.ml[1710,51400+28])
                                          Tpat_any
                                      expression (lib/grammarFunctor.ml[1710,51400+43]..lib/grammarFunctor.ml[1711,51478+31]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[1710,51400+44]..lib/grammarFunctor.ml[1710,51400+47])
                                              extra
                                                Tpat_extra_constraint
                                                core_type (lib/grammarFunctor.ml[1710,51400+50]..lib/grammarFunctor.ml[1710,51400+64])
                                                  Ttyp_constr "array/8!"
                                                  [
                                                    core_type (lib/grammarFunctor.ml[1710,51400+50]..lib/grammarFunctor.ml[1710,51400+58])
                                                      Ttyp_constr "Symbol/2545.t"
                                                      []
                                                  ]
                                              Tpat_alias "rhs/4825"
                                              pattern (lib/grammarFunctor.ml[1710,51400+44]..lib/grammarFunctor.ml[1710,51400+47])
                                                Tpat_any
                                            expression (lib/grammarFunctor.ml[1710,51400+66]..lib/grammarFunctor.ml[1711,51478+31]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[1710,51400+67]..lib/grammarFunctor.ml[1710,51400+68])
                                                    extra
                                                      Tpat_extra_constraint
                                                      core_type (lib/grammarFunctor.ml[1710,51400+71]..lib/grammarFunctor.ml[1710,51400+74])
                                                        Ttyp_constr "int/1!"
                                                        []
                                                    Tpat_alias "i/4826"
                                                    pattern (lib/grammarFunctor.ml[1710,51400+67]..lib/grammarFunctor.ml[1710,51400+68])
                                                      Tpat_any
                                                  expression (lib/grammarFunctor.ml[1711,51478+4]..lib/grammarFunctor.ml[1711,51478+31])
                                                    Texp_apply
                                                    expression (lib/grammarFunctor.ml[1711,51478+4]..lib/grammarFunctor.ml[1711,51478+11])
                                                      Texp_ident "convert/4797"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[1711,51478+12]..lib/grammarFunctor.ml[1711,51478+31])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[1711,51478+13]..lib/grammarFunctor.ml[1711,51478+20])
                                                            Texp_ident "explain/4783"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[1711,51478+21]..lib/grammarFunctor.ml[1711,51478+24])
                                                                Texp_ident "tok/4824"
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[1711,51478+25]..lib/grammarFunctor.ml[1711,51478+28])
                                                                Texp_ident "rhs/4825"
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[1711,51478+29]..lib/grammarFunctor.ml[1711,51478+30])
                                                                Texp_ident "i/4826"
                                                          ]
                                                    ]
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[1713,51511+2]..lib/grammarFunctor.ml[1713,51511+21])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1713,51511+6]..lib/grammarFunctor.ml[1713,51511+12])
                                  Tpat_var "follow/4827"
                                expression (lib/grammarFunctor.ml[1713,51511+15]..lib/grammarFunctor.ml[1713,51511+21])
                                  Texp_ident "follow/4510"
                            ]
                          structure_item (lib/grammarFunctor.ml[1715,51534+2]..lib/grammarFunctor.ml[1716,51553+25])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1715,51534+6]..lib/grammarFunctor.ml[1715,51534+16])
                                  Tpat_var "attributes/4828"
                                expression (lib/grammarFunctor.ml[1716,51553+4]..lib/grammarFunctor.ml[1716,51553+25])
                                  Texp_field
                                  expression (lib/grammarFunctor.ml[1716,51553+4]..lib/grammarFunctor.ml[1716,51553+11])
                                    Texp_ident "G/1226.grammar"
                                  "gr_attributes"
                            ]
                          structure_item (lib/grammarFunctor.ml[1718,51580+2]..lib/grammarFunctor.ml[1719,51599+55])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1718,51580+6]..lib/grammarFunctor.ml[1718,51580+13])
                                  Tpat_var "minimal/4829"
                                expression (lib/grammarFunctor.ml[1718,51580+14]..lib/grammarFunctor.ml[1719,51599+55]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1718,51580+14]..lib/grammarFunctor.ml[1718,51580+16])
                                        Tpat_var "nt/4831"
                                      expression (lib/grammarFunctor.ml[1719,51599+4]..lib/grammarFunctor.ml[1719,51599+55])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[1719,51599+4]..lib/grammarFunctor.ml[1719,51599+30])
                                          Texp_ident "Gbnf_parser!.CompletedNatWitness.to_int"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[1719,51599+31]..lib/grammarFunctor.ml[1719,51599+55])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[1719,51599+32]..lib/grammarFunctor.ml[1719,51599+51])
                                                Texp_ident "MINIMAL/4217.nonterminal"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[1719,51599+52]..lib/grammarFunctor.ml[1719,51599+54])
                                                    Texp_ident "nt/4831"
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[1721,51656+2]..lib/grammarFunctor.ml[1723,51736+58])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1721,51656+6]..lib/grammarFunctor.ml[1721,51656+18])
                                  Tpat_var "minimal_prod/4832"
                                expression (lib/grammarFunctor.ml[1721,51656+19]..lib/grammarFunctor.ml[1723,51736+58]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1721,51656+19]..lib/grammarFunctor.ml[1721,51656+23])
                                        Tpat_var "prod/4834"
                                      expression (lib/grammarFunctor.ml[1721,51656+24]..lib/grammarFunctor.ml[1723,51736+58]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[1721,51656+24]..lib/grammarFunctor.ml[1721,51656+25])
                                              Tpat_var "i/4835"
                                            expression (lib/grammarFunctor.ml[1722,51684+4]..lib/grammarFunctor.ml[1723,51736+58])
                                              Texp_sequence
                                              expression (lib/grammarFunctor.ml[1722,51684+4]..lib/grammarFunctor.ml[1722,51684+50])
                                                Texp_assert                                                expression (lib/grammarFunctor.ml[1722,51684+11]..lib/grammarFunctor.ml[1722,51684+50])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[1722,51684+19]..lib/grammarFunctor.ml[1722,51684+21])
                                                    Texp_ident "Stdlib!.&&"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[1722,51684+12]..lib/grammarFunctor.ml[1722,51684+18])
                                                        Texp_apply
                                                        expression (lib/grammarFunctor.ml[1722,51684+14]..lib/grammarFunctor.ml[1722,51684+16])
                                                          Texp_ident "Stdlib!.<="
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1722,51684+12]..lib/grammarFunctor.ml[1722,51684+13])
                                                              Texp_constant Const_int 0
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1722,51684+17]..lib/grammarFunctor.ml[1722,51684+18])
                                                              Texp_ident "i/4835"
                                                        ]
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[1722,51684+22]..lib/grammarFunctor.ml[1722,51684+49])
                                                        Texp_apply
                                                        expression (lib/grammarFunctor.ml[1722,51684+24]..lib/grammarFunctor.ml[1722,51684+26])
                                                          Texp_ident "Stdlib!.<="
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1722,51684+22]..lib/grammarFunctor.ml[1722,51684+23])
                                                              Texp_ident "i/4835"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1722,51684+27]..lib/grammarFunctor.ml[1722,51684+49])
                                                              Texp_apply
                                                              expression (lib/grammarFunctor.ml[1722,51684+27]..lib/grammarFunctor.ml[1722,51684+44])
                                                                Texp_ident "Production/3564.length"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/grammarFunctor.ml[1722,51684+45]..lib/grammarFunctor.ml[1722,51684+49])
                                                                    Texp_ident "prod/4834"
                                                              ]
                                                        ]
                                                  ]
                                              expression (lib/grammarFunctor.ml[1723,51736+4]..lib/grammarFunctor.ml[1723,51736+58])
                                                Texp_apply
                                                expression (lib/grammarFunctor.ml[1723,51736+4]..lib/grammarFunctor.ml[1723,51736+30])
                                                  Texp_ident "Gbnf_parser!.CompletedNatWitness.to_int"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[1723,51736+31]..lib/grammarFunctor.ml[1723,51736+58])
                                                      Texp_apply
                                                      expression (lib/grammarFunctor.ml[1723,51736+32]..lib/grammarFunctor.ml[1723,51736+50])
                                                        Texp_ident "MINIMAL/4217.production"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[1723,51736+51]..lib/grammarFunctor.ml[1723,51736+55])
                                                            Texp_ident "prod/4834"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[1723,51736+56]..lib/grammarFunctor.ml[1723,51736+57])
                                                            Texp_ident "i/4835"
                                                      ]
                                                ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[1725,51796+2]..lib/grammarFunctor.ml[1726,51815+50])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1725,51796+6]..lib/grammarFunctor.ml[1725,51796+13])
                                  Tpat_var "maximal/4836"
                                expression (lib/grammarFunctor.ml[1725,51796+14]..lib/grammarFunctor.ml[1726,51815+50]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1725,51796+14]..lib/grammarFunctor.ml[1725,51796+16])
                                        Tpat_var "nt/4838"
                                      expression (lib/grammarFunctor.ml[1726,51815+4]..lib/grammarFunctor.ml[1726,51815+50])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[1726,51815+4]..lib/grammarFunctor.ml[1726,51815+25])
                                          Texp_ident "Gbnf_parser!.NatInfinityMax.to_int"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[1726,51815+26]..lib/grammarFunctor.ml[1726,51815+50])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[1726,51815+27]..lib/grammarFunctor.ml[1726,51815+46])
                                                Texp_ident "MAXIMAL/4319.nonterminal"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[1726,51815+47]..lib/grammarFunctor.ml[1726,51815+49])
                                                    Texp_ident "nt/4838"
                                              ]
                                        ]
                                  ]
                            ]
                          structure_item (lib/grammarFunctor.ml[1728,51867+2]..lib/grammarFunctor.ml[1730,51947+53])
                            Tstr_value Nonrec
                            [
                              <def>
                                pattern (lib/grammarFunctor.ml[1728,51867+6]..lib/grammarFunctor.ml[1728,51867+18])
                                  Tpat_var "maximal_prod/4839"
                                expression (lib/grammarFunctor.ml[1728,51867+19]..lib/grammarFunctor.ml[1730,51947+53]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/grammarFunctor.ml[1728,51867+19]..lib/grammarFunctor.ml[1728,51867+23])
                                        Tpat_var "prod/4841"
                                      expression (lib/grammarFunctor.ml[1728,51867+24]..lib/grammarFunctor.ml[1730,51947+53]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/grammarFunctor.ml[1728,51867+24]..lib/grammarFunctor.ml[1728,51867+25])
                                              Tpat_var "i/4842"
                                            expression (lib/grammarFunctor.ml[1729,51895+4]..lib/grammarFunctor.ml[1730,51947+53])
                                              Texp_sequence
                                              expression (lib/grammarFunctor.ml[1729,51895+4]..lib/grammarFunctor.ml[1729,51895+50])
                                                Texp_assert                                                expression (lib/grammarFunctor.ml[1729,51895+11]..lib/grammarFunctor.ml[1729,51895+50])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[1729,51895+19]..lib/grammarFunctor.ml[1729,51895+21])
                                                    Texp_ident "Stdlib!.&&"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[1729,51895+12]..lib/grammarFunctor.ml[1729,51895+18])
                                                        Texp_apply
                                                        expression (lib/grammarFunctor.ml[1729,51895+14]..lib/grammarFunctor.ml[1729,51895+16])
                                                          Texp_ident "Stdlib!.<="
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1729,51895+12]..lib/grammarFunctor.ml[1729,51895+13])
                                                              Texp_constant Const_int 0
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1729,51895+17]..lib/grammarFunctor.ml[1729,51895+18])
                                                              Texp_ident "i/4842"
                                                        ]
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[1729,51895+22]..lib/grammarFunctor.ml[1729,51895+49])
                                                        Texp_apply
                                                        expression (lib/grammarFunctor.ml[1729,51895+24]..lib/grammarFunctor.ml[1729,51895+26])
                                                          Texp_ident "Stdlib!.<="
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1729,51895+22]..lib/grammarFunctor.ml[1729,51895+23])
                                                              Texp_ident "i/4842"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1729,51895+27]..lib/grammarFunctor.ml[1729,51895+49])
                                                              Texp_apply
                                                              expression (lib/grammarFunctor.ml[1729,51895+27]..lib/grammarFunctor.ml[1729,51895+44])
                                                                Texp_ident "Production/3564.length"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/grammarFunctor.ml[1729,51895+45]..lib/grammarFunctor.ml[1729,51895+49])
                                                                    Texp_ident "prod/4841"
                                                              ]
                                                        ]
                                                  ]
                                              expression (lib/grammarFunctor.ml[1730,51947+4]..lib/grammarFunctor.ml[1730,51947+53])
                                                Texp_apply
                                                expression (lib/grammarFunctor.ml[1730,51947+4]..lib/grammarFunctor.ml[1730,51947+25])
                                                  Texp_ident "Gbnf_parser!.NatInfinityMax.to_int"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[1730,51947+26]..lib/grammarFunctor.ml[1730,51947+53])
                                                      Texp_apply
                                                      expression (lib/grammarFunctor.ml[1730,51947+27]..lib/grammarFunctor.ml[1730,51947+45])
                                                        Texp_ident "MAXIMAL/4319.production"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[1730,51947+46]..lib/grammarFunctor.ml[1730,51947+50])
                                                            Texp_ident "prod/4841"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[1730,51947+51]..lib/grammarFunctor.ml[1730,51947+52])
                                                            Texp_ident "i/4842"
                                                      ]
                                                ]
                                        ]
                                  ]
                            ]
                        ]
                structure_item (lib/grammarFunctor.ml[1737,52130+0]..lib/grammarFunctor.ml[1833,54751+3])
                  Tstr_module
                  Precedence/4885
                    module_expr (lib/grammarFunctor.ml[1737,52130+20]..lib/grammarFunctor.ml[1833,54751+3])
                      Tmod_structure
                      [
                        structure_item (lib/grammarFunctor.ml[1739,52158+2]..lib/grammarFunctor.ml[1743,52231+14])
                          Tstr_type Rec
                          [
                            type_declaration choice/4844 (lib/grammarFunctor.ml[1739,52158+2]..lib/grammarFunctor.ml[1743,52231+14])
                              ptype_params =
                                []
                              ptype_cstrs =
                                []
                              ptype_kind =
                                Ttype_variant
                                  [
                                    (lib/grammarFunctor.ml[1740,52174+4]..lib/grammarFunctor.ml[1740,52174+17])
                                      ChooseShift/4845
                                      []
                                      None
                                    (lib/grammarFunctor.ml[1741,52192+4]..lib/grammarFunctor.ml[1741,52192+18])
                                      ChooseReduce/4846
                                      []
                                      None
                                    (lib/grammarFunctor.ml[1742,52211+4]..lib/grammarFunctor.ml[1742,52211+19])
                                      ChooseNeither/4847
                                      []
                                      None
                                    (lib/grammarFunctor.ml[1743,52231+4]..lib/grammarFunctor.ml[1743,52231+14])
                                      DontKnow/4848
                                      []
                                      None
                                  ]
                              ptype_private = Public
                              ptype_manifest =
                                None
                          ]
                        structure_item (lib/grammarFunctor.ml[1745,52247+2]..lib/grammarFunctor.ml[1745,52247+32])
                          Tstr_type Rec
                          [
                            type_declaration order/4849 (lib/grammarFunctor.ml[1745,52247+2]..lib/grammarFunctor.ml[1745,52247+32])
                              ptype_params =
                                []
                              ptype_cstrs =
                                []
                              ptype_kind =
                                Ttype_variant
                                  [
                                    (lib/grammarFunctor.ml[1745,52247+15]..lib/grammarFunctor.ml[1745,52247+17])
                                      Lt/4850
                                      []
                                      None
                                    (lib/grammarFunctor.ml[1745,52247+18]..lib/grammarFunctor.ml[1745,52247+22])
                                      Gt/4851
                                      []
                                      None
                                    (lib/grammarFunctor.ml[1745,52247+23]..lib/grammarFunctor.ml[1745,52247+27])
                                      Eq/4852
                                      []
                                      None
                                    (lib/grammarFunctor.ml[1745,52247+28]..lib/grammarFunctor.ml[1745,52247+32])
                                      Ic/4853
                                      []
                                      None
                                  ]
                              ptype_private = Public
                              ptype_manifest =
                                None
                          ]
                        structure_item (lib/grammarFunctor.ml[1747,52281+2]..lib/grammarFunctor.ml[1761,52684+16])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1747,52281+6]..lib/grammarFunctor.ml[1747,52281+22])
                                Tpat_var "precedence_order/4854"
                              expression (lib/grammarFunctor.ml[1747,52281+23]..lib/grammarFunctor.ml[1761,52684+16]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[1747,52281+23]..lib/grammarFunctor.ml[1747,52281+25])
                                      Tpat_var "p1/4856"
                                    expression (lib/grammarFunctor.ml[1747,52281+26]..lib/grammarFunctor.ml[1761,52684+16]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (lib/grammarFunctor.ml[1747,52281+26]..lib/grammarFunctor.ml[1747,52281+28])
                                            Tpat_var "p2/4857"
                                          expression (lib/grammarFunctor.ml[1748,52312+4]..lib/grammarFunctor.ml[1761,52684+16])
                                            Texp_match
                                            expression (lib/grammarFunctor.ml[1748,52312+10]..lib/grammarFunctor.ml[1748,52312+16])
                                              Texp_tuple
                                              [
                                                expression (lib/grammarFunctor.ml[1748,52312+10]..lib/grammarFunctor.ml[1748,52312+12])
                                                  Texp_ident "p1/4856"
                                                expression (lib/grammarFunctor.ml[1748,52312+14]..lib/grammarFunctor.ml[1748,52312+16])
                                                  Texp_ident "p2/4857"
                                              ]
                                            [
                                              <case>
                                                pattern (lib/grammarFunctor.ml[1749,52334+8]..lib/grammarFunctor.ml[1750,52365+30])
                                                  Tpat_or
                                                  pattern (lib/grammarFunctor.ml[1749,52334+8]..lib/grammarFunctor.ml[1749,52334+30])
                                                    Tpat_value
                                                    pattern (lib/grammarFunctor.ml[1749,52334+8]..lib/grammarFunctor.ml[1749,52334+30])
                                                      Tpat_tuple
                                                      [
                                                        pattern (lib/grammarFunctor.ml[1749,52334+8]..lib/grammarFunctor.ml[1749,52334+27])
                                                          Tpat_construct "UndefinedPrecedence"
                                                          []
                                                          None
                                                        pattern (lib/grammarFunctor.ml[1749,52334+29]..lib/grammarFunctor.ml[1749,52334+30])
                                                          Tpat_any
                                                      ]
                                                  pattern (lib/grammarFunctor.ml[1750,52365+8]..lib/grammarFunctor.ml[1750,52365+30])
                                                    Tpat_value
                                                    pattern (lib/grammarFunctor.ml[1750,52365+8]..lib/grammarFunctor.ml[1750,52365+30])
                                                      Tpat_tuple
                                                      [
                                                        pattern (lib/grammarFunctor.ml[1750,52365+8]..lib/grammarFunctor.ml[1750,52365+9])
                                                          Tpat_any
                                                        pattern (lib/grammarFunctor.ml[1750,52365+11]..lib/grammarFunctor.ml[1750,52365+30])
                                                          Tpat_construct "UndefinedPrecedence"
                                                          []
                                                          None
                                                      ]
                                                expression (lib/grammarFunctor.ml[1751,52399+10]..lib/grammarFunctor.ml[1751,52399+12])
                                                  Texp_construct "Ic"
                                                  []
                                              <case>
                                                pattern (lib/grammarFunctor.ml[1752,52412+8]..lib/grammarFunctor.ml[1752,52412+70])
                                                  Tpat_value
                                                  pattern (lib/grammarFunctor.ml[1752,52412+8]..lib/grammarFunctor.ml[1752,52412+70])
                                                    Tpat_tuple
                                                    [
                                                      pattern (lib/grammarFunctor.ml[1752,52412+8]..lib/grammarFunctor.ml[1752,52412+38])
                                                        Tpat_construct "PrecedenceLevel"
                                                        [
                                                          pattern (lib/grammarFunctor.ml[1752,52412+25]..lib/grammarFunctor.ml[1752,52412+27])
                                                            Tpat_var "m1/4858"
                                                          pattern (lib/grammarFunctor.ml[1752,52412+29]..lib/grammarFunctor.ml[1752,52412+31])
                                                            Tpat_var "l1/4859"
                                                          pattern (lib/grammarFunctor.ml[1752,52412+33]..lib/grammarFunctor.ml[1752,52412+34])
                                                            Tpat_any
                                                          pattern (lib/grammarFunctor.ml[1752,52412+36]..lib/grammarFunctor.ml[1752,52412+37])
                                                            Tpat_any
                                                        ]
                                                        None
                                                      pattern (lib/grammarFunctor.ml[1752,52412+40]..lib/grammarFunctor.ml[1752,52412+70])
                                                        Tpat_construct "PrecedenceLevel"
                                                        [
                                                          pattern (lib/grammarFunctor.ml[1752,52412+57]..lib/grammarFunctor.ml[1752,52412+59])
                                                            Tpat_var "m2/4860"
                                                          pattern (lib/grammarFunctor.ml[1752,52412+61]..lib/grammarFunctor.ml[1752,52412+63])
                                                            Tpat_var "l2/4861"
                                                          pattern (lib/grammarFunctor.ml[1752,52412+65]..lib/grammarFunctor.ml[1752,52412+66])
                                                            Tpat_any
                                                          pattern (lib/grammarFunctor.ml[1752,52412+68]..lib/grammarFunctor.ml[1752,52412+69])
                                                            Tpat_any
                                                        ]
                                                        None
                                                    ]
                                                expression (lib/grammarFunctor.ml[1753,52486+10]..lib/grammarFunctor.ml[1761,52684+16])
                                                  Texp_ifthenelse
                                                  expression (lib/grammarFunctor.ml[1753,52486+13]..lib/grammarFunctor.ml[1753,52486+50])
                                                    Texp_apply
                                                    expression (lib/grammarFunctor.ml[1753,52486+13]..lib/grammarFunctor.ml[1753,52486+16])
                                                      Texp_ident "Stdlib!.not"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[1753,52486+17]..lib/grammarFunctor.ml[1753,52486+50])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[1753,52486+18]..lib/grammarFunctor.ml[1753,52486+43])
                                                            Texp_ident "Gbnf_parser!.InputFile.same_input_file"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[1753,52486+44]..lib/grammarFunctor.ml[1753,52486+46])
                                                                Texp_ident "m1/4858"
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[1753,52486+47]..lib/grammarFunctor.ml[1753,52486+49])
                                                                Texp_ident "m2/4860"
                                                          ]
                                                    ]
                                                  expression (lib/grammarFunctor.ml[1754,52542+12]..lib/grammarFunctor.ml[1754,52542+14])
                                                    Texp_construct "Ic"
                                                    []
                                                  Some
                                                    expression (lib/grammarFunctor.ml[1756,52572+12]..lib/grammarFunctor.ml[1761,52684+16])
                                                      Texp_ifthenelse
                                                      expression (lib/grammarFunctor.ml[1756,52572+15]..lib/grammarFunctor.ml[1756,52572+22])
                                                        Texp_apply
                                                        expression (lib/grammarFunctor.ml[1756,52572+18]..lib/grammarFunctor.ml[1756,52572+19])
                                                          Texp_ident "Stdlib!.>"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1756,52572+15]..lib/grammarFunctor.ml[1756,52572+17])
                                                              Texp_ident "l1/4859"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1756,52572+20]..lib/grammarFunctor.ml[1756,52572+22])
                                                              Texp_ident "l2/4861"
                                                        ]
                                                      expression (lib/grammarFunctor.ml[1757,52600+14]..lib/grammarFunctor.ml[1757,52600+16])
                                                        Texp_construct "Gt"
                                                        []
                                                      Some
                                                        expression (lib/grammarFunctor.ml[1758,52617+17]..lib/grammarFunctor.ml[1761,52684+16])
                                                          Texp_ifthenelse
                                                          expression (lib/grammarFunctor.ml[1758,52617+20]..lib/grammarFunctor.ml[1758,52617+27])
                                                            Texp_apply
                                                            expression (lib/grammarFunctor.ml[1758,52617+23]..lib/grammarFunctor.ml[1758,52617+24])
                                                              Texp_ident "Stdlib!.<"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/grammarFunctor.ml[1758,52617+20]..lib/grammarFunctor.ml[1758,52617+22])
                                                                  Texp_ident "l1/4859"
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/grammarFunctor.ml[1758,52617+25]..lib/grammarFunctor.ml[1758,52617+27])
                                                                  Texp_ident "l2/4861"
                                                            ]
                                                          expression (lib/grammarFunctor.ml[1759,52650+14]..lib/grammarFunctor.ml[1759,52650+16])
                                                            Texp_construct "Lt"
                                                            []
                                                          Some
                                                            expression (lib/grammarFunctor.ml[1761,52684+14]..lib/grammarFunctor.ml[1761,52684+16])
                                                              Texp_construct "Eq"
                                                              []
                                            ]
                                      ]
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[1763,52702+2]..lib/grammarFunctor.ml[1774,53015+16])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1763,52702+6]..lib/grammarFunctor.ml[1763,52702+22])
                                Tpat_var "production_order/4862"
                              expression (lib/grammarFunctor.ml[1763,52702+23]..lib/grammarFunctor.ml[1774,53015+16]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[1763,52702+23]..lib/grammarFunctor.ml[1763,52702+25])
                                      Tpat_var "p1/4864"
                                    expression (lib/grammarFunctor.ml[1763,52702+26]..lib/grammarFunctor.ml[1774,53015+16]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (lib/grammarFunctor.ml[1763,52702+26]..lib/grammarFunctor.ml[1763,52702+28])
                                            Tpat_var "p2/4865"
                                          expression (lib/grammarFunctor.ml[1764,52733+4]..lib/grammarFunctor.ml[1774,53015+16])
                                            Texp_match
                                            expression (lib/grammarFunctor.ml[1764,52733+10]..lib/grammarFunctor.ml[1764,52733+16])
                                              Texp_tuple
                                              [
                                                expression (lib/grammarFunctor.ml[1764,52733+10]..lib/grammarFunctor.ml[1764,52733+12])
                                                  Texp_ident "p1/4864"
                                                expression (lib/grammarFunctor.ml[1764,52733+14]..lib/grammarFunctor.ml[1764,52733+16])
                                                  Texp_ident "p2/4865"
                                              ]
                                            [
                                              <case>
                                                pattern (lib/grammarFunctor.ml[1765,52755+8]..lib/grammarFunctor.ml[1765,52755+58])
                                                  Tpat_value
                                                  pattern (lib/grammarFunctor.ml[1765,52755+8]..lib/grammarFunctor.ml[1765,52755+58])
                                                    Tpat_tuple
                                                    [
                                                      pattern (lib/grammarFunctor.ml[1765,52755+8]..lib/grammarFunctor.ml[1765,52755+32])
                                                        Tpat_construct "ProductionLevel"
                                                        [
                                                          pattern (lib/grammarFunctor.ml[1765,52755+25]..lib/grammarFunctor.ml[1765,52755+27])
                                                            Tpat_var "m1/4866"
                                                          pattern (lib/grammarFunctor.ml[1765,52755+29]..lib/grammarFunctor.ml[1765,52755+31])
                                                            Tpat_var "l1/4867"
                                                        ]
                                                        None
                                                      pattern (lib/grammarFunctor.ml[1765,52755+34]..lib/grammarFunctor.ml[1765,52755+58])
                                                        Tpat_construct "ProductionLevel"
                                                        [
                                                          pattern (lib/grammarFunctor.ml[1765,52755+51]..lib/grammarFunctor.ml[1765,52755+53])
                                                            Tpat_var "m2/4868"
                                                          pattern (lib/grammarFunctor.ml[1765,52755+55]..lib/grammarFunctor.ml[1765,52755+57])
                                                            Tpat_var "l2/4869"
                                                        ]
                                                        None
                                                    ]
                                                expression (lib/grammarFunctor.ml[1766,52817+10]..lib/grammarFunctor.ml[1774,53015+16])
                                                  Texp_ifthenelse
                                                  expression (lib/grammarFunctor.ml[1766,52817+13]..lib/grammarFunctor.ml[1766,52817+50])
                                                    Texp_apply
                                                    expression (lib/grammarFunctor.ml[1766,52817+13]..lib/grammarFunctor.ml[1766,52817+16])
                                                      Texp_ident "Stdlib!.not"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[1766,52817+17]..lib/grammarFunctor.ml[1766,52817+50])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[1766,52817+18]..lib/grammarFunctor.ml[1766,52817+43])
                                                            Texp_ident "Gbnf_parser!.InputFile.same_input_file"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[1766,52817+44]..lib/grammarFunctor.ml[1766,52817+46])
                                                                Texp_ident "m1/4866"
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[1766,52817+47]..lib/grammarFunctor.ml[1766,52817+49])
                                                                Texp_ident "m2/4868"
                                                          ]
                                                    ]
                                                  expression (lib/grammarFunctor.ml[1767,52873+12]..lib/grammarFunctor.ml[1767,52873+14])
                                                    Texp_construct "Ic"
                                                    []
                                                  Some
                                                    expression (lib/grammarFunctor.ml[1769,52903+12]..lib/grammarFunctor.ml[1774,53015+16])
                                                      Texp_ifthenelse
                                                      expression (lib/grammarFunctor.ml[1769,52903+15]..lib/grammarFunctor.ml[1769,52903+22])
                                                        Texp_apply
                                                        expression (lib/grammarFunctor.ml[1769,52903+18]..lib/grammarFunctor.ml[1769,52903+19])
                                                          Texp_ident "Stdlib!.>"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1769,52903+15]..lib/grammarFunctor.ml[1769,52903+17])
                                                              Texp_ident "l1/4867"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1769,52903+20]..lib/grammarFunctor.ml[1769,52903+22])
                                                              Texp_ident "l2/4869"
                                                        ]
                                                      expression (lib/grammarFunctor.ml[1770,52931+14]..lib/grammarFunctor.ml[1770,52931+16])
                                                        Texp_construct "Gt"
                                                        []
                                                      Some
                                                        expression (lib/grammarFunctor.ml[1771,52948+17]..lib/grammarFunctor.ml[1774,53015+16])
                                                          Texp_ifthenelse
                                                          expression (lib/grammarFunctor.ml[1771,52948+20]..lib/grammarFunctor.ml[1771,52948+27])
                                                            Texp_apply
                                                            expression (lib/grammarFunctor.ml[1771,52948+23]..lib/grammarFunctor.ml[1771,52948+24])
                                                              Texp_ident "Stdlib!.<"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/grammarFunctor.ml[1771,52948+20]..lib/grammarFunctor.ml[1771,52948+22])
                                                                  Texp_ident "l1/4867"
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/grammarFunctor.ml[1771,52948+25]..lib/grammarFunctor.ml[1771,52948+27])
                                                                  Texp_ident "l2/4869"
                                                            ]
                                                          expression (lib/grammarFunctor.ml[1772,52981+14]..lib/grammarFunctor.ml[1772,52981+16])
                                                            Texp_construct "Lt"
                                                            []
                                                          Some
                                                            expression (lib/grammarFunctor.ml[1774,53015+14]..lib/grammarFunctor.ml[1774,53015+16])
                                                              Texp_construct "Eq"
                                                              []
                                            ]
                                      ]
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[1776,53033+2]..lib/grammarFunctor.ml[1813,54142+23])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1776,53033+6]..lib/grammarFunctor.ml[1776,53033+18])
                                Tpat_var "shift_reduce/4870"
                              expression (lib/grammarFunctor.ml[1776,53033+19]..lib/grammarFunctor.ml[1813,54142+23]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[1776,53033+19]..lib/grammarFunctor.ml[1776,53033+22])
                                      Tpat_var "tok/4872"
                                    expression (lib/grammarFunctor.ml[1776,53033+23]..lib/grammarFunctor.ml[1813,54142+23]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (lib/grammarFunctor.ml[1776,53033+23]..lib/grammarFunctor.ml[1776,53033+27])
                                            Tpat_var "prod/4873"
                                          expression (lib/grammarFunctor.ml[1777,53063+4]..lib/grammarFunctor.ml[1813,54142+23])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (lib/grammarFunctor.ml[1777,53063+8]..lib/grammarFunctor.ml[1777,53063+19])
                                                  Tpat_tuple
                                                  [
                                                    pattern (lib/grammarFunctor.ml[1777,53063+8]..lib/grammarFunctor.ml[1777,53063+13])
                                                      Tpat_var "fact1/4874"
                                                    pattern (lib/grammarFunctor.ml[1777,53063+15]..lib/grammarFunctor.ml[1777,53063+19])
                                                      Tpat_var "tokp/4875"
                                                  ]
                                                expression (lib/grammarFunctor.ml[1777,53063+23]..lib/grammarFunctor.ml[1777,53063+52])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[1777,53063+23]..lib/grammarFunctor.ml[1777,53063+48])
                                                    Texp_ident "Terminal/2246.precedence_level"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[1777,53063+49]..lib/grammarFunctor.ml[1777,53063+52])
                                                        Texp_ident "tok/4872"
                                                  ]
                                              <def>
                                                pattern (lib/grammarFunctor.ml[1778,53116+8]..lib/grammarFunctor.ml[1778,53116+20])
                                                  Tpat_tuple
                                                  [
                                                    pattern (lib/grammarFunctor.ml[1778,53116+8]..lib/grammarFunctor.ml[1778,53116+13])
                                                      Tpat_var "fact2/4876"
                                                    pattern (lib/grammarFunctor.ml[1778,53116+15]..lib/grammarFunctor.ml[1778,53116+20])
                                                      Tpat_var "prodp/4877"
                                                  ]
                                                expression (lib/grammarFunctor.ml[1778,53116+23]..lib/grammarFunctor.ml[1778,53116+49])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[1778,53116+23]..lib/grammarFunctor.ml[1778,53116+44])
                                                    Texp_ident "Production/3564.precedence"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[1778,53116+45]..lib/grammarFunctor.ml[1778,53116+49])
                                                        Texp_ident "prod/4873"
                                                  ]
                                            ]
                                            expression (lib/grammarFunctor.ml[1779,53169+4]..lib/grammarFunctor.ml[1813,54142+23])
                                              Texp_match
                                              expression (lib/grammarFunctor.ml[1779,53169+10]..lib/grammarFunctor.ml[1779,53169+37])
                                                Texp_apply
                                                expression (lib/grammarFunctor.ml[1779,53169+10]..lib/grammarFunctor.ml[1779,53169+26])
                                                  Texp_ident "precedence_order/4854"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[1779,53169+27]..lib/grammarFunctor.ml[1779,53169+31])
                                                      Texp_ident "tokp/4875"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[1779,53169+32]..lib/grammarFunctor.ml[1779,53169+37])
                                                      Texp_ident "prodp/4877"
                                                ]
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[1784,53351+6]..lib/grammarFunctor.ml[1784,53351+8])
                                                    Tpat_value
                                                    pattern (lib/grammarFunctor.ml[1784,53351+6]..lib/grammarFunctor.ml[1784,53351+8])
                                                      Tpat_construct "Ic"
                                                      []
                                                      None
                                                  expression (lib/grammarFunctor.ml[1785,53363+8]..lib/grammarFunctor.ml[1785,53363+16])
                                                    Texp_construct "DontKnow"
                                                    []
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[1790,53482+6]..lib/grammarFunctor.ml[1790,53482+25])
                                                    Tpat_value
                                                    pattern (lib/grammarFunctor.ml[1790,53482+6]..lib/grammarFunctor.ml[1790,53482+25])
                                                      Tpat_alias "c/4878"
                                                      pattern (lib/grammarFunctor.ml[1790,53482+6]..lib/grammarFunctor.ml[1790,53482+20])
                                                        Tpat_or
                                                        pattern (lib/grammarFunctor.ml[1790,53482+7]..lib/grammarFunctor.ml[1790,53482+14])
                                                          Tpat_or
                                                          pattern (lib/grammarFunctor.ml[1790,53482+7]..lib/grammarFunctor.ml[1790,53482+9])
                                                            Tpat_construct "Eq"
                                                            []
                                                            None
                                                          pattern (lib/grammarFunctor.ml[1790,53482+12]..lib/grammarFunctor.ml[1790,53482+14])
                                                            Tpat_construct "Lt"
                                                            []
                                                            None
                                                        pattern (lib/grammarFunctor.ml[1790,53482+17]..lib/grammarFunctor.ml[1790,53482+19])
                                                          Tpat_construct "Gt"
                                                          []
                                                          None
                                                  expression (lib/grammarFunctor.ml[1791,53511+8]..lib/grammarFunctor.ml[1813,54142+23])
                                                    Texp_sequence
                                                    expression (lib/grammarFunctor.ml[1791,53511+8]..lib/grammarFunctor.ml[1791,53511+24])
                                                      Texp_apply
                                                      expression (lib/grammarFunctor.ml[1791,53511+8]..lib/grammarFunctor.ml[1791,53511+18])
                                                        Texp_ident "Stdlib!.Lazy.force"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[1791,53511+19]..lib/grammarFunctor.ml[1791,53511+24])
                                                            Texp_ident "fact1/4874"
                                                      ]
                                                    expression (lib/grammarFunctor.ml[1792,53537+8]..lib/grammarFunctor.ml[1813,54142+23])
                                                      Texp_sequence
                                                      expression (lib/grammarFunctor.ml[1792,53537+8]..lib/grammarFunctor.ml[1792,53537+24])
                                                        Texp_apply
                                                        expression (lib/grammarFunctor.ml[1792,53537+8]..lib/grammarFunctor.ml[1792,53537+18])
                                                          Texp_ident "Stdlib!.Lazy.force"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1792,53537+19]..lib/grammarFunctor.ml[1792,53537+24])
                                                              Texp_ident "fact2/4876"
                                                        ]
                                                      expression (lib/grammarFunctor.ml[1793,53563+8]..lib/grammarFunctor.ml[1813,54142+23])
                                                        Texp_match
                                                        expression (lib/grammarFunctor.ml[1793,53563+14]..lib/grammarFunctor.ml[1793,53563+15])
                                                          Texp_ident "c/4878"
                                                        [
                                                          <case>
                                                            pattern (lib/grammarFunctor.ml[1795,53585+10]..lib/grammarFunctor.ml[1795,53585+12])
                                                              Tpat_value
                                                              pattern (lib/grammarFunctor.ml[1795,53585+10]..lib/grammarFunctor.ml[1795,53585+12])
                                                                Tpat_construct "Ic"
                                                                []
                                                                None
                                                            expression (lib/grammarFunctor.ml[1796,53601+12]..lib/grammarFunctor.ml[1796,53601+24])
                                                              Texp_assert                                                              expression (lib/grammarFunctor.ml[1796,53601+19]..lib/grammarFunctor.ml[1796,53601+24])
                                                                Texp_construct "false"
                                                                []
                                                          <case>
                                                            pattern (lib/grammarFunctor.ml[1798,53652+10]..lib/grammarFunctor.ml[1798,53652+12])
                                                              Tpat_value
                                                              pattern (lib/grammarFunctor.ml[1798,53652+10]..lib/grammarFunctor.ml[1798,53652+12])
                                                                Tpat_construct "Eq"
                                                                []
                                                                None
                                                            expression (lib/grammarFunctor.ml[1799,53668+12]..lib/grammarFunctor.ml[1807,54067+15])
                                                              Texp_match
                                                              expression (lib/grammarFunctor.ml[1800,53686+20]..lib/grammarFunctor.ml[1800,53686+46])
                                                                Texp_apply
                                                                expression (lib/grammarFunctor.ml[1800,53686+20]..lib/grammarFunctor.ml[1800,53686+42])
                                                                  Texp_ident "Terminal/2246.associativity"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[1800,53686+43]..lib/grammarFunctor.ml[1800,53686+46])
                                                                      Texp_ident "tok/4872"
                                                                ]
                                                              [
                                                                <case>
                                                                  pattern (lib/grammarFunctor.ml[1801,53738+16]..lib/grammarFunctor.ml[1801,53738+25])
                                                                    Tpat_value
                                                                    pattern (lib/grammarFunctor.ml[1801,53738+16]..lib/grammarFunctor.ml[1801,53738+25])
                                                                      Tpat_construct "LeftAssoc"
                                                                      []
                                                                      None
                                                                  expression (lib/grammarFunctor.ml[1801,53738+30]..lib/grammarFunctor.ml[1801,53738+42])
                                                                    Texp_construct "ChooseReduce"
                                                                    []
                                                                <case>
                                                                  pattern (lib/grammarFunctor.ml[1802,53781+16]..lib/grammarFunctor.ml[1802,53781+26])
                                                                    Tpat_value
                                                                    pattern (lib/grammarFunctor.ml[1802,53781+16]..lib/grammarFunctor.ml[1802,53781+26])
                                                                      Tpat_construct "RightAssoc"
                                                                      []
                                                                      None
                                                                  expression (lib/grammarFunctor.ml[1802,53781+30]..lib/grammarFunctor.ml[1802,53781+41])
                                                                    Texp_construct "ChooseShift"
                                                                    []
                                                                <case>
                                                                  pattern (lib/grammarFunctor.ml[1803,53823+16]..lib/grammarFunctor.ml[1803,53823+24])
                                                                    Tpat_value
                                                                    pattern (lib/grammarFunctor.ml[1803,53823+16]..lib/grammarFunctor.ml[1803,53823+24])
                                                                      Tpat_construct "NonAssoc"
                                                                      []
                                                                      None
                                                                  expression (lib/grammarFunctor.ml[1803,53823+30]..lib/grammarFunctor.ml[1803,53823+43])
                                                                    Texp_construct "ChooseNeither"
                                                                    []
                                                                <case>
                                                                  pattern (lib/grammarFunctor.ml[1804,53867+16]..lib/grammarFunctor.ml[1804,53867+17])
                                                                    Tpat_value
                                                                    pattern (lib/grammarFunctor.ml[1804,53867+16]..lib/grammarFunctor.ml[1804,53867+17])
                                                                      Tpat_any
                                                                  expression (lib/grammarFunctor.ml[1804,53867+30]..lib/grammarFunctor.ml[1804,53867+42])
                                                                    Texp_assert                                                                    expression (lib/grammarFunctor.ml[1804,53867+37]..lib/grammarFunctor.ml[1804,53867+42])
                                                                      Texp_construct "false"
                                                                      []
                                                              ]
                                                          <case>
                                                            pattern (lib/grammarFunctor.ml[1809,54084+10]..lib/grammarFunctor.ml[1809,54084+12])
                                                              Tpat_value
                                                              pattern (lib/grammarFunctor.ml[1809,54084+10]..lib/grammarFunctor.ml[1809,54084+12])
                                                                Tpat_construct "Lt"
                                                                []
                                                                None
                                                            expression (lib/grammarFunctor.ml[1810,54100+12]..lib/grammarFunctor.ml[1810,54100+24])
                                                              Texp_construct "ChooseReduce"
                                                              []
                                                          <case>
                                                            pattern (lib/grammarFunctor.ml[1812,54126+10]..lib/grammarFunctor.ml[1812,54126+12])
                                                              Tpat_value
                                                              pattern (lib/grammarFunctor.ml[1812,54126+10]..lib/grammarFunctor.ml[1812,54126+12])
                                                                Tpat_construct "Gt"
                                                                []
                                                                None
                                                            expression (lib/grammarFunctor.ml[1813,54142+12]..lib/grammarFunctor.ml[1813,54142+23])
                                                              Texp_construct "ChooseShift"
                                                              []
                                                        ]
                                              ]
                                      ]
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[1816,54168+2]..lib/grammarFunctor.ml[1831,54737+12])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1816,54168+6]..lib/grammarFunctor.ml[1816,54168+19])
                                Tpat_var "reduce_reduce/4879"
                              expression (lib/grammarFunctor.ml[1816,54168+20]..lib/grammarFunctor.ml[1831,54737+12]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[1816,54168+20]..lib/grammarFunctor.ml[1816,54168+25])
                                      Tpat_var "prod1/4881"
                                    expression (lib/grammarFunctor.ml[1816,54168+26]..lib/grammarFunctor.ml[1831,54737+12]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (lib/grammarFunctor.ml[1816,54168+26]..lib/grammarFunctor.ml[1816,54168+31])
                                            Tpat_var "prod2/4882"
                                          expression (lib/grammarFunctor.ml[1817,54202+4]..lib/grammarFunctor.ml[1831,54737+12])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (lib/grammarFunctor.ml[1817,54202+8]..lib/grammarFunctor.ml[1817,54202+11])
                                                  Tpat_var "pl1/4883"
                                                expression (lib/grammarFunctor.ml[1817,54202+14]..lib/grammarFunctor.ml[1817,54202+49])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[1817,54202+14]..lib/grammarFunctor.ml[1817,54202+49]) ghost
                                                    Texp_ident "Stdlib!.Array.get"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[1817,54202+14]..lib/grammarFunctor.ml[1817,54202+41])
                                                        Texp_ident "Production/3564.production_level"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[1817,54202+43]..lib/grammarFunctor.ml[1817,54202+48])
                                                        Texp_ident "prod1/4881"
                                                  ]
                                              <def>
                                                pattern (lib/grammarFunctor.ml[1818,54252+8]..lib/grammarFunctor.ml[1818,54252+11])
                                                  Tpat_var "pl2/4884"
                                                expression (lib/grammarFunctor.ml[1818,54252+14]..lib/grammarFunctor.ml[1818,54252+49])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[1818,54252+14]..lib/grammarFunctor.ml[1818,54252+49]) ghost
                                                    Texp_ident "Stdlib!.Array.get"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[1818,54252+14]..lib/grammarFunctor.ml[1818,54252+41])
                                                        Texp_ident "Production/3564.production_level"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[1818,54252+43]..lib/grammarFunctor.ml[1818,54252+48])
                                                        Texp_ident "prod2/4882"
                                                  ]
                                            ]
                                            expression (lib/grammarFunctor.ml[1819,54305+4]..lib/grammarFunctor.ml[1831,54737+12])
                                              Texp_match
                                              expression (lib/grammarFunctor.ml[1819,54305+10]..lib/grammarFunctor.ml[1819,54305+34])
                                                Texp_apply
                                                expression (lib/grammarFunctor.ml[1819,54305+10]..lib/grammarFunctor.ml[1819,54305+26])
                                                  Texp_ident "production_order/4862"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[1819,54305+27]..lib/grammarFunctor.ml[1819,54305+30])
                                                      Texp_ident "pl1/4883"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[1819,54305+31]..lib/grammarFunctor.ml[1819,54305+34])
                                                      Texp_ident "pl2/4884"
                                                ]
                                              [
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[1820,54345+6]..lib/grammarFunctor.ml[1820,54345+8])
                                                    Tpat_value
                                                    pattern (lib/grammarFunctor.ml[1820,54345+6]..lib/grammarFunctor.ml[1820,54345+8])
                                                      Tpat_construct "Lt"
                                                      []
                                                      None
                                                  expression (lib/grammarFunctor.ml[1821,54357+8]..lib/grammarFunctor.ml[1821,54357+18])
                                                    Texp_construct "Some"
                                                    [
                                                      expression (lib/grammarFunctor.ml[1821,54357+13]..lib/grammarFunctor.ml[1821,54357+18])
                                                        Texp_ident "prod1/4881"
                                                    ]
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[1822,54376+6]..lib/grammarFunctor.ml[1822,54376+8])
                                                    Tpat_value
                                                    pattern (lib/grammarFunctor.ml[1822,54376+6]..lib/grammarFunctor.ml[1822,54376+8])
                                                      Tpat_construct "Gt"
                                                      []
                                                      None
                                                  expression (lib/grammarFunctor.ml[1823,54388+8]..lib/grammarFunctor.ml[1823,54388+18])
                                                    Texp_construct "Some"
                                                    [
                                                      expression (lib/grammarFunctor.ml[1823,54388+13]..lib/grammarFunctor.ml[1823,54388+18])
                                                        Texp_ident "prod2/4882"
                                                    ]
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[1824,54407+6]..lib/grammarFunctor.ml[1824,54407+8])
                                                    Tpat_value
                                                    pattern (lib/grammarFunctor.ml[1824,54407+6]..lib/grammarFunctor.ml[1824,54407+8])
                                                      Tpat_construct "Eq"
                                                      []
                                                      None
                                                  expression (lib/grammarFunctor.ml[1829,54712+8]..lib/grammarFunctor.ml[1829,54712+12])
                                                    Texp_construct "None"
                                                    []
                                                <case>
                                                  pattern (lib/grammarFunctor.ml[1830,54725+6]..lib/grammarFunctor.ml[1830,54725+8])
                                                    Tpat_value
                                                    pattern (lib/grammarFunctor.ml[1830,54725+6]..lib/grammarFunctor.ml[1830,54725+8])
                                                      Tpat_construct "Ic"
                                                      []
                                                      None
                                                  expression (lib/grammarFunctor.ml[1831,54737+8]..lib/grammarFunctor.ml[1831,54737+12])
                                                    Texp_construct "None"
                                                    []
                                              ]
                                      ]
                                ]
                          ]
                      ]
                structure_item (lib/grammarFunctor.ml[1848,55280+0]..lib/grammarFunctor.ml[1911,57278+3])
                  Tstr_module
                  OnErrorReduce/4908
                    module_expr (lib/grammarFunctor.ml[1848,55280+23]..lib/grammarFunctor.ml[1911,57278+3])
                      Tmod_structure
                      [
                        structure_item (lib/grammarFunctor.ml[1854,55521+2]..lib/grammarFunctor.ml[1855,55585+27])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1854,55521+6]..lib/grammarFunctor.ml[1854,55521+18])
                                extra
                                  Tpat_extra_constraint
                                  core_type (lib/grammarFunctor.ml[1854,55521+21]..lib/grammarFunctor.ml[1854,55521+61])
                                    Ttyp_constr "Gbnf_parser!.StringMap.t"
                                    [
                                      core_type (lib/grammarFunctor.ml[1854,55521+21]..lib/grammarFunctor.ml[1854,55521+49])
                                        Ttyp_constr "Gbnf_parser!.Syntax.on_error_reduce_level"
                                        []
                                    ]
                                Tpat_alias "declarations/4886"
                                pattern (lib/grammarFunctor.ml[1854,55521+6]..lib/grammarFunctor.ml[1854,55521+18])
                                  Tpat_any
                              expression (lib/grammarFunctor.ml[1855,55585+4]..lib/grammarFunctor.ml[1855,55585+27])
                                extra
                                  Texp_constraint
                                  core_type (lib/grammarFunctor.ml[1854,55521+21]..lib/grammarFunctor.ml[1854,55521+61])
                                    Ttyp_constr "Gbnf_parser!.StringMap.t"
                                    [
                                      core_type (lib/grammarFunctor.ml[1854,55521+21]..lib/grammarFunctor.ml[1854,55521+49])
                                        Ttyp_constr "Gbnf_parser!.Syntax.on_error_reduce_level"
                                        []
                                    ]
                                Texp_field
                                expression (lib/grammarFunctor.ml[1855,55585+4]..lib/grammarFunctor.ml[1855,55585+11])
                                  Texp_ident "G/1226.grammar"
                                "on_error_reduce"
                          ]
                        structure_item (lib/grammarFunctor.ml[1857,55614+2]..lib/grammarFunctor.ml[1858,55658+30])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1857,55614+6]..lib/grammarFunctor.ml[1857,55614+11])
                                Tpat_var "print/4887"
                              expression (lib/grammarFunctor.ml[1857,55614+12]..lib/grammarFunctor.ml[1858,55658+30]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[1857,55614+13]..lib/grammarFunctor.ml[1857,55614+15])
                                      extra
                                        Tpat_extra_constraint
                                        core_type (lib/grammarFunctor.ml[1857,55614+18]..lib/grammarFunctor.ml[1857,55614+31])
                                          Ttyp_constr "Nonterminal/2057.t"
                                          []
                                      Tpat_alias "nt/4888"
                                      pattern (lib/grammarFunctor.ml[1857,55614+13]..lib/grammarFunctor.ml[1857,55614+15])
                                        Tpat_any
                                    expression (lib/grammarFunctor.ml[1858,55658+4]..lib/grammarFunctor.ml[1858,55658+30])
                                      extra
                                        Texp_constraint
                                        core_type (lib/grammarFunctor.ml[1857,55614+35]..lib/grammarFunctor.ml[1857,55614+41])
                                          Ttyp_constr "string/15!"
                                          []
                                      Texp_apply
                                      expression (lib/grammarFunctor.ml[1858,55658+4]..lib/grammarFunctor.ml[1858,55658+21])
                                        Texp_ident "Nonterminal/2057.print"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[1858,55658+22]..lib/grammarFunctor.ml[1858,55658+27])
                                            Texp_construct "false"
                                            []
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[1858,55658+28]..lib/grammarFunctor.ml[1858,55658+30])
                                            Texp_ident "nt/4888"
                                      ]
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[1860,55690+2]..lib/grammarFunctor.ml[1866,55899+18])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1860,55690+6]..lib/grammarFunctor.ml[1860,55690+12])
                                Tpat_var "lookup/4889"
                              expression (lib/grammarFunctor.ml[1860,55690+13]..lib/grammarFunctor.ml[1866,55899+18]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[1860,55690+14]..lib/grammarFunctor.ml[1860,55690+16])
                                      extra
                                        Tpat_extra_constraint
                                        core_type (lib/grammarFunctor.ml[1860,55690+19]..lib/grammarFunctor.ml[1860,55690+25])
                                          Ttyp_constr "string/15!"
                                          []
                                      Tpat_alias "nt/4891"
                                      pattern (lib/grammarFunctor.ml[1860,55690+14]..lib/grammarFunctor.ml[1860,55690+16])
                                        Tpat_any
                                    expression (lib/grammarFunctor.ml[1861,55735+4]..lib/grammarFunctor.ml[1866,55899+18])
                                      extra
                                        Texp_constraint
                                        core_type (lib/grammarFunctor.ml[1860,55690+29]..lib/grammarFunctor.ml[1860,55690+42])
                                          Ttyp_constr "Nonterminal/2057.t"
                                          []
                                      Texp_try
                                      expression (lib/grammarFunctor.ml[1862,55743+6]..lib/grammarFunctor.ml[1862,55743+27])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[1862,55743+6]..lib/grammarFunctor.ml[1862,55743+24])
                                          Texp_ident "Nonterminal/2057.lookup"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[1862,55743+25]..lib/grammarFunctor.ml[1862,55743+27])
                                              Texp_ident "nt/4891"
                                        ]
                                      [
                                        <case>
                                          pattern (lib/grammarFunctor.ml[1863,55771+9]..lib/grammarFunctor.ml[1863,55771+18])
                                            Tpat_construct "Not_found"
                                            []
                                            None
                                          expression (lib/grammarFunctor.ml[1866,55899+6]..lib/grammarFunctor.ml[1866,55899+18])
                                            Texp_assert                                            expression (lib/grammarFunctor.ml[1866,55899+13]..lib/grammarFunctor.ml[1866,55899+18])
                                              Texp_construct "false"
                                              []
                                      ]
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[1868,55919+2]..lib/grammarFunctor.ml[1870,55974+41])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1868,55919+6]..lib/grammarFunctor.ml[1868,55919+12])
                                Tpat_var "reduce/4892"
                              expression (lib/grammarFunctor.ml[1868,55919+13]..lib/grammarFunctor.ml[1870,55974+41]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[1868,55919+13]..lib/grammarFunctor.ml[1868,55919+17])
                                      Tpat_var "prod/4894"
                                    expression (lib/grammarFunctor.ml[1869,55939+4]..lib/grammarFunctor.ml[1870,55974+41])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (lib/grammarFunctor.ml[1869,55939+8]..lib/grammarFunctor.ml[1869,55939+10])
                                            Tpat_var "nt/4895"
                                          expression (lib/grammarFunctor.ml[1869,55939+13]..lib/grammarFunctor.ml[1869,55939+31])
                                            Texp_apply
                                            expression (lib/grammarFunctor.ml[1869,55939+13]..lib/grammarFunctor.ml[1869,55939+26])
                                              Texp_ident "Production/3564.nt"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/grammarFunctor.ml[1869,55939+27]..lib/grammarFunctor.ml[1869,55939+31])
                                                  Texp_ident "prod/4894"
                                            ]
                                      ]
                                      expression (lib/grammarFunctor.ml[1870,55974+4]..lib/grammarFunctor.ml[1870,55974+41])
                                        Texp_apply
                                        expression (lib/grammarFunctor.ml[1870,55974+4]..lib/grammarFunctor.ml[1870,55974+17])
                                          Texp_ident "Gbnf_parser!.StringMap.mem"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[1870,55974+18]..lib/grammarFunctor.ml[1870,55974+28])
                                              Texp_apply
                                              expression (lib/grammarFunctor.ml[1870,55974+19]..lib/grammarFunctor.ml[1870,55974+24])
                                                Texp_ident "print/4887"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/grammarFunctor.ml[1870,55974+25]..lib/grammarFunctor.ml[1870,55974+27])
                                                    Texp_ident "nt/4895"
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (lib/grammarFunctor.ml[1870,55974+29]..lib/grammarFunctor.ml[1870,55974+41])
                                              Texp_ident "declarations/4886"
                                        ]
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[1872,56017+2]..lib/grammarFunctor.ml[1875,56088+18])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1872,56017+6]..lib/grammarFunctor.ml[1872,56017+10])
                                Tpat_var "iter/4896"
                              expression (lib/grammarFunctor.ml[1872,56017+11]..lib/grammarFunctor.ml[1875,56088+18]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[1872,56017+11]..lib/grammarFunctor.ml[1872,56017+12])
                                      Tpat_var "f/4897"
                                    expression (lib/grammarFunctor.ml[1873,56032+4]..lib/grammarFunctor.ml[1875,56088+18])
                                      Texp_apply
                                      expression (lib/grammarFunctor.ml[1873,56032+4]..lib/grammarFunctor.ml[1873,56032+18])
                                        Texp_ident "Gbnf_parser!.StringMap.iter"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[1873,56032+19]..lib/grammarFunctor.ml[1875,56088+5])
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (lib/grammarFunctor.ml[1873,56032+24]..lib/grammarFunctor.ml[1873,56032+26])
                                                  Tpat_var "nt/4898"
                                                expression (lib/grammarFunctor.ml[1873,56032+27]..lib/grammarFunctor.ml[1874,56068+19]) ghost
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (lib/grammarFunctor.ml[1873,56032+27]..lib/grammarFunctor.ml[1873,56032+32])
                                                        Tpat_var "_prec/4899"
                                                      expression (lib/grammarFunctor.ml[1874,56068+6]..lib/grammarFunctor.ml[1874,56068+19])
                                                        Texp_apply
                                                        expression (lib/grammarFunctor.ml[1874,56068+6]..lib/grammarFunctor.ml[1874,56068+7])
                                                          Texp_ident "f/4897"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1874,56068+8]..lib/grammarFunctor.ml[1874,56068+19])
                                                              Texp_apply
                                                              expression (lib/grammarFunctor.ml[1874,56068+9]..lib/grammarFunctor.ml[1874,56068+15])
                                                                Texp_ident "lookup/4889"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/grammarFunctor.ml[1874,56068+16]..lib/grammarFunctor.ml[1874,56068+18])
                                                                    Texp_ident "nt/4898"
                                                              ]
                                                        ]
                                                  ]
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[1875,56088+6]..lib/grammarFunctor.ml[1875,56088+18])
                                            Texp_ident "declarations/4886"
                                      ]
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[1877,56108+2]..lib/grammarFunctor.ml[1877,56108+17])
                          Tstr_open Fresh
                          module_expr (lib/grammarFunctor.ml[1877,56108+7]..lib/grammarFunctor.ml[1877,56108+17])
                            Tmod_ident "Precedence/4885"
                        structure_item (lib/grammarFunctor.ml[1879,56127+2]..lib/grammarFunctor.ml[1909,57263+13])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1879,56127+6]..lib/grammarFunctor.ml[1879,56127+16])
                                Tpat_var "preferable/4900"
                              expression (lib/grammarFunctor.ml[1879,56127+17]..lib/grammarFunctor.ml[1909,57263+13]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[1879,56127+17]..lib/grammarFunctor.ml[1879,56127+22])
                                      Tpat_var "prod1/4902"
                                    expression (lib/grammarFunctor.ml[1879,56127+23]..lib/grammarFunctor.ml[1909,57263+13]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (lib/grammarFunctor.ml[1879,56127+23]..lib/grammarFunctor.ml[1879,56127+28])
                                            Tpat_var "prod2/4903"
                                          expression (lib/grammarFunctor.ml[1881,56228+4]..lib/grammarFunctor.ml[1909,57263+13])
                                            Texp_sequence
                                            expression (lib/grammarFunctor.ml[1881,56228+4]..lib/grammarFunctor.ml[1881,56228+27])
                                              Texp_assert                                              expression (lib/grammarFunctor.ml[1881,56228+11]..lib/grammarFunctor.ml[1881,56228+27])
                                                Texp_apply
                                                expression (lib/grammarFunctor.ml[1881,56228+18]..lib/grammarFunctor.ml[1881,56228+20])
                                                  Texp_ident "Stdlib!.<>"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[1881,56228+12]..lib/grammarFunctor.ml[1881,56228+17])
                                                      Texp_ident "prod1/4902"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[1881,56228+21]..lib/grammarFunctor.ml[1881,56228+26])
                                                      Texp_ident "prod2/4903"
                                                ]
                                            expression (lib/grammarFunctor.ml[1882,56257+4]..lib/grammarFunctor.ml[1909,57263+13])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (lib/grammarFunctor.ml[1882,56257+8]..lib/grammarFunctor.ml[1882,56257+11])
                                                    Tpat_var "nt1/4904"
                                                  expression (lib/grammarFunctor.ml[1882,56257+14]..lib/grammarFunctor.ml[1882,56257+33])
                                                    Texp_apply
                                                    expression (lib/grammarFunctor.ml[1882,56257+14]..lib/grammarFunctor.ml[1882,56257+27])
                                                      Texp_ident "Production/3564.nt"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[1882,56257+28]..lib/grammarFunctor.ml[1882,56257+33])
                                                          Texp_ident "prod1/4902"
                                                    ]
                                                <def>
                                                  pattern (lib/grammarFunctor.ml[1883,56291+8]..lib/grammarFunctor.ml[1883,56291+11])
                                                    Tpat_var "nt2/4905"
                                                  expression (lib/grammarFunctor.ml[1883,56291+14]..lib/grammarFunctor.ml[1883,56291+33])
                                                    Texp_apply
                                                    expression (lib/grammarFunctor.ml[1883,56291+14]..lib/grammarFunctor.ml[1883,56291+27])
                                                      Texp_ident "Production/3564.nt"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[1883,56291+28]..lib/grammarFunctor.ml[1883,56291+33])
                                                          Texp_ident "prod2/4903"
                                                    ]
                                              ]
                                              expression (lib/grammarFunctor.ml[1886,56441+4]..lib/grammarFunctor.ml[1909,57263+13])
                                                Texp_apply
                                                expression (lib/grammarFunctor.ml[1886,56441+15]..lib/grammarFunctor.ml[1886,56441+17])
                                                  Texp_ident "Stdlib!.&&"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[1886,56441+4]..lib/grammarFunctor.ml[1886,56441+14])
                                                      Texp_apply
                                                      expression (lib/grammarFunctor.ml[1886,56441+8]..lib/grammarFunctor.ml[1886,56441+10])
                                                        Texp_ident "Stdlib!.<>"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[1886,56441+4]..lib/grammarFunctor.ml[1886,56441+7])
                                                            Texp_ident "nt1/4904"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/grammarFunctor.ml[1886,56441+11]..lib/grammarFunctor.ml[1886,56441+14])
                                                            Texp_ident "nt2/4905"
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/grammarFunctor.ml[1889,56556+4]..lib/grammarFunctor.ml[1909,57263+13])
                                                      Texp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (lib/grammarFunctor.ml[1889,56556+8]..lib/grammarFunctor.ml[1889,56556+20])
                                                            Tpat_tuple
                                                            [
                                                              pattern (lib/grammarFunctor.ml[1889,56556+8]..lib/grammarFunctor.ml[1889,56556+13])
                                                                Tpat_var "prec1/4906"
                                                              pattern (lib/grammarFunctor.ml[1889,56556+15]..lib/grammarFunctor.ml[1889,56556+20])
                                                                Tpat_var "prec2/4907"
                                                            ]
                                                          expression (lib/grammarFunctor.ml[1890,56579+6]..lib/grammarFunctor.ml[1896,56841+20])
                                                            Texp_try
                                                            expression (lib/grammarFunctor.ml[1891,56589+8]..lib/grammarFunctor.ml[1892,56638+47])
                                                              Texp_tuple
                                                              [
                                                                expression (lib/grammarFunctor.ml[1891,56589+8]..lib/grammarFunctor.ml[1891,56589+47])
                                                                  Texp_apply
                                                                  expression (lib/grammarFunctor.ml[1891,56589+8]..lib/grammarFunctor.ml[1891,56589+22])
                                                                    Texp_ident "Gbnf_parser!.StringMap.find"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[1891,56589+23]..lib/grammarFunctor.ml[1891,56589+34])
                                                                        Texp_apply
                                                                        expression (lib/grammarFunctor.ml[1891,56589+24]..lib/grammarFunctor.ml[1891,56589+29])
                                                                          Texp_ident "print/4887"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (lib/grammarFunctor.ml[1891,56589+30]..lib/grammarFunctor.ml[1891,56589+33])
                                                                              Texp_ident "nt1/4904"
                                                                        ]
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[1891,56589+35]..lib/grammarFunctor.ml[1891,56589+47])
                                                                        Texp_ident "declarations/4886"
                                                                  ]
                                                                expression (lib/grammarFunctor.ml[1892,56638+8]..lib/grammarFunctor.ml[1892,56638+47])
                                                                  Texp_apply
                                                                  expression (lib/grammarFunctor.ml[1892,56638+8]..lib/grammarFunctor.ml[1892,56638+22])
                                                                    Texp_ident "Gbnf_parser!.StringMap.find"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[1892,56638+23]..lib/grammarFunctor.ml[1892,56638+34])
                                                                        Texp_apply
                                                                        expression (lib/grammarFunctor.ml[1892,56638+24]..lib/grammarFunctor.ml[1892,56638+29])
                                                                          Texp_ident "print/4887"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (lib/grammarFunctor.ml[1892,56638+30]..lib/grammarFunctor.ml[1892,56638+33])
                                                                              Texp_ident "nt2/4905"
                                                                        ]
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/grammarFunctor.ml[1892,56638+35]..lib/grammarFunctor.ml[1892,56638+47])
                                                                        Texp_ident "declarations/4886"
                                                                  ]
                                                              ]
                                                            [
                                                              <case>
                                                                pattern (lib/grammarFunctor.ml[1893,56686+11]..lib/grammarFunctor.ml[1893,56686+20])
                                                                  Tpat_construct "Not_found"
                                                                  []
                                                                  None
                                                                expression (lib/grammarFunctor.ml[1896,56841+8]..lib/grammarFunctor.ml[1896,56841+20])
                                                                  Texp_assert                                                                  expression (lib/grammarFunctor.ml[1896,56841+15]..lib/grammarFunctor.ml[1896,56841+20])
                                                                    Texp_construct "false"
                                                                    []
                                                            ]
                                                      ]
                                                      expression (lib/grammarFunctor.ml[1898,56869+4]..lib/grammarFunctor.ml[1909,57263+13])
                                                        Texp_match
                                                        expression (lib/grammarFunctor.ml[1898,56869+10]..lib/grammarFunctor.ml[1898,56869+38])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[1898,56869+10]..lib/grammarFunctor.ml[1898,56869+26])
                                                            Texp_ident "Precedence/4885.production_order"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[1898,56869+27]..lib/grammarFunctor.ml[1898,56869+32])
                                                                Texp_ident "prec1/4906"
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[1898,56869+33]..lib/grammarFunctor.ml[1898,56869+38])
                                                                Texp_ident "prec2/4907"
                                                          ]
                                                        [
                                                          <case>
                                                            pattern (lib/grammarFunctor.ml[1899,56913+6]..lib/grammarFunctor.ml[1899,56913+8])
                                                              Tpat_value
                                                              pattern (lib/grammarFunctor.ml[1899,56913+6]..lib/grammarFunctor.ml[1899,56913+8])
                                                                Tpat_construct "Gt"
                                                                []
                                                                None
                                                            expression (lib/grammarFunctor.ml[1903,57122+8]..lib/grammarFunctor.ml[1903,57122+12])
                                                              Texp_construct "true"
                                                              []
                                                          <case>
                                                            pattern (lib/grammarFunctor.ml[1904,57135+6]..lib/grammarFunctor.ml[1904,57135+8])
                                                              Tpat_value
                                                              pattern (lib/grammarFunctor.ml[1904,57135+6]..lib/grammarFunctor.ml[1904,57135+8])
                                                                Tpat_construct "Lt"
                                                                []
                                                                None
                                                            expression (lib/grammarFunctor.ml[1905,57147+8]..lib/grammarFunctor.ml[1905,57147+13])
                                                              Texp_construct "false"
                                                              []
                                                          <case>
                                                            pattern (lib/grammarFunctor.ml[1906,57161+6]..lib/grammarFunctor.ml[1907,57170+8])
                                                              Tpat_or
                                                              pattern (lib/grammarFunctor.ml[1906,57161+6]..lib/grammarFunctor.ml[1906,57161+8])
                                                                Tpat_value
                                                                pattern (lib/grammarFunctor.ml[1906,57161+6]..lib/grammarFunctor.ml[1906,57161+8])
                                                                  Tpat_construct "Eq"
                                                                  []
                                                                  None
                                                              pattern (lib/grammarFunctor.ml[1907,57170+6]..lib/grammarFunctor.ml[1907,57170+8])
                                                                Tpat_value
                                                                pattern (lib/grammarFunctor.ml[1907,57170+6]..lib/grammarFunctor.ml[1907,57170+8])
                                                                  Tpat_construct "Ic"
                                                                  []
                                                                  None
                                                            expression (lib/grammarFunctor.ml[1909,57263+8]..lib/grammarFunctor.ml[1909,57263+13])
                                                              Texp_construct "false"
                                                              []
                                                        ]
                                                ]
                                      ]
                                ]
                          ]
                      ]
                structure_item (lib/grammarFunctor.ml[1916,57404+0]..lib/grammarFunctor.ml[1950,58259+3])
                  Tstr_module
                  Sentence/4930
                    module_expr (lib/grammarFunctor.ml[1916,57404+18]..lib/grammarFunctor.ml[1950,58259+3])
                      Tmod_structure
                      [
                        structure_item (lib/grammarFunctor.ml[1918,57430+2]..lib/grammarFunctor.ml[1919,57448+42])
                          Tstr_type Rec
                          [
                            type_declaration sentence/4909 (lib/grammarFunctor.ml[1918,57430+2]..lib/grammarFunctor.ml[1919,57448+42])
                              ptype_params =
                                []
                              ptype_cstrs =
                                []
                              ptype_kind =
                                Ttype_abstract
                              ptype_private = Public
                              ptype_manifest =
                                Some
                                  core_type (lib/grammarFunctor.ml[1919,57448+4]..lib/grammarFunctor.ml[1919,57448+42])
                                    Ttyp_tuple
                                    [
                                      core_type (lib/grammarFunctor.ml[1919,57448+4]..lib/grammarFunctor.ml[1919,57448+24])
                                        Ttyp_constr "option/10!"
                                        [
                                          core_type (lib/grammarFunctor.ml[1919,57448+4]..lib/grammarFunctor.ml[1919,57448+17])
                                            Ttyp_constr "Nonterminal/2057.t"
                                            []
                                        ]
                                      core_type (lib/grammarFunctor.ml[1919,57448+27]..lib/grammarFunctor.ml[1919,57448+42])
                                        Ttyp_constr "list/9!"
                                        [
                                          core_type (lib/grammarFunctor.ml[1919,57448+27]..lib/grammarFunctor.ml[1919,57448+37])
                                            Ttyp_constr "Terminal/2246.t"
                                            []
                                        ]
                                    ]
                          ]
                        structure_item (lib/grammarFunctor.ml[1921,57492+2]..lib/grammarFunctor.ml[1921,57492+13])
                          Tstr_open Fresh
                          module_expr (lib/grammarFunctor.ml[1921,57492+7]..lib/grammarFunctor.ml[1921,57492+13])
                            Tmod_ident "Stdlib!.Printf"
                        structure_item (lib/grammarFunctor.ml[1923,57507+2]..lib/grammarFunctor.ml[1933,57854+5])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1923,57507+6]..lib/grammarFunctor.ml[1923,57507+20])
                                Tpat_var "print_abstract/4910"
                              expression (lib/grammarFunctor.ml[1923,57507+21]..lib/grammarFunctor.ml[1933,57854+5]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[1923,57507+21]..lib/grammarFunctor.ml[1923,57507+37])
                                      Tpat_tuple
                                      [
                                        pattern (lib/grammarFunctor.ml[1923,57507+22]..lib/grammarFunctor.ml[1923,57507+25])
                                          Tpat_var "nto/4912"
                                        pattern (lib/grammarFunctor.ml[1923,57507+27]..lib/grammarFunctor.ml[1923,57507+36])
                                          Tpat_var "terminals/4913"
                                      ]
                                    expression (lib/grammarFunctor.ml[1924,57556+4]..lib/grammarFunctor.ml[1933,57854+5])
                                      extra
                                        Texp_constraint
                                        core_type (lib/grammarFunctor.ml[1923,57507+40]..lib/grammarFunctor.ml[1923,57507+46])
                                          Ttyp_constr "string/15!"
                                          []
                                      Texp_apply
                                      expression (lib/grammarFunctor.ml[1924,57556+4]..lib/grammarFunctor.ml[1924,57556+20])
                                        Texp_ident "Gbnf_parser!.Misc.with_buffer"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[1924,57556+21]..lib/grammarFunctor.ml[1924,57556+24])
                                            Texp_constant Const_int 128
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[1924,57556+25]..lib/grammarFunctor.ml[1933,57854+5])
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (lib/grammarFunctor.ml[1924,57556+30]..lib/grammarFunctor.ml[1924,57556+31])
                                                  Tpat_var "b/4914"
                                                expression (lib/grammarFunctor.ml[1925,57591+6]..lib/grammarFunctor.ml[1932,57832+21])
                                                  Texp_sequence
                                                  expression (lib/grammarFunctor.ml[1925,57591+6]..lib/grammarFunctor.ml[1927,57674+11])
                                                    Texp_apply
                                                    expression (lib/grammarFunctor.ml[1925,57591+6]..lib/grammarFunctor.ml[1925,57591+17])
                                                      Texp_ident "Stdlib!.Option.iter"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[1925,57591+18]..lib/grammarFunctor.ml[1927,57674+7])
                                                          Texp_function
                                                          Nolabel
                                                          [
                                                            <case>
                                                              pattern (lib/grammarFunctor.ml[1925,57591+23]..lib/grammarFunctor.ml[1925,57591+25])
                                                                Tpat_var "nt/4915"
                                                              expression (lib/grammarFunctor.ml[1926,57620+8]..lib/grammarFunctor.ml[1926,57620+53])
                                                                Texp_apply
                                                                expression (lib/grammarFunctor.ml[1926,57620+8]..lib/grammarFunctor.ml[1926,57620+15])
                                                                  Texp_ident "Stdlib!.Printf.bprintf"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[1926,57620+16]..lib/grammarFunctor.ml[1926,57620+17])
                                                                      Texp_ident "b/4914"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[1926,57620+18]..lib/grammarFunctor.ml[1926,57620+24])
                                                                      Texp_construct "CamlinternalFormatBasics.Format"
                                                                      [
                                                                        expression (lib/grammarFunctor.ml[1926,57620+18]..lib/grammarFunctor.ml[1926,57620+24]) ghost
                                                                          Texp_construct "CamlinternalFormatBasics.String"
                                                                          [
                                                                            expression (lib/grammarFunctor.ml[1926,57620+18]..lib/grammarFunctor.ml[1926,57620+24]) ghost
                                                                              Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                              []
                                                                            expression (lib/grammarFunctor.ml[1926,57620+18]..lib/grammarFunctor.ml[1926,57620+24]) ghost
                                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                              [
                                                                                expression (lib/grammarFunctor.ml[1926,57620+18]..lib/grammarFunctor.ml[1926,57620+24]) ghost
                                                                                  Texp_constant Const_string(": ",(lib/grammarFunctor.ml[1926,57620+18]..lib/grammarFunctor.ml[1926,57620+24]) ghost,None)
                                                                                expression (lib/grammarFunctor.ml[1926,57620+18]..lib/grammarFunctor.ml[1926,57620+24]) ghost
                                                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                  []
                                                                              ]
                                                                          ]
                                                                        expression (lib/grammarFunctor.ml[1926,57620+18]..lib/grammarFunctor.ml[1926,57620+24]) ghost
                                                                          Texp_constant Const_string("%s: ",(lib/grammarFunctor.ml[1926,57620+18]..lib/grammarFunctor.ml[1926,57620+24]) ghost,None)
                                                                      ]
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[1926,57620+25]..lib/grammarFunctor.ml[1926,57620+53])
                                                                      Texp_apply
                                                                      expression (lib/grammarFunctor.ml[1926,57620+26]..lib/grammarFunctor.ml[1926,57620+43])
                                                                        Texp_ident "Nonterminal/2057.print"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (lib/grammarFunctor.ml[1926,57620+44]..lib/grammarFunctor.ml[1926,57620+49])
                                                                            Texp_construct "false"
                                                                            []
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (lib/grammarFunctor.ml[1926,57620+50]..lib/grammarFunctor.ml[1926,57620+52])
                                                                            Texp_ident "nt/4915"
                                                                      ]
                                                                ]
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[1927,57674+8]..lib/grammarFunctor.ml[1927,57674+11])
                                                          Texp_ident "nto/4912"
                                                    ]
                                                  expression (lib/grammarFunctor.ml[1928,57687+6]..lib/grammarFunctor.ml[1932,57832+21])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (lib/grammarFunctor.ml[1928,57687+10]..lib/grammarFunctor.ml[1928,57687+19])
                                                          Tpat_var "separator/4916"
                                                        expression (lib/grammarFunctor.ml[1928,57687+22]..lib/grammarFunctor.ml[1928,57687+38])
                                                          Texp_apply
                                                          expression (lib/grammarFunctor.ml[1928,57687+22]..lib/grammarFunctor.ml[1928,57687+31])
                                                            Texp_ident "Gbnf_parser!.Misc.once"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[1928,57687+32]..lib/grammarFunctor.ml[1928,57687+34])
                                                                Texp_constant Const_string("",(lib/grammarFunctor.ml[1928,57687+33]..lib/grammarFunctor.ml[1928,57687+33]),None)
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/grammarFunctor.ml[1928,57687+35]..lib/grammarFunctor.ml[1928,57687+38])
                                                                Texp_constant Const_string(" ",(lib/grammarFunctor.ml[1928,57687+36]..lib/grammarFunctor.ml[1928,57687+37]),None)
                                                          ]
                                                    ]
                                                    expression (lib/grammarFunctor.ml[1929,57729+6]..lib/grammarFunctor.ml[1932,57832+21])
                                                      Texp_sequence
                                                      expression (lib/grammarFunctor.ml[1929,57729+6]..lib/grammarFunctor.ml[1931,57813+17])
                                                        Texp_apply
                                                        expression (lib/grammarFunctor.ml[1929,57729+6]..lib/grammarFunctor.ml[1929,57729+15])
                                                          Texp_ident "Stdlib!.List.iter"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1929,57729+16]..lib/grammarFunctor.ml[1931,57813+7])
                                                              Texp_function
                                                              Nolabel
                                                              [
                                                                <case>
                                                                  pattern (lib/grammarFunctor.ml[1929,57729+21]..lib/grammarFunctor.ml[1929,57729+22])
                                                                    Tpat_var "t/4917"
                                                                  expression (lib/grammarFunctor.ml[1930,57755+8]..lib/grammarFunctor.ml[1930,57755+57])
                                                                    Texp_apply
                                                                    expression (lib/grammarFunctor.ml[1930,57755+8]..lib/grammarFunctor.ml[1930,57755+15])
                                                                      Texp_ident "Stdlib!.Printf.bprintf"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (lib/grammarFunctor.ml[1930,57755+16]..lib/grammarFunctor.ml[1930,57755+17])
                                                                          Texp_ident "b/4914"
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (lib/grammarFunctor.ml[1930,57755+18]..lib/grammarFunctor.ml[1930,57755+24])
                                                                          Texp_construct "CamlinternalFormatBasics.Format"
                                                                          [
                                                                            expression (lib/grammarFunctor.ml[1930,57755+18]..lib/grammarFunctor.ml[1930,57755+24]) ghost
                                                                              Texp_construct "CamlinternalFormatBasics.String"
                                                                              [
                                                                                expression (lib/grammarFunctor.ml[1930,57755+18]..lib/grammarFunctor.ml[1930,57755+24]) ghost
                                                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                  []
                                                                                expression (lib/grammarFunctor.ml[1930,57755+18]..lib/grammarFunctor.ml[1930,57755+24]) ghost
                                                                                  Texp_construct "CamlinternalFormatBasics.String"
                                                                                  [
                                                                                    expression (lib/grammarFunctor.ml[1930,57755+18]..lib/grammarFunctor.ml[1930,57755+24]) ghost
                                                                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                      []
                                                                                    expression (lib/grammarFunctor.ml[1930,57755+18]..lib/grammarFunctor.ml[1930,57755+24]) ghost
                                                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                      []
                                                                                  ]
                                                                              ]
                                                                            expression (lib/grammarFunctor.ml[1930,57755+18]..lib/grammarFunctor.ml[1930,57755+24]) ghost
                                                                              Texp_constant Const_string("%s%s",(lib/grammarFunctor.ml[1930,57755+18]..lib/grammarFunctor.ml[1930,57755+24]) ghost,None)
                                                                          ]
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (lib/grammarFunctor.ml[1930,57755+25]..lib/grammarFunctor.ml[1930,57755+38])
                                                                          Texp_apply
                                                                          expression (lib/grammarFunctor.ml[1930,57755+26]..lib/grammarFunctor.ml[1930,57755+35])
                                                                            Texp_ident "separator/4916"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (lib/grammarFunctor.ml[1930,57755+35]..lib/grammarFunctor.ml[1930,57755+37])
                                                                                Texp_construct "()"
                                                                                []
                                                                          ]
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (lib/grammarFunctor.ml[1930,57755+39]..lib/grammarFunctor.ml[1930,57755+57])
                                                                          Texp_apply
                                                                          expression (lib/grammarFunctor.ml[1930,57755+40]..lib/grammarFunctor.ml[1930,57755+54])
                                                                            Texp_ident "Terminal/2246.print"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (lib/grammarFunctor.ml[1930,57755+55]..lib/grammarFunctor.ml[1930,57755+56])
                                                                                Texp_ident "t/4917"
                                                                          ]
                                                                    ]
                                                              ]
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1931,57813+8]..lib/grammarFunctor.ml[1931,57813+17])
                                                              Texp_ident "terminals/4913"
                                                        ]
                                                      expression (lib/grammarFunctor.ml[1932,57832+6]..lib/grammarFunctor.ml[1932,57832+20])
                                                        Texp_apply
                                                        expression (lib/grammarFunctor.ml[1932,57832+6]..lib/grammarFunctor.ml[1932,57832+13])
                                                          Texp_ident "Stdlib!.Printf.bprintf"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1932,57832+14]..lib/grammarFunctor.ml[1932,57832+15])
                                                              Texp_ident "b/4914"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1932,57832+16]..lib/grammarFunctor.ml[1932,57832+20])
                                                              Texp_construct "CamlinternalFormatBasics.Format"
                                                              [
                                                                expression (lib/grammarFunctor.ml[1932,57832+16]..lib/grammarFunctor.ml[1932,57832+20]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                  [
                                                                    expression (lib/grammarFunctor.ml[1932,57832+16]..lib/grammarFunctor.ml[1932,57832+20]) ghost
                                                                      Texp_constant Const_char 0a
                                                                    expression (lib/grammarFunctor.ml[1932,57832+16]..lib/grammarFunctor.ml[1932,57832+20]) ghost
                                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                      []
                                                                  ]
                                                                expression (lib/grammarFunctor.ml[1932,57832+16]..lib/grammarFunctor.ml[1932,57832+20]) ghost
                                                                  Texp_constant Const_string("\n",(lib/grammarFunctor.ml[1932,57832+16]..lib/grammarFunctor.ml[1932,57832+20]) ghost,None)
                                                              ]
                                                        ]
                                            ]
                                      ]
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[1935,57861+2]..lib/grammarFunctor.ml[1941,58099+5])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1935,57861+6]..lib/grammarFunctor.ml[1935,57861+20])
                                Tpat_var "print_concrete/4919"
                              expression (lib/grammarFunctor.ml[1935,57861+21]..lib/grammarFunctor.ml[1941,58099+5]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[1935,57861+21]..lib/grammarFunctor.ml[1935,57861+38])
                                      Tpat_tuple
                                      [
                                        pattern (lib/grammarFunctor.ml[1935,57861+22]..lib/grammarFunctor.ml[1935,57861+26])
                                          Tpat_var "_nto/4921"
                                        pattern (lib/grammarFunctor.ml[1935,57861+28]..lib/grammarFunctor.ml[1935,57861+37])
                                          Tpat_var "terminals/4922"
                                      ]
                                    expression (lib/grammarFunctor.ml[1936,57911+4]..lib/grammarFunctor.ml[1941,58099+5])
                                      extra
                                        Texp_constraint
                                        core_type (lib/grammarFunctor.ml[1935,57861+41]..lib/grammarFunctor.ml[1935,57861+47])
                                          Ttyp_constr "string/15!"
                                          []
                                      Texp_apply
                                      expression (lib/grammarFunctor.ml[1936,57911+4]..lib/grammarFunctor.ml[1936,57911+20])
                                        Texp_ident "Gbnf_parser!.Misc.with_buffer"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[1936,57911+21]..lib/grammarFunctor.ml[1936,57911+24])
                                            Texp_constant Const_int 128
                                        <arg>
                                          Nolabel
                                          expression (lib/grammarFunctor.ml[1936,57911+25]..lib/grammarFunctor.ml[1941,58099+5])
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (lib/grammarFunctor.ml[1936,57911+30]..lib/grammarFunctor.ml[1936,57911+31])
                                                  Tpat_var "b/4923"
                                                expression (lib/grammarFunctor.ml[1937,57946+6]..lib/grammarFunctor.ml[1940,58081+17])
                                                  Texp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (lib/grammarFunctor.ml[1937,57946+10]..lib/grammarFunctor.ml[1937,57946+19])
                                                        Tpat_var "separator/4924"
                                                      expression (lib/grammarFunctor.ml[1937,57946+22]..lib/grammarFunctor.ml[1937,57946+38])
                                                        Texp_apply
                                                        expression (lib/grammarFunctor.ml[1937,57946+22]..lib/grammarFunctor.ml[1937,57946+31])
                                                          Texp_ident "Gbnf_parser!.Misc.once"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1937,57946+32]..lib/grammarFunctor.ml[1937,57946+34])
                                                              Texp_constant Const_string("",(lib/grammarFunctor.ml[1937,57946+33]..lib/grammarFunctor.ml[1937,57946+33]),None)
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/grammarFunctor.ml[1937,57946+35]..lib/grammarFunctor.ml[1937,57946+38])
                                                              Texp_constant Const_string(" ",(lib/grammarFunctor.ml[1937,57946+36]..lib/grammarFunctor.ml[1937,57946+37]),None)
                                                        ]
                                                  ]
                                                  expression (lib/grammarFunctor.ml[1938,57988+6]..lib/grammarFunctor.ml[1940,58081+17])
                                                    Texp_apply
                                                    expression (lib/grammarFunctor.ml[1938,57988+6]..lib/grammarFunctor.ml[1938,57988+15])
                                                      Texp_ident "Stdlib!.List.iter"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[1938,57988+16]..lib/grammarFunctor.ml[1940,58081+7])
                                                          Texp_function
                                                          Nolabel
                                                          [
                                                            <case>
                                                              pattern (lib/grammarFunctor.ml[1938,57988+21]..lib/grammarFunctor.ml[1938,57988+22])
                                                                Tpat_var "t/4925"
                                                              expression (lib/grammarFunctor.ml[1939,58014+8]..lib/grammarFunctor.ml[1939,58014+66])
                                                                Texp_apply
                                                                expression (lib/grammarFunctor.ml[1939,58014+8]..lib/grammarFunctor.ml[1939,58014+15])
                                                                  Texp_ident "Stdlib!.Printf.bprintf"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[1939,58014+16]..lib/grammarFunctor.ml[1939,58014+17])
                                                                      Texp_ident "b/4923"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[1939,58014+18]..lib/grammarFunctor.ml[1939,58014+24])
                                                                      Texp_construct "CamlinternalFormatBasics.Format"
                                                                      [
                                                                        expression (lib/grammarFunctor.ml[1939,58014+18]..lib/grammarFunctor.ml[1939,58014+24]) ghost
                                                                          Texp_construct "CamlinternalFormatBasics.String"
                                                                          [
                                                                            expression (lib/grammarFunctor.ml[1939,58014+18]..lib/grammarFunctor.ml[1939,58014+24]) ghost
                                                                              Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                              []
                                                                            expression (lib/grammarFunctor.ml[1939,58014+18]..lib/grammarFunctor.ml[1939,58014+24]) ghost
                                                                              Texp_construct "CamlinternalFormatBasics.String"
                                                                              [
                                                                                expression (lib/grammarFunctor.ml[1939,58014+18]..lib/grammarFunctor.ml[1939,58014+24]) ghost
                                                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                  []
                                                                                expression (lib/grammarFunctor.ml[1939,58014+18]..lib/grammarFunctor.ml[1939,58014+24]) ghost
                                                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                  []
                                                                              ]
                                                                          ]
                                                                        expression (lib/grammarFunctor.ml[1939,58014+18]..lib/grammarFunctor.ml[1939,58014+24]) ghost
                                                                          Texp_constant Const_string("%s%s",(lib/grammarFunctor.ml[1939,58014+18]..lib/grammarFunctor.ml[1939,58014+24]) ghost,None)
                                                                      ]
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[1939,58014+25]..lib/grammarFunctor.ml[1939,58014+38])
                                                                      Texp_apply
                                                                      expression (lib/grammarFunctor.ml[1939,58014+26]..lib/grammarFunctor.ml[1939,58014+35])
                                                                        Texp_ident "separator/4924"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (lib/grammarFunctor.ml[1939,58014+35]..lib/grammarFunctor.ml[1939,58014+37])
                                                                            Texp_construct "()"
                                                                            []
                                                                      ]
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/grammarFunctor.ml[1939,58014+39]..lib/grammarFunctor.ml[1939,58014+66])
                                                                      Texp_apply
                                                                      expression (lib/grammarFunctor.ml[1939,58014+40]..lib/grammarFunctor.ml[1939,58014+63])
                                                                        Texp_ident "Terminal/2246.print_concrete"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (lib/grammarFunctor.ml[1939,58014+64]..lib/grammarFunctor.ml[1939,58014+65])
                                                                            Texp_ident "t/4925"
                                                                      ]
                                                                ]
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/grammarFunctor.ml[1940,58081+8]..lib/grammarFunctor.ml[1940,58081+17])
                                                          Texp_ident "terminals/4922"
                                                    ]
                                            ]
                                      ]
                                ]
                          ]
                        structure_item (lib/grammarFunctor.ml[1943,58106+2]..lib/grammarFunctor.ml[1948,58226+31])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (lib/grammarFunctor.ml[1943,58106+6]..lib/grammarFunctor.ml[1943,58106+11])
                                Tpat_var "print/4927"
                              expression (lib/grammarFunctor.ml[1943,58106+12]..lib/grammarFunctor.ml[1948,58226+31]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/grammarFunctor.ml[1943,58106+12]..lib/grammarFunctor.ml[1943,58106+17])
                                      Tpat_var "style/4928"
                                    expression (lib/grammarFunctor.ml[1943,58106+18]..lib/grammarFunctor.ml[1948,58226+31]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (lib/grammarFunctor.ml[1943,58106+18]..lib/grammarFunctor.ml[1943,58106+26])
                                            Tpat_var "sentence/4929"
                                          expression (lib/grammarFunctor.ml[1944,58135+4]..lib/grammarFunctor.ml[1948,58226+31])
                                            Texp_match
                                            expression (lib/grammarFunctor.ml[1944,58135+10]..lib/grammarFunctor.ml[1944,58135+15])
                                              Texp_ident "style/4928"
                                            [
                                              <case>
                                                pattern (lib/grammarFunctor.ml[1945,58156+6]..lib/grammarFunctor.ml[1945,58156+15])
                                                  Tpat_value
                                                  pattern (lib/grammarFunctor.ml[1945,58156+6]..lib/grammarFunctor.ml[1945,58156+15])
                                                    Tpat_variant "Abstract"
                                                    None
                                                expression (lib/grammarFunctor.ml[1946,58175+8]..lib/grammarFunctor.ml[1946,58175+31])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[1946,58175+8]..lib/grammarFunctor.ml[1946,58175+22])
                                                    Texp_ident "print_abstract/4910"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[1946,58175+23]..lib/grammarFunctor.ml[1946,58175+31])
                                                        Texp_ident "sentence/4929"
                                                  ]
                                              <case>
                                                pattern (lib/grammarFunctor.ml[1947,58207+6]..lib/grammarFunctor.ml[1947,58207+15])
                                                  Tpat_value
                                                  pattern (lib/grammarFunctor.ml[1947,58207+6]..lib/grammarFunctor.ml[1947,58207+15])
                                                    Tpat_variant "Concrete"
                                                    None
                                                expression (lib/grammarFunctor.ml[1948,58226+8]..lib/grammarFunctor.ml[1948,58226+31])
                                                  Texp_apply
                                                  expression (lib/grammarFunctor.ml[1948,58226+8]..lib/grammarFunctor.ml[1948,58226+22])
                                                    Texp_ident "print_concrete/4919"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/grammarFunctor.ml[1948,58226+23]..lib/grammarFunctor.ml[1948,58226+31])
                                                        Texp_ident "sentence/4929"
                                                  ]
                                            ]
                                      ]
                                ]
                          ]
                      ]
              ]
  structure_item (lib/grammarFunctor.ml[1954,58344+3]..lib/grammarFunctor.ml[1954,58344+3]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/grammarFunctor.ml[1954,58344+3]..lib/grammarFunctor.ml[1954,58344+3]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/grammarFunctor.ml[1954,58344+3]..lib/grammarFunctor.ml[1954,58344+3]) ghost
          Texp_apply
          expression (lib/grammarFunctor.ml[1954,58344+3]..lib/grammarFunctor.ml[1954,58344+3]) ghost
            Texp_ident "Ppx_inline_test_lib!.unset_lib"
          [
            <arg>
              Nolabel
              expression (lib/grammarFunctor.ml[1954,58344+3]..lib/grammarFunctor.ml[1954,58344+3]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/grammarFunctor.ml[1954,58344+3]..lib/grammarFunctor.ml[1954,58344+3]) ghost,None)
          ]
    ]
  structure_item (lib/grammarFunctor.ml[1954,58344+3]..lib/grammarFunctor.ml[1954,58344+3]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/grammarFunctor.ml[1954,58344+3]..lib/grammarFunctor.ml[1954,58344+3]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/grammarFunctor.ml[1954,58344+3]..lib/grammarFunctor.ml[1954,58344+3]) ghost
          Texp_apply
          expression (lib/grammarFunctor.ml[1954,58344+3]..lib/grammarFunctor.ml[1954,58344+3]) ghost
            Texp_ident "Expect_test_collector!.Current_file.unset"
          [
            <arg>
              Nolabel
              expression (lib/grammarFunctor.ml[1954,58344+3]..lib/grammarFunctor.ml[1954,58344+3]) ghost
                Texp_construct "()"
                []
          ]
    ]
  structure_item (lib/grammarFunctor.ml[1954,58344+3]..lib/grammarFunctor.ml[1954,58344+3]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/grammarFunctor.ml[1954,58344+3]..lib/grammarFunctor.ml[1954,58344+3]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/grammarFunctor.ml[1954,58344+3]..lib/grammarFunctor.ml[1954,58344+3]) ghost
          Texp_apply
          expression (lib/grammarFunctor.ml[1954,58344+3]..lib/grammarFunctor.ml[1954,58344+3]) ghost
            Texp_ident "Ppx_bench_lib!.Benchmark_accumulator.Current_libname.unset"
          [
            <arg>
              Nolabel
              expression (lib/grammarFunctor.ml[1954,58344+3]..lib/grammarFunctor.ml[1954,58344+3]) ghost
                Texp_construct "()"
                []
          ]
    ]
  structure_item (lib/grammarFunctor.ml[1954,58344+3]..lib/grammarFunctor.ml[1954,58344+3]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/grammarFunctor.ml[1954,58344+3]..lib/grammarFunctor.ml[1954,58344+3]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/grammarFunctor.ml[1954,58344+3]..lib/grammarFunctor.ml[1954,58344+3]) ghost
          Texp_apply
          expression (lib/grammarFunctor.ml[1954,58344+3]..lib/grammarFunctor.ml[1954,58344+3]) ghost
            Texp_ident "Ppx_module_timer_runtime!.record_until"
          [
            <arg>
              Nolabel
              expression (lib/grammarFunctor.ml[1954,58344+3]..lib/grammarFunctor.ml[1954,58344+3]) ghost
                Texp_ident "Ppx_module_timer_runtime!.__MODULE__"
          ]
    ]
]

{<Gbnf_parser__GrammarFunctor>
 "Make"[module] ->
   Abs<Gbnf_parser__GrammarFunctor.734>
      (G/1226, ()/1,
       {
        "Analysis"[module] ->
          {<Gbnf_parser__GrammarFunctor.657>
           "attributes"[value] -> <Gbnf_parser__GrammarFunctor.646>;
           "explain_first_rhs"[value] -> <Gbnf_parser__GrammarFunctor.641>;
           "first"[value] -> <Gbnf_parser__GrammarFunctor.627>;
           "first_prod_lookahead"[value] ->
             <Gbnf_parser__GrammarFunctor.635>;
           "first_symbol"[value] -> <Gbnf_parser__GrammarFunctor.628>;
           "follow"[value] -> <Gbnf_parser__GrammarFunctor.645>;
           "maximal"[value] -> <Gbnf_parser__GrammarFunctor.652>;
           "maximal_prod"[value] -> <Gbnf_parser__GrammarFunctor.654>;
           "minimal"[value] -> <Gbnf_parser__GrammarFunctor.647>;
           "minimal_prod"[value] -> <Gbnf_parser__GrammarFunctor.649>;
           "nullable"[value] -> <Gbnf_parser__GrammarFunctor.625>;
           "nullable_first_prod"[value] -> <Gbnf_parser__GrammarFunctor.632>;
           "nullable_symbol"[value] -> <Gbnf_parser__GrammarFunctor.626>;
           };
        "FIRST"[module] ->
          {<Gbnf_parser__GrammarFunctor.498>
           "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.455>;
           "production"[value] -> <Gbnf_parser__GrammarFunctor.458>;
           "symbol"[value] -> <Gbnf_parser__GrammarFunctor.456>;
           };
        "FOLLOW"[module] ->
          Abs<Gbnf_parser__GrammarFunctor.571>
             (P/4329,
              {
               "M"[module] ->
                 CU Gbnf_parser . "Fix"[module] . "Glue"[module] .
                 "ArraysAsImperativeMaps"[module](
                 {<Gbnf_parser__GrammarFunctor.80>
                  "attributes"[value] -> <Gbnf_parser__GrammarFunctor.78>;
                  "compare"[value] -> <Gbnf_parser__GrammarFunctor.32>;
                  "equal"[value] -> <Gbnf_parser__GrammarFunctor.29>;
                  "fold"[value] -> <Gbnf_parser__GrammarFunctor.56>;
                  "foldx"[value] -> <Gbnf_parser__GrammarFunctor.64>;
                  "init"[value] -> <Gbnf_parser__GrammarFunctor.52>;
                  "is_internal_start"[value] ->
                    <Gbnf_parser__GrammarFunctor.41>;
                  "is_user_start"[value] -> <Gbnf_parser__GrammarFunctor.43>;
                  "iter"[value] -> <Gbnf_parser__GrammarFunctor.54>;
                  "iterx"[value] -> <Gbnf_parser__GrammarFunctor.61>;
                  "lookup"[value] -> <Gbnf_parser__GrammarFunctor.48>;
                  "map"[value] -> <Gbnf_parser__GrammarFunctor.59>;
                  "n"[value] -> <Gbnf_parser__GrammarFunctor.38>;
                  "n2i"[value] -> <Gbnf_parser__GrammarFunctor.27>;
                  "name"[value] -> <Gbnf_parser__GrammarFunctor.39>;
                  "new_start_nonterminals"[value] ->
                    <Gbnf_parser__GrammarFunctor.33>;
                  "ocamltype"[value] -> <Gbnf_parser__GrammarFunctor.67>;
                  "ocamltype_of_start_symbol"[value] ->
                    <Gbnf_parser__GrammarFunctor.69>;
                  "original_nonterminals"[value] ->
                    <Gbnf_parser__GrammarFunctor.36>;
                  "positions"[value] -> <Gbnf_parser__GrammarFunctor.50>;
                  "print"[value] -> <Gbnf_parser__GrammarFunctor.45>;
                  "start"[value] -> <Gbnf_parser__GrammarFunctor.37>;
                  "t"[type] -> <Gbnf_parser__GrammarFunctor.26>;
                  "tabulate"[value] -> <Gbnf_parser__GrammarFunctor.72>;
                  })<Gbnf_parser__GrammarFunctor.554>;
               "S"[module] ->
                 CU Gbnf_parser . "FixSolver"[module] . "Make"[module](
                 CU Gbnf_parser . "Fix"[module] . "Glue"[module] .
                 "ArraysAsImperativeMaps"[module](
                 {<Gbnf_parser__GrammarFunctor.80>
                  "attributes"[value] -> <Gbnf_parser__GrammarFunctor.78>;
                  "compare"[value] -> <Gbnf_parser__GrammarFunctor.32>;
                  "equal"[value] -> <Gbnf_parser__GrammarFunctor.29>;
                  "fold"[value] -> <Gbnf_parser__GrammarFunctor.56>;
                  "foldx"[value] -> <Gbnf_parser__GrammarFunctor.64>;
                  "init"[value] -> <Gbnf_parser__GrammarFunctor.52>;
                  "is_internal_start"[value] ->
                    <Gbnf_parser__GrammarFunctor.41>;
                  "is_user_start"[value] -> <Gbnf_parser__GrammarFunctor.43>;
                  "iter"[value] -> <Gbnf_parser__GrammarFunctor.54>;
                  "iterx"[value] -> <Gbnf_parser__GrammarFunctor.61>;
                  "lookup"[value] -> <Gbnf_parser__GrammarFunctor.48>;
                  "map"[value] -> <Gbnf_parser__GrammarFunctor.59>;
                  "n"[value] -> <Gbnf_parser__GrammarFunctor.38>;
                  "n2i"[value] -> <Gbnf_parser__GrammarFunctor.27>;
                  "name"[value] -> <Gbnf_parser__GrammarFunctor.39>;
                  "new_start_nonterminals"[value] ->
                    <Gbnf_parser__GrammarFunctor.33>;
                  "ocamltype"[value] -> <Gbnf_parser__GrammarFunctor.67>;
                  "ocamltype_of_start_symbol"[value] ->
                    <Gbnf_parser__GrammarFunctor.69>;
                  "original_nonterminals"[value] ->
                    <Gbnf_parser__GrammarFunctor.36>;
                  "positions"[value] -> <Gbnf_parser__GrammarFunctor.50>;
                  "print"[value] -> <Gbnf_parser__GrammarFunctor.45>;
                  "start"[value] -> <Gbnf_parser__GrammarFunctor.37>;
                  "t"[type] -> <Gbnf_parser__GrammarFunctor.26>;
                  "tabulate"[value] -> <Gbnf_parser__GrammarFunctor.72>;
                  })<Gbnf_parser__GrammarFunctor.554>)(
                 P/4329<Gbnf_parser__GrammarFunctor.553>)<Gbnf_parser__GrammarFunctor.555>;
               "follow"[value] -> <Gbnf_parser__GrammarFunctor.569>;
               });
        "G"[module] ->
          {<Gbnf_parser__GrammarFunctor.530>
           "index"[value] -> <Gbnf_parser__GrammarFunctor.511>;
           "iter"[value] -> <Gbnf_parser__GrammarFunctor.513>;
           "labeled_successors"[value] -> <Gbnf_parser__GrammarFunctor.514>;
           "n"[value] -> <Gbnf_parser__GrammarFunctor.510>;
           "node"[type] -> <Gbnf_parser__GrammarFunctor.509>;
           "successors"[value] -> <Gbnf_parser__GrammarFunctor.525>;
           };
        "GenericAnalysis"[module] ->
          Abs<Gbnf_parser__GrammarFunctor.464>
             (P/3733, S/3739,
              {
               "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.455>;
               "production"[value] -> <Gbnf_parser__GrammarFunctor.458>;
               "symbol"[value] -> <Gbnf_parser__GrammarFunctor.456>;
               });
        "MAXIMAL"[module] ->
          {<Gbnf_parser__GrammarFunctor.547>
           "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.455>;
           "production"[value] -> <Gbnf_parser__GrammarFunctor.458>;
           "symbol"[value] -> <Gbnf_parser__GrammarFunctor.456>;
           };
        "MINIMAL"[module] ->
          {<Gbnf_parser__GrammarFunctor.506>
           "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.455>;
           "production"[value] -> <Gbnf_parser__GrammarFunctor.458>;
           "symbol"[value] -> <Gbnf_parser__GrammarFunctor.456>;
           };
        "NONEMPTY"[module] ->
          {<Gbnf_parser__GrammarFunctor.475>
           "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.455>;
           "production"[value] -> <Gbnf_parser__GrammarFunctor.458>;
           "symbol"[value] -> <Gbnf_parser__GrammarFunctor.456>;
           };
        "NULLABLE"[module] ->
          {<Gbnf_parser__GrammarFunctor.486>
           "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.455>;
           "production"[value] -> <Gbnf_parser__GrammarFunctor.458>;
           "symbol"[value] -> <Gbnf_parser__GrammarFunctor.456>;
           };
        "Nonterminal"[module] ->
          {<Gbnf_parser__GrammarFunctor.80>
           "attributes"[value] -> <Gbnf_parser__GrammarFunctor.78>;
           "compare"[value] -> <Gbnf_parser__GrammarFunctor.32>;
           "equal"[value] -> <Gbnf_parser__GrammarFunctor.29>;
           "fold"[value] -> <Gbnf_parser__GrammarFunctor.56>;
           "foldx"[value] -> <Gbnf_parser__GrammarFunctor.64>;
           "init"[value] -> <Gbnf_parser__GrammarFunctor.52>;
           "is_internal_start"[value] -> <Gbnf_parser__GrammarFunctor.41>;
           "is_user_start"[value] -> <Gbnf_parser__GrammarFunctor.43>;
           "iter"[value] -> <Gbnf_parser__GrammarFunctor.54>;
           "iterx"[value] -> <Gbnf_parser__GrammarFunctor.61>;
           "lookup"[value] -> <Gbnf_parser__GrammarFunctor.48>;
           "map"[value] -> <Gbnf_parser__GrammarFunctor.59>;
           "n"[value] -> <Gbnf_parser__GrammarFunctor.38>;
           "n2i"[value] -> <Gbnf_parser__GrammarFunctor.27>;
           "name"[value] -> <Gbnf_parser__GrammarFunctor.39>;
           "new_start_nonterminals"[value] ->
             <Gbnf_parser__GrammarFunctor.33>;
           "ocamltype"[value] -> <Gbnf_parser__GrammarFunctor.67>;
           "ocamltype_of_start_symbol"[value] ->
             <Gbnf_parser__GrammarFunctor.69>;
           "original_nonterminals"[value] ->
             <Gbnf_parser__GrammarFunctor.36>;
           "positions"[value] -> <Gbnf_parser__GrammarFunctor.50>;
           "print"[value] -> <Gbnf_parser__GrammarFunctor.45>;
           "start"[value] -> <Gbnf_parser__GrammarFunctor.37>;
           "t"[type] -> <Gbnf_parser__GrammarFunctor.26>;
           "tabulate"[value] -> <Gbnf_parser__GrammarFunctor.72>;
           };
        "NonterminalMap"[module] ->
          (CU Gbnf_parser . "Patricia"[module] .
          "Big"[module])<Gbnf_parser__GrammarFunctor.81>;
        "NonterminalSet"[module] ->
          (CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
          "Domain"[module])<Gbnf_parser__GrammarFunctor.82>;
        "OnErrorReduce"[module] ->
          {<Gbnf_parser__GrammarFunctor.715>
           "declarations"[value] -> <Gbnf_parser__GrammarFunctor.696>;
           "iter"[value] -> <Gbnf_parser__GrammarFunctor.704>;
           "lookup"[value] -> <Gbnf_parser__GrammarFunctor.699>;
           "preferable"[value] -> <Gbnf_parser__GrammarFunctor.708>;
           "print"[value] -> <Gbnf_parser__GrammarFunctor.697>;
           "reduce"[value] -> <Gbnf_parser__GrammarFunctor.701>;
           };
        "Precedence"[module] ->
          {<Gbnf_parser__GrammarFunctor.695>
           "choice"[type] -> <Gbnf_parser__GrammarFunctor.658>;
           "order"[type] -> <Gbnf_parser__GrammarFunctor.663>;
           "precedence_order"[value] -> <Gbnf_parser__GrammarFunctor.668>;
           "production_order"[value] -> <Gbnf_parser__GrammarFunctor.675>;
           "reduce_reduce"[value] -> <Gbnf_parser__GrammarFunctor.690>;
           "shift_reduce"[value] -> <Gbnf_parser__GrammarFunctor.682>;
           };
        "Production"[module] ->
          {<Gbnf_parser__GrammarFunctor.420>
           "action"[value] -> <Gbnf_parser__GrammarFunctor.339>;
           "actions"[value] -> <Gbnf_parser__GrammarFunctor.274>;
           "amap"[value] -> <Gbnf_parser__GrammarFunctor.361>;
           "classify"[value] -> <Gbnf_parser__GrammarFunctor.336>;
           "combine"[value] -> <Gbnf_parser__GrammarFunctor.405>;
           "compare"[value] -> <Gbnf_parser__GrammarFunctor.263>;
           "consult_prec_decl"[value] -> <Gbnf_parser__GrammarFunctor.386>;
           "def"[value] -> <Gbnf_parser__GrammarFunctor.322>;
           "describe"[value] -> <Gbnf_parser__GrammarFunctor.375>;
           "diagnostics"[value] -> <Gbnf_parser__GrammarFunctor.391>;
           "error_free"[value] -> <Gbnf_parser__GrammarFunctor.350>;
           "ever_useful"[value] -> <Gbnf_parser__GrammarFunctor.385>;
           "fold"[value] -> <Gbnf_parser__GrammarFunctor.356>;
           "foldnt"[value] -> <Gbnf_parser__GrammarFunctor.305>;
           "foldnt_lazy"[value] -> <Gbnf_parser__GrammarFunctor.316>;
           "foldx"[value] -> <Gbnf_parser__GrammarFunctor.366>;
           "grammar_uses_error_token"[value] ->
             <Gbnf_parser__GrammarFunctor.281>;
           "i2p"[value] -> <Gbnf_parser__GrammarFunctor.270>;
           "identifiers"[value] -> <Gbnf_parser__GrammarFunctor.332>;
           "index"[type] -> <Gbnf_parser__GrammarFunctor.262>;
           "init"[value] -> <Gbnf_parser__GrammarFunctor.352>;
           "is_start"[value] -> <Gbnf_parser__GrammarFunctor.334>;
           "iter"[value] -> <Gbnf_parser__GrammarFunctor.354>;
           "iternt"[value] -> <Gbnf_parser__GrammarFunctor.300>;
           "iterx"[value] -> <Gbnf_parser__GrammarFunctor.363>;
           "length"[value] -> <Gbnf_parser__GrammarFunctor.330>;
           "lhs_attributes"[value] -> <Gbnf_parser__GrammarFunctor.344>;
           "map"[value] -> <Gbnf_parser__GrammarFunctor.359>;
           "mapnt"[value] -> <Gbnf_parser__GrammarFunctor.311>;
           "mapx"[value] -> <Gbnf_parser__GrammarFunctor.369>;
           "n"[value] -> <Gbnf_parser__GrammarFunctor.264>;
           "nt"[value] -> <Gbnf_parser__GrammarFunctor.324>;
           "ntprods"[value] -> <Gbnf_parser__GrammarFunctor.280>;
           "p2i"[value] -> <Gbnf_parser__GrammarFunctor.268>;
           "positions"[value] -> <Gbnf_parser__GrammarFunctor.342>;
           "prec_decl"[value] -> <Gbnf_parser__GrammarFunctor.277>;
           "precedence"[value] -> <Gbnf_parser__GrammarFunctor.408>;
           "print"[value] -> <Gbnf_parser__GrammarFunctor.371>;
           "producer_symbol"[value] -> <Gbnf_parser__GrammarFunctor.289>;
           "production_level"[value] -> <Gbnf_parser__GrammarFunctor.278>;
           "production_level"[type] -> <Gbnf_parser__GrammarFunctor.396>;
           "rhs"[value] -> <Gbnf_parser__GrammarFunctor.327>;
           "rhs_attributes"[value] -> <Gbnf_parser__GrammarFunctor.346>;
           "rightmost_terminal"[value] -> <Gbnf_parser__GrammarFunctor.400>;
           "start"[value] -> <Gbnf_parser__GrammarFunctor.282>;
           "startprods"[value] -> <Gbnf_parser__GrammarFunctor.283>;
           "startsymbol2startprod"[value] ->
             <Gbnf_parser__GrammarFunctor.348>;
           "sum"[value] -> <Gbnf_parser__GrammarFunctor.383>;
           "table"[value] -> <Gbnf_parser__GrammarFunctor.272>;
           "tabulate"[value] -> <Gbnf_parser__GrammarFunctor.381>;
           };
        "ProductionMap"[module] ->
          {<Gbnf_parser__GrammarFunctor.426>
           "Domain"[module] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "Domain"[module];
           "Got"[extension constructor] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "Got"[extension constructor];
           "Unchanged"[extension constructor] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "Unchanged"[extension constructor];
           "add"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "add"[value];
           "basic_add"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "basic_add"[value];
           "build"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "build"[value];
           "cardinal"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "cardinal"[value];
           "choose"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "choose"[value];
           "compare"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "compare"[value];
           "corestrict"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "corestrict"[value];
           "decision"[type] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "decision"[type];
           "domain"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "domain"[value];
           "empty"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "empty"[value];
           "endo_map"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "endo_map"[value];
           "filter"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "filter"[value];
           "find"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "find"[value];
           "find_and_remove"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "find_and_remove"[value];
           "fine_add"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "fine_add"[value];
           "fine_union"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "fine_union"[value];
           "fold"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "fold"[value];
           "fold_rev"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "fold_rev"[value];
           "is_empty"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "is_empty"[value];
           "is_singleton"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "is_singleton"[value];
           "iter"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "iter"[value];
           "iter2"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "iter2"[value];
           "iterator"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "iterator"[value];
           "join"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "join"[value];
           "key"[type] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "key"[type];
           "lift"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "lift"[value];
           "lookup"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "lookup"[value];
           "lookup_and_remove"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "lookup_and_remove"[value];
           "map"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "map"[value];
           "match_prefix"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "match_prefix"[value];
           "mem"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "mem"[value];
           "remove"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "remove"[value];
           "reverse"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "reverse"[value];
           "singleton"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "singleton"[value];
           "start"[value] -> <Gbnf_parser__GrammarFunctor.422>;
           "strict_add"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "strict_add"[value];
           "t"[type] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] . "t"[type];
           "union"[value] ->
             CU Gbnf_parser . "Patricia"[module] . "Big"[module] .
             "union"[value];
           };
        "Sentence"[module] ->
          {<Gbnf_parser__GrammarFunctor.733>
           "print"[value] -> <Gbnf_parser__GrammarFunctor.730>;
           "print_abstract"[value] -> <Gbnf_parser__GrammarFunctor.717>;
           "print_concrete"[value] -> <Gbnf_parser__GrammarFunctor.724>;
           "sentence"[type] -> <Gbnf_parser__GrammarFunctor.716>;
           };
        "Symbol"[module] ->
          {<Gbnf_parser__GrammarFunctor.240>
           "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
           "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
           "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
           "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
           "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
           "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
           "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
           "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
           "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
           "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
           "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
           "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
           "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
           "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
           };
        "SymbolMap"[module] ->
          {<Gbnf_parser__GrammarFunctor.261>
           "add"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "add"[value];
           "add_seq"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "add_seq"[value];
           "add_to_list"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "add_to_list"[value];
           "bindings"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "bindings"[value];
           "cardinal"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "cardinal"[value];
           "choose"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "choose"[value];
           "choose_opt"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "choose_opt"[value];
           "compare"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "compare"[value];
           "domain"[value] -> <Gbnf_parser__GrammarFunctor.248>;
           "empty"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "empty"[value];
           "equal"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "equal"[value];
           "exists"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "exists"[value];
           "filter"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "filter"[value];
           "filter_map"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "filter_map"[value];
           "find"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "find"[value];
           "find_first"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "find_first"[value];
           "find_first_opt"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "find_first_opt"[value];
           "find_last"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "find_last"[value];
           "find_last_opt"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "find_last_opt"[value];
           "find_opt"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "find_opt"[value];
           "fold"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "fold"[value];
           "for_all"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "for_all"[value];
           "init"[value] -> <Gbnf_parser__GrammarFunctor.252>;
           "is_empty"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "is_empty"[value];
           "iter"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "iter"[value];
           "key"[type] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "key"[type];
           "map"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "map"[value];
           "mapi"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "mapi"[value];
           "max_binding"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "max_binding"[value];
           "max_binding_opt"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "max_binding_opt"[value];
           "mem"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "mem"[value];
           "merge"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "merge"[value];
           "min_binding"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "min_binding"[value];
           "min_binding_opt"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "min_binding_opt"[value];
           "of_list"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "of_list"[value];
           "of_seq"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "of_seq"[value];
           "partition"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "partition"[value];
           "purelynonterminal"[value] -> <Gbnf_parser__GrammarFunctor.257>;
           "remove"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "remove"[value];
           "singleton"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "singleton"[value];
           "split"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "split"[value];
           "t"[type] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "t"[type];
           "to_list"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "to_list"[value];
           "to_rev_seq"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "to_rev_seq"[value];
           "to_seq"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "to_seq"[value];
           "to_seq_from"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "to_seq_from"[value];
           "union"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "union"[value];
           "update"[value] ->
             CU Stdlib . "Map"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "update"[value];
           };
        "SymbolSet"[module] ->
          {<Gbnf_parser__GrammarFunctor.247>
           "add"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "add"[value];
           "add_seq"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "add_seq"[value];
           "bottom"[value] -> <Gbnf_parser__GrammarFunctor.244>;
           "cardinal"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "cardinal"[value];
           "choose"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "choose"[value];
           "choose_opt"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "choose_opt"[value];
           "compare"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "compare"[value];
           "diff"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "diff"[value];
           "disjoint"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "disjoint"[value];
           "elements"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "elements"[value];
           "elt"[type] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "elt"[type];
           "empty"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "empty"[value];
           "equal"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "equal"[value];
           "exists"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "exists"[value];
           "filter"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "filter"[value];
           "filter_map"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "filter_map"[value];
           "find"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "find"[value];
           "find_first"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "find_first"[value];
           "find_first_opt"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "find_first_opt"[value];
           "find_last"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "find_last"[value];
           "find_last_opt"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "find_last_opt"[value];
           "find_opt"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "find_opt"[value];
           "fold"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "fold"[value];
           "for_all"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "for_all"[value];
           "inter"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "inter"[value];
           "is_empty"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "is_empty"[value];
           "iter"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "iter"[value];
           "join"[value] -> <Gbnf_parser__GrammarFunctor.246>;
           "leq"[value] -> <Gbnf_parser__GrammarFunctor.245>;
           "map"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "map"[value];
           "max_elt"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "max_elt"[value];
           "max_elt_opt"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "max_elt_opt"[value];
           "mem"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "mem"[value];
           "min_elt"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "min_elt"[value];
           "min_elt_opt"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "min_elt_opt"[value];
           "of_list"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "of_list"[value];
           "of_seq"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "of_seq"[value];
           "partition"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "partition"[value];
           "print"[value] -> <Gbnf_parser__GrammarFunctor.241>;
           "property"[type] -> <Gbnf_parser__GrammarFunctor.243>;
           "remove"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "remove"[value];
           "singleton"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "singleton"[value];
           "split"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "split"[value];
           "subset"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "subset"[value];
           "t"[type] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "t"[type];
           "to_list"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "to_list"[value];
           "to_rev_seq"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "to_rev_seq"[value];
           "to_seq"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "to_seq"[value];
           "to_seq_from"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "to_seq_from"[value];
           "union"[value] ->
             CU Stdlib . "Set"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.240>
              "buffer"[value] -> <Gbnf_parser__GrammarFunctor.221>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.197>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.204>;
              "is_terminal"[value] -> <Gbnf_parser__GrammarFunctor.195>;
              "lequal"[value] -> <Gbnf_parser__GrammarFunctor.207>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.238>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.214>;
              "nonterminal"[value] -> <Gbnf_parser__GrammarFunctor.220>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.217>;
              "printa"[value] -> <Gbnf_parser__GrammarFunctor.234>;
              "printao"[value] -> <Gbnf_parser__GrammarFunctor.231>;
              "printaod"[value] -> <Gbnf_parser__GrammarFunctor.222>;
              "printl"[value] -> <Gbnf_parser__GrammarFunctor.236>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.192>;
              })
             . "union"[value];
           };
        "Terminal"[module] ->
          {<Gbnf_parser__GrammarFunctor.181>
           "Word"[module] ->
             Abs<Gbnf_parser__GrammarFunctor.180>
                (X/2195,
                 {
                  "append"[value] -> <Gbnf_parser__GrammarFunctor.154>;
                  "compare"[value] -> <Gbnf_parser__GrammarFunctor.177>;
                  "decode"[value] -> <Gbnf_parser__GrammarFunctor.148>;
                  "elements"[value] -> <Gbnf_parser__GrammarFunctor.169>;
                  "encode"[value] -> <Gbnf_parser__GrammarFunctor.147>;
                  "epsilon"[value] -> <Gbnf_parser__GrammarFunctor.151>;
                  "first"[value] -> <Gbnf_parser__GrammarFunctor.161>;
                  "length"[value] -> <Gbnf_parser__GrammarFunctor.159>;
                  "print"[value] -> <Gbnf_parser__GrammarFunctor.172>;
                  "singleton"[value] -> <Gbnf_parser__GrammarFunctor.152>;
                  "verbose"[value] -> <Gbnf_parser__GrammarFunctor.149>;
                  "word"[type] -> <Gbnf_parser__GrammarFunctor.150>;
                  });
           "alias"[value] -> <Gbnf_parser__GrammarFunctor.139>;
           "associativity"[value] -> <Gbnf_parser__GrammarFunctor.113>;
           "attributes"[value] -> <Gbnf_parser__GrammarFunctor.144>;
           "compare"[value] -> <Gbnf_parser__GrammarFunctor.88>;
           "eof"[value] -> <Gbnf_parser__GrammarFunctor.143>;
           "equal"[value] -> <Gbnf_parser__GrammarFunctor.89>;
           "error"[value] -> <Gbnf_parser__GrammarFunctor.101>;
           "every_token_has_an_alias"[value] ->
             <Gbnf_parser__GrammarFunctor.138>;
           "fold"[value] -> <Gbnf_parser__GrammarFunctor.121>;
           "foldx"[value] -> <Gbnf_parser__GrammarFunctor.126>;
           "i2t"[value] -> <Gbnf_parser__GrammarFunctor.86>;
           "init"[value] -> <Gbnf_parser__GrammarFunctor.117>;
           "iter"[value] -> <Gbnf_parser__GrammarFunctor.119>;
           "iter_real"[value] -> <Gbnf_parser__GrammarFunctor.131>;
           "lookup"[value] -> <Gbnf_parser__GrammarFunctor.98>;
           "map"[value] -> <Gbnf_parser__GrammarFunctor.124>;
           "mapx"[value] -> <Gbnf_parser__GrammarFunctor.129>;
           "n"[value] -> <Gbnf_parser__GrammarFunctor.92>;
           "name"[value] -> <Gbnf_parser__GrammarFunctor.93>;
           "non_error"[value] -> <Gbnf_parser__GrammarFunctor.106>;
           "ocamltype"[value] -> <Gbnf_parser__GrammarFunctor.115>;
           "precedence_level"[value] -> <Gbnf_parser__GrammarFunctor.111>;
           "print"[value] -> <Gbnf_parser__GrammarFunctor.96>;
           "print_concrete"[value] -> <Gbnf_parser__GrammarFunctor.142>;
           "pseudo"[value] -> <Gbnf_parser__GrammarFunctor.102>;
           "real"[value] -> <Gbnf_parser__GrammarFunctor.104>;
           "sharp"[value] -> <Gbnf_parser__GrammarFunctor.100>;
           "t"[type] -> <Gbnf_parser__GrammarFunctor.83>;
           "t2i"[value] -> <Gbnf_parser__GrammarFunctor.84>;
           "token_properties"[value] -> <Gbnf_parser__GrammarFunctor.108>;
           "tokens_without_an_alias"[value] ->
             <Gbnf_parser__GrammarFunctor.134>;
           "unquoted_alias"[value] -> <Gbnf_parser__GrammarFunctor.141>;
           };
        "TerminalMap"[module] ->
          (CU Gbnf_parser . "Patricia"[module] .
          "Big"[module])<Gbnf_parser__GrammarFunctor.191>;
        "TerminalSet"[module] ->
          {<Gbnf_parser__GrammarFunctor.190>
           "S"[module type] ->
             CU Gbnf_parser . "BoundedBitSet"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.181>
              "Word"[module] ->
                Abs<Gbnf_parser__GrammarFunctor.180>
                   (X/2195,
                    {
                     "append"[value] -> <Gbnf_parser__GrammarFunctor.154>;
                     "compare"[value] -> <Gbnf_parser__GrammarFunctor.177>;
                     "decode"[value] -> <Gbnf_parser__GrammarFunctor.148>;
                     "elements"[value] -> <Gbnf_parser__GrammarFunctor.169>;
                     "encode"[value] -> <Gbnf_parser__GrammarFunctor.147>;
                     "epsilon"[value] -> <Gbnf_parser__GrammarFunctor.151>;
                     "first"[value] -> <Gbnf_parser__GrammarFunctor.161>;
                     "length"[value] -> <Gbnf_parser__GrammarFunctor.159>;
                     "print"[value] -> <Gbnf_parser__GrammarFunctor.172>;
                     "singleton"[value] -> <Gbnf_parser__GrammarFunctor.152>;
                     "verbose"[value] -> <Gbnf_parser__GrammarFunctor.149>;
                     "word"[type] -> <Gbnf_parser__GrammarFunctor.150>;
                     });
              "alias"[value] -> <Gbnf_parser__GrammarFunctor.139>;
              "associativity"[value] -> <Gbnf_parser__GrammarFunctor.113>;
              "attributes"[value] -> <Gbnf_parser__GrammarFunctor.144>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.88>;
              "eof"[value] -> <Gbnf_parser__GrammarFunctor.143>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.89>;
              "error"[value] -> <Gbnf_parser__GrammarFunctor.101>;
              "every_token_has_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.138>;
              "fold"[value] -> <Gbnf_parser__GrammarFunctor.121>;
              "foldx"[value] -> <Gbnf_parser__GrammarFunctor.126>;
              "i2t"[value] -> <Gbnf_parser__GrammarFunctor.86>;
              "init"[value] -> <Gbnf_parser__GrammarFunctor.117>;
              "iter"[value] -> <Gbnf_parser__GrammarFunctor.119>;
              "iter_real"[value] -> <Gbnf_parser__GrammarFunctor.131>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.98>;
              "map"[value] -> <Gbnf_parser__GrammarFunctor.124>;
              "mapx"[value] -> <Gbnf_parser__GrammarFunctor.129>;
              "n"[value] -> <Gbnf_parser__GrammarFunctor.92>;
              "name"[value] -> <Gbnf_parser__GrammarFunctor.93>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.106>;
              "ocamltype"[value] -> <Gbnf_parser__GrammarFunctor.115>;
              "precedence_level"[value] -> <Gbnf_parser__GrammarFunctor.111>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.96>;
              "print_concrete"[value] -> <Gbnf_parser__GrammarFunctor.142>;
              "pseudo"[value] -> <Gbnf_parser__GrammarFunctor.102>;
              "real"[value] -> <Gbnf_parser__GrammarFunctor.104>;
              "sharp"[value] -> <Gbnf_parser__GrammarFunctor.100>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.83>;
              "t2i"[value] -> <Gbnf_parser__GrammarFunctor.84>;
              "token_properties"[value] -> <Gbnf_parser__GrammarFunctor.108>;
              "tokens_without_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.134>;
              "unquoted_alias"[value] -> <Gbnf_parser__GrammarFunctor.141>;
              })(
             {
              })
             . "S"[module type];
           "add"[value] ->
             CU Gbnf_parser . "BoundedBitSet"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.181>
              "Word"[module] ->
                Abs<Gbnf_parser__GrammarFunctor.180>
                   (X/2195,
                    {
                     "append"[value] -> <Gbnf_parser__GrammarFunctor.154>;
                     "compare"[value] -> <Gbnf_parser__GrammarFunctor.177>;
                     "decode"[value] -> <Gbnf_parser__GrammarFunctor.148>;
                     "elements"[value] -> <Gbnf_parser__GrammarFunctor.169>;
                     "encode"[value] -> <Gbnf_parser__GrammarFunctor.147>;
                     "epsilon"[value] -> <Gbnf_parser__GrammarFunctor.151>;
                     "first"[value] -> <Gbnf_parser__GrammarFunctor.161>;
                     "length"[value] -> <Gbnf_parser__GrammarFunctor.159>;
                     "print"[value] -> <Gbnf_parser__GrammarFunctor.172>;
                     "singleton"[value] -> <Gbnf_parser__GrammarFunctor.152>;
                     "verbose"[value] -> <Gbnf_parser__GrammarFunctor.149>;
                     "word"[type] -> <Gbnf_parser__GrammarFunctor.150>;
                     });
              "alias"[value] -> <Gbnf_parser__GrammarFunctor.139>;
              "associativity"[value] -> <Gbnf_parser__GrammarFunctor.113>;
              "attributes"[value] -> <Gbnf_parser__GrammarFunctor.144>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.88>;
              "eof"[value] -> <Gbnf_parser__GrammarFunctor.143>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.89>;
              "error"[value] -> <Gbnf_parser__GrammarFunctor.101>;
              "every_token_has_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.138>;
              "fold"[value] -> <Gbnf_parser__GrammarFunctor.121>;
              "foldx"[value] -> <Gbnf_parser__GrammarFunctor.126>;
              "i2t"[value] -> <Gbnf_parser__GrammarFunctor.86>;
              "init"[value] -> <Gbnf_parser__GrammarFunctor.117>;
              "iter"[value] -> <Gbnf_parser__GrammarFunctor.119>;
              "iter_real"[value] -> <Gbnf_parser__GrammarFunctor.131>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.98>;
              "map"[value] -> <Gbnf_parser__GrammarFunctor.124>;
              "mapx"[value] -> <Gbnf_parser__GrammarFunctor.129>;
              "n"[value] -> <Gbnf_parser__GrammarFunctor.92>;
              "name"[value] -> <Gbnf_parser__GrammarFunctor.93>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.106>;
              "ocamltype"[value] -> <Gbnf_parser__GrammarFunctor.115>;
              "precedence_level"[value] -> <Gbnf_parser__GrammarFunctor.111>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.96>;
              "print_concrete"[value] -> <Gbnf_parser__GrammarFunctor.142>;
              "pseudo"[value] -> <Gbnf_parser__GrammarFunctor.102>;
              "real"[value] -> <Gbnf_parser__GrammarFunctor.104>;
              "sharp"[value] -> <Gbnf_parser__GrammarFunctor.100>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.83>;
              "t2i"[value] -> <Gbnf_parser__GrammarFunctor.84>;
              "token_properties"[value] -> <Gbnf_parser__GrammarFunctor.108>;
              "tokens_without_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.134>;
              "unquoted_alias"[value] -> <Gbnf_parser__GrammarFunctor.141>;
              })(
             {
              })
             . "add"[value];
           "bottom"[value] -> <Gbnf_parser__GrammarFunctor.187>;
           "cardinal"[value] ->
             CU Gbnf_parser . "BoundedBitSet"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.181>
              "Word"[module] ->
                Abs<Gbnf_parser__GrammarFunctor.180>
                   (X/2195,
                    {
                     "append"[value] -> <Gbnf_parser__GrammarFunctor.154>;
                     "compare"[value] -> <Gbnf_parser__GrammarFunctor.177>;
                     "decode"[value] -> <Gbnf_parser__GrammarFunctor.148>;
                     "elements"[value] -> <Gbnf_parser__GrammarFunctor.169>;
                     "encode"[value] -> <Gbnf_parser__GrammarFunctor.147>;
                     "epsilon"[value] -> <Gbnf_parser__GrammarFunctor.151>;
                     "first"[value] -> <Gbnf_parser__GrammarFunctor.161>;
                     "length"[value] -> <Gbnf_parser__GrammarFunctor.159>;
                     "print"[value] -> <Gbnf_parser__GrammarFunctor.172>;
                     "singleton"[value] -> <Gbnf_parser__GrammarFunctor.152>;
                     "verbose"[value] -> <Gbnf_parser__GrammarFunctor.149>;
                     "word"[type] -> <Gbnf_parser__GrammarFunctor.150>;
                     });
              "alias"[value] -> <Gbnf_parser__GrammarFunctor.139>;
              "associativity"[value] -> <Gbnf_parser__GrammarFunctor.113>;
              "attributes"[value] -> <Gbnf_parser__GrammarFunctor.144>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.88>;
              "eof"[value] -> <Gbnf_parser__GrammarFunctor.143>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.89>;
              "error"[value] -> <Gbnf_parser__GrammarFunctor.101>;
              "every_token_has_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.138>;
              "fold"[value] -> <Gbnf_parser__GrammarFunctor.121>;
              "foldx"[value] -> <Gbnf_parser__GrammarFunctor.126>;
              "i2t"[value] -> <Gbnf_parser__GrammarFunctor.86>;
              "init"[value] -> <Gbnf_parser__GrammarFunctor.117>;
              "iter"[value] -> <Gbnf_parser__GrammarFunctor.119>;
              "iter_real"[value] -> <Gbnf_parser__GrammarFunctor.131>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.98>;
              "map"[value] -> <Gbnf_parser__GrammarFunctor.124>;
              "mapx"[value] -> <Gbnf_parser__GrammarFunctor.129>;
              "n"[value] -> <Gbnf_parser__GrammarFunctor.92>;
              "name"[value] -> <Gbnf_parser__GrammarFunctor.93>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.106>;
              "ocamltype"[value] -> <Gbnf_parser__GrammarFunctor.115>;
              "precedence_level"[value] -> <Gbnf_parser__GrammarFunctor.111>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.96>;
              "print_concrete"[value] -> <Gbnf_parser__GrammarFunctor.142>;
              "pseudo"[value] -> <Gbnf_parser__GrammarFunctor.102>;
              "real"[value] -> <Gbnf_parser__GrammarFunctor.104>;
              "sharp"[value] -> <Gbnf_parser__GrammarFunctor.100>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.83>;
              "t2i"[value] -> <Gbnf_parser__GrammarFunctor.84>;
              "token_properties"[value] -> <Gbnf_parser__GrammarFunctor.108>;
              "tokens_without_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.134>;
              "unquoted_alias"[value] -> <Gbnf_parser__GrammarFunctor.141>;
              })(
             {
              })
             . "cardinal"[value];
           "choose"[value] ->
             CU Gbnf_parser . "BoundedBitSet"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.181>
              "Word"[module] ->
                Abs<Gbnf_parser__GrammarFunctor.180>
                   (X/2195,
                    {
                     "append"[value] -> <Gbnf_parser__GrammarFunctor.154>;
                     "compare"[value] -> <Gbnf_parser__GrammarFunctor.177>;
                     "decode"[value] -> <Gbnf_parser__GrammarFunctor.148>;
                     "elements"[value] -> <Gbnf_parser__GrammarFunctor.169>;
                     "encode"[value] -> <Gbnf_parser__GrammarFunctor.147>;
                     "epsilon"[value] -> <Gbnf_parser__GrammarFunctor.151>;
                     "first"[value] -> <Gbnf_parser__GrammarFunctor.161>;
                     "length"[value] -> <Gbnf_parser__GrammarFunctor.159>;
                     "print"[value] -> <Gbnf_parser__GrammarFunctor.172>;
                     "singleton"[value] -> <Gbnf_parser__GrammarFunctor.152>;
                     "verbose"[value] -> <Gbnf_parser__GrammarFunctor.149>;
                     "word"[type] -> <Gbnf_parser__GrammarFunctor.150>;
                     });
              "alias"[value] -> <Gbnf_parser__GrammarFunctor.139>;
              "associativity"[value] -> <Gbnf_parser__GrammarFunctor.113>;
              "attributes"[value] -> <Gbnf_parser__GrammarFunctor.144>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.88>;
              "eof"[value] -> <Gbnf_parser__GrammarFunctor.143>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.89>;
              "error"[value] -> <Gbnf_parser__GrammarFunctor.101>;
              "every_token_has_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.138>;
              "fold"[value] -> <Gbnf_parser__GrammarFunctor.121>;
              "foldx"[value] -> <Gbnf_parser__GrammarFunctor.126>;
              "i2t"[value] -> <Gbnf_parser__GrammarFunctor.86>;
              "init"[value] -> <Gbnf_parser__GrammarFunctor.117>;
              "iter"[value] -> <Gbnf_parser__GrammarFunctor.119>;
              "iter_real"[value] -> <Gbnf_parser__GrammarFunctor.131>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.98>;
              "map"[value] -> <Gbnf_parser__GrammarFunctor.124>;
              "mapx"[value] -> <Gbnf_parser__GrammarFunctor.129>;
              "n"[value] -> <Gbnf_parser__GrammarFunctor.92>;
              "name"[value] -> <Gbnf_parser__GrammarFunctor.93>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.106>;
              "ocamltype"[value] -> <Gbnf_parser__GrammarFunctor.115>;
              "precedence_level"[value] -> <Gbnf_parser__GrammarFunctor.111>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.96>;
              "print_concrete"[value] -> <Gbnf_parser__GrammarFunctor.142>;
              "pseudo"[value] -> <Gbnf_parser__GrammarFunctor.102>;
              "real"[value] -> <Gbnf_parser__GrammarFunctor.104>;
              "sharp"[value] -> <Gbnf_parser__GrammarFunctor.100>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.83>;
              "t2i"[value] -> <Gbnf_parser__GrammarFunctor.84>;
              "token_properties"[value] -> <Gbnf_parser__GrammarFunctor.108>;
              "tokens_without_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.134>;
              "unquoted_alias"[value] -> <Gbnf_parser__GrammarFunctor.141>;
              })(
             {
              })
             . "choose"[value];
           "compare"[value] ->
             CU Gbnf_parser . "BoundedBitSet"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.181>
              "Word"[module] ->
                Abs<Gbnf_parser__GrammarFunctor.180>
                   (X/2195,
                    {
                     "append"[value] -> <Gbnf_parser__GrammarFunctor.154>;
                     "compare"[value] -> <Gbnf_parser__GrammarFunctor.177>;
                     "decode"[value] -> <Gbnf_parser__GrammarFunctor.148>;
                     "elements"[value] -> <Gbnf_parser__GrammarFunctor.169>;
                     "encode"[value] -> <Gbnf_parser__GrammarFunctor.147>;
                     "epsilon"[value] -> <Gbnf_parser__GrammarFunctor.151>;
                     "first"[value] -> <Gbnf_parser__GrammarFunctor.161>;
                     "length"[value] -> <Gbnf_parser__GrammarFunctor.159>;
                     "print"[value] -> <Gbnf_parser__GrammarFunctor.172>;
                     "singleton"[value] -> <Gbnf_parser__GrammarFunctor.152>;
                     "verbose"[value] -> <Gbnf_parser__GrammarFunctor.149>;
                     "word"[type] -> <Gbnf_parser__GrammarFunctor.150>;
                     });
              "alias"[value] -> <Gbnf_parser__GrammarFunctor.139>;
              "associativity"[value] -> <Gbnf_parser__GrammarFunctor.113>;
              "attributes"[value] -> <Gbnf_parser__GrammarFunctor.144>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.88>;
              "eof"[value] -> <Gbnf_parser__GrammarFunctor.143>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.89>;
              "error"[value] -> <Gbnf_parser__GrammarFunctor.101>;
              "every_token_has_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.138>;
              "fold"[value] -> <Gbnf_parser__GrammarFunctor.121>;
              "foldx"[value] -> <Gbnf_parser__GrammarFunctor.126>;
              "i2t"[value] -> <Gbnf_parser__GrammarFunctor.86>;
              "init"[value] -> <Gbnf_parser__GrammarFunctor.117>;
              "iter"[value] -> <Gbnf_parser__GrammarFunctor.119>;
              "iter_real"[value] -> <Gbnf_parser__GrammarFunctor.131>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.98>;
              "map"[value] -> <Gbnf_parser__GrammarFunctor.124>;
              "mapx"[value] -> <Gbnf_parser__GrammarFunctor.129>;
              "n"[value] -> <Gbnf_parser__GrammarFunctor.92>;
              "name"[value] -> <Gbnf_parser__GrammarFunctor.93>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.106>;
              "ocamltype"[value] -> <Gbnf_parser__GrammarFunctor.115>;
              "precedence_level"[value] -> <Gbnf_parser__GrammarFunctor.111>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.96>;
              "print_concrete"[value] -> <Gbnf_parser__GrammarFunctor.142>;
              "pseudo"[value] -> <Gbnf_parser__GrammarFunctor.102>;
              "real"[value] -> <Gbnf_parser__GrammarFunctor.104>;
              "sharp"[value] -> <Gbnf_parser__GrammarFunctor.100>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.83>;
              "t2i"[value] -> <Gbnf_parser__GrammarFunctor.84>;
              "token_properties"[value] -> <Gbnf_parser__GrammarFunctor.108>;
              "tokens_without_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.134>;
              "unquoted_alias"[value] -> <Gbnf_parser__GrammarFunctor.141>;
              })(
             {
              })
             . "compare"[value];
           "disjoint"[value] ->
             CU Gbnf_parser . "BoundedBitSet"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.181>
              "Word"[module] ->
                Abs<Gbnf_parser__GrammarFunctor.180>
                   (X/2195,
                    {
                     "append"[value] -> <Gbnf_parser__GrammarFunctor.154>;
                     "compare"[value] -> <Gbnf_parser__GrammarFunctor.177>;
                     "decode"[value] -> <Gbnf_parser__GrammarFunctor.148>;
                     "elements"[value] -> <Gbnf_parser__GrammarFunctor.169>;
                     "encode"[value] -> <Gbnf_parser__GrammarFunctor.147>;
                     "epsilon"[value] -> <Gbnf_parser__GrammarFunctor.151>;
                     "first"[value] -> <Gbnf_parser__GrammarFunctor.161>;
                     "length"[value] -> <Gbnf_parser__GrammarFunctor.159>;
                     "print"[value] -> <Gbnf_parser__GrammarFunctor.172>;
                     "singleton"[value] -> <Gbnf_parser__GrammarFunctor.152>;
                     "verbose"[value] -> <Gbnf_parser__GrammarFunctor.149>;
                     "word"[type] -> <Gbnf_parser__GrammarFunctor.150>;
                     });
              "alias"[value] -> <Gbnf_parser__GrammarFunctor.139>;
              "associativity"[value] -> <Gbnf_parser__GrammarFunctor.113>;
              "attributes"[value] -> <Gbnf_parser__GrammarFunctor.144>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.88>;
              "eof"[value] -> <Gbnf_parser__GrammarFunctor.143>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.89>;
              "error"[value] -> <Gbnf_parser__GrammarFunctor.101>;
              "every_token_has_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.138>;
              "fold"[value] -> <Gbnf_parser__GrammarFunctor.121>;
              "foldx"[value] -> <Gbnf_parser__GrammarFunctor.126>;
              "i2t"[value] -> <Gbnf_parser__GrammarFunctor.86>;
              "init"[value] -> <Gbnf_parser__GrammarFunctor.117>;
              "iter"[value] -> <Gbnf_parser__GrammarFunctor.119>;
              "iter_real"[value] -> <Gbnf_parser__GrammarFunctor.131>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.98>;
              "map"[value] -> <Gbnf_parser__GrammarFunctor.124>;
              "mapx"[value] -> <Gbnf_parser__GrammarFunctor.129>;
              "n"[value] -> <Gbnf_parser__GrammarFunctor.92>;
              "name"[value] -> <Gbnf_parser__GrammarFunctor.93>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.106>;
              "ocamltype"[value] -> <Gbnf_parser__GrammarFunctor.115>;
              "precedence_level"[value] -> <Gbnf_parser__GrammarFunctor.111>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.96>;
              "print_concrete"[value] -> <Gbnf_parser__GrammarFunctor.142>;
              "pseudo"[value] -> <Gbnf_parser__GrammarFunctor.102>;
              "real"[value] -> <Gbnf_parser__GrammarFunctor.104>;
              "sharp"[value] -> <Gbnf_parser__GrammarFunctor.100>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.83>;
              "t2i"[value] -> <Gbnf_parser__GrammarFunctor.84>;
              "token_properties"[value] -> <Gbnf_parser__GrammarFunctor.108>;
              "tokens_without_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.134>;
              "unquoted_alias"[value] -> <Gbnf_parser__GrammarFunctor.141>;
              })(
             {
              })
             . "disjoint"[value];
           "element"[type] ->
             CU Gbnf_parser . "BoundedBitSet"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.181>
              "Word"[module] ->
                Abs<Gbnf_parser__GrammarFunctor.180>
                   (X/2195,
                    {
                     "append"[value] -> <Gbnf_parser__GrammarFunctor.154>;
                     "compare"[value] -> <Gbnf_parser__GrammarFunctor.177>;
                     "decode"[value] -> <Gbnf_parser__GrammarFunctor.148>;
                     "elements"[value] -> <Gbnf_parser__GrammarFunctor.169>;
                     "encode"[value] -> <Gbnf_parser__GrammarFunctor.147>;
                     "epsilon"[value] -> <Gbnf_parser__GrammarFunctor.151>;
                     "first"[value] -> <Gbnf_parser__GrammarFunctor.161>;
                     "length"[value] -> <Gbnf_parser__GrammarFunctor.159>;
                     "print"[value] -> <Gbnf_parser__GrammarFunctor.172>;
                     "singleton"[value] -> <Gbnf_parser__GrammarFunctor.152>;
                     "verbose"[value] -> <Gbnf_parser__GrammarFunctor.149>;
                     "word"[type] -> <Gbnf_parser__GrammarFunctor.150>;
                     });
              "alias"[value] -> <Gbnf_parser__GrammarFunctor.139>;
              "associativity"[value] -> <Gbnf_parser__GrammarFunctor.113>;
              "attributes"[value] -> <Gbnf_parser__GrammarFunctor.144>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.88>;
              "eof"[value] -> <Gbnf_parser__GrammarFunctor.143>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.89>;
              "error"[value] -> <Gbnf_parser__GrammarFunctor.101>;
              "every_token_has_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.138>;
              "fold"[value] -> <Gbnf_parser__GrammarFunctor.121>;
              "foldx"[value] -> <Gbnf_parser__GrammarFunctor.126>;
              "i2t"[value] -> <Gbnf_parser__GrammarFunctor.86>;
              "init"[value] -> <Gbnf_parser__GrammarFunctor.117>;
              "iter"[value] -> <Gbnf_parser__GrammarFunctor.119>;
              "iter_real"[value] -> <Gbnf_parser__GrammarFunctor.131>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.98>;
              "map"[value] -> <Gbnf_parser__GrammarFunctor.124>;
              "mapx"[value] -> <Gbnf_parser__GrammarFunctor.129>;
              "n"[value] -> <Gbnf_parser__GrammarFunctor.92>;
              "name"[value] -> <Gbnf_parser__GrammarFunctor.93>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.106>;
              "ocamltype"[value] -> <Gbnf_parser__GrammarFunctor.115>;
              "precedence_level"[value] -> <Gbnf_parser__GrammarFunctor.111>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.96>;
              "print_concrete"[value] -> <Gbnf_parser__GrammarFunctor.142>;
              "pseudo"[value] -> <Gbnf_parser__GrammarFunctor.102>;
              "real"[value] -> <Gbnf_parser__GrammarFunctor.104>;
              "sharp"[value] -> <Gbnf_parser__GrammarFunctor.100>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.83>;
              "t2i"[value] -> <Gbnf_parser__GrammarFunctor.84>;
              "token_properties"[value] -> <Gbnf_parser__GrammarFunctor.108>;
              "tokens_without_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.134>;
              "unquoted_alias"[value] -> <Gbnf_parser__GrammarFunctor.141>;
              })(
             {
              })
             . "element"[type];
           "elements"[value] ->
             CU Gbnf_parser . "BoundedBitSet"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.181>
              "Word"[module] ->
                Abs<Gbnf_parser__GrammarFunctor.180>
                   (X/2195,
                    {
                     "append"[value] -> <Gbnf_parser__GrammarFunctor.154>;
                     "compare"[value] -> <Gbnf_parser__GrammarFunctor.177>;
                     "decode"[value] -> <Gbnf_parser__GrammarFunctor.148>;
                     "elements"[value] -> <Gbnf_parser__GrammarFunctor.169>;
                     "encode"[value] -> <Gbnf_parser__GrammarFunctor.147>;
                     "epsilon"[value] -> <Gbnf_parser__GrammarFunctor.151>;
                     "first"[value] -> <Gbnf_parser__GrammarFunctor.161>;
                     "length"[value] -> <Gbnf_parser__GrammarFunctor.159>;
                     "print"[value] -> <Gbnf_parser__GrammarFunctor.172>;
                     "singleton"[value] -> <Gbnf_parser__GrammarFunctor.152>;
                     "verbose"[value] -> <Gbnf_parser__GrammarFunctor.149>;
                     "word"[type] -> <Gbnf_parser__GrammarFunctor.150>;
                     });
              "alias"[value] -> <Gbnf_parser__GrammarFunctor.139>;
              "associativity"[value] -> <Gbnf_parser__GrammarFunctor.113>;
              "attributes"[value] -> <Gbnf_parser__GrammarFunctor.144>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.88>;
              "eof"[value] -> <Gbnf_parser__GrammarFunctor.143>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.89>;
              "error"[value] -> <Gbnf_parser__GrammarFunctor.101>;
              "every_token_has_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.138>;
              "fold"[value] -> <Gbnf_parser__GrammarFunctor.121>;
              "foldx"[value] -> <Gbnf_parser__GrammarFunctor.126>;
              "i2t"[value] -> <Gbnf_parser__GrammarFunctor.86>;
              "init"[value] -> <Gbnf_parser__GrammarFunctor.117>;
              "iter"[value] -> <Gbnf_parser__GrammarFunctor.119>;
              "iter_real"[value] -> <Gbnf_parser__GrammarFunctor.131>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.98>;
              "map"[value] -> <Gbnf_parser__GrammarFunctor.124>;
              "mapx"[value] -> <Gbnf_parser__GrammarFunctor.129>;
              "n"[value] -> <Gbnf_parser__GrammarFunctor.92>;
              "name"[value] -> <Gbnf_parser__GrammarFunctor.93>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.106>;
              "ocamltype"[value] -> <Gbnf_parser__GrammarFunctor.115>;
              "precedence_level"[value] -> <Gbnf_parser__GrammarFunctor.111>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.96>;
              "print_concrete"[value] -> <Gbnf_parser__GrammarFunctor.142>;
              "pseudo"[value] -> <Gbnf_parser__GrammarFunctor.102>;
              "real"[value] -> <Gbnf_parser__GrammarFunctor.104>;
              "sharp"[value] -> <Gbnf_parser__GrammarFunctor.100>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.83>;
              "t2i"[value] -> <Gbnf_parser__GrammarFunctor.84>;
              "token_properties"[value] -> <Gbnf_parser__GrammarFunctor.108>;
              "tokens_without_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.134>;
              "unquoted_alias"[value] -> <Gbnf_parser__GrammarFunctor.141>;
              })(
             {
              })
             . "elements"[value];
           "empty"[value] ->
             CU Gbnf_parser . "BoundedBitSet"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.181>
              "Word"[module] ->
                Abs<Gbnf_parser__GrammarFunctor.180>
                   (X/2195,
                    {
                     "append"[value] -> <Gbnf_parser__GrammarFunctor.154>;
                     "compare"[value] -> <Gbnf_parser__GrammarFunctor.177>;
                     "decode"[value] -> <Gbnf_parser__GrammarFunctor.148>;
                     "elements"[value] -> <Gbnf_parser__GrammarFunctor.169>;
                     "encode"[value] -> <Gbnf_parser__GrammarFunctor.147>;
                     "epsilon"[value] -> <Gbnf_parser__GrammarFunctor.151>;
                     "first"[value] -> <Gbnf_parser__GrammarFunctor.161>;
                     "length"[value] -> <Gbnf_parser__GrammarFunctor.159>;
                     "print"[value] -> <Gbnf_parser__GrammarFunctor.172>;
                     "singleton"[value] -> <Gbnf_parser__GrammarFunctor.152>;
                     "verbose"[value] -> <Gbnf_parser__GrammarFunctor.149>;
                     "word"[type] -> <Gbnf_parser__GrammarFunctor.150>;
                     });
              "alias"[value] -> <Gbnf_parser__GrammarFunctor.139>;
              "associativity"[value] -> <Gbnf_parser__GrammarFunctor.113>;
              "attributes"[value] -> <Gbnf_parser__GrammarFunctor.144>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.88>;
              "eof"[value] -> <Gbnf_parser__GrammarFunctor.143>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.89>;
              "error"[value] -> <Gbnf_parser__GrammarFunctor.101>;
              "every_token_has_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.138>;
              "fold"[value] -> <Gbnf_parser__GrammarFunctor.121>;
              "foldx"[value] -> <Gbnf_parser__GrammarFunctor.126>;
              "i2t"[value] -> <Gbnf_parser__GrammarFunctor.86>;
              "init"[value] -> <Gbnf_parser__GrammarFunctor.117>;
              "iter"[value] -> <Gbnf_parser__GrammarFunctor.119>;
              "iter_real"[value] -> <Gbnf_parser__GrammarFunctor.131>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.98>;
              "map"[value] -> <Gbnf_parser__GrammarFunctor.124>;
              "mapx"[value] -> <Gbnf_parser__GrammarFunctor.129>;
              "n"[value] -> <Gbnf_parser__GrammarFunctor.92>;
              "name"[value] -> <Gbnf_parser__GrammarFunctor.93>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.106>;
              "ocamltype"[value] -> <Gbnf_parser__GrammarFunctor.115>;
              "precedence_level"[value] -> <Gbnf_parser__GrammarFunctor.111>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.96>;
              "print_concrete"[value] -> <Gbnf_parser__GrammarFunctor.142>;
              "pseudo"[value] -> <Gbnf_parser__GrammarFunctor.102>;
              "real"[value] -> <Gbnf_parser__GrammarFunctor.104>;
              "sharp"[value] -> <Gbnf_parser__GrammarFunctor.100>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.83>;
              "t2i"[value] -> <Gbnf_parser__GrammarFunctor.84>;
              "token_properties"[value] -> <Gbnf_parser__GrammarFunctor.108>;
              "tokens_without_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.134>;
              "unquoted_alias"[value] -> <Gbnf_parser__GrammarFunctor.141>;
              })(
             {
              })
             . "empty"[value];
           "equal"[value] ->
             CU Gbnf_parser . "BoundedBitSet"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.181>
              "Word"[module] ->
                Abs<Gbnf_parser__GrammarFunctor.180>
                   (X/2195,
                    {
                     "append"[value] -> <Gbnf_parser__GrammarFunctor.154>;
                     "compare"[value] -> <Gbnf_parser__GrammarFunctor.177>;
                     "decode"[value] -> <Gbnf_parser__GrammarFunctor.148>;
                     "elements"[value] -> <Gbnf_parser__GrammarFunctor.169>;
                     "encode"[value] -> <Gbnf_parser__GrammarFunctor.147>;
                     "epsilon"[value] -> <Gbnf_parser__GrammarFunctor.151>;
                     "first"[value] -> <Gbnf_parser__GrammarFunctor.161>;
                     "length"[value] -> <Gbnf_parser__GrammarFunctor.159>;
                     "print"[value] -> <Gbnf_parser__GrammarFunctor.172>;
                     "singleton"[value] -> <Gbnf_parser__GrammarFunctor.152>;
                     "verbose"[value] -> <Gbnf_parser__GrammarFunctor.149>;
                     "word"[type] -> <Gbnf_parser__GrammarFunctor.150>;
                     });
              "alias"[value] -> <Gbnf_parser__GrammarFunctor.139>;
              "associativity"[value] -> <Gbnf_parser__GrammarFunctor.113>;
              "attributes"[value] -> <Gbnf_parser__GrammarFunctor.144>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.88>;
              "eof"[value] -> <Gbnf_parser__GrammarFunctor.143>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.89>;
              "error"[value] -> <Gbnf_parser__GrammarFunctor.101>;
              "every_token_has_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.138>;
              "fold"[value] -> <Gbnf_parser__GrammarFunctor.121>;
              "foldx"[value] -> <Gbnf_parser__GrammarFunctor.126>;
              "i2t"[value] -> <Gbnf_parser__GrammarFunctor.86>;
              "init"[value] -> <Gbnf_parser__GrammarFunctor.117>;
              "iter"[value] -> <Gbnf_parser__GrammarFunctor.119>;
              "iter_real"[value] -> <Gbnf_parser__GrammarFunctor.131>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.98>;
              "map"[value] -> <Gbnf_parser__GrammarFunctor.124>;
              "mapx"[value] -> <Gbnf_parser__GrammarFunctor.129>;
              "n"[value] -> <Gbnf_parser__GrammarFunctor.92>;
              "name"[value] -> <Gbnf_parser__GrammarFunctor.93>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.106>;
              "ocamltype"[value] -> <Gbnf_parser__GrammarFunctor.115>;
              "precedence_level"[value] -> <Gbnf_parser__GrammarFunctor.111>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.96>;
              "print_concrete"[value] -> <Gbnf_parser__GrammarFunctor.142>;
              "pseudo"[value] -> <Gbnf_parser__GrammarFunctor.102>;
              "real"[value] -> <Gbnf_parser__GrammarFunctor.104>;
              "sharp"[value] -> <Gbnf_parser__GrammarFunctor.100>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.83>;
              "t2i"[value] -> <Gbnf_parser__GrammarFunctor.84>;
              "token_properties"[value] -> <Gbnf_parser__GrammarFunctor.108>;
              "tokens_without_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.134>;
              "unquoted_alias"[value] -> <Gbnf_parser__GrammarFunctor.141>;
              })(
             {
              })
             . "equal"[value];
           "fold"[value] ->
             CU Gbnf_parser . "BoundedBitSet"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.181>
              "Word"[module] ->
                Abs<Gbnf_parser__GrammarFunctor.180>
                   (X/2195,
                    {
                     "append"[value] -> <Gbnf_parser__GrammarFunctor.154>;
                     "compare"[value] -> <Gbnf_parser__GrammarFunctor.177>;
                     "decode"[value] -> <Gbnf_parser__GrammarFunctor.148>;
                     "elements"[value] -> <Gbnf_parser__GrammarFunctor.169>;
                     "encode"[value] -> <Gbnf_parser__GrammarFunctor.147>;
                     "epsilon"[value] -> <Gbnf_parser__GrammarFunctor.151>;
                     "first"[value] -> <Gbnf_parser__GrammarFunctor.161>;
                     "length"[value] -> <Gbnf_parser__GrammarFunctor.159>;
                     "print"[value] -> <Gbnf_parser__GrammarFunctor.172>;
                     "singleton"[value] -> <Gbnf_parser__GrammarFunctor.152>;
                     "verbose"[value] -> <Gbnf_parser__GrammarFunctor.149>;
                     "word"[type] -> <Gbnf_parser__GrammarFunctor.150>;
                     });
              "alias"[value] -> <Gbnf_parser__GrammarFunctor.139>;
              "associativity"[value] -> <Gbnf_parser__GrammarFunctor.113>;
              "attributes"[value] -> <Gbnf_parser__GrammarFunctor.144>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.88>;
              "eof"[value] -> <Gbnf_parser__GrammarFunctor.143>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.89>;
              "error"[value] -> <Gbnf_parser__GrammarFunctor.101>;
              "every_token_has_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.138>;
              "fold"[value] -> <Gbnf_parser__GrammarFunctor.121>;
              "foldx"[value] -> <Gbnf_parser__GrammarFunctor.126>;
              "i2t"[value] -> <Gbnf_parser__GrammarFunctor.86>;
              "init"[value] -> <Gbnf_parser__GrammarFunctor.117>;
              "iter"[value] -> <Gbnf_parser__GrammarFunctor.119>;
              "iter_real"[value] -> <Gbnf_parser__GrammarFunctor.131>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.98>;
              "map"[value] -> <Gbnf_parser__GrammarFunctor.124>;
              "mapx"[value] -> <Gbnf_parser__GrammarFunctor.129>;
              "n"[value] -> <Gbnf_parser__GrammarFunctor.92>;
              "name"[value] -> <Gbnf_parser__GrammarFunctor.93>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.106>;
              "ocamltype"[value] -> <Gbnf_parser__GrammarFunctor.115>;
              "precedence_level"[value] -> <Gbnf_parser__GrammarFunctor.111>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.96>;
              "print_concrete"[value] -> <Gbnf_parser__GrammarFunctor.142>;
              "pseudo"[value] -> <Gbnf_parser__GrammarFunctor.102>;
              "real"[value] -> <Gbnf_parser__GrammarFunctor.104>;
              "sharp"[value] -> <Gbnf_parser__GrammarFunctor.100>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.83>;
              "t2i"[value] -> <Gbnf_parser__GrammarFunctor.84>;
              "token_properties"[value] -> <Gbnf_parser__GrammarFunctor.108>;
              "tokens_without_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.134>;
              "unquoted_alias"[value] -> <Gbnf_parser__GrammarFunctor.141>;
              })(
             {
              })
             . "fold"[value];
           "inter"[value] ->
             CU Gbnf_parser . "BoundedBitSet"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.181>
              "Word"[module] ->
                Abs<Gbnf_parser__GrammarFunctor.180>
                   (X/2195,
                    {
                     "append"[value] -> <Gbnf_parser__GrammarFunctor.154>;
                     "compare"[value] -> <Gbnf_parser__GrammarFunctor.177>;
                     "decode"[value] -> <Gbnf_parser__GrammarFunctor.148>;
                     "elements"[value] -> <Gbnf_parser__GrammarFunctor.169>;
                     "encode"[value] -> <Gbnf_parser__GrammarFunctor.147>;
                     "epsilon"[value] -> <Gbnf_parser__GrammarFunctor.151>;
                     "first"[value] -> <Gbnf_parser__GrammarFunctor.161>;
                     "length"[value] -> <Gbnf_parser__GrammarFunctor.159>;
                     "print"[value] -> <Gbnf_parser__GrammarFunctor.172>;
                     "singleton"[value] -> <Gbnf_parser__GrammarFunctor.152>;
                     "verbose"[value] -> <Gbnf_parser__GrammarFunctor.149>;
                     "word"[type] -> <Gbnf_parser__GrammarFunctor.150>;
                     });
              "alias"[value] -> <Gbnf_parser__GrammarFunctor.139>;
              "associativity"[value] -> <Gbnf_parser__GrammarFunctor.113>;
              "attributes"[value] -> <Gbnf_parser__GrammarFunctor.144>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.88>;
              "eof"[value] -> <Gbnf_parser__GrammarFunctor.143>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.89>;
              "error"[value] -> <Gbnf_parser__GrammarFunctor.101>;
              "every_token_has_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.138>;
              "fold"[value] -> <Gbnf_parser__GrammarFunctor.121>;
              "foldx"[value] -> <Gbnf_parser__GrammarFunctor.126>;
              "i2t"[value] -> <Gbnf_parser__GrammarFunctor.86>;
              "init"[value] -> <Gbnf_parser__GrammarFunctor.117>;
              "iter"[value] -> <Gbnf_parser__GrammarFunctor.119>;
              "iter_real"[value] -> <Gbnf_parser__GrammarFunctor.131>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.98>;
              "map"[value] -> <Gbnf_parser__GrammarFunctor.124>;
              "mapx"[value] -> <Gbnf_parser__GrammarFunctor.129>;
              "n"[value] -> <Gbnf_parser__GrammarFunctor.92>;
              "name"[value] -> <Gbnf_parser__GrammarFunctor.93>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.106>;
              "ocamltype"[value] -> <Gbnf_parser__GrammarFunctor.115>;
              "precedence_level"[value] -> <Gbnf_parser__GrammarFunctor.111>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.96>;
              "print_concrete"[value] -> <Gbnf_parser__GrammarFunctor.142>;
              "pseudo"[value] -> <Gbnf_parser__GrammarFunctor.102>;
              "real"[value] -> <Gbnf_parser__GrammarFunctor.104>;
              "sharp"[value] -> <Gbnf_parser__GrammarFunctor.100>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.83>;
              "t2i"[value] -> <Gbnf_parser__GrammarFunctor.84>;
              "token_properties"[value] -> <Gbnf_parser__GrammarFunctor.108>;
              "tokens_without_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.134>;
              "unquoted_alias"[value] -> <Gbnf_parser__GrammarFunctor.141>;
              })(
             {
              })
             . "inter"[value];
           "is_empty"[value] ->
             CU Gbnf_parser . "BoundedBitSet"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.181>
              "Word"[module] ->
                Abs<Gbnf_parser__GrammarFunctor.180>
                   (X/2195,
                    {
                     "append"[value] -> <Gbnf_parser__GrammarFunctor.154>;
                     "compare"[value] -> <Gbnf_parser__GrammarFunctor.177>;
                     "decode"[value] -> <Gbnf_parser__GrammarFunctor.148>;
                     "elements"[value] -> <Gbnf_parser__GrammarFunctor.169>;
                     "encode"[value] -> <Gbnf_parser__GrammarFunctor.147>;
                     "epsilon"[value] -> <Gbnf_parser__GrammarFunctor.151>;
                     "first"[value] -> <Gbnf_parser__GrammarFunctor.161>;
                     "length"[value] -> <Gbnf_parser__GrammarFunctor.159>;
                     "print"[value] -> <Gbnf_parser__GrammarFunctor.172>;
                     "singleton"[value] -> <Gbnf_parser__GrammarFunctor.152>;
                     "verbose"[value] -> <Gbnf_parser__GrammarFunctor.149>;
                     "word"[type] -> <Gbnf_parser__GrammarFunctor.150>;
                     });
              "alias"[value] -> <Gbnf_parser__GrammarFunctor.139>;
              "associativity"[value] -> <Gbnf_parser__GrammarFunctor.113>;
              "attributes"[value] -> <Gbnf_parser__GrammarFunctor.144>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.88>;
              "eof"[value] -> <Gbnf_parser__GrammarFunctor.143>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.89>;
              "error"[value] -> <Gbnf_parser__GrammarFunctor.101>;
              "every_token_has_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.138>;
              "fold"[value] -> <Gbnf_parser__GrammarFunctor.121>;
              "foldx"[value] -> <Gbnf_parser__GrammarFunctor.126>;
              "i2t"[value] -> <Gbnf_parser__GrammarFunctor.86>;
              "init"[value] -> <Gbnf_parser__GrammarFunctor.117>;
              "iter"[value] -> <Gbnf_parser__GrammarFunctor.119>;
              "iter_real"[value] -> <Gbnf_parser__GrammarFunctor.131>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.98>;
              "map"[value] -> <Gbnf_parser__GrammarFunctor.124>;
              "mapx"[value] -> <Gbnf_parser__GrammarFunctor.129>;
              "n"[value] -> <Gbnf_parser__GrammarFunctor.92>;
              "name"[value] -> <Gbnf_parser__GrammarFunctor.93>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.106>;
              "ocamltype"[value] -> <Gbnf_parser__GrammarFunctor.115>;
              "precedence_level"[value] -> <Gbnf_parser__GrammarFunctor.111>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.96>;
              "print_concrete"[value] -> <Gbnf_parser__GrammarFunctor.142>;
              "pseudo"[value] -> <Gbnf_parser__GrammarFunctor.102>;
              "real"[value] -> <Gbnf_parser__GrammarFunctor.104>;
              "sharp"[value] -> <Gbnf_parser__GrammarFunctor.100>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.83>;
              "t2i"[value] -> <Gbnf_parser__GrammarFunctor.84>;
              "token_properties"[value] -> <Gbnf_parser__GrammarFunctor.108>;
              "tokens_without_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.134>;
              "unquoted_alias"[value] -> <Gbnf_parser__GrammarFunctor.141>;
              })(
             {
              })
             . "is_empty"[value];
           "is_maximal"[value] -> <Gbnf_parser__GrammarFunctor.188>;
           "is_singleton"[value] ->
             CU Gbnf_parser . "BoundedBitSet"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.181>
              "Word"[module] ->
                Abs<Gbnf_parser__GrammarFunctor.180>
                   (X/2195,
                    {
                     "append"[value] -> <Gbnf_parser__GrammarFunctor.154>;
                     "compare"[value] -> <Gbnf_parser__GrammarFunctor.177>;
                     "decode"[value] -> <Gbnf_parser__GrammarFunctor.148>;
                     "elements"[value] -> <Gbnf_parser__GrammarFunctor.169>;
                     "encode"[value] -> <Gbnf_parser__GrammarFunctor.147>;
                     "epsilon"[value] -> <Gbnf_parser__GrammarFunctor.151>;
                     "first"[value] -> <Gbnf_parser__GrammarFunctor.161>;
                     "length"[value] -> <Gbnf_parser__GrammarFunctor.159>;
                     "print"[value] -> <Gbnf_parser__GrammarFunctor.172>;
                     "singleton"[value] -> <Gbnf_parser__GrammarFunctor.152>;
                     "verbose"[value] -> <Gbnf_parser__GrammarFunctor.149>;
                     "word"[type] -> <Gbnf_parser__GrammarFunctor.150>;
                     });
              "alias"[value] -> <Gbnf_parser__GrammarFunctor.139>;
              "associativity"[value] -> <Gbnf_parser__GrammarFunctor.113>;
              "attributes"[value] -> <Gbnf_parser__GrammarFunctor.144>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.88>;
              "eof"[value] -> <Gbnf_parser__GrammarFunctor.143>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.89>;
              "error"[value] -> <Gbnf_parser__GrammarFunctor.101>;
              "every_token_has_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.138>;
              "fold"[value] -> <Gbnf_parser__GrammarFunctor.121>;
              "foldx"[value] -> <Gbnf_parser__GrammarFunctor.126>;
              "i2t"[value] -> <Gbnf_parser__GrammarFunctor.86>;
              "init"[value] -> <Gbnf_parser__GrammarFunctor.117>;
              "iter"[value] -> <Gbnf_parser__GrammarFunctor.119>;
              "iter_real"[value] -> <Gbnf_parser__GrammarFunctor.131>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.98>;
              "map"[value] -> <Gbnf_parser__GrammarFunctor.124>;
              "mapx"[value] -> <Gbnf_parser__GrammarFunctor.129>;
              "n"[value] -> <Gbnf_parser__GrammarFunctor.92>;
              "name"[value] -> <Gbnf_parser__GrammarFunctor.93>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.106>;
              "ocamltype"[value] -> <Gbnf_parser__GrammarFunctor.115>;
              "precedence_level"[value] -> <Gbnf_parser__GrammarFunctor.111>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.96>;
              "print_concrete"[value] -> <Gbnf_parser__GrammarFunctor.142>;
              "pseudo"[value] -> <Gbnf_parser__GrammarFunctor.102>;
              "real"[value] -> <Gbnf_parser__GrammarFunctor.104>;
              "sharp"[value] -> <Gbnf_parser__GrammarFunctor.100>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.83>;
              "t2i"[value] -> <Gbnf_parser__GrammarFunctor.84>;
              "token_properties"[value] -> <Gbnf_parser__GrammarFunctor.108>;
              "tokens_without_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.134>;
              "unquoted_alias"[value] -> <Gbnf_parser__GrammarFunctor.141>;
              })(
             {
              })
             . "is_singleton"[value];
           "iter"[value] ->
             CU Gbnf_parser . "BoundedBitSet"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.181>
              "Word"[module] ->
                Abs<Gbnf_parser__GrammarFunctor.180>
                   (X/2195,
                    {
                     "append"[value] -> <Gbnf_parser__GrammarFunctor.154>;
                     "compare"[value] -> <Gbnf_parser__GrammarFunctor.177>;
                     "decode"[value] -> <Gbnf_parser__GrammarFunctor.148>;
                     "elements"[value] -> <Gbnf_parser__GrammarFunctor.169>;
                     "encode"[value] -> <Gbnf_parser__GrammarFunctor.147>;
                     "epsilon"[value] -> <Gbnf_parser__GrammarFunctor.151>;
                     "first"[value] -> <Gbnf_parser__GrammarFunctor.161>;
                     "length"[value] -> <Gbnf_parser__GrammarFunctor.159>;
                     "print"[value] -> <Gbnf_parser__GrammarFunctor.172>;
                     "singleton"[value] -> <Gbnf_parser__GrammarFunctor.152>;
                     "verbose"[value] -> <Gbnf_parser__GrammarFunctor.149>;
                     "word"[type] -> <Gbnf_parser__GrammarFunctor.150>;
                     });
              "alias"[value] -> <Gbnf_parser__GrammarFunctor.139>;
              "associativity"[value] -> <Gbnf_parser__GrammarFunctor.113>;
              "attributes"[value] -> <Gbnf_parser__GrammarFunctor.144>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.88>;
              "eof"[value] -> <Gbnf_parser__GrammarFunctor.143>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.89>;
              "error"[value] -> <Gbnf_parser__GrammarFunctor.101>;
              "every_token_has_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.138>;
              "fold"[value] -> <Gbnf_parser__GrammarFunctor.121>;
              "foldx"[value] -> <Gbnf_parser__GrammarFunctor.126>;
              "i2t"[value] -> <Gbnf_parser__GrammarFunctor.86>;
              "init"[value] -> <Gbnf_parser__GrammarFunctor.117>;
              "iter"[value] -> <Gbnf_parser__GrammarFunctor.119>;
              "iter_real"[value] -> <Gbnf_parser__GrammarFunctor.131>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.98>;
              "map"[value] -> <Gbnf_parser__GrammarFunctor.124>;
              "mapx"[value] -> <Gbnf_parser__GrammarFunctor.129>;
              "n"[value] -> <Gbnf_parser__GrammarFunctor.92>;
              "name"[value] -> <Gbnf_parser__GrammarFunctor.93>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.106>;
              "ocamltype"[value] -> <Gbnf_parser__GrammarFunctor.115>;
              "precedence_level"[value] -> <Gbnf_parser__GrammarFunctor.111>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.96>;
              "print_concrete"[value] -> <Gbnf_parser__GrammarFunctor.142>;
              "pseudo"[value] -> <Gbnf_parser__GrammarFunctor.102>;
              "real"[value] -> <Gbnf_parser__GrammarFunctor.104>;
              "sharp"[value] -> <Gbnf_parser__GrammarFunctor.100>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.83>;
              "t2i"[value] -> <Gbnf_parser__GrammarFunctor.84>;
              "token_properties"[value] -> <Gbnf_parser__GrammarFunctor.108>;
              "tokens_without_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.134>;
              "unquoted_alias"[value] -> <Gbnf_parser__GrammarFunctor.141>;
              })(
             {
              })
             . "iter"[value];
           "leq_join"[value] -> <Gbnf_parser__GrammarFunctor.189>;
           "mem"[value] ->
             CU Gbnf_parser . "BoundedBitSet"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.181>
              "Word"[module] ->
                Abs<Gbnf_parser__GrammarFunctor.180>
                   (X/2195,
                    {
                     "append"[value] -> <Gbnf_parser__GrammarFunctor.154>;
                     "compare"[value] -> <Gbnf_parser__GrammarFunctor.177>;
                     "decode"[value] -> <Gbnf_parser__GrammarFunctor.148>;
                     "elements"[value] -> <Gbnf_parser__GrammarFunctor.169>;
                     "encode"[value] -> <Gbnf_parser__GrammarFunctor.147>;
                     "epsilon"[value] -> <Gbnf_parser__GrammarFunctor.151>;
                     "first"[value] -> <Gbnf_parser__GrammarFunctor.161>;
                     "length"[value] -> <Gbnf_parser__GrammarFunctor.159>;
                     "print"[value] -> <Gbnf_parser__GrammarFunctor.172>;
                     "singleton"[value] -> <Gbnf_parser__GrammarFunctor.152>;
                     "verbose"[value] -> <Gbnf_parser__GrammarFunctor.149>;
                     "word"[type] -> <Gbnf_parser__GrammarFunctor.150>;
                     });
              "alias"[value] -> <Gbnf_parser__GrammarFunctor.139>;
              "associativity"[value] -> <Gbnf_parser__GrammarFunctor.113>;
              "attributes"[value] -> <Gbnf_parser__GrammarFunctor.144>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.88>;
              "eof"[value] -> <Gbnf_parser__GrammarFunctor.143>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.89>;
              "error"[value] -> <Gbnf_parser__GrammarFunctor.101>;
              "every_token_has_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.138>;
              "fold"[value] -> <Gbnf_parser__GrammarFunctor.121>;
              "foldx"[value] -> <Gbnf_parser__GrammarFunctor.126>;
              "i2t"[value] -> <Gbnf_parser__GrammarFunctor.86>;
              "init"[value] -> <Gbnf_parser__GrammarFunctor.117>;
              "iter"[value] -> <Gbnf_parser__GrammarFunctor.119>;
              "iter_real"[value] -> <Gbnf_parser__GrammarFunctor.131>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.98>;
              "map"[value] -> <Gbnf_parser__GrammarFunctor.124>;
              "mapx"[value] -> <Gbnf_parser__GrammarFunctor.129>;
              "n"[value] -> <Gbnf_parser__GrammarFunctor.92>;
              "name"[value] -> <Gbnf_parser__GrammarFunctor.93>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.106>;
              "ocamltype"[value] -> <Gbnf_parser__GrammarFunctor.115>;
              "precedence_level"[value] -> <Gbnf_parser__GrammarFunctor.111>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.96>;
              "print_concrete"[value] -> <Gbnf_parser__GrammarFunctor.142>;
              "pseudo"[value] -> <Gbnf_parser__GrammarFunctor.102>;
              "real"[value] -> <Gbnf_parser__GrammarFunctor.104>;
              "sharp"[value] -> <Gbnf_parser__GrammarFunctor.100>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.83>;
              "t2i"[value] -> <Gbnf_parser__GrammarFunctor.84>;
              "token_properties"[value] -> <Gbnf_parser__GrammarFunctor.108>;
              "tokens_without_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.134>;
              "unquoted_alias"[value] -> <Gbnf_parser__GrammarFunctor.141>;
              })(
             {
              })
             . "mem"[value];
           "print"[value] -> <Gbnf_parser__GrammarFunctor.182>;
           "property"[type] -> <Gbnf_parser__GrammarFunctor.186>;
           "remove"[value] ->
             CU Gbnf_parser . "BoundedBitSet"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.181>
              "Word"[module] ->
                Abs<Gbnf_parser__GrammarFunctor.180>
                   (X/2195,
                    {
                     "append"[value] -> <Gbnf_parser__GrammarFunctor.154>;
                     "compare"[value] -> <Gbnf_parser__GrammarFunctor.177>;
                     "decode"[value] -> <Gbnf_parser__GrammarFunctor.148>;
                     "elements"[value] -> <Gbnf_parser__GrammarFunctor.169>;
                     "encode"[value] -> <Gbnf_parser__GrammarFunctor.147>;
                     "epsilon"[value] -> <Gbnf_parser__GrammarFunctor.151>;
                     "first"[value] -> <Gbnf_parser__GrammarFunctor.161>;
                     "length"[value] -> <Gbnf_parser__GrammarFunctor.159>;
                     "print"[value] -> <Gbnf_parser__GrammarFunctor.172>;
                     "singleton"[value] -> <Gbnf_parser__GrammarFunctor.152>;
                     "verbose"[value] -> <Gbnf_parser__GrammarFunctor.149>;
                     "word"[type] -> <Gbnf_parser__GrammarFunctor.150>;
                     });
              "alias"[value] -> <Gbnf_parser__GrammarFunctor.139>;
              "associativity"[value] -> <Gbnf_parser__GrammarFunctor.113>;
              "attributes"[value] -> <Gbnf_parser__GrammarFunctor.144>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.88>;
              "eof"[value] -> <Gbnf_parser__GrammarFunctor.143>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.89>;
              "error"[value] -> <Gbnf_parser__GrammarFunctor.101>;
              "every_token_has_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.138>;
              "fold"[value] -> <Gbnf_parser__GrammarFunctor.121>;
              "foldx"[value] -> <Gbnf_parser__GrammarFunctor.126>;
              "i2t"[value] -> <Gbnf_parser__GrammarFunctor.86>;
              "init"[value] -> <Gbnf_parser__GrammarFunctor.117>;
              "iter"[value] -> <Gbnf_parser__GrammarFunctor.119>;
              "iter_real"[value] -> <Gbnf_parser__GrammarFunctor.131>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.98>;
              "map"[value] -> <Gbnf_parser__GrammarFunctor.124>;
              "mapx"[value] -> <Gbnf_parser__GrammarFunctor.129>;
              "n"[value] -> <Gbnf_parser__GrammarFunctor.92>;
              "name"[value] -> <Gbnf_parser__GrammarFunctor.93>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.106>;
              "ocamltype"[value] -> <Gbnf_parser__GrammarFunctor.115>;
              "precedence_level"[value] -> <Gbnf_parser__GrammarFunctor.111>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.96>;
              "print_concrete"[value] -> <Gbnf_parser__GrammarFunctor.142>;
              "pseudo"[value] -> <Gbnf_parser__GrammarFunctor.102>;
              "real"[value] -> <Gbnf_parser__GrammarFunctor.104>;
              "sharp"[value] -> <Gbnf_parser__GrammarFunctor.100>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.83>;
              "t2i"[value] -> <Gbnf_parser__GrammarFunctor.84>;
              "token_properties"[value] -> <Gbnf_parser__GrammarFunctor.108>;
              "tokens_without_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.134>;
              "unquoted_alias"[value] -> <Gbnf_parser__GrammarFunctor.141>;
              })(
             {
              })
             . "remove"[value];
           "singleton"[value] ->
             CU Gbnf_parser . "BoundedBitSet"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.181>
              "Word"[module] ->
                Abs<Gbnf_parser__GrammarFunctor.180>
                   (X/2195,
                    {
                     "append"[value] -> <Gbnf_parser__GrammarFunctor.154>;
                     "compare"[value] -> <Gbnf_parser__GrammarFunctor.177>;
                     "decode"[value] -> <Gbnf_parser__GrammarFunctor.148>;
                     "elements"[value] -> <Gbnf_parser__GrammarFunctor.169>;
                     "encode"[value] -> <Gbnf_parser__GrammarFunctor.147>;
                     "epsilon"[value] -> <Gbnf_parser__GrammarFunctor.151>;
                     "first"[value] -> <Gbnf_parser__GrammarFunctor.161>;
                     "length"[value] -> <Gbnf_parser__GrammarFunctor.159>;
                     "print"[value] -> <Gbnf_parser__GrammarFunctor.172>;
                     "singleton"[value] -> <Gbnf_parser__GrammarFunctor.152>;
                     "verbose"[value] -> <Gbnf_parser__GrammarFunctor.149>;
                     "word"[type] -> <Gbnf_parser__GrammarFunctor.150>;
                     });
              "alias"[value] -> <Gbnf_parser__GrammarFunctor.139>;
              "associativity"[value] -> <Gbnf_parser__GrammarFunctor.113>;
              "attributes"[value] -> <Gbnf_parser__GrammarFunctor.144>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.88>;
              "eof"[value] -> <Gbnf_parser__GrammarFunctor.143>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.89>;
              "error"[value] -> <Gbnf_parser__GrammarFunctor.101>;
              "every_token_has_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.138>;
              "fold"[value] -> <Gbnf_parser__GrammarFunctor.121>;
              "foldx"[value] -> <Gbnf_parser__GrammarFunctor.126>;
              "i2t"[value] -> <Gbnf_parser__GrammarFunctor.86>;
              "init"[value] -> <Gbnf_parser__GrammarFunctor.117>;
              "iter"[value] -> <Gbnf_parser__GrammarFunctor.119>;
              "iter_real"[value] -> <Gbnf_parser__GrammarFunctor.131>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.98>;
              "map"[value] -> <Gbnf_parser__GrammarFunctor.124>;
              "mapx"[value] -> <Gbnf_parser__GrammarFunctor.129>;
              "n"[value] -> <Gbnf_parser__GrammarFunctor.92>;
              "name"[value] -> <Gbnf_parser__GrammarFunctor.93>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.106>;
              "ocamltype"[value] -> <Gbnf_parser__GrammarFunctor.115>;
              "precedence_level"[value] -> <Gbnf_parser__GrammarFunctor.111>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.96>;
              "print_concrete"[value] -> <Gbnf_parser__GrammarFunctor.142>;
              "pseudo"[value] -> <Gbnf_parser__GrammarFunctor.102>;
              "real"[value] -> <Gbnf_parser__GrammarFunctor.104>;
              "sharp"[value] -> <Gbnf_parser__GrammarFunctor.100>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.83>;
              "t2i"[value] -> <Gbnf_parser__GrammarFunctor.84>;
              "token_properties"[value] -> <Gbnf_parser__GrammarFunctor.108>;
              "tokens_without_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.134>;
              "unquoted_alias"[value] -> <Gbnf_parser__GrammarFunctor.141>;
              })(
             {
              })
             . "singleton"[value];
           "subset"[value] ->
             CU Gbnf_parser . "BoundedBitSet"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.181>
              "Word"[module] ->
                Abs<Gbnf_parser__GrammarFunctor.180>
                   (X/2195,
                    {
                     "append"[value] -> <Gbnf_parser__GrammarFunctor.154>;
                     "compare"[value] -> <Gbnf_parser__GrammarFunctor.177>;
                     "decode"[value] -> <Gbnf_parser__GrammarFunctor.148>;
                     "elements"[value] -> <Gbnf_parser__GrammarFunctor.169>;
                     "encode"[value] -> <Gbnf_parser__GrammarFunctor.147>;
                     "epsilon"[value] -> <Gbnf_parser__GrammarFunctor.151>;
                     "first"[value] -> <Gbnf_parser__GrammarFunctor.161>;
                     "length"[value] -> <Gbnf_parser__GrammarFunctor.159>;
                     "print"[value] -> <Gbnf_parser__GrammarFunctor.172>;
                     "singleton"[value] -> <Gbnf_parser__GrammarFunctor.152>;
                     "verbose"[value] -> <Gbnf_parser__GrammarFunctor.149>;
                     "word"[type] -> <Gbnf_parser__GrammarFunctor.150>;
                     });
              "alias"[value] -> <Gbnf_parser__GrammarFunctor.139>;
              "associativity"[value] -> <Gbnf_parser__GrammarFunctor.113>;
              "attributes"[value] -> <Gbnf_parser__GrammarFunctor.144>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.88>;
              "eof"[value] -> <Gbnf_parser__GrammarFunctor.143>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.89>;
              "error"[value] -> <Gbnf_parser__GrammarFunctor.101>;
              "every_token_has_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.138>;
              "fold"[value] -> <Gbnf_parser__GrammarFunctor.121>;
              "foldx"[value] -> <Gbnf_parser__GrammarFunctor.126>;
              "i2t"[value] -> <Gbnf_parser__GrammarFunctor.86>;
              "init"[value] -> <Gbnf_parser__GrammarFunctor.117>;
              "iter"[value] -> <Gbnf_parser__GrammarFunctor.119>;
              "iter_real"[value] -> <Gbnf_parser__GrammarFunctor.131>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.98>;
              "map"[value] -> <Gbnf_parser__GrammarFunctor.124>;
              "mapx"[value] -> <Gbnf_parser__GrammarFunctor.129>;
              "n"[value] -> <Gbnf_parser__GrammarFunctor.92>;
              "name"[value] -> <Gbnf_parser__GrammarFunctor.93>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.106>;
              "ocamltype"[value] -> <Gbnf_parser__GrammarFunctor.115>;
              "precedence_level"[value] -> <Gbnf_parser__GrammarFunctor.111>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.96>;
              "print_concrete"[value] -> <Gbnf_parser__GrammarFunctor.142>;
              "pseudo"[value] -> <Gbnf_parser__GrammarFunctor.102>;
              "real"[value] -> <Gbnf_parser__GrammarFunctor.104>;
              "sharp"[value] -> <Gbnf_parser__GrammarFunctor.100>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.83>;
              "t2i"[value] -> <Gbnf_parser__GrammarFunctor.84>;
              "token_properties"[value] -> <Gbnf_parser__GrammarFunctor.108>;
              "tokens_without_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.134>;
              "unquoted_alias"[value] -> <Gbnf_parser__GrammarFunctor.141>;
              })(
             {
              })
             . "subset"[value];
           "t"[type] ->
             CU Gbnf_parser . "BoundedBitSet"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.181>
              "Word"[module] ->
                Abs<Gbnf_parser__GrammarFunctor.180>
                   (X/2195,
                    {
                     "append"[value] -> <Gbnf_parser__GrammarFunctor.154>;
                     "compare"[value] -> <Gbnf_parser__GrammarFunctor.177>;
                     "decode"[value] -> <Gbnf_parser__GrammarFunctor.148>;
                     "elements"[value] -> <Gbnf_parser__GrammarFunctor.169>;
                     "encode"[value] -> <Gbnf_parser__GrammarFunctor.147>;
                     "epsilon"[value] -> <Gbnf_parser__GrammarFunctor.151>;
                     "first"[value] -> <Gbnf_parser__GrammarFunctor.161>;
                     "length"[value] -> <Gbnf_parser__GrammarFunctor.159>;
                     "print"[value] -> <Gbnf_parser__GrammarFunctor.172>;
                     "singleton"[value] -> <Gbnf_parser__GrammarFunctor.152>;
                     "verbose"[value] -> <Gbnf_parser__GrammarFunctor.149>;
                     "word"[type] -> <Gbnf_parser__GrammarFunctor.150>;
                     });
              "alias"[value] -> <Gbnf_parser__GrammarFunctor.139>;
              "associativity"[value] -> <Gbnf_parser__GrammarFunctor.113>;
              "attributes"[value] -> <Gbnf_parser__GrammarFunctor.144>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.88>;
              "eof"[value] -> <Gbnf_parser__GrammarFunctor.143>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.89>;
              "error"[value] -> <Gbnf_parser__GrammarFunctor.101>;
              "every_token_has_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.138>;
              "fold"[value] -> <Gbnf_parser__GrammarFunctor.121>;
              "foldx"[value] -> <Gbnf_parser__GrammarFunctor.126>;
              "i2t"[value] -> <Gbnf_parser__GrammarFunctor.86>;
              "init"[value] -> <Gbnf_parser__GrammarFunctor.117>;
              "iter"[value] -> <Gbnf_parser__GrammarFunctor.119>;
              "iter_real"[value] -> <Gbnf_parser__GrammarFunctor.131>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.98>;
              "map"[value] -> <Gbnf_parser__GrammarFunctor.124>;
              "mapx"[value] -> <Gbnf_parser__GrammarFunctor.129>;
              "n"[value] -> <Gbnf_parser__GrammarFunctor.92>;
              "name"[value] -> <Gbnf_parser__GrammarFunctor.93>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.106>;
              "ocamltype"[value] -> <Gbnf_parser__GrammarFunctor.115>;
              "precedence_level"[value] -> <Gbnf_parser__GrammarFunctor.111>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.96>;
              "print_concrete"[value] -> <Gbnf_parser__GrammarFunctor.142>;
              "pseudo"[value] -> <Gbnf_parser__GrammarFunctor.102>;
              "real"[value] -> <Gbnf_parser__GrammarFunctor.104>;
              "sharp"[value] -> <Gbnf_parser__GrammarFunctor.100>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.83>;
              "t2i"[value] -> <Gbnf_parser__GrammarFunctor.84>;
              "token_properties"[value] -> <Gbnf_parser__GrammarFunctor.108>;
              "tokens_without_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.134>;
              "unquoted_alias"[value] -> <Gbnf_parser__GrammarFunctor.141>;
              })(
             {
              })
             . "t"[type];
           "union"[value] ->
             CU Gbnf_parser . "BoundedBitSet"[module] . "Make"[module](
             {<Gbnf_parser__GrammarFunctor.181>
              "Word"[module] ->
                Abs<Gbnf_parser__GrammarFunctor.180>
                   (X/2195,
                    {
                     "append"[value] -> <Gbnf_parser__GrammarFunctor.154>;
                     "compare"[value] -> <Gbnf_parser__GrammarFunctor.177>;
                     "decode"[value] -> <Gbnf_parser__GrammarFunctor.148>;
                     "elements"[value] -> <Gbnf_parser__GrammarFunctor.169>;
                     "encode"[value] -> <Gbnf_parser__GrammarFunctor.147>;
                     "epsilon"[value] -> <Gbnf_parser__GrammarFunctor.151>;
                     "first"[value] -> <Gbnf_parser__GrammarFunctor.161>;
                     "length"[value] -> <Gbnf_parser__GrammarFunctor.159>;
                     "print"[value] -> <Gbnf_parser__GrammarFunctor.172>;
                     "singleton"[value] -> <Gbnf_parser__GrammarFunctor.152>;
                     "verbose"[value] -> <Gbnf_parser__GrammarFunctor.149>;
                     "word"[type] -> <Gbnf_parser__GrammarFunctor.150>;
                     });
              "alias"[value] -> <Gbnf_parser__GrammarFunctor.139>;
              "associativity"[value] -> <Gbnf_parser__GrammarFunctor.113>;
              "attributes"[value] -> <Gbnf_parser__GrammarFunctor.144>;
              "compare"[value] -> <Gbnf_parser__GrammarFunctor.88>;
              "eof"[value] -> <Gbnf_parser__GrammarFunctor.143>;
              "equal"[value] -> <Gbnf_parser__GrammarFunctor.89>;
              "error"[value] -> <Gbnf_parser__GrammarFunctor.101>;
              "every_token_has_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.138>;
              "fold"[value] -> <Gbnf_parser__GrammarFunctor.121>;
              "foldx"[value] -> <Gbnf_parser__GrammarFunctor.126>;
              "i2t"[value] -> <Gbnf_parser__GrammarFunctor.86>;
              "init"[value] -> <Gbnf_parser__GrammarFunctor.117>;
              "iter"[value] -> <Gbnf_parser__GrammarFunctor.119>;
              "iter_real"[value] -> <Gbnf_parser__GrammarFunctor.131>;
              "lookup"[value] -> <Gbnf_parser__GrammarFunctor.98>;
              "map"[value] -> <Gbnf_parser__GrammarFunctor.124>;
              "mapx"[value] -> <Gbnf_parser__GrammarFunctor.129>;
              "n"[value] -> <Gbnf_parser__GrammarFunctor.92>;
              "name"[value] -> <Gbnf_parser__GrammarFunctor.93>;
              "non_error"[value] -> <Gbnf_parser__GrammarFunctor.106>;
              "ocamltype"[value] -> <Gbnf_parser__GrammarFunctor.115>;
              "precedence_level"[value] -> <Gbnf_parser__GrammarFunctor.111>;
              "print"[value] -> <Gbnf_parser__GrammarFunctor.96>;
              "print_concrete"[value] -> <Gbnf_parser__GrammarFunctor.142>;
              "pseudo"[value] -> <Gbnf_parser__GrammarFunctor.102>;
              "real"[value] -> <Gbnf_parser__GrammarFunctor.104>;
              "sharp"[value] -> <Gbnf_parser__GrammarFunctor.100>;
              "t"[type] -> <Gbnf_parser__GrammarFunctor.83>;
              "t2i"[value] -> <Gbnf_parser__GrammarFunctor.84>;
              "token_properties"[value] -> <Gbnf_parser__GrammarFunctor.108>;
              "tokens_without_an_alias"[value] ->
                <Gbnf_parser__GrammarFunctor.134>;
              "unquoted_alias"[value] -> <Gbnf_parser__GrammarFunctor.141>;
              })(
             {
              })
             . "union"[value];
           "universe"[value] -> <Gbnf_parser__GrammarFunctor.185>;
           };
        "TokPrecedence"[module] ->
          {<Gbnf_parser__GrammarFunctor.25>
           "diagnostics"[value] -> <Gbnf_parser__GrammarFunctor.20>;
           "ever_useful"[value] -> <Gbnf_parser__GrammarFunctor.11>;
           "leveli"[value] -> <Gbnf_parser__GrammarFunctor.17>;
           "levelip"[value] -> <Gbnf_parser__GrammarFunctor.14>;
           "use"[value] -> <Gbnf_parser__GrammarFunctor.12>;
           };
        "convert"[value] -> <Gbnf_parser__GrammarFunctor.619>;
        "explain"[value] -> <Gbnf_parser__GrammarFunctor.606>;
        "explanation"[type] -> <Gbnf_parser__GrammarFunctor.602>;
        "follow"[value] -> <Gbnf_parser__GrammarFunctor.572>;
        "generates_nonempty_word"[value] ->
          <Gbnf_parser__GrammarFunctor.507>;
        "grammar_uses_error_token"[value] ->
          <Gbnf_parser__GrammarFunctor.421>;
        "index"[value] -> <Gbnf_parser__GrammarFunctor.3>;
        "sfirst"[value] -> <Gbnf_parser__GrammarFunctor.588>;
        "sfollow"[value] -> <Gbnf_parser__GrammarFunctor.596>;
        "tfollow"[value] -> <Gbnf_parser__GrammarFunctor.586>;
        "unbounded"[value] -> <Gbnf_parser__GrammarFunctor.538>;
        });
 }

(setglobal Gbnf_parser__GrammarFunctor!
  (let
    (*match*/13839 =
       (after Gbnf_parser__GrammarFunctor lib/grammarFunctor.ml(14)<ghost>:976-976
         (apply (field_imm 3 (global Ppx_module_timer_runtime!))
           #"Gbnf_parser__GrammarFunctor"))
     *match*/13837 =
       (after Gbnf_parser__GrammarFunctor lib/grammarFunctor.ml(14)<ghost>:976-976
         (apply
           (field_imm 0
             (field_imm 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
           "gbnf_parser"))
     *match*/13835 =
       (after Gbnf_parser__GrammarFunctor lib/grammarFunctor.ml(14)<ghost>:976-976
         (apply (field_imm 0 (field_imm 5 (global Expect_test_collector!)))
           "lib/grammarFunctor.ml"))
     *match*/13833 =
       (after Gbnf_parser__GrammarFunctor lib/grammarFunctor.ml(14)<ghost>:976-976
         (apply (field_imm 4 (global Ppx_inline_test_lib!)) "gbnf_parser"
           "grammarFunctor.ml"))
     Make/5132 =
       (function G/13823 */13822 is_a_functor
         (let
           (G/1226 =a G/13823
            */13597 =a */13822
            index/1227 =
              (function strings/1229
                (funct-body Gbnf_parser__GrammarFunctor.Make.index lib/grammarFunctor.ml(38)<ghost>:1634-1864
                  (before Gbnf_parser__GrammarFunctor.Make.index lib/grammarFunctor.ml(39):1701-1864
                    (let
                      (name/1278 =
                         (after Gbnf_parser__GrammarFunctor.Make.index lib/grammarFunctor.ml(39):1712-1733
                           (apply (field_imm 9 (global Stdlib__Array!))
                             strings/1229))
                       *match*/13601 =
                         (after Gbnf_parser__GrammarFunctor.Make.index lib/grammarFunctor.ml(40):1749-1846
                           (apply (field_imm 25 (global Stdlib__List!))
                             (function param/1607 s/1397
                               (funct-body Gbnf_parser__GrammarFunctor.Make.index.(fun) lib/grammarFunctor.ml(40):1764-1817
                                 (let
                                   (map/1396 =a (field_imm 1 param/1607)
                                    n/1395 =a (field_imm 0 param/1607))
                                   (before Gbnf_parser__GrammarFunctor.Make.index.(fun) lib/grammarFunctor.ml(41):1787-1813
                                     (makeblock 0 (int,*) (+ n/1395 1)
                                       (after Gbnf_parser__GrammarFunctor.Make.index.(fun) lib/grammarFunctor.ml(41):1792-1813
                                         (apply
                                           (field_imm 1
                                             (global Gbnf_parser__StringMap!))
                                           s/1397 n/1395 map/1396)))))))
                             (makeblock 0 (int,*) 0
                               (field_imm 0 (global Gbnf_parser__StringMap!)))
                             strings/1229))
                       map/1280 =a (field_imm 1 *match*/13601)
                       n/1279 =a (field_imm 0 *match*/13601))
                      (before Gbnf_parser__GrammarFunctor.Make.index lib/grammarFunctor.ml(43):1852-1864
                        (makeblock 0 (int,*,*) n/1279 name/1278 map/1280))))))
            TokPrecedence/1946 =
              (let
                (ever_useful/1654 =
                   (makemutable 0
                     (field_imm 0 (global Gbnf_parser__StringSet!)))
                 use/1655 =
                   (function id/1657 : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.TokPrecedence.use lib/grammarFunctor.ml(57)<ghost>:2295-2348
                       (before Gbnf_parser__GrammarFunctor.Make.TokPrecedence.use lib/grammarFunctor.ml(58):2304-2348
                         (setfield_ptr 0 ever_useful/1654
                           (after Gbnf_parser__GrammarFunctor.Make.TokPrecedence.use lib/grammarFunctor.ml(58):2319-2348
                             (apply
                               (field_imm 1 (global Gbnf_parser__StringSet!))
                               id/1657 (field_mut 0 ever_useful/1654)))))))
                 levelip/1798 =
                   (function id/1800 properties/1801
                     (funct-body Gbnf_parser__GrammarFunctor.Make.TokPrecedence.levelip lib/grammarFunctor.ml(68)<ghost>:2803-2862
                       (before Gbnf_parser__GrammarFunctor.Make.TokPrecedence.levelip lib/grammarFunctor.ml(69):2823-2862
                         (makeblock 0
                           (makemutable 246
                             (function param/13602
                               (after Gbnf_parser__GrammarFunctor.Make.TokPrecedence.levelip lib/grammarFunctor.ml(69):2828-2836
                                 (apply use/1655 id/1800))))
                           (field_mut 6 properties/1801)))))
                 leveli/1802 =
                   (function id/1804
                     (funct-body Gbnf_parser__GrammarFunctor.Make.TokPrecedence.leveli lib/grammarFunctor.ml(71)<ghost>:2877-3086
                       (before Gbnf_parser__GrammarFunctor.Make.TokPrecedence.leveli lib/grammarFunctor.ml(72):2886-3086
                         (let
                           (properties/1805 =
                              (try
                                (after Gbnf_parser__GrammarFunctor.Make.TokPrecedence.leveli lib/grammarFunctor.ml(74):2921-2953
                                  (apply
                                    (field_imm 15
                                      (global Gbnf_parser__StringMap!))
                                    id/1804
                                    (field_imm 5 (field_imm 0 G/1226))))
                               with exn/13603
                                (catch
                                  (if
                                    (== exn/13603
                                      (field_imm 7 (global Stdlib!)))
                                    (before Gbnf_parser__GrammarFunctor.Make.TokPrecedence.leveli lib/grammarFunctor.ml(76):2986-2998
                                      (raise
                                        (after Gbnf_parser__GrammarFunctor.Make.TokPrecedence.leveli lib/grammarFunctor.ml(76):2986-2998
                                          (makeblock 0
                                            (global Assert_failure/28!)
                                            [0: "lib/grammarFunctor.ml" 76 8]))))
                                    (exit 4))
                                 with (4) (reraise exn/13603))))
                           (before Gbnf_parser__GrammarFunctor.Make.TokPrecedence.leveli lib/grammarFunctor.ml(78):3065-3086
                             (after Gbnf_parser__GrammarFunctor.Make.TokPrecedence.leveli lib/grammarFunctor.ml(78):3065-3086
                               (apply levelip/1798 id/1804 properties/1805)))))))
                 diagnostics/1863 =
                   (function param/1945[int] : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.TokPrecedence.diagnostics lib/grammarFunctor.ml(84)<ghost>:3310-3696
                       (before Gbnf_parser__GrammarFunctor.Make.TokPrecedence.diagnostics lib/grammarFunctor.ml(85):3319-3696
                         (after Gbnf_parser__GrammarFunctor.Make.TokPrecedence.diagnostics lib/grammarFunctor.ml(85):3319-3696
                           (apply
                             (field_imm 21 (global Gbnf_parser__StringMap!))
                             (function id/1865 properties/1866 : int
                               (funct-body Gbnf_parser__GrammarFunctor.Make.TokPrecedence.diagnostics.(fun) lib/grammarFunctor.ml(85):3334-3681
                                 (before Gbnf_parser__GrammarFunctor.Make.TokPrecedence.diagnostics.(fun) lib/grammarFunctor.ml(86):3362-3675
                                   (if
                                     (not
                                       (after Gbnf_parser__GrammarFunctor.Make.TokPrecedence.diagnostics.(fun) lib/grammarFunctor.ml(86):3369-3400
                                         (apply
                                           (field_imm 29
                                             (global Gbnf_parser__StringSet!))
                                           id/1865
                                           (field_mut 0 ever_useful/1654))))
                                     (before Gbnf_parser__GrammarFunctor.Make.TokPrecedence.diagnostics.(fun) lib/grammarFunctor.ml(87):3414-3675
                                       (let
                                         (*match*/13604 =
                                            (field_mut 6 properties/1866))
                                         (if *match*/13604
                                           (let
                                             (pos2/1868 =a
                                                (field_imm 3 *match*/13604)
                                              pos1/1867 =a
                                                (field_imm 2 *match*/13604)
                                              *match*/13606 =a
                                                (field_imm 1 *match*/13604)
                                              *match*/13605 =a
                                                (field_imm 0 *match*/13604))
                                             (before Gbnf_parser__GrammarFunctor.Make.TokPrecedence.diagnostics.(fun) lib/grammarFunctor.ml(91):3558-3675
                                               (after Gbnf_parser__GrammarFunctor.Make.TokPrecedence.diagnostics.(fun) lib/grammarFunctor.ml(91):3558-3675
                                                 (apply
                                                   (field_imm 7
                                                     (global Gbnf_parser__Error!))
                                                   (makeblock 0
                                                     (after Gbnf_parser__GrammarFunctor.Make.TokPrecedence.diagnostics.(fun) lib/grammarFunctor.ml(91):3573-3602
                                                       (apply
                                                         (field_imm 18
                                                           (global Gbnf_parser__Positions!))
                                                         (makeblock 0
                                                           pos1/1867
                                                           pos2/1868)))
                                                     0)
                                                   [0:
                                                    [11:
                                                     "the precedence level assigned to "
                                                     [2:
                                                      0
                                                      [11:
                                                       " is never useful." 0]]]
                                                    "the precedence level assigned to %s is never useful."]
                                                   id/1865))))
                                           (before Gbnf_parser__GrammarFunctor.Make.TokPrecedence.diagnostics.(fun) lib/grammarFunctor.ml(89):3495-3497
                                             0))))
                                     0))))
                             (field_imm 5 (field_imm 0 G/1226))))))))
                (pseudo Gbnf_parser__GrammarFunctor.Make.TokPrecedence lib/grammarFunctor.ml(48):2028-3701
                  (makeblock 0 ever_useful/1654 use/1655 levelip/1798
                    leveli/1802 diagnostics/1863)))
            Nonterminal/2057 =
              (let
                (n2i/1948 =
                   (function i/1950
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.n2i lib/grammarFunctor.ml(104)<ghost>:3858-3863
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.n2i lib/grammarFunctor.ml(104):3862-3863
                         i/1950)))
                 equal/1951 =
                   (function nt1/1953[int] nt2/1954[int] : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.equal lib/grammarFunctor.ml(106)<ghost>:3877-3912
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.equal lib/grammarFunctor.ml(107):3903-3912
                         (== nt1/1953 nt2/1954))))
                 compare/1955 =
                   (function prim/13609 prim/13608 stub
                     (- prim/13609 prim/13608))
                 new_start_nonterminals/1956 =
                   (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.new_start_nonterminals lib/grammarFunctor.ml(116):4138-4217
                     (apply (field_imm 23 (global Gbnf_parser__StringSet!))
                       (function symbol/1957 ss/1958
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.new_start_nonterminals.(fun) lib/grammarFunctor.ml(116):4153-4192
                           (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.new_start_nonterminals.(fun) lib/grammarFunctor.ml(116):4171-4191
                             (makeblock 0
                               (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.new_start_nonterminals.(fun) lib/grammarFunctor.ml(116):4171-4185
                                 (apply (field_imm 27 (global Stdlib!))
                                   symbol/1957 "'"))
                               ss/1958))))
                       (field_imm 3 (field_imm 0 G/1226)) 0))
                 original_nonterminals/1959 =
                   (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.original_nonterminals lib/grammarFunctor.ml(119):4253-4273
                     (apply (field_imm 8 (global Gbnf_parser__BasicSyntax!))
                       (field_imm 0 G/1226)))
                 start/1960 =[int]
                   (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.start lib/grammarFunctor.ml(122):4293-4327
                     (apply (field_imm 0 (global Stdlib__List!))
                       new_start_nonterminals/1956))
                 *match*/13624 =
                   (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.n lib/grammarFunctor.ml(125):4399-4453
                     (apply index/1227
                       (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.n lib/grammarFunctor.ml(125):4405-4453
                         (apply (field_imm 36 (global Stdlib!))
                           new_start_nonterminals/1956
                           original_nonterminals/1959))))
                 map/1963 =a (field_imm 2 *match*/13624)
                 name/1962 =a (field_imm 1 *match*/13624)
                 n/1961 =a (field_imm 0 *match*/13624)
                 is_internal_start/1964 =
                   (function nt/1966[int] : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.is_internal_start lib/grammarFunctor.ml(135)<ghost>:4726-4745
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.is_internal_start lib/grammarFunctor.ml(136):4735-4745
                         (< nt/1966 start/1960))))
                 is_user_start/1967 =
                   (function nt/1969[int] : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.is_user_start lib/grammarFunctor.ml(138)<ghost>:4767-4821
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.is_user_start lib/grammarFunctor.ml(139):4776-4821
                         (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.is_user_start lib/grammarFunctor.ml(139):4776-4821
                           (apply
                             (field_imm 29 (global Gbnf_parser__StringSet!))
                             (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.is_user_start lib/grammarFunctor.ml(139):4790-4799
                               (array.get[addr] name/1962 nt/1969))
                             (field_imm 3 (field_imm 0 G/1226)))))))
                 print/1970 =
                   (function normalize/1971[int] nt/1972[int]
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.print lib/grammarFunctor.ml(141)<ghost>:4835-4927
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.print lib/grammarFunctor.ml(142):4854-4927
                         (if normalize/1971
                           (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.print lib/grammarFunctor.ml(143):4878-4902
                             (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.print lib/grammarFunctor.ml(143):4878-4902
                               (apply
                                 (field_imm 21 (global Gbnf_parser__Misc!))
                                 (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.print lib/grammarFunctor.ml(143):4893-4902
                                   (array.get[addr] name/1962 nt/1972)))))
                           (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.print lib/grammarFunctor.ml(145):4918-4927
                             (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.print lib/grammarFunctor.ml(145):4918-4927
                               (array.get[addr] name/1962 nt/1972)))))))
                 lookup/2014 =
                   (function name/2016 : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.lookup lib/grammarFunctor.ml(147)<ghost>:4942-4976
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.lookup lib/grammarFunctor.ml(148):4953-4976
                         (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.lookup lib/grammarFunctor.ml(148):4953-4976
                           (apply
                             (field_imm 15 (global Gbnf_parser__StringMap!))
                             name/2016 map/1963)))))
                 positions/2017 =
                   (function nt/2019[int]
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.positions lib/grammarFunctor.ml(150)<ghost>:4994-5060
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.positions lib/grammarFunctor.ml(151):5003-5060
                         (field_imm 1
                           (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.positions lib/grammarFunctor.ml(151):5003-5050
                             (apply
                               (field_imm 15
                                 (global Gbnf_parser__StringMap!))
                               (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.positions lib/grammarFunctor.ml(151):5019-5035
                                 (apply print/1970 0 nt/2019))
                               (field_imm 8 (field_imm 0 G/1226))))))))
                 init/2020 =
                   (function f/2022
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.init lib/grammarFunctor.ml(153)<ghost>:5073-5095
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.init lib/grammarFunctor.ml(154):5081-5095
                         (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.init lib/grammarFunctor.ml(154):5081-5095
                           (apply (field_imm 0 (global Stdlib__Array!))
                             n/1961 f/2022)))))
                 iter/2023 =
                   (function f/2024 : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.iter lib/grammarFunctor.ml(156)<ghost>:5108-5130
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.iter lib/grammarFunctor.ml(157):5116-5130
                         (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.iter lib/grammarFunctor.ml(157):5116-5130
                           (apply (field_imm 11 (global Gbnf_parser__Misc!))
                             n/1961 f/2024)))))
                 fold/2025 =
                   (function f/2027 accu/2028
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.fold lib/grammarFunctor.ml(159)<ghost>:5143-5175
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.fold lib/grammarFunctor.ml(160):5156-5175
                         (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.fold lib/grammarFunctor.ml(160):5156-5175
                           (apply (field_imm 13 (global Gbnf_parser__Misc!))
                             n/1961 f/2027 accu/2028)))))
                 map/2029 =
                   (function f/2030
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.map lib/grammarFunctor.ml(162)<ghost>:5187-5208
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.map lib/grammarFunctor.ml(163):5195-5208
                         (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.map lib/grammarFunctor.ml(163):5195-5208
                           (apply (field_imm 16 (global Gbnf_parser__Misc!))
                             n/1961 f/2030)))))
                 iterx/2031 =
                   (function f/2033 : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.iterx lib/grammarFunctor.ml(165)<ghost>:5222-5276
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.iterx lib/grammarFunctor.ml(166):5230-5276
                         (for nt/2034 start/1960 to (- n/1961 1)
                           (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.iterx lib/grammarFunctor.ml(167):5263-5267
                             (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.iterx lib/grammarFunctor.ml(167):5263-5267
                               (apply f/2033 nt/2034)))))))
                 foldx/2035 =
                   (function f/2037 accu/2038
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.foldx lib/grammarFunctor.ml(170)<ghost>:5290-5329
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.foldx lib/grammarFunctor.ml(171):5303-5329
                         (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.foldx lib/grammarFunctor.ml(171):5303-5329
                           (apply (field_imm 12 (global Gbnf_parser__Misc!))
                             start/1960 n/1961 f/2037 accu/2038)))))
                 ocamltype/2039 =
                   (function nt/2041[int]
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.ocamltype lib/grammarFunctor.ml(173)<ghost>:5347-5492
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.ocamltype lib/grammarFunctor.ml(174):5356-5492
                         (seq
                           (if
                             (not
                               (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.ocamltype lib/grammarFunctor.ml(174):5368-5390
                                 (apply is_internal_start/1964 nt/2041)))
                             0
                             (raise
                               (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.ocamltype lib/grammarFunctor.ml(174):5356-5391
                                 (makeblock 0 (global Assert_failure/28!)
                                   [0: "lib/grammarFunctor.ml" 174 4]))))
                           (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.ocamltype lib/grammarFunctor.ml(175):5397-5492
                             (try
                               (makeblock 0
                                 (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.ocamltype lib/grammarFunctor.ml(176):5412-5459
                                   (apply
                                     (field_imm 15
                                       (global Gbnf_parser__StringMap!))
                                     (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.ocamltype lib/grammarFunctor.ml(176):5428-5444
                                       (apply print/1970 0 nt/2041))
                                     (field_imm 4 (field_imm 0 G/1226)))))
                              with exn/13610
                               (catch
                                 (if
                                   (== exn/13610
                                     (field_imm 7 (global Stdlib!)))
                                   (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.ocamltype lib/grammarFunctor.ml(178):5488-5492
                                     0)
                                   (exit 8))
                                with (8) (reraise exn/13610))))))))
                 ocamltype_of_start_symbol/2042 =
                   (function nt/2043[int]
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.ocamltype_of_start_symbol lib/grammarFunctor.ml(180)<ghost>:5526-5668
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.ocamltype_of_start_symbol lib/grammarFunctor.ml(181):5535-5668
                         (let
                           (*match*/13611 =
                              (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.ocamltype_of_start_symbol lib/grammarFunctor.ml(181):5541-5553
                                (apply ocamltype/2039 nt/2043)))
                           (if *match*/13611
                             (let (typ/2044 =a (field_imm 0 *match*/13611))
                               (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.ocamltype_of_start_symbol lib/grammarFunctor.ml(183):5585-5588
                                 typ/2044))
                             (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.ocamltype_of_start_symbol lib/grammarFunctor.ml(186):5656-5668
                               (raise
                                 (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.ocamltype_of_start_symbol lib/grammarFunctor.ml(186):5656-5668
                                   (makeblock 0 (global Assert_failure/28!)
                                     [0: "lib/grammarFunctor.ml" 186 8])))))))))
                 tabulate/2047 =
                   (function f/2049
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.tabulate lib/grammarFunctor.ml(188)<ghost>:5685-5719
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.tabulate lib/grammarFunctor.ml(189):5693-5719
                         (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.tabulate lib/grammarFunctor.ml(189):5693-5719
                           (apply
                             (function prim/13613 prim/13612 stub
                               (array.get[gen] prim/13613 prim/13612))
                             (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.tabulate lib/grammarFunctor.ml(189):5703-5719
                               (apply (field_imm 0 (global Stdlib__Array!))
                                 n/1961 f/2049)))))))
                 attributes/2050 =
                   (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.attributes lib/grammarFunctor.ml(192):5770-5785
                     (caml_make_vect n/1961 0))
                 *match*/13618 =
                   (after Gbnf_parser__GrammarFunctor.Make.Nonterminal lib/grammarFunctor.ml(195):5802-5950
                     (apply (field_imm 21 (global Gbnf_parser__StringMap!))
                       (function nonterminal/2051 param/2054 : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.(fun) lib/grammarFunctor.ml(195):5817-5936
                           (let
                             (attrs/2052 =a (field_imm 3 param/2054)
                              *match*/13616 =a (field_int 2 param/2054)
                              *match*/13615 =a (field_imm 1 param/2054)
                              *match*/13614 =a (field_imm 0 param/2054))
                             (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.(fun) lib/grammarFunctor.ml(196):5869-5930
                               (let
                                 (nt/2053 =[int]
                                    (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.(fun) lib/grammarFunctor.ml(196):5878-5896
                                      (apply lookup/2014 nonterminal/2051)))
                                 (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.(fun) lib/grammarFunctor.ml(197):5906-5930
                                   (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.(fun) lib/grammarFunctor.ml(197):5906-5930
                                     (array.set[addr] attributes/2050 nt/2053
                                       attrs/2052))))))))
                       (field_imm 8 (field_imm 0 G/1226))))
                 attributes/2055 =
                   (function nt/2056[int]
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.attributes lib/grammarFunctor.ml(200)<ghost>:5969-5993
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.attributes lib/grammarFunctor.ml(201):5978-5993
                         (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.attributes lib/grammarFunctor.ml(201):5978-5993
                           (array.get[addr] attributes/2050 nt/2056))))))
                (pseudo Gbnf_parser__GrammarFunctor.Make.Nonterminal lib/grammarFunctor.ml(100):3824-5998
                  (makeblock 0 n2i/1948 equal/1951 compare/1955
                    new_start_nonterminals/1956 original_nonterminals/1959
                    start/1960 n/1961 name/1962 is_internal_start/1964
                    is_user_start/1967 print/1970 lookup/2014 positions/2017
                    init/2020 iter/2023 fold/2025 map/2029 iterx/2031
                    foldx/2035 ocamltype/2039 ocamltype_of_start_symbol/2042
                    tabulate/2047 attributes/2055)))
            Terminal/2246 =
              (let
                (t2i/2112 =
                   (function i/2114
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.t2i lib/grammarFunctor.ml(218)<ghost>:6272-6277
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.t2i lib/grammarFunctor.ml(218):6276-6277
                         i/2114)))
                 i2t/2115 =
                   (function i/2117
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.i2t lib/grammarFunctor.ml(219)<ghost>:6288-6293
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.i2t lib/grammarFunctor.ml(219):6292-6293
                         i/2117)))
                 compare/2118 =
                   (function prim/13626 prim/13625 stub
                     (- prim/13626 prim/13625))
                 equal/2119 =
                   (function tok1/2121[int] tok2/2122[int] : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.equal lib/grammarFunctor.ml(223)<ghost>:6328-6367
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.equal lib/grammarFunctor.ml(224):6356-6367
                         (== tok1/2121 tok2/2122))))
                 *match*/13650 =
                   (let
                     (tokens/2126 =
                        (after Gbnf_parser__GrammarFunctor.Make.Terminal.n lib/grammarFunctor.ml(240):7054-7068
                          (apply
                            (field_imm 6 (global Gbnf_parser__BasicSyntax!))
                            (field_imm 0 G/1226))))
                     (before Gbnf_parser__GrammarFunctor.Make.Terminal.n lib/grammarFunctor.ml(241):7076-7228
                       (catch
                         (if tokens/2126 (exit 18)
                           (before Gbnf_parser__GrammarFunctor.Make.Terminal.n lib/grammarFunctor.ml(242):7108-7115
                             (if (field_imm 1 G/1226)
                               (before Gbnf_parser__GrammarFunctor.Make.Terminal.n lib/grammarFunctor.ml(243):7127-7173
                                 (after Gbnf_parser__GrammarFunctor.Make.Terminal.n lib/grammarFunctor.ml(243):7127-7173
                                   (apply
                                     (field_imm 6
                                       (global Gbnf_parser__Error!))
                                     0
                                     [0:
                                      [11: "no tokens have been declared." 0]
                                      "no tokens have been declared."])))
                               (exit 18))))
                        with (18)
                         (before Gbnf_parser__GrammarFunctor.Make.Terminal.n lib/grammarFunctor.ml(245):7193-7228
                           (after Gbnf_parser__GrammarFunctor.Make.Terminal.n lib/grammarFunctor.ml(245):7193-7228
                             (apply index/1227
                               (after Gbnf_parser__GrammarFunctor.Make.Terminal.n lib/grammarFunctor.ml(245):7199-7228
                                 (apply (field_imm 36 (global Stdlib!))
                                   (makeblock 0 "error" tokens/2126)
                                   [0: "#" 0]))))))))
                 map/2125 =a (field_imm 2 *match*/13650)
                 name/2124 =a (field_imm 1 *match*/13650)
                 n/2123 =a (field_imm 0 *match*/13650)
                 print/2127 =
                   (function tok/2128[int]
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.print lib/grammarFunctor.ml(247)<ghost>:7242-7262
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.print lib/grammarFunctor.ml(248):7252-7262
                         (after Gbnf_parser__GrammarFunctor.Make.Terminal.print lib/grammarFunctor.ml(248):7252-7262
                           (array.get[addr] name/2124 tok/2128)))))
                 lookup/2129 =
                   (function name/2131 : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.lookup lib/grammarFunctor.ml(250)<ghost>:7277-7311
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.lookup lib/grammarFunctor.ml(251):7288-7311
                         (after Gbnf_parser__GrammarFunctor.Make.Terminal.lookup lib/grammarFunctor.ml(251):7288-7311
                           (apply
                             (field_imm 15 (global Gbnf_parser__StringMap!))
                             name/2131 map/2125)))))
                 sharp/2132 =[int]
                   (after Gbnf_parser__GrammarFunctor.Make.Terminal.sharp lib/grammarFunctor.ml(254):7331-7341
                     (apply lookup/2129 "#"))
                 error/2133 =[int]
                   (after Gbnf_parser__GrammarFunctor.Make.Terminal.error lib/grammarFunctor.ml(257):7361-7375
                     (apply lookup/2129 "error"))
                 pseudo/2134 =
                   (function tok/2136[int] : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.pseudo lib/grammarFunctor.ml(259)<ghost>:7390-7430
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.pseudo lib/grammarFunctor.ml(260):7400-7430
                         (|| (== tok/2136 sharp/2132)
                           (== tok/2136 error/2133)))))
                 real/2137 =
                   (function t/2139[int] : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.real lib/grammarFunctor.ml(262)<ghost>:7443-7475
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.real lib/grammarFunctor.ml(263):7451-7475
                         (&& (!= error/2133 t/2139) (!= t/2139 sharp/2132)))))
                 non_error/2140 =
                   (function tok/2142[int] : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.non_error lib/grammarFunctor.ml(265)<ghost>:7493-7515
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.non_error lib/grammarFunctor.ml(266):7503-7515
                         (!= tok/2142 error/2133))))
                 token_properties/2143 =
                   (let
                     (not_so_dummy_properties/2144 =
                        (makemutable 0 (*,*,*,*,*,int,*,int) "__primitives__"
                          0 (field_imm 9 (global Gbnf_parser__Positions!)) 0
                          0 3 0 1))
                     (before Gbnf_parser__GrammarFunctor.Make.Terminal.token_properties lib/grammarFunctor.ml(281):7949-8143
                       (after Gbnf_parser__GrammarFunctor.Make.Terminal.token_properties lib/grammarFunctor.ml(281):7949-8143
                         (apply (field_imm 0 (global Stdlib__Array!)) n/2123
                           (function tok/2145[int]
                             (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.token_properties.(fun) lib/grammarFunctor.ml(281):7962-8143
                               (before Gbnf_parser__GrammarFunctor.Make.Terminal.token_properties.(fun) lib/grammarFunctor.ml(282):7980-8137
                                 (try
                                   (after Gbnf_parser__GrammarFunctor.Make.Terminal.token_properties.(fun) lib/grammarFunctor.ml(283):7993-8033
                                     (apply
                                       (field_imm 15
                                         (global Gbnf_parser__StringMap!))
                                       (after Gbnf_parser__GrammarFunctor.Make.Terminal.token_properties.(fun) lib/grammarFunctor.ml(283):8008-8018
                                         (array.get[addr] name/2124 tok/2145))
                                       (field_imm 5 (field_imm 0 G/1226))))
                                  with exn/13627
                                   (catch
                                     (if
                                       (== exn/13627
                                         (field_imm 7 (global Stdlib!)))
                                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.token_properties.(fun) lib/grammarFunctor.ml(285):8068-8137
                                         (seq
                                           (if
                                             (|| (== tok/2145 sharp/2132)
                                               (== tok/2145 error/2133))
                                             0
                                             (raise
                                               (after Gbnf_parser__GrammarFunctor.Make.Terminal.token_properties.(fun) lib/grammarFunctor.ml(285):8068-8103
                                                 (makeblock 0
                                                   (global Assert_failure/28!)
                                                   [0:
                                                    "lib/grammarFunctor.ml"
                                                    285 9]))))
                                           (before Gbnf_parser__GrammarFunctor.Make.Terminal.token_properties.(fun) lib/grammarFunctor.ml(286):8114-8137
                                             not_so_dummy_properties/2144)))
                                       (exit 19))
                                    with (19) (reraise exn/13627))))))))))
                 precedence_level/2146 =
                   (function tok/2148[int]
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.precedence_level lib/grammarFunctor.ml(295)<ghost>:8337-8403
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.precedence_level lib/grammarFunctor.ml(296):8347-8403
                         (after Gbnf_parser__GrammarFunctor.Make.Terminal.precedence_level lib/grammarFunctor.ml(296):8347-8403
                           (apply (field_imm 2 TokPrecedence/1946)
                             (after Gbnf_parser__GrammarFunctor.Make.Terminal.precedence_level lib/grammarFunctor.ml(296):8369-8380
                               (apply print/2127 tok/2148))
                             (after Gbnf_parser__GrammarFunctor.Make.Terminal.precedence_level lib/grammarFunctor.ml(296):8381-8403
                               (array.get[addr] token_properties/2143
                                 tok/2148)))))))
                 associativity/2149 =
                   (function tok/2151[int] : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.associativity lib/grammarFunctor.ml(298)<ghost>:8425-8474
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.associativity lib/grammarFunctor.ml(299):8435-8474
                         (field_int 5
                           (after Gbnf_parser__GrammarFunctor.Make.Terminal.associativity lib/grammarFunctor.ml(299):8435-8457
                             (array.get[addr] token_properties/2143 tok/2151))))))
                 ocamltype/2152 =
                   (function tok/2154[int]
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.ocamltype lib/grammarFunctor.ml(301)<ghost>:8492-8537
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.ocamltype lib/grammarFunctor.ml(302):8502-8537
                         (field_imm 1
                           (after Gbnf_parser__GrammarFunctor.Make.Terminal.ocamltype lib/grammarFunctor.ml(302):8502-8524
                             (array.get[addr] token_properties/2143 tok/2154))))))
                 init/2155 =
                   (function f/2157
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.init lib/grammarFunctor.ml(304)<ghost>:8550-8572
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.init lib/grammarFunctor.ml(305):8558-8572
                         (after Gbnf_parser__GrammarFunctor.Make.Terminal.init lib/grammarFunctor.ml(305):8558-8572
                           (apply (field_imm 0 (global Stdlib__Array!))
                             n/2123 f/2157)))))
                 iter/2158 =
                   (function f/2159 : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.iter lib/grammarFunctor.ml(307)<ghost>:8585-8607
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.iter lib/grammarFunctor.ml(308):8593-8607
                         (after Gbnf_parser__GrammarFunctor.Make.Terminal.iter lib/grammarFunctor.ml(308):8593-8607
                           (apply (field_imm 11 (global Gbnf_parser__Misc!))
                             n/2123 f/2159)))))
                 fold/2160 =
                   (function f/2162 accu/2163
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.fold lib/grammarFunctor.ml(310)<ghost>:8620-8652
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.fold lib/grammarFunctor.ml(311):8633-8652
                         (after Gbnf_parser__GrammarFunctor.Make.Terminal.fold lib/grammarFunctor.ml(311):8633-8652
                           (apply (field_imm 13 (global Gbnf_parser__Misc!))
                             n/2123 f/2162 accu/2163)))))
                 map/2164 =
                   (function f/2165
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.map lib/grammarFunctor.ml(313)<ghost>:8664-8685
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.map lib/grammarFunctor.ml(314):8672-8685
                         (after Gbnf_parser__GrammarFunctor.Make.Terminal.map lib/grammarFunctor.ml(314):8672-8685
                           (apply (field_imm 16 (global Gbnf_parser__Misc!))
                             n/2123 f/2165)))))
                 *match*/13641 =
                   (if (== sharp/2132 (- n/2123 1)) 0
                     (raise
                       (after Gbnf_parser__GrammarFunctor.Make.Terminal lib/grammarFunctor.ml(317):8702-8724
                         (makeblock 0 (global Assert_failure/28!)
                           [0: "lib/grammarFunctor.ml" 317 4]))))
                 foldx/2166 =
                   (function f/2168 accu/2169
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.foldx lib/grammarFunctor.ml(318)<ghost>:8737-8773
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.foldx lib/grammarFunctor.ml(319):8750-8773
                         (after Gbnf_parser__GrammarFunctor.Make.Terminal.foldx lib/grammarFunctor.ml(319):8750-8773
                           (apply (field_imm 13 (global Gbnf_parser__Misc!))
                             sharp/2132 f/2168 accu/2169)))))
                 mapx/2170 =
                   (function f/2172
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.mapx lib/grammarFunctor.ml(320)<ghost>:8785-8810
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.mapx lib/grammarFunctor.ml(321):8793-8810
                         (after Gbnf_parser__GrammarFunctor.Make.Terminal.mapx lib/grammarFunctor.ml(321):8793-8810
                           (apply (field_imm 16 (global Gbnf_parser__Misc!))
                             sharp/2132 f/2172)))))
                 *match*/13639 =
                   (if (== error/2133 0) 0
                     (raise
                       (after Gbnf_parser__GrammarFunctor.Make.Terminal lib/grammarFunctor.ml(324):8827-8845
                         (makeblock 0 (global Assert_failure/28!)
                           [0: "lib/grammarFunctor.ml" 324 4]))))
                 iter_real/2173 =
                   (function f/2175 : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.iter_real lib/grammarFunctor.ml(325)<ghost>:8862-8908
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.iter_real lib/grammarFunctor.ml(326):8870-8908
                         (for i/2176 1 to (- n/2123 2)
                           (before Gbnf_parser__GrammarFunctor.Make.Terminal.iter_real lib/grammarFunctor.ml(327):8896-8899
                             (after Gbnf_parser__GrammarFunctor.Make.Terminal.iter_real lib/grammarFunctor.ml(327):8896-8899
                               (apply f/2175 i/2176)))))))
                 tokens_without_an_alias/2177 =
                   (let (accu/2178 = (makemutable 0 0))
                     (before Gbnf_parser__GrammarFunctor.Make.Terminal.tokens_without_an_alias lib/grammarFunctor.ml(332):8971-9144
                       (seq
                         (after Gbnf_parser__GrammarFunctor.Make.Terminal.tokens_without_an_alias lib/grammarFunctor.ml(332):8971-9124
                           (apply iter_real/2173
                             (function tok/2179[int] : int
                               (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.tokens_without_an_alias.(fun) lib/grammarFunctor.ml(332):8981-9124
                                 (before Gbnf_parser__GrammarFunctor.Make.Terminal.tokens_without_an_alias.(fun) lib/grammarFunctor.ml(333):9004-9116
                                   (let
                                     (properties/2180 =
                                        (after Gbnf_parser__GrammarFunctor.Make.Terminal.tokens_without_an_alias.(fun) lib/grammarFunctor.ml(333):9021-9043
                                          (array.get[addr]
                                            token_properties/2143 tok/2179)))
                                     (before Gbnf_parser__GrammarFunctor.Make.Terminal.tokens_without_an_alias.(fun) lib/grammarFunctor.ml(334):9053-9116
                                       (if
                                         (== (field_imm 3 properties/2180) 0)
                                         (before Gbnf_parser__GrammarFunctor.Make.Terminal.tokens_without_an_alias.(fun) lib/grammarFunctor.ml(335):9096-9116
                                           (setfield_ptr 0 accu/2178
                                             (makeblock 0 (int,*) tok/2179
                                               (field_mut 0 accu/2178))))
                                         0))))))))
                         (before Gbnf_parser__GrammarFunctor.Make.Terminal.tokens_without_an_alias lib/grammarFunctor.ml(337):9130-9144
                           (after Gbnf_parser__GrammarFunctor.Make.Terminal.tokens_without_an_alias lib/grammarFunctor.ml(337):9130-9144
                             (apply (field_imm 9 (global Stdlib__List!))
                               (field_mut 0 accu/2178)))))))
                 every_token_has_an_alias/2181 =[int]
                   (== tokens_without_an_alias/2177 0)
                 alias/2182 =
                   (function tok/2184[int]
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.alias lib/grammarFunctor.ml(352)<ghost>:9618-9659
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.alias lib/grammarFunctor.ml(353):9628-9659
                         (field_imm 3
                           (after Gbnf_parser__GrammarFunctor.Make.Terminal.alias lib/grammarFunctor.ml(353):9628-9650
                             (array.get[addr] token_properties/2143 tok/2184))))))
                 unquoted_alias/2185 =
                   (function param/2187
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.unquoted_alias lib/grammarFunctor.ml(355)<ghost>:9683-9689
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.unquoted_alias lib/grammarFunctor.ml(355):9687-9689
                         "")))
                 print_concrete/2188 =
                   (function param/2190
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.print_concrete lib/grammarFunctor.ml(367)<ghost>:10162-10168
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.print_concrete lib/grammarFunctor.ml(367):10166-10168
                         "")))
                 eof/2191 =
                   (try
                     (makeblock 0 (int)
                       (after Gbnf_parser__GrammarFunctor.Make.Terminal.eof lib/grammarFunctor.ml(382):10599-10613
                         (apply lookup/2129 "EOF")))
                    with exn/13629
                     (catch
                       (if (== exn/13629 (field_imm 7 (global Stdlib!)))
                         (before Gbnf_parser__GrammarFunctor.Make.Terminal.eof lib/grammarFunctor.ml(384):10642-10646
                           0)
                         (exit 20))
                      with (20) (reraise exn/13629)))
                 attributes/2192 =
                   (function tok/2194[int]
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.attributes lib/grammarFunctor.ml(386)<ghost>:10665-10711
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.attributes lib/grammarFunctor.ml(387):10675-10711
                         (field_imm 4
                           (after Gbnf_parser__GrammarFunctor.Make.Terminal.attributes lib/grammarFunctor.ml(387):10675-10697
                             (array.get[addr] token_properties/2143 tok/2194))))))
                 Word/2245 =
                   (function X/13637 is_a_functor
                     (let
                       (X/2195 =a X/13637
                        *match*/13636 =
                          (if (<= n/2123 256) 0
                            (raise
                              (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word lib/grammarFunctor.ml(409):11738-11755
                                (makeblock 0 (global Assert_failure/28!)
                                  [0: "lib/grammarFunctor.ml" 409 6]))))
                        *match*/13634 =
                          (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.encode lib/grammarFunctor.ml(412):11833-11860
                            (apply (field_imm 24 (global Gbnf_parser__Misc!))
                              1024))
                        verbose/2198 =a (field_imm 2 *match*/13634)
                        decode/2197 =a (field_imm 1 *match*/13634)
                        encode/2196 =a (field_imm 0 *match*/13634)
                        epsilon/2200 =[int]
                          (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.epsilon lib/grammarFunctor.ml(418):11913-11922
                            (apply encode/2196 ""))
                        singleton/2201 =
                          (function t/2203[int] : int
                            (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.Word.singleton lib/grammarFunctor.ml(420)<ghost>:11942-11987
                              (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.singleton lib/grammarFunctor.ml(421):11952-11987
                                (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.singleton lib/grammarFunctor.ml(421):11952-11987
                                  (apply encode/2196
                                    (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.singleton lib/grammarFunctor.ml(421):11959-11987
                                      (apply
                                        (field_imm 0
                                          (global Stdlib__String!))
                                        1
                                        (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.singleton lib/grammarFunctor.ml(421):11974-11986
                                          (apply
                                            (field_imm 0
                                              (global Stdlib__Char!))
                                            t/2203)))))))))
                        append/2215 =
                          (function i1/2217[int] i2/2218[int] : int
                            (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.Word.append lib/grammarFunctor.ml(423)<ghost>:12004-12197
                              (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.append lib/grammarFunctor.ml(424):12018-12197
                                (let
                                  (w1/2219 =
                                     (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.append lib/grammarFunctor.ml(424):12027-12036
                                       (apply decode/2197 i1/2217))
                                   w2/2220 =
                                     (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.append lib/grammarFunctor.ml(425):12052-12061
                                       (apply decode/2197 i2/2218)))
                                  (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.append lib/grammarFunctor.ml(426):12071-12197
                                    (if (== (string.length w1/2219) 0)
                                      (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.append lib/grammarFunctor.ml(427):12108-12110
                                        i2/2218)
                                      (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.append lib/grammarFunctor.ml(428):12122-12197
                                        (if (== (string.length w2/2220) 0)
                                          (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.append lib/grammarFunctor.ml(429):12159-12161
                                            i1/2217)
                                          (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.append lib/grammarFunctor.ml(431):12181-12197
                                            (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.append lib/grammarFunctor.ml(431):12181-12197
                                              (apply encode/2196
                                                (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.append lib/grammarFunctor.ml(431):12188-12197
                                                  (apply
                                                    (field_imm 27
                                                      (global Stdlib!))
                                                    w1/2219 w2/2220)))))))))))))
                        length/2221 =
                          (function i/2223[int] : int
                            (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.Word.length lib/grammarFunctor.ml(433)<ghost>:12214-12248
                              (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.length lib/grammarFunctor.ml(434):12224-12248
                                (string.length
                                  (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.length lib/grammarFunctor.ml(434):12238-12248
                                    (apply decode/2197 i/2223))))))
                        first/2224 =
                          (function i/2226[int] z/2227[int] : int
                            (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.Word.first lib/grammarFunctor.ml(436)<ghost>:12264-12374
                              (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.first lib/grammarFunctor.ml(437):12276-12374
                                (let
                                  (w/2228 =
                                     (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.first lib/grammarFunctor.ml(437):12284-12292
                                       (apply decode/2197 i/2226)))
                                  (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.first lib/grammarFunctor.ml(438):12302-12374
                                    (if (> (string.length w/2228) 0)
                                      (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.first lib/grammarFunctor.ml(439):12338-12353
                                        (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.first lib/grammarFunctor.ml(439):12348-12353
                                          (string.get w/2228 0)))
                                      (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.first lib/grammarFunctor.ml(441):12373-12374
                                        z/2227))))))))
                       (letrec
                         (elements/2229
                            (function i/2230[int] n/2231[int] w/2232
                              (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.Word.elements lib/grammarFunctor.ml(443)<ghost>:12397-12494
                                (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.elements lib/grammarFunctor.ml(444):12411-12494
                                  (if (== i/2230 n/2231)
                                    (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.elements lib/grammarFunctor.ml(445):12433-12435
                                      0)
                                    (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.elements lib/grammarFunctor.ml(447):12455-12494
                                      (makeblock 0 (int,*)
                                        (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.elements lib/grammarFunctor.ml(447):12465-12470
                                          (string.get w/2232 i/2230))
                                        (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.elements lib/grammarFunctor.ml(447):12474-12494
                                          (apply elements/2229 (+ i/2230 1)
                                            n/2231 w/2232)))))))))
                         (let
                           (elements/2233 =
                              (function i/2234[int]
                                (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.Word.elements lib/grammarFunctor.ml(449)<ghost>:12513-12579
                                  (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.elements lib/grammarFunctor.ml(450):12523-12579
                                    (let
                                      (w/2235 =
                                         (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.elements lib/grammarFunctor.ml(450):12531-12539
                                           (apply decode/2197 i/2234)))
                                      (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.elements lib/grammarFunctor.ml(451):12549-12579
                                        (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.elements lib/grammarFunctor.ml(451):12549-12579
                                          (apply elements/2229 0
                                            (string.length w/2235) w/2235)))))))
                            print/2236 =
                              (function i/2237[int]
                                (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.Word.print lib/grammarFunctor.ml(453)<ghost>:12595-12746
                                  (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.print lib/grammarFunctor.ml(454):12605-12746
                                    (let
                                      (w/2238 =
                                         (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.print lib/grammarFunctor.ml(454):12613-12621
                                           (apply decode/2197 i/2237)))
                                      (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.print lib/grammarFunctor.ml(455):12631-12746
                                        (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.print lib/grammarFunctor.ml(455):12631-12746
                                          (apply
                                            (field_imm 5
                                              (global Gbnf_parser__Misc!))
                                            (function c/2239[int]
                                              (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.Word.print.(fun) lib/grammarFunctor.ml(456):12669-12699
                                                (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.print.(fun) lib/grammarFunctor.ml(456):12679-12698
                                                  (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.print.(fun) lib/grammarFunctor.ml(456):12679-12698
                                                    (apply print/2127 c/2239)))))
                                            " "
                                            (function f/2240 : int
                                              (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.Word.print.(fun) lib/grammarFunctor.ml(458):12720-12746
                                                (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.print.(fun) lib/grammarFunctor.ml(458):12730-12745
                                                  (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.print.(fun) lib/grammarFunctor.ml(458):12730-12745
                                                    (apply
                                                      (field_imm 29
                                                        (global Stdlib__String!))
                                                      f/2240 w/2238))))))))))))
                            compare/2241 =
                              (function i1/2242[int] i2/2243[int] : int
                                (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.Word.compare lib/grammarFunctor.ml(461)<ghost>:12840-12893
                                  (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.compare lib/grammarFunctor.ml(462):12854-12893
                                    (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.compare lib/grammarFunctor.ml(462):12854-12893
                                      (apply
                                        (field_imm 0
                                          (global Gbnf_parser__Generic!))
                                        (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.compare lib/grammarFunctor.ml(462):12870-12881
                                          (apply decode/2197 i1/2242))
                                        (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.compare lib/grammarFunctor.ml(462):12882-12893
                                          (apply decode/2197 i2/2243))))))))
                           (pseudo Gbnf_parser__GrammarFunctor.Make.Terminal.Word lib/grammarFunctor.ml(395):11037-12900
                             (makeblock 0 encode/2196 decode/2197
                               verbose/2198 epsilon/2200 singleton/2201
                               append/2215 length/2221 first/2224
                               elements/2233 print/2236 compare/2241)))))))
                (pseudo Gbnf_parser__GrammarFunctor.Make.Terminal lib/grammarFunctor.ml(214):6238-12905
                  (makeblock 0 t2i/2112 i2t/2115 compare/2118 equal/2119
                    n/2123 name/2124 print/2127 lookup/2129 sharp/2132
                    error/2133 pseudo/2134 real/2137 non_error/2140
                    token_properties/2143 precedence_level/2146
                    associativity/2149 ocamltype/2152 init/2155 iter/2158
                    fold/2160 map/2164 foldx/2166 mapx/2170 iter_real/2173
                    tokens_without_an_alias/2177
                    every_token_has_an_alias/2181 alias/2182
                    unquoted_alias/2185 print_concrete/2188 eof/2191
                    attributes/2192 Word/2245)))
            TerminalSet/2387 =
              (let
                (include/13651 =
                   (apply
                     (apply
                       (let
                         (let/13652 =
                            (field_imm 0
                              (global Gbnf_parser__BoundedBitSet!)))
                         (field_imm 0 (global Gbnf_parser__BoundedBitSet!)))
                       (makeblock 0 (field_mut 4 Terminal/2246)))
                     0)
                 empty/2338 =a (field_mut 0 include/13651)
                 is_empty/2339 =a (field_mut 1 include/13651)
                 singleton/2340 =a (field_mut 2 include/13651)
                 is_singleton/2341 =a (field_mut 3 include/13651)
                 cardinal/2342 =a (field_mut 4 include/13651)
                 choose/2343 =a (field_mut 5 include/13651)
                 mem/2344 =a (field_mut 6 include/13651)
                 add/2345 =a (field_mut 7 include/13651)
                 remove/2346 =a (field_mut 8 include/13651)
                 union/2347 =a (field_mut 9 include/13651)
                 inter/2348 =a (field_mut 10 include/13651)
                 disjoint/2349 =a (field_mut 11 include/13651)
                 iter/2350 =a (field_mut 12 include/13651)
                 fold/2351 =a (field_mut 13 include/13651)
                 elements/2352 =a (field_mut 14 include/13651)
                 compare/2353 =a (field_mut 15 include/13651)
                 equal/2354 =a (field_mut 16 include/13651)
                 subset/2355 =a (field_mut 17 include/13651)
                 print/2376 =
                   (function toks/2377
                     (funct-body Gbnf_parser__GrammarFunctor.Make.TerminalSet.print lib/grammarFunctor.ml(477)<ghost>:13192-13274
                       (before Gbnf_parser__GrammarFunctor.Make.TerminalSet.print lib/grammarFunctor.ml(478):13203-13274
                         (after Gbnf_parser__GrammarFunctor.Make.TerminalSet.print lib/grammarFunctor.ml(478):13203-13274
                           (apply (field_imm 5 (global Gbnf_parser__Misc!))
                             (field_imm 6 Terminal/2246) " "
                             (function f/2379 : int
                               (funct-body Gbnf_parser__GrammarFunctor.Make.TerminalSet.print.(fun) lib/grammarFunctor.ml(478):13252-13274
                                 (before Gbnf_parser__GrammarFunctor.Make.TerminalSet.print.(fun) lib/grammarFunctor.ml(478):13262-13273
                                   (after Gbnf_parser__GrammarFunctor.Make.TerminalSet.print.(fun) lib/grammarFunctor.ml(478):13262-13273
                                     (apply iter/2350 f/2379 toks/2377))))))))))
                 universe/2380 =
                   (after Gbnf_parser__GrammarFunctor.Make.TerminalSet.universe lib/grammarFunctor.ml(481):13297-13396
                     (apply remove/2346 (field_imm 8 Terminal/2246)
                       (after Gbnf_parser__GrammarFunctor.Make.TerminalSet.universe lib/grammarFunctor.ml(481):13319-13396
                         (apply remove/2346 (field_imm 9 Terminal/2246)
                           (after Gbnf_parser__GrammarFunctor.Make.TerminalSet.universe lib/grammarFunctor.ml(482):13349-13390
                             (apply (field_imm 19 Terminal/2246) add/2345
                               empty/2338))))))
                 bottom/2382 = empty/2338
                 is_maximal/2383 =
                   (function param/2385 : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.TerminalSet.is_maximal lib/grammarFunctor.ml(496)<ghost>:13599-13612
                       (before Gbnf_parser__GrammarFunctor.Make.TerminalSet.is_maximal lib/grammarFunctor.ml(497):13607-13612
                         0)))
                 leq_join/2386 = union/2347)
                (pseudo Gbnf_parser__GrammarFunctor.Make.TerminalSet lib/grammarFunctor.ml(471):13062-13645
                  (makeblock 0 empty/2338 is_empty/2339 singleton/2340
                    is_singleton/2341 cardinal/2342 choose/2343 mem/2344
                    add/2345 remove/2346 union/2347 inter/2348 disjoint/2349
                    iter/2350 fold/2351 elements/2352 compare/2353 equal/2354
                    subset/2355 print/2376 universe/2380 bottom/2382
                    is_maximal/2383 leq_join/2386)))
            Symbol/2545 =
              (let
                (is_terminal/2392 =
                   (function sym/2394 : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Symbol.is_terminal lib/grammarFunctor.ml(517)<ghost>:13906-13983
                       (before Gbnf_parser__GrammarFunctor.Make.Symbol.is_terminal lib/grammarFunctor.ml(518):13916-13983
                         (switch* sym/2394
                          case tag 0:
                           (let (*match*/13653 =a (field_imm 0 sym/2394))
                             (before Gbnf_parser__GrammarFunctor.Make.Symbol.is_terminal lib/grammarFunctor.ml(520):13952-13957
                               0))
                          case tag 1:
                           (let (*match*/13654 =a (field_imm 0 sym/2394))
                             (before Gbnf_parser__GrammarFunctor.Make.Symbol.is_terminal lib/grammarFunctor.ml(522):13979-13983
                               1))))))
                 compare/2395 =
                   (function sym1/2396 sym2/2397 : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Symbol.compare lib/grammarFunctor.ml(524)<ghost>:13999-14210
                       (before Gbnf_parser__GrammarFunctor.Make.Symbol.compare lib/grammarFunctor.ml(525):14015-14210
                         (switch* sym1/2396
                          case tag 0:
                           (let (nt1/2398 =a (field_imm 0 sym1/2396))
                             (switch* sym2/2397
                              case tag 0:
                               (let (nt2/2399 =a (field_imm 0 sym2/2397))
                                 (before Gbnf_parser__GrammarFunctor.Make.Symbol.compare lib/grammarFunctor.ml(527):14067-14094
                                   (after Gbnf_parser__GrammarFunctor.Make.Symbol.compare lib/grammarFunctor.ml(527):14067-14094
                                     (apply (field_imm 2 Nonterminal/2057)
                                       nt1/2398 nt2/2399))))
                              case tag 1:
                               (let
                                 (*match*/13655 =a (field_imm 0 sym2/2397))
                                 (before Gbnf_parser__GrammarFunctor.Make.Symbol.compare lib/grammarFunctor.ml(531):14180-14181
                                   1))))
                          case tag 1:
                           (let (tok1/2400 =a (field_imm 0 sym1/2396))
                             (switch* sym2/2397
                              case tag 0:
                               (let
                                 (*match*/13656 =a (field_imm 0 sym2/2397))
                                 (before Gbnf_parser__GrammarFunctor.Make.Symbol.compare lib/grammarFunctor.ml(533):14208-14210
                                   -1))
                              case tag 1:
                               (let (tok2/2401 =a (field_imm 0 sym2/2397))
                                 (before Gbnf_parser__GrammarFunctor.Make.Symbol.compare lib/grammarFunctor.ml(529):14127-14153
                                   (after Gbnf_parser__GrammarFunctor.Make.Symbol.compare lib/grammarFunctor.ml(529):14127-14153
                                     (apply (field_imm 2 Terminal/2246)
                                       tok1/2400 tok2/2401))))))))))
                 equal/2402 =
                   (function sym1/2404 sym2/2405 : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Symbol.equal lib/grammarFunctor.ml(535)<ghost>:14224-14261
                       (before Gbnf_parser__GrammarFunctor.Make.Symbol.equal lib/grammarFunctor.ml(536):14240-14261
                         (==
                           (after Gbnf_parser__GrammarFunctor.Make.Symbol.equal lib/grammarFunctor.ml(536):14240-14257
                             (apply compare/2395 sym1/2404 sym2/2405))
                           0)))))
                (letrec
                  (lequal/2406
                     (function syms1/2407 syms2/2408 : int
                       (funct-body Gbnf_parser__GrammarFunctor.Make.Symbol.lequal lib/grammarFunctor.ml(538)<ghost>:14280-14485
                         (before Gbnf_parser__GrammarFunctor.Make.Symbol.lequal lib/grammarFunctor.ml(539):14298-14485
                           (catch
                             (if syms1/2407
                               (if syms2/2408
                                 (let
                                   (syms2/2412 =a (field_imm 1 syms2/2408)
                                    sym2/2411 =a (field_imm 0 syms2/2408)
                                    syms1/2410 =a (field_imm 1 syms1/2407)
                                    sym1/2409 =a (field_imm 0 syms1/2407))
                                   (before Gbnf_parser__GrammarFunctor.Make.Symbol.lequal lib/grammarFunctor.ml(543):14397-14434
                                     (&&
                                       (after Gbnf_parser__GrammarFunctor.Make.Symbol.lequal lib/grammarFunctor.ml(543):14397-14412
                                         (apply equal/2402 sym1/2409
                                           sym2/2411))
                                       (after Gbnf_parser__GrammarFunctor.Make.Symbol.lequal lib/grammarFunctor.ml(543):14416-14434
                                         (apply lequal/2406 syms1/2410
                                           syms2/2412)))))
                                 (exit 37))
                               (if syms2/2408
                                 (let
                                   (*match*/13658 =a (field_imm 1 syms2/2408)
                                    *match*/13657 =a (field_imm 0 syms2/2408))
                                   (exit 37))
                                 (before Gbnf_parser__GrammarFunctor.Make.Symbol.lequal lib/grammarFunctor.ml(541):14346-14350
                                   1)))
                            with (37)
                             (before Gbnf_parser__GrammarFunctor.Make.Symbol.lequal lib/grammarFunctor.ml(546):14480-14485
                               0))))))
                  (let
                    (non_error/2413 =
                       (function sym/2415 : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Symbol.non_error lib/grammarFunctor.ml(548)<ghost>:14503-14599
                           (before Gbnf_parser__GrammarFunctor.Make.Symbol.non_error lib/grammarFunctor.ml(549):14513-14599
                             (switch* sym/2415
                              case tag 0:
                               (let (*match*/13659 =a (field_imm 0 sym/2415))
                                 (before Gbnf_parser__GrammarFunctor.Make.Symbol.non_error lib/grammarFunctor.ml(553):14595-14599
                                   1))
                              case tag 1:
                               (let (tok/2416 =a (field_imm 0 sym/2415))
                                 (before Gbnf_parser__GrammarFunctor.Make.Symbol.non_error lib/grammarFunctor.ml(551):14551-14573
                                   (after Gbnf_parser__GrammarFunctor.Make.Symbol.non_error lib/grammarFunctor.ml(551):14551-14573
                                     (apply (field_imm 12 Terminal/2246)
                                       tok/2416))))))))
                     print/2417 =
                       (function param/2420
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Symbol.print lib/grammarFunctor.ml(555):14615-14714
                           (switch* param/2420
                            case tag 0:
                             (let (nt/2418 =a (field_imm 0 param/2420))
                               (before Gbnf_parser__GrammarFunctor.Make.Symbol.print lib/grammarFunctor.ml(557):14646-14672
                                 (after Gbnf_parser__GrammarFunctor.Make.Symbol.print lib/grammarFunctor.ml(557):14646-14672
                                   (apply (field_imm 10 Nonterminal/2057) 0
                                     nt/2418))))
                            case tag 1:
                             (let (tok/2419 =a (field_imm 0 param/2420))
                               (before Gbnf_parser__GrammarFunctor.Make.Symbol.print lib/grammarFunctor.ml(559):14696-14714
                                 (after Gbnf_parser__GrammarFunctor.Make.Symbol.print lib/grammarFunctor.ml(559):14696-14714
                                   (apply (field_imm 6 Terminal/2246)
                                     tok/2419)))))))
                     nonterminal/2421 =
                       (function param/2423 : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Symbol.nonterminal lib/grammarFunctor.ml(561):14736-14797
                           (switch* param/2423
                            case tag 0:
                             (let (*match*/13661 =a (field_imm 0 param/2423))
                               (before Gbnf_parser__GrammarFunctor.Make.Symbol.nonterminal lib/grammarFunctor.ml(565):14793-14797
                                 1))
                            case tag 1:
                             (let (*match*/13660 =a (field_imm 0 param/2423))
                               (before Gbnf_parser__GrammarFunctor.Make.Symbol.nonterminal lib/grammarFunctor.ml(563):14766-14771
                                 0)))))
                     buffer/2424 =
                       (after Gbnf_parser__GrammarFunctor.Make.Symbol.buffer lib/grammarFunctor.ml(573):15053-15071
                         (apply (field_imm 0 (global Stdlib__Buffer!)) 1024))
                     printaod/2507 =
                       (function offset/2509[int] dot/2510[int] symbols/2511
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(575)<ghost>:15088-15599
                           (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(576):15113-15599
                             (let
                               (length/2512 =[int]
                                  (array.length[addr] symbols/2511))
                               (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(577):15154-15599
                                 (let (first/2513 = (makemutable 0 (int) 1))
                                   (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(578):15182-15599
                                     (let
                                       (separate/2514 =
                                          (function param/2529[int] : int
                                            (funct-body Gbnf_parser__GrammarFunctor.Make.Symbol.printaod.separate lib/grammarFunctor.ml(578)<ghost>:15195-15272
                                              (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod.separate lib/grammarFunctor.ml(579):15206-15272
                                                (seq
                                                  (if
                                                    (not
                                                      (field_int 0
                                                        first/2513))
                                                    (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod.separate lib/grammarFunctor.ml(579):15225-15250
                                                      (after Gbnf_parser__GrammarFunctor.Make.Symbol.printaod.separate lib/grammarFunctor.ml(579):15225-15250
                                                        (apply
                                                          (field_imm 4
                                                            (global Stdlib__Printf!))
                                                          buffer/2424
                                                          [0:
                                                           [12: ' ' 0] " "])))
                                                    0)
                                                  (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod.separate lib/grammarFunctor.ml(580):15258-15272
                                                    (setfield_imm 0
                                                      first/2513 0)))))))
                                       (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(582):15284-15599
                                         (seq
                                           (for i/2530 offset/2509 to
                                             length/2512
                                             (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(583):15318-15520
                                               (seq
                                                 (if (== i/2530 dot/2510)
                                                   (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(583):15334-15403
                                                     (seq
                                                       (after Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(584):15348-15358
                                                         (apply separate/2514
                                                           0))
                                                       (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(585):15368-15393
                                                         (after Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(585):15368-15393
                                                           (apply
                                                             (field_imm 4
                                                               (global Stdlib__Printf!))
                                                             buffer/2424
                                                             [0:
                                                              [12: '.' 0] "."])))))
                                                   0)
                                                 (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(587):15411-15520
                                                   (if (< i/2530 length/2512)
                                                     (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(587):15430-15520
                                                       (seq
                                                         (after Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(588):15444-15454
                                                           (apply
                                                             separate/2514 0))
                                                         (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(589):15464-15510
                                                           (after Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(589):15464-15510
                                                             (apply
                                                               (field_imm 4
                                                                 (global Stdlib__Printf!))
                                                               buffer/2424
                                                               [0:
                                                                [2: 0 0] "%s"]
                                                               (after Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(589):15491-15510
                                                                 (apply
                                                                   print/2417
                                                                   (after Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(589):15498-15509
                                                                    (array.get[addr]
                                                                    symbols/2511
                                                                    i/2530)))))))))
                                                     0)))))
                                           (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(592):15535-15599
                                             (let
                                               (s/2531 =
                                                  (after Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(592):15543-15565
                                                    (apply
                                                      (field_imm 1
                                                        (global Stdlib__Buffer!))
                                                      buffer/2424)))
                                               (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(593):15573-15599
                                                 (seq
                                                   (after Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(593):15573-15592
                                                     (apply
                                                       (field_imm 7
                                                         (global Stdlib__Buffer!))
                                                       buffer/2424))
                                                   (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(594):15598-15599
                                                     s/2531)))))))))))))))
                     printao/2532 =
                       (function offset/2534[int] symbols/2535
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Symbol.printao lib/grammarFunctor.ml(596)<ghost>:15615-15664
                           (before Gbnf_parser__GrammarFunctor.Make.Symbol.printao lib/grammarFunctor.ml(597):15636-15664
                             (after Gbnf_parser__GrammarFunctor.Make.Symbol.printao lib/grammarFunctor.ml(597):15636-15664
                               (apply printaod/2507 offset/2534 -1
                                 symbols/2535)))))
                     printa/2536 =
                       (function symbols/2538
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Symbol.printa lib/grammarFunctor.ml(599)<ghost>:15679-15710
                           (before Gbnf_parser__GrammarFunctor.Make.Symbol.printa lib/grammarFunctor.ml(600):15693-15710
                             (after Gbnf_parser__GrammarFunctor.Make.Symbol.printa lib/grammarFunctor.ml(600):15693-15710
                               (apply printao/2532 0 symbols/2538)))))
                     printl/2539 =
                       (function symbols/2541
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Symbol.printl lib/grammarFunctor.ml(602)<ghost>:15725-15769
                           (before Gbnf_parser__GrammarFunctor.Make.Symbol.printl lib/grammarFunctor.ml(603):15739-15769
                             (after Gbnf_parser__GrammarFunctor.Make.Symbol.printl lib/grammarFunctor.ml(603):15739-15769
                               (apply printa/2536
                                 (after Gbnf_parser__GrammarFunctor.Make.Symbol.printl lib/grammarFunctor.ml(603):15746-15769
                                   (apply
                                     (field_imm 9 (global Stdlib__Array!))
                                     symbols/2541)))))))
                     lookup/2542 =
                       (function name/2544
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Symbol.lookup lib/grammarFunctor.ml(605)<ghost>:15784-15942
                           (before Gbnf_parser__GrammarFunctor.Make.Symbol.lookup lib/grammarFunctor.ml(606):15795-15942
                             (try
                               (makeblock 1 (int)
                                 (after Gbnf_parser__GrammarFunctor.Make.Symbol.lookup lib/grammarFunctor.ml(607):15807-15829
                                   (apply (field_imm 7 Terminal/2246)
                                     name/2544)))
                              with exn/13662
                               (catch
                                 (if
                                   (== exn/13662
                                     (field_imm 7 (global Stdlib!)))
                                   (before Gbnf_parser__GrammarFunctor.Make.Symbol.lookup lib/grammarFunctor.ml(609):15858-15942
                                     (try
                                       (makeblock 0 (int)
                                         (after Gbnf_parser__GrammarFunctor.Make.Symbol.lookup lib/grammarFunctor.ml(610):15872-15897
                                           (apply
                                             (field_imm 11 Nonterminal/2057)
                                             name/2544)))
                                      with exn/13663
                                       (catch
                                         (if
                                           (== exn/13663
                                             (field_imm 7 (global Stdlib!)))
                                           (before Gbnf_parser__GrammarFunctor.Make.Symbol.lookup lib/grammarFunctor.ml(612):15930-15942
                                             (raise
                                               (after Gbnf_parser__GrammarFunctor.Make.Symbol.lookup lib/grammarFunctor.ml(612):15930-15942
                                                 (makeblock 0
                                                   (global Assert_failure/28!)
                                                   [0:
                                                    "lib/grammarFunctor.ml"
                                                    612 8]))))
                                           (exit 38))
                                        with (38) (reraise exn/13663))))
                                   (exit 39))
                                with (39) (reraise exn/13662)))))))
                    (pseudo Gbnf_parser__GrammarFunctor.Make.Symbol lib/grammarFunctor.ml(511):13821-16002
                      (makeblock 0 is_terminal/2392 compare/2395 equal/2402
                        lequal/2406 non_error/2413 print/2417
                        nonterminal/2421 buffer/2424 printaod/2507
                        printao/2532 printa/2536 printl/2539 lookup/2542)))))
            SymbolSet/2738 =
              (let
                (include/13664 =
                   (apply
                     (let (let/13665 = (field_imm 0 (global Stdlib__Set!)))
                       (field_imm 0 (global Stdlib__Set!)))
                     (makeblock 0 (field_mut 1 Symbol/2545)))
                 empty/2644 =a (field_mut 0 include/13664)
                 add/2645 =a (field_mut 1 include/13664)
                 singleton/2646 =a (field_mut 2 include/13664)
                 remove/2647 =a (field_mut 3 include/13664)
                 union/2648 =a (field_mut 4 include/13664)
                 inter/2649 =a (field_mut 5 include/13664)
                 disjoint/2650 =a (field_mut 6 include/13664)
                 diff/2651 =a (field_mut 7 include/13664)
                 cardinal/2652 =a (field_mut 8 include/13664)
                 elements/2653 =a (field_mut 9 include/13664)
                 min_elt/2654 =a (field_mut 10 include/13664)
                 min_elt_opt/2655 =a (field_mut 11 include/13664)
                 max_elt/2656 =a (field_mut 12 include/13664)
                 max_elt_opt/2657 =a (field_mut 13 include/13664)
                 choose/2658 =a (field_mut 14 include/13664)
                 choose_opt/2659 =a (field_mut 15 include/13664)
                 find/2660 =a (field_mut 16 include/13664)
                 find_opt/2661 =a (field_mut 17 include/13664)
                 find_first/2662 =a (field_mut 18 include/13664)
                 find_first_opt/2663 =a (field_mut 19 include/13664)
                 find_last/2664 =a (field_mut 20 include/13664)
                 find_last_opt/2665 =a (field_mut 21 include/13664)
                 iter/2666 =a (field_mut 22 include/13664)
                 fold/2667 =a (field_mut 23 include/13664)
                 map/2668 =a (field_mut 24 include/13664)
                 filter/2669 =a (field_mut 25 include/13664)
                 filter_map/2670 =a (field_mut 26 include/13664)
                 partition/2671 =a (field_mut 27 include/13664)
                 split/2672 =a (field_mut 28 include/13664)
                 is_empty/2673 =a (field_mut 29 include/13664)
                 mem/2674 =a (field_mut 30 include/13664)
                 equal/2675 =a (field_mut 31 include/13664)
                 compare/2676 =a (field_mut 32 include/13664)
                 subset/2677 =a (field_mut 33 include/13664)
                 for_all/2678 =a (field_mut 34 include/13664)
                 exists/2679 =a (field_mut 35 include/13664)
                 to_list/2680 =a (field_mut 36 include/13664)
                 of_list/2681 =a (field_mut 37 include/13664)
                 to_seq_from/2682 =a (field_mut 38 include/13664)
                 to_seq/2683 =a (field_mut 39 include/13664)
                 to_rev_seq/2684 =a (field_mut 40 include/13664)
                 add_seq/2685 =a (field_mut 41 include/13664)
                 of_seq/2686 =a (field_mut 42 include/13664)
                 print/2687 =
                   (function symbols/2688
                     (funct-body Gbnf_parser__GrammarFunctor.Make.SymbolSet.print lib/grammarFunctor.ml(622)<ghost>:16095-16141
                       (before Gbnf_parser__GrammarFunctor.Make.SymbolSet.print lib/grammarFunctor.ml(623):16109-16141
                         (after Gbnf_parser__GrammarFunctor.Make.SymbolSet.print lib/grammarFunctor.ml(623):16109-16141
                           (apply (field_imm 11 Symbol/2545)
                             (after Gbnf_parser__GrammarFunctor.Make.SymbolSet.print lib/grammarFunctor.ml(623):16123-16141
                               (apply elements/2653 symbols/2688)))))))
                 bottom/2735 = empty/2644
                 leq/2736 = subset/2677
                 join/2737 = union/2648)
                (pseudo Gbnf_parser__GrammarFunctor.Make.SymbolSet lib/grammarFunctor.ml(618):16047-16388
                  (makeblock 0 empty/2644 add/2645 singleton/2646 remove/2647
                    union/2648 inter/2649 disjoint/2650 diff/2651
                    cardinal/2652 elements/2653 min_elt/2654 min_elt_opt/2655
                    max_elt/2656 max_elt_opt/2657 choose/2658 choose_opt/2659
                    find/2660 find_opt/2661 find_first/2662
                    find_first_opt/2663 find_last/2664 find_last_opt/2665
                    iter/2666 fold/2667 map/2668 filter/2669 filter_map/2670
                    partition/2671 split/2672 is_empty/2673 mem/2674
                    equal/2675 compare/2676 subset/2677 for_all/2678
                    exists/2679 to_list/2680 of_list/2681 to_seq_from/2682
                    to_seq/2683 to_rev_seq/2684 add_seq/2685 of_seq/2686
                    print/2687 bottom/2735 leq/2736 join/2737)))
            SymbolMap/2943 =
              (let
                (include/13666 =
                   (apply
                     (let (let/13667 = (field_imm 0 (global Stdlib__Map!)))
                       (field_imm 0 (global Stdlib__Map!)))
                     (makeblock 0 (field_mut 1 Symbol/2545)))
                 empty/2837 =a (field_mut 0 include/13666)
                 add/2838 =a (field_mut 1 include/13666)
                 add_to_list/2839 =a (field_mut 2 include/13666)
                 update/2840 =a (field_mut 3 include/13666)
                 singleton/2841 =a (field_mut 4 include/13666)
                 remove/2842 =a (field_mut 5 include/13666)
                 merge/2843 =a (field_mut 6 include/13666)
                 union/2844 =a (field_mut 7 include/13666)
                 cardinal/2845 =a (field_mut 8 include/13666)
                 bindings/2846 =a (field_mut 9 include/13666)
                 min_binding/2847 =a (field_mut 10 include/13666)
                 min_binding_opt/2848 =a (field_mut 11 include/13666)
                 max_binding/2849 =a (field_mut 12 include/13666)
                 max_binding_opt/2850 =a (field_mut 13 include/13666)
                 choose/2851 =a (field_mut 14 include/13666)
                 choose_opt/2852 =a (field_mut 15 include/13666)
                 find/2853 =a (field_mut 16 include/13666)
                 find_opt/2854 =a (field_mut 17 include/13666)
                 find_first/2855 =a (field_mut 18 include/13666)
                 find_first_opt/2856 =a (field_mut 19 include/13666)
                 find_last/2857 =a (field_mut 20 include/13666)
                 find_last_opt/2858 =a (field_mut 21 include/13666)
                 iter/2859 =a (field_mut 22 include/13666)
                 fold/2860 =a (field_mut 23 include/13666)
                 map/2861 =a (field_mut 24 include/13666)
                 mapi/2862 =a (field_mut 25 include/13666)
                 filter/2863 =a (field_mut 26 include/13666)
                 filter_map/2864 =a (field_mut 27 include/13666)
                 partition/2865 =a (field_mut 28 include/13666)
                 split/2866 =a (field_mut 29 include/13666)
                 is_empty/2867 =a (field_mut 30 include/13666)
                 mem/2868 =a (field_mut 31 include/13666)
                 equal/2869 =a (field_mut 32 include/13666)
                 compare/2870 =a (field_mut 33 include/13666)
                 for_all/2871 =a (field_mut 34 include/13666)
                 exists/2872 =a (field_mut 35 include/13666)
                 to_list/2873 =a (field_mut 36 include/13666)
                 of_list/2874 =a (field_mut 37 include/13666)
                 to_seq/2875 =a (field_mut 38 include/13666)
                 to_rev_seq/2876 =a (field_mut 39 include/13666)
                 to_seq_from/2877 =a (field_mut 40 include/13666)
                 add_seq/2878 =a (field_mut 41 include/13666)
                 of_seq/2879 =a (field_mut 42 include/13666)
                 domain/2880 =
                   (function m/2882
                     (funct-body Gbnf_parser__GrammarFunctor.Make.SymbolMap.domain lib/grammarFunctor.ml(648)<ghost>:16484-16550
                       (before Gbnf_parser__GrammarFunctor.Make.SymbolMap.domain lib/grammarFunctor.ml(649):16492-16550
                         (after Gbnf_parser__GrammarFunctor.Make.SymbolMap.domain lib/grammarFunctor.ml(649):16492-16550
                           (apply fold/2860
                             (function symbol/2883 param/2885 accu/2884
                               (funct-body Gbnf_parser__GrammarFunctor.Make.SymbolMap.domain.(fun) lib/grammarFunctor.ml(649):16497-16545
                                 (before Gbnf_parser__GrammarFunctor.Make.SymbolMap.domain.(fun) lib/grammarFunctor.ml(650):16525-16539
                                   (makeblock 0 symbol/2883 accu/2884))))
                             m/2882 0)))))
                 init/2931 =
                   (function f/2933 xs/2934
                     (funct-body Gbnf_parser__GrammarFunctor.Make.SymbolMap.init lib/grammarFunctor.ml(653)<ghost>:16563-16641
                       (before Gbnf_parser__GrammarFunctor.Make.SymbolMap.init lib/grammarFunctor.ml(654):16574-16641
                         (after Gbnf_parser__GrammarFunctor.Make.SymbolMap.init lib/grammarFunctor.ml(654):16574-16641
                           (apply (field_imm 25 (global Stdlib__List!))
                             (function accu/2935 x/2936
                               (funct-body Gbnf_parser__GrammarFunctor.Make.SymbolMap.init.(fun) lib/grammarFunctor.ml(654):16589-16632
                                 (before Gbnf_parser__GrammarFunctor.Make.SymbolMap.init.(fun) lib/grammarFunctor.ml(655):16610-16626
                                   (after Gbnf_parser__GrammarFunctor.Make.SymbolMap.init.(fun) lib/grammarFunctor.ml(655):16610-16626
                                     (apply add/2838 x/2936
                                       (after Gbnf_parser__GrammarFunctor.Make.SymbolMap.init.(fun) lib/grammarFunctor.ml(655):16616-16621
                                         (apply f/2933 x/2936))
                                       accu/2935)))))
                             empty/2837 xs/2934)))))
                 purelynonterminal/2937 =
                   (function m/2939 : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.SymbolMap.purelynonterminal lib/grammarFunctor.ml(658)<ghost>:16667-16754
                       (before Gbnf_parser__GrammarFunctor.Make.SymbolMap.purelynonterminal lib/grammarFunctor.ml(659):16675-16754
                         (after Gbnf_parser__GrammarFunctor.Make.SymbolMap.purelynonterminal lib/grammarFunctor.ml(659):16675-16754
                           (apply fold/2860
                             (function symbol/2940 param/2942 accu/2941[int]
                               : int
                               (funct-body Gbnf_parser__GrammarFunctor.Make.SymbolMap.purelynonterminal.(fun) lib/grammarFunctor.ml(659):16680-16747
                                 (before Gbnf_parser__GrammarFunctor.Make.SymbolMap.purelynonterminal.(fun) lib/grammarFunctor.ml(660):16708-16741
                                   (&& accu/2941
                                     (after Gbnf_parser__GrammarFunctor.Make.SymbolMap.purelynonterminal.(fun) lib/grammarFunctor.ml(660):16716-16741
                                       (apply (field_imm 6 Symbol/2545)
                                         symbol/2940))))))
                             m/2939 1))))))
                (pseudo Gbnf_parser__GrammarFunctor.Make.SymbolMap lib/grammarFunctor.ml(644):16435-16759
                  (makeblock 0 empty/2837 add/2838 add_to_list/2839
                    update/2840 singleton/2841 remove/2842 merge/2843
                    union/2844 cardinal/2845 bindings/2846 min_binding/2847
                    min_binding_opt/2848 max_binding/2849
                    max_binding_opt/2850 choose/2851 choose_opt/2852
                    find/2853 find_opt/2854 find_first/2855
                    find_first_opt/2856 find_last/2857 find_last_opt/2858
                    iter/2859 fold/2860 map/2861 mapi/2862 filter/2863
                    filter_map/2864 partition/2865 split/2866 is_empty/2867
                    mem/2868 equal/2869 compare/2870 for_all/2871 exists/2872
                    to_list/2873 of_list/2874 to_seq/2875 to_rev_seq/2876
                    to_seq_from/2877 add_seq/2878 of_seq/2879 domain/2880
                    init/2931 purelynonterminal/2937)))
            Production/3564 =
              (let
                (compare/2945 =
                   (function prim/13669 prim/13668 stub
                     (- prim/13669 prim/13668))
                 n/2946 =
                   (let
                     (n/2947 =[int]
                        (after Gbnf_parser__GrammarFunctor.Make.Production.n lib/grammarFunctor.ml(683):17174-17280
                          (apply
                            (field_imm 22 (global Gbnf_parser__StringMap!))
                            (function param/2951 param/2950 n/2949[int] : int
                              (funct-body Gbnf_parser__GrammarFunctor.Make.Production.n.(fun) lib/grammarFunctor.ml(683):17189-17264
                                (let
                                  (*match*/13672 =a (field_imm 3 param/2950)
                                   *match*/13671 =a (field_int 2 param/2950)
                                   *match*/13670 =a (field_imm 1 param/2950)
                                   branches/2948 =a (field_imm 0 param/2950))
                                  (before Gbnf_parser__GrammarFunctor.Make.Production.n.(fun) lib/grammarFunctor.ml(684):17234-17258
                                    (+ n/2949
                                      (after Gbnf_parser__GrammarFunctor.Make.Production.n.(fun) lib/grammarFunctor.ml(684):17238-17258
                                        (apply
                                          (field_imm 0
                                            (global Stdlib__List!))
                                          branches/2948)))))))
                            (field_imm 8 (field_imm 0 G/1226)) 0)))
                     (before Gbnf_parser__GrammarFunctor.Make.Production.n lib/grammarFunctor.ml(688):17402-17446
                       (+ n/2947
                         (after Gbnf_parser__GrammarFunctor.Make.Production.n lib/grammarFunctor.ml(688):17406-17446
                           (apply
                             (field_imm 8 (global Gbnf_parser__StringSet!))
                             (field_imm 3 (field_imm 0 G/1226)))))))
                 p2i/2952 =
                   (function prod/2954
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Production.p2i lib/grammarFunctor.ml(690)<ghost>:17458-17473
                       (before Gbnf_parser__GrammarFunctor.Make.Production.p2i lib/grammarFunctor.ml(691):17469-17473
                         prod/2954)))
                 i2p/2955 =
                   (function prod/2957[int] : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Production.i2p lib/grammarFunctor.ml(693)<ghost>:17485-17536
                       (before Gbnf_parser__GrammarFunctor.Make.Production.i2p lib/grammarFunctor.ml(694):17496-17536
                         (seq
                           (if (&& (>= prod/2957 0) (< prod/2957 n/2946)) 0
                             (raise
                               (after Gbnf_parser__GrammarFunctor.Make.Production.i2p lib/grammarFunctor.ml(694):17496-17526
                                 (makeblock 0 (global Assert_failure/28!)
                                   [0: "lib/grammarFunctor.ml" 694 4]))))
                           (before Gbnf_parser__GrammarFunctor.Make.Production.i2p lib/grammarFunctor.ml(695):17532-17536
                             prod/2957)))))
                 table/2958 =
                   (after Gbnf_parser__GrammarFunctor.Make.Production.table lib/grammarFunctor.ml(712):18456-18479
                     (caml_make_vect n/2946
                       (makeblock 0 (int,*) -1 (makearray[addr]))))
                 identifiers/2959 =
                   (after Gbnf_parser__GrammarFunctor.Make.Production.identifiers lib/grammarFunctor.ml(715):18530-18547
                     (caml_make_vect n/2946 (makearray[addr])))
                 actions/2960 =
                   (after Gbnf_parser__GrammarFunctor.Make.Production.actions lib/grammarFunctor.ml(718):18591-18608
                     (caml_make_vect n/2946 0))
                 positions/2961 =
                   (after Gbnf_parser__GrammarFunctor.Make.Production.positions lib/grammarFunctor.ml(721):18657-18672
                     (caml_make_vect n/2946 0))
                 rhs_attributes/2962 =
                   (after Gbnf_parser__GrammarFunctor.Make.Production.rhs_attributes lib/grammarFunctor.ml(724):18733-18750
                     (caml_make_vect n/2946 (makearray[addr])))
                 prec_decl/2963 =
                   (after Gbnf_parser__GrammarFunctor.Make.Production.prec_decl lib/grammarFunctor.ml(727):18804-18821
                     (caml_make_vect n/2946 0))
                 production_level/2999 =
                   (let
                     (dummy/3000 =
                        (makeblock 0 (*,int)
                          (field_imm 0 (global Gbnf_parser__InputFile!)) 0))
                     (before Gbnf_parser__GrammarFunctor.Make.Production.production_level lib/grammarFunctor.ml(734):19163-19181
                       (after Gbnf_parser__GrammarFunctor.Make.Production.production_level lib/grammarFunctor.ml(734):19163-19181
                         (caml_make_vect n/2946 dummy/3000))))
                 ntprods/3015 =
                   (after Gbnf_parser__GrammarFunctor.Make.Production.ntprods lib/grammarFunctor.ml(739):19304-19337
                     (caml_make_vect (field_imm 6 Nonterminal/2057)
                       [0: -1 -1]))
                 grammar_uses_error_token/3016 = (makemutable 0 (int) 0)
                 *match*/13736 =
                   (after Gbnf_parser__GrammarFunctor.Make.Production.start lib/grammarFunctor.ml(753):19826-20250
                     (apply (field_imm 23 (global Gbnf_parser__StringSet!))
                       (function nonterminal/3019 param/3163
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(753):19841-20202
                           (let
                             (startprods/3021 =a (field_imm 1 param/3163)
                              k/3020 =a (field_imm 0 param/3163))
                             (before Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(754):19883-20196
                               (let
                                 (nt/3022 =[int]
                                    (after Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(754):19892-19922
                                      (apply (field_imm 11 Nonterminal/2057)
                                        nonterminal/3019))
                                  nt'/3023 =[int]
                                    (after Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(755):19939-19977
                                      (apply (field_imm 11 Nonterminal/2057)
                                        (after Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(755):19958-19977
                                          (apply
                                            (field_imm 27 (global Stdlib!))
                                            nonterminal/3019 "'")))))
                                 (before Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(756):19987-20196
                                   (seq
                                     (after Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(756):19987-20024
                                       (array.set[addr] table/2958 k/3020
                                         (makeblock 0 (int,*) nt'/3023
                                           (makearray[addr]
                                             (makeblock 0 (int) nt/3022)))))
                                     (before Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(757):20032-20196
                                       (seq
                                         (after Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(757):20032-20061
                                           (array.set[addr] identifiers/2959
                                             k/3020 (makearray[addr] "_1")))
                                         (before Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(758):20069-20196
                                           (seq
                                             (after Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(758):20069-20094
                                               (array.set[addr] ntprods/3015
                                                 nt'/3023
                                                 (makeblock 0 (int,int)
                                                   k/3020 (+ k/3020 1))))
                                             (before Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(759):20102-20196
                                               (seq
                                                 (after Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(759):20102-20143
                                                   (array.set[addr]
                                                     positions/2961 k/3020
                                                     (after Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(759):20119-20143
                                                       (apply
                                                         (field_imm 12
                                                           Nonterminal/2057)
                                                         nt/3022))))
                                                 (before Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(760):20151-20196
                                                   (makeblock 0 (int,*)
                                                     (+ k/3020 1)
                                                     (after Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(761):20162-20196
                                                       (apply
                                                         (field_imm 11
                                                           (field_imm 3
                                                             (global Gbnf_parser__Patricia!)))
                                                         nt/3022 k/3020
                                                         startprods/3021)))))))))))))))))
                       (field_imm 3 (field_imm 0 G/1226))
                       (makeblock 0 (int,*) 0
                         (field_imm 0
                           (field_imm 3 (global Gbnf_parser__Patricia!))))))
                 startprods/3018 =a (field_imm 1 *match*/13736)
                 start/3017 =a (field_imm 0 *match*/13736)
                 producer_symbol/3164 =
                   (function producer/3165
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Production.producer_symbol lib/grammarFunctor.ml(766)<ghost>:20346-20401
                       (before Gbnf_parser__GrammarFunctor.Make.Production.producer_symbol lib/grammarFunctor.ml(767):20361-20401
                         (after Gbnf_parser__GrammarFunctor.Make.Production.producer_symbol lib/grammarFunctor.ml(767):20361-20401
                           (apply (field_imm 12 Symbol/2545)
                             (after Gbnf_parser__GrammarFunctor.Make.Production.producer_symbol lib/grammarFunctor.ml(767):20375-20401
                               (apply
                                 (field_imm 2
                                   (global Gbnf_parser__BasicSyntax!))
                                 producer/3165))))))))
                (seq
                  (after Gbnf_parser__GrammarFunctor.Make.Production lib/grammarFunctor.ml(769):20421-21237
                    (apply (field_imm 22 (global Gbnf_parser__StringMap!))
                      (function nonterminal/3166 param/3304 k/3168[int] : int
                        (funct-body Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(769):20436-21217
                          (let
                            (*match*/13675 =a (field_imm 3 param/3304)
                             *match*/13674 =a (field_int 2 param/3304)
                             *match*/13673 =a (field_imm 1 param/3304)
                             branches/3167 =a (field_imm 0 param/3304))
                            (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(770):20478-21213
                              (let
                                (nt/3169 =[int]
                                   (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(770):20487-20517
                                     (apply (field_imm 11 Nonterminal/2057)
                                       nonterminal/3166)))
                                (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(771):20525-21213
                                  (let
                                    (k'/3170 =[int]
                                       (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(771):20534-21174
                                         (apply
                                           (field_imm 25
                                             (global Stdlib__List!))
                                           (function k/3171[int] branch/3172
                                             : int
                                             (funct-body Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(771):20549-21163
                                               (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(772):20572-21157
                                                 (let
                                                   (producers/3173 =
                                                      (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(772):20588-20618
                                                        (apply
                                                          (field_imm 9
                                                            (global Stdlib__Array!))
                                                          (field_imm 1
                                                            branch/3172))))
                                                   (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(773):20628-21157
                                                     (let
                                                       (rhs/3174 =
                                                          (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(773):20638-20673
                                                            (apply
                                                              (field_imm 12
                                                                (global Stdlib__Array!))
                                                              producer_symbol/3164
                                                              producers/3173)))
                                                       (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(774):20683-21157
                                                         (seq
                                                           (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(774):20683-20705
                                                             (array.set[addr]
                                                               table/2958
                                                               k/3171
                                                               (makeblock 0 (int,*)
                                                                 nt/3169
                                                                 rhs/3174)))
                                                           (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(775):20713-21157
                                                             (seq
                                                               (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(775):20713-20771
                                                                 (array.set[addr]
                                                                   identifiers/2959
                                                                   k/3171
                                                                   (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(775):20732-20771
                                                                    (apply
                                                                    (field_imm 12
                                                                    (global Stdlib__Array!))
                                                                    (field_imm 0
                                                                    (global Gbnf_parser__BasicSyntax!))
                                                                    producers/3173))))
                                                               (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(776):20779-21157
                                                                 (seq
                                                                   (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(776):20779-20812
                                                                    (array.set[addr]
                                                                    actions/2960
                                                                    k/3171
                                                                    (makeblock 0
                                                                    (field_imm 2
                                                                    branch/3172))))
                                                                   (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(777):20820-21157
                                                                    (seq
                                                                    (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(777):20820-20881
                                                                    (array.set[addr]
                                                                    rhs_attributes/2962
                                                                    k/3171
                                                                    (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(777):20842-20881
                                                                    (apply
                                                                    (field_imm 12
                                                                    (global Stdlib__Array!))
                                                                    (field_imm 3
                                                                    (global Gbnf_parser__BasicSyntax!))
                                                                    producers/3173))))
                                                                    (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(778):20889-21157
                                                                    (seq
                                                                    (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(778):20889-20943
                                                                    (array.set[addr]
                                                                    production_level/2999
                                                                    k/3171
                                                                    (field_imm 4
                                                                    branch/3172)))
                                                                    (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(779):20951-21157
                                                                    (seq
                                                                    (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(779):20951-20997
                                                                    (array.set[addr]
                                                                    prec_decl/2963
                                                                    k/3171
                                                                    (field_imm 3
                                                                    branch/3172)))
                                                                    (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(780):21005-21157
                                                                    (seq
                                                                    (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(780):21005-21048
                                                                    (array.set[addr]
                                                                    positions/2961
                                                                    k/3171
                                                                    (makeblock 0
                                                                    (field_imm 0
                                                                    branch/3172)
                                                                    0)))
                                                                    (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(781):21056-21157
                                                                    (seq
                                                                    (if
                                                                    (not
                                                                    (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(781):21063-21100
                                                                    (apply
                                                                    (field_imm 52
                                                                    (global Gbnf_parser__MArray!))
                                                                    (field_imm 4
                                                                    Symbol/2545)
                                                                    rhs/3174)))
                                                                    (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(782):21114-21146
                                                                    (setfield_imm 0
                                                                    grammar_uses_error_token/3016
                                                                    1)) 0)
                                                                    (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(783):21154-21157
                                                                    (+ k/3171
                                                                    1))))))))))))))))))))))))
                                           k/3168 branches/3167)))
                                    (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(785):21182-21213
                                      (seq
                                        (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(785):21182-21205
                                          (array.set[addr] ntprods/3015
                                            nt/3169
                                            (makeblock 0 (int,int) k/3168
                                              k'/3170)))
                                        (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(786):21211-21213
                                          k'/3170))))))))))
                      (field_imm 8 (field_imm 0 G/1226)) start/3017))
                  (let
                    (iternt/3305 =
                       (function nt/3307[int] f/3308 : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.iternt lib/grammarFunctor.ml(791)<ghost>:21332-21393
                           (before Gbnf_parser__GrammarFunctor.Make.Production.iternt lib/grammarFunctor.ml(792):21343-21393
                             (let
                               (*match*/13679 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Production.iternt lib/grammarFunctor.ml(792):21355-21367
                                    (array.get[addr] ntprods/3015 nt/3307))
                                k'/3310 =a (field_imm 1 *match*/13679)
                                k/3309 =a (field_imm 0 *match*/13679))
                               (before Gbnf_parser__GrammarFunctor.Make.Production.iternt lib/grammarFunctor.ml(793):21375-21393
                                 (after Gbnf_parser__GrammarFunctor.Make.Production.iternt lib/grammarFunctor.ml(793):21375-21393
                                   (apply
                                     (field_imm 10
                                       (global Gbnf_parser__Misc!))
                                     k/3309 k'/3310 f/3308)))))))
                     foldnt/3311 =
                       (function nt/3313[int] f/3314 accu/3315
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.foldnt lib/grammarFunctor.ml(795)<ghost>:21408-21479
                           (before Gbnf_parser__GrammarFunctor.Make.Production.foldnt lib/grammarFunctor.ml(796):21424-21479
                             (let
                               (*match*/13683 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Production.foldnt lib/grammarFunctor.ml(796):21436-21448
                                    (array.get[addr] ntprods/3015 nt/3313))
                                k'/3317 =a (field_imm 1 *match*/13683)
                                k/3316 =a (field_imm 0 *match*/13683))
                               (before Gbnf_parser__GrammarFunctor.Make.Production.foldnt lib/grammarFunctor.ml(797):21456-21479
                                 (after Gbnf_parser__GrammarFunctor.Make.Production.foldnt lib/grammarFunctor.ml(797):21456-21479
                                   (apply
                                     (field_imm 12
                                       (global Gbnf_parser__Misc!))
                                     k/3316 k'/3317 f/3314 accu/3315)))))))
                     mapnt/3318 =
                       (function nt/3320[int] f/3321
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.mapnt lib/grammarFunctor.ml(799)<ghost>:21493-21553
                           (before Gbnf_parser__GrammarFunctor.Make.Production.mapnt lib/grammarFunctor.ml(800):21504-21553
                             (let
                               (*match*/13687 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Production.mapnt lib/grammarFunctor.ml(800):21516-21528
                                    (array.get[addr] ntprods/3015 nt/3320))
                                k'/3323 =a (field_imm 1 *match*/13687)
                                k/3322 =a (field_imm 0 *match*/13687))
                               (before Gbnf_parser__GrammarFunctor.Make.Production.mapnt lib/grammarFunctor.ml(801):21536-21553
                                 (after Gbnf_parser__GrammarFunctor.Make.Production.mapnt lib/grammarFunctor.ml(801):21536-21553
                                   (apply
                                     (field_imm 15
                                       (global Gbnf_parser__Misc!))
                                     k/3322 k'/3323 f/3321)))))))
                     foldnt_lazy/3324 =
                       (function nt/3326[int] f/3327 accu/3328
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.foldnt_lazy lib/grammarFunctor.ml(803)<ghost>:21573-21649
                           (before Gbnf_parser__GrammarFunctor.Make.Production.foldnt_lazy lib/grammarFunctor.ml(804):21589-21649
                             (let
                               (*match*/13691 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Production.foldnt_lazy lib/grammarFunctor.ml(804):21601-21613
                                    (array.get[addr] ntprods/3015 nt/3326))
                                k'/3330 =a (field_imm 1 *match*/13691)
                                k/3329 =a (field_imm 0 *match*/13691))
                               (before Gbnf_parser__GrammarFunctor.Make.Production.foldnt_lazy lib/grammarFunctor.ml(805):21621-21649
                                 (after Gbnf_parser__GrammarFunctor.Make.Production.foldnt_lazy lib/grammarFunctor.ml(805):21621-21649
                                   (apply
                                     (field_imm 14
                                       (global Gbnf_parser__Misc!))
                                     k/3329 k'/3330 f/3327 accu/3328)))))))
                     def/3331 =
                       (function prod/3333[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.def lib/grammarFunctor.ml(809)<ghost>:21681-21704
                           (before Gbnf_parser__GrammarFunctor.Make.Production.def lib/grammarFunctor.ml(810):21692-21704
                             (after Gbnf_parser__GrammarFunctor.Make.Production.def lib/grammarFunctor.ml(810):21692-21704
                               (array.get[addr] table/2958 prod/3333)))))
                     nt/3334 =
                       (function prod/3336[int] : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.nt lib/grammarFunctor.ml(812)<ghost>:21715-21760
                           (before Gbnf_parser__GrammarFunctor.Make.Production.nt lib/grammarFunctor.ml(813):21726-21760
                             (let
                               (*match*/13695 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Production.nt lib/grammarFunctor.ml(813):21738-21750
                                    (array.get[addr] table/2958 prod/3336))
                                *match*/13696 =a (field_imm 1 *match*/13695)
                                nt/3337 =a (field_imm 0 *match*/13695))
                               (before Gbnf_parser__GrammarFunctor.Make.Production.nt lib/grammarFunctor.ml(814):21758-21760
                                 nt/3337)))))
                     rhs/3338 =
                       (function prod/3340[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.rhs lib/grammarFunctor.ml(816)<ghost>:21772-21819
                           (before Gbnf_parser__GrammarFunctor.Make.Production.rhs lib/grammarFunctor.ml(817):21783-21819
                             (let
                               (*match*/13700 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Production.rhs lib/grammarFunctor.ml(817):21796-21808
                                    (array.get[addr] table/2958 prod/3340))
                                rhs/3341 =a (field_imm 1 *match*/13700)
                                *match*/13701 =a (field_imm 0 *match*/13700))
                               (before Gbnf_parser__GrammarFunctor.Make.Production.rhs lib/grammarFunctor.ml(818):21816-21819
                                 rhs/3341)))))
                     length/3342 =
                       (function prod/3344[int] : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.length lib/grammarFunctor.ml(820)<ghost>:21834-21868
                           (before Gbnf_parser__GrammarFunctor.Make.Production.length lib/grammarFunctor.ml(821):21845-21868
                             (array.length[addr]
                               (after Gbnf_parser__GrammarFunctor.Make.Production.length lib/grammarFunctor.ml(821):21858-21868
                                 (apply rhs/3338 prod/3344))))))
                     identifiers/3345 =
                       (function prod/3346[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.identifiers lib/grammarFunctor.ml(823)<ghost>:21888-21917
                           (before Gbnf_parser__GrammarFunctor.Make.Production.identifiers lib/grammarFunctor.ml(824):21899-21917
                             (after Gbnf_parser__GrammarFunctor.Make.Production.identifiers lib/grammarFunctor.ml(824):21899-21917
                               (array.get[addr] identifiers/2959 prod/3346)))))
                     is_start/3347 =
                       (function prod/3349[int] : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.is_start lib/grammarFunctor.ml(826)<ghost>:21934-21957
                           (before Gbnf_parser__GrammarFunctor.Make.Production.is_start lib/grammarFunctor.ml(827):21945-21957
                             (< prod/3349 start/3017))))
                     classify/3350 =
                       (function prod/3352[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.classify lib/grammarFunctor.ml(829)<ghost>:21974-22144
                           (before Gbnf_parser__GrammarFunctor.Make.Production.classify lib/grammarFunctor.ml(830):21985-22144
                             (if
                               (after Gbnf_parser__GrammarFunctor.Make.Production.classify lib/grammarFunctor.ml(830):21988-22001
                                 (apply is_start/3347 prod/3352))
                               (before Gbnf_parser__GrammarFunctor.Make.Production.classify lib/grammarFunctor.ml(831):22013-22124
                                 (let
                                   (*match*/13702 =
                                      (after Gbnf_parser__GrammarFunctor.Make.Production.classify lib/grammarFunctor.ml(831):22019-22033
                                        (array.get[addr]
                                          (after Gbnf_parser__GrammarFunctor.Make.Production.classify lib/grammarFunctor.ml(831):22019-22029
                                            (apply rhs/3338 prod/3352))
                                          0)))
                                   (switch* *match*/13702
                                    case tag 0:
                                     (let
                                       (nt/3353 =a
                                          (field_imm 0 *match*/13702))
                                       (before Gbnf_parser__GrammarFunctor.Make.Production.classify lib/grammarFunctor.ml(833):22072-22079
                                         (makeblock 0 (int) nt/3353)))
                                    case tag 1:
                                     (let
                                       (*match*/13703 =a
                                          (field_imm 0 *match*/13702))
                                       (before Gbnf_parser__GrammarFunctor.Make.Production.classify lib/grammarFunctor.ml(835):22112-22124
                                         (raise
                                           (after Gbnf_parser__GrammarFunctor.Make.Production.classify lib/grammarFunctor.ml(835):22112-22124
                                             (makeblock 0
                                               (global Assert_failure/28!)
                                               [0:
                                                "lib/grammarFunctor.ml" 835
                                                10]))))))))
                               (before Gbnf_parser__GrammarFunctor.Make.Production.classify lib/grammarFunctor.ml(837):22140-22144
                                 0)))))
                     action/3354 =
                       (function prod/3356[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.action lib/grammarFunctor.ml(839)<ghost>:22159-22346
                           (before Gbnf_parser__GrammarFunctor.Make.Production.action lib/grammarFunctor.ml(840):22170-22346
                             (let
                               (*match*/13704 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Production.action lib/grammarFunctor.ml(840):22176-22190
                                    (array.get[addr] actions/2960 prod/3356)))
                               (if *match*/13704
                                 (let
                                   (action/3357 =a
                                      (field_imm 0 *match*/13704))
                                   (before Gbnf_parser__GrammarFunctor.Make.Production.action lib/grammarFunctor.ml(842):22225-22231
                                     action/3357))
                                 (before Gbnf_parser__GrammarFunctor.Make.Production.action lib/grammarFunctor.ml(845):22302-22346
                                   (seq
                                     (if
                                       (after Gbnf_parser__GrammarFunctor.Make.Production.action lib/grammarFunctor.ml(845):22309-22324
                                         (apply is_start/3347 prod/3356))
                                       0
                                       (raise
                                         (after Gbnf_parser__GrammarFunctor.Make.Production.action lib/grammarFunctor.ml(845):22302-22324
                                           (makeblock 0
                                             (global Assert_failure/28!)
                                             [0:
                                              "lib/grammarFunctor.ml" 845 8]))))
                                     (before Gbnf_parser__GrammarFunctor.Make.Production.action lib/grammarFunctor.ml(846):22334-22346
                                       (raise
                                         (after Gbnf_parser__GrammarFunctor.Make.Production.action lib/grammarFunctor.ml(846):22334-22346
                                           (makeblock 0
                                             (global Assert_failure/28!)
                                             [0:
                                              "lib/grammarFunctor.ml" 846 8])))))))))))
                     positions/3358 =
                       (function prod/3359[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.positions lib/grammarFunctor.ml(848)<ghost>:22364-22391
                           (before Gbnf_parser__GrammarFunctor.Make.Production.positions lib/grammarFunctor.ml(849):22375-22391
                             (after Gbnf_parser__GrammarFunctor.Make.Production.positions lib/grammarFunctor.ml(849):22375-22391
                               (array.get[addr] positions/2961 prod/3359)))))
                     lhs_attributes/3360 =
                       (function prod/3362[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.lhs_attributes lib/grammarFunctor.ml(851)<ghost>:22414-22457
                           (before Gbnf_parser__GrammarFunctor.Make.Production.lhs_attributes lib/grammarFunctor.ml(852):22425-22457
                             (after Gbnf_parser__GrammarFunctor.Make.Production.lhs_attributes lib/grammarFunctor.ml(852):22425-22457
                               (apply (field_imm 22 Nonterminal/2057)
                                 (after Gbnf_parser__GrammarFunctor.Make.Production.lhs_attributes lib/grammarFunctor.ml(852):22448-22457
                                   (apply nt/3334 prod/3362)))))))
                     rhs_attributes/3363 =
                       (function prod/3364[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.rhs_attributes lib/grammarFunctor.ml(854)<ghost>:22480-22512
                           (before Gbnf_parser__GrammarFunctor.Make.Production.rhs_attributes lib/grammarFunctor.ml(855):22491-22512
                             (after Gbnf_parser__GrammarFunctor.Make.Production.rhs_attributes lib/grammarFunctor.ml(855):22491-22512
                               (array.get[addr] rhs_attributes/2962
                                 prod/3364)))))
                     startsymbol2startprod/3365 =
                       (function nt/3367[int] : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.startsymbol2startprod lib/grammarFunctor.ml(857)<ghost>:22542-22635
                           (before Gbnf_parser__GrammarFunctor.Make.Production.startsymbol2startprod lib/grammarFunctor.ml(858):22551-22635
                             (try
                               (after Gbnf_parser__GrammarFunctor.Make.Production.startsymbol2startprod lib/grammarFunctor.ml(859):22561-22594
                                 (apply
                                   (field_imm 3
                                     (field_imm 3
                                       (global Gbnf_parser__Patricia!)))
                                   nt/3367 startprods/3018))
                              with exn/13705
                               (catch
                                 (if
                                   (== exn/13705
                                     (field_imm 7 (global Stdlib!)))
                                   (before Gbnf_parser__GrammarFunctor.Make.Production.startsymbol2startprod lib/grammarFunctor.ml(861):22623-22635
                                     (raise
                                       (after Gbnf_parser__GrammarFunctor.Make.Production.startsymbol2startprod lib/grammarFunctor.ml(861):22623-22635
                                         (makeblock 0
                                           (global Assert_failure/28!)
                                           [0: "lib/grammarFunctor.ml" 861 6]))))
                                   (exit 58))
                                with (58) (reraise exn/13705))))))
                     error_free/3368 =
                       (function prod/3370[int] : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.error_free lib/grammarFunctor.ml(863)<ghost>:22687-22740
                           (before Gbnf_parser__GrammarFunctor.Make.Production.error_free lib/grammarFunctor.ml(864):22698-22740
                             (after Gbnf_parser__GrammarFunctor.Make.Production.error_free lib/grammarFunctor.ml(864):22698-22740
                               (apply
                                 (field_imm 52 (global Gbnf_parser__MArray!))
                                 (field_imm 4 Symbol/2545)
                                 (after Gbnf_parser__GrammarFunctor.Make.Production.error_free lib/grammarFunctor.ml(864):22730-22740
                                   (apply rhs/3338 prod/3370)))))))
                     init/3371 =
                       (function f/3373
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.init lib/grammarFunctor.ml(868)<ghost>:22773-22795
                           (before Gbnf_parser__GrammarFunctor.Make.Production.init lib/grammarFunctor.ml(869):22781-22795
                             (after Gbnf_parser__GrammarFunctor.Make.Production.init lib/grammarFunctor.ml(869):22781-22795
                               (apply (field_imm 0 (global Stdlib__Array!))
                                 n/2946 f/3373)))))
                     iter/3374 =
                       (function f/3375 : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.iter lib/grammarFunctor.ml(871)<ghost>:22808-22830
                           (before Gbnf_parser__GrammarFunctor.Make.Production.iter lib/grammarFunctor.ml(872):22816-22830
                             (after Gbnf_parser__GrammarFunctor.Make.Production.iter lib/grammarFunctor.ml(872):22816-22830
                               (apply
                                 (field_imm 11 (global Gbnf_parser__Misc!))
                                 n/2946 f/3375)))))
                     fold/3376 =
                       (function f/3378 accu/3379
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.fold lib/grammarFunctor.ml(874)<ghost>:22843-22875
                           (before Gbnf_parser__GrammarFunctor.Make.Production.fold lib/grammarFunctor.ml(875):22856-22875
                             (after Gbnf_parser__GrammarFunctor.Make.Production.fold lib/grammarFunctor.ml(875):22856-22875
                               (apply
                                 (field_imm 13 (global Gbnf_parser__Misc!))
                                 n/2946 f/3378 accu/3379)))))
                     map/3380 =
                       (function f/3381
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.map lib/grammarFunctor.ml(877)<ghost>:22887-22908
                           (before Gbnf_parser__GrammarFunctor.Make.Production.map lib/grammarFunctor.ml(878):22895-22908
                             (after Gbnf_parser__GrammarFunctor.Make.Production.map lib/grammarFunctor.ml(878):22895-22908
                               (apply
                                 (field_imm 16 (global Gbnf_parser__Misc!))
                                 n/2946 f/3381)))))
                     amap/3382 =
                       (function f/3384
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.amap lib/grammarFunctor.ml(880)<ghost>:22921-22943
                           (before Gbnf_parser__GrammarFunctor.Make.Production.amap lib/grammarFunctor.ml(881):22929-22943
                             (after Gbnf_parser__GrammarFunctor.Make.Production.amap lib/grammarFunctor.ml(881):22929-22943
                               (apply (field_imm 0 (global Stdlib__Array!))
                                 n/2946 f/3384)))))
                     iterx/3385 =
                       (function f/3387 : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.iterx lib/grammarFunctor.ml(883)<ghost>:22957-23015
                           (before Gbnf_parser__GrammarFunctor.Make.Production.iterx lib/grammarFunctor.ml(884):22965-23015
                             (for prod/3388 start/3017 to (- n/2946 1)
                               (before Gbnf_parser__GrammarFunctor.Make.Production.iterx lib/grammarFunctor.ml(885):23000-23006
                                 (after Gbnf_parser__GrammarFunctor.Make.Production.iterx lib/grammarFunctor.ml(885):23000-23006
                                   (apply f/3387 prod/3388)))))))
                     foldx/3389 =
                       (function f/3391 accu/3392
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.foldx lib/grammarFunctor.ml(888)<ghost>:23029-23068
                           (before Gbnf_parser__GrammarFunctor.Make.Production.foldx lib/grammarFunctor.ml(889):23042-23068
                             (after Gbnf_parser__GrammarFunctor.Make.Production.foldx lib/grammarFunctor.ml(889):23042-23068
                               (apply
                                 (field_imm 12 (global Gbnf_parser__Misc!))
                                 start/3017 n/2946 f/3391 accu/3392)))))
                     mapx/3393 =
                       (function f/3395
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.mapx lib/grammarFunctor.ml(891)<ghost>:23081-23109
                           (before Gbnf_parser__GrammarFunctor.Make.Production.mapx lib/grammarFunctor.ml(892):23089-23109
                             (after Gbnf_parser__GrammarFunctor.Make.Production.mapx lib/grammarFunctor.ml(892):23089-23109
                               (apply
                                 (field_imm 15 (global Gbnf_parser__Misc!))
                                 start/3017 n/2946 f/3395)))))
                     print/3396 =
                       (function prod/3397[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.print lib/grammarFunctor.ml(896)<ghost>:23155-23459
                           (before Gbnf_parser__GrammarFunctor.Make.Production.print lib/grammarFunctor.ml(897):23166-23459
                             (seq
                               (if
                                 (not
                                   (after Gbnf_parser__GrammarFunctor.Make.Production.print lib/grammarFunctor.ml(897):23178-23193
                                     (apply is_start/3347 prod/3397)))
                                 0
                                 (raise
                                   (after Gbnf_parser__GrammarFunctor.Make.Production.print lib/grammarFunctor.ml(897):23166-23194
                                     (makeblock 0 (global Assert_failure/28!)
                                       [0: "lib/grammarFunctor.ml" 897 4]))))
                               (before Gbnf_parser__GrammarFunctor.Make.Production.print lib/grammarFunctor.ml(898):23200-23459
                                 (let
                                   (*match*/13709 =
                                      (after Gbnf_parser__GrammarFunctor.Make.Production.print lib/grammarFunctor.ml(898):23214-23226
                                        (array.get[addr] table/2958
                                          prod/3397))
                                    rhs/3399 =a (field_imm 1 *match*/13709)
                                    nt/3398 =a (field_imm 0 *match*/13709))
                                   (before Gbnf_parser__GrammarFunctor.Make.Production.print lib/grammarFunctor.ml(899):23234-23459
                                     (if (== (array.length[addr] rhs/3399) 0)
                                       (before Gbnf_parser__GrammarFunctor.Make.Production.print lib/grammarFunctor.ml(901):23315-23366
                                         (after Gbnf_parser__GrammarFunctor.Make.Production.print lib/grammarFunctor.ml(901):23315-23366
                                           (apply
                                             (field_imm 3
                                               (global Stdlib__Printf!))
                                             [0:
                                              [2: 0 [11: " ->" 0]] "%s ->"]
                                             (after Gbnf_parser__GrammarFunctor.Make.Production.print lib/grammarFunctor.ml(901):23338-23366
                                               (apply
                                                 (field_imm 10
                                                   Nonterminal/2057)
                                                 0 nt/3398)))))
                                       (before Gbnf_parser__GrammarFunctor.Make.Production.print lib/grammarFunctor.ml(903):23382-23459
                                         (after Gbnf_parser__GrammarFunctor.Make.Production.print lib/grammarFunctor.ml(903):23382-23459
                                           (apply
                                             (field_imm 3
                                               (global Stdlib__Printf!))
                                             [0:
                                              [2: 0 [11: " -> " [2: 0 0]]]
                                              "%s -> %s"]
                                             (after Gbnf_parser__GrammarFunctor.Make.Production.print lib/grammarFunctor.ml(903):23408-23436
                                               (apply
                                                 (field_imm 10
                                                   Nonterminal/2057)
                                                 0 nt/3398))
                                             (after Gbnf_parser__GrammarFunctor.Make.Production.print lib/grammarFunctor.ml(903):23437-23459
                                               (apply
                                                 (field_imm 9 Symbol/2545) 0
                                                 rhs/3399)))))))))))))
                     describe/3400 =
                       (function gerund/3402[int] prod/3403[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(905)<ghost>:23476-23796
                           (before Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(906):23494-23796
                             (let
                               (*match*/13710 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(906):23500-23513
                                    (apply classify/3350 prod/3403)))
                               (if *match*/13710
                                 (let
                                   (nt/3404 =a (field_imm 0 *match*/13710))
                                   (before Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(908):23544-23661
                                     (let
                                       (ending/3405 =
                                          (if gerund/3402
                                            (before Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(908):23572-23577
                                              "ing")
                                            (before Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(908):23583-23585
                                              "")))
                                       (before Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(909):23597-23661
                                         (after Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(909):23597-23661
                                           (apply
                                             (field_imm 3
                                               (global Stdlib__Printf!))
                                             [0:
                                              [11:
                                               "accept"
                                               [2: 0 [12: ' ' [2: 0 0]]]]
                                              "accept%s %s"]
                                             ending/3405
                                             (after Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(909):23633-23661
                                               (apply
                                                 (field_imm 10
                                                   Nonterminal/2057)
                                                 0 nt/3404))))))))
                                 (before Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(911):23684-23796
                                   (let
                                     (ending/3406 =
                                        (if gerund/3402
                                          (before Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(911):23712-23717
                                            "ing")
                                          (before Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(911):23723-23726
                                            "e")))
                                     (before Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(912):23738-23796
                                       (after Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(912):23738-23796
                                         (apply
                                           (field_imm 3
                                             (global Stdlib__Printf!))
                                           [0:
                                            [11:
                                             "reduc"
                                             [2:
                                              0 [11: " production " [2: 0 0]]]]
                                            "reduc%s production %s"]
                                           ending/3406
                                           (after Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(912):23784-23796
                                             (apply print/3396 prod/3403))))))))))))
                     tabulate/3407 =
                       (function f/3409
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.tabulate lib/grammarFunctor.ml(916)<ghost>:23842-23867
                           (before Gbnf_parser__GrammarFunctor.Make.Production.tabulate lib/grammarFunctor.ml(917):23850-23867
                             (after Gbnf_parser__GrammarFunctor.Make.Production.tabulate lib/grammarFunctor.ml(917):23850-23867
                               (apply
                                 (field_imm 2 (global Gbnf_parser__Misc!))
                                 n/2946 f/3409)))))
                     sum/3410 =
                       (function f/3412 : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.sum lib/grammarFunctor.ml(919)<ghost>:23879-23899
                           (before Gbnf_parser__GrammarFunctor.Make.Production.sum lib/grammarFunctor.ml(920):23887-23899
                             (after Gbnf_parser__GrammarFunctor.Make.Production.sum lib/grammarFunctor.ml(920):23887-23899
                               (apply
                                 (field_imm 3 (global Gbnf_parser__Misc!))
                                 n/2946 f/3412)))))
                     ever_useful/3452 =
                       (after Gbnf_parser__GrammarFunctor.Make.Production.ever_useful lib/grammarFunctor.ml(935):24615-24632
                         (apply (field_imm 0 (global Stdlib__Hashtbl!)) 0 16))
                     consult_prec_decl/3494 =
                       (function prod/3496[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.consult_prec_decl lib/grammarFunctor.ml(937)<ghost>:24658-24905
                           (before Gbnf_parser__GrammarFunctor.Make.Production.consult_prec_decl lib/grammarFunctor.ml(938):24669-24905
                             (let
                               (osym/3497 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Production.consult_prec_decl lib/grammarFunctor.ml(938):24680-24696
                                    (array.get[addr] prec_decl/2963
                                      prod/3496)))
                               (before Gbnf_parser__GrammarFunctor.Make.Production.consult_prec_decl lib/grammarFunctor.ml(939):24704-24905
                                 (makeblock 0
                                   (makemutable 246
                                     (function param/13711
                                       (after Gbnf_parser__GrammarFunctor.Make.Production.consult_prec_decl lib/grammarFunctor.ml(939):24709-24895
                                         (apply
                                           (field_imm 8
                                             (global Stdlib__Option!))
                                           (function sym/3515 : int
                                             (funct-body Gbnf_parser__GrammarFunctor.Make.Production.consult_prec_decl.(fun) lib/grammarFunctor.ml(940):24729-24884
                                               (before Gbnf_parser__GrammarFunctor.Make.Production.consult_prec_decl.(fun) lib/grammarFunctor.ml(942):24802-24876
                                                 (let
                                                   (pos/3516 =
                                                      (after Gbnf_parser__GrammarFunctor.Make.Production.consult_prec_decl.(fun) lib/grammarFunctor.ml(942):24812-24834
                                                        (apply
                                                          (field_imm 1
                                                            (global Gbnf_parser__Positions!))
                                                          sym/3515)))
                                                   (before Gbnf_parser__GrammarFunctor.Make.Production.consult_prec_decl.(fun) lib/grammarFunctor.ml(943):24846-24876
                                                     (after Gbnf_parser__GrammarFunctor.Make.Production.consult_prec_decl.(fun) lib/grammarFunctor.ml(943):24846-24876
                                                       (apply
                                                         (field_imm 4
                                                           (global Stdlib__Hashtbl!))
                                                         ever_useful/3452
                                                         pos/3516 0)))))))
                                           osym/3497))))
                                   osym/3497))))))
                     diagnostics/3517 =
                       (function param/3523[int] : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.diagnostics lib/grammarFunctor.ml(952)<ghost>:25105-25575
                           (before Gbnf_parser__GrammarFunctor.Make.Production.diagnostics lib/grammarFunctor.ml(953):25114-25575
                             (after Gbnf_parser__GrammarFunctor.Make.Production.diagnostics lib/grammarFunctor.ml(953):25114-25575
                               (apply iterx/3385
                                 (function prod/3519[int] : int
                                   (funct-body Gbnf_parser__GrammarFunctor.Make.Production.diagnostics.(fun) lib/grammarFunctor.ml(953):25120-25575
                                     (before Gbnf_parser__GrammarFunctor.Make.Production.diagnostics.(fun) lib/grammarFunctor.ml(954):25139-25569
                                       (let
                                         (osym/3520 =
                                            (after Gbnf_parser__GrammarFunctor.Make.Production.diagnostics.(fun) lib/grammarFunctor.ml(954):25150-25166
                                              (array.get[addr] prec_decl/2963
                                                prod/3519)))
                                         (before Gbnf_parser__GrammarFunctor.Make.Production.diagnostics.(fun) lib/grammarFunctor.ml(955):25176-25569
                                           (after Gbnf_parser__GrammarFunctor.Make.Production.diagnostics.(fun) lib/grammarFunctor.ml(955):25176-25569
                                             (apply
                                               (field_imm 8
                                                 (global Stdlib__Option!))
                                               (function sym/3521 : int
                                                 (funct-body Gbnf_parser__GrammarFunctor.Make.Production.diagnostics.(fun) lib/grammarFunctor.ml(955):25188-25564
                                                   (before Gbnf_parser__GrammarFunctor.Make.Production.diagnostics.(fun) lib/grammarFunctor.ml(957):25272-25556
                                                     (let
                                                       (pos/3522 =
                                                          (after Gbnf_parser__GrammarFunctor.Make.Production.diagnostics.(fun) lib/grammarFunctor.ml(957):25282-25304
                                                            (apply
                                                              (field_imm 1
                                                                (global Gbnf_parser__Positions!))
                                                              sym/3521)))
                                                       (before Gbnf_parser__GrammarFunctor.Make.Production.diagnostics.(fun) lib/grammarFunctor.ml(958):25316-25556
                                                         (if
                                                           (not
                                                             (after Gbnf_parser__GrammarFunctor.Make.Production.diagnostics.(fun) lib/grammarFunctor.ml(958):25323-25352
                                                               (apply
                                                                 (field_imm 8
                                                                   (global Stdlib__Hashtbl!))
                                                                 ever_useful/3452
                                                                 pos/3522)))
                                                           (before Gbnf_parser__GrammarFunctor.Make.Production.diagnostics.(fun) lib/grammarFunctor.ml(958):25358-25556
                                                             (after Gbnf_parser__GrammarFunctor.Make.Production.diagnostics.(fun) lib/grammarFunctor.ml(958):25358-25556
                                                               (apply
                                                                 (field_imm 4
                                                                   (global Stdlib__Hashtbl!))
                                                                 ever_useful/3452
                                                                 pos/3522 0)))
                                                           0))))))
                                               osym/3520))))))))))))
                     rightmost_terminal/3528 =
                       (function prod/3530[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.rightmost_terminal lib/grammarFunctor.ml(975)<ghost>:25923-26107
                           (before Gbnf_parser__GrammarFunctor.Make.Production.rightmost_terminal lib/grammarFunctor.ml(976):25934-26107
                             (after Gbnf_parser__GrammarFunctor.Make.Production.rightmost_terminal lib/grammarFunctor.ml(976):25934-26107
                               (apply (field_imm 16 (global Stdlib__Array!))
                                 (function accu/3531 symbol/3532
                                   (funct-body Gbnf_parser__GrammarFunctor.Make.Production.rightmost_terminal.(fun) lib/grammarFunctor.ml(976):25950-26090
                                     (before Gbnf_parser__GrammarFunctor.Make.Production.rightmost_terminal.(fun) lib/grammarFunctor.ml(977):25976-26084
                                       (switch* symbol/3532
                                        case tag 0:
                                         (let
                                           (*match*/13712 =a
                                              (field_imm 0 symbol/3532))
                                           (before Gbnf_parser__GrammarFunctor.Make.Production.rightmost_terminal.(fun) lib/grammarFunctor.ml(981):26080-26084
                                             accu/3531))
                                        case tag 1:
                                         (let
                                           (tok/3533 =a
                                              (field_imm 0 symbol/3532))
                                           (before Gbnf_parser__GrammarFunctor.Make.Production.rightmost_terminal.(fun) lib/grammarFunctor.ml(979):26028-26047
                                             (makeblock 0 (int) tok/3533)))))))
                                 0
                                 (after Gbnf_parser__GrammarFunctor.Make.Production.rightmost_terminal lib/grammarFunctor.ml(982):26097-26107
                                   (apply rhs/3338 prod/3530)))))))
                     combine/3534 =
                       (function e1/3536 e2/3537
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.combine lib/grammarFunctor.ml(984)<ghost>:26123-26170
                           (before Gbnf_parser__GrammarFunctor.Make.Production.combine lib/grammarFunctor.ml(985):26135-26170
                             (makemutable 246
                               (function param/13717
                                 (seq
                                   (after Gbnf_parser__GrammarFunctor.Make.Production.combine lib/grammarFunctor.ml(985):26141-26154
                                     (let
                                       (lzarg/13715 = e1/3536
                                        tag/13716 =a
                                          (caml_obj_tag lzarg/13715))
                                       (if (== tag/13716 250)
                                         (field_mut 0 lzarg/13715)
                                         (if
                                           (|| (== tag/13716 246)
                                             (== tag/13716 244))
                                           (apply
                                             (field_imm 1
                                               (global CamlinternalLazy!))
                                             (opaque lzarg/13715))
                                           lzarg/13715))))
                                   (before Gbnf_parser__GrammarFunctor.Make.Production.combine lib/grammarFunctor.ml(985):26156-26169
                                     (after Gbnf_parser__GrammarFunctor.Make.Production.combine lib/grammarFunctor.ml(985):26156-26169
                                       (let
                                         (lzarg/13713 = e2/3537
                                          tag/13714 =a
                                            (caml_obj_tag lzarg/13713))
                                         (if (== tag/13714 250)
                                           (field_mut 0 lzarg/13713)
                                           (if
                                             (|| (== tag/13714 246)
                                               (== tag/13714 244))
                                             (apply
                                               (field_imm 1
                                                 (global CamlinternalLazy!))
                                               (opaque lzarg/13713))
                                             lzarg/13713)))))))))))
                     precedence/3551 =
                       (function prod/3553[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(987)<ghost>:26189-26732
                           (before Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(988):26200-26732
                             (let
                               (*match*/13731 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(988):26223-26245
                                    (apply consult_prec_decl/3494 prod/3553))
                                prec_decl/3555 =a (field_imm 1 *match*/13731)
                                fact1/3554 =a (field_imm 0 *match*/13731))
                               (before Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(989):26253-26732
                                 (let
                                   (oterminal/3556 =
                                      (if prec_decl/3555
                                        (let
                                          (*match*/13726 =a
                                             (field_imm 0 prec_decl/3555)
                                           *match*/13727 =a
                                             (field_imm 1 *match*/13726)
                                           terminal/3557 =a
                                             (field_imm 0 *match*/13726))
                                          (before Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(994):26396-26414
                                            (makeblock 1 terminal/3557)))
                                        (before Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(992):26322-26345
                                          (after Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(992):26322-26345
                                            (apply rightmost_terminal/3528
                                              prod/3553)))))
                                   (before Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(996):26426-26732
                                     (switch* oterminal/3556
                                      case int 0:
                                       (before Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(998):26470-26496
                                         (makeblock 0 fact1/3554 0))
                                      case tag 0:
                                       (let
                                         (tok/3558 =a
                                            (field_imm 0 oterminal/3556))
                                         (before Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(1000):26534-26620
                                           (let
                                             (*match*/13721 =
                                                (after Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(1000):26553-26582
                                                  (apply
                                                    (field_imm 14
                                                      Terminal/2246)
                                                    tok/3558))
                                              level/3561 =a
                                                (field_imm 1 *match*/13721)
                                              fact2/3560 =a
                                                (field_imm 0 *match*/13721))
                                             (before Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(1001):26594-26620
                                               (makeblock 0
                                                 (after Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(1001):26594-26613
                                                   (apply combine/3534
                                                     fact1/3554 fact2/3560))
                                                 level/3561)))))
                                      case tag 1:
                                       (let
                                         (id/3559 =a
                                            (field_imm 0 oterminal/3556))
                                         (before Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(1003):26651-26732
                                           (let
                                             (*match*/13725 =
                                                (after Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(1003):26670-26693
                                                  (apply
                                                    (field_imm 3
                                                      TokPrecedence/1946)
                                                    id/3559))
                                              level/3563 =a
                                                (field_imm 1 *match*/13725)
                                              fact2/3562 =a
                                                (field_imm 0 *match*/13725))
                                             (before Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(1004):26706-26732
                                               (makeblock 0
                                                 (after Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(1004):26706-26725
                                                   (apply combine/3534
                                                     fact1/3554 fact2/3562))
                                                 level/3563))))))))))))))
                    (pseudo Gbnf_parser__GrammarFunctor.Make.Production lib/grammarFunctor.ml(668):16880-26737
                      (makeblock 0 compare/2945 n/2946 p2i/2952 i2p/2955
                        table/2958 actions/2960 prec_decl/2963
                        production_level/2999 ntprods/3015
                        grammar_uses_error_token/3016 start/3017
                        startprods/3018 producer_symbol/3164 iternt/3305
                        foldnt/3311 mapnt/3318 foldnt_lazy/3324 def/3331
                        nt/3334 rhs/3338 length/3342 identifiers/3345
                        is_start/3347 classify/3350 action/3354
                        positions/3358 lhs_attributes/3360
                        rhs_attributes/3363 startsymbol2startprod/3365
                        error_free/3368 init/3371 iter/3374 fold/3376
                        map/3380 amap/3382 iterx/3385 foldx/3389 mapx/3393
                        print/3396 describe/3400 tabulate/3407 sum/3410
                        ever_useful/3452 consult_prec_decl/3494
                        diagnostics/3517 rightmost_terminal/3528 combine/3534
                        precedence/3551)))))
            grammar_uses_error_token/3565 =[int]
              (field_int 0 (field_imm 9 Production/3564))
            ProductionMap/3611 =
              (let
                (include/13746 =a
                   (let
                     (let/13747 =
                        (field_imm 3 (global Gbnf_parser__Patricia!)))
                     (field_imm 3 (global Gbnf_parser__Patricia!)))
                 empty/3568 =a (field_mut 0 include/13746)
                 choose/3569 =a (field_mut 1 include/13746)
                 lookup/3570 =a (field_mut 2 include/13746)
                 find/3571 =a (field_mut 3 include/13746)
                 mem/3572 =a (field_mut 4 include/13746)
                 join/3573 =a (field_mut 5 include/13746)
                 match_prefix/3574 =a (field_mut 6 include/13746)
                 Unchanged/3576 =a (field_mut 7 include/13746)
                 basic_add/3577 =a (field_mut 8 include/13746)
                 strict_add/3578 =a (field_mut 9 include/13746)
                 fine_add/3579 =a (field_mut 10 include/13746)
                 add/3580 =a (field_mut 11 include/13746)
                 singleton/3581 =a (field_mut 12 include/13746)
                 is_singleton/3582 =a (field_mut 13 include/13746)
                 is_empty/3583 =a (field_mut 14 include/13746)
                 cardinal/3584 =a (field_mut 15 include/13746)
                 remove/3585 =a (field_mut 16 include/13746)
                 lookup_and_remove/3586 =a (field_mut 17 include/13746)
                 find_and_remove/3587 =a (field_mut 18 include/13746)
                 reverse/3588 =a (field_mut 19 include/13746)
                 fine_union/3589 =a (field_mut 20 include/13746)
                 union/3590 =a (field_mut 21 include/13746)
                 iter/3591 =a (field_mut 22 include/13746)
                 fold/3592 =a (field_mut 23 include/13746)
                 fold_rev/3593 =a (field_mut 24 include/13746)
                 iter2/3594 =a (field_mut 25 include/13746)
                 map/3595 =a (field_mut 26 include/13746)
                 endo_map/3596 =a (field_mut 27 include/13746)
                 filter/3597 =a (field_mut 28 include/13746)
                 iterator/3598 =a (field_mut 29 include/13746)
                 Got/3599 =a (field_mut 30 include/13746)
                 compare/3600 =a (field_mut 31 include/13746)
                 Domain/3601 =a (field_mut 32 include/13746)
                 domain/3602 =a (field_mut 33 include/13746)
                 lift/3603 =a (field_mut 34 include/13746)
                 build/3604 =a (field_mut 35 include/13746)
                 corestrict/3605 =a (field_mut 36 include/13746)
                 start/3606 =
                   (function f/3608
                     (funct-body Gbnf_parser__GrammarFunctor.Make.ProductionMap.start lib/grammarFunctor.ml(1020)<ghost>:27038-27126
                       (before Gbnf_parser__GrammarFunctor.Make.ProductionMap.start lib/grammarFunctor.ml(1021):27046-27126
                         (after Gbnf_parser__GrammarFunctor.Make.ProductionMap.start lib/grammarFunctor.ml(1021):27046-27126
                           (apply (field_imm 13 (global Gbnf_parser__Misc!))
                             (field_imm 10 Production/3564)
                             (function prod/3609[int] m/3610
                               (funct-body Gbnf_parser__GrammarFunctor.Make.ProductionMap.start.(fun) lib/grammarFunctor.ml(1021):27074-27120
                                 (before Gbnf_parser__GrammarFunctor.Make.ProductionMap.start.(fun) lib/grammarFunctor.ml(1022):27095-27114
                                   (after Gbnf_parser__GrammarFunctor.Make.ProductionMap.start.(fun) lib/grammarFunctor.ml(1022):27095-27114
                                     (apply add/3580 prod/3609
                                       (after Gbnf_parser__GrammarFunctor.Make.ProductionMap.start.(fun) lib/grammarFunctor.ml(1022):27104-27112
                                         (apply f/3608 prod/3609))
                                       m/3610)))))
                             empty/3568))))))
                (pseudo Gbnf_parser__GrammarFunctor.Make.ProductionMap lib/grammarFunctor.ml(1014):26942-27131
                  (makeblock 0 empty/3568 choose/3569 lookup/3570 find/3571
                    mem/3572 join/3573 match_prefix/3574 Unchanged/3576
                    basic_add/3577 strict_add/3578 fine_add/3579 add/3580
                    singleton/3581 is_singleton/3582 is_empty/3583
                    cardinal/3584 remove/3585 lookup_and_remove/3586
                    find_and_remove/3587 reverse/3588 fine_union/3589
                    union/3590 iter/3591 fold/3592 fold_rev/3593 iter2/3594
                    map/3595 endo_map/3596 filter/3597 iterator/3598 Got/3599
                    compare/3600 Domain/3601 domain/3602 lift/3603 build/3604
                    corestrict/3605 start/3606)))
            GenericAnalysis/4037 =
              (function P/13753 S/13752 is_a_functor
                (let
                  (P/3733 =a P/13753
                   S/3739 =a S/13752
                   symbol/3740 =
                     (function sym/3742 get/3743
                       (funct-body Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.symbol lib/grammarFunctor.ml(1097)<ghost>:29896-30073
                         (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.symbol lib/grammarFunctor.ml(1098):29921-30073
                           (switch* sym/3742
                            case tag 0:
                             (let (nt/3745 =a (field_imm 0 sym/3742))
                               (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.symbol lib/grammarFunctor.ml(1103):30067-30073
                                 (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.symbol lib/grammarFunctor.ml(1103):30067-30073
                                   (apply get/3743 nt/3745))))
                            case tag 1:
                             (let (tok/3744 =a (field_imm 0 sym/3742))
                               (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.symbol lib/grammarFunctor.ml(1100):29966-29980
                                 (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.symbol lib/grammarFunctor.ml(1100):29966-29980
                                   (apply (field_imm 1 S/3739) tok/3744))))))))
                   production/3746 =
                     (function prod/3748[int] i/3749[int] get/3750
                       (funct-body Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production lib/grammarFunctor.ml(1107)<ghost>:30171-30724
                         (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production lib/grammarFunctor.ml(1108):30199-30724
                           (let
                             (rhs/3751 =
                                (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production lib/grammarFunctor.ml(1108):30209-30228
                                  (apply (field_imm 19 Production/3564)
                                    prod/3748)))
                             (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production lib/grammarFunctor.ml(1109):30236-30724
                               (let
                                 (n/3752 =[int] (array.length[addr] rhs/3751))
                                 (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production lib/grammarFunctor.ml(1114):30526-30724
                                   (letrec
                                     (loop/3753
                                        (function i/3754[int]
                                          (funct-body Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production.loop lib/grammarFunctor.ml(1114)<ghost>:30539-30706
                                            (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production.loop lib/grammarFunctor.ml(1115):30549-30706
                                              (if (== i/3754 n/3752)
                                                (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production.loop lib/grammarFunctor.ml(1116):30571-30580
                                                  (field_imm 4 S/3739))
                                                (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production.loop lib/grammarFunctor.ml(1118):30600-30706
                                                  (let
                                                    (sym/3755 =
                                                       (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production.loop lib/grammarFunctor.ml(1118):30610-30617
                                                         (array.get[addr]
                                                           rhs/3751 i/3754)))
                                                    (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production.loop lib/grammarFunctor.ml(1119):30629-30706
                                                      (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production.loop lib/grammarFunctor.ml(1119):30629-30706
                                                        (apply
                                                          (field_imm 3
                                                            S/3739)
                                                          sym/3755
                                                          (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production.loop lib/grammarFunctor.ml(1120):30657-30673
                                                            (apply
                                                              symbol/3740
                                                              sym/3755
                                                              get/3750))
                                                          (function
                                                            param/3756[int]
                                                            (funct-body Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production.loop.(fun) lib/grammarFunctor.ml(1121):30684-30706
                                                              (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production.loop.(fun) lib/grammarFunctor.ml(1121):30695-30705
                                                                (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production.loop.(fun) lib/grammarFunctor.ml(1121):30695-30705
                                                                  (apply
                                                                    loop/3753
                                                                    (+ i/3754
                                                                    1))))))))))))))))
                                     (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production lib/grammarFunctor.ml(1123):30718-30724
                                       (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production lib/grammarFunctor.ml(1123):30718-30724
                                         (apply loop/3753 i/3749)))))))))))
                   nonterminal/3757 =
                     (function nt/3759[int] get/3760
                       (funct-body Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.nonterminal lib/grammarFunctor.ml(1129)<ghost>:30952-31264
                         (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.nonterminal lib/grammarFunctor.ml(1130):30976-31264
                           (let
                             (*match*/13748 =
                                (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.nonterminal lib/grammarFunctor.ml(1130):30982-30995
                                  (apply (field_imm 0 S/3739) nt/3759)))
                             (if *match*/13748
                               (let (p/3761 =a (field_imm 0 *match*/13748))
                                 (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.nonterminal lib/grammarFunctor.ml(1132):31025-31026
                                   p/3761))
                               (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.nonterminal lib/grammarFunctor.ml(1135):31125-31264
                                 (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.nonterminal lib/grammarFunctor.ml(1135):31125-31264
                                   (apply (field_imm 16 Production/3564)
                                     nt/3759
                                     (function prod/3762[int] rest/3763
                                       (funct-body Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.nonterminal.(fun) lib/grammarFunctor.ml(1135):31151-31255
                                         (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.nonterminal.(fun) lib/grammarFunctor.ml(1136):31179-31245
                                           (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.nonterminal.(fun) lib/grammarFunctor.ml(1136):31179-31245
                                             (apply (field_imm 2 S/3739)
                                               (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.nonterminal.(fun) lib/grammarFunctor.ml(1137):31205-31228
                                                 (apply production/3746
                                                   prod/3762 0 get/3760))
                                               rest/3763)))))
                                     (field_imm 0 P/3733)))))))))
                   F/3913 =
                     (apply
                       (apply
                         (let
                           (let/13751 =
                              (field_imm 0 (global Gbnf_parser__Core!)))
                           (field_imm 0 (global Gbnf_parser__Core!)))
                         (let
                           (let/13750 =
                              (apply
                                (let
                                  (let/13749 =
                                     (field_imm 10
                                       (global Gbnf_parser__Glue!)))
                                  (field_imm 10 (global Gbnf_parser__Glue!)))
                                (makeblock 0 (field_mut 6 Nonterminal/2057))))
                           (makeblock 0 (field_mut 0 let/13750)
                             (field_mut 2 let/13750) (field_mut 3 let/13750)
                             (field_mut 1 let/13750) (field_mut 4 let/13750))))
                       P/3733)
                   nonterminal/3914 =
                     (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.nonterminal lib/grammarFunctor.ml(1150):31505-31522
                       (apply (field_imm 1 F/3913) nonterminal/3757))
                   symbol/3930 =
                     (function sym/3931
                       (funct-body Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.symbol lib/grammarFunctor.ml(1154)<ghost>:31592-31624
                         (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.symbol lib/grammarFunctor.ml(1155):31602-31624
                           (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.symbol lib/grammarFunctor.ml(1155):31602-31624
                             (apply symbol/3740 sym/3931 nonterminal/3914)))))
                   production/3932 =
                     (function prod/3933[int] i/3934[int]
                       (funct-body Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production lib/grammarFunctor.ml(1157)<ghost>:31643-31685
                         (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production lib/grammarFunctor.ml(1158):31656-31685
                           (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production lib/grammarFunctor.ml(1158):31656-31685
                             (apply production/3746 prod/3933 i/3934
                               nonterminal/3914))))))
                  (pseudo Gbnf_parser__GrammarFunctor.Make.GenericAnalysis lib/grammarFunctor.ml(1088):29628-31690
                    (makeblock 0 nonterminal/3914 symbol/3930
                      production/3932))))
            NONEMPTY/4094 =
              (apply
                (apply GenericAnalysis/4037
                  (let
                    (let/13754 = (global Gbnf_parser__Boolean!)
                     let/13755 =a (global Gbnf_parser__Boolean!))
                    (makeblock 0 (field_mut 0 let/13755)
                      (field_mut 1 let/13755) (field_mut 3 let/13755))))
                (let
                  (shortcut/4038 =
                     (function _nt/4040
                       (funct-body Gbnf_parser__GrammarFunctor.Make.NONEMPTY.shortcut lib/grammarFunctor.ml(1173)<ghost>:32151-32161
                         (before Gbnf_parser__GrammarFunctor.Make.NONEMPTY.shortcut lib/grammarFunctor.ml(1173):32157-32161
                           0)))
                   terminal/4041 =
                     (function param/4043 : int
                       (funct-body Gbnf_parser__GrammarFunctor.Make.NONEMPTY.terminal lib/grammarFunctor.ml(1175)<ghost>:32224-32232
                         (before Gbnf_parser__GrammarFunctor.Make.NONEMPTY.terminal lib/grammarFunctor.ml(1175):32228-32232
                           1)))
                   disjunction/4044 =
                     (function p/4046[int] q/4047 : int
                       (funct-body Gbnf_parser__GrammarFunctor.Make.NONEMPTY.disjunction lib/grammarFunctor.ml(1177)<ghost>:32330-32344
                         (before Gbnf_parser__GrammarFunctor.Make.NONEMPTY.disjunction lib/grammarFunctor.ml(1177):32336-32344
                           (|| p/4046
                             (after Gbnf_parser__GrammarFunctor.Make.NONEMPTY.disjunction lib/grammarFunctor.ml(1177):32341-32344
                               (apply q/4047 0))))))
                   conjunction/4048 =
                     (function param/4052 p/4050[int] q/4051 : int
                       (funct-body Gbnf_parser__GrammarFunctor.Make.NONEMPTY.conjunction lib/grammarFunctor.ml(1179)<ghost>:32432-32448
                         (before Gbnf_parser__GrammarFunctor.Make.NONEMPTY.conjunction lib/grammarFunctor.ml(1179):32440-32448
                           (&& p/4050
                             (after Gbnf_parser__GrammarFunctor.Make.NONEMPTY.conjunction lib/grammarFunctor.ml(1179):32445-32448
                               (apply q/4051 0))))))
                   epsilon/4053 =[int] 1)
                  (pseudo Gbnf_parser__GrammarFunctor.Make.NONEMPTY lib/grammarFunctor.ml(1172):32125-32584
                    (makeblock 0 shortcut/4038 terminal/4041 disjunction/4044
                      conjunction/4048 epsilon/4053))))
            NULLABLE/4123 =
              (apply
                (apply GenericAnalysis/4037
                  (let
                    (let/13756 = (global Gbnf_parser__Boolean!)
                     let/13757 =a (global Gbnf_parser__Boolean!))
                    (makeblock 0 (field_mut 0 let/13757)
                      (field_mut 1 let/13757) (field_mut 3 let/13757))))
                (let
                  (shortcut/4095 =
                     (function _nt/4097
                       (funct-body Gbnf_parser__GrammarFunctor.Make.NULLABLE.shortcut lib/grammarFunctor.ml(1189)<ghost>:32677-32687
                         (before Gbnf_parser__GrammarFunctor.Make.NULLABLE.shortcut lib/grammarFunctor.ml(1189):32683-32687
                           0)))
                   terminal/4098 =
                     (function param/4100 : int
                       (funct-body Gbnf_parser__GrammarFunctor.Make.NULLABLE.terminal lib/grammarFunctor.ml(1191)<ghost>:32754-32763
                         (before Gbnf_parser__GrammarFunctor.Make.NULLABLE.terminal lib/grammarFunctor.ml(1191):32758-32763
                           0)))
                   disjunction/4101 =
                     (function p/4103[int] q/4104 : int
                       (funct-body Gbnf_parser__GrammarFunctor.Make.NULLABLE.disjunction lib/grammarFunctor.ml(1193)<ghost>:32861-32875
                         (before Gbnf_parser__GrammarFunctor.Make.NULLABLE.disjunction lib/grammarFunctor.ml(1193):32867-32875
                           (|| p/4103
                             (after Gbnf_parser__GrammarFunctor.Make.NULLABLE.disjunction lib/grammarFunctor.ml(1193):32872-32875
                               (apply q/4104 0))))))
                   conjunction/4105 =
                     (function param/4109 p/4107[int] q/4108 : int
                       (funct-body Gbnf_parser__GrammarFunctor.Make.NULLABLE.conjunction lib/grammarFunctor.ml(1195)<ghost>:32963-32979
                         (before Gbnf_parser__GrammarFunctor.Make.NULLABLE.conjunction lib/grammarFunctor.ml(1195):32971-32979
                           (&& p/4107
                             (after Gbnf_parser__GrammarFunctor.Make.NULLABLE.conjunction lib/grammarFunctor.ml(1195):32976-32979
                               (apply q/4108 0))))))
                   epsilon/4110 =[int] 1)
                  (pseudo Gbnf_parser__GrammarFunctor.Make.NULLABLE lib/grammarFunctor.ml(1188):32651-33059
                    (makeblock 0 shortcut/4095 terminal/4098 disjunction/4101
                      conjunction/4105 epsilon/4110))))
            FIRST/4150 =
              (apply
                (apply GenericAnalysis/4037
                  (makeblock 0 (field_mut 20 TerminalSet/2387)
                    (field_mut 16 TerminalSet/2387)
                    (field_mut 21 TerminalSet/2387)))
                (let
                  (shortcut/4124 =
                     (function _nt/4126
                       (funct-body Gbnf_parser__GrammarFunctor.Make.FIRST.shortcut lib/grammarFunctor.ml(1207)<ghost>:33250-33260
                         (before Gbnf_parser__GrammarFunctor.Make.FIRST.shortcut lib/grammarFunctor.ml(1207):33256-33260
                           0)))
                   terminal/4127 = (field_imm 2 TerminalSet/2387)
                   disjunction/4128 =
                     (function p/4130 q/4131
                       (funct-body Gbnf_parser__GrammarFunctor.Make.FIRST.disjunction lib/grammarFunctor.ml(1211)<ghost>:33459-33490
                         (before Gbnf_parser__GrammarFunctor.Make.FIRST.disjunction lib/grammarFunctor.ml(1211):33465-33490
                           (after Gbnf_parser__GrammarFunctor.Make.FIRST.disjunction lib/grammarFunctor.ml(1211):33465-33490
                             (apply (field_imm 9 TerminalSet/2387) p/4130
                               (after Gbnf_parser__GrammarFunctor.Make.FIRST.disjunction lib/grammarFunctor.ml(1211):33485-33490
                                 (apply q/4131 0)))))))
                   conjunction/4132 =
                     (function symbol/4134 p/4135 q/4136
                       (funct-body Gbnf_parser__GrammarFunctor.Make.FIRST.conjunction lib/grammarFunctor.ml(1215)<ghost>:33700-33812
                         (before Gbnf_parser__GrammarFunctor.Make.FIRST.conjunction lib/grammarFunctor.ml(1216):33721-33812
                           (if
                             (after Gbnf_parser__GrammarFunctor.Make.FIRST.conjunction lib/grammarFunctor.ml(1216):33724-33746
                               (apply (field_imm 1 NULLABLE/4123)
                                 symbol/4134))
                             (before Gbnf_parser__GrammarFunctor.Make.FIRST.conjunction lib/grammarFunctor.ml(1217):33762-33787
                               (after Gbnf_parser__GrammarFunctor.Make.FIRST.conjunction lib/grammarFunctor.ml(1217):33762-33787
                                 (apply (field_imm 9 TerminalSet/2387) p/4135
                                   (after Gbnf_parser__GrammarFunctor.Make.FIRST.conjunction lib/grammarFunctor.ml(1217):33782-33787
                                     (apply q/4136 0)))))
                             (before Gbnf_parser__GrammarFunctor.Make.FIRST.conjunction lib/grammarFunctor.ml(1219):33811-33812
                               p/4135)))))
                   epsilon/4137 = (field_imm 0 TerminalSet/2387))
                  (pseudo Gbnf_parser__GrammarFunctor.Make.FIRST lib/grammarFunctor.ml(1206):33224-33917
                    (makeblock 0 shortcut/4124 terminal/4127 disjunction/4128
                      conjunction/4132 epsilon/4137))))
            MINIMAL/4217 =
              (apply
                (apply GenericAnalysis/4037
                  (let
                    (include/13758 =a
                       (let
                         (let/13759 =
                            (global Gbnf_parser__CompletedNatWitness!))
                         (global Gbnf_parser__CompletedNatWitness!))
                     equal/4174 =a (field_mut 0 include/13758)
                     bottom/4175 =a (field_mut 1 include/13758)
                     epsilon/4176 =a (field_mut 2 include/13758)
                     singleton/4177 =a (field_mut 3 include/13758)
                     is_maximal/4178 =a (field_mut 4 include/13758)
                     min/4179 =a (field_mut 5 include/13758)
                     min_lazy/4180 =a (field_mut 6 include/13758)
                     add/4181 =a (field_mut 7 include/13758)
                     add_lazy/4182 =a (field_mut 8 include/13758)
                     print/4183 =a (field_mut 9 include/13758)
                     to_int/4184 =a (field_mut 10 include/13758)
                     extract/4185 =a (field_mut 11 include/13758))
                    (pseudo Gbnf_parser__GrammarFunctor.Make.MINIMAL lib/grammarFunctor.ml(1237):34571-34655
                      (makeblock 0 bottom/4175 equal/4174 is_maximal/4178))))
                (let
                  (shortcut/4151 =
                     (function _nt/4153
                       (funct-body Gbnf_parser__GrammarFunctor.Make.MINIMAL.shortcut lib/grammarFunctor.ml(1242)<ghost>:34688-34698
                         (before Gbnf_parser__GrammarFunctor.Make.MINIMAL.shortcut lib/grammarFunctor.ml(1242):34694-34698
                           0)))
                   terminal/4167 =
                     (field_imm 3 (global Gbnf_parser__CompletedNatWitness!))
                   disjunction/4168 =
                     (field_imm 6 (global Gbnf_parser__CompletedNatWitness!))
                   conjunction/4169 =
                     (function param/4171
                       (funct-body Gbnf_parser__GrammarFunctor.Make.MINIMAL.conjunction lib/grammarFunctor.ml(1249)<ghost>:35017-35029
                         (before Gbnf_parser__GrammarFunctor.Make.MINIMAL.conjunction lib/grammarFunctor.ml(1249):35021-35029
                           (field_imm 8
                             (global Gbnf_parser__CompletedNatWitness!)))))
                   epsilon/4172 =
                     (field_imm 2 (global Gbnf_parser__CompletedNatWitness!)))
                  (pseudo Gbnf_parser__GrammarFunctor.Make.MINIMAL lib/grammarFunctor.ml(1241):34662-35113
                    (makeblock 0 shortcut/4151 terminal/4167 disjunction/4168
                      conjunction/4169 epsilon/4172))))
            generates_nonempty_word/4218 =
              (function symbol/4220 : int
                (funct-body Gbnf_parser__GrammarFunctor.Make.generates_nonempty_word lib/grammarFunctor.ml(1270)<ghost>:35990-36056
                  (before Gbnf_parser__GrammarFunctor.Make.generates_nonempty_word lib/grammarFunctor.ml(1271):36008-36056
                    (not
                      (after Gbnf_parser__GrammarFunctor.Make.generates_nonempty_word lib/grammarFunctor.ml(1271):36012-36056
                        (apply (field_imm 1 TerminalSet/2387)
                          (after Gbnf_parser__GrammarFunctor.Make.generates_nonempty_word lib/grammarFunctor.ml(1271):36034-36055
                            (apply (field_imm 1 FIRST/4150) symbol/4220))))))))
            G/4244 =
              (let
                (n/4222 =[int] (field_imm 6 Nonterminal/2057)
                 index/4223 =
                   (function nt/4224
                     (funct-body Gbnf_parser__GrammarFunctor.Make.G.index lib/grammarFunctor.ml(1282)<ghost>:36470-36477
                       (before Gbnf_parser__GrammarFunctor.Make.G.index lib/grammarFunctor.ml(1282):36475-36477
                         nt/4224)))
                 iter/4225 = (field_imm 14 Nonterminal/2057)
                 labeled_successors/4226 =
                   (function yield/4228 nt/4229[int] : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.G.labeled_successors lib/grammarFunctor.ml(1284)<ghost>:36533-37157
                       (before Gbnf_parser__GrammarFunctor.Make.G.labeled_successors lib/grammarFunctor.ml(1285):36548-37157
                         (after Gbnf_parser__GrammarFunctor.Make.G.labeled_successors lib/grammarFunctor.ml(1285):36548-37157
                           (apply (field_imm 13 Production/3564) nt/4229
                             (function prod/4230[int] : int
                               (funct-body Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1285):36569-37157
                                 (before Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1286):36588-37151
                                   (let
                                     (rhs/4231 =
                                        (after Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1286):36598-36617
                                          (apply
                                            (field_imm 19 Production/3564)
                                            prod/4230)))
                                     (before Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1287):36627-37151
                                       (after Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1287):36627-37151
                                         (apply
                                           (field_imm 11
                                             (global Stdlib__Array!))
                                           (function i/4232[int] symbol/4233
                                             : int
                                             (funct-body Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1287):36646-37151
                                               (before Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1288):36671-37143
                                                 (switch* symbol/4233
                                                  case tag 0:
                                                   (let
                                                     (nt'/4234 =a
                                                        (field_imm 0
                                                          symbol/4233))
                                                     (before Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1294):36970-37143
                                                       (let
                                                         (gnw/4235 =[int]
                                                            (after Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1295):36994-37102
                                                              (apply
                                                                (field_imm 50
                                                                  (global Gbnf_parser__MArray!))
                                                                (function
                                                                  j/4236[int]
                                                                  symbol/4237
                                                                  : int
                                                                  (funct-body Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1295):37009-37098
                                                                    (before Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1296):37042-37082
                                                                    (&&
                                                                    (!=
                                                                    i/4232
                                                                    j/4236)
                                                                    (after Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1296):37052-37082
                                                                    (apply
                                                                    generates_nonempty_word/4218
                                                                    symbol/4237))))))
                                                                rhs/4231)))
                                                         (before Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1299):37130-37143
                                                           (after Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1299):37130-37143
                                                             (apply
                                                               yield/4228
                                                               gnw/4235
                                                               nt'/4234))))))
                                                  case tag 1:
                                                   (let
                                                     (*match*/13760 =a
                                                        (field_imm 0
                                                          symbol/4233))
                                                     (before Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1289):36715-36717
                                                       0))))))
                                           rhs/4231))))))))))))
                 successors/4238 =
                   (function yield/4240 nt/4241[int] : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.G.successors lib/grammarFunctor.ml(1302)<ghost>:37175-37239
                       (before Gbnf_parser__GrammarFunctor.Make.G.successors lib/grammarFunctor.ml(1303):37190-37239
                         (after Gbnf_parser__GrammarFunctor.Make.G.successors lib/grammarFunctor.ml(1303):37190-37239
                           (apply labeled_successors/4226
                             (function _gnw/4242[int] nt'/4243[int] : int
                               (funct-body Gbnf_parser__GrammarFunctor.Make.G.successors.(fun) lib/grammarFunctor.ml(1303):37209-37236
                                 (before Gbnf_parser__GrammarFunctor.Make.G.successors.(fun) lib/grammarFunctor.ml(1303):37226-37235
                                   (after Gbnf_parser__GrammarFunctor.Make.G.successors.(fun) lib/grammarFunctor.ml(1303):37226-37235
                                     (apply yield/4240 nt'/4243)))))
                             nt/4241))))))
                (pseudo Gbnf_parser__GrammarFunctor.Make.G lib/grammarFunctor.ml(1279):36399-37243
                  (makeblock 0 n/4222 index/4223 iter/4225
                    labeled_successors/4226 successors/4238)))
            unbounded/4245 =
              (makemutable 246
                (function param/13762
                  (let
                    (unbounded/4246 =
                       (after Gbnf_parser__GrammarFunctor.Make.unbounded lib/grammarFunctor.ml(1314):37652-37682
                         (caml_make_vect (field_imm 6 Nonterminal/2057) 0)))
                    (before Gbnf_parser__GrammarFunctor.Make.unbounded lib/grammarFunctor.ml(1315):37690-38241
                      (let
                        (T/4277 =
                           (apply
                             (let
                               (let/13761 =
                                  (field_imm 0 (global Gbnf_parser__Tarjan!)))
                               (field_imm 0 (global Gbnf_parser__Tarjan!)))
                             (makeblock 0 (field_mut 0 G/4244)
                               (field_mut 1 G/4244) (field_mut 4 G/4244)
                               (field_mut 2 G/4244))))
                        (seq
                          (after Gbnf_parser__GrammarFunctor.Make.unbounded lib/grammarFunctor.ml(1317):37782-38226
                            (apply (field_imm 2 G/4244)
                              (function nt/4278[int] : int
                                (funct-body Gbnf_parser__GrammarFunctor.Make.unbounded.(fun) lib/grammarFunctor.ml(1317):37789-38226
                                  (before Gbnf_parser__GrammarFunctor.Make.unbounded.(fun) lib/grammarFunctor.ml(1318):37811-38218
                                    (after Gbnf_parser__GrammarFunctor.Make.unbounded.(fun) lib/grammarFunctor.ml(1318):37811-38218
                                      (apply (field_imm 3 G/4244)
                                        (function gnw/4279[int] nt'/4280[int]
                                          : int
                                          (funct-body Gbnf_parser__GrammarFunctor.Make.unbounded.(fun) lib/grammarFunctor.ml(1318):37838-38218
                                            (before Gbnf_parser__GrammarFunctor.Make.unbounded.(fun) lib/grammarFunctor.ml(1320):37946-38208
                                              (if
                                                (&& gnw/4279
                                                  (==
                                                    (after Gbnf_parser__GrammarFunctor.Make.unbounded.(fun) lib/grammarFunctor.ml(1320):37956-37975
                                                      (apply
                                                        (field_imm 3 T/4277)
                                                        nt/4278))
                                                    (after Gbnf_parser__GrammarFunctor.Make.unbounded.(fun) lib/grammarFunctor.ml(1320):37978-37998
                                                      (apply
                                                        (field_imm 3 T/4277)
                                                        nt'/4280))))
                                                (before Gbnf_parser__GrammarFunctor.Make.unbounded.(fun) lib/grammarFunctor.ml(1320):38004-38208
                                                  (after Gbnf_parser__GrammarFunctor.Make.unbounded.(fun) lib/grammarFunctor.ml(1320):38004-38208
                                                    (apply
                                                      (field_imm 17
                                                        (global Stdlib__List!))
                                                      (function nt/4281[int]
                                                        : int
                                                        (funct-body Gbnf_parser__GrammarFunctor.Make.unbounded.(fun) lib/grammarFunctor.ml(1322):38132-38196
                                                          (before Gbnf_parser__GrammarFunctor.Make.unbounded.(fun) lib/grammarFunctor.ml(1323):38160-38182
                                                            (after Gbnf_parser__GrammarFunctor.Make.unbounded.(fun) lib/grammarFunctor.ml(1323):38160-38182
                                                              (array.set[int]
                                                                unbounded/4246
                                                                nt/4281 1)))))
                                                      (after Gbnf_parser__GrammarFunctor.Make.unbounded.(fun) lib/grammarFunctor.ml(1322):38091-38118
                                                        (apply
                                                          (field_imm 4
                                                            T/4277)
                                                          (after Gbnf_parser__GrammarFunctor.Make.unbounded.(fun) lib/grammarFunctor.ml(1322):38097-38118
                                                            (apply
                                                              (field_imm 3
                                                                T/4277)
                                                              nt/4278)))))))
                                                0))))
                                        nt/4278)))))))
                          (before Gbnf_parser__GrammarFunctor.Make.unbounded lib/grammarFunctor.ml(1328):38232-38241
                            unbounded/4246)))))))
            unbounded/4282 =
              (function nt/4283[int] : int
                (funct-body Gbnf_parser__GrammarFunctor.Make.unbounded lib/grammarFunctor.ml(1331)<ghost>:38263-38304
                  (before Gbnf_parser__GrammarFunctor.Make.unbounded lib/grammarFunctor.ml(1332):38277-38304
                    (after Gbnf_parser__GrammarFunctor.Make.unbounded lib/grammarFunctor.ml(1332):38277-38304
                      (array.get[int]
                        (after Gbnf_parser__GrammarFunctor.Make.unbounded lib/grammarFunctor.ml(1332):38277-38299
                          (let
                            (lzarg/13763 = unbounded/4245
                             tag/13764 =a (caml_obj_tag lzarg/13763))
                            (if (== tag/13764 250) (field_mut 0 lzarg/13763)
                              (if (|| (== tag/13764 246) (== tag/13764 244))
                                (apply
                                  (field_imm 1 (global CamlinternalLazy!))
                                  (opaque lzarg/13763))
                                lzarg/13763))))
                        nt/4283)))))
            MAXIMAL/4319 =
              (apply
                (apply GenericAnalysis/4037
                  (let
                    (let/13765 = (global Gbnf_parser__NatInfinityMax!)
                     let/13766 =a (global Gbnf_parser__NatInfinityMax!))
                    (makeblock 0 (field_mut 0 let/13766)
                      (field_mut 4 let/13766) (field_mut 5 let/13766))))
                (let
                  (shortcut/4296 =
                     (function nt/4298[int]
                       (funct-body Gbnf_parser__GrammarFunctor.Make.MAXIMAL.shortcut lib/grammarFunctor.ml(1351)<ghost>:39196-39245
                         (before Gbnf_parser__GrammarFunctor.Make.MAXIMAL.shortcut lib/grammarFunctor.ml(1351):39201-39245
                           (if
                             (after Gbnf_parser__GrammarFunctor.Make.MAXIMAL.shortcut lib/grammarFunctor.ml(1351):39204-39216
                               (apply unbounded/4282 nt/4298))
                             (before Gbnf_parser__GrammarFunctor.Make.MAXIMAL.shortcut lib/grammarFunctor.ml(1351):39222-39235
                               (makeblock 0 (int)
                                 (field_imm 1
                                   (global Gbnf_parser__NatInfinityMax!))))
                             (before Gbnf_parser__GrammarFunctor.Make.MAXIMAL.shortcut lib/grammarFunctor.ml(1351):39241-39245
                               0)))))
                   terminal/4299 =
                     (function _tok/4301 : int
                       (funct-body Gbnf_parser__GrammarFunctor.Make.MAXIMAL.terminal lib/grammarFunctor.ml(1353)<ghost>:39309-39324
                         (before Gbnf_parser__GrammarFunctor.Make.MAXIMAL.terminal lib/grammarFunctor.ml(1353):39316-39324
                           (after Gbnf_parser__GrammarFunctor.Make.MAXIMAL.terminal lib/grammarFunctor.ml(1353):39316-39324
                             (apply
                               (field_imm 2
                                 (global Gbnf_parser__NatInfinityMax!))
                               1)))))
                   disjunction/4302 =
                     (field_imm 7 (global Gbnf_parser__NatInfinityMax!))
                   conjunction/4303 =
                     (function param/4305
                       (funct-body Gbnf_parser__GrammarFunctor.Make.MAXIMAL.conjunction lib/grammarFunctor.ml(1357)<ghost>:39537-39549
                         (before Gbnf_parser__GrammarFunctor.Make.MAXIMAL.conjunction lib/grammarFunctor.ml(1357):39541-39549
                           (field_imm 9
                             (global Gbnf_parser__NatInfinityMax!)))))
                   epsilon/4306 =[int]
                     (field_imm 0 (global Gbnf_parser__NatInfinityMax!)))
                  (pseudo Gbnf_parser__GrammarFunctor.Make.MAXIMAL lib/grammarFunctor.ml(1349):39144-39632
                    (makeblock 0 shortcut/4296 terminal/4299 disjunction/4302
                      conjunction/4303 epsilon/4306))))
            *match*/13820 =
              (if (field_imm 1 G/1226)
                (before Gbnf_parser__GrammarFunctor.Make lib/grammarFunctor.ml(1365):39742-40977
                  (after Gbnf_parser__GrammarFunctor.Make lib/grammarFunctor.ml(1365):39742-40977
                    (apply (field_imm 22 (global Gbnf_parser__StringSet!))
                      (function symbol/4320 : int
                        (funct-body Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1372):40124-40557
                          (before Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1373):40145-40551
                            (let
                              (nt/4321 =[int]
                                 (after Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1373):40154-40179
                                   (apply (field_imm 11 Nonterminal/2057)
                                     symbol/4320)))
                              (before Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1374):40189-40551
                                (seq
                                  (if
                                    (not
                                      (after Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1374):40196-40221
                                        (apply (field_imm 0 NONEMPTY/4094)
                                          nt/4321)))
                                    (before Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1375):40235-40357
                                      (after Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1375):40235-40357
                                        (apply
                                          (field_imm 6
                                            (global Gbnf_parser__Error!))
                                          (after Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1376):40257-40283
                                            (apply
                                              (field_imm 12 Nonterminal/2057)
                                              nt/4321))
                                          [0:
                                           [2:
                                            0
                                            [11:
                                             " generates the empty language."
                                             0]]
                                           "%s generates the empty language."]
                                          (after Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1377):40329-40357
                                            (apply
                                              (field_imm 10 Nonterminal/2057)
                                              0 nt/4321)))))
                                    0)
                                  (before Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1378):40365-40551
                                    (if
                                      (after Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1378):40368-40411
                                        (apply (field_imm 1 TerminalSet/2387)
                                          (after Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1378):40389-40411
                                            (apply (field_imm 0 FIRST/4150)
                                              nt/4321))))
                                      (before Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1379):40425-40551
                                        (after Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1379):40425-40551
                                          (apply
                                            (field_imm 6
                                              (global Gbnf_parser__Error!))
                                            (after Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1380):40447-40473
                                              (apply
                                                (field_imm 12
                                                  Nonterminal/2057)
                                                nt/4321))
                                            [0:
                                             [2:
                                              0
                                              [11:
                                               " generates the language {epsilon}."
                                               0]]
                                             "%s generates the language {epsilon}."]
                                            (after Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1381):40523-40551
                                              (apply
                                                (field_imm 10
                                                  Nonterminal/2057)
                                                0 nt/4321)))))
                                      0))))))))
                      (field_imm 3 (field_imm 0 G/1226)))))
                0)
            FOLLOW/4509 =
              (function P/13779 is_a_functor
                (let
                  (P/4329 =a P/13779
                   M/4337 =
                     (apply
                       (let
                         (let/13767 =
                            (field_imm 10 (global Gbnf_parser__Glue!)))
                         (field_imm 10 (global Gbnf_parser__Glue!)))
                       (makeblock 0 (field_mut 6 Nonterminal/2057)))
                   S/4419 =
                     (apply
                       (apply
                         (let
                           (let/13768 =
                              (field_imm 0 (global Gbnf_parser__FixSolver!)))
                           (field_imm 0 (global Gbnf_parser__FixSolver!)))
                         (makeblock 0 (field_mut 0 M/4337)
                           (field_mut 2 M/4337) (field_mut 3 M/4337)
                           (field_mut 1 M/4337) (field_mut 4 M/4337)))
                       (makeblock 0 (field_mut 0 P/4329)))
                   *match*/13778 =
                     (let
                       (sharp/4420 =
                          (after Gbnf_parser__GrammarFunctor.Make.FOLLOW lib/grammarFunctor.ml(1451):43124-43149
                            (apply (field_imm 2 P/4329)
                              (field_imm 8 Terminal/2246))))
                       (before Gbnf_parser__GrammarFunctor.Make.FOLLOW lib/grammarFunctor.ml(1452):43157-43317
                         (for nt/4421 0 to
                           (- (field_imm 5 Nonterminal/2057) 1)
                           (before Gbnf_parser__GrammarFunctor.Make.FOLLOW lib/grammarFunctor.ml(1453):43202-43308
                             (seq
                               (if
                                 (after Gbnf_parser__GrammarFunctor.Make.FOLLOW lib/grammarFunctor.ml(1453):43209-43243
                                   (apply (field_imm 8 Nonterminal/2057)
                                     nt/4421))
                                 0
                                 (raise
                                   (after Gbnf_parser__GrammarFunctor.Make.FOLLOW lib/grammarFunctor.ml(1453):43202-43243
                                     (makeblock 0 (global Assert_failure/28!)
                                       [0: "lib/grammarFunctor.ml" 1453 6]))))
                               (before Gbnf_parser__GrammarFunctor.Make.FOLLOW lib/grammarFunctor.ml(1455):43284-43308
                                 (after Gbnf_parser__GrammarFunctor.Make.FOLLOW lib/grammarFunctor.ml(1455):43284-43308
                                   (apply (field_imm 5 S/4419) sharp/4420
                                     nt/4421))))))))
                   *match*/13776 =
                     (after Gbnf_parser__GrammarFunctor.Make.FOLLOW lib/grammarFunctor.ml(1463):43587-44325
                       (apply (field_imm 11 (global Stdlib__Array!))
                         (function prod/4422[int] param/4430 : int
                           (funct-body Gbnf_parser__GrammarFunctor.Make.FOLLOW.(fun) lib/grammarFunctor.ml(1463):43599-44308
                             (let
                               (rhs/4424 =a (field_imm 1 param/4430)
                                nt1/4423 =a (field_imm 0 param/4430))
                               (before Gbnf_parser__GrammarFunctor.Make.FOLLOW.(fun) lib/grammarFunctor.ml(1465):43708-44302
                                 (after Gbnf_parser__GrammarFunctor.Make.FOLLOW.(fun) lib/grammarFunctor.ml(1465):43708-44302
                                   (apply
                                     (field_imm 11 (global Stdlib__Array!))
                                     (function i/4425[int] symbol/4426 : int
                                       (funct-body Gbnf_parser__GrammarFunctor.Make.FOLLOW.(fun) lib/grammarFunctor.ml(1465):43720-44298
                                         (before Gbnf_parser__GrammarFunctor.Make.FOLLOW.(fun) lib/grammarFunctor.ml(1466):43745-44290
                                           (switch* symbol/4426
                                            case tag 0:
                                             (let
                                               (nt2/4427 =a
                                                  (field_imm 0 symbol/4426))
                                               (before Gbnf_parser__GrammarFunctor.Make.FOLLOW.(fun) lib/grammarFunctor.ml(1470):43840-44290
                                                 (let
                                                   (nullable/4428 =[int]
                                                      (after Gbnf_parser__GrammarFunctor.Make.FOLLOW.(fun) lib/grammarFunctor.ml(1470):43855-43885
                                                        (apply
                                                          (field_imm 2
                                                            NULLABLE/4123)
                                                          prod/4422
                                                          (+ i/4425 1)))
                                                    first/4429 =
                                                      (after Gbnf_parser__GrammarFunctor.Make.FOLLOW.(fun) lib/grammarFunctor.ml(1471):43910-43928
                                                        (apply
                                                          (field_imm 3
                                                            P/4329)
                                                          prod/4422
                                                          (+ i/4425 1))))
                                                   (before Gbnf_parser__GrammarFunctor.Make.FOLLOW.(fun) lib/grammarFunctor.ml(1474):44071-44290
                                                     (seq
                                                       (after Gbnf_parser__GrammarFunctor.Make.FOLLOW.(fun) lib/grammarFunctor.ml(1474):44071-44096
                                                         (apply
                                                           (field_imm 5
                                                             S/4419)
                                                           first/4429
                                                           nt2/4427))
                                                       (before Gbnf_parser__GrammarFunctor.Make.FOLLOW.(fun) lib/grammarFunctor.ml(1477):44236-44290
                                                         (if nullable/4428
                                                           (before Gbnf_parser__GrammarFunctor.Make.FOLLOW.(fun) lib/grammarFunctor.ml(1478):44267-44290
                                                             (after Gbnf_parser__GrammarFunctor.Make.FOLLOW.(fun) lib/grammarFunctor.ml(1478):44267-44290
                                                               (apply
                                                                 (field_imm 3
                                                                   S/4419)
                                                                 nt1/4423
                                                                 nt2/4427)))
                                                           0)))))))
                                            case tag 1:
                                             (let
                                               (*match*/13769 =a
                                                  (field_imm 0 symbol/4426))
                                               (before Gbnf_parser__GrammarFunctor.Make.FOLLOW.(fun) lib/grammarFunctor.ml(1468):43799-43801
                                                 0))))))
                                     rhs/4424))))))
                         (field_imm 4 Production/3564)))
                   follow/4431 =
                     (makemutable 246
                       (function param/13770
                         (let (S/4447 = (apply (field_imm 6 S/4419) 0))
                           (function nt/4448[int]
                             (funct-body Gbnf_parser__GrammarFunctor.Make.FOLLOW.follow.(fun) lib/grammarFunctor.ml(1487):44487-44543
                               (before Gbnf_parser__GrammarFunctor.Make.FOLLOW.follow.(fun) lib/grammarFunctor.ml(1487):44497-44543
                                 (after Gbnf_parser__GrammarFunctor.Make.FOLLOW.follow.(fun) lib/grammarFunctor.ml(1487):44497-44543
                                   (apply
                                     (field_imm 2 (global Stdlib__Option!))
                                     (after Gbnf_parser__GrammarFunctor.Make.FOLLOW.follow.(fun) lib/grammarFunctor.ml(1487):44510-44525
                                       (apply (field_imm 8 S/4447) nt/4448))
                                     (field_imm 1 P/4329)))))))))
                   follow/4449 =
                     (function nt/4450[int]
                       (funct-body Gbnf_parser__GrammarFunctor.Make.FOLLOW.follow lib/grammarFunctor.ml(1491):44600-44632
                         (before Gbnf_parser__GrammarFunctor.Make.FOLLOW.follow lib/grammarFunctor.ml(1491):44610-44632
                           (after Gbnf_parser__GrammarFunctor.Make.FOLLOW.follow lib/grammarFunctor.ml(1491):44610-44632
                             (apply
                               (after Gbnf_parser__GrammarFunctor.Make.FOLLOW.follow lib/grammarFunctor.ml(1491):44610-44629
                                 (let
                                   (lzarg/13771 = follow/4431
                                    tag/13772 =a (caml_obj_tag lzarg/13771))
                                   (if (== tag/13772 250)
                                     (field_mut 0 lzarg/13771)
                                     (if
                                       (|| (== tag/13772 246)
                                         (== tag/13772 244))
                                       (apply
                                         (field_imm 1
                                           (global CamlinternalLazy!))
                                         (opaque lzarg/13771))
                                       lzarg/13771))))
                               nt/4450))))))
                  (pseudo Gbnf_parser__GrammarFunctor.Make.FOLLOW lib/grammarFunctor.ml(1439):42907-44637
                    (makeblock 0 M/4337 S/4419 follow/4449))))
            follow/4510 =
              (let
                (F/4640 =
                   (apply FOLLOW/4509
                     (let
                       (include/13780 =a TerminalSet/2387
                        empty/4514 =a (field_mut 0 include/13780)
                        is_empty/4515 =a (field_mut 1 include/13780)
                        singleton/4516 =a (field_mut 2 include/13780)
                        is_singleton/4517 =a (field_mut 3 include/13780)
                        cardinal/4518 =a (field_mut 4 include/13780)
                        choose/4519 =a (field_mut 5 include/13780)
                        mem/4520 =a (field_mut 6 include/13780)
                        add/4521 =a (field_mut 7 include/13780)
                        remove/4522 =a (field_mut 8 include/13780)
                        union/4523 =a (field_mut 9 include/13780)
                        inter/4524 =a (field_mut 10 include/13780)
                        disjoint/4525 =a (field_mut 11 include/13780)
                        iter/4526 =a (field_mut 12 include/13780)
                        fold/4527 =a (field_mut 13 include/13780)
                        elements/4528 =a (field_mut 14 include/13780)
                        compare/4529 =a (field_mut 15 include/13780)
                        equal/4530 =a (field_mut 16 include/13780)
                        subset/4531 =a (field_mut 17 include/13780)
                        print/4532 =a (field_mut 18 include/13780)
                        universe/4533 =a (field_mut 19 include/13780)
                        bottom/4535 =a (field_mut 20 include/13780)
                        is_maximal/4536 =a (field_mut 21 include/13780)
                        leq_join/4537 =a (field_mut 22 include/13780)
                        terminal/4538 = singleton/4516
                        first/4539 = (field_imm 2 FIRST/4150))
                       (pseudo Gbnf_parser__GrammarFunctor.Make.follow.F lib/grammarFunctor.ml(1498):44785-44883
                         (makeblock 0 leq_join/4537 bottom/4535 terminal/4538
                           first/4539)))))
                (field_imm 2 F/4640))
            tfollow/4641 =
              (makemutable 246
                (function param/13782
                  (let
                    (tfollow/4642 =
                       (after Gbnf_parser__GrammarFunctor.Make.tfollow lib/grammarFunctor.ml(1525):45544-45583
                         (caml_make_vect (field_imm 4 Terminal/2246)
                           (field_imm 0 TerminalSet/2387))))
                    (before Gbnf_parser__GrammarFunctor.Make.tfollow lib/grammarFunctor.ml(1529):45636-46453
                      (seq
                        (after Gbnf_parser__GrammarFunctor.Make.tfollow lib/grammarFunctor.ml(1529):45636-46439
                          (apply (field_imm 11 (global Stdlib__Array!))
                            (function prod/4643[int] param/4651 : int
                              (funct-body Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1529):45648-46422
                                (let
                                  (rhs/4645 =a (field_imm 1 param/4651)
                                   nt1/4644 =a (field_imm 0 param/4651))
                                  (before Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1531):45753-46416
                                    (after Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1531):45753-46416
                                      (apply
                                        (field_imm 11
                                          (global Stdlib__Array!))
                                        (function i/4646[int] symbol/4647
                                          : int
                                          (funct-body Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1531):45765-46412
                                            (before Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1532):45790-46404
                                              (switch* symbol/4647
                                               case tag 0:
                                                (let
                                                  (*match*/13781 =a
                                                     (field_imm 0
                                                       symbol/4647))
                                                  (before Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1534):45844-45846
                                                    0))
                                               case tag 1:
                                                (let
                                                  (t2/4648 =a
                                                     (field_imm 0
                                                       symbol/4647))
                                                  (before Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1536):45884-46404
                                                    (let
                                                      (nullable/4649 =[int]
                                                         (after Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1536):45899-45929
                                                           (apply
                                                             (field_imm 2
                                                               NULLABLE/4123)
                                                             prod/4643
                                                             (+ i/4646 1)))
                                                       first/4650 =
                                                         (after Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1537):45954-45981
                                                           (apply
                                                             (field_imm 2
                                                               FIRST/4150)
                                                             prod/4643
                                                             (+ i/4646 1))))
                                                      (before Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1540):46123-46404
                                                        (seq
                                                          (after Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1540):46123-46175
                                                            (array.set[gen]
                                                              tfollow/4642
                                                              t2/4648
                                                              (after Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1540):46139-46175
                                                                (apply
                                                                  (field_imm 9
                                                                    TerminalSet/2387)
                                                                  first/4650
                                                                  (after Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1540):46163-46175
                                                                    (array.get[gen]
                                                                    tfollow/4642
                                                                    t2/4648))))))
                                                          (before Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1543):46314-46404
                                                            (if nullable/4649
                                                              (before Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1544):46345-46404
                                                                (after Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1544):46345-46404
                                                                  (array.set[gen]
                                                                    tfollow/4642
                                                                    t2/4648
                                                                    (after Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1544):46361-46404
                                                                    (apply
                                                                    (field_imm 9
                                                                    TerminalSet/2387)
                                                                    (after Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1544):46379-46391
                                                                    (apply
                                                                    follow/4510
                                                                    nt1/4644))
                                                                    (after Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1544):46392-46404
                                                                    (array.get[gen]
                                                                    tfollow/4642
                                                                    t2/4648)))))))
                                                              0)))))))))))
                                        rhs/4645))))))
                            (field_imm 4 Production/3564)))
                        (before Gbnf_parser__GrammarFunctor.Make.tfollow lib/grammarFunctor.ml(1548):46446-46453
                          tfollow/4642))))))
            tfollow/4652 =
              (function t/4653[int]
                (funct-body Gbnf_parser__GrammarFunctor.Make.tfollow lib/grammarFunctor.ml(1554)<ghost>:46504-46534
                  (before Gbnf_parser__GrammarFunctor.Make.tfollow lib/grammarFunctor.ml(1555):46510-46534
                    (after Gbnf_parser__GrammarFunctor.Make.tfollow lib/grammarFunctor.ml(1555):46510-46534
                      (array.get[gen]
                        (after Gbnf_parser__GrammarFunctor.Make.tfollow lib/grammarFunctor.ml(1555):46510-46530
                          (let
                            (lzarg/13783 = tfollow/4641
                             tag/13784 =a (caml_obj_tag lzarg/13783))
                            (if (== tag/13784 250) (field_mut 0 lzarg/13783)
                              (if (|| (== tag/13784 246) (== tag/13784 244))
                                (apply
                                  (field_imm 1 (global CamlinternalLazy!))
                                  (opaque lzarg/13783))
                                lzarg/13783))))
                        t/4653)))))
            sfirst/4654 =
              (function prod/4656[int] i/4657[int]
                (funct-body Gbnf_parser__GrammarFunctor.Make.sfirst lib/grammarFunctor.ml(1575)<ghost>:47127-47771
                  (before Gbnf_parser__GrammarFunctor.Make.sfirst lib/grammarFunctor.ml(1576):47138-47771
                    (let
                      (rhs/4658 =
                         (after Gbnf_parser__GrammarFunctor.Make.sfirst lib/grammarFunctor.ml(1576):47148-47167
                           (apply (field_imm 19 Production/3564) prod/4656)))
                      (before Gbnf_parser__GrammarFunctor.Make.sfirst lib/grammarFunctor.ml(1577):47173-47771
                        (let (n/4659 =[int] (array.length[addr] rhs/4658))
                          (before Gbnf_parser__GrammarFunctor.Make.sfirst lib/grammarFunctor.ml(1578):47203-47771
                            (letrec
                              (loop/4660
                                 (function i/4661[int]
                                   (funct-body Gbnf_parser__GrammarFunctor.Make.sfirst.loop lib/grammarFunctor.ml(1578)<ghost>:47216-47757
                                     (before Gbnf_parser__GrammarFunctor.Make.sfirst.loop lib/grammarFunctor.ml(1579):47224-47757
                                       (if (== i/4661 n/4659)
                                         (before Gbnf_parser__GrammarFunctor.Make.sfirst.loop lib/grammarFunctor.ml(1581):47305-47320
                                           (field_imm 0 SymbolSet/2738))
                                         (before Gbnf_parser__GrammarFunctor.Make.sfirst.loop lib/grammarFunctor.ml(1583):47336-47757
                                           (let
                                             (sym/4662 =
                                                (after Gbnf_parser__GrammarFunctor.Make.sfirst.loop lib/grammarFunctor.ml(1583):47346-47353
                                                  (array.get[addr] rhs/4658
                                                    i/4661)))
                                             (before Gbnf_parser__GrammarFunctor.Make.sfirst.loop lib/grammarFunctor.ml(1586):47503-47757
                                               (after Gbnf_parser__GrammarFunctor.Make.sfirst.loop lib/grammarFunctor.ml(1586):47503-47757
                                                 (apply
                                                   (field_imm 4
                                                     SymbolSet/2738)
                                                   (after Gbnf_parser__GrammarFunctor.Make.sfirst.loop lib/grammarFunctor.ml(1587):47527-47552
                                                     (apply
                                                       (field_imm 2
                                                         SymbolSet/2738)
                                                       sym/4662))
                                                   (if
                                                     (after Gbnf_parser__GrammarFunctor.Make.sfirst.loop lib/grammarFunctor.ml(1590):47698-47717
                                                       (apply
                                                         (field_imm 1
                                                           NULLABLE/4123)
                                                         sym/4662))
                                                     (before Gbnf_parser__GrammarFunctor.Make.sfirst.loop lib/grammarFunctor.ml(1590):47723-47735
                                                       (after Gbnf_parser__GrammarFunctor.Make.sfirst.loop lib/grammarFunctor.ml(1590):47723-47735
                                                         (apply loop/4660
                                                           (+ i/4661 1))))
                                                     (before Gbnf_parser__GrammarFunctor.Make.sfirst.loop lib/grammarFunctor.ml(1590):47741-47756
                                                       (field_imm 0
                                                         SymbolSet/2738)))))))))))))
                              (before Gbnf_parser__GrammarFunctor.Make.sfirst lib/grammarFunctor.ml(1592):47765-47771
                                (after Gbnf_parser__GrammarFunctor.Make.sfirst lib/grammarFunctor.ml(1592):47765-47771
                                  (apply loop/4660 i/4657)))))))))))
            sfollow/4663 =
              (let
                (F/4778 =
                   (apply FOLLOW/4509
                     (let
                       (bottom/4664 = (field_imm 44 SymbolSet/2738)
                        include/13785 =
                          (apply
                            (let
                              (let/13786 =
                                 (field_imm 13 (global Gbnf_parser__Glue!)))
                              (field_imm 13 (global Gbnf_parser__Glue!)))
                            (makeblock 0 (field_mut 45 SymbolSet/2738)
                              (field_mut 46 SymbolSet/2738)))
                        leq_join/4673 =a (field_mut 0 include/13785)
                        terminal/4674 =
                          (function t/4676[int]
                            (funct-body Gbnf_parser__GrammarFunctor.Make.sfollow.F.terminal lib/grammarFunctor.ml(1602)<ghost>:48097-48133
                              (before Gbnf_parser__GrammarFunctor.Make.sfollow.F.terminal lib/grammarFunctor.ml(1602):48101-48133
                                (after Gbnf_parser__GrammarFunctor.Make.sfollow.F.terminal lib/grammarFunctor.ml(1602):48101-48133
                                  (apply (field_imm 2 SymbolSet/2738)
                                    (makeblock 1 (int) t/4676))))))
                        first/4677 = sfirst/4654)
                       (pseudo Gbnf_parser__GrammarFunctor.Make.sfollow.F lib/grammarFunctor.ml(1599):47988-48162
                         (makeblock 0 leq_join/4673 bottom/4664 terminal/4674
                           first/4677)))))
                (field_imm 2 F/4778))
            explain/4783 =
              (function tok/4785[int] rhs/4786 i/4787[int]
                (funct-body Gbnf_parser__GrammarFunctor.Make.explain lib/grammarFunctor.ml(1637)<ghost>:49504-50140
                  (before Gbnf_parser__GrammarFunctor.Make.explain lib/grammarFunctor.ml(1638):49560-50140
                    (let (length/4788 =[int] (array.length[addr] rhs/4786))
                      (before Gbnf_parser__GrammarFunctor.Make.explain lib/grammarFunctor.ml(1639):49595-50140
                        (letrec
                          (loop/4789
                             (function i/4790[int]
                               (funct-body Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1639)<ghost>:49608-50126
                                 (before Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1640):49616-50126
                                   (seq
                                     (if (< i/4790 length/4788) 0
                                       (raise
                                         (after Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1640):49616-49635
                                           (makeblock 0
                                             (global Assert_failure/28!)
                                             [0:
                                              "lib/grammarFunctor.ml" 1640 4]))))
                                     (before Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1641):49641-50126
                                       (let
                                         (symbol/4791 =
                                            (after Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1641):49654-49661
                                              (array.get[addr] rhs/4786
                                                i/4790)))
                                         (before Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1642):49669-50126
                                           (switch* symbol/4791
                                            case tag 0:
                                             (let
                                               (nt/4793 =a
                                                  (field_imm 0 symbol/4791))
                                               (before Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1647):49798-50126
                                                 (if
                                                   (after Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1647):49801-49843
                                                     (apply
                                                       (field_imm 6
                                                         TerminalSet/2387)
                                                       tok/4785
                                                       (after Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1647):49821-49843
                                                         (apply
                                                           (field_imm 0
                                                             FIRST/4150)
                                                           nt/4793))))
                                                   (before Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1648):49859-49875
                                                     (makeblock 0 (int,int)
                                                       tok/4785 nt/4793))
                                                   (before Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1649):49889-50126
                                                     (seq
                                                       (if
                                                         (after Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1650):49912-49937
                                                           (apply
                                                             (field_imm 0
                                                               NULLABLE/4123)
                                                             nt/4793))
                                                         0
                                                         (raise
                                                           (after Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1650):49905-49937
                                                             (makeblock 0
                                                               (global Assert_failure/28!)
                                                               [0:
                                                                "lib/grammarFunctor.ml"
                                                                1650 10]))))
                                                       (before Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1651):49949-50114
                                                         (let
                                                           (e/4796 =
                                                              (after Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1651):49955-49967
                                                                (apply
                                                                  loop/4789
                                                                  (+ i/4790
                                                                    1))))
                                                           (catch
                                                             (switch* e/4796
                                                              case int 0:
                                                               (exit 116)
                                                              case tag 0:
                                                               (exit 116)
                                                              case tag 1:
                                                               (let
                                                                 (e/4795 =a
                                                                    (field_imm 1
                                                                    e/4796)
                                                                  symbols/4794 =a
                                                                    (field_imm 0
                                                                    e/4796))
                                                                 (before Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1653):50025-50057
                                                                   (makeblock 1
                                                                    (makeblock 0
                                                                    symbol/4791
                                                                    symbols/4794)
                                                                    e/4795))))
                                                            with (116)
                                                             (before Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1655):50089-50114
                                                               (makeblock 1
                                                                 (makeblock 0
                                                                   symbol/4791
                                                                   0)
                                                                 e/4796))))))))))
                                            case tag 1:
                                             (let
                                               (tok'/4792 =a
                                                  (field_imm 0 symbol/4791))
                                               (before Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1644):49718-49768
                                                 (seq
                                                   (if
                                                     (after Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1644):49725-49750
                                                       (apply
                                                         (field_imm 3
                                                           Terminal/2246)
                                                         tok/4785 tok'/4792))
                                                     0
                                                     (raise
                                                       (after Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1644):49718-49750
                                                         (makeblock 0
                                                           (global Assert_failure/28!)
                                                           [0:
                                                            "lib/grammarFunctor.ml"
                                                            1644 8]))))
                                                   (before Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1645):49760-49768
                                                     0)))))))))))))
                          (before Gbnf_parser__GrammarFunctor.Make.explain lib/grammarFunctor.ml(1658):50134-50140
                            (after Gbnf_parser__GrammarFunctor.Make.explain lib/grammarFunctor.ml(1658):50134-50140
                              (apply loop/4789 i/4787))))))))))
           (letrec
             (convert/4797
                (function param/4803
                  (funct-body Gbnf_parser__GrammarFunctor.Make.convert lib/grammarFunctor.ml(1660):50160-50508
                    (switch* param/4803
                     case int 0:
                      (before Gbnf_parser__GrammarFunctor.Make.convert lib/grammarFunctor.ml(1662):50191-50193
                        "")
                     case tag 0:
                      (let
                        (nt/4799 =a (field_imm 1 param/4803)
                         tok/4798 =a (field_imm 0 param/4803))
                        (before Gbnf_parser__GrammarFunctor.Make.convert lib/grammarFunctor.ml(1664):50224-50327
                          (after Gbnf_parser__GrammarFunctor.Make.convert lib/grammarFunctor.ml(1664):50224-50327
                            (apply (field_imm 3 (global Stdlib__Printf!))
                              [0:
                               [2: 0 [11: " can begin with " [2: 0 0]]]
                               "%s can begin with %s"]
                              (after Gbnf_parser__GrammarFunctor.Make.convert lib/grammarFunctor.ml(1665):50270-50298
                                (apply (field_imm 10 Nonterminal/2057) 0
                                  nt/4799))
                              (after Gbnf_parser__GrammarFunctor.Make.convert lib/grammarFunctor.ml(1666):50307-50327
                                (apply (field_imm 6 Terminal/2246) tok/4798))))))
                     case tag 1:
                      (let
                        (e/4801 =a (field_imm 1 param/4803)
                         symbols/4800 =a (field_imm 0 param/4803))
                        (before Gbnf_parser__GrammarFunctor.Make.convert lib/grammarFunctor.ml(1668):50364-50508
                          (let
                            (e/4802 =
                               (after Gbnf_parser__GrammarFunctor.Make.convert lib/grammarFunctor.ml(1668):50372-50381
                                 (apply convert/4797 e/4801)))
                            (before Gbnf_parser__GrammarFunctor.Make.convert lib/grammarFunctor.ml(1669):50391-50508
                              (after Gbnf_parser__GrammarFunctor.Make.convert lib/grammarFunctor.ml(1669):50391-50508
                                (apply (field_imm 3 (global Stdlib__Printf!))
                                  [0:
                                   [2: 0 [11: " can vanish" [2: 0 [2: 0 0]]]]
                                   "%s can vanish%s%s"]
                                  (after Gbnf_parser__GrammarFunctor.Make.convert lib/grammarFunctor.ml(1670):50434-50457
                                    (apply (field_imm 11 Symbol/2545)
                                      symbols/4800))
                                  (if
                                    (after Gbnf_parser__GrammarFunctor.Make.convert lib/grammarFunctor.ml(1671):50470-50476
                                      (caml_string_equal e/4802 ""))
                                    (before Gbnf_parser__GrammarFunctor.Make.convert lib/grammarFunctor.ml(1671):50482-50484
                                      "")
                                    (before Gbnf_parser__GrammarFunctor.Make.convert lib/grammarFunctor.ml(1671):50490-50497
                                      " and "))
                                  e/4802))))))))))
             (let
               (Analysis/4843 =
                  (let
                    (nullable/4804 = (field_imm 0 NULLABLE/4123)
                     nullable_symbol/4805 = (field_imm 1 NULLABLE/4123)
                     first/4806 = (field_imm 0 FIRST/4150)
                     first_symbol/4807 = (field_imm 1 FIRST/4150)
                     nullable_first_prod/4808 =
                       (function prod/4810[int] i/4811[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Analysis.nullable_first_prod lib/grammarFunctor.ml(1689)<ghost>:50883-50951
                           (before Gbnf_parser__GrammarFunctor.Make.Analysis.nullable_first_prod lib/grammarFunctor.ml(1690):50896-50951
                             (makeblock 0 (int,*)
                               (after Gbnf_parser__GrammarFunctor.Make.Analysis.nullable_first_prod lib/grammarFunctor.ml(1690):50896-50922
                                 (apply (field_imm 2 NULLABLE/4123) prod/4810
                                   i/4811))
                               (after Gbnf_parser__GrammarFunctor.Make.Analysis.nullable_first_prod lib/grammarFunctor.ml(1691):50928-50951
                                 (apply (field_imm 2 FIRST/4150) prod/4810
                                   i/4811))))))
                     nullable_first_prod/4812 =
                       (after Gbnf_parser__GrammarFunctor.Make.Analysis.nullable_first_prod lib/grammarFunctor.ml(1697):51084-51231
                         (apply (field_imm 2 (global Gbnf_parser__Misc!))
                           (field_imm 1 Production/3564)
                           (function prod/4813[int]
                             (funct-body Gbnf_parser__GrammarFunctor.Make.Analysis.nullable_first_prod.(fun) lib/grammarFunctor.ml(1697):51111-51231
                               (before Gbnf_parser__GrammarFunctor.Make.Analysis.nullable_first_prod.(fun) lib/grammarFunctor.ml(1698):51130-51225
                                 (after Gbnf_parser__GrammarFunctor.Make.Analysis.nullable_first_prod.(fun) lib/grammarFunctor.ml(1698):51130-51225
                                   (apply
                                     (field_imm 2
                                       (global Gbnf_parser__Misc!))
                                     (+
                                       (after Gbnf_parser__GrammarFunctor.Make.Analysis.nullable_first_prod.(fun) lib/grammarFunctor.ml(1698):51145-51167
                                         (apply
                                           (field_imm 20 Production/3564)
                                           prod/4813))
                                       1)
                                     (function i/4814[int]
                                       (funct-body Gbnf_parser__GrammarFunctor.Make.Analysis.nullable_first_prod.(fun) lib/grammarFunctor.ml(1698):51173-51225
                                         (before Gbnf_parser__GrammarFunctor.Make.Analysis.nullable_first_prod.(fun) lib/grammarFunctor.ml(1699):51191-51217
                                           (after Gbnf_parser__GrammarFunctor.Make.Analysis.nullable_first_prod.(fun) lib/grammarFunctor.ml(1699):51191-51217
                                             (apply nullable_first_prod/4808
                                               prod/4813 i/4814))))))))))))
                     first_prod_lookahead/4815 =
                       (function prod/4817[int] i/4818[int] z/4819[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Analysis.first_prod_lookahead lib/grammarFunctor.ml(1703)<ghost>:51260-51398
                           (before Gbnf_parser__GrammarFunctor.Make.Analysis.first_prod_lookahead lib/grammarFunctor.ml(1704):51275-51398
                             (let
                               (*match*/13790 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Analysis.first_prod_lookahead lib/grammarFunctor.ml(1704):51297-51323
                                    (apply nullable_first_prod/4812 prod/4817
                                      i/4818))
                                first/4821 =a (field_imm 1 *match*/13790)
                                nullable/4820 =a (field_imm 0 *match*/13790))
                               (before Gbnf_parser__GrammarFunctor.Make.Analysis.first_prod_lookahead lib/grammarFunctor.ml(1705):51331-51398
                                 (if nullable/4820
                                   (before Gbnf_parser__GrammarFunctor.Make.Analysis.first_prod_lookahead lib/grammarFunctor.ml(1706):51354-51377
                                     (after Gbnf_parser__GrammarFunctor.Make.Analysis.first_prod_lookahead lib/grammarFunctor.ml(1706):51354-51377
                                       (apply (field_imm 7 TerminalSet/2387)
                                         z/4819 first/4821)))
                                   (before Gbnf_parser__GrammarFunctor.Make.Analysis.first_prod_lookahead lib/grammarFunctor.ml(1708):51393-51398
                                     first/4821)))))))
                     explain_first_rhs/4822 =
                       (function tok/4824[int] rhs/4825 i/4826[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Analysis.explain_first_rhs lib/grammarFunctor.ml(1710)<ghost>:51424-51509
                           (before Gbnf_parser__GrammarFunctor.Make.Analysis.explain_first_rhs lib/grammarFunctor.ml(1711):51482-51509
                             (after Gbnf_parser__GrammarFunctor.Make.Analysis.explain_first_rhs lib/grammarFunctor.ml(1711):51482-51509
                               (apply convert/4797
                                 (after Gbnf_parser__GrammarFunctor.Make.Analysis.explain_first_rhs lib/grammarFunctor.ml(1711):51490-51509
                                   (apply explain/4783 tok/4824 rhs/4825
                                     i/4826)))))))
                     follow/4827 = follow/4510
                     attributes/4828 = (field_imm 7 (field_imm 0 G/1226))
                     minimal/4829 =
                       (function nt/4831[int] : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Analysis.minimal lib/grammarFunctor.ml(1718)<ghost>:51594-51654
                           (before Gbnf_parser__GrammarFunctor.Make.Analysis.minimal lib/grammarFunctor.ml(1719):51603-51654
                             (after Gbnf_parser__GrammarFunctor.Make.Analysis.minimal lib/grammarFunctor.ml(1719):51603-51654
                               (apply
                                 (field_imm 10
                                   (global Gbnf_parser__CompletedNatWitness!))
                                 (after Gbnf_parser__GrammarFunctor.Make.Analysis.minimal lib/grammarFunctor.ml(1719):51630-51654
                                   (apply (field_imm 0 MINIMAL/4217) nt/4831)))))))
                     minimal_prod/4832 =
                       (function prod/4834[int] i/4835[int] : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Analysis.minimal_prod lib/grammarFunctor.ml(1721)<ghost>:51675-51794
                           (before Gbnf_parser__GrammarFunctor.Make.Analysis.minimal_prod lib/grammarFunctor.ml(1722):51688-51794
                             (seq
                               (if
                                 (&& (<= 0 i/4835)
                                   (<= i/4835
                                     (after Gbnf_parser__GrammarFunctor.Make.Analysis.minimal_prod lib/grammarFunctor.ml(1722):51711-51733
                                       (apply (field_imm 20 Production/3564)
                                         prod/4834))))
                                 0
                                 (raise
                                   (after Gbnf_parser__GrammarFunctor.Make.Analysis.minimal_prod lib/grammarFunctor.ml(1722):51688-51734
                                     (makeblock 0 (global Assert_failure/28!)
                                       [0: "lib/grammarFunctor.ml" 1722 4]))))
                               (before Gbnf_parser__GrammarFunctor.Make.Analysis.minimal_prod lib/grammarFunctor.ml(1723):51740-51794
                                 (after Gbnf_parser__GrammarFunctor.Make.Analysis.minimal_prod lib/grammarFunctor.ml(1723):51740-51794
                                   (apply
                                     (field_imm 10
                                       (global Gbnf_parser__CompletedNatWitness!))
                                     (after Gbnf_parser__GrammarFunctor.Make.Analysis.minimal_prod lib/grammarFunctor.ml(1723):51767-51794
                                       (apply (field_imm 2 MINIMAL/4217)
                                         prod/4834 i/4835)))))))))
                     maximal/4836 =
                       (function nt/4838[int] : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Analysis.maximal lib/grammarFunctor.ml(1725)<ghost>:51810-51865
                           (before Gbnf_parser__GrammarFunctor.Make.Analysis.maximal lib/grammarFunctor.ml(1726):51819-51865
                             (after Gbnf_parser__GrammarFunctor.Make.Analysis.maximal lib/grammarFunctor.ml(1726):51819-51865
                               (apply
                                 (field_imm 3
                                   (global Gbnf_parser__NatInfinityMax!))
                                 (after Gbnf_parser__GrammarFunctor.Make.Analysis.maximal lib/grammarFunctor.ml(1726):51841-51865
                                   (apply (field_imm 0 MAXIMAL/4319) nt/4838)))))))
                     maximal_prod/4839 =
                       (function prod/4841[int] i/4842[int] : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Analysis.maximal_prod lib/grammarFunctor.ml(1728)<ghost>:51886-52000
                           (before Gbnf_parser__GrammarFunctor.Make.Analysis.maximal_prod lib/grammarFunctor.ml(1729):51899-52000
                             (seq
                               (if
                                 (&& (<= 0 i/4842)
                                   (<= i/4842
                                     (after Gbnf_parser__GrammarFunctor.Make.Analysis.maximal_prod lib/grammarFunctor.ml(1729):51922-51944
                                       (apply (field_imm 20 Production/3564)
                                         prod/4841))))
                                 0
                                 (raise
                                   (after Gbnf_parser__GrammarFunctor.Make.Analysis.maximal_prod lib/grammarFunctor.ml(1729):51899-51945
                                     (makeblock 0 (global Assert_failure/28!)
                                       [0: "lib/grammarFunctor.ml" 1729 4]))))
                               (before Gbnf_parser__GrammarFunctor.Make.Analysis.maximal_prod lib/grammarFunctor.ml(1730):51951-52000
                                 (after Gbnf_parser__GrammarFunctor.Make.Analysis.maximal_prod lib/grammarFunctor.ml(1730):51951-52000
                                   (apply
                                     (field_imm 3
                                       (global Gbnf_parser__NatInfinityMax!))
                                     (after Gbnf_parser__GrammarFunctor.Make.Analysis.maximal_prod lib/grammarFunctor.ml(1730):51973-52000
                                       (apply (field_imm 2 MAXIMAL/4319)
                                         prod/4841 i/4842))))))))))
                    (pseudo Gbnf_parser__GrammarFunctor.Make.Analysis lib/grammarFunctor.ml(1677):50644-52005
                      (makeblock 0 nullable/4804 nullable_symbol/4805
                        first/4806 first_symbol/4807 nullable_first_prod/4812
                        first_prod_lookahead/4815 explain_first_rhs/4822
                        follow/4827 attributes/4828 minimal/4829
                        minimal_prod/4832 maximal/4836 maximal_prod/4839)))
                Precedence/4885 =
                  (let
                    (precedence_order/4854 =
                       (function p1/4856 p2/4857 : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Precedence.precedence_order lib/grammarFunctor.ml(1747)<ghost>:52304-52700
                           (before Gbnf_parser__GrammarFunctor.Make.Precedence.precedence_order lib/grammarFunctor.ml(1748):52316-52700
                             (catch
                               (catch
                                 (if p1/4856
                                   (if p2/4857
                                     (let
                                       (*match*/13794 =a
                                          (field_imm 3 p2/4857)
                                        *match*/13793 =a
                                          (field_imm 2 p2/4857)
                                        l2/4861 =a (field_imm 1 p2/4857)
                                        m2/4860 =a (field_imm 0 p2/4857)
                                        *match*/13792 =a
                                          (field_imm 3 p1/4856)
                                        *match*/13791 =a
                                          (field_imm 2 p1/4856)
                                        l1/4859 =a (field_imm 1 p1/4856)
                                        m1/4858 =a (field_imm 0 p1/4856))
                                       (before Gbnf_parser__GrammarFunctor.Make.Precedence.precedence_order lib/grammarFunctor.ml(1753):52496-52700
                                         (if
                                           (not
                                             (after Gbnf_parser__GrammarFunctor.Make.Precedence.precedence_order lib/grammarFunctor.ml(1753):52503-52536
                                               (apply
                                                 (field_imm 2
                                                   (global Gbnf_parser__InputFile!))
                                                 m1/4858 m2/4860)))
                                           (before Gbnf_parser__GrammarFunctor.Make.Precedence.precedence_order lib/grammarFunctor.ml(1754):52554-52556
                                             3)
                                           (before Gbnf_parser__GrammarFunctor.Make.Precedence.precedence_order lib/grammarFunctor.ml(1756):52584-52700
                                             (if (> l1/4859 l2/4861)
                                               (before Gbnf_parser__GrammarFunctor.Make.Precedence.precedence_order lib/grammarFunctor.ml(1757):52614-52616
                                                 1)
                                               (before Gbnf_parser__GrammarFunctor.Make.Precedence.precedence_order lib/grammarFunctor.ml(1758):52634-52700
                                                 (if (< l1/4859 l2/4861)
                                                   (before Gbnf_parser__GrammarFunctor.Make.Precedence.precedence_order lib/grammarFunctor.ml(1759):52664-52666
                                                     0)
                                                   (before Gbnf_parser__GrammarFunctor.Make.Precedence.precedence_order lib/grammarFunctor.ml(1761):52698-52700
                                                     2))))))))
                                     (exit 121))
                                   (exit 120))
                                with (121) (exit 120))
                              with (120)
                               (before Gbnf_parser__GrammarFunctor.Make.Precedence.precedence_order lib/grammarFunctor.ml(1751):52409-52411
                                 3)))))
                     production_order/4862 =
                       (function p1/4864 p2/4865 : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Precedence.production_order lib/grammarFunctor.ml(1763)<ghost>:52725-53031
                           (before Gbnf_parser__GrammarFunctor.Make.Precedence.production_order lib/grammarFunctor.ml(1764):52737-53031
                             (let
                               (l2/4869 =a (field_imm 1 p2/4865)
                                m2/4868 =a (field_imm 0 p2/4865)
                                l1/4867 =a (field_imm 1 p1/4864)
                                m1/4866 =a (field_imm 0 p1/4864))
                               (before Gbnf_parser__GrammarFunctor.Make.Precedence.production_order lib/grammarFunctor.ml(1766):52827-53031
                                 (if
                                   (not
                                     (after Gbnf_parser__GrammarFunctor.Make.Precedence.production_order lib/grammarFunctor.ml(1766):52834-52867
                                       (apply
                                         (field_imm 2
                                           (global Gbnf_parser__InputFile!))
                                         m1/4866 m2/4868)))
                                   (before Gbnf_parser__GrammarFunctor.Make.Precedence.production_order lib/grammarFunctor.ml(1767):52885-52887
                                     3)
                                   (before Gbnf_parser__GrammarFunctor.Make.Precedence.production_order lib/grammarFunctor.ml(1769):52915-53031
                                     (if (> l1/4867 l2/4869)
                                       (before Gbnf_parser__GrammarFunctor.Make.Precedence.production_order lib/grammarFunctor.ml(1770):52945-52947
                                         1)
                                       (before Gbnf_parser__GrammarFunctor.Make.Precedence.production_order lib/grammarFunctor.ml(1771):52965-53031
                                         (if (< l1/4867 l2/4869)
                                           (before Gbnf_parser__GrammarFunctor.Make.Precedence.production_order lib/grammarFunctor.ml(1772):52995-52997
                                             0)
                                           (before Gbnf_parser__GrammarFunctor.Make.Precedence.production_order lib/grammarFunctor.ml(1774):53029-53031
                                             2)))))))))))
                     shift_reduce/4870 =
                       (function tok/4872[int] prod/4873[int] : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1776)<ghost>:53052-54165
                           (before Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1777):53067-54165
                             (let
                               (*match*/13807 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1777):53086-53115
                                    (apply (field_imm 14 Terminal/2246)
                                      tok/4872))
                                tokp/4875 =a (field_imm 1 *match*/13807)
                                fact1/4874 =a (field_imm 0 *match*/13807)
                                *match*/13803 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1778):53139-53165
                                    (apply (field_imm 47 Production/3564)
                                      prod/4873))
                                prodp/4877 =a (field_imm 1 *match*/13803)
                                fact2/4876 =a (field_imm 0 *match*/13803))
                               (before Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1779):53173-54165
                                 (let
                                   (c/4878 =
                                      (after Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1779):53179-53206
                                        (apply precedence_order/4854
                                          tokp/4875 prodp/4877)))
                                   (catch
                                     (if (>= c/4878 3)
                                       (before Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1785):53371-53379
                                         3)
                                       (exit 123))
                                    with (123)
                                     (before Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1791):53519-54165
                                       (seq
                                         (after Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1791):53519-53535
                                           (let
                                             (lzarg/13798 = fact1/4874
                                              tag/13799 =a
                                                (caml_obj_tag lzarg/13798))
                                             (if (== tag/13799 250)
                                               (field_mut 0 lzarg/13798)
                                               (if
                                                 (|| (== tag/13799 246)
                                                   (== tag/13799 244))
                                                 (apply
                                                   (field_imm 1
                                                     (global CamlinternalLazy!))
                                                   (opaque lzarg/13798))
                                                 lzarg/13798))))
                                         (before Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1792):53545-54165
                                           (seq
                                             (after Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1792):53545-53561
                                               (let
                                                 (lzarg/13796 = fact2/4876
                                                  tag/13797 =a
                                                    (caml_obj_tag
                                                      lzarg/13796))
                                                 (if (== tag/13797 250)
                                                   (field_mut 0 lzarg/13796)
                                                   (if
                                                     (|| (== tag/13797 246)
                                                       (== tag/13797 244))
                                                     (apply
                                                       (field_imm 1
                                                         (global CamlinternalLazy!))
                                                       (opaque lzarg/13796))
                                                     lzarg/13796))))
                                             (before Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1793):53571-54165
                                               (switch* c/4878
                                                case int 0:
                                                 (before Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1810):54112-54124
                                                   1)
                                                case int 1:
                                                 (before Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1813):54154-54165
                                                   0)
                                                case int 2:
                                                 (before Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1799):53680-54082
                                                   (let
                                                     (*match*/13795 =
                                                        (after Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1800):53706-53732
                                                          (apply
                                                            (field_imm 15
                                                              Terminal/2246)
                                                            tok/4872)))
                                                     (catch
                                                       (switch* *match*/13795
                                                        case int 0:
                                                         (before Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1801):53768-53780
                                                           1)
                                                        case int 1:
                                                         (before Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1802):53811-53822
                                                           0)
                                                        case int 2:
                                                         (before Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1803):53853-53866
                                                           2)
                                                        case int 3:
                                                         (exit 122))
                                                      with (122)
                                                       (before Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1804):53897-53909
                                                         (raise
                                                           (after Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1804):53897-53909
                                                             (makeblock 0
                                                               (global Assert_failure/28!)
                                                               [0:
                                                                "lib/grammarFunctor.ml"
                                                                1804 30])))))))
                                                case int 3:
                                                 (before Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1796):53613-53625
                                                   (raise
                                                     (after Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1796):53613-53625
                                                       (makeblock 0
                                                         (global Assert_failure/28!)
                                                         [0:
                                                          "lib/grammarFunctor.ml"
                                                          1796 12])))))))))))))))))
                     reduce_reduce/4879 =
                       (function prod1/4881[int] prod2/4882[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Precedence.reduce_reduce lib/grammarFunctor.ml(1816)<ghost>:54188-54749
                           (before Gbnf_parser__GrammarFunctor.Make.Precedence.reduce_reduce lib/grammarFunctor.ml(1817):54206-54749
                             (let
                               (pl1/4883 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Precedence.reduce_reduce lib/grammarFunctor.ml(1817):54216-54251
                                    (array.get[addr]
                                      (field_imm 7 Production/3564)
                                      prod1/4881))
                                pl2/4884 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Precedence.reduce_reduce lib/grammarFunctor.ml(1818):54266-54301
                                    (array.get[addr]
                                      (field_imm 7 Production/3564)
                                      prod2/4882)))
                               (before Gbnf_parser__GrammarFunctor.Make.Precedence.reduce_reduce lib/grammarFunctor.ml(1819):54309-54749
                                 (let
                                   (*match*/13808 =
                                      (after Gbnf_parser__GrammarFunctor.Make.Precedence.reduce_reduce lib/grammarFunctor.ml(1819):54315-54339
                                        (apply production_order/4862 pl1/4883
                                          pl2/4884)))
                                   (switch* *match*/13808
                                    case int 0:
                                     (before Gbnf_parser__GrammarFunctor.Make.Precedence.reduce_reduce lib/grammarFunctor.ml(1821):54365-54375
                                       (makeblock 0 (int) prod1/4881))
                                    case int 1:
                                     (before Gbnf_parser__GrammarFunctor.Make.Precedence.reduce_reduce lib/grammarFunctor.ml(1823):54396-54406
                                       (makeblock 0 (int) prod2/4882))
                                    case int 2:
                                     (before Gbnf_parser__GrammarFunctor.Make.Precedence.reduce_reduce lib/grammarFunctor.ml(1829):54720-54724
                                       0)
                                    case int 3:
                                     (before Gbnf_parser__GrammarFunctor.Make.Precedence.reduce_reduce lib/grammarFunctor.ml(1831):54745-54749
                                       0)))))))))
                    (pseudo Gbnf_parser__GrammarFunctor.Make.Precedence lib/grammarFunctor.ml(1737):52150-54754
                      (makeblock 0 precedence_order/4854
                        production_order/4862 shift_reduce/4870
                        reduce_reduce/4879)))
                OnErrorReduce/4908 =
                  (let
                    (declarations/4886 = (field_imm 6 (field_imm 0 G/1226))
                     print/4887 =
                       (function nt/4888[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.print lib/grammarFunctor.ml(1857)<ghost>:55626-55688
                           (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.print lib/grammarFunctor.ml(1858):55662-55688
                             (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.print lib/grammarFunctor.ml(1858):55662-55688
                               (apply (field_imm 10 Nonterminal/2057) 0
                                 nt/4888)))))
                     lookup/4889 =
                       (function nt/4891 : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.lookup lib/grammarFunctor.ml(1860)<ghost>:55703-55917
                           (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.lookup lib/grammarFunctor.ml(1861):55739-55917
                             (try
                               (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.lookup lib/grammarFunctor.ml(1862):55749-55770
                                 (apply (field_imm 11 Nonterminal/2057)
                                   nt/4891))
                              with exn/13809
                               (catch
                                 (if
                                   (== exn/13809
                                     (field_imm 7 (global Stdlib!)))
                                   (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.lookup lib/grammarFunctor.ml(1866):55905-55917
                                     (raise
                                       (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.lookup lib/grammarFunctor.ml(1866):55905-55917
                                         (makeblock 0
                                           (global Assert_failure/28!)
                                           [0:
                                            "lib/grammarFunctor.ml" 1866 6]))))
                                   (exit 130))
                                with (130) (reraise exn/13809))))))
                     reduce/4892 =
                       (function prod/4894[int] : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.reduce lib/grammarFunctor.ml(1868)<ghost>:55932-56015
                           (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.reduce lib/grammarFunctor.ml(1869):55943-56015
                             (let
                               (nt/4895 =[int]
                                  (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.reduce lib/grammarFunctor.ml(1869):55952-55970
                                    (apply (field_imm 18 Production/3564)
                                      prod/4894)))
                               (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.reduce lib/grammarFunctor.ml(1870):55978-56015
                                 (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.reduce lib/grammarFunctor.ml(1870):55978-56015
                                   (apply
                                     (field_imm 29
                                       (global Gbnf_parser__StringMap!))
                                     (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.reduce lib/grammarFunctor.ml(1870):55992-56002
                                       (apply print/4887 nt/4895))
                                     declarations/4886)))))))
                     iter/4896 =
                       (function f/4897 : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.iter lib/grammarFunctor.ml(1872)<ghost>:56028-56106
                           (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.iter lib/grammarFunctor.ml(1873):56036-56106
                             (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.iter lib/grammarFunctor.ml(1873):56036-56106
                               (apply
                                 (field_imm 21
                                   (global Gbnf_parser__StringMap!))
                                 (function nt/4898 _prec/4899 : int
                                   (funct-body Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.iter.(fun) lib/grammarFunctor.ml(1873):56051-56093
                                     (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.iter.(fun) lib/grammarFunctor.ml(1874):56074-56087
                                       (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.iter.(fun) lib/grammarFunctor.ml(1874):56074-56087
                                         (apply f/4897
                                           (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.iter.(fun) lib/grammarFunctor.ml(1874):56076-56087
                                             (apply lookup/4889 nt/4898)))))))
                                 declarations/4886)))))
                     preferable/4900 =
                       (function prod1/4902[int] prod2/4903[int] : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1879)<ghost>:56144-57276
                           (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1881):56232-57276
                             (seq
                               (if (!= prod1/4902 prod2/4903) 0
                                 (raise
                                   (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1881):56232-56255
                                     (makeblock 0 (global Assert_failure/28!)
                                       [0: "lib/grammarFunctor.ml" 1881 4]))))
                               (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1882):56261-57276
                                 (let
                                   (nt1/4904 =[int]
                                      (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1882):56271-56290
                                        (apply (field_imm 18 Production/3564)
                                          prod1/4902))
                                    nt2/4905 =[int]
                                      (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1883):56305-56324
                                        (apply (field_imm 18 Production/3564)
                                          prod2/4903)))
                                   (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1886):56445-57276
                                     (&& (!= nt1/4904 nt2/4905)
                                       (catch
                                         (try
                                           (let
                                             (prec2/13813 =
                                                (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1892):56646-56685
                                                  (apply
                                                    (field_imm 15
                                                      (global Gbnf_parser__StringMap!))
                                                    (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1892):56661-56672
                                                      (apply print/4887
                                                        nt2/4905))
                                                    declarations/4886))
                                              prec1/13812 =
                                                (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1891):56597-56636
                                                  (apply
                                                    (field_imm 15
                                                      (global Gbnf_parser__StringMap!))
                                                    (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1891):56612-56623
                                                      (apply print/4887
                                                        nt1/4904))
                                                    declarations/4886)))
                                             (exit 133 prec1/13812
                                               prec2/13813))
                                          with exn/13811
                                           (catch
                                             (if
                                               (== exn/13811
                                                 (field_imm 7
                                                   (global Stdlib!)))
                                               (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1896):56849-56861
                                                 (raise
                                                   (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1896):56849-56861
                                                     (makeblock 0
                                                       (global Assert_failure/28!)
                                                       [0:
                                                        "lib/grammarFunctor.ml"
                                                        1896 8]))))
                                               (exit 132))
                                            with (132) (reraise exn/13811)))
                                        with (133 prec1/4906 prec2/4907)
                                         (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1898):56873-57276
                                           (let
                                             (*match*/13810 =
                                                (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1898):56879-56907
                                                  (apply
                                                    (field_imm 1
                                                      Precedence/4885)
                                                    prec1/4906 prec2/4907)))
                                             (catch
                                               (if (!= *match*/13810 1)
                                                 (if *match*/13810 (exit 131)
                                                   (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1905):57155-57160
                                                     0))
                                                 (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1903):57130-57134
                                                   1))
                                              with (131)
                                               (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1909):57271-57276
                                                 0))))))))))))))
                    (pseudo Gbnf_parser__GrammarFunctor.Make.OnErrorReduce lib/grammarFunctor.ml(1848):55303-57281
                      (makeblock 0 declarations/4886 print/4887 lookup/4889
                        reduce/4892 iter/4896 preferable/4900)))
                Sentence/4930 =
                  (let
                    (print_abstract/4910 =
                       (function param/4918
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract lib/grammarFunctor.ml(1923)<ghost>:57528-57859
                           (let
                             (terminals/4913 =a (field_imm 1 param/4918)
                              nto/4912 =a (field_imm 0 param/4918))
                             (before Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract lib/grammarFunctor.ml(1924):57560-57859
                               (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract lib/grammarFunctor.ml(1924):57560-57859
                                 (apply
                                   (field_imm 4 (global Gbnf_parser__Misc!))
                                   128
                                   (function b/4914 : int
                                     (funct-body Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1924):57581-57859
                                       (before Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1925):57597-57853
                                         (seq
                                           (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1925):57597-57685
                                             (apply
                                               (field_imm 8
                                                 (global Stdlib__Option!))
                                               (function nt/4915[int] : int
                                                 (funct-body Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1925):57609-57681
                                                   (before Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1926):57628-57673
                                                     (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1926):57628-57673
                                                       (apply
                                                         (field_imm 4
                                                           (global Stdlib__Printf!))
                                                         b/4914
                                                         [0:
                                                          [2: 0 [11: ": " 0]]
                                                          "%s: "]
                                                         (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1926):57645-57673
                                                           (apply
                                                             (field_imm 10
                                                               Nonterminal/2057)
                                                             0 nt/4915)))))))
                                               nto/4912))
                                           (before Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1928):57693-57853
                                             (let
                                               (separator/4916 =
                                                  (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1928):57709-57725
                                                    (apply
                                                      (field_imm 32
                                                        (global Gbnf_parser__Misc!))
                                                      "" " ")))
                                               (before Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1929):57735-57853
                                                 (seq
                                                   (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1929):57735-57830
                                                     (apply
                                                       (field_imm 17
                                                         (global Stdlib__List!))
                                                       (function t/4917[int]
                                                         : int
                                                         (funct-body Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1929):57745-57820
                                                           (before Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1930):57763-57812
                                                             (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1930):57763-57812
                                                               (apply
                                                                 (field_imm 4
                                                                   (global Stdlib__Printf!))
                                                                 b/4914
                                                                 [0:
                                                                  [2:
                                                                   0 [2: 0 0]]
                                                                  "%s%s"]
                                                                 (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1930):57780-57793
                                                                   (apply
                                                                    separator/4916
                                                                    0))
                                                                 (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1930):57794-57812
                                                                   (apply
                                                                    (field_imm 6
                                                                    Terminal/2246)
                                                                    t/4917)))))))
                                                       terminals/4913))
                                                   (before Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1932):57838-57852
                                                     (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1932):57838-57852
                                                       (apply
                                                         (field_imm 4
                                                           (global Stdlib__Printf!))
                                                         b/4914
                                                         [0:
                                                          [12: '\n' 0] "\n"])))))))))))))))))
                     print_concrete/4919 =
                       (function param/4926
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Sentence.print_concrete lib/grammarFunctor.ml(1935)<ghost>:57882-58104
                           (let
                             (terminals/4922 =a (field_imm 1 param/4926)
                              _nto/4921 =a (field_imm 0 param/4926))
                             (before Gbnf_parser__GrammarFunctor.Make.Sentence.print_concrete lib/grammarFunctor.ml(1936):57915-58104
                               (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_concrete lib/grammarFunctor.ml(1936):57915-58104
                                 (apply
                                   (field_imm 4 (global Gbnf_parser__Misc!))
                                   128
                                   (function b/4923 : int
                                     (funct-body Gbnf_parser__GrammarFunctor.Make.Sentence.print_concrete.(fun) lib/grammarFunctor.ml(1936):57936-58104
                                       (before Gbnf_parser__GrammarFunctor.Make.Sentence.print_concrete.(fun) lib/grammarFunctor.ml(1937):57952-58098
                                         (let
                                           (separator/4924 =
                                              (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_concrete.(fun) lib/grammarFunctor.ml(1937):57968-57984
                                                (apply
                                                  (field_imm 32
                                                    (global Gbnf_parser__Misc!))
                                                  "" " ")))
                                           (before Gbnf_parser__GrammarFunctor.Make.Sentence.print_concrete.(fun) lib/grammarFunctor.ml(1938):57994-58098
                                             (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_concrete.(fun) lib/grammarFunctor.ml(1938):57994-58098
                                               (apply
                                                 (field_imm 17
                                                   (global Stdlib__List!))
                                                 (function t/4925 : int
                                                   (funct-body Gbnf_parser__GrammarFunctor.Make.Sentence.print_concrete.(fun) lib/grammarFunctor.ml(1938):58004-58088
                                                     (before Gbnf_parser__GrammarFunctor.Make.Sentence.print_concrete.(fun) lib/grammarFunctor.ml(1939):58022-58080
                                                       (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_concrete.(fun) lib/grammarFunctor.ml(1939):58022-58080
                                                         (apply
                                                           (field_imm 4
                                                             (global Stdlib__Printf!))
                                                           b/4923
                                                           [0:
                                                            [2: 0 [2: 0 0]]
                                                            "%s%s"]
                                                           (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_concrete.(fun) lib/grammarFunctor.ml(1939):58039-58052
                                                             (apply
                                                               separator/4924
                                                               0))
                                                           (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_concrete.(fun) lib/grammarFunctor.ml(1939):58053-58080
                                                             (apply
                                                               (field_imm 28
                                                                 Terminal/2246)
                                                               t/4925)))))))
                                                 terminals/4922)))))))))))))
                     print/4927 =
                       (function style/4928[int] sentence/4929
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Sentence.print lib/grammarFunctor.ml(1943)<ghost>:58118-58257
                           (before Gbnf_parser__GrammarFunctor.Make.Sentence.print lib/grammarFunctor.ml(1944):58139-58257
                             (if (>= style/4928 36732162)
                               (before Gbnf_parser__GrammarFunctor.Make.Sentence.print lib/grammarFunctor.ml(1946):58183-58206
                                 (after Gbnf_parser__GrammarFunctor.Make.Sentence.print lib/grammarFunctor.ml(1946):58183-58206
                                   (apply print_abstract/4910 sentence/4929)))
                               (before Gbnf_parser__GrammarFunctor.Make.Sentence.print lib/grammarFunctor.ml(1948):58234-58257
                                 (after Gbnf_parser__GrammarFunctor.Make.Sentence.print lib/grammarFunctor.ml(1948):58234-58257
                                   (apply print_concrete/4919 sentence/4929))))))))
                    (pseudo Gbnf_parser__GrammarFunctor.Make.Sentence lib/grammarFunctor.ml(1916):57422-58262
                      (makeblock 0 print_abstract/4910 print_concrete/4919
                        print/4927))))
               (pseudo Gbnf_parser__GrammarFunctor.Make lib/grammarFunctor.ml(28):1359-58347
                 (makeblock 0 index/1227 TokPrecedence/1946 Nonterminal/2057
                   Terminal/2246 TerminalSet/2387 Symbol/2545 SymbolSet/2738
                   SymbolMap/2943 Production/3564
                   grammar_uses_error_token/3565 ProductionMap/3611
                   GenericAnalysis/4037 NONEMPTY/4094 NULLABLE/4123
                   FIRST/4150 MINIMAL/4217 generates_nonempty_word/4218
                   G/4244 unbounded/4282 MAXIMAL/4319 FOLLOW/4509 follow/4510
                   tfollow/4652 sfirst/4654 sfollow/4663 explain/4783
                   convert/4797 Analysis/4843 Precedence/4885
                   OnErrorReduce/4908 Sentence/4930))))))
     *match*/13831 =
       (after Gbnf_parser__GrammarFunctor lib/grammarFunctor.ml(1954)<ghost>:58347-58347
         (apply (field_imm 5 (global Ppx_inline_test_lib!)) "gbnf_parser"))
     *match*/13829 =
       (after Gbnf_parser__GrammarFunctor lib/grammarFunctor.ml(1954)<ghost>:58347-58347
         (apply (field_imm 1 (field_imm 5 (global Expect_test_collector!)))
           0))
     *match*/13827 =
       (after Gbnf_parser__GrammarFunctor lib/grammarFunctor.ml(1954)<ghost>:58347-58347
         (apply
           (field_imm 1
             (field_imm 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
           0))
     *match*/13825 =
       (after Gbnf_parser__GrammarFunctor lib/grammarFunctor.ml(1954)<ghost>:58347-58347
         (apply (field_imm 4 (global Ppx_module_timer_runtime!))
           #"Gbnf_parser__GrammarFunctor")))
    (pseudo <unknown location> (makeblock 0 Make/5132))))
(setglobal Gbnf_parser__GrammarFunctor!
  (let
    (*match*/13839 =
       (after Gbnf_parser__GrammarFunctor lib/grammarFunctor.ml(14)<ghost>:976-976
         (apply (field_imm 3 (global Ppx_module_timer_runtime!))
           #"Gbnf_parser__GrammarFunctor"))
     *match*/13837 =
       (after Gbnf_parser__GrammarFunctor lib/grammarFunctor.ml(14)<ghost>:976-976
         (apply
           (field_imm 0
             (field_imm 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
           "gbnf_parser"))
     *match*/13835 =
       (after Gbnf_parser__GrammarFunctor lib/grammarFunctor.ml(14)<ghost>:976-976
         (apply (field_imm 0 (field_imm 5 (global Expect_test_collector!)))
           "lib/grammarFunctor.ml"))
     *match*/13833 =
       (after Gbnf_parser__GrammarFunctor lib/grammarFunctor.ml(14)<ghost>:976-976
         (apply (field_imm 4 (global Ppx_inline_test_lib!)) "gbnf_parser"
           "grammarFunctor.ml"))
     Make/5132 =
       (function G/13823 */13822 is_a_functor
         (let
           (G/1226 =a G/13823
            index/1227 =
              (function strings/1229
                (funct-body Gbnf_parser__GrammarFunctor.Make.index lib/grammarFunctor.ml(38)<ghost>:1634-1864
                  (before Gbnf_parser__GrammarFunctor.Make.index lib/grammarFunctor.ml(39):1701-1864
                    (let
                      (name/1278 =
                         (after Gbnf_parser__GrammarFunctor.Make.index lib/grammarFunctor.ml(39):1712-1733
                           (apply (field_imm 9 (global Stdlib__Array!))
                             strings/1229))
                       *match*/13601 =
                         (after Gbnf_parser__GrammarFunctor.Make.index lib/grammarFunctor.ml(40):1749-1846
                           (apply (field_imm 25 (global Stdlib__List!))
                             (function param/1607 s/1397
                               (funct-body Gbnf_parser__GrammarFunctor.Make.index.(fun) lib/grammarFunctor.ml(40):1764-1817
                                 (let
                                   (map/1396 =a (field_imm 1 param/1607)
                                    n/1395 =a (field_imm 0 param/1607))
                                   (before Gbnf_parser__GrammarFunctor.Make.index.(fun) lib/grammarFunctor.ml(41):1787-1813
                                     (makeblock 0 (int,*) (+ n/1395 1)
                                       (after Gbnf_parser__GrammarFunctor.Make.index.(fun) lib/grammarFunctor.ml(41):1792-1813
                                         (apply
                                           (field_imm 1
                                             (global Gbnf_parser__StringMap!))
                                           s/1397 n/1395 map/1396)))))))
                             (makeblock 0 (int,*) 0
                               (field_imm 0 (global Gbnf_parser__StringMap!)))
                             strings/1229))
                       map/1280 =a (field_imm 1 *match*/13601)
                       n/1279 =a (field_imm 0 *match*/13601))
                      (before Gbnf_parser__GrammarFunctor.Make.index lib/grammarFunctor.ml(43):1852-1864
                        (makeblock 0 (int,*,*) n/1279 name/1278 map/1280))))))
            TokPrecedence/1946 =
              (let
                (ever_useful/1654 =
                   (makemutable 0
                     (field_imm 0 (global Gbnf_parser__StringSet!)))
                 use/1655 =
                   (function id/1657 : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.TokPrecedence.use lib/grammarFunctor.ml(57)<ghost>:2295-2348
                       (before Gbnf_parser__GrammarFunctor.Make.TokPrecedence.use lib/grammarFunctor.ml(58):2304-2348
                         (setfield_ptr 0 ever_useful/1654
                           (after Gbnf_parser__GrammarFunctor.Make.TokPrecedence.use lib/grammarFunctor.ml(58):2319-2348
                             (apply
                               (field_imm 1 (global Gbnf_parser__StringSet!))
                               id/1657 (field_mut 0 ever_useful/1654)))))))
                 levelip/1798 =
                   (function id/1800 properties/1801
                     (funct-body Gbnf_parser__GrammarFunctor.Make.TokPrecedence.levelip lib/grammarFunctor.ml(68)<ghost>:2803-2862
                       (before Gbnf_parser__GrammarFunctor.Make.TokPrecedence.levelip lib/grammarFunctor.ml(69):2823-2862
                         (makeblock 0
                           (makemutable 246
                             (function param/13602
                               (after Gbnf_parser__GrammarFunctor.Make.TokPrecedence.levelip lib/grammarFunctor.ml(69):2828-2836
                                 (apply use/1655 id/1800))))
                           (field_mut 6 properties/1801)))))
                 leveli/1802 =
                   (function id/1804
                     (funct-body Gbnf_parser__GrammarFunctor.Make.TokPrecedence.leveli lib/grammarFunctor.ml(71)<ghost>:2877-3086
                       (before Gbnf_parser__GrammarFunctor.Make.TokPrecedence.leveli lib/grammarFunctor.ml(72):2886-3086
                         (let
                           (properties/1805 =
                              (try
                                (after Gbnf_parser__GrammarFunctor.Make.TokPrecedence.leveli lib/grammarFunctor.ml(74):2921-2953
                                  (apply
                                    (field_imm 15
                                      (global Gbnf_parser__StringMap!))
                                    id/1804
                                    (field_imm 5 (field_imm 0 G/1226))))
                               with exn/13603
                                (if
                                  (== exn/13603
                                    (field_imm 7 (global Stdlib!)))
                                  (before Gbnf_parser__GrammarFunctor.Make.TokPrecedence.leveli lib/grammarFunctor.ml(76):2986-2998
                                    (raise
                                      (after Gbnf_parser__GrammarFunctor.Make.TokPrecedence.leveli lib/grammarFunctor.ml(76):2986-2998
                                        (makeblock 0
                                          (global Assert_failure/28!)
                                          [0: "lib/grammarFunctor.ml" 76 8]))))
                                  (reraise exn/13603))))
                           (before Gbnf_parser__GrammarFunctor.Make.TokPrecedence.leveli lib/grammarFunctor.ml(78):3065-3086
                             (after Gbnf_parser__GrammarFunctor.Make.TokPrecedence.leveli lib/grammarFunctor.ml(78):3065-3086
                               (apply levelip/1798 id/1804 properties/1805)))))))
                 diagnostics/1863 =
                   (function param/1945[int] : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.TokPrecedence.diagnostics lib/grammarFunctor.ml(84)<ghost>:3310-3696
                       (before Gbnf_parser__GrammarFunctor.Make.TokPrecedence.diagnostics lib/grammarFunctor.ml(85):3319-3696
                         (after Gbnf_parser__GrammarFunctor.Make.TokPrecedence.diagnostics lib/grammarFunctor.ml(85):3319-3696
                           (apply
                             (field_imm 21 (global Gbnf_parser__StringMap!))
                             (function id/1865 properties/1866 : int
                               (funct-body Gbnf_parser__GrammarFunctor.Make.TokPrecedence.diagnostics.(fun) lib/grammarFunctor.ml(85):3334-3681
                                 (before Gbnf_parser__GrammarFunctor.Make.TokPrecedence.diagnostics.(fun) lib/grammarFunctor.ml(86):3362-3675
                                   (if
                                     (not
                                       (after Gbnf_parser__GrammarFunctor.Make.TokPrecedence.diagnostics.(fun) lib/grammarFunctor.ml(86):3369-3400
                                         (apply
                                           (field_imm 29
                                             (global Gbnf_parser__StringSet!))
                                           id/1865
                                           (field_mut 0 ever_useful/1654))))
                                     (before Gbnf_parser__GrammarFunctor.Make.TokPrecedence.diagnostics.(fun) lib/grammarFunctor.ml(87):3414-3675
                                       (let
                                         (*match*/13604 =
                                            (field_mut 6 properties/1866))
                                         (if *match*/13604
                                           (let
                                             (pos2/1868 =a
                                                (field_imm 3 *match*/13604)
                                              pos1/1867 =a
                                                (field_imm 2 *match*/13604))
                                             (before Gbnf_parser__GrammarFunctor.Make.TokPrecedence.diagnostics.(fun) lib/grammarFunctor.ml(91):3558-3675
                                               (after Gbnf_parser__GrammarFunctor.Make.TokPrecedence.diagnostics.(fun) lib/grammarFunctor.ml(91):3558-3675
                                                 (apply
                                                   (field_imm 7
                                                     (global Gbnf_parser__Error!))
                                                   (makeblock 0
                                                     (after Gbnf_parser__GrammarFunctor.Make.TokPrecedence.diagnostics.(fun) lib/grammarFunctor.ml(91):3573-3602
                                                       (apply
                                                         (field_imm 18
                                                           (global Gbnf_parser__Positions!))
                                                         (makeblock 0
                                                           pos1/1867
                                                           pos2/1868)))
                                                     0)
                                                   [0:
                                                    [11:
                                                     "the precedence level assigned to "
                                                     [2:
                                                      0
                                                      [11:
                                                       " is never useful." 0]]]
                                                    "the precedence level assigned to %s is never useful."]
                                                   id/1865))))
                                           (before Gbnf_parser__GrammarFunctor.Make.TokPrecedence.diagnostics.(fun) lib/grammarFunctor.ml(89):3495-3497
                                             0))))
                                     0))))
                             (field_imm 5 (field_imm 0 G/1226))))))))
                (pseudo Gbnf_parser__GrammarFunctor.Make.TokPrecedence lib/grammarFunctor.ml(48):2028-3701
                  (makeblock 0 ever_useful/1654 use/1655 levelip/1798
                    leveli/1802 diagnostics/1863)))
            Nonterminal/2057 =
              (let
                (n2i/1948 =
                   (function i/1950
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.n2i lib/grammarFunctor.ml(104)<ghost>:3858-3863
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.n2i lib/grammarFunctor.ml(104):3862-3863
                         i/1950)))
                 equal/1951 =
                   (function nt1/1953[int] nt2/1954[int] : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.equal lib/grammarFunctor.ml(106)<ghost>:3877-3912
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.equal lib/grammarFunctor.ml(107):3903-3912
                         (== nt1/1953 nt2/1954))))
                 compare/1955 =
                   (function prim/13609 prim/13608 stub
                     (- prim/13609 prim/13608))
                 new_start_nonterminals/1956 =
                   (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.new_start_nonterminals lib/grammarFunctor.ml(116):4138-4217
                     (apply (field_imm 23 (global Gbnf_parser__StringSet!))
                       (function symbol/1957 ss/1958
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.new_start_nonterminals.(fun) lib/grammarFunctor.ml(116):4153-4192
                           (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.new_start_nonterminals.(fun) lib/grammarFunctor.ml(116):4171-4191
                             (makeblock 0
                               (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.new_start_nonterminals.(fun) lib/grammarFunctor.ml(116):4171-4185
                                 (apply (field_imm 27 (global Stdlib!))
                                   symbol/1957 "'"))
                               ss/1958))))
                       (field_imm 3 (field_imm 0 G/1226)) 0))
                 original_nonterminals/1959 =
                   (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.original_nonterminals lib/grammarFunctor.ml(119):4253-4273
                     (apply (field_imm 8 (global Gbnf_parser__BasicSyntax!))
                       (field_imm 0 G/1226)))
                 start/1960 =[int]
                   (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.start lib/grammarFunctor.ml(122):4293-4327
                     (apply (field_imm 0 (global Stdlib__List!))
                       new_start_nonterminals/1956))
                 *match*/13624 =
                   (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.n lib/grammarFunctor.ml(125):4399-4453
                     (apply index/1227
                       (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.n lib/grammarFunctor.ml(125):4405-4453
                         (apply (field_imm 36 (global Stdlib!))
                           new_start_nonterminals/1956
                           original_nonterminals/1959))))
                 map/1963 =a (field_imm 2 *match*/13624)
                 name/1962 =a (field_imm 1 *match*/13624)
                 n/1961 =a (field_imm 0 *match*/13624)
                 is_internal_start/1964 =
                   (function nt/1966[int] : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.is_internal_start lib/grammarFunctor.ml(135)<ghost>:4726-4745
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.is_internal_start lib/grammarFunctor.ml(136):4735-4745
                         (< nt/1966 start/1960))))
                 is_user_start/1967 =
                   (function nt/1969[int] : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.is_user_start lib/grammarFunctor.ml(138)<ghost>:4767-4821
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.is_user_start lib/grammarFunctor.ml(139):4776-4821
                         (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.is_user_start lib/grammarFunctor.ml(139):4776-4821
                           (apply
                             (field_imm 29 (global Gbnf_parser__StringSet!))
                             (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.is_user_start lib/grammarFunctor.ml(139):4790-4799
                               (array.get[addr] name/1962 nt/1969))
                             (field_imm 3 (field_imm 0 G/1226)))))))
                 print/1970 =
                   (function normalize/1971[int] nt/1972[int]
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.print lib/grammarFunctor.ml(141)<ghost>:4835-4927
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.print lib/grammarFunctor.ml(142):4854-4927
                         (if normalize/1971
                           (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.print lib/grammarFunctor.ml(143):4878-4902
                             (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.print lib/grammarFunctor.ml(143):4878-4902
                               (apply
                                 (field_imm 21 (global Gbnf_parser__Misc!))
                                 (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.print lib/grammarFunctor.ml(143):4893-4902
                                   (array.get[addr] name/1962 nt/1972)))))
                           (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.print lib/grammarFunctor.ml(145):4918-4927
                             (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.print lib/grammarFunctor.ml(145):4918-4927
                               (array.get[addr] name/1962 nt/1972)))))))
                 lookup/2014 =
                   (function name/2016 : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.lookup lib/grammarFunctor.ml(147)<ghost>:4942-4976
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.lookup lib/grammarFunctor.ml(148):4953-4976
                         (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.lookup lib/grammarFunctor.ml(148):4953-4976
                           (apply
                             (field_imm 15 (global Gbnf_parser__StringMap!))
                             name/2016 map/1963)))))
                 positions/2017 =
                   (function nt/2019[int]
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.positions lib/grammarFunctor.ml(150)<ghost>:4994-5060
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.positions lib/grammarFunctor.ml(151):5003-5060
                         (field_imm 1
                           (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.positions lib/grammarFunctor.ml(151):5003-5050
                             (apply
                               (field_imm 15
                                 (global Gbnf_parser__StringMap!))
                               (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.positions lib/grammarFunctor.ml(151):5019-5035
                                 (apply print/1970 0 nt/2019))
                               (field_imm 8 (field_imm 0 G/1226))))))))
                 init/2020 =
                   (function f/2022
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.init lib/grammarFunctor.ml(153)<ghost>:5073-5095
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.init lib/grammarFunctor.ml(154):5081-5095
                         (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.init lib/grammarFunctor.ml(154):5081-5095
                           (apply (field_imm 0 (global Stdlib__Array!))
                             n/1961 f/2022)))))
                 iter/2023 =
                   (function f/2024 : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.iter lib/grammarFunctor.ml(156)<ghost>:5108-5130
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.iter lib/grammarFunctor.ml(157):5116-5130
                         (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.iter lib/grammarFunctor.ml(157):5116-5130
                           (apply (field_imm 11 (global Gbnf_parser__Misc!))
                             n/1961 f/2024)))))
                 fold/2025 =
                   (function f/2027 accu/2028
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.fold lib/grammarFunctor.ml(159)<ghost>:5143-5175
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.fold lib/grammarFunctor.ml(160):5156-5175
                         (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.fold lib/grammarFunctor.ml(160):5156-5175
                           (apply (field_imm 13 (global Gbnf_parser__Misc!))
                             n/1961 f/2027 accu/2028)))))
                 map/2029 =
                   (function f/2030
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.map lib/grammarFunctor.ml(162)<ghost>:5187-5208
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.map lib/grammarFunctor.ml(163):5195-5208
                         (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.map lib/grammarFunctor.ml(163):5195-5208
                           (apply (field_imm 16 (global Gbnf_parser__Misc!))
                             n/1961 f/2030)))))
                 iterx/2031 =
                   (function f/2033 : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.iterx lib/grammarFunctor.ml(165)<ghost>:5222-5276
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.iterx lib/grammarFunctor.ml(166):5230-5276
                         (for nt/2034 start/1960 to (- n/1961 1)
                           (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.iterx lib/grammarFunctor.ml(167):5263-5267
                             (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.iterx lib/grammarFunctor.ml(167):5263-5267
                               (apply f/2033 nt/2034)))))))
                 foldx/2035 =
                   (function f/2037 accu/2038
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.foldx lib/grammarFunctor.ml(170)<ghost>:5290-5329
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.foldx lib/grammarFunctor.ml(171):5303-5329
                         (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.foldx lib/grammarFunctor.ml(171):5303-5329
                           (apply (field_imm 12 (global Gbnf_parser__Misc!))
                             start/1960 n/1961 f/2037 accu/2038)))))
                 ocamltype/2039 =
                   (function nt/2041[int]
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.ocamltype lib/grammarFunctor.ml(173)<ghost>:5347-5492
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.ocamltype lib/grammarFunctor.ml(174):5356-5492
                         (seq
                           (if
                             (not
                               (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.ocamltype lib/grammarFunctor.ml(174):5368-5390
                                 (apply is_internal_start/1964 nt/2041)))
                             0
                             (raise
                               (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.ocamltype lib/grammarFunctor.ml(174):5356-5391
                                 (makeblock 0 (global Assert_failure/28!)
                                   [0: "lib/grammarFunctor.ml" 174 4]))))
                           (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.ocamltype lib/grammarFunctor.ml(175):5397-5492
                             (try
                               (makeblock 0
                                 (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.ocamltype lib/grammarFunctor.ml(176):5412-5459
                                   (apply
                                     (field_imm 15
                                       (global Gbnf_parser__StringMap!))
                                     (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.ocamltype lib/grammarFunctor.ml(176):5428-5444
                                       (apply print/1970 0 nt/2041))
                                     (field_imm 4 (field_imm 0 G/1226)))))
                              with exn/13610
                               (if
                                 (== exn/13610
                                   (field_imm 7 (global Stdlib!)))
                                 (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.ocamltype lib/grammarFunctor.ml(178):5488-5492
                                   0)
                                 (reraise exn/13610))))))))
                 ocamltype_of_start_symbol/2042 =
                   (function nt/2043[int]
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.ocamltype_of_start_symbol lib/grammarFunctor.ml(180)<ghost>:5526-5668
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.ocamltype_of_start_symbol lib/grammarFunctor.ml(181):5535-5668
                         (let
                           (*match*/13611 =
                              (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.ocamltype_of_start_symbol lib/grammarFunctor.ml(181):5541-5553
                                (apply ocamltype/2039 nt/2043)))
                           (if *match*/13611
                             (let (typ/2044 =a (field_imm 0 *match*/13611))
                               (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.ocamltype_of_start_symbol lib/grammarFunctor.ml(183):5585-5588
                                 typ/2044))
                             (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.ocamltype_of_start_symbol lib/grammarFunctor.ml(186):5656-5668
                               (raise
                                 (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.ocamltype_of_start_symbol lib/grammarFunctor.ml(186):5656-5668
                                   (makeblock 0 (global Assert_failure/28!)
                                     [0: "lib/grammarFunctor.ml" 186 8])))))))))
                 tabulate/2047 =
                   (function f/2049
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.tabulate lib/grammarFunctor.ml(188)<ghost>:5685-5719
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.tabulate lib/grammarFunctor.ml(189):5693-5719
                         (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.tabulate lib/grammarFunctor.ml(189):5693-5719
                           (apply
                             (function prim/13613 prim/13612 stub
                               (array.get[gen] prim/13613 prim/13612))
                             (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.tabulate lib/grammarFunctor.ml(189):5703-5719
                               (apply (field_imm 0 (global Stdlib__Array!))
                                 n/1961 f/2049)))))))
                 attributes/2050 =
                   (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.attributes lib/grammarFunctor.ml(192):5770-5785
                     (caml_make_vect n/1961 0))
                 *match*/13618 =
                   (after Gbnf_parser__GrammarFunctor.Make.Nonterminal lib/grammarFunctor.ml(195):5802-5950
                     (apply (field_imm 21 (global Gbnf_parser__StringMap!))
                       (function nonterminal/2051 param/2054 : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.(fun) lib/grammarFunctor.ml(195):5817-5936
                           (let (attrs/2052 =a (field_imm 3 param/2054))
                             (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.(fun) lib/grammarFunctor.ml(196):5869-5930
                               (let
                                 (nt/2053 =[int]
                                    (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.(fun) lib/grammarFunctor.ml(196):5878-5896
                                      (apply lookup/2014 nonterminal/2051)))
                                 (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.(fun) lib/grammarFunctor.ml(197):5906-5930
                                   (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.(fun) lib/grammarFunctor.ml(197):5906-5930
                                     (array.set[addr] attributes/2050 nt/2053
                                       attrs/2052))))))))
                       (field_imm 8 (field_imm 0 G/1226))))
                 attributes/2055 =
                   (function nt/2056[int]
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Nonterminal.attributes lib/grammarFunctor.ml(200)<ghost>:5969-5993
                       (before Gbnf_parser__GrammarFunctor.Make.Nonterminal.attributes lib/grammarFunctor.ml(201):5978-5993
                         (after Gbnf_parser__GrammarFunctor.Make.Nonterminal.attributes lib/grammarFunctor.ml(201):5978-5993
                           (array.get[addr] attributes/2050 nt/2056))))))
                (pseudo Gbnf_parser__GrammarFunctor.Make.Nonterminal lib/grammarFunctor.ml(100):3824-5998
                  (makeblock 0 n2i/1948 equal/1951 compare/1955
                    new_start_nonterminals/1956 original_nonterminals/1959
                    start/1960 n/1961 name/1962 is_internal_start/1964
                    is_user_start/1967 print/1970 lookup/2014 positions/2017
                    init/2020 iter/2023 fold/2025 map/2029 iterx/2031
                    foldx/2035 ocamltype/2039 ocamltype_of_start_symbol/2042
                    tabulate/2047 attributes/2055)))
            Terminal/2246 =
              (let
                (t2i/2112 =
                   (function i/2114
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.t2i lib/grammarFunctor.ml(218)<ghost>:6272-6277
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.t2i lib/grammarFunctor.ml(218):6276-6277
                         i/2114)))
                 i2t/2115 =
                   (function i/2117
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.i2t lib/grammarFunctor.ml(219)<ghost>:6288-6293
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.i2t lib/grammarFunctor.ml(219):6292-6293
                         i/2117)))
                 compare/2118 =
                   (function prim/13626 prim/13625 stub
                     (- prim/13626 prim/13625))
                 equal/2119 =
                   (function tok1/2121[int] tok2/2122[int] : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.equal lib/grammarFunctor.ml(223)<ghost>:6328-6367
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.equal lib/grammarFunctor.ml(224):6356-6367
                         (== tok1/2121 tok2/2122))))
                 *match*/13650 =
                   (let
                     (tokens/2126 =
                        (after Gbnf_parser__GrammarFunctor.Make.Terminal.n lib/grammarFunctor.ml(240):7054-7068
                          (apply
                            (field_imm 6 (global Gbnf_parser__BasicSyntax!))
                            (field_imm 0 G/1226))))
                     (before Gbnf_parser__GrammarFunctor.Make.Terminal.n lib/grammarFunctor.ml(241):7076-7228
                       (catch
                         (if tokens/2126 (exit 18)
                           (before Gbnf_parser__GrammarFunctor.Make.Terminal.n lib/grammarFunctor.ml(242):7108-7115
                             (if (field_imm 1 G/1226)
                               (before Gbnf_parser__GrammarFunctor.Make.Terminal.n lib/grammarFunctor.ml(243):7127-7173
                                 (after Gbnf_parser__GrammarFunctor.Make.Terminal.n lib/grammarFunctor.ml(243):7127-7173
                                   (apply
                                     (field_imm 6
                                       (global Gbnf_parser__Error!))
                                     0
                                     [0:
                                      [11: "no tokens have been declared." 0]
                                      "no tokens have been declared."])))
                               (exit 18))))
                        with (18)
                         (before Gbnf_parser__GrammarFunctor.Make.Terminal.n lib/grammarFunctor.ml(245):7193-7228
                           (after Gbnf_parser__GrammarFunctor.Make.Terminal.n lib/grammarFunctor.ml(245):7193-7228
                             (apply index/1227
                               (after Gbnf_parser__GrammarFunctor.Make.Terminal.n lib/grammarFunctor.ml(245):7199-7228
                                 (apply (field_imm 36 (global Stdlib!))
                                   (makeblock 0 "error" tokens/2126)
                                   [0: "#" 0]))))))))
                 map/2125 =a (field_imm 2 *match*/13650)
                 name/2124 =a (field_imm 1 *match*/13650)
                 n/2123 =a (field_imm 0 *match*/13650)
                 print/2127 =
                   (function tok/2128[int]
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.print lib/grammarFunctor.ml(247)<ghost>:7242-7262
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.print lib/grammarFunctor.ml(248):7252-7262
                         (after Gbnf_parser__GrammarFunctor.Make.Terminal.print lib/grammarFunctor.ml(248):7252-7262
                           (array.get[addr] name/2124 tok/2128)))))
                 lookup/2129 =
                   (function name/2131 : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.lookup lib/grammarFunctor.ml(250)<ghost>:7277-7311
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.lookup lib/grammarFunctor.ml(251):7288-7311
                         (after Gbnf_parser__GrammarFunctor.Make.Terminal.lookup lib/grammarFunctor.ml(251):7288-7311
                           (apply
                             (field_imm 15 (global Gbnf_parser__StringMap!))
                             name/2131 map/2125)))))
                 sharp/2132 =[int]
                   (after Gbnf_parser__GrammarFunctor.Make.Terminal.sharp lib/grammarFunctor.ml(254):7331-7341
                     (apply lookup/2129 "#"))
                 error/2133 =[int]
                   (after Gbnf_parser__GrammarFunctor.Make.Terminal.error lib/grammarFunctor.ml(257):7361-7375
                     (apply lookup/2129 "error"))
                 pseudo/2134 =
                   (function tok/2136[int] : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.pseudo lib/grammarFunctor.ml(259)<ghost>:7390-7430
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.pseudo lib/grammarFunctor.ml(260):7400-7430
                         (|| (== tok/2136 sharp/2132)
                           (== tok/2136 error/2133)))))
                 real/2137 =
                   (function t/2139[int] : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.real lib/grammarFunctor.ml(262)<ghost>:7443-7475
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.real lib/grammarFunctor.ml(263):7451-7475
                         (&& (!= error/2133 t/2139) (!= t/2139 sharp/2132)))))
                 non_error/2140 =
                   (function tok/2142[int] : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.non_error lib/grammarFunctor.ml(265)<ghost>:7493-7515
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.non_error lib/grammarFunctor.ml(266):7503-7515
                         (!= tok/2142 error/2133))))
                 token_properties/2143 =
                   (let
                     (not_so_dummy_properties/2144 =
                        (makemutable 0 (*,*,*,*,*,int,*,int) "__primitives__"
                          0 (field_imm 9 (global Gbnf_parser__Positions!)) 0
                          0 3 0 1))
                     (before Gbnf_parser__GrammarFunctor.Make.Terminal.token_properties lib/grammarFunctor.ml(281):7949-8143
                       (after Gbnf_parser__GrammarFunctor.Make.Terminal.token_properties lib/grammarFunctor.ml(281):7949-8143
                         (apply (field_imm 0 (global Stdlib__Array!)) n/2123
                           (function tok/2145[int]
                             (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.token_properties.(fun) lib/grammarFunctor.ml(281):7962-8143
                               (before Gbnf_parser__GrammarFunctor.Make.Terminal.token_properties.(fun) lib/grammarFunctor.ml(282):7980-8137
                                 (try
                                   (after Gbnf_parser__GrammarFunctor.Make.Terminal.token_properties.(fun) lib/grammarFunctor.ml(283):7993-8033
                                     (apply
                                       (field_imm 15
                                         (global Gbnf_parser__StringMap!))
                                       (after Gbnf_parser__GrammarFunctor.Make.Terminal.token_properties.(fun) lib/grammarFunctor.ml(283):8008-8018
                                         (array.get[addr] name/2124 tok/2145))
                                       (field_imm 5 (field_imm 0 G/1226))))
                                  with exn/13627
                                   (if
                                     (== exn/13627
                                       (field_imm 7 (global Stdlib!)))
                                     (before Gbnf_parser__GrammarFunctor.Make.Terminal.token_properties.(fun) lib/grammarFunctor.ml(285):8068-8137
                                       (seq
                                         (if
                                           (|| (== tok/2145 sharp/2132)
                                             (== tok/2145 error/2133))
                                           0
                                           (raise
                                             (after Gbnf_parser__GrammarFunctor.Make.Terminal.token_properties.(fun) lib/grammarFunctor.ml(285):8068-8103
                                               (makeblock 0
                                                 (global Assert_failure/28!)
                                                 [0:
                                                  "lib/grammarFunctor.ml" 285
                                                  9]))))
                                         (before Gbnf_parser__GrammarFunctor.Make.Terminal.token_properties.(fun) lib/grammarFunctor.ml(286):8114-8137
                                           not_so_dummy_properties/2144)))
                                     (reraise exn/13627))))))))))
                 precedence_level/2146 =
                   (function tok/2148[int]
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.precedence_level lib/grammarFunctor.ml(295)<ghost>:8337-8403
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.precedence_level lib/grammarFunctor.ml(296):8347-8403
                         (after Gbnf_parser__GrammarFunctor.Make.Terminal.precedence_level lib/grammarFunctor.ml(296):8347-8403
                           (apply (field_imm 2 TokPrecedence/1946)
                             (after Gbnf_parser__GrammarFunctor.Make.Terminal.precedence_level lib/grammarFunctor.ml(296):8369-8380
                               (apply print/2127 tok/2148))
                             (after Gbnf_parser__GrammarFunctor.Make.Terminal.precedence_level lib/grammarFunctor.ml(296):8381-8403
                               (array.get[addr] token_properties/2143
                                 tok/2148)))))))
                 associativity/2149 =
                   (function tok/2151[int] : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.associativity lib/grammarFunctor.ml(298)<ghost>:8425-8474
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.associativity lib/grammarFunctor.ml(299):8435-8474
                         (field_int 5
                           (after Gbnf_parser__GrammarFunctor.Make.Terminal.associativity lib/grammarFunctor.ml(299):8435-8457
                             (array.get[addr] token_properties/2143 tok/2151))))))
                 ocamltype/2152 =
                   (function tok/2154[int]
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.ocamltype lib/grammarFunctor.ml(301)<ghost>:8492-8537
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.ocamltype lib/grammarFunctor.ml(302):8502-8537
                         (field_imm 1
                           (after Gbnf_parser__GrammarFunctor.Make.Terminal.ocamltype lib/grammarFunctor.ml(302):8502-8524
                             (array.get[addr] token_properties/2143 tok/2154))))))
                 init/2155 =
                   (function f/2157
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.init lib/grammarFunctor.ml(304)<ghost>:8550-8572
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.init lib/grammarFunctor.ml(305):8558-8572
                         (after Gbnf_parser__GrammarFunctor.Make.Terminal.init lib/grammarFunctor.ml(305):8558-8572
                           (apply (field_imm 0 (global Stdlib__Array!))
                             n/2123 f/2157)))))
                 iter/2158 =
                   (function f/2159 : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.iter lib/grammarFunctor.ml(307)<ghost>:8585-8607
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.iter lib/grammarFunctor.ml(308):8593-8607
                         (after Gbnf_parser__GrammarFunctor.Make.Terminal.iter lib/grammarFunctor.ml(308):8593-8607
                           (apply (field_imm 11 (global Gbnf_parser__Misc!))
                             n/2123 f/2159)))))
                 fold/2160 =
                   (function f/2162 accu/2163
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.fold lib/grammarFunctor.ml(310)<ghost>:8620-8652
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.fold lib/grammarFunctor.ml(311):8633-8652
                         (after Gbnf_parser__GrammarFunctor.Make.Terminal.fold lib/grammarFunctor.ml(311):8633-8652
                           (apply (field_imm 13 (global Gbnf_parser__Misc!))
                             n/2123 f/2162 accu/2163)))))
                 map/2164 =
                   (function f/2165
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.map lib/grammarFunctor.ml(313)<ghost>:8664-8685
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.map lib/grammarFunctor.ml(314):8672-8685
                         (after Gbnf_parser__GrammarFunctor.Make.Terminal.map lib/grammarFunctor.ml(314):8672-8685
                           (apply (field_imm 16 (global Gbnf_parser__Misc!))
                             n/2123 f/2165)))))
                 *match*/13641 =
                   (if (== sharp/2132 (- n/2123 1)) 0
                     (raise
                       (after Gbnf_parser__GrammarFunctor.Make.Terminal lib/grammarFunctor.ml(317):8702-8724
                         (makeblock 0 (global Assert_failure/28!)
                           [0: "lib/grammarFunctor.ml" 317 4]))))
                 foldx/2166 =
                   (function f/2168 accu/2169
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.foldx lib/grammarFunctor.ml(318)<ghost>:8737-8773
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.foldx lib/grammarFunctor.ml(319):8750-8773
                         (after Gbnf_parser__GrammarFunctor.Make.Terminal.foldx lib/grammarFunctor.ml(319):8750-8773
                           (apply (field_imm 13 (global Gbnf_parser__Misc!))
                             sharp/2132 f/2168 accu/2169)))))
                 mapx/2170 =
                   (function f/2172
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.mapx lib/grammarFunctor.ml(320)<ghost>:8785-8810
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.mapx lib/grammarFunctor.ml(321):8793-8810
                         (after Gbnf_parser__GrammarFunctor.Make.Terminal.mapx lib/grammarFunctor.ml(321):8793-8810
                           (apply (field_imm 16 (global Gbnf_parser__Misc!))
                             sharp/2132 f/2172)))))
                 *match*/13639 =
                   (if (== error/2133 0) 0
                     (raise
                       (after Gbnf_parser__GrammarFunctor.Make.Terminal lib/grammarFunctor.ml(324):8827-8845
                         (makeblock 0 (global Assert_failure/28!)
                           [0: "lib/grammarFunctor.ml" 324 4]))))
                 iter_real/2173 =
                   (function f/2175 : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.iter_real lib/grammarFunctor.ml(325)<ghost>:8862-8908
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.iter_real lib/grammarFunctor.ml(326):8870-8908
                         (for i/2176 1 to (- n/2123 2)
                           (before Gbnf_parser__GrammarFunctor.Make.Terminal.iter_real lib/grammarFunctor.ml(327):8896-8899
                             (after Gbnf_parser__GrammarFunctor.Make.Terminal.iter_real lib/grammarFunctor.ml(327):8896-8899
                               (apply f/2175 i/2176)))))))
                 tokens_without_an_alias/2177 =
                   (let (accu/2178 = (makemutable 0 0))
                     (before Gbnf_parser__GrammarFunctor.Make.Terminal.tokens_without_an_alias lib/grammarFunctor.ml(332):8971-9144
                       (seq
                         (after Gbnf_parser__GrammarFunctor.Make.Terminal.tokens_without_an_alias lib/grammarFunctor.ml(332):8971-9124
                           (apply iter_real/2173
                             (function tok/2179[int] : int
                               (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.tokens_without_an_alias.(fun) lib/grammarFunctor.ml(332):8981-9124
                                 (before Gbnf_parser__GrammarFunctor.Make.Terminal.tokens_without_an_alias.(fun) lib/grammarFunctor.ml(333):9004-9116
                                   (let
                                     (properties/2180 =
                                        (after Gbnf_parser__GrammarFunctor.Make.Terminal.tokens_without_an_alias.(fun) lib/grammarFunctor.ml(333):9021-9043
                                          (array.get[addr]
                                            token_properties/2143 tok/2179)))
                                     (before Gbnf_parser__GrammarFunctor.Make.Terminal.tokens_without_an_alias.(fun) lib/grammarFunctor.ml(334):9053-9116
                                       (if
                                         (== (field_imm 3 properties/2180) 0)
                                         (before Gbnf_parser__GrammarFunctor.Make.Terminal.tokens_without_an_alias.(fun) lib/grammarFunctor.ml(335):9096-9116
                                           (setfield_ptr 0 accu/2178
                                             (makeblock 0 (int,*) tok/2179
                                               (field_mut 0 accu/2178))))
                                         0))))))))
                         (before Gbnf_parser__GrammarFunctor.Make.Terminal.tokens_without_an_alias lib/grammarFunctor.ml(337):9130-9144
                           (after Gbnf_parser__GrammarFunctor.Make.Terminal.tokens_without_an_alias lib/grammarFunctor.ml(337):9130-9144
                             (apply (field_imm 9 (global Stdlib__List!))
                               (field_mut 0 accu/2178)))))))
                 every_token_has_an_alias/2181 =[int]
                   (== tokens_without_an_alias/2177 0)
                 alias/2182 =
                   (function tok/2184[int]
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.alias lib/grammarFunctor.ml(352)<ghost>:9618-9659
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.alias lib/grammarFunctor.ml(353):9628-9659
                         (field_imm 3
                           (after Gbnf_parser__GrammarFunctor.Make.Terminal.alias lib/grammarFunctor.ml(353):9628-9650
                             (array.get[addr] token_properties/2143 tok/2184))))))
                 unquoted_alias/2185 =
                   (function param/2187
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.unquoted_alias lib/grammarFunctor.ml(355)<ghost>:9683-9689
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.unquoted_alias lib/grammarFunctor.ml(355):9687-9689
                         "")))
                 print_concrete/2188 =
                   (function param/2190
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.print_concrete lib/grammarFunctor.ml(367)<ghost>:10162-10168
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.print_concrete lib/grammarFunctor.ml(367):10166-10168
                         "")))
                 eof/2191 =
                   (try
                     (makeblock 0 (int)
                       (after Gbnf_parser__GrammarFunctor.Make.Terminal.eof lib/grammarFunctor.ml(382):10599-10613
                         (apply lookup/2129 "EOF")))
                    with exn/13629
                     (if (== exn/13629 (field_imm 7 (global Stdlib!)))
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.eof lib/grammarFunctor.ml(384):10642-10646
                         0)
                       (reraise exn/13629)))
                 attributes/2192 =
                   (function tok/2194[int]
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.attributes lib/grammarFunctor.ml(386)<ghost>:10665-10711
                       (before Gbnf_parser__GrammarFunctor.Make.Terminal.attributes lib/grammarFunctor.ml(387):10675-10711
                         (field_imm 4
                           (after Gbnf_parser__GrammarFunctor.Make.Terminal.attributes lib/grammarFunctor.ml(387):10675-10697
                             (array.get[addr] token_properties/2143 tok/2194))))))
                 Word/2245 =
                   (function X/13637 is_a_functor
                     (let
                       (*match*/13636 =
                          (if (<= n/2123 256) 0
                            (raise
                              (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word lib/grammarFunctor.ml(409):11738-11755
                                (makeblock 0 (global Assert_failure/28!)
                                  [0: "lib/grammarFunctor.ml" 409 6]))))
                        *match*/13634 =
                          (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.encode lib/grammarFunctor.ml(412):11833-11860
                            (apply (field_imm 24 (global Gbnf_parser__Misc!))
                              1024))
                        verbose/2198 =a (field_imm 2 *match*/13634)
                        decode/2197 =a (field_imm 1 *match*/13634)
                        encode/2196 =a (field_imm 0 *match*/13634)
                        epsilon/2200 =[int]
                          (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.epsilon lib/grammarFunctor.ml(418):11913-11922
                            (apply encode/2196 ""))
                        singleton/2201 =
                          (function t/2203[int] : int
                            (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.Word.singleton lib/grammarFunctor.ml(420)<ghost>:11942-11987
                              (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.singleton lib/grammarFunctor.ml(421):11952-11987
                                (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.singleton lib/grammarFunctor.ml(421):11952-11987
                                  (apply encode/2196
                                    (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.singleton lib/grammarFunctor.ml(421):11959-11987
                                      (apply
                                        (field_imm 0
                                          (global Stdlib__String!))
                                        1
                                        (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.singleton lib/grammarFunctor.ml(421):11974-11986
                                          (apply
                                            (field_imm 0
                                              (global Stdlib__Char!))
                                            t/2203)))))))))
                        append/2215 =
                          (function i1/2217[int] i2/2218[int] : int
                            (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.Word.append lib/grammarFunctor.ml(423)<ghost>:12004-12197
                              (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.append lib/grammarFunctor.ml(424):12018-12197
                                (let
                                  (w1/2219 =
                                     (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.append lib/grammarFunctor.ml(424):12027-12036
                                       (apply decode/2197 i1/2217))
                                   w2/2220 =
                                     (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.append lib/grammarFunctor.ml(425):12052-12061
                                       (apply decode/2197 i2/2218)))
                                  (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.append lib/grammarFunctor.ml(426):12071-12197
                                    (if (== (string.length w1/2219) 0)
                                      (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.append lib/grammarFunctor.ml(427):12108-12110
                                        i2/2218)
                                      (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.append lib/grammarFunctor.ml(428):12122-12197
                                        (if (== (string.length w2/2220) 0)
                                          (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.append lib/grammarFunctor.ml(429):12159-12161
                                            i1/2217)
                                          (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.append lib/grammarFunctor.ml(431):12181-12197
                                            (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.append lib/grammarFunctor.ml(431):12181-12197
                                              (apply encode/2196
                                                (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.append lib/grammarFunctor.ml(431):12188-12197
                                                  (apply
                                                    (field_imm 27
                                                      (global Stdlib!))
                                                    w1/2219 w2/2220)))))))))))))
                        length/2221 =
                          (function i/2223[int] : int
                            (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.Word.length lib/grammarFunctor.ml(433)<ghost>:12214-12248
                              (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.length lib/grammarFunctor.ml(434):12224-12248
                                (string.length
                                  (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.length lib/grammarFunctor.ml(434):12238-12248
                                    (apply decode/2197 i/2223))))))
                        first/2224 =
                          (function i/2226[int] z/2227[int] : int
                            (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.Word.first lib/grammarFunctor.ml(436)<ghost>:12264-12374
                              (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.first lib/grammarFunctor.ml(437):12276-12374
                                (let
                                  (w/2228 =
                                     (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.first lib/grammarFunctor.ml(437):12284-12292
                                       (apply decode/2197 i/2226)))
                                  (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.first lib/grammarFunctor.ml(438):12302-12374
                                    (if (> (string.length w/2228) 0)
                                      (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.first lib/grammarFunctor.ml(439):12338-12353
                                        (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.first lib/grammarFunctor.ml(439):12348-12353
                                          (string.get w/2228 0)))
                                      (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.first lib/grammarFunctor.ml(441):12373-12374
                                        z/2227))))))))
                       (letrec
                         (elements/2229
                            (function i/2230[int] n/2231[int] w/2232
                              (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.Word.elements lib/grammarFunctor.ml(443)<ghost>:12397-12494
                                (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.elements lib/grammarFunctor.ml(444):12411-12494
                                  (if (== i/2230 n/2231)
                                    (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.elements lib/grammarFunctor.ml(445):12433-12435
                                      0)
                                    (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.elements lib/grammarFunctor.ml(447):12455-12494
                                      (makeblock 0 (int,*)
                                        (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.elements lib/grammarFunctor.ml(447):12465-12470
                                          (string.get w/2232 i/2230))
                                        (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.elements lib/grammarFunctor.ml(447):12474-12494
                                          (apply elements/2229 (+ i/2230 1)
                                            n/2231 w/2232)))))))))
                         (let
                           (elements/2233 =
                              (function i/2234[int]
                                (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.Word.elements lib/grammarFunctor.ml(449)<ghost>:12513-12579
                                  (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.elements lib/grammarFunctor.ml(450):12523-12579
                                    (let
                                      (w/2235 =
                                         (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.elements lib/grammarFunctor.ml(450):12531-12539
                                           (apply decode/2197 i/2234)))
                                      (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.elements lib/grammarFunctor.ml(451):12549-12579
                                        (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.elements lib/grammarFunctor.ml(451):12549-12579
                                          (apply elements/2229 0
                                            (string.length w/2235) w/2235)))))))
                            print/2236 =
                              (function i/2237[int]
                                (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.Word.print lib/grammarFunctor.ml(453)<ghost>:12595-12746
                                  (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.print lib/grammarFunctor.ml(454):12605-12746
                                    (let
                                      (w/2238 =
                                         (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.print lib/grammarFunctor.ml(454):12613-12621
                                           (apply decode/2197 i/2237)))
                                      (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.print lib/grammarFunctor.ml(455):12631-12746
                                        (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.print lib/grammarFunctor.ml(455):12631-12746
                                          (apply
                                            (field_imm 5
                                              (global Gbnf_parser__Misc!))
                                            (function c/2239[int]
                                              (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.Word.print.(fun) lib/grammarFunctor.ml(456):12669-12699
                                                (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.print.(fun) lib/grammarFunctor.ml(456):12679-12698
                                                  (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.print.(fun) lib/grammarFunctor.ml(456):12679-12698
                                                    (apply print/2127 c/2239)))))
                                            " "
                                            (function f/2240 : int
                                              (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.Word.print.(fun) lib/grammarFunctor.ml(458):12720-12746
                                                (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.print.(fun) lib/grammarFunctor.ml(458):12730-12745
                                                  (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.print.(fun) lib/grammarFunctor.ml(458):12730-12745
                                                    (apply
                                                      (field_imm 29
                                                        (global Stdlib__String!))
                                                      f/2240 w/2238))))))))))))
                            compare/2241 =
                              (function i1/2242[int] i2/2243[int] : int
                                (funct-body Gbnf_parser__GrammarFunctor.Make.Terminal.Word.compare lib/grammarFunctor.ml(461)<ghost>:12840-12893
                                  (before Gbnf_parser__GrammarFunctor.Make.Terminal.Word.compare lib/grammarFunctor.ml(462):12854-12893
                                    (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.compare lib/grammarFunctor.ml(462):12854-12893
                                      (apply
                                        (field_imm 0
                                          (global Gbnf_parser__Generic!))
                                        (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.compare lib/grammarFunctor.ml(462):12870-12881
                                          (apply decode/2197 i1/2242))
                                        (after Gbnf_parser__GrammarFunctor.Make.Terminal.Word.compare lib/grammarFunctor.ml(462):12882-12893
                                          (apply decode/2197 i2/2243))))))))
                           (pseudo Gbnf_parser__GrammarFunctor.Make.Terminal.Word lib/grammarFunctor.ml(395):11037-12900
                             (makeblock 0 encode/2196 decode/2197
                               verbose/2198 epsilon/2200 singleton/2201
                               append/2215 length/2221 first/2224
                               elements/2233 print/2236 compare/2241)))))))
                (pseudo Gbnf_parser__GrammarFunctor.Make.Terminal lib/grammarFunctor.ml(214):6238-12905
                  (makeblock 0 t2i/2112 i2t/2115 compare/2118 equal/2119
                    n/2123 name/2124 print/2127 lookup/2129 sharp/2132
                    error/2133 pseudo/2134 real/2137 non_error/2140
                    token_properties/2143 precedence_level/2146
                    associativity/2149 ocamltype/2152 init/2155 iter/2158
                    fold/2160 map/2164 foldx/2166 mapx/2170 iter_real/2173
                    tokens_without_an_alias/2177
                    every_token_has_an_alias/2181 alias/2182
                    unquoted_alias/2185 print_concrete/2188 eof/2191
                    attributes/2192 Word/2245)))
            TerminalSet/2387 =
              (let
                (include/13651 =
                   (apply
                     (apply
                       (let
                         (let/13652 =
                            (field_imm 0
                              (global Gbnf_parser__BoundedBitSet!)))
                         (field_imm 0 (global Gbnf_parser__BoundedBitSet!)))
                       (makeblock 0 (field_mut 4 Terminal/2246)))
                     0)
                 empty/2338 =a (field_mut 0 include/13651)
                 is_empty/2339 =a (field_mut 1 include/13651)
                 singleton/2340 =a (field_mut 2 include/13651)
                 is_singleton/2341 =a (field_mut 3 include/13651)
                 cardinal/2342 =a (field_mut 4 include/13651)
                 choose/2343 =a (field_mut 5 include/13651)
                 mem/2344 =a (field_mut 6 include/13651)
                 add/2345 =a (field_mut 7 include/13651)
                 remove/2346 =a (field_mut 8 include/13651)
                 union/2347 =a (field_mut 9 include/13651)
                 inter/2348 =a (field_mut 10 include/13651)
                 disjoint/2349 =a (field_mut 11 include/13651)
                 iter/2350 =a (field_mut 12 include/13651)
                 fold/2351 =a (field_mut 13 include/13651)
                 elements/2352 =a (field_mut 14 include/13651)
                 compare/2353 =a (field_mut 15 include/13651)
                 equal/2354 =a (field_mut 16 include/13651)
                 subset/2355 =a (field_mut 17 include/13651)
                 print/2376 =
                   (function toks/2377
                     (funct-body Gbnf_parser__GrammarFunctor.Make.TerminalSet.print lib/grammarFunctor.ml(477)<ghost>:13192-13274
                       (before Gbnf_parser__GrammarFunctor.Make.TerminalSet.print lib/grammarFunctor.ml(478):13203-13274
                         (after Gbnf_parser__GrammarFunctor.Make.TerminalSet.print lib/grammarFunctor.ml(478):13203-13274
                           (apply (field_imm 5 (global Gbnf_parser__Misc!))
                             (field_imm 6 Terminal/2246) " "
                             (function f/2379 : int
                               (funct-body Gbnf_parser__GrammarFunctor.Make.TerminalSet.print.(fun) lib/grammarFunctor.ml(478):13252-13274
                                 (before Gbnf_parser__GrammarFunctor.Make.TerminalSet.print.(fun) lib/grammarFunctor.ml(478):13262-13273
                                   (after Gbnf_parser__GrammarFunctor.Make.TerminalSet.print.(fun) lib/grammarFunctor.ml(478):13262-13273
                                     (apply iter/2350 f/2379 toks/2377))))))))))
                 universe/2380 =
                   (after Gbnf_parser__GrammarFunctor.Make.TerminalSet.universe lib/grammarFunctor.ml(481):13297-13396
                     (apply remove/2346 (field_imm 8 Terminal/2246)
                       (after Gbnf_parser__GrammarFunctor.Make.TerminalSet.universe lib/grammarFunctor.ml(481):13319-13396
                         (apply remove/2346 (field_imm 9 Terminal/2246)
                           (after Gbnf_parser__GrammarFunctor.Make.TerminalSet.universe lib/grammarFunctor.ml(482):13349-13390
                             (apply (field_imm 19 Terminal/2246) add/2345
                               empty/2338))))))
                 bottom/2382 = empty/2338
                 is_maximal/2383 =
                   (function param/2385 : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.TerminalSet.is_maximal lib/grammarFunctor.ml(496)<ghost>:13599-13612
                       (before Gbnf_parser__GrammarFunctor.Make.TerminalSet.is_maximal lib/grammarFunctor.ml(497):13607-13612
                         0)))
                 leq_join/2386 = union/2347)
                (pseudo Gbnf_parser__GrammarFunctor.Make.TerminalSet lib/grammarFunctor.ml(471):13062-13645
                  (makeblock 0 empty/2338 is_empty/2339 singleton/2340
                    is_singleton/2341 cardinal/2342 choose/2343 mem/2344
                    add/2345 remove/2346 union/2347 inter/2348 disjoint/2349
                    iter/2350 fold/2351 elements/2352 compare/2353 equal/2354
                    subset/2355 print/2376 universe/2380 bottom/2382
                    is_maximal/2383 leq_join/2386)))
            Symbol/2545 =
              (let
                (is_terminal/2392 =
                   (function sym/2394 : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Symbol.is_terminal lib/grammarFunctor.ml(517)<ghost>:13906-13983
                       (before Gbnf_parser__GrammarFunctor.Make.Symbol.is_terminal lib/grammarFunctor.ml(518):13916-13983
                         (switch* sym/2394
                          case tag 0:
                           (before Gbnf_parser__GrammarFunctor.Make.Symbol.is_terminal lib/grammarFunctor.ml(520):13952-13957
                             0)
                          case tag 1:
                           (before Gbnf_parser__GrammarFunctor.Make.Symbol.is_terminal lib/grammarFunctor.ml(522):13979-13983
                             1)))))
                 compare/2395 =
                   (function sym1/2396 sym2/2397 : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Symbol.compare lib/grammarFunctor.ml(524)<ghost>:13999-14210
                       (before Gbnf_parser__GrammarFunctor.Make.Symbol.compare lib/grammarFunctor.ml(525):14015-14210
                         (switch* sym1/2396
                          case tag 0:
                           (let (nt1/2398 =a (field_imm 0 sym1/2396))
                             (switch* sym2/2397
                              case tag 0:
                               (let (nt2/2399 =a (field_imm 0 sym2/2397))
                                 (before Gbnf_parser__GrammarFunctor.Make.Symbol.compare lib/grammarFunctor.ml(527):14067-14094
                                   (after Gbnf_parser__GrammarFunctor.Make.Symbol.compare lib/grammarFunctor.ml(527):14067-14094
                                     (apply (field_imm 2 Nonterminal/2057)
                                       nt1/2398 nt2/2399))))
                              case tag 1:
                               (before Gbnf_parser__GrammarFunctor.Make.Symbol.compare lib/grammarFunctor.ml(531):14180-14181
                                 1)))
                          case tag 1:
                           (let (tok1/2400 =a (field_imm 0 sym1/2396))
                             (switch* sym2/2397
                              case tag 0:
                               (before Gbnf_parser__GrammarFunctor.Make.Symbol.compare lib/grammarFunctor.ml(533):14208-14210
                                 -1)
                              case tag 1:
                               (let (tok2/2401 =a (field_imm 0 sym2/2397))
                                 (before Gbnf_parser__GrammarFunctor.Make.Symbol.compare lib/grammarFunctor.ml(529):14127-14153
                                   (after Gbnf_parser__GrammarFunctor.Make.Symbol.compare lib/grammarFunctor.ml(529):14127-14153
                                     (apply (field_imm 2 Terminal/2246)
                                       tok1/2400 tok2/2401))))))))))
                 equal/2402 =
                   (function sym1/2404 sym2/2405 : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Symbol.equal lib/grammarFunctor.ml(535)<ghost>:14224-14261
                       (before Gbnf_parser__GrammarFunctor.Make.Symbol.equal lib/grammarFunctor.ml(536):14240-14261
                         (==
                           (after Gbnf_parser__GrammarFunctor.Make.Symbol.equal lib/grammarFunctor.ml(536):14240-14257
                             (apply compare/2395 sym1/2404 sym2/2405))
                           0)))))
                (letrec
                  (lequal/2406
                     (function syms1/2407 syms2/2408 : int
                       (funct-body Gbnf_parser__GrammarFunctor.Make.Symbol.lequal lib/grammarFunctor.ml(538)<ghost>:14280-14485
                         (before Gbnf_parser__GrammarFunctor.Make.Symbol.lequal lib/grammarFunctor.ml(539):14298-14485
                           (catch
                             (if syms1/2407
                               (if syms2/2408
                                 (let
                                   (syms2/2412 =a (field_imm 1 syms2/2408)
                                    sym2/2411 =a (field_imm 0 syms2/2408)
                                    syms1/2410 =a (field_imm 1 syms1/2407)
                                    sym1/2409 =a (field_imm 0 syms1/2407))
                                   (before Gbnf_parser__GrammarFunctor.Make.Symbol.lequal lib/grammarFunctor.ml(543):14397-14434
                                     (&&
                                       (after Gbnf_parser__GrammarFunctor.Make.Symbol.lequal lib/grammarFunctor.ml(543):14397-14412
                                         (apply equal/2402 sym1/2409
                                           sym2/2411))
                                       (after Gbnf_parser__GrammarFunctor.Make.Symbol.lequal lib/grammarFunctor.ml(543):14416-14434
                                         (apply lequal/2406 syms1/2410
                                           syms2/2412)))))
                                 (exit 37))
                               (if syms2/2408 (exit 37)
                                 (before Gbnf_parser__GrammarFunctor.Make.Symbol.lequal lib/grammarFunctor.ml(541):14346-14350
                                   1)))
                            with (37)
                             (before Gbnf_parser__GrammarFunctor.Make.Symbol.lequal lib/grammarFunctor.ml(546):14480-14485
                               0))))))
                  (let
                    (non_error/2413 =
                       (function sym/2415 : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Symbol.non_error lib/grammarFunctor.ml(548)<ghost>:14503-14599
                           (before Gbnf_parser__GrammarFunctor.Make.Symbol.non_error lib/grammarFunctor.ml(549):14513-14599
                             (switch* sym/2415
                              case tag 0:
                               (before Gbnf_parser__GrammarFunctor.Make.Symbol.non_error lib/grammarFunctor.ml(553):14595-14599
                                 1)
                              case tag 1:
                               (let (tok/2416 =a (field_imm 0 sym/2415))
                                 (before Gbnf_parser__GrammarFunctor.Make.Symbol.non_error lib/grammarFunctor.ml(551):14551-14573
                                   (after Gbnf_parser__GrammarFunctor.Make.Symbol.non_error lib/grammarFunctor.ml(551):14551-14573
                                     (apply (field_imm 12 Terminal/2246)
                                       tok/2416))))))))
                     print/2417 =
                       (function param/2420
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Symbol.print lib/grammarFunctor.ml(555):14615-14714
                           (switch* param/2420
                            case tag 0:
                             (let (nt/2418 =a (field_imm 0 param/2420))
                               (before Gbnf_parser__GrammarFunctor.Make.Symbol.print lib/grammarFunctor.ml(557):14646-14672
                                 (after Gbnf_parser__GrammarFunctor.Make.Symbol.print lib/grammarFunctor.ml(557):14646-14672
                                   (apply (field_imm 10 Nonterminal/2057) 0
                                     nt/2418))))
                            case tag 1:
                             (let (tok/2419 =a (field_imm 0 param/2420))
                               (before Gbnf_parser__GrammarFunctor.Make.Symbol.print lib/grammarFunctor.ml(559):14696-14714
                                 (after Gbnf_parser__GrammarFunctor.Make.Symbol.print lib/grammarFunctor.ml(559):14696-14714
                                   (apply (field_imm 6 Terminal/2246)
                                     tok/2419)))))))
                     nonterminal/2421 =
                       (function param/2423 : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Symbol.nonterminal lib/grammarFunctor.ml(561):14736-14797
                           (switch* param/2423
                            case tag 0:
                             (before Gbnf_parser__GrammarFunctor.Make.Symbol.nonterminal lib/grammarFunctor.ml(565):14793-14797
                               1)
                            case tag 1:
                             (before Gbnf_parser__GrammarFunctor.Make.Symbol.nonterminal lib/grammarFunctor.ml(563):14766-14771
                               0))))
                     buffer/2424 =
                       (after Gbnf_parser__GrammarFunctor.Make.Symbol.buffer lib/grammarFunctor.ml(573):15053-15071
                         (apply (field_imm 0 (global Stdlib__Buffer!)) 1024))
                     printaod/2507 =
                       (function offset/2509[int] dot/2510[int] symbols/2511
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(575)<ghost>:15088-15599
                           (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(576):15113-15599
                             (let
                               (length/2512 =[int]
                                  (array.length[addr] symbols/2511))
                               (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(577):15154-15599
                                 (let (first/2513 = (makemutable 0 (int) 1))
                                   (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(578):15182-15599
                                     (let
                                       (separate/2514 =
                                          (function param/2529[int] : int
                                            (funct-body Gbnf_parser__GrammarFunctor.Make.Symbol.printaod.separate lib/grammarFunctor.ml(578)<ghost>:15195-15272
                                              (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod.separate lib/grammarFunctor.ml(579):15206-15272
                                                (seq
                                                  (if
                                                    (not
                                                      (field_int 0
                                                        first/2513))
                                                    (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod.separate lib/grammarFunctor.ml(579):15225-15250
                                                      (after Gbnf_parser__GrammarFunctor.Make.Symbol.printaod.separate lib/grammarFunctor.ml(579):15225-15250
                                                        (apply
                                                          (field_imm 4
                                                            (global Stdlib__Printf!))
                                                          buffer/2424
                                                          [0:
                                                           [12: ' ' 0] " "])))
                                                    0)
                                                  (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod.separate lib/grammarFunctor.ml(580):15258-15272
                                                    (setfield_imm 0
                                                      first/2513 0)))))))
                                       (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(582):15284-15599
                                         (seq
                                           (for i/2530 offset/2509 to
                                             length/2512
                                             (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(583):15318-15520
                                               (seq
                                                 (if (== i/2530 dot/2510)
                                                   (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(583):15334-15403
                                                     (seq
                                                       (after Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(584):15348-15358
                                                         (apply separate/2514
                                                           0))
                                                       (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(585):15368-15393
                                                         (after Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(585):15368-15393
                                                           (apply
                                                             (field_imm 4
                                                               (global Stdlib__Printf!))
                                                             buffer/2424
                                                             [0:
                                                              [12: '.' 0] "."])))))
                                                   0)
                                                 (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(587):15411-15520
                                                   (if (< i/2530 length/2512)
                                                     (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(587):15430-15520
                                                       (seq
                                                         (after Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(588):15444-15454
                                                           (apply
                                                             separate/2514 0))
                                                         (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(589):15464-15510
                                                           (after Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(589):15464-15510
                                                             (apply
                                                               (field_imm 4
                                                                 (global Stdlib__Printf!))
                                                               buffer/2424
                                                               [0:
                                                                [2: 0 0] "%s"]
                                                               (after Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(589):15491-15510
                                                                 (apply
                                                                   print/2417
                                                                   (after Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(589):15498-15509
                                                                    (array.get[addr]
                                                                    symbols/2511
                                                                    i/2530)))))))))
                                                     0)))))
                                           (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(592):15535-15599
                                             (let
                                               (s/2531 =
                                                  (after Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(592):15543-15565
                                                    (apply
                                                      (field_imm 1
                                                        (global Stdlib__Buffer!))
                                                      buffer/2424)))
                                               (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(593):15573-15599
                                                 (seq
                                                   (after Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(593):15573-15592
                                                     (apply
                                                       (field_imm 7
                                                         (global Stdlib__Buffer!))
                                                       buffer/2424))
                                                   (before Gbnf_parser__GrammarFunctor.Make.Symbol.printaod lib/grammarFunctor.ml(594):15598-15599
                                                     s/2531)))))))))))))))
                     printao/2532 =
                       (function offset/2534[int] symbols/2535
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Symbol.printao lib/grammarFunctor.ml(596)<ghost>:15615-15664
                           (before Gbnf_parser__GrammarFunctor.Make.Symbol.printao lib/grammarFunctor.ml(597):15636-15664
                             (after Gbnf_parser__GrammarFunctor.Make.Symbol.printao lib/grammarFunctor.ml(597):15636-15664
                               (apply printaod/2507 offset/2534 -1
                                 symbols/2535)))))
                     printa/2536 =
                       (function symbols/2538
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Symbol.printa lib/grammarFunctor.ml(599)<ghost>:15679-15710
                           (before Gbnf_parser__GrammarFunctor.Make.Symbol.printa lib/grammarFunctor.ml(600):15693-15710
                             (after Gbnf_parser__GrammarFunctor.Make.Symbol.printa lib/grammarFunctor.ml(600):15693-15710
                               (apply printao/2532 0 symbols/2538)))))
                     printl/2539 =
                       (function symbols/2541
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Symbol.printl lib/grammarFunctor.ml(602)<ghost>:15725-15769
                           (before Gbnf_parser__GrammarFunctor.Make.Symbol.printl lib/grammarFunctor.ml(603):15739-15769
                             (after Gbnf_parser__GrammarFunctor.Make.Symbol.printl lib/grammarFunctor.ml(603):15739-15769
                               (apply printa/2536
                                 (after Gbnf_parser__GrammarFunctor.Make.Symbol.printl lib/grammarFunctor.ml(603):15746-15769
                                   (apply
                                     (field_imm 9 (global Stdlib__Array!))
                                     symbols/2541)))))))
                     lookup/2542 =
                       (function name/2544
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Symbol.lookup lib/grammarFunctor.ml(605)<ghost>:15784-15942
                           (before Gbnf_parser__GrammarFunctor.Make.Symbol.lookup lib/grammarFunctor.ml(606):15795-15942
                             (try
                               (makeblock 1 (int)
                                 (after Gbnf_parser__GrammarFunctor.Make.Symbol.lookup lib/grammarFunctor.ml(607):15807-15829
                                   (apply (field_imm 7 Terminal/2246)
                                     name/2544)))
                              with exn/13662
                               (if
                                 (== exn/13662
                                   (field_imm 7 (global Stdlib!)))
                                 (before Gbnf_parser__GrammarFunctor.Make.Symbol.lookup lib/grammarFunctor.ml(609):15858-15942
                                   (try
                                     (makeblock 0 (int)
                                       (after Gbnf_parser__GrammarFunctor.Make.Symbol.lookup lib/grammarFunctor.ml(610):15872-15897
                                         (apply
                                           (field_imm 11 Nonterminal/2057)
                                           name/2544)))
                                    with exn/13663
                                     (if
                                       (== exn/13663
                                         (field_imm 7 (global Stdlib!)))
                                       (before Gbnf_parser__GrammarFunctor.Make.Symbol.lookup lib/grammarFunctor.ml(612):15930-15942
                                         (raise
                                           (after Gbnf_parser__GrammarFunctor.Make.Symbol.lookup lib/grammarFunctor.ml(612):15930-15942
                                             (makeblock 0
                                               (global Assert_failure/28!)
                                               [0:
                                                "lib/grammarFunctor.ml" 612 8]))))
                                       (reraise exn/13663))))
                                 (reraise exn/13662)))))))
                    (pseudo Gbnf_parser__GrammarFunctor.Make.Symbol lib/grammarFunctor.ml(511):13821-16002
                      (makeblock 0 is_terminal/2392 compare/2395 equal/2402
                        lequal/2406 non_error/2413 print/2417
                        nonterminal/2421 buffer/2424 printaod/2507
                        printao/2532 printa/2536 printl/2539 lookup/2542)))))
            SymbolSet/2738 =
              (let
                (include/13664 =
                   (apply
                     (let (let/13665 = (field_imm 0 (global Stdlib__Set!)))
                       (field_imm 0 (global Stdlib__Set!)))
                     (makeblock 0 (field_mut 1 Symbol/2545)))
                 empty/2644 =a (field_mut 0 include/13664)
                 add/2645 =a (field_mut 1 include/13664)
                 singleton/2646 =a (field_mut 2 include/13664)
                 remove/2647 =a (field_mut 3 include/13664)
                 union/2648 =a (field_mut 4 include/13664)
                 inter/2649 =a (field_mut 5 include/13664)
                 disjoint/2650 =a (field_mut 6 include/13664)
                 diff/2651 =a (field_mut 7 include/13664)
                 cardinal/2652 =a (field_mut 8 include/13664)
                 elements/2653 =a (field_mut 9 include/13664)
                 min_elt/2654 =a (field_mut 10 include/13664)
                 min_elt_opt/2655 =a (field_mut 11 include/13664)
                 max_elt/2656 =a (field_mut 12 include/13664)
                 max_elt_opt/2657 =a (field_mut 13 include/13664)
                 choose/2658 =a (field_mut 14 include/13664)
                 choose_opt/2659 =a (field_mut 15 include/13664)
                 find/2660 =a (field_mut 16 include/13664)
                 find_opt/2661 =a (field_mut 17 include/13664)
                 find_first/2662 =a (field_mut 18 include/13664)
                 find_first_opt/2663 =a (field_mut 19 include/13664)
                 find_last/2664 =a (field_mut 20 include/13664)
                 find_last_opt/2665 =a (field_mut 21 include/13664)
                 iter/2666 =a (field_mut 22 include/13664)
                 fold/2667 =a (field_mut 23 include/13664)
                 map/2668 =a (field_mut 24 include/13664)
                 filter/2669 =a (field_mut 25 include/13664)
                 filter_map/2670 =a (field_mut 26 include/13664)
                 partition/2671 =a (field_mut 27 include/13664)
                 split/2672 =a (field_mut 28 include/13664)
                 is_empty/2673 =a (field_mut 29 include/13664)
                 mem/2674 =a (field_mut 30 include/13664)
                 equal/2675 =a (field_mut 31 include/13664)
                 compare/2676 =a (field_mut 32 include/13664)
                 subset/2677 =a (field_mut 33 include/13664)
                 for_all/2678 =a (field_mut 34 include/13664)
                 exists/2679 =a (field_mut 35 include/13664)
                 to_list/2680 =a (field_mut 36 include/13664)
                 of_list/2681 =a (field_mut 37 include/13664)
                 to_seq_from/2682 =a (field_mut 38 include/13664)
                 to_seq/2683 =a (field_mut 39 include/13664)
                 to_rev_seq/2684 =a (field_mut 40 include/13664)
                 add_seq/2685 =a (field_mut 41 include/13664)
                 of_seq/2686 =a (field_mut 42 include/13664)
                 print/2687 =
                   (function symbols/2688
                     (funct-body Gbnf_parser__GrammarFunctor.Make.SymbolSet.print lib/grammarFunctor.ml(622)<ghost>:16095-16141
                       (before Gbnf_parser__GrammarFunctor.Make.SymbolSet.print lib/grammarFunctor.ml(623):16109-16141
                         (after Gbnf_parser__GrammarFunctor.Make.SymbolSet.print lib/grammarFunctor.ml(623):16109-16141
                           (apply (field_imm 11 Symbol/2545)
                             (after Gbnf_parser__GrammarFunctor.Make.SymbolSet.print lib/grammarFunctor.ml(623):16123-16141
                               (apply elements/2653 symbols/2688)))))))
                 bottom/2735 = empty/2644
                 leq/2736 = subset/2677
                 join/2737 = union/2648)
                (pseudo Gbnf_parser__GrammarFunctor.Make.SymbolSet lib/grammarFunctor.ml(618):16047-16388
                  (makeblock 0 empty/2644 add/2645 singleton/2646 remove/2647
                    union/2648 inter/2649 disjoint/2650 diff/2651
                    cardinal/2652 elements/2653 min_elt/2654 min_elt_opt/2655
                    max_elt/2656 max_elt_opt/2657 choose/2658 choose_opt/2659
                    find/2660 find_opt/2661 find_first/2662
                    find_first_opt/2663 find_last/2664 find_last_opt/2665
                    iter/2666 fold/2667 map/2668 filter/2669 filter_map/2670
                    partition/2671 split/2672 is_empty/2673 mem/2674
                    equal/2675 compare/2676 subset/2677 for_all/2678
                    exists/2679 to_list/2680 of_list/2681 to_seq_from/2682
                    to_seq/2683 to_rev_seq/2684 add_seq/2685 of_seq/2686
                    print/2687 bottom/2735 leq/2736 join/2737)))
            SymbolMap/2943 =
              (let
                (include/13666 =
                   (apply
                     (let (let/13667 = (field_imm 0 (global Stdlib__Map!)))
                       (field_imm 0 (global Stdlib__Map!)))
                     (makeblock 0 (field_mut 1 Symbol/2545)))
                 empty/2837 =a (field_mut 0 include/13666)
                 add/2838 =a (field_mut 1 include/13666)
                 add_to_list/2839 =a (field_mut 2 include/13666)
                 update/2840 =a (field_mut 3 include/13666)
                 singleton/2841 =a (field_mut 4 include/13666)
                 remove/2842 =a (field_mut 5 include/13666)
                 merge/2843 =a (field_mut 6 include/13666)
                 union/2844 =a (field_mut 7 include/13666)
                 cardinal/2845 =a (field_mut 8 include/13666)
                 bindings/2846 =a (field_mut 9 include/13666)
                 min_binding/2847 =a (field_mut 10 include/13666)
                 min_binding_opt/2848 =a (field_mut 11 include/13666)
                 max_binding/2849 =a (field_mut 12 include/13666)
                 max_binding_opt/2850 =a (field_mut 13 include/13666)
                 choose/2851 =a (field_mut 14 include/13666)
                 choose_opt/2852 =a (field_mut 15 include/13666)
                 find/2853 =a (field_mut 16 include/13666)
                 find_opt/2854 =a (field_mut 17 include/13666)
                 find_first/2855 =a (field_mut 18 include/13666)
                 find_first_opt/2856 =a (field_mut 19 include/13666)
                 find_last/2857 =a (field_mut 20 include/13666)
                 find_last_opt/2858 =a (field_mut 21 include/13666)
                 iter/2859 =a (field_mut 22 include/13666)
                 fold/2860 =a (field_mut 23 include/13666)
                 map/2861 =a (field_mut 24 include/13666)
                 mapi/2862 =a (field_mut 25 include/13666)
                 filter/2863 =a (field_mut 26 include/13666)
                 filter_map/2864 =a (field_mut 27 include/13666)
                 partition/2865 =a (field_mut 28 include/13666)
                 split/2866 =a (field_mut 29 include/13666)
                 is_empty/2867 =a (field_mut 30 include/13666)
                 mem/2868 =a (field_mut 31 include/13666)
                 equal/2869 =a (field_mut 32 include/13666)
                 compare/2870 =a (field_mut 33 include/13666)
                 for_all/2871 =a (field_mut 34 include/13666)
                 exists/2872 =a (field_mut 35 include/13666)
                 to_list/2873 =a (field_mut 36 include/13666)
                 of_list/2874 =a (field_mut 37 include/13666)
                 to_seq/2875 =a (field_mut 38 include/13666)
                 to_rev_seq/2876 =a (field_mut 39 include/13666)
                 to_seq_from/2877 =a (field_mut 40 include/13666)
                 add_seq/2878 =a (field_mut 41 include/13666)
                 of_seq/2879 =a (field_mut 42 include/13666)
                 domain/2880 =
                   (function m/2882
                     (funct-body Gbnf_parser__GrammarFunctor.Make.SymbolMap.domain lib/grammarFunctor.ml(648)<ghost>:16484-16550
                       (before Gbnf_parser__GrammarFunctor.Make.SymbolMap.domain lib/grammarFunctor.ml(649):16492-16550
                         (after Gbnf_parser__GrammarFunctor.Make.SymbolMap.domain lib/grammarFunctor.ml(649):16492-16550
                           (apply fold/2860
                             (function symbol/2883 param/2885 accu/2884
                               (funct-body Gbnf_parser__GrammarFunctor.Make.SymbolMap.domain.(fun) lib/grammarFunctor.ml(649):16497-16545
                                 (before Gbnf_parser__GrammarFunctor.Make.SymbolMap.domain.(fun) lib/grammarFunctor.ml(650):16525-16539
                                   (makeblock 0 symbol/2883 accu/2884))))
                             m/2882 0)))))
                 init/2931 =
                   (function f/2933 xs/2934
                     (funct-body Gbnf_parser__GrammarFunctor.Make.SymbolMap.init lib/grammarFunctor.ml(653)<ghost>:16563-16641
                       (before Gbnf_parser__GrammarFunctor.Make.SymbolMap.init lib/grammarFunctor.ml(654):16574-16641
                         (after Gbnf_parser__GrammarFunctor.Make.SymbolMap.init lib/grammarFunctor.ml(654):16574-16641
                           (apply (field_imm 25 (global Stdlib__List!))
                             (function accu/2935 x/2936
                               (funct-body Gbnf_parser__GrammarFunctor.Make.SymbolMap.init.(fun) lib/grammarFunctor.ml(654):16589-16632
                                 (before Gbnf_parser__GrammarFunctor.Make.SymbolMap.init.(fun) lib/grammarFunctor.ml(655):16610-16626
                                   (after Gbnf_parser__GrammarFunctor.Make.SymbolMap.init.(fun) lib/grammarFunctor.ml(655):16610-16626
                                     (apply add/2838 x/2936
                                       (after Gbnf_parser__GrammarFunctor.Make.SymbolMap.init.(fun) lib/grammarFunctor.ml(655):16616-16621
                                         (apply f/2933 x/2936))
                                       accu/2935)))))
                             empty/2837 xs/2934)))))
                 purelynonterminal/2937 =
                   (function m/2939 : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.SymbolMap.purelynonterminal lib/grammarFunctor.ml(658)<ghost>:16667-16754
                       (before Gbnf_parser__GrammarFunctor.Make.SymbolMap.purelynonterminal lib/grammarFunctor.ml(659):16675-16754
                         (after Gbnf_parser__GrammarFunctor.Make.SymbolMap.purelynonterminal lib/grammarFunctor.ml(659):16675-16754
                           (apply fold/2860
                             (function symbol/2940 param/2942 accu/2941[int]
                               : int
                               (funct-body Gbnf_parser__GrammarFunctor.Make.SymbolMap.purelynonterminal.(fun) lib/grammarFunctor.ml(659):16680-16747
                                 (before Gbnf_parser__GrammarFunctor.Make.SymbolMap.purelynonterminal.(fun) lib/grammarFunctor.ml(660):16708-16741
                                   (&& accu/2941
                                     (after Gbnf_parser__GrammarFunctor.Make.SymbolMap.purelynonterminal.(fun) lib/grammarFunctor.ml(660):16716-16741
                                       (apply (field_imm 6 Symbol/2545)
                                         symbol/2940))))))
                             m/2939 1))))))
                (pseudo Gbnf_parser__GrammarFunctor.Make.SymbolMap lib/grammarFunctor.ml(644):16435-16759
                  (makeblock 0 empty/2837 add/2838 add_to_list/2839
                    update/2840 singleton/2841 remove/2842 merge/2843
                    union/2844 cardinal/2845 bindings/2846 min_binding/2847
                    min_binding_opt/2848 max_binding/2849
                    max_binding_opt/2850 choose/2851 choose_opt/2852
                    find/2853 find_opt/2854 find_first/2855
                    find_first_opt/2856 find_last/2857 find_last_opt/2858
                    iter/2859 fold/2860 map/2861 mapi/2862 filter/2863
                    filter_map/2864 partition/2865 split/2866 is_empty/2867
                    mem/2868 equal/2869 compare/2870 for_all/2871 exists/2872
                    to_list/2873 of_list/2874 to_seq/2875 to_rev_seq/2876
                    to_seq_from/2877 add_seq/2878 of_seq/2879 domain/2880
                    init/2931 purelynonterminal/2937)))
            Production/3564 =
              (let
                (compare/2945 =
                   (function prim/13669 prim/13668 stub
                     (- prim/13669 prim/13668))
                 n/2946 =
                   (let
                     (n/2947 =[int]
                        (after Gbnf_parser__GrammarFunctor.Make.Production.n lib/grammarFunctor.ml(683):17174-17280
                          (apply
                            (field_imm 22 (global Gbnf_parser__StringMap!))
                            (function param/2951 param/2950 n/2949[int] : int
                              (funct-body Gbnf_parser__GrammarFunctor.Make.Production.n.(fun) lib/grammarFunctor.ml(683):17189-17264
                                (let
                                  (branches/2948 =a (field_imm 0 param/2950))
                                  (before Gbnf_parser__GrammarFunctor.Make.Production.n.(fun) lib/grammarFunctor.ml(684):17234-17258
                                    (+ n/2949
                                      (after Gbnf_parser__GrammarFunctor.Make.Production.n.(fun) lib/grammarFunctor.ml(684):17238-17258
                                        (apply
                                          (field_imm 0
                                            (global Stdlib__List!))
                                          branches/2948)))))))
                            (field_imm 8 (field_imm 0 G/1226)) 0)))
                     (before Gbnf_parser__GrammarFunctor.Make.Production.n lib/grammarFunctor.ml(688):17402-17446
                       (+ n/2947
                         (after Gbnf_parser__GrammarFunctor.Make.Production.n lib/grammarFunctor.ml(688):17406-17446
                           (apply
                             (field_imm 8 (global Gbnf_parser__StringSet!))
                             (field_imm 3 (field_imm 0 G/1226)))))))
                 p2i/2952 =
                   (function prod/2954
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Production.p2i lib/grammarFunctor.ml(690)<ghost>:17458-17473
                       (before Gbnf_parser__GrammarFunctor.Make.Production.p2i lib/grammarFunctor.ml(691):17469-17473
                         prod/2954)))
                 i2p/2955 =
                   (function prod/2957[int] : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Production.i2p lib/grammarFunctor.ml(693)<ghost>:17485-17536
                       (before Gbnf_parser__GrammarFunctor.Make.Production.i2p lib/grammarFunctor.ml(694):17496-17536
                         (seq
                           (if (&& (>= prod/2957 0) (< prod/2957 n/2946)) 0
                             (raise
                               (after Gbnf_parser__GrammarFunctor.Make.Production.i2p lib/grammarFunctor.ml(694):17496-17526
                                 (makeblock 0 (global Assert_failure/28!)
                                   [0: "lib/grammarFunctor.ml" 694 4]))))
                           (before Gbnf_parser__GrammarFunctor.Make.Production.i2p lib/grammarFunctor.ml(695):17532-17536
                             prod/2957)))))
                 table/2958 =
                   (after Gbnf_parser__GrammarFunctor.Make.Production.table lib/grammarFunctor.ml(712):18456-18479
                     (caml_make_vect n/2946
                       (makeblock 0 (int,*) -1 (makearray[addr]))))
                 identifiers/2959 =
                   (after Gbnf_parser__GrammarFunctor.Make.Production.identifiers lib/grammarFunctor.ml(715):18530-18547
                     (caml_make_vect n/2946 (makearray[addr])))
                 actions/2960 =
                   (after Gbnf_parser__GrammarFunctor.Make.Production.actions lib/grammarFunctor.ml(718):18591-18608
                     (caml_make_vect n/2946 0))
                 positions/2961 =
                   (after Gbnf_parser__GrammarFunctor.Make.Production.positions lib/grammarFunctor.ml(721):18657-18672
                     (caml_make_vect n/2946 0))
                 rhs_attributes/2962 =
                   (after Gbnf_parser__GrammarFunctor.Make.Production.rhs_attributes lib/grammarFunctor.ml(724):18733-18750
                     (caml_make_vect n/2946 (makearray[addr])))
                 prec_decl/2963 =
                   (after Gbnf_parser__GrammarFunctor.Make.Production.prec_decl lib/grammarFunctor.ml(727):18804-18821
                     (caml_make_vect n/2946 0))
                 production_level/2999 =
                   (let
                     (dummy/3000 =
                        (makeblock 0 (*,int)
                          (field_imm 0 (global Gbnf_parser__InputFile!)) 0))
                     (before Gbnf_parser__GrammarFunctor.Make.Production.production_level lib/grammarFunctor.ml(734):19163-19181
                       (after Gbnf_parser__GrammarFunctor.Make.Production.production_level lib/grammarFunctor.ml(734):19163-19181
                         (caml_make_vect n/2946 dummy/3000))))
                 ntprods/3015 =
                   (after Gbnf_parser__GrammarFunctor.Make.Production.ntprods lib/grammarFunctor.ml(739):19304-19337
                     (caml_make_vect (field_imm 6 Nonterminal/2057)
                       [0: -1 -1]))
                 grammar_uses_error_token/3016 = (makemutable 0 (int) 0)
                 *match*/13736 =
                   (after Gbnf_parser__GrammarFunctor.Make.Production.start lib/grammarFunctor.ml(753):19826-20250
                     (apply (field_imm 23 (global Gbnf_parser__StringSet!))
                       (function nonterminal/3019 param/3163
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(753):19841-20202
                           (let
                             (startprods/3021 =a (field_imm 1 param/3163)
                              k/3020 =a (field_imm 0 param/3163))
                             (before Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(754):19883-20196
                               (let
                                 (nt/3022 =[int]
                                    (after Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(754):19892-19922
                                      (apply (field_imm 11 Nonterminal/2057)
                                        nonterminal/3019))
                                  nt'/3023 =[int]
                                    (after Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(755):19939-19977
                                      (apply (field_imm 11 Nonterminal/2057)
                                        (after Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(755):19958-19977
                                          (apply
                                            (field_imm 27 (global Stdlib!))
                                            nonterminal/3019 "'")))))
                                 (before Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(756):19987-20196
                                   (seq
                                     (after Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(756):19987-20024
                                       (array.set[addr] table/2958 k/3020
                                         (makeblock 0 (int,*) nt'/3023
                                           (makearray[addr]
                                             (makeblock 0 (int) nt/3022)))))
                                     (before Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(757):20032-20196
                                       (seq
                                         (after Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(757):20032-20061
                                           (array.set[addr] identifiers/2959
                                             k/3020 (makearray[addr] "_1")))
                                         (before Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(758):20069-20196
                                           (seq
                                             (after Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(758):20069-20094
                                               (array.set[addr] ntprods/3015
                                                 nt'/3023
                                                 (makeblock 0 (int,int)
                                                   k/3020 (+ k/3020 1))))
                                             (before Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(759):20102-20196
                                               (seq
                                                 (after Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(759):20102-20143
                                                   (array.set[addr]
                                                     positions/2961 k/3020
                                                     (after Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(759):20119-20143
                                                       (apply
                                                         (field_imm 12
                                                           Nonterminal/2057)
                                                         nt/3022))))
                                                 (before Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(760):20151-20196
                                                   (makeblock 0 (int,*)
                                                     (+ k/3020 1)
                                                     (after Gbnf_parser__GrammarFunctor.Make.Production.start.(fun) lib/grammarFunctor.ml(761):20162-20196
                                                       (apply
                                                         (field_imm 11
                                                           (field_imm 3
                                                             (global Gbnf_parser__Patricia!)))
                                                         nt/3022 k/3020
                                                         startprods/3021)))))))))))))))))
                       (field_imm 3 (field_imm 0 G/1226))
                       (makeblock 0 (int,*) 0
                         (field_imm 0
                           (field_imm 3 (global Gbnf_parser__Patricia!))))))
                 startprods/3018 =a (field_imm 1 *match*/13736)
                 start/3017 =a (field_imm 0 *match*/13736)
                 producer_symbol/3164 =
                   (function producer/3165
                     (funct-body Gbnf_parser__GrammarFunctor.Make.Production.producer_symbol lib/grammarFunctor.ml(766)<ghost>:20346-20401
                       (before Gbnf_parser__GrammarFunctor.Make.Production.producer_symbol lib/grammarFunctor.ml(767):20361-20401
                         (after Gbnf_parser__GrammarFunctor.Make.Production.producer_symbol lib/grammarFunctor.ml(767):20361-20401
                           (apply (field_imm 12 Symbol/2545)
                             (after Gbnf_parser__GrammarFunctor.Make.Production.producer_symbol lib/grammarFunctor.ml(767):20375-20401
                               (apply
                                 (field_imm 2
                                   (global Gbnf_parser__BasicSyntax!))
                                 producer/3165))))))))
                (seq
                  (after Gbnf_parser__GrammarFunctor.Make.Production lib/grammarFunctor.ml(769):20421-21237
                    (apply (field_imm 22 (global Gbnf_parser__StringMap!))
                      (function nonterminal/3166 param/3304 k/3168[int] : int
                        (funct-body Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(769):20436-21217
                          (let (branches/3167 =a (field_imm 0 param/3304))
                            (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(770):20478-21213
                              (let
                                (nt/3169 =[int]
                                   (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(770):20487-20517
                                     (apply (field_imm 11 Nonterminal/2057)
                                       nonterminal/3166)))
                                (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(771):20525-21213
                                  (let
                                    (k'/3170 =[int]
                                       (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(771):20534-21174
                                         (apply
                                           (field_imm 25
                                             (global Stdlib__List!))
                                           (function k/3171[int] branch/3172
                                             : int
                                             (funct-body Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(771):20549-21163
                                               (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(772):20572-21157
                                                 (let
                                                   (producers/3173 =
                                                      (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(772):20588-20618
                                                        (apply
                                                          (field_imm 9
                                                            (global Stdlib__Array!))
                                                          (field_imm 1
                                                            branch/3172))))
                                                   (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(773):20628-21157
                                                     (let
                                                       (rhs/3174 =
                                                          (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(773):20638-20673
                                                            (apply
                                                              (field_imm 12
                                                                (global Stdlib__Array!))
                                                              producer_symbol/3164
                                                              producers/3173)))
                                                       (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(774):20683-21157
                                                         (seq
                                                           (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(774):20683-20705
                                                             (array.set[addr]
                                                               table/2958
                                                               k/3171
                                                               (makeblock 0 (int,*)
                                                                 nt/3169
                                                                 rhs/3174)))
                                                           (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(775):20713-21157
                                                             (seq
                                                               (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(775):20713-20771
                                                                 (array.set[addr]
                                                                   identifiers/2959
                                                                   k/3171
                                                                   (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(775):20732-20771
                                                                    (apply
                                                                    (field_imm 12
                                                                    (global Stdlib__Array!))
                                                                    (field_imm 0
                                                                    (global Gbnf_parser__BasicSyntax!))
                                                                    producers/3173))))
                                                               (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(776):20779-21157
                                                                 (seq
                                                                   (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(776):20779-20812
                                                                    (array.set[addr]
                                                                    actions/2960
                                                                    k/3171
                                                                    (makeblock 0
                                                                    (field_imm 2
                                                                    branch/3172))))
                                                                   (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(777):20820-21157
                                                                    (seq
                                                                    (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(777):20820-20881
                                                                    (array.set[addr]
                                                                    rhs_attributes/2962
                                                                    k/3171
                                                                    (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(777):20842-20881
                                                                    (apply
                                                                    (field_imm 12
                                                                    (global Stdlib__Array!))
                                                                    (field_imm 3
                                                                    (global Gbnf_parser__BasicSyntax!))
                                                                    producers/3173))))
                                                                    (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(778):20889-21157
                                                                    (seq
                                                                    (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(778):20889-20943
                                                                    (array.set[addr]
                                                                    production_level/2999
                                                                    k/3171
                                                                    (field_imm 4
                                                                    branch/3172)))
                                                                    (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(779):20951-21157
                                                                    (seq
                                                                    (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(779):20951-20997
                                                                    (array.set[addr]
                                                                    prec_decl/2963
                                                                    k/3171
                                                                    (field_imm 3
                                                                    branch/3172)))
                                                                    (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(780):21005-21157
                                                                    (seq
                                                                    (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(780):21005-21048
                                                                    (array.set[addr]
                                                                    positions/2961
                                                                    k/3171
                                                                    (makeblock 0
                                                                    (field_imm 0
                                                                    branch/3172)
                                                                    0)))
                                                                    (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(781):21056-21157
                                                                    (seq
                                                                    (if
                                                                    (not
                                                                    (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(781):21063-21100
                                                                    (apply
                                                                    (field_imm 52
                                                                    (global Gbnf_parser__MArray!))
                                                                    (field_imm 4
                                                                    Symbol/2545)
                                                                    rhs/3174)))
                                                                    (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(782):21114-21146
                                                                    (setfield_imm 0
                                                                    grammar_uses_error_token/3016
                                                                    1)) 0)
                                                                    (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(783):21154-21157
                                                                    (+ k/3171
                                                                    1))))))))))))))))))))))))
                                           k/3168 branches/3167)))
                                    (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(785):21182-21213
                                      (seq
                                        (after Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(785):21182-21205
                                          (array.set[addr] ntprods/3015
                                            nt/3169
                                            (makeblock 0 (int,int) k/3168
                                              k'/3170)))
                                        (before Gbnf_parser__GrammarFunctor.Make.Production.(fun) lib/grammarFunctor.ml(786):21211-21213
                                          k'/3170))))))))))
                      (field_imm 8 (field_imm 0 G/1226)) start/3017))
                  (let
                    (iternt/3305 =
                       (function nt/3307[int] f/3308 : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.iternt lib/grammarFunctor.ml(791)<ghost>:21332-21393
                           (before Gbnf_parser__GrammarFunctor.Make.Production.iternt lib/grammarFunctor.ml(792):21343-21393
                             (let
                               (*match*/13679 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Production.iternt lib/grammarFunctor.ml(792):21355-21367
                                    (array.get[addr] ntprods/3015 nt/3307))
                                k'/3310 =a (field_imm 1 *match*/13679)
                                k/3309 =a (field_imm 0 *match*/13679))
                               (before Gbnf_parser__GrammarFunctor.Make.Production.iternt lib/grammarFunctor.ml(793):21375-21393
                                 (after Gbnf_parser__GrammarFunctor.Make.Production.iternt lib/grammarFunctor.ml(793):21375-21393
                                   (apply
                                     (field_imm 10
                                       (global Gbnf_parser__Misc!))
                                     k/3309 k'/3310 f/3308)))))))
                     foldnt/3311 =
                       (function nt/3313[int] f/3314 accu/3315
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.foldnt lib/grammarFunctor.ml(795)<ghost>:21408-21479
                           (before Gbnf_parser__GrammarFunctor.Make.Production.foldnt lib/grammarFunctor.ml(796):21424-21479
                             (let
                               (*match*/13683 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Production.foldnt lib/grammarFunctor.ml(796):21436-21448
                                    (array.get[addr] ntprods/3015 nt/3313))
                                k'/3317 =a (field_imm 1 *match*/13683)
                                k/3316 =a (field_imm 0 *match*/13683))
                               (before Gbnf_parser__GrammarFunctor.Make.Production.foldnt lib/grammarFunctor.ml(797):21456-21479
                                 (after Gbnf_parser__GrammarFunctor.Make.Production.foldnt lib/grammarFunctor.ml(797):21456-21479
                                   (apply
                                     (field_imm 12
                                       (global Gbnf_parser__Misc!))
                                     k/3316 k'/3317 f/3314 accu/3315)))))))
                     mapnt/3318 =
                       (function nt/3320[int] f/3321
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.mapnt lib/grammarFunctor.ml(799)<ghost>:21493-21553
                           (before Gbnf_parser__GrammarFunctor.Make.Production.mapnt lib/grammarFunctor.ml(800):21504-21553
                             (let
                               (*match*/13687 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Production.mapnt lib/grammarFunctor.ml(800):21516-21528
                                    (array.get[addr] ntprods/3015 nt/3320))
                                k'/3323 =a (field_imm 1 *match*/13687)
                                k/3322 =a (field_imm 0 *match*/13687))
                               (before Gbnf_parser__GrammarFunctor.Make.Production.mapnt lib/grammarFunctor.ml(801):21536-21553
                                 (after Gbnf_parser__GrammarFunctor.Make.Production.mapnt lib/grammarFunctor.ml(801):21536-21553
                                   (apply
                                     (field_imm 15
                                       (global Gbnf_parser__Misc!))
                                     k/3322 k'/3323 f/3321)))))))
                     foldnt_lazy/3324 =
                       (function nt/3326[int] f/3327 accu/3328
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.foldnt_lazy lib/grammarFunctor.ml(803)<ghost>:21573-21649
                           (before Gbnf_parser__GrammarFunctor.Make.Production.foldnt_lazy lib/grammarFunctor.ml(804):21589-21649
                             (let
                               (*match*/13691 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Production.foldnt_lazy lib/grammarFunctor.ml(804):21601-21613
                                    (array.get[addr] ntprods/3015 nt/3326))
                                k'/3330 =a (field_imm 1 *match*/13691)
                                k/3329 =a (field_imm 0 *match*/13691))
                               (before Gbnf_parser__GrammarFunctor.Make.Production.foldnt_lazy lib/grammarFunctor.ml(805):21621-21649
                                 (after Gbnf_parser__GrammarFunctor.Make.Production.foldnt_lazy lib/grammarFunctor.ml(805):21621-21649
                                   (apply
                                     (field_imm 14
                                       (global Gbnf_parser__Misc!))
                                     k/3329 k'/3330 f/3327 accu/3328)))))))
                     def/3331 =
                       (function prod/3333[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.def lib/grammarFunctor.ml(809)<ghost>:21681-21704
                           (before Gbnf_parser__GrammarFunctor.Make.Production.def lib/grammarFunctor.ml(810):21692-21704
                             (after Gbnf_parser__GrammarFunctor.Make.Production.def lib/grammarFunctor.ml(810):21692-21704
                               (array.get[addr] table/2958 prod/3333)))))
                     nt/3334 =
                       (function prod/3336[int] : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.nt lib/grammarFunctor.ml(812)<ghost>:21715-21760
                           (before Gbnf_parser__GrammarFunctor.Make.Production.nt lib/grammarFunctor.ml(813):21726-21760
                             (let
                               (*match*/13695 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Production.nt lib/grammarFunctor.ml(813):21738-21750
                                    (array.get[addr] table/2958 prod/3336))
                                nt/3337 =a (field_imm 0 *match*/13695))
                               (before Gbnf_parser__GrammarFunctor.Make.Production.nt lib/grammarFunctor.ml(814):21758-21760
                                 nt/3337)))))
                     rhs/3338 =
                       (function prod/3340[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.rhs lib/grammarFunctor.ml(816)<ghost>:21772-21819
                           (before Gbnf_parser__GrammarFunctor.Make.Production.rhs lib/grammarFunctor.ml(817):21783-21819
                             (let
                               (*match*/13700 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Production.rhs lib/grammarFunctor.ml(817):21796-21808
                                    (array.get[addr] table/2958 prod/3340))
                                rhs/3341 =a (field_imm 1 *match*/13700))
                               (before Gbnf_parser__GrammarFunctor.Make.Production.rhs lib/grammarFunctor.ml(818):21816-21819
                                 rhs/3341)))))
                     length/3342 =
                       (function prod/3344[int] : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.length lib/grammarFunctor.ml(820)<ghost>:21834-21868
                           (before Gbnf_parser__GrammarFunctor.Make.Production.length lib/grammarFunctor.ml(821):21845-21868
                             (array.length[addr]
                               (after Gbnf_parser__GrammarFunctor.Make.Production.length lib/grammarFunctor.ml(821):21858-21868
                                 (apply rhs/3338 prod/3344))))))
                     identifiers/3345 =
                       (function prod/3346[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.identifiers lib/grammarFunctor.ml(823)<ghost>:21888-21917
                           (before Gbnf_parser__GrammarFunctor.Make.Production.identifiers lib/grammarFunctor.ml(824):21899-21917
                             (after Gbnf_parser__GrammarFunctor.Make.Production.identifiers lib/grammarFunctor.ml(824):21899-21917
                               (array.get[addr] identifiers/2959 prod/3346)))))
                     is_start/3347 =
                       (function prod/3349[int] : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.is_start lib/grammarFunctor.ml(826)<ghost>:21934-21957
                           (before Gbnf_parser__GrammarFunctor.Make.Production.is_start lib/grammarFunctor.ml(827):21945-21957
                             (< prod/3349 start/3017))))
                     classify/3350 =
                       (function prod/3352[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.classify lib/grammarFunctor.ml(829)<ghost>:21974-22144
                           (before Gbnf_parser__GrammarFunctor.Make.Production.classify lib/grammarFunctor.ml(830):21985-22144
                             (if
                               (after Gbnf_parser__GrammarFunctor.Make.Production.classify lib/grammarFunctor.ml(830):21988-22001
                                 (apply is_start/3347 prod/3352))
                               (before Gbnf_parser__GrammarFunctor.Make.Production.classify lib/grammarFunctor.ml(831):22013-22124
                                 (let
                                   (*match*/13702 =
                                      (after Gbnf_parser__GrammarFunctor.Make.Production.classify lib/grammarFunctor.ml(831):22019-22033
                                        (array.get[addr]
                                          (after Gbnf_parser__GrammarFunctor.Make.Production.classify lib/grammarFunctor.ml(831):22019-22029
                                            (apply rhs/3338 prod/3352))
                                          0)))
                                   (switch* *match*/13702
                                    case tag 0:
                                     (let
                                       (nt/3353 =a
                                          (field_imm 0 *match*/13702))
                                       (before Gbnf_parser__GrammarFunctor.Make.Production.classify lib/grammarFunctor.ml(833):22072-22079
                                         (makeblock 0 (int) nt/3353)))
                                    case tag 1:
                                     (before Gbnf_parser__GrammarFunctor.Make.Production.classify lib/grammarFunctor.ml(835):22112-22124
                                       (raise
                                         (after Gbnf_parser__GrammarFunctor.Make.Production.classify lib/grammarFunctor.ml(835):22112-22124
                                           (makeblock 0
                                             (global Assert_failure/28!)
                                             [0:
                                              "lib/grammarFunctor.ml" 835 10])))))))
                               (before Gbnf_parser__GrammarFunctor.Make.Production.classify lib/grammarFunctor.ml(837):22140-22144
                                 0)))))
                     action/3354 =
                       (function prod/3356[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.action lib/grammarFunctor.ml(839)<ghost>:22159-22346
                           (before Gbnf_parser__GrammarFunctor.Make.Production.action lib/grammarFunctor.ml(840):22170-22346
                             (let
                               (*match*/13704 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Production.action lib/grammarFunctor.ml(840):22176-22190
                                    (array.get[addr] actions/2960 prod/3356)))
                               (if *match*/13704
                                 (let
                                   (action/3357 =a
                                      (field_imm 0 *match*/13704))
                                   (before Gbnf_parser__GrammarFunctor.Make.Production.action lib/grammarFunctor.ml(842):22225-22231
                                     action/3357))
                                 (before Gbnf_parser__GrammarFunctor.Make.Production.action lib/grammarFunctor.ml(845):22302-22346
                                   (seq
                                     (if
                                       (after Gbnf_parser__GrammarFunctor.Make.Production.action lib/grammarFunctor.ml(845):22309-22324
                                         (apply is_start/3347 prod/3356))
                                       0
                                       (raise
                                         (after Gbnf_parser__GrammarFunctor.Make.Production.action lib/grammarFunctor.ml(845):22302-22324
                                           (makeblock 0
                                             (global Assert_failure/28!)
                                             [0:
                                              "lib/grammarFunctor.ml" 845 8]))))
                                     (before Gbnf_parser__GrammarFunctor.Make.Production.action lib/grammarFunctor.ml(846):22334-22346
                                       (raise
                                         (after Gbnf_parser__GrammarFunctor.Make.Production.action lib/grammarFunctor.ml(846):22334-22346
                                           (makeblock 0
                                             (global Assert_failure/28!)
                                             [0:
                                              "lib/grammarFunctor.ml" 846 8])))))))))))
                     positions/3358 =
                       (function prod/3359[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.positions lib/grammarFunctor.ml(848)<ghost>:22364-22391
                           (before Gbnf_parser__GrammarFunctor.Make.Production.positions lib/grammarFunctor.ml(849):22375-22391
                             (after Gbnf_parser__GrammarFunctor.Make.Production.positions lib/grammarFunctor.ml(849):22375-22391
                               (array.get[addr] positions/2961 prod/3359)))))
                     lhs_attributes/3360 =
                       (function prod/3362[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.lhs_attributes lib/grammarFunctor.ml(851)<ghost>:22414-22457
                           (before Gbnf_parser__GrammarFunctor.Make.Production.lhs_attributes lib/grammarFunctor.ml(852):22425-22457
                             (after Gbnf_parser__GrammarFunctor.Make.Production.lhs_attributes lib/grammarFunctor.ml(852):22425-22457
                               (apply (field_imm 22 Nonterminal/2057)
                                 (after Gbnf_parser__GrammarFunctor.Make.Production.lhs_attributes lib/grammarFunctor.ml(852):22448-22457
                                   (apply nt/3334 prod/3362)))))))
                     rhs_attributes/3363 =
                       (function prod/3364[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.rhs_attributes lib/grammarFunctor.ml(854)<ghost>:22480-22512
                           (before Gbnf_parser__GrammarFunctor.Make.Production.rhs_attributes lib/grammarFunctor.ml(855):22491-22512
                             (after Gbnf_parser__GrammarFunctor.Make.Production.rhs_attributes lib/grammarFunctor.ml(855):22491-22512
                               (array.get[addr] rhs_attributes/2962
                                 prod/3364)))))
                     startsymbol2startprod/3365 =
                       (function nt/3367[int] : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.startsymbol2startprod lib/grammarFunctor.ml(857)<ghost>:22542-22635
                           (before Gbnf_parser__GrammarFunctor.Make.Production.startsymbol2startprod lib/grammarFunctor.ml(858):22551-22635
                             (try
                               (after Gbnf_parser__GrammarFunctor.Make.Production.startsymbol2startprod lib/grammarFunctor.ml(859):22561-22594
                                 (apply
                                   (field_imm 3
                                     (field_imm 3
                                       (global Gbnf_parser__Patricia!)))
                                   nt/3367 startprods/3018))
                              with exn/13705
                               (if
                                 (== exn/13705
                                   (field_imm 7 (global Stdlib!)))
                                 (before Gbnf_parser__GrammarFunctor.Make.Production.startsymbol2startprod lib/grammarFunctor.ml(861):22623-22635
                                   (raise
                                     (after Gbnf_parser__GrammarFunctor.Make.Production.startsymbol2startprod lib/grammarFunctor.ml(861):22623-22635
                                       (makeblock 0
                                         (global Assert_failure/28!)
                                         [0: "lib/grammarFunctor.ml" 861 6]))))
                                 (reraise exn/13705))))))
                     error_free/3368 =
                       (function prod/3370[int] : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.error_free lib/grammarFunctor.ml(863)<ghost>:22687-22740
                           (before Gbnf_parser__GrammarFunctor.Make.Production.error_free lib/grammarFunctor.ml(864):22698-22740
                             (after Gbnf_parser__GrammarFunctor.Make.Production.error_free lib/grammarFunctor.ml(864):22698-22740
                               (apply
                                 (field_imm 52 (global Gbnf_parser__MArray!))
                                 (field_imm 4 Symbol/2545)
                                 (after Gbnf_parser__GrammarFunctor.Make.Production.error_free lib/grammarFunctor.ml(864):22730-22740
                                   (apply rhs/3338 prod/3370)))))))
                     init/3371 =
                       (function f/3373
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.init lib/grammarFunctor.ml(868)<ghost>:22773-22795
                           (before Gbnf_parser__GrammarFunctor.Make.Production.init lib/grammarFunctor.ml(869):22781-22795
                             (after Gbnf_parser__GrammarFunctor.Make.Production.init lib/grammarFunctor.ml(869):22781-22795
                               (apply (field_imm 0 (global Stdlib__Array!))
                                 n/2946 f/3373)))))
                     iter/3374 =
                       (function f/3375 : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.iter lib/grammarFunctor.ml(871)<ghost>:22808-22830
                           (before Gbnf_parser__GrammarFunctor.Make.Production.iter lib/grammarFunctor.ml(872):22816-22830
                             (after Gbnf_parser__GrammarFunctor.Make.Production.iter lib/grammarFunctor.ml(872):22816-22830
                               (apply
                                 (field_imm 11 (global Gbnf_parser__Misc!))
                                 n/2946 f/3375)))))
                     fold/3376 =
                       (function f/3378 accu/3379
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.fold lib/grammarFunctor.ml(874)<ghost>:22843-22875
                           (before Gbnf_parser__GrammarFunctor.Make.Production.fold lib/grammarFunctor.ml(875):22856-22875
                             (after Gbnf_parser__GrammarFunctor.Make.Production.fold lib/grammarFunctor.ml(875):22856-22875
                               (apply
                                 (field_imm 13 (global Gbnf_parser__Misc!))
                                 n/2946 f/3378 accu/3379)))))
                     map/3380 =
                       (function f/3381
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.map lib/grammarFunctor.ml(877)<ghost>:22887-22908
                           (before Gbnf_parser__GrammarFunctor.Make.Production.map lib/grammarFunctor.ml(878):22895-22908
                             (after Gbnf_parser__GrammarFunctor.Make.Production.map lib/grammarFunctor.ml(878):22895-22908
                               (apply
                                 (field_imm 16 (global Gbnf_parser__Misc!))
                                 n/2946 f/3381)))))
                     amap/3382 =
                       (function f/3384
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.amap lib/grammarFunctor.ml(880)<ghost>:22921-22943
                           (before Gbnf_parser__GrammarFunctor.Make.Production.amap lib/grammarFunctor.ml(881):22929-22943
                             (after Gbnf_parser__GrammarFunctor.Make.Production.amap lib/grammarFunctor.ml(881):22929-22943
                               (apply (field_imm 0 (global Stdlib__Array!))
                                 n/2946 f/3384)))))
                     iterx/3385 =
                       (function f/3387 : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.iterx lib/grammarFunctor.ml(883)<ghost>:22957-23015
                           (before Gbnf_parser__GrammarFunctor.Make.Production.iterx lib/grammarFunctor.ml(884):22965-23015
                             (for prod/3388 start/3017 to (- n/2946 1)
                               (before Gbnf_parser__GrammarFunctor.Make.Production.iterx lib/grammarFunctor.ml(885):23000-23006
                                 (after Gbnf_parser__GrammarFunctor.Make.Production.iterx lib/grammarFunctor.ml(885):23000-23006
                                   (apply f/3387 prod/3388)))))))
                     foldx/3389 =
                       (function f/3391 accu/3392
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.foldx lib/grammarFunctor.ml(888)<ghost>:23029-23068
                           (before Gbnf_parser__GrammarFunctor.Make.Production.foldx lib/grammarFunctor.ml(889):23042-23068
                             (after Gbnf_parser__GrammarFunctor.Make.Production.foldx lib/grammarFunctor.ml(889):23042-23068
                               (apply
                                 (field_imm 12 (global Gbnf_parser__Misc!))
                                 start/3017 n/2946 f/3391 accu/3392)))))
                     mapx/3393 =
                       (function f/3395
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.mapx lib/grammarFunctor.ml(891)<ghost>:23081-23109
                           (before Gbnf_parser__GrammarFunctor.Make.Production.mapx lib/grammarFunctor.ml(892):23089-23109
                             (after Gbnf_parser__GrammarFunctor.Make.Production.mapx lib/grammarFunctor.ml(892):23089-23109
                               (apply
                                 (field_imm 15 (global Gbnf_parser__Misc!))
                                 start/3017 n/2946 f/3395)))))
                     print/3396 =
                       (function prod/3397[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.print lib/grammarFunctor.ml(896)<ghost>:23155-23459
                           (before Gbnf_parser__GrammarFunctor.Make.Production.print lib/grammarFunctor.ml(897):23166-23459
                             (seq
                               (if
                                 (not
                                   (after Gbnf_parser__GrammarFunctor.Make.Production.print lib/grammarFunctor.ml(897):23178-23193
                                     (apply is_start/3347 prod/3397)))
                                 0
                                 (raise
                                   (after Gbnf_parser__GrammarFunctor.Make.Production.print lib/grammarFunctor.ml(897):23166-23194
                                     (makeblock 0 (global Assert_failure/28!)
                                       [0: "lib/grammarFunctor.ml" 897 4]))))
                               (before Gbnf_parser__GrammarFunctor.Make.Production.print lib/grammarFunctor.ml(898):23200-23459
                                 (let
                                   (*match*/13709 =
                                      (after Gbnf_parser__GrammarFunctor.Make.Production.print lib/grammarFunctor.ml(898):23214-23226
                                        (array.get[addr] table/2958
                                          prod/3397))
                                    rhs/3399 =a (field_imm 1 *match*/13709)
                                    nt/3398 =a (field_imm 0 *match*/13709))
                                   (before Gbnf_parser__GrammarFunctor.Make.Production.print lib/grammarFunctor.ml(899):23234-23459
                                     (if (== (array.length[addr] rhs/3399) 0)
                                       (before Gbnf_parser__GrammarFunctor.Make.Production.print lib/grammarFunctor.ml(901):23315-23366
                                         (after Gbnf_parser__GrammarFunctor.Make.Production.print lib/grammarFunctor.ml(901):23315-23366
                                           (apply
                                             (field_imm 3
                                               (global Stdlib__Printf!))
                                             [0:
                                              [2: 0 [11: " ->" 0]] "%s ->"]
                                             (after Gbnf_parser__GrammarFunctor.Make.Production.print lib/grammarFunctor.ml(901):23338-23366
                                               (apply
                                                 (field_imm 10
                                                   Nonterminal/2057)
                                                 0 nt/3398)))))
                                       (before Gbnf_parser__GrammarFunctor.Make.Production.print lib/grammarFunctor.ml(903):23382-23459
                                         (after Gbnf_parser__GrammarFunctor.Make.Production.print lib/grammarFunctor.ml(903):23382-23459
                                           (apply
                                             (field_imm 3
                                               (global Stdlib__Printf!))
                                             [0:
                                              [2: 0 [11: " -> " [2: 0 0]]]
                                              "%s -> %s"]
                                             (after Gbnf_parser__GrammarFunctor.Make.Production.print lib/grammarFunctor.ml(903):23408-23436
                                               (apply
                                                 (field_imm 10
                                                   Nonterminal/2057)
                                                 0 nt/3398))
                                             (after Gbnf_parser__GrammarFunctor.Make.Production.print lib/grammarFunctor.ml(903):23437-23459
                                               (apply
                                                 (field_imm 9 Symbol/2545) 0
                                                 rhs/3399)))))))))))))
                     describe/3400 =
                       (function gerund/3402[int] prod/3403[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(905)<ghost>:23476-23796
                           (before Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(906):23494-23796
                             (let
                               (*match*/13710 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(906):23500-23513
                                    (apply classify/3350 prod/3403)))
                               (if *match*/13710
                                 (let
                                   (nt/3404 =a (field_imm 0 *match*/13710))
                                   (before Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(908):23544-23661
                                     (let
                                       (ending/3405 =
                                          (if gerund/3402
                                            (before Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(908):23572-23577
                                              "ing")
                                            (before Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(908):23583-23585
                                              "")))
                                       (before Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(909):23597-23661
                                         (after Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(909):23597-23661
                                           (apply
                                             (field_imm 3
                                               (global Stdlib__Printf!))
                                             [0:
                                              [11:
                                               "accept"
                                               [2: 0 [12: ' ' [2: 0 0]]]]
                                              "accept%s %s"]
                                             ending/3405
                                             (after Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(909):23633-23661
                                               (apply
                                                 (field_imm 10
                                                   Nonterminal/2057)
                                                 0 nt/3404))))))))
                                 (before Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(911):23684-23796
                                   (let
                                     (ending/3406 =
                                        (if gerund/3402
                                          (before Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(911):23712-23717
                                            "ing")
                                          (before Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(911):23723-23726
                                            "e")))
                                     (before Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(912):23738-23796
                                       (after Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(912):23738-23796
                                         (apply
                                           (field_imm 3
                                             (global Stdlib__Printf!))
                                           [0:
                                            [11:
                                             "reduc"
                                             [2:
                                              0 [11: " production " [2: 0 0]]]]
                                            "reduc%s production %s"]
                                           ending/3406
                                           (after Gbnf_parser__GrammarFunctor.Make.Production.describe lib/grammarFunctor.ml(912):23784-23796
                                             (apply print/3396 prod/3403))))))))))))
                     tabulate/3407 =
                       (function f/3409
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.tabulate lib/grammarFunctor.ml(916)<ghost>:23842-23867
                           (before Gbnf_parser__GrammarFunctor.Make.Production.tabulate lib/grammarFunctor.ml(917):23850-23867
                             (after Gbnf_parser__GrammarFunctor.Make.Production.tabulate lib/grammarFunctor.ml(917):23850-23867
                               (apply
                                 (field_imm 2 (global Gbnf_parser__Misc!))
                                 n/2946 f/3409)))))
                     sum/3410 =
                       (function f/3412 : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.sum lib/grammarFunctor.ml(919)<ghost>:23879-23899
                           (before Gbnf_parser__GrammarFunctor.Make.Production.sum lib/grammarFunctor.ml(920):23887-23899
                             (after Gbnf_parser__GrammarFunctor.Make.Production.sum lib/grammarFunctor.ml(920):23887-23899
                               (apply
                                 (field_imm 3 (global Gbnf_parser__Misc!))
                                 n/2946 f/3412)))))
                     ever_useful/3452 =
                       (after Gbnf_parser__GrammarFunctor.Make.Production.ever_useful lib/grammarFunctor.ml(935):24615-24632
                         (apply (field_imm 0 (global Stdlib__Hashtbl!)) 0 16))
                     consult_prec_decl/3494 =
                       (function prod/3496[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.consult_prec_decl lib/grammarFunctor.ml(937)<ghost>:24658-24905
                           (before Gbnf_parser__GrammarFunctor.Make.Production.consult_prec_decl lib/grammarFunctor.ml(938):24669-24905
                             (let
                               (osym/3497 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Production.consult_prec_decl lib/grammarFunctor.ml(938):24680-24696
                                    (array.get[addr] prec_decl/2963
                                      prod/3496)))
                               (before Gbnf_parser__GrammarFunctor.Make.Production.consult_prec_decl lib/grammarFunctor.ml(939):24704-24905
                                 (makeblock 0
                                   (makemutable 246
                                     (function param/13711
                                       (after Gbnf_parser__GrammarFunctor.Make.Production.consult_prec_decl lib/grammarFunctor.ml(939):24709-24895
                                         (apply
                                           (field_imm 8
                                             (global Stdlib__Option!))
                                           (function sym/3515 : int
                                             (funct-body Gbnf_parser__GrammarFunctor.Make.Production.consult_prec_decl.(fun) lib/grammarFunctor.ml(940):24729-24884
                                               (before Gbnf_parser__GrammarFunctor.Make.Production.consult_prec_decl.(fun) lib/grammarFunctor.ml(942):24802-24876
                                                 (let
                                                   (pos/3516 =
                                                      (after Gbnf_parser__GrammarFunctor.Make.Production.consult_prec_decl.(fun) lib/grammarFunctor.ml(942):24812-24834
                                                        (apply
                                                          (field_imm 1
                                                            (global Gbnf_parser__Positions!))
                                                          sym/3515)))
                                                   (before Gbnf_parser__GrammarFunctor.Make.Production.consult_prec_decl.(fun) lib/grammarFunctor.ml(943):24846-24876
                                                     (after Gbnf_parser__GrammarFunctor.Make.Production.consult_prec_decl.(fun) lib/grammarFunctor.ml(943):24846-24876
                                                       (apply
                                                         (field_imm 4
                                                           (global Stdlib__Hashtbl!))
                                                         ever_useful/3452
                                                         pos/3516 0)))))))
                                           osym/3497))))
                                   osym/3497))))))
                     diagnostics/3517 =
                       (function param/3523[int] : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.diagnostics lib/grammarFunctor.ml(952)<ghost>:25105-25575
                           (before Gbnf_parser__GrammarFunctor.Make.Production.diagnostics lib/grammarFunctor.ml(953):25114-25575
                             (after Gbnf_parser__GrammarFunctor.Make.Production.diagnostics lib/grammarFunctor.ml(953):25114-25575
                               (apply iterx/3385
                                 (function prod/3519[int] : int
                                   (funct-body Gbnf_parser__GrammarFunctor.Make.Production.diagnostics.(fun) lib/grammarFunctor.ml(953):25120-25575
                                     (before Gbnf_parser__GrammarFunctor.Make.Production.diagnostics.(fun) lib/grammarFunctor.ml(954):25139-25569
                                       (let
                                         (osym/3520 =
                                            (after Gbnf_parser__GrammarFunctor.Make.Production.diagnostics.(fun) lib/grammarFunctor.ml(954):25150-25166
                                              (array.get[addr] prec_decl/2963
                                                prod/3519)))
                                         (before Gbnf_parser__GrammarFunctor.Make.Production.diagnostics.(fun) lib/grammarFunctor.ml(955):25176-25569
                                           (after Gbnf_parser__GrammarFunctor.Make.Production.diagnostics.(fun) lib/grammarFunctor.ml(955):25176-25569
                                             (apply
                                               (field_imm 8
                                                 (global Stdlib__Option!))
                                               (function sym/3521 : int
                                                 (funct-body Gbnf_parser__GrammarFunctor.Make.Production.diagnostics.(fun) lib/grammarFunctor.ml(955):25188-25564
                                                   (before Gbnf_parser__GrammarFunctor.Make.Production.diagnostics.(fun) lib/grammarFunctor.ml(957):25272-25556
                                                     (let
                                                       (pos/3522 =
                                                          (after Gbnf_parser__GrammarFunctor.Make.Production.diagnostics.(fun) lib/grammarFunctor.ml(957):25282-25304
                                                            (apply
                                                              (field_imm 1
                                                                (global Gbnf_parser__Positions!))
                                                              sym/3521)))
                                                       (before Gbnf_parser__GrammarFunctor.Make.Production.diagnostics.(fun) lib/grammarFunctor.ml(958):25316-25556
                                                         (if
                                                           (not
                                                             (after Gbnf_parser__GrammarFunctor.Make.Production.diagnostics.(fun) lib/grammarFunctor.ml(958):25323-25352
                                                               (apply
                                                                 (field_imm 8
                                                                   (global Stdlib__Hashtbl!))
                                                                 ever_useful/3452
                                                                 pos/3522)))
                                                           (before Gbnf_parser__GrammarFunctor.Make.Production.diagnostics.(fun) lib/grammarFunctor.ml(958):25358-25556
                                                             (after Gbnf_parser__GrammarFunctor.Make.Production.diagnostics.(fun) lib/grammarFunctor.ml(958):25358-25556
                                                               (apply
                                                                 (field_imm 4
                                                                   (global Stdlib__Hashtbl!))
                                                                 ever_useful/3452
                                                                 pos/3522 0)))
                                                           0))))))
                                               osym/3520))))))))))))
                     rightmost_terminal/3528 =
                       (function prod/3530[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.rightmost_terminal lib/grammarFunctor.ml(975)<ghost>:25923-26107
                           (before Gbnf_parser__GrammarFunctor.Make.Production.rightmost_terminal lib/grammarFunctor.ml(976):25934-26107
                             (after Gbnf_parser__GrammarFunctor.Make.Production.rightmost_terminal lib/grammarFunctor.ml(976):25934-26107
                               (apply (field_imm 16 (global Stdlib__Array!))
                                 (function accu/3531 symbol/3532
                                   (funct-body Gbnf_parser__GrammarFunctor.Make.Production.rightmost_terminal.(fun) lib/grammarFunctor.ml(976):25950-26090
                                     (before Gbnf_parser__GrammarFunctor.Make.Production.rightmost_terminal.(fun) lib/grammarFunctor.ml(977):25976-26084
                                       (switch* symbol/3532
                                        case tag 0:
                                         (before Gbnf_parser__GrammarFunctor.Make.Production.rightmost_terminal.(fun) lib/grammarFunctor.ml(981):26080-26084
                                           accu/3531)
                                        case tag 1:
                                         (let
                                           (tok/3533 =a
                                              (field_imm 0 symbol/3532))
                                           (before Gbnf_parser__GrammarFunctor.Make.Production.rightmost_terminal.(fun) lib/grammarFunctor.ml(979):26028-26047
                                             (makeblock 0 (int) tok/3533)))))))
                                 0
                                 (after Gbnf_parser__GrammarFunctor.Make.Production.rightmost_terminal lib/grammarFunctor.ml(982):26097-26107
                                   (apply rhs/3338 prod/3530)))))))
                     combine/3534 =
                       (function e1/3536 e2/3537
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.combine lib/grammarFunctor.ml(984)<ghost>:26123-26170
                           (before Gbnf_parser__GrammarFunctor.Make.Production.combine lib/grammarFunctor.ml(985):26135-26170
                             (makemutable 246
                               (function param/13717
                                 (seq
                                   (after Gbnf_parser__GrammarFunctor.Make.Production.combine lib/grammarFunctor.ml(985):26141-26154
                                     (let
                                       (lzarg/13715 = e1/3536
                                        tag/13716 =a
                                          (caml_obj_tag lzarg/13715))
                                       (if (== tag/13716 250)
                                         (field_mut 0 lzarg/13715)
                                         (if
                                           (|| (== tag/13716 246)
                                             (== tag/13716 244))
                                           (apply
                                             (field_imm 1
                                               (global CamlinternalLazy!))
                                             (opaque lzarg/13715))
                                           lzarg/13715))))
                                   (before Gbnf_parser__GrammarFunctor.Make.Production.combine lib/grammarFunctor.ml(985):26156-26169
                                     (after Gbnf_parser__GrammarFunctor.Make.Production.combine lib/grammarFunctor.ml(985):26156-26169
                                       (let
                                         (lzarg/13713 = e2/3537
                                          tag/13714 =a
                                            (caml_obj_tag lzarg/13713))
                                         (if (== tag/13714 250)
                                           (field_mut 0 lzarg/13713)
                                           (if
                                             (|| (== tag/13714 246)
                                               (== tag/13714 244))
                                             (apply
                                               (field_imm 1
                                                 (global CamlinternalLazy!))
                                               (opaque lzarg/13713))
                                             lzarg/13713)))))))))))
                     precedence/3551 =
                       (function prod/3553[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(987)<ghost>:26189-26732
                           (before Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(988):26200-26732
                             (let
                               (*match*/13731 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(988):26223-26245
                                    (apply consult_prec_decl/3494 prod/3553))
                                prec_decl/3555 =a (field_imm 1 *match*/13731)
                                fact1/3554 =a (field_imm 0 *match*/13731))
                               (before Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(989):26253-26732
                                 (let
                                   (oterminal/3556 =
                                      (if prec_decl/3555
                                        (let
                                          (*match*/13726 =a
                                             (field_imm 0 prec_decl/3555)
                                           terminal/3557 =a
                                             (field_imm 0 *match*/13726))
                                          (before Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(994):26396-26414
                                            (makeblock 1 terminal/3557)))
                                        (before Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(992):26322-26345
                                          (after Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(992):26322-26345
                                            (apply rightmost_terminal/3528
                                              prod/3553)))))
                                   (before Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(996):26426-26732
                                     (switch* oterminal/3556
                                      case int 0:
                                       (before Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(998):26470-26496
                                         (makeblock 0 fact1/3554 0))
                                      case tag 0:
                                       (let
                                         (tok/3558 =a
                                            (field_imm 0 oterminal/3556))
                                         (before Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(1000):26534-26620
                                           (let
                                             (*match*/13721 =
                                                (after Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(1000):26553-26582
                                                  (apply
                                                    (field_imm 14
                                                      Terminal/2246)
                                                    tok/3558))
                                              level/3561 =a
                                                (field_imm 1 *match*/13721)
                                              fact2/3560 =a
                                                (field_imm 0 *match*/13721))
                                             (before Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(1001):26594-26620
                                               (makeblock 0
                                                 (after Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(1001):26594-26613
                                                   (apply combine/3534
                                                     fact1/3554 fact2/3560))
                                                 level/3561)))))
                                      case tag 1:
                                       (let
                                         (id/3559 =a
                                            (field_imm 0 oterminal/3556))
                                         (before Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(1003):26651-26732
                                           (let
                                             (*match*/13725 =
                                                (after Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(1003):26670-26693
                                                  (apply
                                                    (field_imm 3
                                                      TokPrecedence/1946)
                                                    id/3559))
                                              level/3563 =a
                                                (field_imm 1 *match*/13725)
                                              fact2/3562 =a
                                                (field_imm 0 *match*/13725))
                                             (before Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(1004):26706-26732
                                               (makeblock 0
                                                 (after Gbnf_parser__GrammarFunctor.Make.Production.precedence lib/grammarFunctor.ml(1004):26706-26725
                                                   (apply combine/3534
                                                     fact1/3554 fact2/3562))
                                                 level/3563))))))))))))))
                    (pseudo Gbnf_parser__GrammarFunctor.Make.Production lib/grammarFunctor.ml(668):16880-26737
                      (makeblock 0 compare/2945 n/2946 p2i/2952 i2p/2955
                        table/2958 actions/2960 prec_decl/2963
                        production_level/2999 ntprods/3015
                        grammar_uses_error_token/3016 start/3017
                        startprods/3018 producer_symbol/3164 iternt/3305
                        foldnt/3311 mapnt/3318 foldnt_lazy/3324 def/3331
                        nt/3334 rhs/3338 length/3342 identifiers/3345
                        is_start/3347 classify/3350 action/3354
                        positions/3358 lhs_attributes/3360
                        rhs_attributes/3363 startsymbol2startprod/3365
                        error_free/3368 init/3371 iter/3374 fold/3376
                        map/3380 amap/3382 iterx/3385 foldx/3389 mapx/3393
                        print/3396 describe/3400 tabulate/3407 sum/3410
                        ever_useful/3452 consult_prec_decl/3494
                        diagnostics/3517 rightmost_terminal/3528 combine/3534
                        precedence/3551)))))
            grammar_uses_error_token/3565 =[int]
              (field_int 0 (field_imm 9 Production/3564))
            ProductionMap/3611 =
              (let
                (include/13746 =a
                   (let
                     (let/13747 =
                        (field_imm 3 (global Gbnf_parser__Patricia!)))
                     (field_imm 3 (global Gbnf_parser__Patricia!)))
                 empty/3568 =a (field_mut 0 include/13746)
                 choose/3569 =a (field_mut 1 include/13746)
                 lookup/3570 =a (field_mut 2 include/13746)
                 find/3571 =a (field_mut 3 include/13746)
                 mem/3572 =a (field_mut 4 include/13746)
                 join/3573 =a (field_mut 5 include/13746)
                 match_prefix/3574 =a (field_mut 6 include/13746)
                 Unchanged/3576 =a (field_mut 7 include/13746)
                 basic_add/3577 =a (field_mut 8 include/13746)
                 strict_add/3578 =a (field_mut 9 include/13746)
                 fine_add/3579 =a (field_mut 10 include/13746)
                 add/3580 =a (field_mut 11 include/13746)
                 singleton/3581 =a (field_mut 12 include/13746)
                 is_singleton/3582 =a (field_mut 13 include/13746)
                 is_empty/3583 =a (field_mut 14 include/13746)
                 cardinal/3584 =a (field_mut 15 include/13746)
                 remove/3585 =a (field_mut 16 include/13746)
                 lookup_and_remove/3586 =a (field_mut 17 include/13746)
                 find_and_remove/3587 =a (field_mut 18 include/13746)
                 reverse/3588 =a (field_mut 19 include/13746)
                 fine_union/3589 =a (field_mut 20 include/13746)
                 union/3590 =a (field_mut 21 include/13746)
                 iter/3591 =a (field_mut 22 include/13746)
                 fold/3592 =a (field_mut 23 include/13746)
                 fold_rev/3593 =a (field_mut 24 include/13746)
                 iter2/3594 =a (field_mut 25 include/13746)
                 map/3595 =a (field_mut 26 include/13746)
                 endo_map/3596 =a (field_mut 27 include/13746)
                 filter/3597 =a (field_mut 28 include/13746)
                 iterator/3598 =a (field_mut 29 include/13746)
                 Got/3599 =a (field_mut 30 include/13746)
                 compare/3600 =a (field_mut 31 include/13746)
                 Domain/3601 =a (field_mut 32 include/13746)
                 domain/3602 =a (field_mut 33 include/13746)
                 lift/3603 =a (field_mut 34 include/13746)
                 build/3604 =a (field_mut 35 include/13746)
                 corestrict/3605 =a (field_mut 36 include/13746)
                 start/3606 =
                   (function f/3608
                     (funct-body Gbnf_parser__GrammarFunctor.Make.ProductionMap.start lib/grammarFunctor.ml(1020)<ghost>:27038-27126
                       (before Gbnf_parser__GrammarFunctor.Make.ProductionMap.start lib/grammarFunctor.ml(1021):27046-27126
                         (after Gbnf_parser__GrammarFunctor.Make.ProductionMap.start lib/grammarFunctor.ml(1021):27046-27126
                           (apply (field_imm 13 (global Gbnf_parser__Misc!))
                             (field_imm 10 Production/3564)
                             (function prod/3609[int] m/3610
                               (funct-body Gbnf_parser__GrammarFunctor.Make.ProductionMap.start.(fun) lib/grammarFunctor.ml(1021):27074-27120
                                 (before Gbnf_parser__GrammarFunctor.Make.ProductionMap.start.(fun) lib/grammarFunctor.ml(1022):27095-27114
                                   (after Gbnf_parser__GrammarFunctor.Make.ProductionMap.start.(fun) lib/grammarFunctor.ml(1022):27095-27114
                                     (apply add/3580 prod/3609
                                       (after Gbnf_parser__GrammarFunctor.Make.ProductionMap.start.(fun) lib/grammarFunctor.ml(1022):27104-27112
                                         (apply f/3608 prod/3609))
                                       m/3610)))))
                             empty/3568))))))
                (pseudo Gbnf_parser__GrammarFunctor.Make.ProductionMap lib/grammarFunctor.ml(1014):26942-27131
                  (makeblock 0 empty/3568 choose/3569 lookup/3570 find/3571
                    mem/3572 join/3573 match_prefix/3574 Unchanged/3576
                    basic_add/3577 strict_add/3578 fine_add/3579 add/3580
                    singleton/3581 is_singleton/3582 is_empty/3583
                    cardinal/3584 remove/3585 lookup_and_remove/3586
                    find_and_remove/3587 reverse/3588 fine_union/3589
                    union/3590 iter/3591 fold/3592 fold_rev/3593 iter2/3594
                    map/3595 endo_map/3596 filter/3597 iterator/3598 Got/3599
                    compare/3600 Domain/3601 domain/3602 lift/3603 build/3604
                    corestrict/3605 start/3606)))
            GenericAnalysis/4037 =
              (function P/13753 S/13752 is_a_functor
                (let
                  (P/3733 =a P/13753
                   S/3739 =a S/13752
                   symbol/3740 =
                     (function sym/3742 get/3743
                       (funct-body Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.symbol lib/grammarFunctor.ml(1097)<ghost>:29896-30073
                         (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.symbol lib/grammarFunctor.ml(1098):29921-30073
                           (switch* sym/3742
                            case tag 0:
                             (let (nt/3745 =a (field_imm 0 sym/3742))
                               (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.symbol lib/grammarFunctor.ml(1103):30067-30073
                                 (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.symbol lib/grammarFunctor.ml(1103):30067-30073
                                   (apply get/3743 nt/3745))))
                            case tag 1:
                             (let (tok/3744 =a (field_imm 0 sym/3742))
                               (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.symbol lib/grammarFunctor.ml(1100):29966-29980
                                 (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.symbol lib/grammarFunctor.ml(1100):29966-29980
                                   (apply (field_imm 1 S/3739) tok/3744))))))))
                   production/3746 =
                     (function prod/3748[int] i/3749[int] get/3750
                       (funct-body Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production lib/grammarFunctor.ml(1107)<ghost>:30171-30724
                         (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production lib/grammarFunctor.ml(1108):30199-30724
                           (let
                             (rhs/3751 =
                                (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production lib/grammarFunctor.ml(1108):30209-30228
                                  (apply (field_imm 19 Production/3564)
                                    prod/3748)))
                             (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production lib/grammarFunctor.ml(1109):30236-30724
                               (let
                                 (n/3752 =[int] (array.length[addr] rhs/3751))
                                 (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production lib/grammarFunctor.ml(1114):30526-30724
                                   (letrec
                                     (loop/3753
                                        (function i/3754[int]
                                          (funct-body Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production.loop lib/grammarFunctor.ml(1114)<ghost>:30539-30706
                                            (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production.loop lib/grammarFunctor.ml(1115):30549-30706
                                              (if (== i/3754 n/3752)
                                                (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production.loop lib/grammarFunctor.ml(1116):30571-30580
                                                  (field_imm 4 S/3739))
                                                (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production.loop lib/grammarFunctor.ml(1118):30600-30706
                                                  (let
                                                    (sym/3755 =
                                                       (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production.loop lib/grammarFunctor.ml(1118):30610-30617
                                                         (array.get[addr]
                                                           rhs/3751 i/3754)))
                                                    (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production.loop lib/grammarFunctor.ml(1119):30629-30706
                                                      (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production.loop lib/grammarFunctor.ml(1119):30629-30706
                                                        (apply
                                                          (field_imm 3
                                                            S/3739)
                                                          sym/3755
                                                          (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production.loop lib/grammarFunctor.ml(1120):30657-30673
                                                            (apply
                                                              symbol/3740
                                                              sym/3755
                                                              get/3750))
                                                          (function
                                                            param/3756[int]
                                                            (funct-body Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production.loop.(fun) lib/grammarFunctor.ml(1121):30684-30706
                                                              (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production.loop.(fun) lib/grammarFunctor.ml(1121):30695-30705
                                                                (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production.loop.(fun) lib/grammarFunctor.ml(1121):30695-30705
                                                                  (apply
                                                                    loop/3753
                                                                    (+ i/3754
                                                                    1))))))))))))))))
                                     (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production lib/grammarFunctor.ml(1123):30718-30724
                                       (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production lib/grammarFunctor.ml(1123):30718-30724
                                         (apply loop/3753 i/3749)))))))))))
                   nonterminal/3757 =
                     (function nt/3759[int] get/3760
                       (funct-body Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.nonterminal lib/grammarFunctor.ml(1129)<ghost>:30952-31264
                         (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.nonterminal lib/grammarFunctor.ml(1130):30976-31264
                           (let
                             (*match*/13748 =
                                (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.nonterminal lib/grammarFunctor.ml(1130):30982-30995
                                  (apply (field_imm 0 S/3739) nt/3759)))
                             (if *match*/13748
                               (let (p/3761 =a (field_imm 0 *match*/13748))
                                 (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.nonterminal lib/grammarFunctor.ml(1132):31025-31026
                                   p/3761))
                               (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.nonterminal lib/grammarFunctor.ml(1135):31125-31264
                                 (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.nonterminal lib/grammarFunctor.ml(1135):31125-31264
                                   (apply (field_imm 16 Production/3564)
                                     nt/3759
                                     (function prod/3762[int] rest/3763
                                       (funct-body Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.nonterminal.(fun) lib/grammarFunctor.ml(1135):31151-31255
                                         (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.nonterminal.(fun) lib/grammarFunctor.ml(1136):31179-31245
                                           (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.nonterminal.(fun) lib/grammarFunctor.ml(1136):31179-31245
                                             (apply (field_imm 2 S/3739)
                                               (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.nonterminal.(fun) lib/grammarFunctor.ml(1137):31205-31228
                                                 (apply production/3746
                                                   prod/3762 0 get/3760))
                                               rest/3763)))))
                                     (field_imm 0 P/3733)))))))))
                   F/3913 =
                     (apply
                       (apply
                         (let
                           (let/13751 =
                              (field_imm 0 (global Gbnf_parser__Core!)))
                           (field_imm 0 (global Gbnf_parser__Core!)))
                         (let
                           (let/13750 =
                              (apply
                                (let
                                  (let/13749 =
                                     (field_imm 10
                                       (global Gbnf_parser__Glue!)))
                                  (field_imm 10 (global Gbnf_parser__Glue!)))
                                (makeblock 0 (field_mut 6 Nonterminal/2057))))
                           (makeblock 0 (field_mut 0 let/13750)
                             (field_mut 2 let/13750) (field_mut 3 let/13750)
                             (field_mut 1 let/13750) (field_mut 4 let/13750))))
                       P/3733)
                   nonterminal/3914 =
                     (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.nonterminal lib/grammarFunctor.ml(1150):31505-31522
                       (apply (field_imm 1 F/3913) nonterminal/3757))
                   symbol/3930 =
                     (function sym/3931
                       (funct-body Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.symbol lib/grammarFunctor.ml(1154)<ghost>:31592-31624
                         (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.symbol lib/grammarFunctor.ml(1155):31602-31624
                           (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.symbol lib/grammarFunctor.ml(1155):31602-31624
                             (apply symbol/3740 sym/3931 nonterminal/3914)))))
                   production/3932 =
                     (function prod/3933[int] i/3934[int]
                       (funct-body Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production lib/grammarFunctor.ml(1157)<ghost>:31643-31685
                         (before Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production lib/grammarFunctor.ml(1158):31656-31685
                           (after Gbnf_parser__GrammarFunctor.Make.GenericAnalysis.production lib/grammarFunctor.ml(1158):31656-31685
                             (apply production/3746 prod/3933 i/3934
                               nonterminal/3914))))))
                  (pseudo Gbnf_parser__GrammarFunctor.Make.GenericAnalysis lib/grammarFunctor.ml(1088):29628-31690
                    (makeblock 0 nonterminal/3914 symbol/3930
                      production/3932))))
            NONEMPTY/4094 =
              (apply
                (apply GenericAnalysis/4037
                  (let
                    (let/13754 = (global Gbnf_parser__Boolean!)
                     let/13755 =a (global Gbnf_parser__Boolean!))
                    (makeblock 0 (field_mut 0 let/13755)
                      (field_mut 1 let/13755) (field_mut 3 let/13755))))
                (let
                  (shortcut/4038 =
                     (function _nt/4040
                       (funct-body Gbnf_parser__GrammarFunctor.Make.NONEMPTY.shortcut lib/grammarFunctor.ml(1173)<ghost>:32151-32161
                         (before Gbnf_parser__GrammarFunctor.Make.NONEMPTY.shortcut lib/grammarFunctor.ml(1173):32157-32161
                           0)))
                   terminal/4041 =
                     (function param/4043 : int
                       (funct-body Gbnf_parser__GrammarFunctor.Make.NONEMPTY.terminal lib/grammarFunctor.ml(1175)<ghost>:32224-32232
                         (before Gbnf_parser__GrammarFunctor.Make.NONEMPTY.terminal lib/grammarFunctor.ml(1175):32228-32232
                           1)))
                   disjunction/4044 =
                     (function p/4046[int] q/4047 : int
                       (funct-body Gbnf_parser__GrammarFunctor.Make.NONEMPTY.disjunction lib/grammarFunctor.ml(1177)<ghost>:32330-32344
                         (before Gbnf_parser__GrammarFunctor.Make.NONEMPTY.disjunction lib/grammarFunctor.ml(1177):32336-32344
                           (|| p/4046
                             (after Gbnf_parser__GrammarFunctor.Make.NONEMPTY.disjunction lib/grammarFunctor.ml(1177):32341-32344
                               (apply q/4047 0))))))
                   conjunction/4048 =
                     (function param/4052 p/4050[int] q/4051 : int
                       (funct-body Gbnf_parser__GrammarFunctor.Make.NONEMPTY.conjunction lib/grammarFunctor.ml(1179)<ghost>:32432-32448
                         (before Gbnf_parser__GrammarFunctor.Make.NONEMPTY.conjunction lib/grammarFunctor.ml(1179):32440-32448
                           (&& p/4050
                             (after Gbnf_parser__GrammarFunctor.Make.NONEMPTY.conjunction lib/grammarFunctor.ml(1179):32445-32448
                               (apply q/4051 0))))))
                   epsilon/4053 =[int] 1)
                  (pseudo Gbnf_parser__GrammarFunctor.Make.NONEMPTY lib/grammarFunctor.ml(1172):32125-32584
                    (makeblock 0 shortcut/4038 terminal/4041 disjunction/4044
                      conjunction/4048 epsilon/4053))))
            NULLABLE/4123 =
              (apply
                (apply GenericAnalysis/4037
                  (let
                    (let/13756 = (global Gbnf_parser__Boolean!)
                     let/13757 =a (global Gbnf_parser__Boolean!))
                    (makeblock 0 (field_mut 0 let/13757)
                      (field_mut 1 let/13757) (field_mut 3 let/13757))))
                (let
                  (shortcut/4095 =
                     (function _nt/4097
                       (funct-body Gbnf_parser__GrammarFunctor.Make.NULLABLE.shortcut lib/grammarFunctor.ml(1189)<ghost>:32677-32687
                         (before Gbnf_parser__GrammarFunctor.Make.NULLABLE.shortcut lib/grammarFunctor.ml(1189):32683-32687
                           0)))
                   terminal/4098 =
                     (function param/4100 : int
                       (funct-body Gbnf_parser__GrammarFunctor.Make.NULLABLE.terminal lib/grammarFunctor.ml(1191)<ghost>:32754-32763
                         (before Gbnf_parser__GrammarFunctor.Make.NULLABLE.terminal lib/grammarFunctor.ml(1191):32758-32763
                           0)))
                   disjunction/4101 =
                     (function p/4103[int] q/4104 : int
                       (funct-body Gbnf_parser__GrammarFunctor.Make.NULLABLE.disjunction lib/grammarFunctor.ml(1193)<ghost>:32861-32875
                         (before Gbnf_parser__GrammarFunctor.Make.NULLABLE.disjunction lib/grammarFunctor.ml(1193):32867-32875
                           (|| p/4103
                             (after Gbnf_parser__GrammarFunctor.Make.NULLABLE.disjunction lib/grammarFunctor.ml(1193):32872-32875
                               (apply q/4104 0))))))
                   conjunction/4105 =
                     (function param/4109 p/4107[int] q/4108 : int
                       (funct-body Gbnf_parser__GrammarFunctor.Make.NULLABLE.conjunction lib/grammarFunctor.ml(1195)<ghost>:32963-32979
                         (before Gbnf_parser__GrammarFunctor.Make.NULLABLE.conjunction lib/grammarFunctor.ml(1195):32971-32979
                           (&& p/4107
                             (after Gbnf_parser__GrammarFunctor.Make.NULLABLE.conjunction lib/grammarFunctor.ml(1195):32976-32979
                               (apply q/4108 0))))))
                   epsilon/4110 =[int] 1)
                  (pseudo Gbnf_parser__GrammarFunctor.Make.NULLABLE lib/grammarFunctor.ml(1188):32651-33059
                    (makeblock 0 shortcut/4095 terminal/4098 disjunction/4101
                      conjunction/4105 epsilon/4110))))
            FIRST/4150 =
              (apply
                (apply GenericAnalysis/4037
                  (makeblock 0 (field_mut 20 TerminalSet/2387)
                    (field_mut 16 TerminalSet/2387)
                    (field_mut 21 TerminalSet/2387)))
                (let
                  (shortcut/4124 =
                     (function _nt/4126
                       (funct-body Gbnf_parser__GrammarFunctor.Make.FIRST.shortcut lib/grammarFunctor.ml(1207)<ghost>:33250-33260
                         (before Gbnf_parser__GrammarFunctor.Make.FIRST.shortcut lib/grammarFunctor.ml(1207):33256-33260
                           0)))
                   terminal/4127 = (field_imm 2 TerminalSet/2387)
                   disjunction/4128 =
                     (function p/4130 q/4131
                       (funct-body Gbnf_parser__GrammarFunctor.Make.FIRST.disjunction lib/grammarFunctor.ml(1211)<ghost>:33459-33490
                         (before Gbnf_parser__GrammarFunctor.Make.FIRST.disjunction lib/grammarFunctor.ml(1211):33465-33490
                           (after Gbnf_parser__GrammarFunctor.Make.FIRST.disjunction lib/grammarFunctor.ml(1211):33465-33490
                             (apply (field_imm 9 TerminalSet/2387) p/4130
                               (after Gbnf_parser__GrammarFunctor.Make.FIRST.disjunction lib/grammarFunctor.ml(1211):33485-33490
                                 (apply q/4131 0)))))))
                   conjunction/4132 =
                     (function symbol/4134 p/4135 q/4136
                       (funct-body Gbnf_parser__GrammarFunctor.Make.FIRST.conjunction lib/grammarFunctor.ml(1215)<ghost>:33700-33812
                         (before Gbnf_parser__GrammarFunctor.Make.FIRST.conjunction lib/grammarFunctor.ml(1216):33721-33812
                           (if
                             (after Gbnf_parser__GrammarFunctor.Make.FIRST.conjunction lib/grammarFunctor.ml(1216):33724-33746
                               (apply (field_imm 1 NULLABLE/4123)
                                 symbol/4134))
                             (before Gbnf_parser__GrammarFunctor.Make.FIRST.conjunction lib/grammarFunctor.ml(1217):33762-33787
                               (after Gbnf_parser__GrammarFunctor.Make.FIRST.conjunction lib/grammarFunctor.ml(1217):33762-33787
                                 (apply (field_imm 9 TerminalSet/2387) p/4135
                                   (after Gbnf_parser__GrammarFunctor.Make.FIRST.conjunction lib/grammarFunctor.ml(1217):33782-33787
                                     (apply q/4136 0)))))
                             (before Gbnf_parser__GrammarFunctor.Make.FIRST.conjunction lib/grammarFunctor.ml(1219):33811-33812
                               p/4135)))))
                   epsilon/4137 = (field_imm 0 TerminalSet/2387))
                  (pseudo Gbnf_parser__GrammarFunctor.Make.FIRST lib/grammarFunctor.ml(1206):33224-33917
                    (makeblock 0 shortcut/4124 terminal/4127 disjunction/4128
                      conjunction/4132 epsilon/4137))))
            MINIMAL/4217 =
              (apply
                (apply GenericAnalysis/4037
                  (let
                    (include/13758 =a
                       (let
                         (let/13759 =
                            (global Gbnf_parser__CompletedNatWitness!))
                         (global Gbnf_parser__CompletedNatWitness!))
                     equal/4174 =a (field_mut 0 include/13758)
                     bottom/4175 =a (field_mut 1 include/13758)
                     is_maximal/4178 =a (field_mut 4 include/13758))
                    (pseudo Gbnf_parser__GrammarFunctor.Make.MINIMAL lib/grammarFunctor.ml(1237):34571-34655
                      (makeblock 0 bottom/4175 equal/4174 is_maximal/4178))))
                (let
                  (shortcut/4151 =
                     (function _nt/4153
                       (funct-body Gbnf_parser__GrammarFunctor.Make.MINIMAL.shortcut lib/grammarFunctor.ml(1242)<ghost>:34688-34698
                         (before Gbnf_parser__GrammarFunctor.Make.MINIMAL.shortcut lib/grammarFunctor.ml(1242):34694-34698
                           0)))
                   terminal/4167 =
                     (field_imm 3 (global Gbnf_parser__CompletedNatWitness!))
                   disjunction/4168 =
                     (field_imm 6 (global Gbnf_parser__CompletedNatWitness!))
                   conjunction/4169 =
                     (function param/4171
                       (funct-body Gbnf_parser__GrammarFunctor.Make.MINIMAL.conjunction lib/grammarFunctor.ml(1249)<ghost>:35017-35029
                         (before Gbnf_parser__GrammarFunctor.Make.MINIMAL.conjunction lib/grammarFunctor.ml(1249):35021-35029
                           (field_imm 8
                             (global Gbnf_parser__CompletedNatWitness!)))))
                   epsilon/4172 =
                     (field_imm 2 (global Gbnf_parser__CompletedNatWitness!)))
                  (pseudo Gbnf_parser__GrammarFunctor.Make.MINIMAL lib/grammarFunctor.ml(1241):34662-35113
                    (makeblock 0 shortcut/4151 terminal/4167 disjunction/4168
                      conjunction/4169 epsilon/4172))))
            generates_nonempty_word/4218 =
              (function symbol/4220 : int
                (funct-body Gbnf_parser__GrammarFunctor.Make.generates_nonempty_word lib/grammarFunctor.ml(1270)<ghost>:35990-36056
                  (before Gbnf_parser__GrammarFunctor.Make.generates_nonempty_word lib/grammarFunctor.ml(1271):36008-36056
                    (not
                      (after Gbnf_parser__GrammarFunctor.Make.generates_nonempty_word lib/grammarFunctor.ml(1271):36012-36056
                        (apply (field_imm 1 TerminalSet/2387)
                          (after Gbnf_parser__GrammarFunctor.Make.generates_nonempty_word lib/grammarFunctor.ml(1271):36034-36055
                            (apply (field_imm 1 FIRST/4150) symbol/4220))))))))
            G/4244 =
              (let
                (n/4222 =[int] (field_imm 6 Nonterminal/2057)
                 index/4223 =
                   (function nt/4224
                     (funct-body Gbnf_parser__GrammarFunctor.Make.G.index lib/grammarFunctor.ml(1282)<ghost>:36470-36477
                       (before Gbnf_parser__GrammarFunctor.Make.G.index lib/grammarFunctor.ml(1282):36475-36477
                         nt/4224)))
                 iter/4225 = (field_imm 14 Nonterminal/2057)
                 labeled_successors/4226 =
                   (function yield/4228 nt/4229[int] : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.G.labeled_successors lib/grammarFunctor.ml(1284)<ghost>:36533-37157
                       (before Gbnf_parser__GrammarFunctor.Make.G.labeled_successors lib/grammarFunctor.ml(1285):36548-37157
                         (after Gbnf_parser__GrammarFunctor.Make.G.labeled_successors lib/grammarFunctor.ml(1285):36548-37157
                           (apply (field_imm 13 Production/3564) nt/4229
                             (function prod/4230[int] : int
                               (funct-body Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1285):36569-37157
                                 (before Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1286):36588-37151
                                   (let
                                     (rhs/4231 =
                                        (after Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1286):36598-36617
                                          (apply
                                            (field_imm 19 Production/3564)
                                            prod/4230)))
                                     (before Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1287):36627-37151
                                       (after Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1287):36627-37151
                                         (apply
                                           (field_imm 11
                                             (global Stdlib__Array!))
                                           (function i/4232[int] symbol/4233
                                             : int
                                             (funct-body Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1287):36646-37151
                                               (before Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1288):36671-37143
                                                 (switch* symbol/4233
                                                  case tag 0:
                                                   (let
                                                     (nt'/4234 =a
                                                        (field_imm 0
                                                          symbol/4233))
                                                     (before Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1294):36970-37143
                                                       (let
                                                         (gnw/4235 =[int]
                                                            (after Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1295):36994-37102
                                                              (apply
                                                                (field_imm 50
                                                                  (global Gbnf_parser__MArray!))
                                                                (function
                                                                  j/4236[int]
                                                                  symbol/4237
                                                                  : int
                                                                  (funct-body Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1295):37009-37098
                                                                    (before Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1296):37042-37082
                                                                    (&&
                                                                    (!=
                                                                    i/4232
                                                                    j/4236)
                                                                    (after Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1296):37052-37082
                                                                    (apply
                                                                    generates_nonempty_word/4218
                                                                    symbol/4237))))))
                                                                rhs/4231)))
                                                         (before Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1299):37130-37143
                                                           (after Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1299):37130-37143
                                                             (apply
                                                               yield/4228
                                                               gnw/4235
                                                               nt'/4234))))))
                                                  case tag 1:
                                                   (before Gbnf_parser__GrammarFunctor.Make.G.labeled_successors.(fun) lib/grammarFunctor.ml(1289):36715-36717
                                                     0)))))
                                           rhs/4231))))))))))))
                 successors/4238 =
                   (function yield/4240 nt/4241[int] : int
                     (funct-body Gbnf_parser__GrammarFunctor.Make.G.successors lib/grammarFunctor.ml(1302)<ghost>:37175-37239
                       (before Gbnf_parser__GrammarFunctor.Make.G.successors lib/grammarFunctor.ml(1303):37190-37239
                         (after Gbnf_parser__GrammarFunctor.Make.G.successors lib/grammarFunctor.ml(1303):37190-37239
                           (apply labeled_successors/4226
                             (function _gnw/4242[int] nt'/4243[int] : int
                               (funct-body Gbnf_parser__GrammarFunctor.Make.G.successors.(fun) lib/grammarFunctor.ml(1303):37209-37236
                                 (before Gbnf_parser__GrammarFunctor.Make.G.successors.(fun) lib/grammarFunctor.ml(1303):37226-37235
                                   (after Gbnf_parser__GrammarFunctor.Make.G.successors.(fun) lib/grammarFunctor.ml(1303):37226-37235
                                     (apply yield/4240 nt'/4243)))))
                             nt/4241))))))
                (pseudo Gbnf_parser__GrammarFunctor.Make.G lib/grammarFunctor.ml(1279):36399-37243
                  (makeblock 0 n/4222 index/4223 iter/4225
                    labeled_successors/4226 successors/4238)))
            unbounded/4245 =
              (makemutable 246
                (function param/13762
                  (let
                    (unbounded/4246 =
                       (after Gbnf_parser__GrammarFunctor.Make.unbounded lib/grammarFunctor.ml(1314):37652-37682
                         (caml_make_vect (field_imm 6 Nonterminal/2057) 0)))
                    (before Gbnf_parser__GrammarFunctor.Make.unbounded lib/grammarFunctor.ml(1315):37690-38241
                      (let
                        (T/4277 =
                           (apply
                             (let
                               (let/13761 =
                                  (field_imm 0 (global Gbnf_parser__Tarjan!)))
                               (field_imm 0 (global Gbnf_parser__Tarjan!)))
                             (makeblock 0 (field_mut 0 G/4244)
                               (field_mut 1 G/4244) (field_mut 4 G/4244)
                               (field_mut 2 G/4244))))
                        (seq
                          (after Gbnf_parser__GrammarFunctor.Make.unbounded lib/grammarFunctor.ml(1317):37782-38226
                            (apply (field_imm 2 G/4244)
                              (function nt/4278[int] : int
                                (funct-body Gbnf_parser__GrammarFunctor.Make.unbounded.(fun) lib/grammarFunctor.ml(1317):37789-38226
                                  (before Gbnf_parser__GrammarFunctor.Make.unbounded.(fun) lib/grammarFunctor.ml(1318):37811-38218
                                    (after Gbnf_parser__GrammarFunctor.Make.unbounded.(fun) lib/grammarFunctor.ml(1318):37811-38218
                                      (apply (field_imm 3 G/4244)
                                        (function gnw/4279[int] nt'/4280[int]
                                          : int
                                          (funct-body Gbnf_parser__GrammarFunctor.Make.unbounded.(fun) lib/grammarFunctor.ml(1318):37838-38218
                                            (before Gbnf_parser__GrammarFunctor.Make.unbounded.(fun) lib/grammarFunctor.ml(1320):37946-38208
                                              (if
                                                (&& gnw/4279
                                                  (==
                                                    (after Gbnf_parser__GrammarFunctor.Make.unbounded.(fun) lib/grammarFunctor.ml(1320):37956-37975
                                                      (apply
                                                        (field_imm 3 T/4277)
                                                        nt/4278))
                                                    (after Gbnf_parser__GrammarFunctor.Make.unbounded.(fun) lib/grammarFunctor.ml(1320):37978-37998
                                                      (apply
                                                        (field_imm 3 T/4277)
                                                        nt'/4280))))
                                                (before Gbnf_parser__GrammarFunctor.Make.unbounded.(fun) lib/grammarFunctor.ml(1320):38004-38208
                                                  (after Gbnf_parser__GrammarFunctor.Make.unbounded.(fun) lib/grammarFunctor.ml(1320):38004-38208
                                                    (apply
                                                      (field_imm 17
                                                        (global Stdlib__List!))
                                                      (function nt/4281[int]
                                                        : int
                                                        (funct-body Gbnf_parser__GrammarFunctor.Make.unbounded.(fun) lib/grammarFunctor.ml(1322):38132-38196
                                                          (before Gbnf_parser__GrammarFunctor.Make.unbounded.(fun) lib/grammarFunctor.ml(1323):38160-38182
                                                            (after Gbnf_parser__GrammarFunctor.Make.unbounded.(fun) lib/grammarFunctor.ml(1323):38160-38182
                                                              (array.set[int]
                                                                unbounded/4246
                                                                nt/4281 1)))))
                                                      (after Gbnf_parser__GrammarFunctor.Make.unbounded.(fun) lib/grammarFunctor.ml(1322):38091-38118
                                                        (apply
                                                          (field_imm 4
                                                            T/4277)
                                                          (after Gbnf_parser__GrammarFunctor.Make.unbounded.(fun) lib/grammarFunctor.ml(1322):38097-38118
                                                            (apply
                                                              (field_imm 3
                                                                T/4277)
                                                              nt/4278)))))))
                                                0))))
                                        nt/4278)))))))
                          (before Gbnf_parser__GrammarFunctor.Make.unbounded lib/grammarFunctor.ml(1328):38232-38241
                            unbounded/4246)))))))
            unbounded/4282 =
              (function nt/4283[int] : int
                (funct-body Gbnf_parser__GrammarFunctor.Make.unbounded lib/grammarFunctor.ml(1331)<ghost>:38263-38304
                  (before Gbnf_parser__GrammarFunctor.Make.unbounded lib/grammarFunctor.ml(1332):38277-38304
                    (after Gbnf_parser__GrammarFunctor.Make.unbounded lib/grammarFunctor.ml(1332):38277-38304
                      (array.get[int]
                        (after Gbnf_parser__GrammarFunctor.Make.unbounded lib/grammarFunctor.ml(1332):38277-38299
                          (let
                            (lzarg/13763 = unbounded/4245
                             tag/13764 =a (caml_obj_tag lzarg/13763))
                            (if (== tag/13764 250) (field_mut 0 lzarg/13763)
                              (if (|| (== tag/13764 246) (== tag/13764 244))
                                (apply
                                  (field_imm 1 (global CamlinternalLazy!))
                                  (opaque lzarg/13763))
                                lzarg/13763))))
                        nt/4283)))))
            MAXIMAL/4319 =
              (apply
                (apply GenericAnalysis/4037
                  (let
                    (let/13765 = (global Gbnf_parser__NatInfinityMax!)
                     let/13766 =a (global Gbnf_parser__NatInfinityMax!))
                    (makeblock 0 (field_mut 0 let/13766)
                      (field_mut 4 let/13766) (field_mut 5 let/13766))))
                (let
                  (shortcut/4296 =
                     (function nt/4298[int]
                       (funct-body Gbnf_parser__GrammarFunctor.Make.MAXIMAL.shortcut lib/grammarFunctor.ml(1351)<ghost>:39196-39245
                         (before Gbnf_parser__GrammarFunctor.Make.MAXIMAL.shortcut lib/grammarFunctor.ml(1351):39201-39245
                           (if
                             (after Gbnf_parser__GrammarFunctor.Make.MAXIMAL.shortcut lib/grammarFunctor.ml(1351):39204-39216
                               (apply unbounded/4282 nt/4298))
                             (before Gbnf_parser__GrammarFunctor.Make.MAXIMAL.shortcut lib/grammarFunctor.ml(1351):39222-39235
                               (makeblock 0 (int)
                                 (field_imm 1
                                   (global Gbnf_parser__NatInfinityMax!))))
                             (before Gbnf_parser__GrammarFunctor.Make.MAXIMAL.shortcut lib/grammarFunctor.ml(1351):39241-39245
                               0)))))
                   terminal/4299 =
                     (function _tok/4301 : int
                       (funct-body Gbnf_parser__GrammarFunctor.Make.MAXIMAL.terminal lib/grammarFunctor.ml(1353)<ghost>:39309-39324
                         (before Gbnf_parser__GrammarFunctor.Make.MAXIMAL.terminal lib/grammarFunctor.ml(1353):39316-39324
                           (after Gbnf_parser__GrammarFunctor.Make.MAXIMAL.terminal lib/grammarFunctor.ml(1353):39316-39324
                             (apply
                               (field_imm 2
                                 (global Gbnf_parser__NatInfinityMax!))
                               1)))))
                   disjunction/4302 =
                     (field_imm 7 (global Gbnf_parser__NatInfinityMax!))
                   conjunction/4303 =
                     (function param/4305
                       (funct-body Gbnf_parser__GrammarFunctor.Make.MAXIMAL.conjunction lib/grammarFunctor.ml(1357)<ghost>:39537-39549
                         (before Gbnf_parser__GrammarFunctor.Make.MAXIMAL.conjunction lib/grammarFunctor.ml(1357):39541-39549
                           (field_imm 9
                             (global Gbnf_parser__NatInfinityMax!)))))
                   epsilon/4306 =[int]
                     (field_imm 0 (global Gbnf_parser__NatInfinityMax!)))
                  (pseudo Gbnf_parser__GrammarFunctor.Make.MAXIMAL lib/grammarFunctor.ml(1349):39144-39632
                    (makeblock 0 shortcut/4296 terminal/4299 disjunction/4302
                      conjunction/4303 epsilon/4306))))
            *match*/13820 =
              (if (field_imm 1 G/1226)
                (before Gbnf_parser__GrammarFunctor.Make lib/grammarFunctor.ml(1365):39742-40977
                  (after Gbnf_parser__GrammarFunctor.Make lib/grammarFunctor.ml(1365):39742-40977
                    (apply (field_imm 22 (global Gbnf_parser__StringSet!))
                      (function symbol/4320 : int
                        (funct-body Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1372):40124-40557
                          (before Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1373):40145-40551
                            (let
                              (nt/4321 =[int]
                                 (after Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1373):40154-40179
                                   (apply (field_imm 11 Nonterminal/2057)
                                     symbol/4320)))
                              (before Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1374):40189-40551
                                (seq
                                  (if
                                    (not
                                      (after Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1374):40196-40221
                                        (apply (field_imm 0 NONEMPTY/4094)
                                          nt/4321)))
                                    (before Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1375):40235-40357
                                      (after Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1375):40235-40357
                                        (apply
                                          (field_imm 6
                                            (global Gbnf_parser__Error!))
                                          (after Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1376):40257-40283
                                            (apply
                                              (field_imm 12 Nonterminal/2057)
                                              nt/4321))
                                          [0:
                                           [2:
                                            0
                                            [11:
                                             " generates the empty language."
                                             0]]
                                           "%s generates the empty language."]
                                          (after Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1377):40329-40357
                                            (apply
                                              (field_imm 10 Nonterminal/2057)
                                              0 nt/4321)))))
                                    0)
                                  (before Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1378):40365-40551
                                    (if
                                      (after Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1378):40368-40411
                                        (apply (field_imm 1 TerminalSet/2387)
                                          (after Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1378):40389-40411
                                            (apply (field_imm 0 FIRST/4150)
                                              nt/4321))))
                                      (before Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1379):40425-40551
                                        (after Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1379):40425-40551
                                          (apply
                                            (field_imm 6
                                              (global Gbnf_parser__Error!))
                                            (after Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1380):40447-40473
                                              (apply
                                                (field_imm 12
                                                  Nonterminal/2057)
                                                nt/4321))
                                            [0:
                                             [2:
                                              0
                                              [11:
                                               " generates the language {epsilon}."
                                               0]]
                                             "%s generates the language {epsilon}."]
                                            (after Gbnf_parser__GrammarFunctor.Make.(fun) lib/grammarFunctor.ml(1381):40523-40551
                                              (apply
                                                (field_imm 10
                                                  Nonterminal/2057)
                                                0 nt/4321)))))
                                      0))))))))
                      (field_imm 3 (field_imm 0 G/1226)))))
                0)
            FOLLOW/4509 =
              (function P/13779 is_a_functor
                (let
                  (P/4329 =a P/13779
                   M/4337 =
                     (apply
                       (let
                         (let/13767 =
                            (field_imm 10 (global Gbnf_parser__Glue!)))
                         (field_imm 10 (global Gbnf_parser__Glue!)))
                       (makeblock 0 (field_mut 6 Nonterminal/2057)))
                   S/4419 =
                     (apply
                       (apply
                         (let
                           (let/13768 =
                              (field_imm 0 (global Gbnf_parser__FixSolver!)))
                           (field_imm 0 (global Gbnf_parser__FixSolver!)))
                         (makeblock 0 (field_mut 0 M/4337)
                           (field_mut 2 M/4337) (field_mut 3 M/4337)
                           (field_mut 1 M/4337) (field_mut 4 M/4337)))
                       (makeblock 0 (field_mut 0 P/4329)))
                   *match*/13778 =
                     (let
                       (sharp/4420 =
                          (after Gbnf_parser__GrammarFunctor.Make.FOLLOW lib/grammarFunctor.ml(1451):43124-43149
                            (apply (field_imm 2 P/4329)
                              (field_imm 8 Terminal/2246))))
                       (before Gbnf_parser__GrammarFunctor.Make.FOLLOW lib/grammarFunctor.ml(1452):43157-43317
                         (for nt/4421 0 to
                           (- (field_imm 5 Nonterminal/2057) 1)
                           (before Gbnf_parser__GrammarFunctor.Make.FOLLOW lib/grammarFunctor.ml(1453):43202-43308
                             (seq
                               (if
                                 (after Gbnf_parser__GrammarFunctor.Make.FOLLOW lib/grammarFunctor.ml(1453):43209-43243
                                   (apply (field_imm 8 Nonterminal/2057)
                                     nt/4421))
                                 0
                                 (raise
                                   (after Gbnf_parser__GrammarFunctor.Make.FOLLOW lib/grammarFunctor.ml(1453):43202-43243
                                     (makeblock 0 (global Assert_failure/28!)
                                       [0: "lib/grammarFunctor.ml" 1453 6]))))
                               (before Gbnf_parser__GrammarFunctor.Make.FOLLOW lib/grammarFunctor.ml(1455):43284-43308
                                 (after Gbnf_parser__GrammarFunctor.Make.FOLLOW lib/grammarFunctor.ml(1455):43284-43308
                                   (apply (field_imm 5 S/4419) sharp/4420
                                     nt/4421))))))))
                   *match*/13776 =
                     (after Gbnf_parser__GrammarFunctor.Make.FOLLOW lib/grammarFunctor.ml(1463):43587-44325
                       (apply (field_imm 11 (global Stdlib__Array!))
                         (function prod/4422[int] param/4430 : int
                           (funct-body Gbnf_parser__GrammarFunctor.Make.FOLLOW.(fun) lib/grammarFunctor.ml(1463):43599-44308
                             (let
                               (rhs/4424 =a (field_imm 1 param/4430)
                                nt1/4423 =a (field_imm 0 param/4430))
                               (before Gbnf_parser__GrammarFunctor.Make.FOLLOW.(fun) lib/grammarFunctor.ml(1465):43708-44302
                                 (after Gbnf_parser__GrammarFunctor.Make.FOLLOW.(fun) lib/grammarFunctor.ml(1465):43708-44302
                                   (apply
                                     (field_imm 11 (global Stdlib__Array!))
                                     (function i/4425[int] symbol/4426 : int
                                       (funct-body Gbnf_parser__GrammarFunctor.Make.FOLLOW.(fun) lib/grammarFunctor.ml(1465):43720-44298
                                         (before Gbnf_parser__GrammarFunctor.Make.FOLLOW.(fun) lib/grammarFunctor.ml(1466):43745-44290
                                           (switch* symbol/4426
                                            case tag 0:
                                             (let
                                               (nt2/4427 =a
                                                  (field_imm 0 symbol/4426))
                                               (before Gbnf_parser__GrammarFunctor.Make.FOLLOW.(fun) lib/grammarFunctor.ml(1470):43840-44290
                                                 (let
                                                   (nullable/4428 =[int]
                                                      (after Gbnf_parser__GrammarFunctor.Make.FOLLOW.(fun) lib/grammarFunctor.ml(1470):43855-43885
                                                        (apply
                                                          (field_imm 2
                                                            NULLABLE/4123)
                                                          prod/4422
                                                          (+ i/4425 1)))
                                                    first/4429 =
                                                      (after Gbnf_parser__GrammarFunctor.Make.FOLLOW.(fun) lib/grammarFunctor.ml(1471):43910-43928
                                                        (apply
                                                          (field_imm 3
                                                            P/4329)
                                                          prod/4422
                                                          (+ i/4425 1))))
                                                   (before Gbnf_parser__GrammarFunctor.Make.FOLLOW.(fun) lib/grammarFunctor.ml(1474):44071-44290
                                                     (seq
                                                       (after Gbnf_parser__GrammarFunctor.Make.FOLLOW.(fun) lib/grammarFunctor.ml(1474):44071-44096
                                                         (apply
                                                           (field_imm 5
                                                             S/4419)
                                                           first/4429
                                                           nt2/4427))
                                                       (before Gbnf_parser__GrammarFunctor.Make.FOLLOW.(fun) lib/grammarFunctor.ml(1477):44236-44290
                                                         (if nullable/4428
                                                           (before Gbnf_parser__GrammarFunctor.Make.FOLLOW.(fun) lib/grammarFunctor.ml(1478):44267-44290
                                                             (after Gbnf_parser__GrammarFunctor.Make.FOLLOW.(fun) lib/grammarFunctor.ml(1478):44267-44290
                                                               (apply
                                                                 (field_imm 3
                                                                   S/4419)
                                                                 nt1/4423
                                                                 nt2/4427)))
                                                           0)))))))
                                            case tag 1:
                                             (before Gbnf_parser__GrammarFunctor.Make.FOLLOW.(fun) lib/grammarFunctor.ml(1468):43799-43801
                                               0)))))
                                     rhs/4424))))))
                         (field_imm 4 Production/3564)))
                   follow/4431 =
                     (makemutable 246
                       (function param/13770
                         (let (S/4447 = (apply (field_imm 6 S/4419) 0))
                           (function nt/4448[int]
                             (funct-body Gbnf_parser__GrammarFunctor.Make.FOLLOW.follow.(fun) lib/grammarFunctor.ml(1487):44487-44543
                               (before Gbnf_parser__GrammarFunctor.Make.FOLLOW.follow.(fun) lib/grammarFunctor.ml(1487):44497-44543
                                 (after Gbnf_parser__GrammarFunctor.Make.FOLLOW.follow.(fun) lib/grammarFunctor.ml(1487):44497-44543
                                   (apply
                                     (field_imm 2 (global Stdlib__Option!))
                                     (after Gbnf_parser__GrammarFunctor.Make.FOLLOW.follow.(fun) lib/grammarFunctor.ml(1487):44510-44525
                                       (apply (field_imm 8 S/4447) nt/4448))
                                     (field_imm 1 P/4329)))))))))
                   follow/4449 =
                     (function nt/4450[int]
                       (funct-body Gbnf_parser__GrammarFunctor.Make.FOLLOW.follow lib/grammarFunctor.ml(1491):44600-44632
                         (before Gbnf_parser__GrammarFunctor.Make.FOLLOW.follow lib/grammarFunctor.ml(1491):44610-44632
                           (after Gbnf_parser__GrammarFunctor.Make.FOLLOW.follow lib/grammarFunctor.ml(1491):44610-44632
                             (apply
                               (after Gbnf_parser__GrammarFunctor.Make.FOLLOW.follow lib/grammarFunctor.ml(1491):44610-44629
                                 (let
                                   (lzarg/13771 = follow/4431
                                    tag/13772 =a (caml_obj_tag lzarg/13771))
                                   (if (== tag/13772 250)
                                     (field_mut 0 lzarg/13771)
                                     (if
                                       (|| (== tag/13772 246)
                                         (== tag/13772 244))
                                       (apply
                                         (field_imm 1
                                           (global CamlinternalLazy!))
                                         (opaque lzarg/13771))
                                       lzarg/13771))))
                               nt/4450))))))
                  (pseudo Gbnf_parser__GrammarFunctor.Make.FOLLOW lib/grammarFunctor.ml(1439):42907-44637
                    (makeblock 0 M/4337 S/4419 follow/4449))))
            follow/4510 =
              (let
                (F/4640 =
                   (apply FOLLOW/4509
                     (let
                       (include/13780 =a TerminalSet/2387
                        singleton/4516 =a (field_mut 2 include/13780)
                        bottom/4535 =a (field_mut 20 include/13780)
                        leq_join/4537 =a (field_mut 22 include/13780)
                        terminal/4538 = singleton/4516
                        first/4539 = (field_imm 2 FIRST/4150))
                       (pseudo Gbnf_parser__GrammarFunctor.Make.follow.F lib/grammarFunctor.ml(1498):44785-44883
                         (makeblock 0 leq_join/4537 bottom/4535 terminal/4538
                           first/4539)))))
                (field_imm 2 F/4640))
            tfollow/4641 =
              (makemutable 246
                (function param/13782
                  (let
                    (tfollow/4642 =
                       (after Gbnf_parser__GrammarFunctor.Make.tfollow lib/grammarFunctor.ml(1525):45544-45583
                         (caml_make_vect (field_imm 4 Terminal/2246)
                           (field_imm 0 TerminalSet/2387))))
                    (before Gbnf_parser__GrammarFunctor.Make.tfollow lib/grammarFunctor.ml(1529):45636-46453
                      (seq
                        (after Gbnf_parser__GrammarFunctor.Make.tfollow lib/grammarFunctor.ml(1529):45636-46439
                          (apply (field_imm 11 (global Stdlib__Array!))
                            (function prod/4643[int] param/4651 : int
                              (funct-body Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1529):45648-46422
                                (let
                                  (rhs/4645 =a (field_imm 1 param/4651)
                                   nt1/4644 =a (field_imm 0 param/4651))
                                  (before Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1531):45753-46416
                                    (after Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1531):45753-46416
                                      (apply
                                        (field_imm 11
                                          (global Stdlib__Array!))
                                        (function i/4646[int] symbol/4647
                                          : int
                                          (funct-body Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1531):45765-46412
                                            (before Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1532):45790-46404
                                              (switch* symbol/4647
                                               case tag 0:
                                                (before Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1534):45844-45846
                                                  0)
                                               case tag 1:
                                                (let
                                                  (t2/4648 =a
                                                     (field_imm 0
                                                       symbol/4647))
                                                  (before Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1536):45884-46404
                                                    (let
                                                      (nullable/4649 =[int]
                                                         (after Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1536):45899-45929
                                                           (apply
                                                             (field_imm 2
                                                               NULLABLE/4123)
                                                             prod/4643
                                                             (+ i/4646 1)))
                                                       first/4650 =
                                                         (after Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1537):45954-45981
                                                           (apply
                                                             (field_imm 2
                                                               FIRST/4150)
                                                             prod/4643
                                                             (+ i/4646 1))))
                                                      (before Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1540):46123-46404
                                                        (seq
                                                          (after Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1540):46123-46175
                                                            (array.set[gen]
                                                              tfollow/4642
                                                              t2/4648
                                                              (after Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1540):46139-46175
                                                                (apply
                                                                  (field_imm 9
                                                                    TerminalSet/2387)
                                                                  first/4650
                                                                  (after Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1540):46163-46175
                                                                    (array.get[gen]
                                                                    tfollow/4642
                                                                    t2/4648))))))
                                                          (before Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1543):46314-46404
                                                            (if nullable/4649
                                                              (before Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1544):46345-46404
                                                                (after Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1544):46345-46404
                                                                  (array.set[gen]
                                                                    tfollow/4642
                                                                    t2/4648
                                                                    (after Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1544):46361-46404
                                                                    (apply
                                                                    (field_imm 9
                                                                    TerminalSet/2387)
                                                                    (after Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1544):46379-46391
                                                                    (apply
                                                                    follow/4510
                                                                    nt1/4644))
                                                                    (after Gbnf_parser__GrammarFunctor.Make.tfollow.(fun) lib/grammarFunctor.ml(1544):46392-46404
                                                                    (array.get[gen]
                                                                    tfollow/4642
                                                                    t2/4648)))))))
                                                              0)))))))))))
                                        rhs/4645))))))
                            (field_imm 4 Production/3564)))
                        (before Gbnf_parser__GrammarFunctor.Make.tfollow lib/grammarFunctor.ml(1548):46446-46453
                          tfollow/4642))))))
            tfollow/4652 =
              (function t/4653[int]
                (funct-body Gbnf_parser__GrammarFunctor.Make.tfollow lib/grammarFunctor.ml(1554)<ghost>:46504-46534
                  (before Gbnf_parser__GrammarFunctor.Make.tfollow lib/grammarFunctor.ml(1555):46510-46534
                    (after Gbnf_parser__GrammarFunctor.Make.tfollow lib/grammarFunctor.ml(1555):46510-46534
                      (array.get[gen]
                        (after Gbnf_parser__GrammarFunctor.Make.tfollow lib/grammarFunctor.ml(1555):46510-46530
                          (let
                            (lzarg/13783 = tfollow/4641
                             tag/13784 =a (caml_obj_tag lzarg/13783))
                            (if (== tag/13784 250) (field_mut 0 lzarg/13783)
                              (if (|| (== tag/13784 246) (== tag/13784 244))
                                (apply
                                  (field_imm 1 (global CamlinternalLazy!))
                                  (opaque lzarg/13783))
                                lzarg/13783))))
                        t/4653)))))
            sfirst/4654 =
              (function prod/4656[int] i/4657[int]
                (funct-body Gbnf_parser__GrammarFunctor.Make.sfirst lib/grammarFunctor.ml(1575)<ghost>:47127-47771
                  (before Gbnf_parser__GrammarFunctor.Make.sfirst lib/grammarFunctor.ml(1576):47138-47771
                    (let
                      (rhs/4658 =
                         (after Gbnf_parser__GrammarFunctor.Make.sfirst lib/grammarFunctor.ml(1576):47148-47167
                           (apply (field_imm 19 Production/3564) prod/4656)))
                      (before Gbnf_parser__GrammarFunctor.Make.sfirst lib/grammarFunctor.ml(1577):47173-47771
                        (let (n/4659 =[int] (array.length[addr] rhs/4658))
                          (before Gbnf_parser__GrammarFunctor.Make.sfirst lib/grammarFunctor.ml(1578):47203-47771
                            (letrec
                              (loop/4660
                                 (function i/4661[int]
                                   (funct-body Gbnf_parser__GrammarFunctor.Make.sfirst.loop lib/grammarFunctor.ml(1578)<ghost>:47216-47757
                                     (before Gbnf_parser__GrammarFunctor.Make.sfirst.loop lib/grammarFunctor.ml(1579):47224-47757
                                       (if (== i/4661 n/4659)
                                         (before Gbnf_parser__GrammarFunctor.Make.sfirst.loop lib/grammarFunctor.ml(1581):47305-47320
                                           (field_imm 0 SymbolSet/2738))
                                         (before Gbnf_parser__GrammarFunctor.Make.sfirst.loop lib/grammarFunctor.ml(1583):47336-47757
                                           (let
                                             (sym/4662 =
                                                (after Gbnf_parser__GrammarFunctor.Make.sfirst.loop lib/grammarFunctor.ml(1583):47346-47353
                                                  (array.get[addr] rhs/4658
                                                    i/4661)))
                                             (before Gbnf_parser__GrammarFunctor.Make.sfirst.loop lib/grammarFunctor.ml(1586):47503-47757
                                               (after Gbnf_parser__GrammarFunctor.Make.sfirst.loop lib/grammarFunctor.ml(1586):47503-47757
                                                 (apply
                                                   (field_imm 4
                                                     SymbolSet/2738)
                                                   (after Gbnf_parser__GrammarFunctor.Make.sfirst.loop lib/grammarFunctor.ml(1587):47527-47552
                                                     (apply
                                                       (field_imm 2
                                                         SymbolSet/2738)
                                                       sym/4662))
                                                   (if
                                                     (after Gbnf_parser__GrammarFunctor.Make.sfirst.loop lib/grammarFunctor.ml(1590):47698-47717
                                                       (apply
                                                         (field_imm 1
                                                           NULLABLE/4123)
                                                         sym/4662))
                                                     (before Gbnf_parser__GrammarFunctor.Make.sfirst.loop lib/grammarFunctor.ml(1590):47723-47735
                                                       (after Gbnf_parser__GrammarFunctor.Make.sfirst.loop lib/grammarFunctor.ml(1590):47723-47735
                                                         (apply loop/4660
                                                           (+ i/4661 1))))
                                                     (before Gbnf_parser__GrammarFunctor.Make.sfirst.loop lib/grammarFunctor.ml(1590):47741-47756
                                                       (field_imm 0
                                                         SymbolSet/2738)))))))))))))
                              (before Gbnf_parser__GrammarFunctor.Make.sfirst lib/grammarFunctor.ml(1592):47765-47771
                                (after Gbnf_parser__GrammarFunctor.Make.sfirst lib/grammarFunctor.ml(1592):47765-47771
                                  (apply loop/4660 i/4657)))))))))))
            sfollow/4663 =
              (let
                (F/4778 =
                   (apply FOLLOW/4509
                     (let
                       (bottom/4664 = (field_imm 44 SymbolSet/2738)
                        include/13785 =
                          (apply
                            (let
                              (let/13786 =
                                 (field_imm 13 (global Gbnf_parser__Glue!)))
                              (field_imm 13 (global Gbnf_parser__Glue!)))
                            (makeblock 0 (field_mut 45 SymbolSet/2738)
                              (field_mut 46 SymbolSet/2738)))
                        leq_join/4673 =a (field_mut 0 include/13785)
                        terminal/4674 =
                          (function t/4676[int]
                            (funct-body Gbnf_parser__GrammarFunctor.Make.sfollow.F.terminal lib/grammarFunctor.ml(1602)<ghost>:48097-48133
                              (before Gbnf_parser__GrammarFunctor.Make.sfollow.F.terminal lib/grammarFunctor.ml(1602):48101-48133
                                (after Gbnf_parser__GrammarFunctor.Make.sfollow.F.terminal lib/grammarFunctor.ml(1602):48101-48133
                                  (apply (field_imm 2 SymbolSet/2738)
                                    (makeblock 1 (int) t/4676))))))
                        first/4677 = sfirst/4654)
                       (pseudo Gbnf_parser__GrammarFunctor.Make.sfollow.F lib/grammarFunctor.ml(1599):47988-48162
                         (makeblock 0 leq_join/4673 bottom/4664 terminal/4674
                           first/4677)))))
                (field_imm 2 F/4778))
            explain/4783 =
              (function tok/4785[int] rhs/4786 i/4787[int]
                (funct-body Gbnf_parser__GrammarFunctor.Make.explain lib/grammarFunctor.ml(1637)<ghost>:49504-50140
                  (before Gbnf_parser__GrammarFunctor.Make.explain lib/grammarFunctor.ml(1638):49560-50140
                    (let (length/4788 =[int] (array.length[addr] rhs/4786))
                      (before Gbnf_parser__GrammarFunctor.Make.explain lib/grammarFunctor.ml(1639):49595-50140
                        (letrec
                          (loop/4789
                             (function i/4790[int]
                               (funct-body Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1639)<ghost>:49608-50126
                                 (before Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1640):49616-50126
                                   (seq
                                     (if (< i/4790 length/4788) 0
                                       (raise
                                         (after Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1640):49616-49635
                                           (makeblock 0
                                             (global Assert_failure/28!)
                                             [0:
                                              "lib/grammarFunctor.ml" 1640 4]))))
                                     (before Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1641):49641-50126
                                       (let
                                         (symbol/4791 =
                                            (after Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1641):49654-49661
                                              (array.get[addr] rhs/4786
                                                i/4790)))
                                         (before Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1642):49669-50126
                                           (switch* symbol/4791
                                            case tag 0:
                                             (let
                                               (nt/4793 =a
                                                  (field_imm 0 symbol/4791))
                                               (before Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1647):49798-50126
                                                 (if
                                                   (after Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1647):49801-49843
                                                     (apply
                                                       (field_imm 6
                                                         TerminalSet/2387)
                                                       tok/4785
                                                       (after Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1647):49821-49843
                                                         (apply
                                                           (field_imm 0
                                                             FIRST/4150)
                                                           nt/4793))))
                                                   (before Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1648):49859-49875
                                                     (makeblock 0 (int,int)
                                                       tok/4785 nt/4793))
                                                   (before Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1649):49889-50126
                                                     (seq
                                                       (if
                                                         (after Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1650):49912-49937
                                                           (apply
                                                             (field_imm 0
                                                               NULLABLE/4123)
                                                             nt/4793))
                                                         0
                                                         (raise
                                                           (after Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1650):49905-49937
                                                             (makeblock 0
                                                               (global Assert_failure/28!)
                                                               [0:
                                                                "lib/grammarFunctor.ml"
                                                                1650 10]))))
                                                       (before Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1651):49949-50114
                                                         (let
                                                           (e/4796 =
                                                              (after Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1651):49955-49967
                                                                (apply
                                                                  loop/4789
                                                                  (+ i/4790
                                                                    1))))
                                                           (catch
                                                             (switch* e/4796
                                                              case int 0:
                                                               (exit 116)
                                                              case tag 0:
                                                               (exit 116)
                                                              case tag 1:
                                                               (let
                                                                 (e/4795 =a
                                                                    (field_imm 1
                                                                    e/4796)
                                                                  symbols/4794 =a
                                                                    (field_imm 0
                                                                    e/4796))
                                                                 (before Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1653):50025-50057
                                                                   (makeblock 1
                                                                    (makeblock 0
                                                                    symbol/4791
                                                                    symbols/4794)
                                                                    e/4795))))
                                                            with (116)
                                                             (before Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1655):50089-50114
                                                               (makeblock 1
                                                                 (makeblock 0
                                                                   symbol/4791
                                                                   0)
                                                                 e/4796))))))))))
                                            case tag 1:
                                             (let
                                               (tok'/4792 =a
                                                  (field_imm 0 symbol/4791))
                                               (before Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1644):49718-49768
                                                 (seq
                                                   (if
                                                     (after Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1644):49725-49750
                                                       (apply
                                                         (field_imm 3
                                                           Terminal/2246)
                                                         tok/4785 tok'/4792))
                                                     0
                                                     (raise
                                                       (after Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1644):49718-49750
                                                         (makeblock 0
                                                           (global Assert_failure/28!)
                                                           [0:
                                                            "lib/grammarFunctor.ml"
                                                            1644 8]))))
                                                   (before Gbnf_parser__GrammarFunctor.Make.explain.loop lib/grammarFunctor.ml(1645):49760-49768
                                                     0)))))))))))))
                          (before Gbnf_parser__GrammarFunctor.Make.explain lib/grammarFunctor.ml(1658):50134-50140
                            (after Gbnf_parser__GrammarFunctor.Make.explain lib/grammarFunctor.ml(1658):50134-50140
                              (apply loop/4789 i/4787))))))))))
           (letrec
             (convert/4797
                (function param/4803
                  (funct-body Gbnf_parser__GrammarFunctor.Make.convert lib/grammarFunctor.ml(1660):50160-50508
                    (switch* param/4803
                     case int 0:
                      (before Gbnf_parser__GrammarFunctor.Make.convert lib/grammarFunctor.ml(1662):50191-50193
                        "")
                     case tag 0:
                      (let
                        (nt/4799 =a (field_imm 1 param/4803)
                         tok/4798 =a (field_imm 0 param/4803))
                        (before Gbnf_parser__GrammarFunctor.Make.convert lib/grammarFunctor.ml(1664):50224-50327
                          (after Gbnf_parser__GrammarFunctor.Make.convert lib/grammarFunctor.ml(1664):50224-50327
                            (apply (field_imm 3 (global Stdlib__Printf!))
                              [0:
                               [2: 0 [11: " can begin with " [2: 0 0]]]
                               "%s can begin with %s"]
                              (after Gbnf_parser__GrammarFunctor.Make.convert lib/grammarFunctor.ml(1665):50270-50298
                                (apply (field_imm 10 Nonterminal/2057) 0
                                  nt/4799))
                              (after Gbnf_parser__GrammarFunctor.Make.convert lib/grammarFunctor.ml(1666):50307-50327
                                (apply (field_imm 6 Terminal/2246) tok/4798))))))
                     case tag 1:
                      (let
                        (e/4801 =a (field_imm 1 param/4803)
                         symbols/4800 =a (field_imm 0 param/4803))
                        (before Gbnf_parser__GrammarFunctor.Make.convert lib/grammarFunctor.ml(1668):50364-50508
                          (let
                            (e/4802 =
                               (after Gbnf_parser__GrammarFunctor.Make.convert lib/grammarFunctor.ml(1668):50372-50381
                                 (apply convert/4797 e/4801)))
                            (before Gbnf_parser__GrammarFunctor.Make.convert lib/grammarFunctor.ml(1669):50391-50508
                              (after Gbnf_parser__GrammarFunctor.Make.convert lib/grammarFunctor.ml(1669):50391-50508
                                (apply (field_imm 3 (global Stdlib__Printf!))
                                  [0:
                                   [2: 0 [11: " can vanish" [2: 0 [2: 0 0]]]]
                                   "%s can vanish%s%s"]
                                  (after Gbnf_parser__GrammarFunctor.Make.convert lib/grammarFunctor.ml(1670):50434-50457
                                    (apply (field_imm 11 Symbol/2545)
                                      symbols/4800))
                                  (if
                                    (after Gbnf_parser__GrammarFunctor.Make.convert lib/grammarFunctor.ml(1671):50470-50476
                                      (caml_string_equal e/4802 ""))
                                    (before Gbnf_parser__GrammarFunctor.Make.convert lib/grammarFunctor.ml(1671):50482-50484
                                      "")
                                    (before Gbnf_parser__GrammarFunctor.Make.convert lib/grammarFunctor.ml(1671):50490-50497
                                      " and "))
                                  e/4802))))))))))
             (let
               (Analysis/4843 =
                  (let
                    (nullable/4804 = (field_imm 0 NULLABLE/4123)
                     nullable_symbol/4805 = (field_imm 1 NULLABLE/4123)
                     first/4806 = (field_imm 0 FIRST/4150)
                     first_symbol/4807 = (field_imm 1 FIRST/4150)
                     nullable_first_prod/4808 =
                       (function prod/4810[int] i/4811[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Analysis.nullable_first_prod lib/grammarFunctor.ml(1689)<ghost>:50883-50951
                           (before Gbnf_parser__GrammarFunctor.Make.Analysis.nullable_first_prod lib/grammarFunctor.ml(1690):50896-50951
                             (makeblock 0 (int,*)
                               (after Gbnf_parser__GrammarFunctor.Make.Analysis.nullable_first_prod lib/grammarFunctor.ml(1690):50896-50922
                                 (apply (field_imm 2 NULLABLE/4123) prod/4810
                                   i/4811))
                               (after Gbnf_parser__GrammarFunctor.Make.Analysis.nullable_first_prod lib/grammarFunctor.ml(1691):50928-50951
                                 (apply (field_imm 2 FIRST/4150) prod/4810
                                   i/4811))))))
                     nullable_first_prod/4812 =
                       (after Gbnf_parser__GrammarFunctor.Make.Analysis.nullable_first_prod lib/grammarFunctor.ml(1697):51084-51231
                         (apply (field_imm 2 (global Gbnf_parser__Misc!))
                           (field_imm 1 Production/3564)
                           (function prod/4813[int]
                             (funct-body Gbnf_parser__GrammarFunctor.Make.Analysis.nullable_first_prod.(fun) lib/grammarFunctor.ml(1697):51111-51231
                               (before Gbnf_parser__GrammarFunctor.Make.Analysis.nullable_first_prod.(fun) lib/grammarFunctor.ml(1698):51130-51225
                                 (after Gbnf_parser__GrammarFunctor.Make.Analysis.nullable_first_prod.(fun) lib/grammarFunctor.ml(1698):51130-51225
                                   (apply
                                     (field_imm 2
                                       (global Gbnf_parser__Misc!))
                                     (+
                                       (after Gbnf_parser__GrammarFunctor.Make.Analysis.nullable_first_prod.(fun) lib/grammarFunctor.ml(1698):51145-51167
                                         (apply
                                           (field_imm 20 Production/3564)
                                           prod/4813))
                                       1)
                                     (function i/4814[int]
                                       (funct-body Gbnf_parser__GrammarFunctor.Make.Analysis.nullable_first_prod.(fun) lib/grammarFunctor.ml(1698):51173-51225
                                         (before Gbnf_parser__GrammarFunctor.Make.Analysis.nullable_first_prod.(fun) lib/grammarFunctor.ml(1699):51191-51217
                                           (after Gbnf_parser__GrammarFunctor.Make.Analysis.nullable_first_prod.(fun) lib/grammarFunctor.ml(1699):51191-51217
                                             (apply nullable_first_prod/4808
                                               prod/4813 i/4814))))))))))))
                     first_prod_lookahead/4815 =
                       (function prod/4817[int] i/4818[int] z/4819[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Analysis.first_prod_lookahead lib/grammarFunctor.ml(1703)<ghost>:51260-51398
                           (before Gbnf_parser__GrammarFunctor.Make.Analysis.first_prod_lookahead lib/grammarFunctor.ml(1704):51275-51398
                             (let
                               (*match*/13790 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Analysis.first_prod_lookahead lib/grammarFunctor.ml(1704):51297-51323
                                    (apply nullable_first_prod/4812 prod/4817
                                      i/4818))
                                first/4821 =a (field_imm 1 *match*/13790)
                                nullable/4820 =a (field_imm 0 *match*/13790))
                               (before Gbnf_parser__GrammarFunctor.Make.Analysis.first_prod_lookahead lib/grammarFunctor.ml(1705):51331-51398
                                 (if nullable/4820
                                   (before Gbnf_parser__GrammarFunctor.Make.Analysis.first_prod_lookahead lib/grammarFunctor.ml(1706):51354-51377
                                     (after Gbnf_parser__GrammarFunctor.Make.Analysis.first_prod_lookahead lib/grammarFunctor.ml(1706):51354-51377
                                       (apply (field_imm 7 TerminalSet/2387)
                                         z/4819 first/4821)))
                                   (before Gbnf_parser__GrammarFunctor.Make.Analysis.first_prod_lookahead lib/grammarFunctor.ml(1708):51393-51398
                                     first/4821)))))))
                     explain_first_rhs/4822 =
                       (function tok/4824[int] rhs/4825 i/4826[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Analysis.explain_first_rhs lib/grammarFunctor.ml(1710)<ghost>:51424-51509
                           (before Gbnf_parser__GrammarFunctor.Make.Analysis.explain_first_rhs lib/grammarFunctor.ml(1711):51482-51509
                             (after Gbnf_parser__GrammarFunctor.Make.Analysis.explain_first_rhs lib/grammarFunctor.ml(1711):51482-51509
                               (apply convert/4797
                                 (after Gbnf_parser__GrammarFunctor.Make.Analysis.explain_first_rhs lib/grammarFunctor.ml(1711):51490-51509
                                   (apply explain/4783 tok/4824 rhs/4825
                                     i/4826)))))))
                     follow/4827 = follow/4510
                     attributes/4828 = (field_imm 7 (field_imm 0 G/1226))
                     minimal/4829 =
                       (function nt/4831[int] : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Analysis.minimal lib/grammarFunctor.ml(1718)<ghost>:51594-51654
                           (before Gbnf_parser__GrammarFunctor.Make.Analysis.minimal lib/grammarFunctor.ml(1719):51603-51654
                             (after Gbnf_parser__GrammarFunctor.Make.Analysis.minimal lib/grammarFunctor.ml(1719):51603-51654
                               (apply
                                 (field_imm 10
                                   (global Gbnf_parser__CompletedNatWitness!))
                                 (after Gbnf_parser__GrammarFunctor.Make.Analysis.minimal lib/grammarFunctor.ml(1719):51630-51654
                                   (apply (field_imm 0 MINIMAL/4217) nt/4831)))))))
                     minimal_prod/4832 =
                       (function prod/4834[int] i/4835[int] : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Analysis.minimal_prod lib/grammarFunctor.ml(1721)<ghost>:51675-51794
                           (before Gbnf_parser__GrammarFunctor.Make.Analysis.minimal_prod lib/grammarFunctor.ml(1722):51688-51794
                             (seq
                               (if
                                 (&& (<= 0 i/4835)
                                   (<= i/4835
                                     (after Gbnf_parser__GrammarFunctor.Make.Analysis.minimal_prod lib/grammarFunctor.ml(1722):51711-51733
                                       (apply (field_imm 20 Production/3564)
                                         prod/4834))))
                                 0
                                 (raise
                                   (after Gbnf_parser__GrammarFunctor.Make.Analysis.minimal_prod lib/grammarFunctor.ml(1722):51688-51734
                                     (makeblock 0 (global Assert_failure/28!)
                                       [0: "lib/grammarFunctor.ml" 1722 4]))))
                               (before Gbnf_parser__GrammarFunctor.Make.Analysis.minimal_prod lib/grammarFunctor.ml(1723):51740-51794
                                 (after Gbnf_parser__GrammarFunctor.Make.Analysis.minimal_prod lib/grammarFunctor.ml(1723):51740-51794
                                   (apply
                                     (field_imm 10
                                       (global Gbnf_parser__CompletedNatWitness!))
                                     (after Gbnf_parser__GrammarFunctor.Make.Analysis.minimal_prod lib/grammarFunctor.ml(1723):51767-51794
                                       (apply (field_imm 2 MINIMAL/4217)
                                         prod/4834 i/4835)))))))))
                     maximal/4836 =
                       (function nt/4838[int] : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Analysis.maximal lib/grammarFunctor.ml(1725)<ghost>:51810-51865
                           (before Gbnf_parser__GrammarFunctor.Make.Analysis.maximal lib/grammarFunctor.ml(1726):51819-51865
                             (after Gbnf_parser__GrammarFunctor.Make.Analysis.maximal lib/grammarFunctor.ml(1726):51819-51865
                               (apply
                                 (field_imm 3
                                   (global Gbnf_parser__NatInfinityMax!))
                                 (after Gbnf_parser__GrammarFunctor.Make.Analysis.maximal lib/grammarFunctor.ml(1726):51841-51865
                                   (apply (field_imm 0 MAXIMAL/4319) nt/4838)))))))
                     maximal_prod/4839 =
                       (function prod/4841[int] i/4842[int] : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Analysis.maximal_prod lib/grammarFunctor.ml(1728)<ghost>:51886-52000
                           (before Gbnf_parser__GrammarFunctor.Make.Analysis.maximal_prod lib/grammarFunctor.ml(1729):51899-52000
                             (seq
                               (if
                                 (&& (<= 0 i/4842)
                                   (<= i/4842
                                     (after Gbnf_parser__GrammarFunctor.Make.Analysis.maximal_prod lib/grammarFunctor.ml(1729):51922-51944
                                       (apply (field_imm 20 Production/3564)
                                         prod/4841))))
                                 0
                                 (raise
                                   (after Gbnf_parser__GrammarFunctor.Make.Analysis.maximal_prod lib/grammarFunctor.ml(1729):51899-51945
                                     (makeblock 0 (global Assert_failure/28!)
                                       [0: "lib/grammarFunctor.ml" 1729 4]))))
                               (before Gbnf_parser__GrammarFunctor.Make.Analysis.maximal_prod lib/grammarFunctor.ml(1730):51951-52000
                                 (after Gbnf_parser__GrammarFunctor.Make.Analysis.maximal_prod lib/grammarFunctor.ml(1730):51951-52000
                                   (apply
                                     (field_imm 3
                                       (global Gbnf_parser__NatInfinityMax!))
                                     (after Gbnf_parser__GrammarFunctor.Make.Analysis.maximal_prod lib/grammarFunctor.ml(1730):51973-52000
                                       (apply (field_imm 2 MAXIMAL/4319)
                                         prod/4841 i/4842))))))))))
                    (pseudo Gbnf_parser__GrammarFunctor.Make.Analysis lib/grammarFunctor.ml(1677):50644-52005
                      (makeblock 0 nullable/4804 nullable_symbol/4805
                        first/4806 first_symbol/4807 nullable_first_prod/4812
                        first_prod_lookahead/4815 explain_first_rhs/4822
                        follow/4827 attributes/4828 minimal/4829
                        minimal_prod/4832 maximal/4836 maximal_prod/4839)))
                Precedence/4885 =
                  (let
                    (precedence_order/4854 =
                       (function p1/4856 p2/4857 : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Precedence.precedence_order lib/grammarFunctor.ml(1747)<ghost>:52304-52700
                           (before Gbnf_parser__GrammarFunctor.Make.Precedence.precedence_order lib/grammarFunctor.ml(1748):52316-52700
                             (catch
                               (if p1/4856
                                 (if p2/4857
                                   (let
                                     (l2/4861 =a (field_imm 1 p2/4857)
                                      m2/4860 =a (field_imm 0 p2/4857)
                                      l1/4859 =a (field_imm 1 p1/4856)
                                      m1/4858 =a (field_imm 0 p1/4856))
                                     (before Gbnf_parser__GrammarFunctor.Make.Precedence.precedence_order lib/grammarFunctor.ml(1753):52496-52700
                                       (if
                                         (not
                                           (after Gbnf_parser__GrammarFunctor.Make.Precedence.precedence_order lib/grammarFunctor.ml(1753):52503-52536
                                             (apply
                                               (field_imm 2
                                                 (global Gbnf_parser__InputFile!))
                                               m1/4858 m2/4860)))
                                         (before Gbnf_parser__GrammarFunctor.Make.Precedence.precedence_order lib/grammarFunctor.ml(1754):52554-52556
                                           3)
                                         (before Gbnf_parser__GrammarFunctor.Make.Precedence.precedence_order lib/grammarFunctor.ml(1756):52584-52700
                                           (if (> l1/4859 l2/4861)
                                             (before Gbnf_parser__GrammarFunctor.Make.Precedence.precedence_order lib/grammarFunctor.ml(1757):52614-52616
                                               1)
                                             (before Gbnf_parser__GrammarFunctor.Make.Precedence.precedence_order lib/grammarFunctor.ml(1758):52634-52700
                                               (if (< l1/4859 l2/4861)
                                                 (before Gbnf_parser__GrammarFunctor.Make.Precedence.precedence_order lib/grammarFunctor.ml(1759):52664-52666
                                                   0)
                                                 (before Gbnf_parser__GrammarFunctor.Make.Precedence.precedence_order lib/grammarFunctor.ml(1761):52698-52700
                                                   2))))))))
                                   (exit 120))
                                 (exit 120))
                              with (120)
                               (before Gbnf_parser__GrammarFunctor.Make.Precedence.precedence_order lib/grammarFunctor.ml(1751):52409-52411
                                 3)))))
                     production_order/4862 =
                       (function p1/4864 p2/4865 : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Precedence.production_order lib/grammarFunctor.ml(1763)<ghost>:52725-53031
                           (before Gbnf_parser__GrammarFunctor.Make.Precedence.production_order lib/grammarFunctor.ml(1764):52737-53031
                             (let
                               (l2/4869 =a (field_imm 1 p2/4865)
                                m2/4868 =a (field_imm 0 p2/4865)
                                l1/4867 =a (field_imm 1 p1/4864)
                                m1/4866 =a (field_imm 0 p1/4864))
                               (before Gbnf_parser__GrammarFunctor.Make.Precedence.production_order lib/grammarFunctor.ml(1766):52827-53031
                                 (if
                                   (not
                                     (after Gbnf_parser__GrammarFunctor.Make.Precedence.production_order lib/grammarFunctor.ml(1766):52834-52867
                                       (apply
                                         (field_imm 2
                                           (global Gbnf_parser__InputFile!))
                                         m1/4866 m2/4868)))
                                   (before Gbnf_parser__GrammarFunctor.Make.Precedence.production_order lib/grammarFunctor.ml(1767):52885-52887
                                     3)
                                   (before Gbnf_parser__GrammarFunctor.Make.Precedence.production_order lib/grammarFunctor.ml(1769):52915-53031
                                     (if (> l1/4867 l2/4869)
                                       (before Gbnf_parser__GrammarFunctor.Make.Precedence.production_order lib/grammarFunctor.ml(1770):52945-52947
                                         1)
                                       (before Gbnf_parser__GrammarFunctor.Make.Precedence.production_order lib/grammarFunctor.ml(1771):52965-53031
                                         (if (< l1/4867 l2/4869)
                                           (before Gbnf_parser__GrammarFunctor.Make.Precedence.production_order lib/grammarFunctor.ml(1772):52995-52997
                                             0)
                                           (before Gbnf_parser__GrammarFunctor.Make.Precedence.production_order lib/grammarFunctor.ml(1774):53029-53031
                                             2)))))))))))
                     shift_reduce/4870 =
                       (function tok/4872[int] prod/4873[int] : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1776)<ghost>:53052-54165
                           (before Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1777):53067-54165
                             (let
                               (*match*/13807 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1777):53086-53115
                                    (apply (field_imm 14 Terminal/2246)
                                      tok/4872))
                                tokp/4875 =a (field_imm 1 *match*/13807)
                                fact1/4874 =a (field_imm 0 *match*/13807)
                                *match*/13803 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1778):53139-53165
                                    (apply (field_imm 47 Production/3564)
                                      prod/4873))
                                prodp/4877 =a (field_imm 1 *match*/13803)
                                fact2/4876 =a (field_imm 0 *match*/13803))
                               (before Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1779):53173-54165
                                 (let
                                   (c/4878 =
                                      (after Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1779):53179-53206
                                        (apply precedence_order/4854
                                          tokp/4875 prodp/4877)))
                                   (if (>= c/4878 3)
                                     (before Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1785):53371-53379
                                       3)
                                     (before Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1791):53519-54165
                                       (seq
                                         (after Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1791):53519-53535
                                           (let
                                             (lzarg/13798 = fact1/4874
                                              tag/13799 =a
                                                (caml_obj_tag lzarg/13798))
                                             (if (== tag/13799 250)
                                               (field_mut 0 lzarg/13798)
                                               (if
                                                 (|| (== tag/13799 246)
                                                   (== tag/13799 244))
                                                 (apply
                                                   (field_imm 1
                                                     (global CamlinternalLazy!))
                                                   (opaque lzarg/13798))
                                                 lzarg/13798))))
                                         (before Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1792):53545-54165
                                           (seq
                                             (after Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1792):53545-53561
                                               (let
                                                 (lzarg/13796 = fact2/4876
                                                  tag/13797 =a
                                                    (caml_obj_tag
                                                      lzarg/13796))
                                                 (if (== tag/13797 250)
                                                   (field_mut 0 lzarg/13796)
                                                   (if
                                                     (|| (== tag/13797 246)
                                                       (== tag/13797 244))
                                                     (apply
                                                       (field_imm 1
                                                         (global CamlinternalLazy!))
                                                       (opaque lzarg/13796))
                                                     lzarg/13796))))
                                             (before Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1793):53571-54165
                                               (switch* c/4878
                                                case int 0:
                                                 (before Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1810):54112-54124
                                                   1)
                                                case int 1:
                                                 (before Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1813):54154-54165
                                                   0)
                                                case int 2:
                                                 (before Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1799):53680-54082
                                                   (let
                                                     (*match*/13795 =
                                                        (after Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1800):53706-53732
                                                          (apply
                                                            (field_imm 15
                                                              Terminal/2246)
                                                            tok/4872)))
                                                     (switch* *match*/13795
                                                      case int 0:
                                                       (before Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1801):53768-53780
                                                         1)
                                                      case int 1:
                                                       (before Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1802):53811-53822
                                                         0)
                                                      case int 2:
                                                       (before Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1803):53853-53866
                                                         2)
                                                      case int 3:
                                                       (before Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1804):53897-53909
                                                         (raise
                                                           (after Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1804):53897-53909
                                                             (makeblock 0
                                                               (global Assert_failure/28!)
                                                               [0:
                                                                "lib/grammarFunctor.ml"
                                                                1804 30])))))))
                                                case int 3:
                                                 (before Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1796):53613-53625
                                                   (raise
                                                     (after Gbnf_parser__GrammarFunctor.Make.Precedence.shift_reduce lib/grammarFunctor.ml(1796):53613-53625
                                                       (makeblock 0
                                                         (global Assert_failure/28!)
                                                         [0:
                                                          "lib/grammarFunctor.ml"
                                                          1796 12])))))))))))))))))
                     reduce_reduce/4879 =
                       (function prod1/4881[int] prod2/4882[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Precedence.reduce_reduce lib/grammarFunctor.ml(1816)<ghost>:54188-54749
                           (before Gbnf_parser__GrammarFunctor.Make.Precedence.reduce_reduce lib/grammarFunctor.ml(1817):54206-54749
                             (let
                               (pl1/4883 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Precedence.reduce_reduce lib/grammarFunctor.ml(1817):54216-54251
                                    (array.get[addr]
                                      (field_imm 7 Production/3564)
                                      prod1/4881))
                                pl2/4884 =
                                  (after Gbnf_parser__GrammarFunctor.Make.Precedence.reduce_reduce lib/grammarFunctor.ml(1818):54266-54301
                                    (array.get[addr]
                                      (field_imm 7 Production/3564)
                                      prod2/4882)))
                               (before Gbnf_parser__GrammarFunctor.Make.Precedence.reduce_reduce lib/grammarFunctor.ml(1819):54309-54749
                                 (let
                                   (*match*/13808 =
                                      (after Gbnf_parser__GrammarFunctor.Make.Precedence.reduce_reduce lib/grammarFunctor.ml(1819):54315-54339
                                        (apply production_order/4862 pl1/4883
                                          pl2/4884)))
                                   (switch* *match*/13808
                                    case int 0:
                                     (before Gbnf_parser__GrammarFunctor.Make.Precedence.reduce_reduce lib/grammarFunctor.ml(1821):54365-54375
                                       (makeblock 0 (int) prod1/4881))
                                    case int 1:
                                     (before Gbnf_parser__GrammarFunctor.Make.Precedence.reduce_reduce lib/grammarFunctor.ml(1823):54396-54406
                                       (makeblock 0 (int) prod2/4882))
                                    case int 2:
                                     (before Gbnf_parser__GrammarFunctor.Make.Precedence.reduce_reduce lib/grammarFunctor.ml(1829):54720-54724
                                       0)
                                    case int 3:
                                     (before Gbnf_parser__GrammarFunctor.Make.Precedence.reduce_reduce lib/grammarFunctor.ml(1831):54745-54749
                                       0)))))))))
                    (pseudo Gbnf_parser__GrammarFunctor.Make.Precedence lib/grammarFunctor.ml(1737):52150-54754
                      (makeblock 0 precedence_order/4854
                        production_order/4862 shift_reduce/4870
                        reduce_reduce/4879)))
                OnErrorReduce/4908 =
                  (let
                    (declarations/4886 = (field_imm 6 (field_imm 0 G/1226))
                     print/4887 =
                       (function nt/4888[int]
                         (funct-body Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.print lib/grammarFunctor.ml(1857)<ghost>:55626-55688
                           (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.print lib/grammarFunctor.ml(1858):55662-55688
                             (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.print lib/grammarFunctor.ml(1858):55662-55688
                               (apply (field_imm 10 Nonterminal/2057) 0
                                 nt/4888)))))
                     lookup/4889 =
                       (function nt/4891 : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.lookup lib/grammarFunctor.ml(1860)<ghost>:55703-55917
                           (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.lookup lib/grammarFunctor.ml(1861):55739-55917
                             (try
                               (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.lookup lib/grammarFunctor.ml(1862):55749-55770
                                 (apply (field_imm 11 Nonterminal/2057)
                                   nt/4891))
                              with exn/13809
                               (if
                                 (== exn/13809
                                   (field_imm 7 (global Stdlib!)))
                                 (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.lookup lib/grammarFunctor.ml(1866):55905-55917
                                   (raise
                                     (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.lookup lib/grammarFunctor.ml(1866):55905-55917
                                       (makeblock 0
                                         (global Assert_failure/28!)
                                         [0: "lib/grammarFunctor.ml" 1866 6]))))
                                 (reraise exn/13809))))))
                     reduce/4892 =
                       (function prod/4894[int] : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.reduce lib/grammarFunctor.ml(1868)<ghost>:55932-56015
                           (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.reduce lib/grammarFunctor.ml(1869):55943-56015
                             (let
                               (nt/4895 =[int]
                                  (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.reduce lib/grammarFunctor.ml(1869):55952-55970
                                    (apply (field_imm 18 Production/3564)
                                      prod/4894)))
                               (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.reduce lib/grammarFunctor.ml(1870):55978-56015
                                 (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.reduce lib/grammarFunctor.ml(1870):55978-56015
                                   (apply
                                     (field_imm 29
                                       (global Gbnf_parser__StringMap!))
                                     (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.reduce lib/grammarFunctor.ml(1870):55992-56002
                                       (apply print/4887 nt/4895))
                                     declarations/4886)))))))
                     iter/4896 =
                       (function f/4897 : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.iter lib/grammarFunctor.ml(1872)<ghost>:56028-56106
                           (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.iter lib/grammarFunctor.ml(1873):56036-56106
                             (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.iter lib/grammarFunctor.ml(1873):56036-56106
                               (apply
                                 (field_imm 21
                                   (global Gbnf_parser__StringMap!))
                                 (function nt/4898 _prec/4899 : int
                                   (funct-body Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.iter.(fun) lib/grammarFunctor.ml(1873):56051-56093
                                     (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.iter.(fun) lib/grammarFunctor.ml(1874):56074-56087
                                       (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.iter.(fun) lib/grammarFunctor.ml(1874):56074-56087
                                         (apply f/4897
                                           (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.iter.(fun) lib/grammarFunctor.ml(1874):56076-56087
                                             (apply lookup/4889 nt/4898)))))))
                                 declarations/4886)))))
                     preferable/4900 =
                       (function prod1/4902[int] prod2/4903[int] : int
                         (funct-body Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1879)<ghost>:56144-57276
                           (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1881):56232-57276
                             (seq
                               (if (!= prod1/4902 prod2/4903) 0
                                 (raise
                                   (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1881):56232-56255
                                     (makeblock 0 (global Assert_failure/28!)
                                       [0: "lib/grammarFunctor.ml" 1881 4]))))
                               (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1882):56261-57276
                                 (let
                                   (nt1/4904 =[int]
                                      (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1882):56271-56290
                                        (apply (field_imm 18 Production/3564)
                                          prod1/4902))
                                    nt2/4905 =[int]
                                      (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1883):56305-56324
                                        (apply (field_imm 18 Production/3564)
                                          prod2/4903)))
                                   (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1886):56445-57276
                                     (&& (!= nt1/4904 nt2/4905)
                                       (catch
                                         (try
                                           (let
                                             (prec2/13813 =
                                                (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1892):56646-56685
                                                  (apply
                                                    (field_imm 15
                                                      (global Gbnf_parser__StringMap!))
                                                    (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1892):56661-56672
                                                      (apply print/4887
                                                        nt2/4905))
                                                    declarations/4886))
                                              prec1/13812 =
                                                (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1891):56597-56636
                                                  (apply
                                                    (field_imm 15
                                                      (global Gbnf_parser__StringMap!))
                                                    (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1891):56612-56623
                                                      (apply print/4887
                                                        nt1/4904))
                                                    declarations/4886)))
                                             (exit 133 prec1/13812
                                               prec2/13813))
                                          with exn/13811
                                           (if
                                             (== exn/13811
                                               (field_imm 7 (global Stdlib!)))
                                             (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1896):56849-56861
                                               (raise
                                                 (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1896):56849-56861
                                                   (makeblock 0
                                                     (global Assert_failure/28!)
                                                     [0:
                                                      "lib/grammarFunctor.ml"
                                                      1896 8]))))
                                             (reraise exn/13811)))
                                        with (133 prec1/4906 prec2/4907)
                                         (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1898):56873-57276
                                           (let
                                             (*match*/13810 =
                                                (after Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1898):56879-56907
                                                  (apply
                                                    (field_imm 1
                                                      Precedence/4885)
                                                    prec1/4906 prec2/4907)))
                                             (if (!= *match*/13810 1)
                                               (if *match*/13810
                                                 (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1909):57271-57276
                                                   0)
                                                 (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1905):57155-57160
                                                   0))
                                               (before Gbnf_parser__GrammarFunctor.Make.OnErrorReduce.preferable lib/grammarFunctor.ml(1903):57130-57134
                                                 1))))))))))))))
                    (pseudo Gbnf_parser__GrammarFunctor.Make.OnErrorReduce lib/grammarFunctor.ml(1848):55303-57281
                      (makeblock 0 declarations/4886 print/4887 lookup/4889
                        reduce/4892 iter/4896 preferable/4900)))
                Sentence/4930 =
                  (let
                    (print_abstract/4910 =
                       (function param/4918
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract lib/grammarFunctor.ml(1923)<ghost>:57528-57859
                           (let
                             (terminals/4913 =a (field_imm 1 param/4918)
                              nto/4912 =a (field_imm 0 param/4918))
                             (before Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract lib/grammarFunctor.ml(1924):57560-57859
                               (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract lib/grammarFunctor.ml(1924):57560-57859
                                 (apply
                                   (field_imm 4 (global Gbnf_parser__Misc!))
                                   128
                                   (function b/4914 : int
                                     (funct-body Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1924):57581-57859
                                       (before Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1925):57597-57853
                                         (seq
                                           (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1925):57597-57685
                                             (apply
                                               (field_imm 8
                                                 (global Stdlib__Option!))
                                               (function nt/4915[int] : int
                                                 (funct-body Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1925):57609-57681
                                                   (before Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1926):57628-57673
                                                     (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1926):57628-57673
                                                       (apply
                                                         (field_imm 4
                                                           (global Stdlib__Printf!))
                                                         b/4914
                                                         [0:
                                                          [2: 0 [11: ": " 0]]
                                                          "%s: "]
                                                         (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1926):57645-57673
                                                           (apply
                                                             (field_imm 10
                                                               Nonterminal/2057)
                                                             0 nt/4915)))))))
                                               nto/4912))
                                           (before Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1928):57693-57853
                                             (let
                                               (separator/4916 =
                                                  (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1928):57709-57725
                                                    (apply
                                                      (field_imm 32
                                                        (global Gbnf_parser__Misc!))
                                                      "" " ")))
                                               (before Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1929):57735-57853
                                                 (seq
                                                   (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1929):57735-57830
                                                     (apply
                                                       (field_imm 17
                                                         (global Stdlib__List!))
                                                       (function t/4917[int]
                                                         : int
                                                         (funct-body Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1929):57745-57820
                                                           (before Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1930):57763-57812
                                                             (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1930):57763-57812
                                                               (apply
                                                                 (field_imm 4
                                                                   (global Stdlib__Printf!))
                                                                 b/4914
                                                                 [0:
                                                                  [2:
                                                                   0 [2: 0 0]]
                                                                  "%s%s"]
                                                                 (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1930):57780-57793
                                                                   (apply
                                                                    separator/4916
                                                                    0))
                                                                 (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1930):57794-57812
                                                                   (apply
                                                                    (field_imm 6
                                                                    Terminal/2246)
                                                                    t/4917)))))))
                                                       terminals/4913))
                                                   (before Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1932):57838-57852
                                                     (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_abstract.(fun) lib/grammarFunctor.ml(1932):57838-57852
                                                       (apply
                                                         (field_imm 4
                                                           (global Stdlib__Printf!))
                                                         b/4914
                                                         [0:
                                                          [12: '\n' 0] "\n"])))))))))))))))))
                     print_concrete/4919 =
                       (function param/4926
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Sentence.print_concrete lib/grammarFunctor.ml(1935)<ghost>:57882-58104
                           (let (terminals/4922 =a (field_imm 1 param/4926))
                             (before Gbnf_parser__GrammarFunctor.Make.Sentence.print_concrete lib/grammarFunctor.ml(1936):57915-58104
                               (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_concrete lib/grammarFunctor.ml(1936):57915-58104
                                 (apply
                                   (field_imm 4 (global Gbnf_parser__Misc!))
                                   128
                                   (function b/4923 : int
                                     (funct-body Gbnf_parser__GrammarFunctor.Make.Sentence.print_concrete.(fun) lib/grammarFunctor.ml(1936):57936-58104
                                       (before Gbnf_parser__GrammarFunctor.Make.Sentence.print_concrete.(fun) lib/grammarFunctor.ml(1937):57952-58098
                                         (let
                                           (separator/4924 =
                                              (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_concrete.(fun) lib/grammarFunctor.ml(1937):57968-57984
                                                (apply
                                                  (field_imm 32
                                                    (global Gbnf_parser__Misc!))
                                                  "" " ")))
                                           (before Gbnf_parser__GrammarFunctor.Make.Sentence.print_concrete.(fun) lib/grammarFunctor.ml(1938):57994-58098
                                             (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_concrete.(fun) lib/grammarFunctor.ml(1938):57994-58098
                                               (apply
                                                 (field_imm 17
                                                   (global Stdlib__List!))
                                                 (function t/4925 : int
                                                   (funct-body Gbnf_parser__GrammarFunctor.Make.Sentence.print_concrete.(fun) lib/grammarFunctor.ml(1938):58004-58088
                                                     (before Gbnf_parser__GrammarFunctor.Make.Sentence.print_concrete.(fun) lib/grammarFunctor.ml(1939):58022-58080
                                                       (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_concrete.(fun) lib/grammarFunctor.ml(1939):58022-58080
                                                         (apply
                                                           (field_imm 4
                                                             (global Stdlib__Printf!))
                                                           b/4923
                                                           [0:
                                                            [2: 0 [2: 0 0]]
                                                            "%s%s"]
                                                           (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_concrete.(fun) lib/grammarFunctor.ml(1939):58039-58052
                                                             (apply
                                                               separator/4924
                                                               0))
                                                           (after Gbnf_parser__GrammarFunctor.Make.Sentence.print_concrete.(fun) lib/grammarFunctor.ml(1939):58053-58080
                                                             (apply
                                                               (field_imm 28
                                                                 Terminal/2246)
                                                               t/4925)))))))
                                                 terminals/4922)))))))))))))
                     print/4927 =
                       (function style/4928[int] sentence/4929
                         (funct-body Gbnf_parser__GrammarFunctor.Make.Sentence.print lib/grammarFunctor.ml(1943)<ghost>:58118-58257
                           (before Gbnf_parser__GrammarFunctor.Make.Sentence.print lib/grammarFunctor.ml(1944):58139-58257
                             (if (>= style/4928 36732162)
                               (before Gbnf_parser__GrammarFunctor.Make.Sentence.print lib/grammarFunctor.ml(1946):58183-58206
                                 (after Gbnf_parser__GrammarFunctor.Make.Sentence.print lib/grammarFunctor.ml(1946):58183-58206
                                   (apply print_abstract/4910 sentence/4929)))
                               (before Gbnf_parser__GrammarFunctor.Make.Sentence.print lib/grammarFunctor.ml(1948):58234-58257
                                 (after Gbnf_parser__GrammarFunctor.Make.Sentence.print lib/grammarFunctor.ml(1948):58234-58257
                                   (apply print_concrete/4919 sentence/4929))))))))
                    (pseudo Gbnf_parser__GrammarFunctor.Make.Sentence lib/grammarFunctor.ml(1916):57422-58262
                      (makeblock 0 print_abstract/4910 print_concrete/4919
                        print/4927))))
               (pseudo Gbnf_parser__GrammarFunctor.Make lib/grammarFunctor.ml(28):1359-58347
                 (makeblock 0 index/1227 TokPrecedence/1946 Nonterminal/2057
                   Terminal/2246 TerminalSet/2387 Symbol/2545 SymbolSet/2738
                   SymbolMap/2943 Production/3564
                   grammar_uses_error_token/3565 ProductionMap/3611
                   GenericAnalysis/4037 NONEMPTY/4094 NULLABLE/4123
                   FIRST/4150 MINIMAL/4217 generates_nonempty_word/4218
                   G/4244 unbounded/4282 MAXIMAL/4319 FOLLOW/4509 follow/4510
                   tfollow/4652 sfirst/4654 sfollow/4663 explain/4783
                   convert/4797 Analysis/4843 Precedence/4885
                   OnErrorReduce/4908 Sentence/4930))))))
     *match*/13831 =
       (after Gbnf_parser__GrammarFunctor lib/grammarFunctor.ml(1954)<ghost>:58347-58347
         (apply (field_imm 5 (global Ppx_inline_test_lib!)) "gbnf_parser"))
     *match*/13829 =
       (after Gbnf_parser__GrammarFunctor lib/grammarFunctor.ml(1954)<ghost>:58347-58347
         (apply (field_imm 1 (field_imm 5 (global Expect_test_collector!)))
           0))
     *match*/13827 =
       (after Gbnf_parser__GrammarFunctor lib/grammarFunctor.ml(1954)<ghost>:58347-58347
         (apply
           (field_imm 1
             (field_imm 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
           0))
     *match*/13825 =
       (after Gbnf_parser__GrammarFunctor lib/grammarFunctor.ml(1954)<ghost>:58347-58347
         (apply (field_imm 4 (global Ppx_module_timer_runtime!))
           #"Gbnf_parser__GrammarFunctor")))
    (pseudo <unknown location> (makeblock 0 Make/5132))))
