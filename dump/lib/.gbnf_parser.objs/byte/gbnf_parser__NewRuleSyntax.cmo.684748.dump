[
  structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
    Pstr_attribute "ocaml.ppx.context"
    [
      structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
        Pstr_eval
        expression (_none_[0,0+-1]..[0,0+-1]) ghost
          Pexp_record
          [
            "tool_name" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_constant PConst_string("ppx_driver",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
            "include_dirs" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "load_path" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "open_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "for_package" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "None" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "debug" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_threads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_vmthreads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "recursive_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "principal" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "transparent_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unboxed_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unsafe_string" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "cookies" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                Some
                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                    Pexp_tuple
                    [
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_tuple
                        [
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_constant PConst_string("inline_tests",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                          expression (<command-line>[1,0+0]..[1,0+9])
                            Pexp_constant PConst_string("enabled",(<command-line>[1,0+1]..[1,0+8]),None)
                        ]
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                        Some
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_tuple
                            [
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_tuple
                                [
                                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                    Pexp_constant PConst_string("library-name",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                                  expression (<command-line>[1,0+0]..[1,0+13])
                                    Pexp_constant PConst_string("gbnf_parser",(<command-line>[1,0+1]..[1,0+12]),None)
                                ]
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                                None
                            ]
                    ]
          ]
          None
    ]
  structure_item (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
          Ppat_construct "()" (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
          None
        expression (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
          Pexp_apply
          expression (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
            Pexp_ident "Ppx_module_timer_runtime.record_start" (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
                Pexp_ident "Ppx_module_timer_runtime.__MODULE__" (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
          Ppat_construct "()" (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
          None
        expression (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
          Pexp_apply
          expression (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
            Pexp_ident "Ppx_bench_lib.Benchmark_accumulator.Current_libname.set" (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
          Ppat_construct "()" (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
          None
        expression (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
          Pexp_apply
          expression (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
            Pexp_ident "Expect_test_collector.Current_file.set" (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
          [
            <arg>
            Labelled "absolute_filename"
              expression (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
                Pexp_constant PConst_string("lib/newRuleSyntax.ml",(lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
          Ppat_construct "()" (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
          None
        expression (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
          Pexp_apply
          expression (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
            Pexp_ident "Ppx_inline_test_lib.set_lib_and_partition" (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost,None)
            <arg>
            Nolabel
              expression (lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost
                Pexp_constant PConst_string("newRuleSyntax.ml",(lib/newRuleSyntax.ml[14,976+0]..[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[14,976+0]..[14,976+11])
    Pstr_open Fresh
    module_expr (lib/newRuleSyntax.ml[14,976+5]..[14,976+11])
      Pmod_ident "Syntax" (lib/newRuleSyntax.ml[14,976+5]..[14,976+11])
  structure_item (lib/newRuleSyntax.ml[25,1413+0]..[26,1430+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[25,1413+4]..[25,1413+8])
          Ppat_var ">>" (lib/newRuleSyntax.ml[25,1413+4]..[25,1413+8])
        expression (lib/newRuleSyntax.ml[25,1413+9]..[26,1430+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/newRuleSyntax.ml[25,1413+9]..[25,1413+10])
            Ppat_var "f" (lib/newRuleSyntax.ml[25,1413+9]..[25,1413+10])
          expression (lib/newRuleSyntax.ml[25,1413+11]..[26,1430+9]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/newRuleSyntax.ml[25,1413+11]..[25,1413+12])
              Ppat_var "g" (lib/newRuleSyntax.ml[25,1413+11]..[25,1413+12])
            expression (lib/newRuleSyntax.ml[25,1413+13]..[26,1430+9]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/newRuleSyntax.ml[25,1413+13]..[25,1413+14])
                Ppat_var "x" (lib/newRuleSyntax.ml[25,1413+13]..[25,1413+14])
              expression (lib/newRuleSyntax.ml[26,1430+2]..[26,1430+9])
                Pexp_apply
                expression (lib/newRuleSyntax.ml[26,1430+2]..[26,1430+3])
                  Pexp_ident "g" (lib/newRuleSyntax.ml[26,1430+2]..[26,1430+3])
                [
                  <arg>
                  Nolabel
                    expression (lib/newRuleSyntax.ml[26,1430+4]..[26,1430+9])
                      Pexp_apply
                      expression (lib/newRuleSyntax.ml[26,1430+5]..[26,1430+6])
                        Pexp_ident "f" (lib/newRuleSyntax.ml[26,1430+5]..[26,1430+6])
                      [
                        <arg>
                        Nolabel
                          expression (lib/newRuleSyntax.ml[26,1430+7]..[26,1430+8])
                            Pexp_ident "x" (lib/newRuleSyntax.ml[26,1430+7]..[26,1430+8])
                      ]
                ]
    ]
  structure_item (lib/newRuleSyntax.ml[63,3014+0]..[76,3551+5])
    Pstr_value Rec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[63,3014+8]..[63,3014+20])
          Ppat_var "resolve_puns" (lib/newRuleSyntax.ml[63,3014+8]..[63,3014+20])
        expression (lib/newRuleSyntax.ml[63,3014+21]..[76,3551+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/newRuleSyntax.ml[63,3014+21]..[63,3014+41])
            Ppat_constraint
            pattern (lib/newRuleSyntax.ml[63,3014+22]..[63,3014+23])
              Ppat_var "e" (lib/newRuleSyntax.ml[63,3014+22]..[63,3014+23])
            core_type (lib/newRuleSyntax.ml[63,3014+26]..[63,3014+40])
              Ptyp_constr "seq_expression" (lib/newRuleSyntax.ml[63,3014+26]..[63,3014+40])
              []
          expression (lib/newRuleSyntax.ml[63,3014+42]..[76,3551+5])
            Pexp_constraint
            expression (lib/newRuleSyntax.ml[64,3075+2]..[76,3551+5])
              Pexp_apply
              expression (lib/newRuleSyntax.ml[64,3075+2]..[64,3075+15])
                Pexp_ident "Positions.map" (lib/newRuleSyntax.ml[64,3075+2]..[64,3075+15])
              [
                <arg>
                Nolabel
                  expression (lib/newRuleSyntax.ml[64,3075+16]..[76,3551+3])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lib/newRuleSyntax.ml[64,3075+21]..[64,3075+22])
                      Ppat_var "e" (lib/newRuleSyntax.ml[64,3075+21]..[64,3075+22])
                    expression (lib/newRuleSyntax.ml[65,3101+4]..[75,3541+9])
                      Pexp_match
                      expression (lib/newRuleSyntax.ml[65,3101+10]..[65,3101+11])
                        Pexp_ident "e" (lib/newRuleSyntax.ml[65,3101+10]..[65,3101+11])
                      [
                        <case>
                          pattern (lib/newRuleSyntax.ml[71,3435+6]..[71,3435+24])
                            Ppat_construct "ECons" (lib/newRuleSyntax.ml[71,3435+6]..[71,3435+11])
                            Some
                              []
                              pattern (lib/newRuleSyntax.ml[71,3435+12]..[71,3435+24])
                                Ppat_tuple
                                [
                                  pattern (lib/newRuleSyntax.ml[71,3435+13]..[71,3435+15])
                                    Ppat_var "p1" (lib/newRuleSyntax.ml[71,3435+13]..[71,3435+15])
                                  pattern (lib/newRuleSyntax.ml[71,3435+17]..[71,3435+19])
                                    Ppat_var "e1" (lib/newRuleSyntax.ml[71,3435+17]..[71,3435+19])
                                  pattern (lib/newRuleSyntax.ml[71,3435+21]..[71,3435+23])
                                    Ppat_var "e2" (lib/newRuleSyntax.ml[71,3435+21]..[71,3435+23])
                                ]
                          expression (lib/newRuleSyntax.ml[72,3463+8]..[72,3463+39])
                            Pexp_construct "ECons" (lib/newRuleSyntax.ml[72,3463+8]..[72,3463+13])
                            Some
                              expression (lib/newRuleSyntax.ml[72,3463+14]..[72,3463+39])
                                Pexp_tuple
                                [
                                  expression (lib/newRuleSyntax.ml[72,3463+15]..[72,3463+17])
                                    Pexp_ident "p1" (lib/newRuleSyntax.ml[72,3463+15]..[72,3463+17])
                                  expression (lib/newRuleSyntax.ml[72,3463+19]..[72,3463+21])
                                    Pexp_ident "e1" (lib/newRuleSyntax.ml[72,3463+19]..[72,3463+21])
                                  expression (lib/newRuleSyntax.ml[72,3463+23]..[72,3463+38])
                                    Pexp_apply
                                    expression (lib/newRuleSyntax.ml[72,3463+23]..[72,3463+35])
                                      Pexp_ident "resolve_puns" (lib/newRuleSyntax.ml[72,3463+23]..[72,3463+35])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/newRuleSyntax.ml[72,3463+36]..[72,3463+38])
                                          Pexp_ident "e2" (lib/newRuleSyntax.ml[72,3463+36]..[72,3463+38])
                                    ]
                                ]
                        <case>
                          pattern (lib/newRuleSyntax.ml[73,3503+6]..[74,3522+15])
                            Ppat_or
                            pattern (lib/newRuleSyntax.ml[73,3503+6]..[73,3503+18])
                              Ppat_construct "ESingleton" (lib/newRuleSyntax.ml[73,3503+6]..[73,3503+16])
                              Some
                                []
                                pattern (lib/newRuleSyntax.ml[73,3503+17]..[73,3503+18])
                                  Ppat_any
                            pattern (lib/newRuleSyntax.ml[74,3522+6]..[74,3522+15])
                              Ppat_construct "EAction" (lib/newRuleSyntax.ml[74,3522+6]..[74,3522+13])
                              Some
                                []
                                pattern (lib/newRuleSyntax.ml[74,3522+14]..[74,3522+15])
                                  Ppat_any
                          expression (lib/newRuleSyntax.ml[75,3541+8]..[75,3541+9])
                            Pexp_ident "e" (lib/newRuleSyntax.ml[75,3541+8]..[75,3541+9])
                      ]
                <arg>
                Nolabel
                  expression (lib/newRuleSyntax.ml[76,3551+4]..[76,3551+5])
                    Pexp_ident "e" (lib/newRuleSyntax.ml[76,3551+4]..[76,3551+5])
              ]
            core_type (lib/newRuleSyntax.ml[63,3014+44]..[63,3014+58])
              Ptyp_constr "seq_expression" (lib/newRuleSyntax.ml[63,3014+44]..[63,3014+58])
              []
    ]
  structure_item (lib/newRuleSyntax.ml[87,3899+0]..[105,4453+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[87,3899+4]..[87,3899+19])
          Ppat_var "check_linearity" (lib/newRuleSyntax.ml[87,3899+4]..[87,3899+19])
        expression (lib/newRuleSyntax.ml[87,3899+20]..[105,4453+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/newRuleSyntax.ml[87,3899+20]..[87,3899+39])
            Ppat_constraint
            pattern (lib/newRuleSyntax.ml[87,3899+21]..[87,3899+23])
              Ppat_var "ps" (lib/newRuleSyntax.ml[87,3899+21]..[87,3899+23])
            core_type (lib/newRuleSyntax.ml[87,3899+26]..[87,3899+38])
              Ptyp_constr "list" (lib/newRuleSyntax.ml[87,3899+34]..[87,3899+38])
              [
                core_type (lib/newRuleSyntax.ml[87,3899+26]..[87,3899+33])
                  Ptyp_constr "pattern" (lib/newRuleSyntax.ml[87,3899+26]..[87,3899+33])
                  []
              ]
          expression (lib/newRuleSyntax.ml[89,3942+2]..[105,4453+5])
            Pexp_let Rec
            [
              <def>
                pattern (lib/newRuleSyntax.ml[89,3942+10]..[89,3942+15])
                  Ppat_var "build" (lib/newRuleSyntax.ml[89,3942+10]..[89,3942+15])
                expression (lib/newRuleSyntax.ml[89,3942+16]..[98,4213+33]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lib/newRuleSyntax.ml[89,3942+16]..[89,3942+53])
                    Ppat_constraint
                    pattern (lib/newRuleSyntax.ml[89,3942+17]..[89,3942+18])
                      Ppat_var "m" (lib/newRuleSyntax.ml[89,3942+17]..[89,3942+18])
                    core_type (lib/newRuleSyntax.ml[89,3942+21]..[89,3942+52])
                      Ptyp_constr "StringMap.t" (lib/newRuleSyntax.ml[89,3942+41]..[89,3942+52])
                      [
                        core_type (lib/newRuleSyntax.ml[89,3942+21]..[89,3942+40])
                          Ptyp_constr "Positions.positions" (lib/newRuleSyntax.ml[89,3942+21]..[89,3942+40])
                          []
                      ]
                  expression (lib/newRuleSyntax.ml[89,3942+54]..[98,4213+33]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lib/newRuleSyntax.ml[89,3942+54]..[89,3942+67])
                      Ppat_constraint
                      pattern (lib/newRuleSyntax.ml[89,3942+55]..[89,3942+56])
                        Ppat_var "p" (lib/newRuleSyntax.ml[89,3942+55]..[89,3942+56])
                      core_type (lib/newRuleSyntax.ml[89,3942+59]..[89,3942+66])
                        Ptyp_constr "pattern" (lib/newRuleSyntax.ml[89,3942+59]..[89,3942+66])
                        []
                    expression (lib/newRuleSyntax.ml[90,4012+4]..[98,4213+33])
                      Pexp_match
                      expression (lib/newRuleSyntax.ml[90,4012+10]..[90,4012+11])
                        Pexp_ident "p" (lib/newRuleSyntax.ml[90,4012+10]..[90,4012+11])
                      [
                        <case>
                          pattern (lib/newRuleSyntax.ml[91,4029+6]..[91,4029+17])
                            Ppat_construct "SemPatVar" (lib/newRuleSyntax.ml[91,4029+6]..[91,4029+15])
                            Some
                              []
                              pattern (lib/newRuleSyntax.ml[91,4029+16]..[91,4029+17])
                                Ppat_var "x" (lib/newRuleSyntax.ml[91,4029+16]..[91,4029+17])
                          expression (lib/newRuleSyntax.ml[92,4050+8]..[93,4096+38])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/newRuleSyntax.ml[92,4050+12]..[92,4050+18])
                                  Ppat_tuple
                                  [
                                    pattern (lib/newRuleSyntax.ml[92,4050+12]..[92,4050+13])
                                      Ppat_var "x" (lib/newRuleSyntax.ml[92,4050+12]..[92,4050+13])
                                    pattern (lib/newRuleSyntax.ml[92,4050+15]..[92,4050+18])
                                      Ppat_var "pos" (lib/newRuleSyntax.ml[92,4050+15]..[92,4050+18])
                                  ]
                                expression (lib/newRuleSyntax.ml[92,4050+21]..[92,4050+42])
                                  Pexp_apply
                                  expression (lib/newRuleSyntax.ml[92,4050+21]..[92,4050+40])
                                    Pexp_ident "Positions.decompose" (lib/newRuleSyntax.ml[92,4050+21]..[92,4050+40])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/newRuleSyntax.ml[92,4050+41]..[92,4050+42])
                                        Pexp_ident "x" (lib/newRuleSyntax.ml[92,4050+41]..[92,4050+42])
                                  ]
                            ]
                            expression (lib/newRuleSyntax.ml[93,4096+8]..[93,4096+38])
                              Pexp_apply
                              expression (lib/newRuleSyntax.ml[93,4096+8]..[93,4096+30])
                                Pexp_ident "StringMap.multiple_add" (lib/newRuleSyntax.ml[93,4096+8]..[93,4096+30])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/newRuleSyntax.ml[93,4096+31]..[93,4096+32])
                                    Pexp_ident "x" (lib/newRuleSyntax.ml[93,4096+31]..[93,4096+32])
                                <arg>
                                Nolabel
                                  expression (lib/newRuleSyntax.ml[93,4096+33]..[93,4096+36])
                                    Pexp_ident "pos" (lib/newRuleSyntax.ml[93,4096+33]..[93,4096+36])
                                <arg>
                                Nolabel
                                  expression (lib/newRuleSyntax.ml[93,4096+37]..[93,4096+38])
                                    Pexp_ident "m" (lib/newRuleSyntax.ml[93,4096+37]..[93,4096+38])
                              ]
                        <case>
                          pattern (lib/newRuleSyntax.ml[94,4135+6]..[95,4156+19])
                            Ppat_or
                            pattern (lib/newRuleSyntax.ml[94,4135+6]..[94,4135+20])
                              Ppat_construct "SemPatWildcard" (lib/newRuleSyntax.ml[94,4135+6]..[94,4135+20])
                              None
                            pattern (lib/newRuleSyntax.ml[95,4156+6]..[95,4156+19])
                              Ppat_construct "SemPatTilde" (lib/newRuleSyntax.ml[95,4156+6]..[95,4156+17])
                              Some
                                []
                                pattern (lib/newRuleSyntax.ml[95,4156+18]..[95,4156+19])
                                  Ppat_any
                          expression (lib/newRuleSyntax.ml[96,4179+8]..[96,4179+9])
                            Pexp_ident "m" (lib/newRuleSyntax.ml[96,4179+8]..[96,4179+9])
                        <case>
                          pattern (lib/newRuleSyntax.ml[97,4189+6]..[97,4189+20])
                            Ppat_construct "SemPatTuple" (lib/newRuleSyntax.ml[97,4189+6]..[97,4189+17])
                            Some
                              []
                              pattern (lib/newRuleSyntax.ml[97,4189+18]..[97,4189+20])
                                Ppat_var "ps" (lib/newRuleSyntax.ml[97,4189+18]..[97,4189+20])
                          expression (lib/newRuleSyntax.ml[98,4213+8]..[98,4213+33])
                            Pexp_apply
                            expression (lib/newRuleSyntax.ml[98,4213+8]..[98,4213+22])
                              Pexp_ident "List.fold_left" (lib/newRuleSyntax.ml[98,4213+8]..[98,4213+22])
                            [
                              <arg>
                              Nolabel
                                expression (lib/newRuleSyntax.ml[98,4213+23]..[98,4213+28])
                                  Pexp_ident "build" (lib/newRuleSyntax.ml[98,4213+23]..[98,4213+28])
                              <arg>
                              Nolabel
                                expression (lib/newRuleSyntax.ml[98,4213+29]..[98,4213+30])
                                  Pexp_ident "m" (lib/newRuleSyntax.ml[98,4213+29]..[98,4213+30])
                              <arg>
                              Nolabel
                                expression (lib/newRuleSyntax.ml[98,4213+31]..[98,4213+33])
                                  Pexp_ident "ps" (lib/newRuleSyntax.ml[98,4213+31]..[98,4213+33])
                            ]
                      ]
            ]
            expression (lib/newRuleSyntax.ml[101,4253+2]..[105,4453+5])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/newRuleSyntax.ml[101,4253+6]..[101,4253+7])
                    Ppat_var "m" (lib/newRuleSyntax.ml[101,4253+6]..[101,4253+7])
                  expression (lib/newRuleSyntax.ml[101,4253+10]..[101,4253+49])
                    Pexp_apply
                    expression (lib/newRuleSyntax.ml[101,4253+10]..[101,4253+24])
                      Pexp_ident "List.fold_left" (lib/newRuleSyntax.ml[101,4253+10]..[101,4253+24])
                    [
                      <arg>
                      Nolabel
                        expression (lib/newRuleSyntax.ml[101,4253+25]..[101,4253+30])
                          Pexp_ident "build" (lib/newRuleSyntax.ml[101,4253+25]..[101,4253+30])
                      <arg>
                      Nolabel
                        expression (lib/newRuleSyntax.ml[101,4253+31]..[101,4253+46])
                          Pexp_ident "StringMap.empty" (lib/newRuleSyntax.ml[101,4253+31]..[101,4253+46])
                      <arg>
                      Nolabel
                        expression (lib/newRuleSyntax.ml[101,4253+47]..[101,4253+49])
                          Pexp_ident "ps" (lib/newRuleSyntax.ml[101,4253+47]..[101,4253+49])
                    ]
              ]
              expression (lib/newRuleSyntax.ml[102,4306+2]..[105,4453+5])
                Pexp_apply
                expression (lib/newRuleSyntax.ml[102,4306+2]..[102,4306+16])
                  Pexp_ident "StringMap.iter" (lib/newRuleSyntax.ml[102,4306+2]..[102,4306+16])
                [
                  <arg>
                  Nolabel
                    expression (lib/newRuleSyntax.ml[102,4306+17]..[105,4453+3])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lib/newRuleSyntax.ml[102,4306+22]..[102,4306+23])
                        Ppat_var "x" (lib/newRuleSyntax.ml[102,4306+22]..[102,4306+23])
                      expression (lib/newRuleSyntax.ml[102,4306+24]..[104,4381+71]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lib/newRuleSyntax.ml[102,4306+24]..[102,4306+33])
                          Ppat_var "positions" (lib/newRuleSyntax.ml[102,4306+24]..[102,4306+33])
                        expression (lib/newRuleSyntax.ml[103,4343+4]..[104,4381+71])
                          Pexp_ifthenelse
                          expression (lib/newRuleSyntax.ml[103,4343+7]..[103,4343+32])
                            Pexp_apply
                            expression (lib/newRuleSyntax.ml[103,4343+29]..[103,4343+30])
                              Pexp_ident ">" (lib/newRuleSyntax.ml[103,4343+29]..[103,4343+30])
                            [
                              <arg>
                              Nolabel
                                expression (lib/newRuleSyntax.ml[103,4343+7]..[103,4343+28])
                                  Pexp_apply
                                  expression (lib/newRuleSyntax.ml[103,4343+7]..[103,4343+18])
                                    Pexp_ident "List.length" (lib/newRuleSyntax.ml[103,4343+7]..[103,4343+18])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/newRuleSyntax.ml[103,4343+19]..[103,4343+28])
                                        Pexp_ident "positions" (lib/newRuleSyntax.ml[103,4343+19]..[103,4343+28])
                                  ]
                              <arg>
                              Nolabel
                                expression (lib/newRuleSyntax.ml[103,4343+31]..[103,4343+32])
                                  Pexp_constant PConst_int (1,None)
                            ]
                          expression (lib/newRuleSyntax.ml[104,4381+6]..[104,4381+71])
                            Pexp_apply
                            expression (lib/newRuleSyntax.ml[104,4381+6]..[104,4381+17])
                              Pexp_ident "Error.error" (lib/newRuleSyntax.ml[104,4381+6]..[104,4381+17])
                            [
                              <arg>
                              Nolabel
                                expression (lib/newRuleSyntax.ml[104,4381+18]..[104,4381+27])
                                  Pexp_ident "positions" (lib/newRuleSyntax.ml[104,4381+18]..[104,4381+27])
                              <arg>
                              Nolabel
                                expression (lib/newRuleSyntax.ml[104,4381+28]..[104,4381+69])
                                  Pexp_constant PConst_string("The variable %s is bound several times.",(lib/newRuleSyntax.ml[104,4381+29]..[104,4381+68]),None)
                              <arg>
                              Nolabel
                                expression (lib/newRuleSyntax.ml[104,4381+70]..[104,4381+71])
                                  Pexp_ident "x" (lib/newRuleSyntax.ml[104,4381+70]..[104,4381+71])
                            ]
                          None
                  <arg>
                  Nolabel
                    expression (lib/newRuleSyntax.ml[105,4453+4]..[105,4453+5])
                      Pexp_ident "m" (lib/newRuleSyntax.ml[105,4453+4]..[105,4453+5])
                ]
    ]
  structure_item (lib/newRuleSyntax.ml[107,4460+0]..[114,4640+8])
    Pstr_value Rec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[107,4460+8]..[107,4460+16])
          Ppat_var "patterns" (lib/newRuleSyntax.ml[107,4460+8]..[107,4460+16])
        expression (lib/newRuleSyntax.ml[107,4460+17]..[114,4640+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/newRuleSyntax.ml[107,4460+17]..[107,4460+37])
            Ppat_constraint
            pattern (lib/newRuleSyntax.ml[107,4460+18]..[107,4460+19])
              Ppat_var "e" (lib/newRuleSyntax.ml[107,4460+18]..[107,4460+19])
            core_type (lib/newRuleSyntax.ml[107,4460+22]..[107,4460+36])
              Ptyp_constr "seq_expression" (lib/newRuleSyntax.ml[107,4460+22]..[107,4460+36])
              []
          expression (lib/newRuleSyntax.ml[107,4460+38]..[114,4640+8])
            Pexp_constraint
            expression (lib/newRuleSyntax.ml[108,4515+2]..[114,4640+8])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/newRuleSyntax.ml[108,4515+6]..[108,4515+7])
                    Ppat_var "e" (lib/newRuleSyntax.ml[108,4515+6]..[108,4515+7])
                  expression (lib/newRuleSyntax.ml[108,4515+10]..[108,4515+27])
                    Pexp_apply
                    expression (lib/newRuleSyntax.ml[108,4515+10]..[108,4515+25])
                      Pexp_ident "Positions.value" (lib/newRuleSyntax.ml[108,4515+10]..[108,4515+25])
                    [
                      <arg>
                      Nolabel
                        expression (lib/newRuleSyntax.ml[108,4515+26]..[108,4515+27])
                          Pexp_ident "e" (lib/newRuleSyntax.ml[108,4515+26]..[108,4515+27])
                    ]
              ]
              expression (lib/newRuleSyntax.ml[109,4546+2]..[114,4640+8])
                Pexp_match
                expression (lib/newRuleSyntax.ml[109,4546+8]..[109,4546+9])
                  Pexp_ident "e" (lib/newRuleSyntax.ml[109,4546+8]..[109,4546+9])
                [
                  <case>
                    pattern (lib/newRuleSyntax.ml[110,4561+4]..[110,4561+19])
                      Ppat_construct "ECons" (lib/newRuleSyntax.ml[110,4561+4]..[110,4561+9])
                      Some
                        []
                        pattern (lib/newRuleSyntax.ml[110,4561+10]..[110,4561+19])
                          Ppat_tuple
                          [
                            pattern (lib/newRuleSyntax.ml[110,4561+11]..[110,4561+12])
                              Ppat_var "p" (lib/newRuleSyntax.ml[110,4561+11]..[110,4561+12])
                            pattern (lib/newRuleSyntax.ml[110,4561+14]..[110,4561+15])
                              Ppat_any
                            pattern (lib/newRuleSyntax.ml[110,4561+17]..[110,4561+18])
                              Ppat_var "e" (lib/newRuleSyntax.ml[110,4561+17]..[110,4561+18])
                          ]
                    expression (lib/newRuleSyntax.ml[111,4584+6]..[111,4584+21])
                      Pexp_construct "::" (lib/newRuleSyntax.ml[111,4584+8]..[111,4584+10])
                      Some
                        expression (lib/newRuleSyntax.ml[111,4584+6]..[111,4584+21]) ghost
                          Pexp_tuple
                          [
                            expression (lib/newRuleSyntax.ml[111,4584+6]..[111,4584+7])
                              Pexp_ident "p" (lib/newRuleSyntax.ml[111,4584+6]..[111,4584+7])
                            expression (lib/newRuleSyntax.ml[111,4584+11]..[111,4584+21])
                              Pexp_apply
                              expression (lib/newRuleSyntax.ml[111,4584+11]..[111,4584+19])
                                Pexp_ident "patterns" (lib/newRuleSyntax.ml[111,4584+11]..[111,4584+19])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/newRuleSyntax.ml[111,4584+20]..[111,4584+21])
                                    Pexp_ident "e" (lib/newRuleSyntax.ml[111,4584+20]..[111,4584+21])
                              ]
                          ]
                  <case>
                    pattern (lib/newRuleSyntax.ml[112,4606+4]..[113,4623+13])
                      Ppat_or
                      pattern (lib/newRuleSyntax.ml[112,4606+4]..[112,4606+16])
                        Ppat_construct "ESingleton" (lib/newRuleSyntax.ml[112,4606+4]..[112,4606+14])
                        Some
                          []
                          pattern (lib/newRuleSyntax.ml[112,4606+15]..[112,4606+16])
                            Ppat_any
                      pattern (lib/newRuleSyntax.ml[113,4623+4]..[113,4623+13])
                        Ppat_construct "EAction" (lib/newRuleSyntax.ml[113,4623+4]..[113,4623+11])
                        Some
                          []
                          pattern (lib/newRuleSyntax.ml[113,4623+12]..[113,4623+13])
                            Ppat_any
                    expression (lib/newRuleSyntax.ml[114,4640+6]..[114,4640+8])
                      Pexp_construct "[]" (lib/newRuleSyntax.ml[114,4640+6]..[114,4640+8])
                      None
                ]
            core_type (lib/newRuleSyntax.ml[107,4460+40]..[107,4460+52])
              Ptyp_constr "list" (lib/newRuleSyntax.ml[107,4460+48]..[107,4460+52])
              [
                core_type (lib/newRuleSyntax.ml[107,4460+40]..[107,4460+47])
                  Ptyp_constr "pattern" (lib/newRuleSyntax.ml[107,4460+40]..[107,4460+47])
                  []
              ]
    ]
  structure_item (lib/newRuleSyntax.ml[116,4650+0]..[117,4697+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[116,4650+4]..[116,4650+19])
          Ppat_var "check_linearity" (lib/newRuleSyntax.ml[116,4650+4]..[116,4650+19])
        core_type (lib/newRuleSyntax.ml[116,4650+22]..[116,4650+44])
          Ptyp_arrow
          Nolabel
          core_type (lib/newRuleSyntax.ml[116,4650+22]..[116,4650+36])
            Ptyp_constr "seq_expression" (lib/newRuleSyntax.ml[116,4650+22]..[116,4650+36])
            []
          core_type (lib/newRuleSyntax.ml[116,4650+40]..[116,4650+44])
            Ptyp_constr "unit" (lib/newRuleSyntax.ml[116,4650+40]..[116,4650+44])
            []
        expression (lib/newRuleSyntax.ml[117,4697+2]..[117,4697+29])
          Pexp_apply
          expression (lib/newRuleSyntax.ml[117,4697+11]..[117,4697+13])
            Pexp_ident ">>" (lib/newRuleSyntax.ml[117,4697+11]..[117,4697+13])
          [
            <arg>
            Nolabel
              expression (lib/newRuleSyntax.ml[117,4697+2]..[117,4697+10])
                Pexp_ident "patterns" (lib/newRuleSyntax.ml[117,4697+2]..[117,4697+10])
            <arg>
            Nolabel
              expression (lib/newRuleSyntax.ml[117,4697+14]..[117,4697+29])
                Pexp_ident "check_linearity" (lib/newRuleSyntax.ml[117,4697+14]..[117,4697+29])
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[123,4874+0]..[131,5056+44])
    Pstr_value Rec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[123,4874+8]..[123,4874+18])
          Ppat_var "tilde_used" (lib/newRuleSyntax.ml[123,4874+8]..[123,4874+18])
        expression (lib/newRuleSyntax.ml[123,4874+19]..[131,5056+44]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/newRuleSyntax.ml[123,4874+19]..[123,4874+28])
            Ppat_var "positions" (lib/newRuleSyntax.ml[123,4874+19]..[123,4874+28])
          expression (lib/newRuleSyntax.ml[123,4874+29]..[131,5056+44]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/newRuleSyntax.ml[123,4874+29]..[123,4874+42])
              Ppat_constraint
              pattern (lib/newRuleSyntax.ml[123,4874+30]..[123,4874+31])
                Ppat_var "p" (lib/newRuleSyntax.ml[123,4874+30]..[123,4874+31])
              core_type (lib/newRuleSyntax.ml[123,4874+34]..[123,4874+41])
                Ptyp_constr "pattern" (lib/newRuleSyntax.ml[123,4874+34]..[123,4874+41])
                []
            expression (lib/newRuleSyntax.ml[124,4919+2]..[131,5056+44])
              Pexp_match
              expression (lib/newRuleSyntax.ml[124,4919+8]..[124,4919+9])
                Pexp_ident "p" (lib/newRuleSyntax.ml[124,4919+8]..[124,4919+9])
              [
                <case>
                  pattern (lib/newRuleSyntax.ml[125,4934+4]..[126,4950+18])
                    Ppat_or
                    pattern (lib/newRuleSyntax.ml[125,4934+4]..[125,4934+15])
                      Ppat_construct "SemPatVar" (lib/newRuleSyntax.ml[125,4934+4]..[125,4934+13])
                      Some
                        []
                        pattern (lib/newRuleSyntax.ml[125,4934+14]..[125,4934+15])
                          Ppat_any
                    pattern (lib/newRuleSyntax.ml[126,4950+4]..[126,4950+18])
                      Ppat_construct "SemPatWildcard" (lib/newRuleSyntax.ml[126,4950+4]..[126,4950+18])
                      None
                  expression (lib/newRuleSyntax.ml[127,4972+6]..[127,4972+15])
                    Pexp_ident "positions" (lib/newRuleSyntax.ml[127,4972+6]..[127,4972+15])
                <case>
                  pattern (lib/newRuleSyntax.ml[128,4988+4]..[128,4988+19])
                    Ppat_construct "SemPatTilde" (lib/newRuleSyntax.ml[128,4988+4]..[128,4988+15])
                    Some
                      []
                      pattern (lib/newRuleSyntax.ml[128,4988+16]..[128,4988+19])
                        Ppat_var "pos" (lib/newRuleSyntax.ml[128,4988+16]..[128,4988+19])
                  expression (lib/newRuleSyntax.ml[129,5011+6]..[129,5011+22])
                    Pexp_construct "::" (lib/newRuleSyntax.ml[129,5011+10]..[129,5011+12])
                    Some
                      expression (lib/newRuleSyntax.ml[129,5011+6]..[129,5011+22]) ghost
                        Pexp_tuple
                        [
                          expression (lib/newRuleSyntax.ml[129,5011+6]..[129,5011+9])
                            Pexp_ident "pos" (lib/newRuleSyntax.ml[129,5011+6]..[129,5011+9])
                          expression (lib/newRuleSyntax.ml[129,5011+13]..[129,5011+22])
                            Pexp_ident "positions" (lib/newRuleSyntax.ml[129,5011+13]..[129,5011+22])
                        ]
                <case>
                  pattern (lib/newRuleSyntax.ml[130,5034+4]..[130,5034+18])
                    Ppat_construct "SemPatTuple" (lib/newRuleSyntax.ml[130,5034+4]..[130,5034+15])
                    Some
                      []
                      pattern (lib/newRuleSyntax.ml[130,5034+16]..[130,5034+18])
                        Ppat_var "ps" (lib/newRuleSyntax.ml[130,5034+16]..[130,5034+18])
                  expression (lib/newRuleSyntax.ml[131,5056+6]..[131,5056+44])
                    Pexp_apply
                    expression (lib/newRuleSyntax.ml[131,5056+6]..[131,5056+20])
                      Pexp_ident "List.fold_left" (lib/newRuleSyntax.ml[131,5056+6]..[131,5056+20])
                    [
                      <arg>
                      Nolabel
                        expression (lib/newRuleSyntax.ml[131,5056+21]..[131,5056+31])
                          Pexp_ident "tilde_used" (lib/newRuleSyntax.ml[131,5056+21]..[131,5056+31])
                      <arg>
                      Nolabel
                        expression (lib/newRuleSyntax.ml[131,5056+32]..[131,5056+41])
                          Pexp_ident "positions" (lib/newRuleSyntax.ml[131,5056+32]..[131,5056+41])
                      <arg>
                      Nolabel
                        expression (lib/newRuleSyntax.ml[131,5056+42]..[131,5056+44])
                          Pexp_ident "ps" (lib/newRuleSyntax.ml[131,5056+42]..[131,5056+44])
                    ]
              ]
    ]
  structure_item (lib/newRuleSyntax.ml[136,5254+0]..[147,5732+55])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[136,5254+4]..[136,5254+22])
          Ppat_var "tilde_used_warning" (lib/newRuleSyntax.ml[136,5254+4]..[136,5254+22])
        expression (lib/newRuleSyntax.ml[136,5254+23]..[147,5732+55]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/newRuleSyntax.ml[136,5254+23]..[136,5254+32])
            Ppat_var "positions" (lib/newRuleSyntax.ml[136,5254+23]..[136,5254+32])
          expression (lib/newRuleSyntax.ml[137,5289+2]..[147,5732+55])
            Pexp_let Nonrec
            [
              <def>
                pattern (lib/newRuleSyntax.ml[137,5289+6]..[137,5289+7])
                  Ppat_var "n" (lib/newRuleSyntax.ml[137,5289+6]..[137,5289+7])
                expression (lib/newRuleSyntax.ml[137,5289+10]..[137,5289+31])
                  Pexp_apply
                  expression (lib/newRuleSyntax.ml[137,5289+10]..[137,5289+21])
                    Pexp_ident "List.length" (lib/newRuleSyntax.ml[137,5289+10]..[137,5289+21])
                  [
                    <arg>
                    Nolabel
                      expression (lib/newRuleSyntax.ml[137,5289+22]..[137,5289+31])
                        Pexp_ident "positions" (lib/newRuleSyntax.ml[137,5289+22]..[137,5289+31])
                  ]
            ]
            expression (lib/newRuleSyntax.ml[138,5324+2]..[147,5732+55])
              Pexp_ifthenelse
              expression (lib/newRuleSyntax.ml[138,5324+5]..[138,5324+10])
                Pexp_apply
                expression (lib/newRuleSyntax.ml[138,5324+7]..[138,5324+8])
                  Pexp_ident ">" (lib/newRuleSyntax.ml[138,5324+7]..[138,5324+8])
                [
                  <arg>
                  Nolabel
                    expression (lib/newRuleSyntax.ml[138,5324+5]..[138,5324+6])
                      Pexp_ident "n" (lib/newRuleSyntax.ml[138,5324+5]..[138,5324+6])
                  <arg>
                  Nolabel
                    expression (lib/newRuleSyntax.ml[138,5324+9]..[138,5324+10])
                      Pexp_constant PConst_int (0,None)
                ]
              expression (lib/newRuleSyntax.ml[139,5340+4]..[147,5732+55])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lib/newRuleSyntax.ml[139,5340+8]..[139,5340+44])
                      Ppat_tuple
                      [
                        pattern (lib/newRuleSyntax.ml[139,5340+8]..[139,5340+22])
                          Ppat_var "variables_have" (lib/newRuleSyntax.ml[139,5340+8]..[139,5340+22])
                        pattern (lib/newRuleSyntax.ml[139,5340+24]..[139,5340+33])
                          Ppat_var "tpatterns" (lib/newRuleSyntax.ml[139,5340+24]..[139,5340+33])
                        pattern (lib/newRuleSyntax.ml[139,5340+35]..[139,5340+44])
                          Ppat_var "wpatterns" (lib/newRuleSyntax.ml[139,5340+35]..[139,5340+44])
                      ]
                    expression (lib/newRuleSyntax.ml[140,5387+6]..[141,5461+64])
                      Pexp_ifthenelse
                      expression (lib/newRuleSyntax.ml[140,5387+9]..[140,5387+14])
                        Pexp_apply
                        expression (lib/newRuleSyntax.ml[140,5387+11]..[140,5387+12])
                          Pexp_ident "=" (lib/newRuleSyntax.ml[140,5387+11]..[140,5387+12])
                        [
                          <arg>
                          Nolabel
                            expression (lib/newRuleSyntax.ml[140,5387+9]..[140,5387+10])
                              Pexp_ident "n" (lib/newRuleSyntax.ml[140,5387+9]..[140,5387+10])
                          <arg>
                          Nolabel
                            expression (lib/newRuleSyntax.ml[140,5387+13]..[140,5387+14])
                              Pexp_constant PConst_int (1,None)
                        ]
                      expression (lib/newRuleSyntax.ml[140,5387+20]..[140,5387+73])
                        Pexp_tuple
                        [
                          expression (lib/newRuleSyntax.ml[140,5387+20]..[140,5387+34])
                            Pexp_constant PConst_string("variable has",(lib/newRuleSyntax.ml[140,5387+21]..[140,5387+33]),None)
                          expression (lib/newRuleSyntax.ml[140,5387+36]..[140,5387+49])
                            Pexp_constant PConst_string("a ~ pattern",(lib/newRuleSyntax.ml[140,5387+37]..[140,5387+48]),None)
                          expression (lib/newRuleSyntax.ml[140,5387+51]..[140,5387+73])
                            Pexp_constant PConst_string("a wildcard pattern _",(lib/newRuleSyntax.ml[140,5387+52]..[140,5387+72]),None)
                        ]
                      Some
                        expression (lib/newRuleSyntax.ml[141,5461+11]..[141,5461+64])
                          Pexp_tuple
                          [
                            expression (lib/newRuleSyntax.ml[141,5461+11]..[141,5461+27])
                              Pexp_constant PConst_string("variables have",(lib/newRuleSyntax.ml[141,5461+12]..[141,5461+26]),None)
                            expression (lib/newRuleSyntax.ml[141,5461+29]..[141,5461+41])
                              Pexp_constant PConst_string("~ patterns",(lib/newRuleSyntax.ml[141,5461+30]..[141,5461+40]),None)
                            expression (lib/newRuleSyntax.ml[141,5461+43]..[141,5461+64])
                              Pexp_constant PConst_string("wildcard patterns _",(lib/newRuleSyntax.ml[141,5461+44]..[141,5461+63]),None)
                          ]
                ]
                expression (lib/newRuleSyntax.ml[143,5533+4]..[147,5732+55])
                  Pexp_apply
                  expression (lib/newRuleSyntax.ml[143,5533+4]..[143,5533+17])
                    Pexp_ident "Error.warning" (lib/newRuleSyntax.ml[143,5533+4]..[143,5533+17])
                  [
                    <arg>
                    Nolabel
                      expression (lib/newRuleSyntax.ml[143,5533+18]..[143,5533+27])
                        Pexp_ident "positions" (lib/newRuleSyntax.ml[143,5533+18]..[143,5533+27])
                    <arg>
                    Nolabel
                      expression (lib/newRuleSyntax.ml[144,5561+6]..[146,5689+42])
                        Pexp_constant PConst_string("%s nameless %s been introduced by %s,\nyet this sequence does not end in a point-free semantic action <...>.\nPerhaps %s should be used instead.",(lib/newRuleSyntax.ml[144,5561+7]..[146,5689+41]),None)
                    <arg>
                    Nolabel
                      expression (lib/newRuleSyntax.ml[147,5732+6]..[147,5732+20])
                        Pexp_apply
                        expression (lib/newRuleSyntax.ml[147,5732+7]..[147,5732+17])
                          Pexp_ident "Misc.count" (lib/newRuleSyntax.ml[147,5732+7]..[147,5732+17])
                        [
                          <arg>
                          Nolabel
                            expression (lib/newRuleSyntax.ml[147,5732+18]..[147,5732+19])
                              Pexp_ident "n" (lib/newRuleSyntax.ml[147,5732+18]..[147,5732+19])
                        ]
                    <arg>
                    Nolabel
                      expression (lib/newRuleSyntax.ml[147,5732+21]..[147,5732+35])
                        Pexp_ident "variables_have" (lib/newRuleSyntax.ml[147,5732+21]..[147,5732+35])
                    <arg>
                    Nolabel
                      expression (lib/newRuleSyntax.ml[147,5732+36]..[147,5732+45])
                        Pexp_ident "tpatterns" (lib/newRuleSyntax.ml[147,5732+36]..[147,5732+45])
                    <arg>
                    Nolabel
                      expression (lib/newRuleSyntax.ml[147,5732+46]..[147,5732+55])
                        Pexp_ident "wpatterns" (lib/newRuleSyntax.ml[147,5732+46]..[147,5732+55])
                  ]
              None
    ]
  structure_item (lib/newRuleSyntax.ml[157,6162+0]..[178,6655+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[157,6162+4]..[157,6162+11])
          Ppat_var "pattern" (lib/newRuleSyntax.ml[157,6162+4]..[157,6162+11])
        expression (lib/newRuleSyntax.ml[157,6162+12]..[178,6655+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/newRuleSyntax.ml[157,6162+12]..[157,6162+29])
            Ppat_constraint
            pattern (lib/newRuleSyntax.ml[157,6162+13]..[157,6162+15])
              Ppat_var "x1" (lib/newRuleSyntax.ml[157,6162+13]..[157,6162+15])
            core_type (lib/newRuleSyntax.ml[157,6162+18]..[157,6162+28])
              Ptyp_constr "identifier" (lib/newRuleSyntax.ml[157,6162+18]..[157,6162+28])
              []
          expression (lib/newRuleSyntax.ml[157,6162+30]..[178,6655+11]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/newRuleSyntax.ml[157,6162+30]..[157,6162+43])
              Ppat_constraint
              pattern (lib/newRuleSyntax.ml[157,6162+31]..[157,6162+32])
                Ppat_var "p" (lib/newRuleSyntax.ml[157,6162+31]..[157,6162+32])
              core_type (lib/newRuleSyntax.ml[157,6162+35]..[157,6162+42])
                Ptyp_constr "pattern" (lib/newRuleSyntax.ml[157,6162+35]..[157,6162+42])
                []
            expression (lib/newRuleSyntax.ml[157,6162+44]..[178,6655+11])
              Pexp_constraint
              expression (lib/newRuleSyntax.ml[159,6222+2]..[178,6655+11])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lib/newRuleSyntax.ml[159,6222+6]..[159,6222+7])
                      Ppat_var "c" (lib/newRuleSyntax.ml[159,6222+6]..[159,6222+7])
                    expression (lib/newRuleSyntax.ml[159,6222+10]..[159,6222+15])
                      Pexp_apply
                      expression (lib/newRuleSyntax.ml[159,6222+10]..[159,6222+13])
                        Pexp_ident "ref" (lib/newRuleSyntax.ml[159,6222+10]..[159,6222+13])
                      [
                        <arg>
                        Nolabel
                          expression (lib/newRuleSyntax.ml[159,6222+14]..[159,6222+15])
                            Pexp_constant PConst_int (1,None)
                      ]
                ]
                expression (lib/newRuleSyntax.ml[160,6241+2]..[178,6655+11])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/newRuleSyntax.ml[160,6241+6]..[160,6241+11])
                        Ppat_var "fresh" (lib/newRuleSyntax.ml[160,6241+6]..[160,6241+11])
                      expression (lib/newRuleSyntax.ml[160,6241+12]..[160,6241+65]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lib/newRuleSyntax.ml[160,6241+12]..[160,6241+14])
                          Ppat_construct "()" (lib/newRuleSyntax.ml[160,6241+12]..[160,6241+14])
                          None
                        expression (lib/newRuleSyntax.ml[160,6241+17]..[160,6241+65])
                          Pexp_apply
                          expression (lib/newRuleSyntax.ml[160,6241+17]..[160,6241+31])
                            Pexp_ident "Printf.sprintf" (lib/newRuleSyntax.ml[160,6241+17]..[160,6241+31])
                          [
                            <arg>
                            Nolabel
                              expression (lib/newRuleSyntax.ml[160,6241+32]..[160,6241+39])
                                Pexp_constant PConst_string("%s_%d",(lib/newRuleSyntax.ml[160,6241+33]..[160,6241+38]),None)
                            <arg>
                            Nolabel
                              expression (lib/newRuleSyntax.ml[160,6241+40]..[160,6241+42])
                                Pexp_ident "x1" (lib/newRuleSyntax.ml[160,6241+40]..[160,6241+42])
                            <arg>
                            Nolabel
                              expression (lib/newRuleSyntax.ml[160,6241+43]..[160,6241+65])
                                Pexp_apply
                                expression (lib/newRuleSyntax.ml[160,6241+44]..[160,6241+62])
                                  Pexp_ident "Misc.postincrement" (lib/newRuleSyntax.ml[160,6241+44]..[160,6241+62])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/newRuleSyntax.ml[160,6241+63]..[160,6241+64])
                                      Pexp_ident "c" (lib/newRuleSyntax.ml[160,6241+63]..[160,6241+64])
                                ]
                          ]
                  ]
                  expression (lib/newRuleSyntax.ml[162,6311+2]..[178,6655+11])
                    Pexp_let Rec
                    [
                      <def>
                        pattern (lib/newRuleSyntax.ml[162,6311+10]..[162,6311+17])
                          Ppat_var "pattern" (lib/newRuleSyntax.ml[162,6311+10]..[162,6311+17])
                        expression (lib/newRuleSyntax.ml[162,6311+18]..[175,6609+39]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lib/newRuleSyntax.ml[162,6311+18]..[162,6311+19])
                            Ppat_var "p" (lib/newRuleSyntax.ml[162,6311+18]..[162,6311+19])
                          expression (lib/newRuleSyntax.ml[163,6333+4]..[175,6609+39])
                            Pexp_match
                            expression (lib/newRuleSyntax.ml[163,6333+10]..[163,6333+11])
                              Pexp_ident "p" (lib/newRuleSyntax.ml[163,6333+10]..[163,6333+11])
                            [
                              <case>
                                pattern (lib/newRuleSyntax.ml[164,6350+6]..[164,6350+17])
                                  Ppat_construct "SemPatVar" (lib/newRuleSyntax.ml[164,6350+6]..[164,6350+15])
                                  Some
                                    []
                                    pattern (lib/newRuleSyntax.ml[164,6350+16]..[164,6350+17])
                                      Ppat_var "x" (lib/newRuleSyntax.ml[164,6350+16]..[164,6350+17])
                                expression (lib/newRuleSyntax.ml[165,6371+8]..[165,6371+35])
                                  Pexp_construct "IL.PVar" (lib/newRuleSyntax.ml[165,6371+8]..[165,6371+15])
                                  Some
                                    expression (lib/newRuleSyntax.ml[165,6371+16]..[165,6371+35])
                                      Pexp_apply
                                      expression (lib/newRuleSyntax.ml[165,6371+17]..[165,6371+32])
                                        Pexp_ident "Positions.value" (lib/newRuleSyntax.ml[165,6371+17]..[165,6371+32])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/newRuleSyntax.ml[165,6371+33]..[165,6371+34])
                                            Pexp_ident "x" (lib/newRuleSyntax.ml[165,6371+33]..[165,6371+34])
                                      ]
                              <case>
                                pattern (lib/newRuleSyntax.ml[166,6407+6]..[166,6407+20])
                                  Ppat_construct "SemPatWildcard" (lib/newRuleSyntax.ml[166,6407+6]..[166,6407+20])
                                  None
                                expression (lib/newRuleSyntax.ml[167,6431+8]..[167,6431+20])
                                  Pexp_construct "IL.PWildcard" (lib/newRuleSyntax.ml[167,6431+8]..[167,6431+20])
                                  None
                              <case>
                                pattern (lib/newRuleSyntax.ml[168,6452+6]..[168,6452+19])
                                  Ppat_construct "SemPatTilde" (lib/newRuleSyntax.ml[168,6452+6]..[168,6452+17])
                                  Some
                                    []
                                    pattern (lib/newRuleSyntax.ml[168,6452+18]..[168,6452+19])
                                      Ppat_any
                                expression (lib/newRuleSyntax.ml[169,6475+8]..[169,6475+25])
                                  Pexp_construct "IL.PVar" (lib/newRuleSyntax.ml[169,6475+8]..[169,6475+15])
                                  Some
                                    expression (lib/newRuleSyntax.ml[169,6475+16]..[169,6475+25])
                                      Pexp_apply
                                      expression (lib/newRuleSyntax.ml[169,6475+17]..[169,6475+22])
                                        Pexp_ident "fresh" (lib/newRuleSyntax.ml[169,6475+17]..[169,6475+22])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/newRuleSyntax.ml[169,6475+22]..[169,6475+24])
                                            Pexp_construct "()" (lib/newRuleSyntax.ml[169,6475+22]..[169,6475+24])
                                            None
                                      ]
                              <case>
                                pattern (lib/newRuleSyntax.ml[170,6501+6]..[170,6501+20])
                                  Ppat_construct "SemPatTuple" (lib/newRuleSyntax.ml[170,6501+6]..[170,6501+17])
                                  Some
                                    []
                                    pattern (lib/newRuleSyntax.ml[170,6501+18]..[170,6501+20])
                                      Ppat_construct "[]" (lib/newRuleSyntax.ml[170,6501+18]..[170,6501+20])
                                      None
                                expression (lib/newRuleSyntax.ml[171,6525+8]..[171,6525+16])
                                  Pexp_construct "IL.PUnit" (lib/newRuleSyntax.ml[171,6525+8]..[171,6525+16])
                                  None
                              <case>
                                pattern (lib/newRuleSyntax.ml[172,6542+6]..[172,6542+21])
                                  Ppat_construct "SemPatTuple" (lib/newRuleSyntax.ml[172,6542+6]..[172,6542+17])
                                  Some
                                    []
                                    pattern (lib/newRuleSyntax.ml[172,6542+18]..[172,6542+21])
                                      Ppat_construct "::" (lib/newRuleSyntax.ml[172,6542+19]..[172,6542+21]) ghost
                                      Some
                                        []
                                        pattern (lib/newRuleSyntax.ml[172,6542+19]..[172,6542+21]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (lib/newRuleSyntax.ml[172,6542+19]..[172,6542+20])
                                              Ppat_var "p" (lib/newRuleSyntax.ml[172,6542+19]..[172,6542+20])
                                            pattern (lib/newRuleSyntax.ml[172,6542+20]..[172,6542+21]) ghost
                                              Ppat_construct "[]" (lib/newRuleSyntax.ml[172,6542+20]..[172,6542+21]) ghost
                                              None
                                          ]
                                expression (lib/newRuleSyntax.ml[173,6567+8]..[173,6567+17])
                                  Pexp_apply
                                  expression (lib/newRuleSyntax.ml[173,6567+8]..[173,6567+15])
                                    Pexp_ident "pattern" (lib/newRuleSyntax.ml[173,6567+8]..[173,6567+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/newRuleSyntax.ml[173,6567+16]..[173,6567+17])
                                        Pexp_ident "p" (lib/newRuleSyntax.ml[173,6567+16]..[173,6567+17])
                                  ]
                              <case>
                                pattern (lib/newRuleSyntax.ml[174,6585+6]..[174,6585+20])
                                  Ppat_construct "SemPatTuple" (lib/newRuleSyntax.ml[174,6585+6]..[174,6585+17])
                                  Some
                                    []
                                    pattern (lib/newRuleSyntax.ml[174,6585+18]..[174,6585+20])
                                      Ppat_var "ps" (lib/newRuleSyntax.ml[174,6585+18]..[174,6585+20])
                                expression (lib/newRuleSyntax.ml[175,6609+8]..[175,6609+39])
                                  Pexp_construct "IL.PTuple" (lib/newRuleSyntax.ml[175,6609+8]..[175,6609+17])
                                  Some
                                    expression (lib/newRuleSyntax.ml[175,6609+18]..[175,6609+39])
                                      Pexp_apply
                                      expression (lib/newRuleSyntax.ml[175,6609+19]..[175,6609+27])
                                        Pexp_ident "List.map" (lib/newRuleSyntax.ml[175,6609+19]..[175,6609+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/newRuleSyntax.ml[175,6609+28]..[175,6609+35])
                                            Pexp_ident "pattern" (lib/newRuleSyntax.ml[175,6609+28]..[175,6609+35])
                                        <arg>
                                        Nolabel
                                          expression (lib/newRuleSyntax.ml[175,6609+36]..[175,6609+38])
                                            Pexp_ident "ps" (lib/newRuleSyntax.ml[175,6609+36]..[175,6609+38])
                                      ]
                            ]
                    ]
                    expression (lib/newRuleSyntax.ml[178,6655+2]..[178,6655+11])
                      Pexp_apply
                      expression (lib/newRuleSyntax.ml[178,6655+2]..[178,6655+9])
                        Pexp_ident "pattern" (lib/newRuleSyntax.ml[178,6655+2]..[178,6655+9])
                      [
                        <arg>
                        Nolabel
                          expression (lib/newRuleSyntax.ml[178,6655+10]..[178,6655+11])
                            Pexp_ident "p" (lib/newRuleSyntax.ml[178,6655+10]..[178,6655+11])
                      ]
              core_type (lib/newRuleSyntax.ml[157,6162+46]..[157,6162+56])
                Ptyp_constr "IL.pattern" (lib/newRuleSyntax.ml[157,6162+46]..[157,6162+56])
                []
    ]
  structure_item (lib/newRuleSyntax.ml[184,6876+0]..[196,7107+18])
    Pstr_value Rec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[184,6876+8]..[184,6876+10])
          Ppat_var "bv" (lib/newRuleSyntax.ml[184,6876+8]..[184,6876+10])
        expression (lib/newRuleSyntax.ml[184,6876+11]..[196,7107+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/newRuleSyntax.ml[184,6876+11]..[184,6876+15])
            Ppat_var "accu" (lib/newRuleSyntax.ml[184,6876+11]..[184,6876+15])
          expression (lib/newRuleSyntax.ml[184,6876+16]..[196,7107+18]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/newRuleSyntax.ml[184,6876+16]..[184,6876+17])
              Ppat_var "p" (lib/newRuleSyntax.ml[184,6876+16]..[184,6876+17])
            expression (lib/newRuleSyntax.ml[185,6896+2]..[196,7107+18])
              Pexp_match
              expression (lib/newRuleSyntax.ml[185,6896+8]..[185,6896+9])
                Pexp_ident "p" (lib/newRuleSyntax.ml[185,6896+8]..[185,6896+9])
              [
                <case>
                  pattern (lib/newRuleSyntax.ml[186,6911+4]..[186,6911+13])
                    Ppat_construct "IL.PVar" (lib/newRuleSyntax.ml[186,6911+4]..[186,6911+11])
                    Some
                      []
                      pattern (lib/newRuleSyntax.ml[186,6911+12]..[186,6911+13])
                        Ppat_var "x" (lib/newRuleSyntax.ml[186,6911+12]..[186,6911+13])
                  expression (lib/newRuleSyntax.ml[187,6928+6]..[187,6928+15])
                    Pexp_construct "::" (lib/newRuleSyntax.ml[187,6928+8]..[187,6928+10])
                    Some
                      expression (lib/newRuleSyntax.ml[187,6928+6]..[187,6928+15]) ghost
                        Pexp_tuple
                        [
                          expression (lib/newRuleSyntax.ml[187,6928+6]..[187,6928+7])
                            Pexp_ident "x" (lib/newRuleSyntax.ml[187,6928+6]..[187,6928+7])
                          expression (lib/newRuleSyntax.ml[187,6928+11]..[187,6928+15])
                            Pexp_ident "accu" (lib/newRuleSyntax.ml[187,6928+11]..[187,6928+15])
                        ]
                <case>
                  pattern (lib/newRuleSyntax.ml[188,6944+4]..[188,6944+16])
                    Ppat_construct "IL.PWildcard" (lib/newRuleSyntax.ml[188,6944+4]..[188,6944+16])
                    None
                  expression (lib/newRuleSyntax.ml[189,6964+6]..[189,6964+10])
                    Pexp_ident "accu" (lib/newRuleSyntax.ml[189,6964+6]..[189,6964+10])
                <case>
                  pattern (lib/newRuleSyntax.ml[190,6975+4]..[190,6975+12])
                    Ppat_construct "IL.PUnit" (lib/newRuleSyntax.ml[190,6975+4]..[190,6975+12])
                    None
                  expression (lib/newRuleSyntax.ml[191,6991+6]..[191,6991+10])
                    Pexp_ident "accu" (lib/newRuleSyntax.ml[191,6991+6]..[191,6991+10])
                <case>
                  pattern (lib/newRuleSyntax.ml[192,7002+4]..[192,7002+16])
                    Ppat_construct "IL.PTuple" (lib/newRuleSyntax.ml[192,7002+4]..[192,7002+13])
                    Some
                      []
                      pattern (lib/newRuleSyntax.ml[192,7002+14]..[192,7002+16])
                        Ppat_var "ps" (lib/newRuleSyntax.ml[192,7002+14]..[192,7002+16])
                  expression (lib/newRuleSyntax.ml[193,7022+6]..[193,7022+31])
                    Pexp_apply
                    expression (lib/newRuleSyntax.ml[193,7022+6]..[193,7022+20])
                      Pexp_ident "List.fold_left" (lib/newRuleSyntax.ml[193,7022+6]..[193,7022+20])
                    [
                      <arg>
                      Nolabel
                        expression (lib/newRuleSyntax.ml[193,7022+21]..[193,7022+23])
                          Pexp_ident "bv" (lib/newRuleSyntax.ml[193,7022+21]..[193,7022+23])
                      <arg>
                      Nolabel
                        expression (lib/newRuleSyntax.ml[193,7022+24]..[193,7022+28])
                          Pexp_ident "accu" (lib/newRuleSyntax.ml[193,7022+24]..[193,7022+28])
                      <arg>
                      Nolabel
                        expression (lib/newRuleSyntax.ml[193,7022+29]..[193,7022+31])
                          Pexp_ident "ps" (lib/newRuleSyntax.ml[193,7022+29]..[193,7022+31])
                    ]
                <case>
                  pattern (lib/newRuleSyntax.ml[194,7054+4]..[194,7054+5])
                    Ppat_any
                  expression (lib/newRuleSyntax.ml[196,7107+6]..[196,7107+18])
                    Pexp_assert
                    expression (lib/newRuleSyntax.ml[196,7107+13]..[196,7107+18])
                      Pexp_construct "false" (lib/newRuleSyntax.ml[196,7107+13]..[196,7107+18])
                      None
              ]
    ]
  structure_item (lib/newRuleSyntax.ml[202,7266+0]..[205,7364+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[202,7266+4]..[202,7266+14])
          Ppat_var "attributes" (lib/newRuleSyntax.ml[202,7266+4]..[202,7266+14])
        expression (lib/newRuleSyntax.ml[202,7266+15]..[205,7364+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/newRuleSyntax.ml[202,7266+15]..[202,7266+38])
            Ppat_constraint
            pattern (lib/newRuleSyntax.ml[202,7266+16]..[202,7266+17])
              Ppat_var "e" (lib/newRuleSyntax.ml[202,7266+16]..[202,7266+17])
            core_type (lib/newRuleSyntax.ml[202,7266+20]..[202,7266+37])
              Ptyp_constr "symbol_expression" (lib/newRuleSyntax.ml[202,7266+20]..[202,7266+37])
              []
          expression (lib/newRuleSyntax.ml[202,7266+39]..[205,7364+11])
            Pexp_constraint
            expression (lib/newRuleSyntax.ml[203,7320+2]..[205,7364+11])
              Pexp_match
              expression (lib/newRuleSyntax.ml[203,7320+8]..[203,7320+9])
                Pexp_ident "e" (lib/newRuleSyntax.ml[203,7320+8]..[203,7320+9])
              [
                <case>
                  pattern (lib/newRuleSyntax.ml[204,7335+4]..[204,7335+25])
                    Ppat_construct "ESymbol" (lib/newRuleSyntax.ml[204,7335+4]..[204,7335+11])
                    Some
                      []
                      pattern (lib/newRuleSyntax.ml[204,7335+12]..[204,7335+25])
                        Ppat_tuple
                        [
                          pattern (lib/newRuleSyntax.ml[204,7335+13]..[204,7335+14])
                            Ppat_any
                          pattern (lib/newRuleSyntax.ml[204,7335+16]..[204,7335+17])
                            Ppat_any
                          pattern (lib/newRuleSyntax.ml[204,7335+19]..[204,7335+24])
                            Ppat_var "attrs" (lib/newRuleSyntax.ml[204,7335+19]..[204,7335+24])
                        ]
                  expression (lib/newRuleSyntax.ml[205,7364+6]..[205,7364+11])
                    Pexp_ident "attrs" (lib/newRuleSyntax.ml[205,7364+6]..[205,7364+11])
              ]
            core_type (lib/newRuleSyntax.ml[202,7266+41]..[202,7266+51])
              Ptyp_constr "attributes" (lib/newRuleSyntax.ml[202,7266+41]..[202,7266+51])
              []
    ]
  structure_item (lib/newRuleSyntax.ml[212,7590+0]..[249,9447+1])
    Pstr_type Rec
    [
      type_declaration "context" (lib/newRuleSyntax.ml[212,7590+5]..[212,7590+12]) (lib/newRuleSyntax.ml[212,7590+0]..[249,9447+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/newRuleSyntax.ml[215,7666+2]..[215,7666+19])
                Immutable
                "pos" (lib/newRuleSyntax.ml[215,7666+2]..[215,7666+5])                core_type (lib/newRuleSyntax.ml[215,7666+7]..[215,7666+18])
                  Ptyp_constr "Positions.t" (lib/newRuleSyntax.ml[215,7666+7]..[215,7666+18])
                  []
              (lib/newRuleSyntax.ml[220,7903+2]..[220,7903+27])
                Immutable
                "producers" (lib/newRuleSyntax.ml[220,7903+2]..[220,7903+11])                core_type (lib/newRuleSyntax.ml[220,7903+13]..[220,7903+26])
                  Ptyp_constr "list" (lib/newRuleSyntax.ml[220,7903+22]..[220,7903+26])
                  [
                    core_type (lib/newRuleSyntax.ml[220,7903+13]..[220,7903+21])
                      Ptyp_constr "producer" (lib/newRuleSyntax.ml[220,7903+13]..[220,7903+21])
                      []
                  ]
              (lib/newRuleSyntax.ml[227,8301+2]..[227,8301+30])
                Immutable
                "uxs" (lib/newRuleSyntax.ml[227,8301+2]..[227,8301+5])                core_type (lib/newRuleSyntax.ml[227,8301+7]..[227,8301+29])
                  Ptyp_constr "list" (lib/newRuleSyntax.ml[227,8301+25]..[227,8301+29])
                  [
                    core_type (lib/newRuleSyntax.ml[227,8301+7]..[227,8301+24])
                      Ptyp_constr "option" (lib/newRuleSyntax.ml[227,8301+18]..[227,8301+24])
                      [
                        core_type (lib/newRuleSyntax.ml[227,8301+7]..[227,8301+17])
                          Ptyp_constr "identifier" (lib/newRuleSyntax.ml[227,8301+7]..[227,8301+17])
                          []
                      ]
                  ]
              (lib/newRuleSyntax.ml[231,8488+2]..[231,8488+29])
                Immutable
                "bindings" (lib/newRuleSyntax.ml[231,8488+2]..[231,8488+10])                core_type (lib/newRuleSyntax.ml[231,8488+12]..[231,8488+28])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/newRuleSyntax.ml[231,8488+12]..[231,8488+18])
                    Ptyp_constr "action" (lib/newRuleSyntax.ml[231,8488+12]..[231,8488+18])
                    []
                  core_type (lib/newRuleSyntax.ml[231,8488+22]..[231,8488+28])
                    Ptyp_constr "action" (lib/newRuleSyntax.ml[231,8488+22]..[231,8488+28])
                    []
              (lib/newRuleSyntax.ml[238,8900+2]..[238,8900+25])
                Immutable
                "tuple" (lib/newRuleSyntax.ml[238,8900+2]..[238,8900+7])                core_type (lib/newRuleSyntax.ml[238,8900+9]..[238,8900+24])
                  Ptyp_constr "list" (lib/newRuleSyntax.ml[238,8900+20]..[238,8900+24])
                  [
                    core_type (lib/newRuleSyntax.ml[238,8900+9]..[238,8900+19])
                      Ptyp_constr "identifier" (lib/newRuleSyntax.ml[238,8900+9]..[238,8900+19])
                      []
                  ]
              (lib/newRuleSyntax.ml[247,9411+2]..[247,9411+34])
                Immutable
                "tilde_used" (lib/newRuleSyntax.ml[247,9411+2]..[247,9411+12])                core_type (lib/newRuleSyntax.ml[247,9411+14]..[247,9411+33])
                  Ptyp_constr "Positions.positions" (lib/newRuleSyntax.ml[247,9411+14]..[247,9411+33])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/newRuleSyntax.ml[253,9476+0]..[261,9630+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[253,9476+4]..[253,9476+9])
          Ppat_var "empty" (lib/newRuleSyntax.ml[253,9476+4]..[253,9476+9])
        expression (lib/newRuleSyntax.ml[253,9476+10]..[261,9630+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/newRuleSyntax.ml[253,9476+10]..[253,9476+13])
            Ppat_var "pos" (lib/newRuleSyntax.ml[253,9476+10]..[253,9476+13])
          expression (lib/newRuleSyntax.ml[253,9476+14]..[261,9630+3])
            Pexp_constraint
            expression (lib/newRuleSyntax.ml[254,9502+2]..[261,9630+3])
              Pexp_record
              [
                "pos" (lib/newRuleSyntax.ml[255,9506+4]..[255,9506+7]) ghost
                  expression (lib/newRuleSyntax.ml[255,9506+4]..[255,9506+7])
                    Pexp_ident "pos" (lib/newRuleSyntax.ml[255,9506+4]..[255,9506+7])
                "producers" (lib/newRuleSyntax.ml[256,9515+4]..[256,9515+13])
                  expression (lib/newRuleSyntax.ml[256,9515+17]..[256,9515+19])
                    Pexp_construct "[]" (lib/newRuleSyntax.ml[256,9515+17]..[256,9515+19])
                    None
                "uxs" (lib/newRuleSyntax.ml[257,9536+4]..[257,9536+7])
                  expression (lib/newRuleSyntax.ml[257,9536+17]..[257,9536+19])
                    Pexp_construct "[]" (lib/newRuleSyntax.ml[257,9536+17]..[257,9536+19])
                    None
                "bindings" (lib/newRuleSyntax.ml[258,9557+4]..[258,9557+12])
                  expression (lib/newRuleSyntax.ml[258,9557+17]..[258,9557+29])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lib/newRuleSyntax.ml[258,9557+22]..[258,9557+23])
                      Ppat_var "a" (lib/newRuleSyntax.ml[258,9557+22]..[258,9557+23])
                    expression (lib/newRuleSyntax.ml[258,9557+27]..[258,9557+28])
                      Pexp_ident "a" (lib/newRuleSyntax.ml[258,9557+27]..[258,9557+28])
                "tuple" (lib/newRuleSyntax.ml[259,9588+4]..[259,9588+9])
                  expression (lib/newRuleSyntax.ml[259,9588+17]..[259,9588+19])
                    Pexp_construct "[]" (lib/newRuleSyntax.ml[259,9588+17]..[259,9588+19])
                    None
                "tilde_used" (lib/newRuleSyntax.ml[260,9609+4]..[260,9609+14])
                  expression (lib/newRuleSyntax.ml[260,9609+17]..[260,9609+19])
                    Pexp_construct "[]" (lib/newRuleSyntax.ml[260,9609+17]..[260,9609+19])
                    None
              ]
              None
            core_type (lib/newRuleSyntax.ml[253,9476+16]..[253,9476+23])
              Ptyp_constr "context" (lib/newRuleSyntax.ml[253,9476+16]..[253,9476+23])
              []
    ]
  structure_item (lib/newRuleSyntax.ml[265,9680+0]..[266,9736+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[265,9680+4]..[265,9680+8])
          Ppat_var "user" (lib/newRuleSyntax.ml[265,9680+4]..[265,9680+8])
        expression (lib/newRuleSyntax.ml[265,9680+9]..[266,9736+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/newRuleSyntax.ml[265,9680+9]..[265,9680+33])
            Ppat_constraint
            pattern (lib/newRuleSyntax.ml[265,9680+10]..[265,9680+11])
              Ppat_var "x" (lib/newRuleSyntax.ml[265,9680+10]..[265,9680+11])
            core_type (lib/newRuleSyntax.ml[265,9680+14]..[265,9680+32])
              Ptyp_constr "located" (lib/newRuleSyntax.ml[265,9680+25]..[265,9680+32])
              [
                core_type (lib/newRuleSyntax.ml[265,9680+14]..[265,9680+24])
                  Ptyp_constr "identifier" (lib/newRuleSyntax.ml[265,9680+14]..[265,9680+24])
                  []
              ]
          expression (lib/newRuleSyntax.ml[265,9680+34]..[266,9736+26])
            Pexp_constraint
            expression (lib/newRuleSyntax.ml[266,9736+2]..[266,9736+26])
              Pexp_construct "Some" (lib/newRuleSyntax.ml[266,9736+2]..[266,9736+6])
              Some
                expression (lib/newRuleSyntax.ml[266,9736+7]..[266,9736+26])
                  Pexp_apply
                  expression (lib/newRuleSyntax.ml[266,9736+8]..[266,9736+23])
                    Pexp_ident "Positions.value" (lib/newRuleSyntax.ml[266,9736+8]..[266,9736+23])
                  [
                    <arg>
                    Nolabel
                      expression (lib/newRuleSyntax.ml[266,9736+24]..[266,9736+25])
                        Pexp_ident "x" (lib/newRuleSyntax.ml[266,9736+24]..[266,9736+25])
                  ]
            core_type (lib/newRuleSyntax.ml[265,9680+36]..[265,9680+53])
              Ptyp_constr "option" (lib/newRuleSyntax.ml[265,9680+47]..[265,9680+53])
              [
                core_type (lib/newRuleSyntax.ml[265,9680+36]..[265,9680+46])
                  Ptyp_constr "identifier" (lib/newRuleSyntax.ml[265,9680+36]..[265,9680+46])
                  []
              ]
    ]
  structure_item (lib/newRuleSyntax.ml[268,9764+0]..[269,9795+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[268,9764+4]..[268,9764+8])
          Ppat_var "auto" (lib/newRuleSyntax.ml[268,9764+4]..[268,9764+8])
        core_type (lib/newRuleSyntax.ml[268,9764+11]..[268,9764+28])
          Ptyp_constr "option" (lib/newRuleSyntax.ml[268,9764+22]..[268,9764+28])
          [
            core_type (lib/newRuleSyntax.ml[268,9764+11]..[268,9764+21])
              Ptyp_constr "identifier" (lib/newRuleSyntax.ml[268,9764+11]..[268,9764+21])
              []
          ]
        expression (lib/newRuleSyntax.ml[269,9795+2]..[269,9795+6])
          Pexp_construct "None" (lib/newRuleSyntax.ml[269,9795+2]..[269,9795+6])
          None
    ]
  structure_item (lib/newRuleSyntax.ml[273,9835+0]..[274,9875+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[273,9835+4]..[273,9835+13])
          Ppat_var "producers" (lib/newRuleSyntax.ml[273,9835+4]..[273,9835+13])
        expression (lib/newRuleSyntax.ml[273,9835+14]..[274,9875+28]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/newRuleSyntax.ml[273,9835+14]..[273,9835+21])
            Ppat_var "context" (lib/newRuleSyntax.ml[273,9835+14]..[273,9835+21])
          expression (lib/newRuleSyntax.ml[273,9835+22]..[274,9875+28])
            Pexp_constraint
            expression (lib/newRuleSyntax.ml[274,9875+2]..[274,9875+28])
              Pexp_apply
              expression (lib/newRuleSyntax.ml[274,9875+2]..[274,9875+10])
                Pexp_ident "List.rev" (lib/newRuleSyntax.ml[274,9875+2]..[274,9875+10])
              [
                <arg>
                Nolabel
                  expression (lib/newRuleSyntax.ml[274,9875+11]..[274,9875+28])
                    Pexp_field
                    expression (lib/newRuleSyntax.ml[274,9875+11]..[274,9875+18])
                      Pexp_ident "context" (lib/newRuleSyntax.ml[274,9875+11]..[274,9875+18])
                    "producers" (lib/newRuleSyntax.ml[274,9875+19]..[274,9875+28])
              ]
            core_type (lib/newRuleSyntax.ml[273,9835+24]..[273,9835+37])
              Ptyp_constr "list" (lib/newRuleSyntax.ml[273,9835+33]..[273,9835+37])
              [
                core_type (lib/newRuleSyntax.ml[273,9835+24]..[273,9835+32])
                  Ptyp_constr "producer" (lib/newRuleSyntax.ml[273,9835+24]..[273,9835+32])
                  []
              ]
    ]
  structure_item (lib/newRuleSyntax.ml[278,9953+0]..[279,9997+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[278,9953+4]..[278,9953+7])
          Ppat_var "uxs" (lib/newRuleSyntax.ml[278,9953+4]..[278,9953+7])
        expression (lib/newRuleSyntax.ml[278,9953+8]..[279,9997+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/newRuleSyntax.ml[278,9953+8]..[278,9953+15])
            Ppat_var "context" (lib/newRuleSyntax.ml[278,9953+8]..[278,9953+15])
          expression (lib/newRuleSyntax.ml[278,9953+16]..[279,9997+38])
            Pexp_constraint
            expression (lib/newRuleSyntax.ml[279,9997+2]..[279,9997+38])
              Pexp_apply
              expression (lib/newRuleSyntax.ml[279,9997+2]..[279,9997+15])
                Pexp_ident "Array.of_list" (lib/newRuleSyntax.ml[279,9997+2]..[279,9997+15])
              [
                <arg>
                Nolabel
                  expression (lib/newRuleSyntax.ml[279,9997+16]..[279,9997+38])
                    Pexp_apply
                    expression (lib/newRuleSyntax.ml[279,9997+17]..[279,9997+25])
                      Pexp_ident "List.rev" (lib/newRuleSyntax.ml[279,9997+17]..[279,9997+25])
                    [
                      <arg>
                      Nolabel
                        expression (lib/newRuleSyntax.ml[279,9997+26]..[279,9997+37])
                          Pexp_field
                          expression (lib/newRuleSyntax.ml[279,9997+26]..[279,9997+33])
                            Pexp_ident "context" (lib/newRuleSyntax.ml[279,9997+26]..[279,9997+33])
                          "uxs" (lib/newRuleSyntax.ml[279,9997+34]..[279,9997+37])
                    ]
              ]
            core_type (lib/newRuleSyntax.ml[278,9953+18]..[278,9953+41])
              Ptyp_constr "array" (lib/newRuleSyntax.ml[278,9953+36]..[278,9953+41])
              [
                core_type (lib/newRuleSyntax.ml[278,9953+18]..[278,9953+35])
                  Ptyp_constr "option" (lib/newRuleSyntax.ml[278,9953+29]..[278,9953+35])
                  [
                    core_type (lib/newRuleSyntax.ml[278,9953+18]..[278,9953+28])
                      Ptyp_constr "identifier" (lib/newRuleSyntax.ml[278,9953+18]..[278,9953+28])
                      []
                  ]
              ]
    ]
  structure_item (lib/newRuleSyntax.ml[283,10065+0]..[284,10103+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[283,10065+4]..[283,10065+9])
          Ppat_var "tuple" (lib/newRuleSyntax.ml[283,10065+4]..[283,10065+9])
        expression (lib/newRuleSyntax.ml[283,10065+10]..[284,10103+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/newRuleSyntax.ml[283,10065+10]..[283,10065+17])
            Ppat_var "context" (lib/newRuleSyntax.ml[283,10065+10]..[283,10065+17])
          expression (lib/newRuleSyntax.ml[283,10065+18]..[284,10103+24])
            Pexp_constraint
            expression (lib/newRuleSyntax.ml[284,10103+2]..[284,10103+24])
              Pexp_apply
              expression (lib/newRuleSyntax.ml[284,10103+2]..[284,10103+10])
                Pexp_ident "List.rev" (lib/newRuleSyntax.ml[284,10103+2]..[284,10103+10])
              [
                <arg>
                Nolabel
                  expression (lib/newRuleSyntax.ml[284,10103+11]..[284,10103+24])
                    Pexp_field
                    expression (lib/newRuleSyntax.ml[284,10103+11]..[284,10103+18])
                      Pexp_ident "context" (lib/newRuleSyntax.ml[284,10103+11]..[284,10103+18])
                    "tuple" (lib/newRuleSyntax.ml[284,10103+19]..[284,10103+24])
              ]
            core_type (lib/newRuleSyntax.ml[283,10065+20]..[283,10065+35])
              Ptyp_constr "list" (lib/newRuleSyntax.ml[283,10065+31]..[283,10065+35])
              [
                core_type (lib/newRuleSyntax.ml[283,10065+20]..[283,10065+30])
                  Ptyp_constr "identifier" (lib/newRuleSyntax.ml[283,10065+20]..[283,10065+30])
                  []
              ]
    ]
  structure_item (lib/newRuleSyntax.ml[294,10459+0]..[296,10540+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[294,10459+4]..[294,10459+10])
          Ppat_var "semvar" (lib/newRuleSyntax.ml[294,10459+4]..[294,10459+10])
        expression (lib/newRuleSyntax.ml[294,10459+11]..[296,10540+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/newRuleSyntax.ml[294,10459+11]..[294,10459+18])
            Ppat_var "context" (lib/newRuleSyntax.ml[294,10459+11]..[294,10459+18])
          expression (lib/newRuleSyntax.ml[294,10459+19]..[296,10540+24])
            Pexp_constraint
            expression (lib/newRuleSyntax.ml[295,10493+2]..[296,10540+24])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/newRuleSyntax.ml[295,10493+6]..[295,10493+7])
                    Ppat_var "i" (lib/newRuleSyntax.ml[295,10493+6]..[295,10493+7])
                  expression (lib/newRuleSyntax.ml[295,10493+10]..[295,10493+43])
                    Pexp_apply
                    expression (lib/newRuleSyntax.ml[295,10493+40]..[295,10493+41])
                      Pexp_ident "+" (lib/newRuleSyntax.ml[295,10493+40]..[295,10493+41])
                    [
                      <arg>
                      Nolabel
                        expression (lib/newRuleSyntax.ml[295,10493+10]..[295,10493+39])
                          Pexp_apply
                          expression (lib/newRuleSyntax.ml[295,10493+10]..[295,10493+21])
                            Pexp_ident "List.length" (lib/newRuleSyntax.ml[295,10493+10]..[295,10493+21])
                          [
                            <arg>
                            Nolabel
                              expression (lib/newRuleSyntax.ml[295,10493+22]..[295,10493+39])
                                Pexp_field
                                expression (lib/newRuleSyntax.ml[295,10493+22]..[295,10493+29])
                                  Pexp_ident "context" (lib/newRuleSyntax.ml[295,10493+22]..[295,10493+29])
                                "producers" (lib/newRuleSyntax.ml[295,10493+30]..[295,10493+39])
                          ]
                      <arg>
                      Nolabel
                        expression (lib/newRuleSyntax.ml[295,10493+42]..[295,10493+43])
                          Pexp_constant PConst_int (1,None)
                    ]
              ]
              expression (lib/newRuleSyntax.ml[296,10540+2]..[296,10540+24])
                Pexp_apply
                expression (lib/newRuleSyntax.ml[296,10540+2]..[296,10540+16])
                  Pexp_ident "Printf.sprintf" (lib/newRuleSyntax.ml[296,10540+2]..[296,10540+16])
                [
                  <arg>
                  Nolabel
                    expression (lib/newRuleSyntax.ml[296,10540+17]..[296,10540+22])
                      Pexp_constant PConst_string("_%d",(lib/newRuleSyntax.ml[296,10540+18]..[296,10540+21]),None)
                  <arg>
                  Nolabel
                    expression (lib/newRuleSyntax.ml[296,10540+23]..[296,10540+24])
                      Pexp_ident "i" (lib/newRuleSyntax.ml[296,10540+23]..[296,10540+24])
                ]
            core_type (lib/newRuleSyntax.ml[294,10459+21]..[294,10459+31])
              Ptyp_constr "identifier" (lib/newRuleSyntax.ml[294,10459+21]..[294,10459+31])
              []
    ]
  structure_item (lib/newRuleSyntax.ml[302,10702+0]..[461,18366+34])
    Pstr_value Rec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[302,10702+8]..[302,10702+17])
          Ppat_var "parameter" (lib/newRuleSyntax.ml[302,10702+8]..[302,10702+17])
        expression (lib/newRuleSyntax.ml[302,10702+18]..[307,10937+57]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/newRuleSyntax.ml[302,10702+18]..[302,10702+41])
            Ppat_constraint
            pattern (lib/newRuleSyntax.ml[302,10702+19]..[302,10702+20])
              Ppat_var "e" (lib/newRuleSyntax.ml[302,10702+19]..[302,10702+20])
            core_type (lib/newRuleSyntax.ml[302,10702+23]..[302,10702+40])
              Ptyp_constr "symbol_expression" (lib/newRuleSyntax.ml[302,10702+23]..[302,10702+40])
              []
          expression (lib/newRuleSyntax.ml[302,10702+42]..[307,10937+57])
            Pexp_constraint
            expression (lib/newRuleSyntax.ml[303,10758+2]..[307,10937+57])
              Pexp_match
              expression (lib/newRuleSyntax.ml[303,10758+8]..[303,10758+9])
                Pexp_ident "e" (lib/newRuleSyntax.ml[303,10758+8]..[303,10758+9])
              [
                <case>
                  pattern (lib/newRuleSyntax.ml[304,10773+4]..[304,10773+31])
                    Ppat_construct "ESymbol" (lib/newRuleSyntax.ml[304,10773+4]..[304,10773+11])
                    Some
                      []
                      pattern (lib/newRuleSyntax.ml[304,10773+12]..[304,10773+31])
                        Ppat_tuple
                        [
                          pattern (lib/newRuleSyntax.ml[304,10773+13]..[304,10773+16])
                            Ppat_var "sym" (lib/newRuleSyntax.ml[304,10773+13]..[304,10773+16])
                          pattern (lib/newRuleSyntax.ml[304,10773+18]..[304,10773+22])
                            Ppat_var "args" (lib/newRuleSyntax.ml[304,10773+18]..[304,10773+22])
                          pattern (lib/newRuleSyntax.ml[304,10773+24]..[304,10773+30])
                            Ppat_var "_attrs" (lib/newRuleSyntax.ml[304,10773+24]..[304,10773+30])
                        ]
                  expression (lib/newRuleSyntax.ml[307,10937+6]..[307,10937+57])
                    Pexp_apply
                    expression (lib/newRuleSyntax.ml[307,10937+6]..[307,10937+20])
                      Pexp_ident "Parameters.app" (lib/newRuleSyntax.ml[307,10937+6]..[307,10937+20])
                    [
                      <arg>
                      Nolabel
                        expression (lib/newRuleSyntax.ml[307,10937+21]..[307,10937+24])
                          Pexp_ident "sym" (lib/newRuleSyntax.ml[307,10937+21]..[307,10937+24])
                      <arg>
                      Nolabel
                        expression (lib/newRuleSyntax.ml[307,10937+25]..[307,10937+57])
                          Pexp_apply
                          expression (lib/newRuleSyntax.ml[307,10937+26]..[307,10937+34])
                            Pexp_ident "List.map" (lib/newRuleSyntax.ml[307,10937+26]..[307,10937+34])
                          [
                            <arg>
                            Nolabel
                              expression (lib/newRuleSyntax.ml[307,10937+35]..[307,10937+51])
                                Pexp_ident "nested_parameter" (lib/newRuleSyntax.ml[307,10937+35]..[307,10937+51])
                            <arg>
                            Nolabel
                              expression (lib/newRuleSyntax.ml[307,10937+52]..[307,10937+56])
                                Pexp_ident "args" (lib/newRuleSyntax.ml[307,10937+52]..[307,10937+56])
                          ]
                    ]
              ]
            core_type (lib/newRuleSyntax.ml[302,10702+44]..[302,10702+53])
              Ptyp_constr "parameter" (lib/newRuleSyntax.ml[302,10702+44]..[302,10702+53])
              []
      <def>
        pattern (lib/newRuleSyntax.ml[311,11054+4]..[311,11054+20])
          Ppat_var "nested_parameter" (lib/newRuleSyntax.ml[311,11054+4]..[311,11054+20])
        expression (lib/newRuleSyntax.ml[311,11054+21]..[323,11761+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/newRuleSyntax.ml[311,11054+21]..[311,11054+37])
            Ppat_constraint
            pattern (lib/newRuleSyntax.ml[311,11054+22]..[311,11054+23])
              Ppat_var "e" (lib/newRuleSyntax.ml[311,11054+22]..[311,11054+23])
            core_type (lib/newRuleSyntax.ml[311,11054+26]..[311,11054+36])
              Ptyp_constr "expression" (lib/newRuleSyntax.ml[311,11054+26]..[311,11054+36])
              []
          expression (lib/newRuleSyntax.ml[311,11054+38]..[323,11761+16])
            Pexp_constraint
            expression (lib/newRuleSyntax.ml[313,11107+2]..[323,11761+16])
              Pexp_match
              expression (lib/newRuleSyntax.ml[313,11107+8]..[313,11107+25])
                Pexp_apply
                expression (lib/newRuleSyntax.ml[313,11107+8]..[313,11107+23])
                  Pexp_ident "Positions.value" (lib/newRuleSyntax.ml[313,11107+8]..[313,11107+23])
                [
                  <arg>
                  Nolabel
                    expression (lib/newRuleSyntax.ml[313,11107+24]..[313,11107+25])
                      Pexp_ident "e" (lib/newRuleSyntax.ml[313,11107+24]..[313,11107+25])
                ]
              [
                <case>
                  pattern (lib/newRuleSyntax.ml[314,11138+4]..[314,11138+64])
                    Ppat_construct "EChoice" (lib/newRuleSyntax.ml[314,11138+4]..[314,11138+11])
                    Some
                      []
                      pattern (lib/newRuleSyntax.ml[314,11138+12]..[314,11138+64])
                        Ppat_construct "::" (lib/newRuleSyntax.ml[314,11138+14]..[314,11138+64]) ghost
                        Some
                          []
                          pattern (lib/newRuleSyntax.ml[314,11138+14]..[314,11138+64]) ghost
                            Ppat_tuple
                            [
                              pattern (lib/newRuleSyntax.ml[314,11138+14]..[314,11138+62])
                                Ppat_construct "Branch" (lib/newRuleSyntax.ml[314,11138+14]..[314,11138+20])
                                Some
                                  []
                                  pattern (lib/newRuleSyntax.ml[314,11138+21]..[314,11138+62])
                                    Ppat_tuple
                                    [
                                      pattern (lib/newRuleSyntax.ml[314,11138+22]..[314,11138+58])
                                        Ppat_record Open
                                        [
                                          "Positions.value" (lib/newRuleSyntax.ml[314,11138+24]..[314,11138+39])
                                            pattern (lib/newRuleSyntax.ml[314,11138+42]..[314,11138+54])
                                              Ppat_construct "ESingleton" (lib/newRuleSyntax.ml[314,11138+42]..[314,11138+52])
                                              Some
                                                []
                                                pattern (lib/newRuleSyntax.ml[314,11138+53]..[314,11138+54])
                                                  Ppat_var "e" (lib/newRuleSyntax.ml[314,11138+53]..[314,11138+54])
                                        ]
                                      pattern (lib/newRuleSyntax.ml[314,11138+60]..[314,11138+61])
                                        Ppat_any
                                    ]
                              pattern (lib/newRuleSyntax.ml[314,11138+63]..[314,11138+64]) ghost
                                Ppat_construct "[]" (lib/newRuleSyntax.ml[314,11138+63]..[314,11138+64]) ghost
                                None
                            ]
                  expression (lib/newRuleSyntax.ml[323,11761+5]..[323,11761+16])
                    Pexp_apply
                    expression (lib/newRuleSyntax.ml[323,11761+5]..[323,11761+14])
                      Pexp_ident "parameter" (lib/newRuleSyntax.ml[323,11761+5]..[323,11761+14])
                    [
                      <arg>
                      Nolabel
                        expression (lib/newRuleSyntax.ml[323,11761+15]..[323,11761+16])
                          Pexp_ident "e" (lib/newRuleSyntax.ml[323,11761+15]..[323,11761+16])
                    ]
              ]
            core_type (lib/newRuleSyntax.ml[311,11054+40]..[311,11054+49])
              Ptyp_constr "parameter" (lib/newRuleSyntax.ml[311,11054+40]..[311,11054+49])
              []
      <def>
        pattern (lib/newRuleSyntax.ml[334,12172+4]..[334,12172+12])
          Ppat_var "producer" (lib/newRuleSyntax.ml[334,12172+4]..[334,12172+12])
        expression (lib/newRuleSyntax.ml[334,12172+13]..[335,12225+32]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/newRuleSyntax.ml[334,12172+13]..[334,12172+14])
            Ppat_var "x" (lib/newRuleSyntax.ml[334,12172+13]..[334,12172+14])
          expression (lib/newRuleSyntax.ml[334,12172+15]..[335,12225+32]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/newRuleSyntax.ml[334,12172+15]..[334,12172+39])
              Ppat_constraint
              pattern (lib/newRuleSyntax.ml[334,12172+16]..[334,12172+18])
                Ppat_var "e1" (lib/newRuleSyntax.ml[334,12172+16]..[334,12172+18])
              core_type (lib/newRuleSyntax.ml[334,12172+21]..[334,12172+38])
                Ptyp_constr "symbol_expression" (lib/newRuleSyntax.ml[334,12172+21]..[334,12172+38])
                []
            expression (lib/newRuleSyntax.ml[334,12172+40]..[335,12225+32])
              Pexp_constraint
              expression (lib/newRuleSyntax.ml[335,12225+2]..[335,12225+32])
                Pexp_tuple
                [
                  expression (lib/newRuleSyntax.ml[335,12225+2]..[335,12225+3])
                    Pexp_ident "x" (lib/newRuleSyntax.ml[335,12225+2]..[335,12225+3])
                  expression (lib/newRuleSyntax.ml[335,12225+5]..[335,12225+17])
                    Pexp_apply
                    expression (lib/newRuleSyntax.ml[335,12225+5]..[335,12225+14])
                      Pexp_ident "parameter" (lib/newRuleSyntax.ml[335,12225+5]..[335,12225+14])
                    [
                      <arg>
                      Nolabel
                        expression (lib/newRuleSyntax.ml[335,12225+15]..[335,12225+17])
                          Pexp_ident "e1" (lib/newRuleSyntax.ml[335,12225+15]..[335,12225+17])
                    ]
                  expression (lib/newRuleSyntax.ml[335,12225+19]..[335,12225+32])
                    Pexp_apply
                    expression (lib/newRuleSyntax.ml[335,12225+19]..[335,12225+29])
                      Pexp_ident "attributes" (lib/newRuleSyntax.ml[335,12225+19]..[335,12225+29])
                    [
                      <arg>
                      Nolabel
                        expression (lib/newRuleSyntax.ml[335,12225+30]..[335,12225+32])
                          Pexp_ident "e1" (lib/newRuleSyntax.ml[335,12225+30]..[335,12225+32])
                    ]
                ]
              core_type (lib/newRuleSyntax.ml[334,12172+42]..[334,12172+50])
                Ptyp_constr "producer" (lib/newRuleSyntax.ml[334,12172+42]..[334,12172+50])
                []
      <def>
        pattern (lib/newRuleSyntax.ml[340,12391+4]..[340,12391+10])
          Ppat_var "extend" (lib/newRuleSyntax.ml[340,12391+4]..[340,12391+10])
        expression (lib/newRuleSyntax.ml[340,12391+11]..[366,13737+20]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/newRuleSyntax.ml[340,12391+11]..[340,12391+24])
            Ppat_constraint
            pattern (lib/newRuleSyntax.ml[340,12391+12]..[340,12391+13])
              Ppat_var "p" (lib/newRuleSyntax.ml[340,12391+12]..[340,12391+13])
            core_type (lib/newRuleSyntax.ml[340,12391+16]..[340,12391+23])
              Ptyp_constr "pattern" (lib/newRuleSyntax.ml[340,12391+16]..[340,12391+23])
              []
          expression (lib/newRuleSyntax.ml[340,12391+25]..[366,13737+20]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/newRuleSyntax.ml[340,12391+25]..[340,12391+49])
              Ppat_constraint
              pattern (lib/newRuleSyntax.ml[340,12391+26]..[340,12391+28])
                Ppat_var "e1" (lib/newRuleSyntax.ml[340,12391+26]..[340,12391+28])
              core_type (lib/newRuleSyntax.ml[340,12391+31]..[340,12391+48])
                Ptyp_constr "symbol_expression" (lib/newRuleSyntax.ml[340,12391+31]..[340,12391+48])
                []
            expression (lib/newRuleSyntax.ml[340,12391+50]..[366,13737+20]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/newRuleSyntax.ml[340,12391+50]..[340,12391+69])
                Ppat_constraint
                pattern (lib/newRuleSyntax.ml[340,12391+51]..[340,12391+58])
                  Ppat_var "context" (lib/newRuleSyntax.ml[340,12391+51]..[340,12391+58])
                core_type (lib/newRuleSyntax.ml[340,12391+61]..[340,12391+68])
                  Ptyp_constr "context" (lib/newRuleSyntax.ml[340,12391+61]..[340,12391+68])
                  []
              expression (lib/newRuleSyntax.ml[340,12391+70]..[366,13737+20])
                Pexp_constraint
                expression (lib/newRuleSyntax.ml[341,12473+2]..[366,13737+20])
                  Pexp_match
                  expression (lib/newRuleSyntax.ml[341,12473+8]..[341,12473+9])
                    Pexp_ident "p" (lib/newRuleSyntax.ml[341,12473+8]..[341,12473+9])
                  [
                    <case>
                      pattern (lib/newRuleSyntax.ml[342,12488+4]..[342,12488+16])
                        Ppat_construct "SemPatVar" (lib/newRuleSyntax.ml[342,12488+4]..[342,12488+13])
                        Some
                          []
                          pattern (lib/newRuleSyntax.ml[342,12488+14]..[342,12488+16])
                            Ppat_var "x1" (lib/newRuleSyntax.ml[342,12488+14]..[342,12488+16])
                      expression (lib/newRuleSyntax.ml[345,12657+6]..[350,12950+41])
                        Pexp_record
                        [
                          "pos" (lib/newRuleSyntax.ml[345,12657+8]..[345,12657+11])
                            expression (lib/newRuleSyntax.ml[345,12657+43]..[345,12657+54])
                              Pexp_field
                              expression (lib/newRuleSyntax.ml[345,12657+43]..[345,12657+50])
                                Pexp_ident "context" (lib/newRuleSyntax.ml[345,12657+43]..[345,12657+50])
                              "pos" (lib/newRuleSyntax.ml[345,12657+51]..[345,12657+54])
                          "producers" (lib/newRuleSyntax.ml[346,12713+8]..[346,12713+17])
                            expression (lib/newRuleSyntax.ml[346,12713+21]..[346,12713+60])
                              Pexp_construct "::" (lib/newRuleSyntax.ml[346,12713+40]..[346,12713+42])
                              Some
                                expression (lib/newRuleSyntax.ml[346,12713+21]..[346,12713+60]) ghost
                                  Pexp_tuple
                                  [
                                    expression (lib/newRuleSyntax.ml[346,12713+21]..[346,12713+35])
                                      Pexp_apply
                                      expression (lib/newRuleSyntax.ml[346,12713+21]..[346,12713+29])
                                        Pexp_ident "producer" (lib/newRuleSyntax.ml[346,12713+21]..[346,12713+29])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/newRuleSyntax.ml[346,12713+30]..[346,12713+32])
                                            Pexp_ident "x1" (lib/newRuleSyntax.ml[346,12713+30]..[346,12713+32])
                                        <arg>
                                        Nolabel
                                          expression (lib/newRuleSyntax.ml[346,12713+33]..[346,12713+35])
                                            Pexp_ident "e1" (lib/newRuleSyntax.ml[346,12713+33]..[346,12713+35])
                                      ]
                                    expression (lib/newRuleSyntax.ml[346,12713+43]..[346,12713+60])
                                      Pexp_field
                                      expression (lib/newRuleSyntax.ml[346,12713+43]..[346,12713+50])
                                        Pexp_ident "context" (lib/newRuleSyntax.ml[346,12713+43]..[346,12713+50])
                                      "producers" (lib/newRuleSyntax.ml[346,12713+51]..[346,12713+60])
                                  ]
                          "uxs" (lib/newRuleSyntax.ml[347,12775+8]..[347,12775+11])
                            expression (lib/newRuleSyntax.ml[347,12775+21]..[347,12775+54])
                              Pexp_construct "::" (lib/newRuleSyntax.ml[347,12775+40]..[347,12775+42])
                              Some
                                expression (lib/newRuleSyntax.ml[347,12775+21]..[347,12775+54]) ghost
                                  Pexp_tuple
                                  [
                                    expression (lib/newRuleSyntax.ml[347,12775+21]..[347,12775+28])
                                      Pexp_apply
                                      expression (lib/newRuleSyntax.ml[347,12775+21]..[347,12775+25])
                                        Pexp_ident "user" (lib/newRuleSyntax.ml[347,12775+21]..[347,12775+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/newRuleSyntax.ml[347,12775+26]..[347,12775+28])
                                            Pexp_ident "x1" (lib/newRuleSyntax.ml[347,12775+26]..[347,12775+28])
                                      ]
                                    expression (lib/newRuleSyntax.ml[347,12775+43]..[347,12775+54])
                                      Pexp_field
                                      expression (lib/newRuleSyntax.ml[347,12775+43]..[347,12775+50])
                                        Pexp_ident "context" (lib/newRuleSyntax.ml[347,12775+43]..[347,12775+50])
                                      "uxs" (lib/newRuleSyntax.ml[347,12775+51]..[347,12775+54])
                                  ]
                          "bindings" (lib/newRuleSyntax.ml[348,12831+8]..[348,12831+16])
                            expression (lib/newRuleSyntax.ml[348,12831+43]..[348,12831+59])
                              Pexp_field
                              expression (lib/newRuleSyntax.ml[348,12831+43]..[348,12831+50])
                                Pexp_ident "context" (lib/newRuleSyntax.ml[348,12831+43]..[348,12831+50])
                              "bindings" (lib/newRuleSyntax.ml[348,12831+51]..[348,12831+59])
                          "tuple" (lib/newRuleSyntax.ml[349,12892+8]..[349,12892+13])
                            expression (lib/newRuleSyntax.ml[349,12892+21]..[349,12892+56])
                              Pexp_construct "::" (lib/newRuleSyntax.ml[349,12892+40]..[349,12892+42])
                              Some
                                expression (lib/newRuleSyntax.ml[349,12892+21]..[349,12892+56]) ghost
                                  Pexp_tuple
                                  [
                                    expression (lib/newRuleSyntax.ml[349,12892+21]..[349,12892+39])
                                      Pexp_apply
                                      expression (lib/newRuleSyntax.ml[349,12892+21]..[349,12892+36])
                                        Pexp_ident "Positions.value" (lib/newRuleSyntax.ml[349,12892+21]..[349,12892+36])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/newRuleSyntax.ml[349,12892+37]..[349,12892+39])
                                            Pexp_ident "x1" (lib/newRuleSyntax.ml[349,12892+37]..[349,12892+39])
                                      ]
                                    expression (lib/newRuleSyntax.ml[349,12892+43]..[349,12892+56])
                                      Pexp_field
                                      expression (lib/newRuleSyntax.ml[349,12892+43]..[349,12892+50])
                                        Pexp_ident "context" (lib/newRuleSyntax.ml[349,12892+43]..[349,12892+50])
                                      "tuple" (lib/newRuleSyntax.ml[349,12892+51]..[349,12892+56])
                                  ]
                          "tilde_used" (lib/newRuleSyntax.ml[350,12950+8]..[350,12950+18])
                            expression (lib/newRuleSyntax.ml[350,12950+21]..[350,12950+39])
                              Pexp_field
                              expression (lib/newRuleSyntax.ml[350,12950+21]..[350,12950+28])
                                Pexp_ident "context" (lib/newRuleSyntax.ml[350,12950+21]..[350,12950+28])
                              "tilde_used" (lib/newRuleSyntax.ml[350,12950+29]..[350,12950+39])
                        ]
                        None
                    <case>
                      pattern (lib/newRuleSyntax.ml[351,12992+4]..[351,12992+5])
                        Ppat_any
                      expression (lib/newRuleSyntax.ml[356,13260+6]..[366,13737+20])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/newRuleSyntax.ml[356,13260+10]..[356,13260+12])
                              Ppat_var "x1" (lib/newRuleSyntax.ml[356,13260+10]..[356,13260+12])
                            expression (lib/newRuleSyntax.ml[356,13260+15]..[356,13260+29])
                              Pexp_apply
                              expression (lib/newRuleSyntax.ml[356,13260+15]..[356,13260+21])
                                Pexp_ident "semvar" (lib/newRuleSyntax.ml[356,13260+15]..[356,13260+21])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/newRuleSyntax.ml[356,13260+22]..[356,13260+29])
                                    Pexp_ident "context" (lib/newRuleSyntax.ml[356,13260+22]..[356,13260+29])
                              ]
                        ]
                        expression (lib/newRuleSyntax.ml[357,13293+6]..[366,13737+20])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lib/newRuleSyntax.ml[357,13293+10]..[357,13293+20])
                                Ppat_var "tilde_used" (lib/newRuleSyntax.ml[357,13293+10]..[357,13293+20])
                              expression (lib/newRuleSyntax.ml[357,13293+23]..[357,13293+54])
                                Pexp_apply
                                expression (lib/newRuleSyntax.ml[357,13293+23]..[357,13293+33])
                                  Pexp_ident "tilde_used" (lib/newRuleSyntax.ml[357,13293+23]..[357,13293+33])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/newRuleSyntax.ml[357,13293+34]..[357,13293+52])
                                      Pexp_field
                                      expression (lib/newRuleSyntax.ml[357,13293+34]..[357,13293+41])
                                        Pexp_ident "context" (lib/newRuleSyntax.ml[357,13293+34]..[357,13293+41])
                                      "tilde_used" (lib/newRuleSyntax.ml[357,13293+42]..[357,13293+52])
                                  <arg>
                                  Nolabel
                                    expression (lib/newRuleSyntax.ml[357,13293+53]..[357,13293+54])
                                      Pexp_ident "p" (lib/newRuleSyntax.ml[357,13293+53]..[357,13293+54])
                                ]
                          ]
                          expression (lib/newRuleSyntax.ml[358,13351+6]..[366,13737+20])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/newRuleSyntax.ml[358,13351+10]..[358,13351+11])
                                  Ppat_var "p" (lib/newRuleSyntax.ml[358,13351+10]..[358,13351+11])
                                core_type (lib/newRuleSyntax.ml[358,13351+14]..[358,13351+24])
                                  Ptyp_constr "IL.pattern" (lib/newRuleSyntax.ml[358,13351+14]..[358,13351+24])
                                  []
                                expression (lib/newRuleSyntax.ml[358,13351+27]..[358,13351+39])
                                  Pexp_apply
                                  expression (lib/newRuleSyntax.ml[358,13351+27]..[358,13351+34])
                                    Pexp_ident "pattern" (lib/newRuleSyntax.ml[358,13351+27]..[358,13351+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/newRuleSyntax.ml[358,13351+35]..[358,13351+37])
                                        Pexp_ident "x1" (lib/newRuleSyntax.ml[358,13351+35]..[358,13351+37])
                                    <arg>
                                    Nolabel
                                      expression (lib/newRuleSyntax.ml[358,13351+38]..[358,13351+39])
                                        Pexp_ident "p" (lib/newRuleSyntax.ml[358,13351+38]..[358,13351+39])
                                  ]
                            ]
                            expression (lib/newRuleSyntax.ml[359,13394+6]..[366,13737+20])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/newRuleSyntax.ml[359,13394+10]..[359,13394+17])
                                    Ppat_var "binding" (lib/newRuleSyntax.ml[359,13394+10]..[359,13394+17])
                                  expression (lib/newRuleSyntax.ml[359,13394+20]..[359,13394+36])
                                    Pexp_apply
                                    expression (lib/newRuleSyntax.ml[359,13394+20]..[359,13394+31])
                                      Pexp_ident "Action.bind" (lib/newRuleSyntax.ml[359,13394+20]..[359,13394+31])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/newRuleSyntax.ml[359,13394+32]..[359,13394+33])
                                          Pexp_ident "p" (lib/newRuleSyntax.ml[359,13394+32]..[359,13394+33])
                                      <arg>
                                      Nolabel
                                        expression (lib/newRuleSyntax.ml[359,13394+34]..[359,13394+36])
                                          Pexp_ident "x1" (lib/newRuleSyntax.ml[359,13394+34]..[359,13394+36])
                                    ]
                              ]
                              expression (lib/newRuleSyntax.ml[360,13434+6]..[366,13737+20])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/newRuleSyntax.ml[360,13434+10]..[360,13434+12])
                                      Ppat_var "x1" (lib/newRuleSyntax.ml[360,13434+10]..[360,13434+12])
                                    expression (lib/newRuleSyntax.ml[360,13434+15]..[360,13434+39])
                                      Pexp_apply
                                      expression (lib/newRuleSyntax.ml[360,13434+15]..[360,13434+36])
                                        Pexp_ident "Positions.unknown_pos" (lib/newRuleSyntax.ml[360,13434+15]..[360,13434+36])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/newRuleSyntax.ml[360,13434+37]..[360,13434+39])
                                            Pexp_ident "x1" (lib/newRuleSyntax.ml[360,13434+37]..[360,13434+39])
                                      ]
                                ]
                                expression (lib/newRuleSyntax.ml[361,13477+6]..[366,13737+20])
                                  Pexp_record
                                  [
                                    "pos" (lib/newRuleSyntax.ml[361,13477+8]..[361,13477+11])
                                      expression (lib/newRuleSyntax.ml[361,13477+39]..[361,13477+50])
                                        Pexp_field
                                        expression (lib/newRuleSyntax.ml[361,13477+39]..[361,13477+46])
                                          Pexp_ident "context" (lib/newRuleSyntax.ml[361,13477+39]..[361,13477+46])
                                        "pos" (lib/newRuleSyntax.ml[361,13477+47]..[361,13477+50])
                                    "producers" (lib/newRuleSyntax.ml[362,13529+8]..[362,13529+17])
                                      expression (lib/newRuleSyntax.ml[362,13529+21]..[362,13529+56])
                                        Pexp_construct "::" (lib/newRuleSyntax.ml[362,13529+36]..[362,13529+38])
                                        Some
                                          expression (lib/newRuleSyntax.ml[362,13529+21]..[362,13529+56]) ghost
                                            Pexp_tuple
                                            [
                                              expression (lib/newRuleSyntax.ml[362,13529+21]..[362,13529+35])
                                                Pexp_apply
                                                expression (lib/newRuleSyntax.ml[362,13529+21]..[362,13529+29])
                                                  Pexp_ident "producer" (lib/newRuleSyntax.ml[362,13529+21]..[362,13529+29])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/newRuleSyntax.ml[362,13529+30]..[362,13529+32])
                                                      Pexp_ident "x1" (lib/newRuleSyntax.ml[362,13529+30]..[362,13529+32])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/newRuleSyntax.ml[362,13529+33]..[362,13529+35])
                                                      Pexp_ident "e1" (lib/newRuleSyntax.ml[362,13529+33]..[362,13529+35])
                                                ]
                                              expression (lib/newRuleSyntax.ml[362,13529+39]..[362,13529+56])
                                                Pexp_field
                                                expression (lib/newRuleSyntax.ml[362,13529+39]..[362,13529+46])
                                                  Pexp_ident "context" (lib/newRuleSyntax.ml[362,13529+39]..[362,13529+46])
                                                "producers" (lib/newRuleSyntax.ml[362,13529+47]..[362,13529+56])
                                            ]
                                    "uxs" (lib/newRuleSyntax.ml[363,13587+8]..[363,13587+11])
                                      expression (lib/newRuleSyntax.ml[363,13587+21]..[363,13587+50])
                                        Pexp_construct "::" (lib/newRuleSyntax.ml[363,13587+36]..[363,13587+38])
                                        Some
                                          expression (lib/newRuleSyntax.ml[363,13587+21]..[363,13587+50]) ghost
                                            Pexp_tuple
                                            [
                                              expression (lib/newRuleSyntax.ml[363,13587+21]..[363,13587+25])
                                                Pexp_ident "auto" (lib/newRuleSyntax.ml[363,13587+21]..[363,13587+25])
                                              expression (lib/newRuleSyntax.ml[363,13587+39]..[363,13587+50])
                                                Pexp_field
                                                expression (lib/newRuleSyntax.ml[363,13587+39]..[363,13587+46])
                                                  Pexp_ident "context" (lib/newRuleSyntax.ml[363,13587+39]..[363,13587+46])
                                                "uxs" (lib/newRuleSyntax.ml[363,13587+47]..[363,13587+50])
                                            ]
                                    "bindings" (lib/newRuleSyntax.ml[364,13639+8]..[364,13639+16])
                                      expression (lib/newRuleSyntax.ml[364,13639+21]..[364,13639+55])
                                        Pexp_apply
                                        expression (lib/newRuleSyntax.ml[364,13639+36]..[364,13639+38])
                                          Pexp_ident ">>" (lib/newRuleSyntax.ml[364,13639+36]..[364,13639+38])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/newRuleSyntax.ml[364,13639+21]..[364,13639+28])
                                              Pexp_ident "binding" (lib/newRuleSyntax.ml[364,13639+21]..[364,13639+28])
                                          <arg>
                                          Nolabel
                                            expression (lib/newRuleSyntax.ml[364,13639+39]..[364,13639+55])
                                              Pexp_field
                                              expression (lib/newRuleSyntax.ml[364,13639+39]..[364,13639+46])
                                                Pexp_ident "context" (lib/newRuleSyntax.ml[364,13639+39]..[364,13639+46])
                                              "bindings" (lib/newRuleSyntax.ml[364,13639+47]..[364,13639+55])
                                        ]
                                    "tuple" (lib/newRuleSyntax.ml[365,13696+8]..[365,13696+13])
                                      expression (lib/newRuleSyntax.ml[365,13696+21]..[365,13696+39])
                                        Pexp_apply
                                        expression (lib/newRuleSyntax.ml[365,13696+21]..[365,13696+23])
                                          Pexp_ident "bv" (lib/newRuleSyntax.ml[365,13696+21]..[365,13696+23])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/newRuleSyntax.ml[365,13696+24]..[365,13696+37])
                                              Pexp_field
                                              expression (lib/newRuleSyntax.ml[365,13696+24]..[365,13696+31])
                                                Pexp_ident "context" (lib/newRuleSyntax.ml[365,13696+24]..[365,13696+31])
                                              "tuple" (lib/newRuleSyntax.ml[365,13696+32]..[365,13696+37])
                                          <arg>
                                          Nolabel
                                            expression (lib/newRuleSyntax.ml[365,13696+38]..[365,13696+39])
                                              Pexp_ident "p" (lib/newRuleSyntax.ml[365,13696+38]..[365,13696+39])
                                        ]
                                    "tilde_used" (lib/newRuleSyntax.ml[366,13737+8]..[366,13737+18]) ghost
                                      expression (lib/newRuleSyntax.ml[366,13737+8]..[366,13737+18])
                                        Pexp_ident "tilde_used" (lib/newRuleSyntax.ml[366,13737+8]..[366,13737+18])
                                  ]
                                  None
                  ]
                core_type (lib/newRuleSyntax.ml[340,12391+72]..[340,12391+79])
                  Ptyp_constr "context" (lib/newRuleSyntax.ml[340,12391+72]..[340,12391+79])
                  []
      <def>
        pattern (lib/newRuleSyntax.ml[370,13816+4]..[370,13816+18])
          Ppat_var "production_aux" (lib/newRuleSyntax.ml[370,13816+4]..[370,13816+18])
        expression (lib/newRuleSyntax.ml[371,13835+2]..[396,14937+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/newRuleSyntax.ml[371,13835+2]..[371,13835+21])
            Ppat_constraint
            pattern (lib/newRuleSyntax.ml[371,13835+3]..[371,13835+10])
              Ppat_var "context" (lib/newRuleSyntax.ml[371,13835+3]..[371,13835+10])
            core_type (lib/newRuleSyntax.ml[371,13835+13]..[371,13835+20])
              Ptyp_constr "context" (lib/newRuleSyntax.ml[371,13835+13]..[371,13835+20])
              []
          expression (lib/newRuleSyntax.ml[372,13857+2]..[396,14937+7]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/newRuleSyntax.ml[372,13857+2]..[372,13857+22])
              Ppat_constraint
              pattern (lib/newRuleSyntax.ml[372,13857+3]..[372,13857+4])
                Ppat_var "e" (lib/newRuleSyntax.ml[372,13857+3]..[372,13857+4])
              core_type (lib/newRuleSyntax.ml[372,13857+7]..[372,13857+21])
                Ptyp_constr "seq_expression" (lib/newRuleSyntax.ml[372,13857+7]..[372,13857+21])
                []
            expression (lib/newRuleSyntax.ml[373,13880+2]..[396,14937+7]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/newRuleSyntax.ml[373,13880+2]..[373,13880+35])
                Ppat_constraint
                pattern (lib/newRuleSyntax.ml[373,13880+3]..[373,13880+8])
                  Ppat_var "level" (lib/newRuleSyntax.ml[373,13880+3]..[373,13880+8])
                core_type (lib/newRuleSyntax.ml[373,13880+11]..[373,13880+34])
                  Ptyp_constr "branch_production_level" (lib/newRuleSyntax.ml[373,13880+11]..[373,13880+34])
                  []
              expression (lib/newRuleSyntax.ml[374,13916+0]..[396,14937+7])
                Pexp_constraint
                expression (lib/newRuleSyntax.ml[375,13941+2]..[396,14937+7])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/newRuleSyntax.ml[375,13941+6]..[375,13941+12])
                        Ppat_tuple
                        [
                          pattern (lib/newRuleSyntax.ml[375,13941+6]..[375,13941+7])
                            Ppat_var "e" (lib/newRuleSyntax.ml[375,13941+6]..[375,13941+7])
                          pattern (lib/newRuleSyntax.ml[375,13941+9]..[375,13941+12])
                            Ppat_var "pos" (lib/newRuleSyntax.ml[375,13941+9]..[375,13941+12])
                        ]
                      expression (lib/newRuleSyntax.ml[375,13941+15]..[375,13941+36])
                        Pexp_apply
                        expression (lib/newRuleSyntax.ml[375,13941+15]..[375,13941+34])
                          Pexp_ident "Positions.decompose" (lib/newRuleSyntax.ml[375,13941+15]..[375,13941+34])
                        [
                          <arg>
                          Nolabel
                            expression (lib/newRuleSyntax.ml[375,13941+35]..[375,13941+36])
                              Pexp_ident "e" (lib/newRuleSyntax.ml[375,13941+35]..[375,13941+36])
                        ]
                  ]
                  expression (lib/newRuleSyntax.ml[376,13981+2]..[396,14937+7])
                    Pexp_match
                    expression (lib/newRuleSyntax.ml[376,13981+8]..[376,13981+9])
                      Pexp_ident "e" (lib/newRuleSyntax.ml[376,13981+8]..[376,13981+9])
                    [
                      <case>
                        pattern (lib/newRuleSyntax.ml[378,13997+4]..[378,13997+21])
                          Ppat_construct "ECons" (lib/newRuleSyntax.ml[378,13997+4]..[378,13997+9])
                          Some
                            []
                            pattern (lib/newRuleSyntax.ml[378,13997+10]..[378,13997+21])
                              Ppat_tuple
                              [
                                pattern (lib/newRuleSyntax.ml[378,13997+11]..[378,13997+12])
                                  Ppat_var "p" (lib/newRuleSyntax.ml[378,13997+11]..[378,13997+12])
                                pattern (lib/newRuleSyntax.ml[378,13997+14]..[378,13997+16])
                                  Ppat_var "e1" (lib/newRuleSyntax.ml[378,13997+14]..[378,13997+16])
                                pattern (lib/newRuleSyntax.ml[378,13997+18]..[378,13997+20])
                                  Ppat_var "e2" (lib/newRuleSyntax.ml[378,13997+18]..[378,13997+20])
                              ]
                        expression (lib/newRuleSyntax.ml[381,14147+6]..[381,14147+51])
                          Pexp_apply
                          expression (lib/newRuleSyntax.ml[381,14147+6]..[381,14147+20])
                            Pexp_ident "production_aux" (lib/newRuleSyntax.ml[381,14147+6]..[381,14147+20])
                          [
                            <arg>
                            Nolabel
                              expression (lib/newRuleSyntax.ml[381,14147+21]..[381,14147+42])
                                Pexp_apply
                                expression (lib/newRuleSyntax.ml[381,14147+22]..[381,14147+28])
                                  Pexp_ident "extend" (lib/newRuleSyntax.ml[381,14147+22]..[381,14147+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/newRuleSyntax.ml[381,14147+29]..[381,14147+30])
                                      Pexp_ident "p" (lib/newRuleSyntax.ml[381,14147+29]..[381,14147+30])
                                  <arg>
                                  Nolabel
                                    expression (lib/newRuleSyntax.ml[381,14147+31]..[381,14147+33])
                                      Pexp_ident "e1" (lib/newRuleSyntax.ml[381,14147+31]..[381,14147+33])
                                  <arg>
                                  Nolabel
                                    expression (lib/newRuleSyntax.ml[381,14147+34]..[381,14147+41])
                                      Pexp_ident "context" (lib/newRuleSyntax.ml[381,14147+34]..[381,14147+41])
                                ]
                            <arg>
                            Nolabel
                              expression (lib/newRuleSyntax.ml[381,14147+43]..[381,14147+45])
                                Pexp_ident "e2" (lib/newRuleSyntax.ml[381,14147+43]..[381,14147+45])
                            <arg>
                            Nolabel
                              expression (lib/newRuleSyntax.ml[381,14147+46]..[381,14147+51])
                                Pexp_ident "level" (lib/newRuleSyntax.ml[381,14147+46]..[381,14147+51])
                          ]
                      <case>
                        pattern (lib/newRuleSyntax.ml[383,14200+4]..[383,14200+44])
                          Ppat_construct "EAction" (lib/newRuleSyntax.ml[383,14200+4]..[383,14200+11])
                          Some
                            []
                            pattern (lib/newRuleSyntax.ml[383,14200+12]..[383,14200+44])
                              Ppat_tuple
                              [
                                pattern (lib/newRuleSyntax.ml[383,14200+13]..[383,14200+37])
                                  Ppat_construct "XATraditional" (lib/newRuleSyntax.ml[383,14200+13]..[383,14200+26])
                                  Some
                                    []
                                    pattern (lib/newRuleSyntax.ml[383,14200+27]..[383,14200+37])
                                      Ppat_var "raw_action" (lib/newRuleSyntax.ml[383,14200+27]..[383,14200+37])
                                pattern (lib/newRuleSyntax.ml[383,14200+39]..[383,14200+43])
                                  Ppat_var "prec" (lib/newRuleSyntax.ml[383,14200+39]..[383,14200+43])
                              ]
                        expression (lib/newRuleSyntax.ml[385,14315+6]..[396,14937+7])
                          Pexp_sequence
                          expression (lib/newRuleSyntax.ml[385,14315+6]..[385,14315+43])
                            Pexp_apply
                            expression (lib/newRuleSyntax.ml[385,14315+6]..[385,14315+24])
                              Pexp_ident "tilde_used_warning" (lib/newRuleSyntax.ml[385,14315+6]..[385,14315+24])
                            [
                              <arg>
                              Nolabel
                                expression (lib/newRuleSyntax.ml[385,14315+25]..[385,14315+43])
                                  Pexp_field
                                  expression (lib/newRuleSyntax.ml[385,14315+25]..[385,14315+32])
                                    Pexp_ident "context" (lib/newRuleSyntax.ml[385,14315+25]..[385,14315+32])
                                  "tilde_used" (lib/newRuleSyntax.ml[385,14315+33]..[385,14315+43])
                            ]
                          expression (lib/newRuleSyntax.ml[389,14570+6]..[396,14937+7])
                            Pexp_record
                            [
                              "pr_branch_position" (lib/newRuleSyntax.ml[390,14578+8]..[390,14578+26])
                                expression (lib/newRuleSyntax.ml[390,14578+37]..[390,14578+48])
                                  Pexp_field
                                  expression (lib/newRuleSyntax.ml[390,14578+37]..[390,14578+44])
                                    Pexp_ident "context" (lib/newRuleSyntax.ml[390,14578+37]..[390,14578+44])
                                  "pos" (lib/newRuleSyntax.ml[390,14578+45]..[390,14578+48])
                              "pr_producers" (lib/newRuleSyntax.ml[391,14628+8]..[391,14628+20])
                                expression (lib/newRuleSyntax.ml[391,14628+37]..[391,14628+54])
                                  Pexp_apply
                                  expression (lib/newRuleSyntax.ml[391,14628+37]..[391,14628+46])
                                    Pexp_ident "producers" (lib/newRuleSyntax.ml[391,14628+37]..[391,14628+46])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/newRuleSyntax.ml[391,14628+47]..[391,14628+54])
                                        Pexp_ident "context" (lib/newRuleSyntax.ml[391,14628+47]..[391,14628+54])
                                  ]
                            ]
                            None
                    ]
                core_type (lib/newRuleSyntax.ml[374,13916+2]..[374,13916+22])
                  Ptyp_constr "parameterized_branch" (lib/newRuleSyntax.ml[374,13916+2]..[374,13916+22])
                  []
      <def>
        pattern (lib/newRuleSyntax.ml[452,18079+4]..[452,18079+14])
          Ppat_var "production" (lib/newRuleSyntax.ml[452,18079+4]..[452,18079+14])
        expression (lib/newRuleSyntax.ml[452,18079+15]..[456,18210+36]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/newRuleSyntax.ml[452,18079+15]..[452,18079+43])
            Ppat_constraint
            pattern (lib/newRuleSyntax.ml[452,18079+16]..[452,18079+33])
              Ppat_construct "Branch" (lib/newRuleSyntax.ml[452,18079+16]..[452,18079+22])
              Some
                []
                pattern (lib/newRuleSyntax.ml[452,18079+23]..[452,18079+33])
                  Ppat_tuple
                  [
                    pattern (lib/newRuleSyntax.ml[452,18079+24]..[452,18079+25])
                      Ppat_var "e" (lib/newRuleSyntax.ml[452,18079+24]..[452,18079+25])
                    pattern (lib/newRuleSyntax.ml[452,18079+27]..[452,18079+32])
                      Ppat_var "level" (lib/newRuleSyntax.ml[452,18079+27]..[452,18079+32])
                  ]
            core_type (lib/newRuleSyntax.ml[452,18079+36]..[452,18079+42])
              Ptyp_constr "branch" (lib/newRuleSyntax.ml[452,18079+36]..[452,18079+42])
              []
          expression (lib/newRuleSyntax.ml[453,18125+2]..[456,18210+36])
            Pexp_let Nonrec
            [
              <def>
                pattern (lib/newRuleSyntax.ml[453,18125+6]..[453,18125+7])
                  Ppat_var "e" (lib/newRuleSyntax.ml[453,18125+6]..[453,18125+7])
                expression (lib/newRuleSyntax.ml[453,18125+10]..[453,18125+24])
                  Pexp_apply
                  expression (lib/newRuleSyntax.ml[453,18125+10]..[453,18125+22])
                    Pexp_ident "resolve_puns" (lib/newRuleSyntax.ml[453,18125+10]..[453,18125+22])
                  [
                    <arg>
                    Nolabel
                      expression (lib/newRuleSyntax.ml[453,18125+23]..[453,18125+24])
                        Pexp_ident "e" (lib/newRuleSyntax.ml[453,18125+23]..[453,18125+24])
                  ]
            ]
            expression (lib/newRuleSyntax.ml[454,18153+2]..[456,18210+36])
              Pexp_sequence
              expression (lib/newRuleSyntax.ml[454,18153+2]..[454,18153+19])
                Pexp_apply
                expression (lib/newRuleSyntax.ml[454,18153+2]..[454,18153+17])
                  Pexp_ident "check_linearity" (lib/newRuleSyntax.ml[454,18153+2]..[454,18153+17])
                [
                  <arg>
                  Nolabel
                    expression (lib/newRuleSyntax.ml[454,18153+18]..[454,18153+19])
                      Pexp_ident "e" (lib/newRuleSyntax.ml[454,18153+18]..[454,18153+19])
                ]
              expression (lib/newRuleSyntax.ml[455,18174+2]..[456,18210+36])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lib/newRuleSyntax.ml[455,18174+6]..[455,18174+9])
                      Ppat_var "pos" (lib/newRuleSyntax.ml[455,18174+6]..[455,18174+9])
                    expression (lib/newRuleSyntax.ml[455,18174+12]..[455,18174+32])
                      Pexp_apply
                      expression (lib/newRuleSyntax.ml[455,18174+12]..[455,18174+30])
                        Pexp_ident "Positions.position" (lib/newRuleSyntax.ml[455,18174+12]..[455,18174+30])
                      [
                        <arg>
                        Nolabel
                          expression (lib/newRuleSyntax.ml[455,18174+31]..[455,18174+32])
                            Pexp_ident "e" (lib/newRuleSyntax.ml[455,18174+31]..[455,18174+32])
                      ]
                ]
                expression (lib/newRuleSyntax.ml[456,18210+2]..[456,18210+36])
                  Pexp_apply
                  expression (lib/newRuleSyntax.ml[456,18210+2]..[456,18210+16])
                    Pexp_ident "production_aux" (lib/newRuleSyntax.ml[456,18210+2]..[456,18210+16])
                  [
                    <arg>
                    Nolabel
                      expression (lib/newRuleSyntax.ml[456,18210+17]..[456,18210+28])
                        Pexp_apply
                        expression (lib/newRuleSyntax.ml[456,18210+18]..[456,18210+23])
                          Pexp_ident "empty" (lib/newRuleSyntax.ml[456,18210+18]..[456,18210+23])
                        [
                          <arg>
                          Nolabel
                            expression (lib/newRuleSyntax.ml[456,18210+24]..[456,18210+27])
                              Pexp_ident "pos" (lib/newRuleSyntax.ml[456,18210+24]..[456,18210+27])
                        ]
                    <arg>
                    Nolabel
                      expression (lib/newRuleSyntax.ml[456,18210+29]..[456,18210+30])
                        Pexp_ident "e" (lib/newRuleSyntax.ml[456,18210+29]..[456,18210+30])
                    <arg>
                    Nolabel
                      expression (lib/newRuleSyntax.ml[456,18210+31]..[456,18210+36])
                        Pexp_ident "level" (lib/newRuleSyntax.ml[456,18210+31]..[456,18210+36])
                  ]
      <def>
        pattern (lib/newRuleSyntax.ml[458,18248+4]..[458,18248+15])
          Ppat_var "productions" (lib/newRuleSyntax.ml[458,18248+4]..[458,18248+15])
        expression (lib/newRuleSyntax.ml[458,18248+16]..[461,18366+34]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/newRuleSyntax.ml[458,18248+16]..[458,18248+32])
            Ppat_constraint
            pattern (lib/newRuleSyntax.ml[458,18248+17]..[458,18248+18])
              Ppat_var "e" (lib/newRuleSyntax.ml[458,18248+17]..[458,18248+18])
            core_type (lib/newRuleSyntax.ml[458,18248+21]..[458,18248+31])
              Ptyp_constr "expression" (lib/newRuleSyntax.ml[458,18248+21]..[458,18248+31])
              []
          expression (lib/newRuleSyntax.ml[458,18248+33]..[461,18366+34])
            Pexp_constraint
            expression (lib/newRuleSyntax.ml[459,18311+2]..[461,18366+34])
              Pexp_match
              expression (lib/newRuleSyntax.ml[459,18311+8]..[459,18311+25])
                Pexp_apply
                expression (lib/newRuleSyntax.ml[459,18311+8]..[459,18311+23])
                  Pexp_ident "Positions.value" (lib/newRuleSyntax.ml[459,18311+8]..[459,18311+23])
                [
                  <arg>
                  Nolabel
                    expression (lib/newRuleSyntax.ml[459,18311+24]..[459,18311+25])
                      Pexp_ident "e" (lib/newRuleSyntax.ml[459,18311+24]..[459,18311+25])
                ]
              [
                <case>
                  pattern (lib/newRuleSyntax.ml[460,18342+4]..[460,18342+20])
                    Ppat_construct "EChoice" (lib/newRuleSyntax.ml[460,18342+4]..[460,18342+11])
                    Some
                      []
                      pattern (lib/newRuleSyntax.ml[460,18342+12]..[460,18342+20])
                        Ppat_var "branches" (lib/newRuleSyntax.ml[460,18342+12]..[460,18342+20])
                  expression (lib/newRuleSyntax.ml[461,18366+6]..[461,18366+34])
                    Pexp_apply
                    expression (lib/newRuleSyntax.ml[461,18366+6]..[461,18366+14])
                      Pexp_ident "List.map" (lib/newRuleSyntax.ml[461,18366+6]..[461,18366+14])
                    [
                      <arg>
                      Nolabel
                        expression (lib/newRuleSyntax.ml[461,18366+15]..[461,18366+25])
                          Pexp_ident "production" (lib/newRuleSyntax.ml[461,18366+15]..[461,18366+25])
                      <arg>
                      Nolabel
                        expression (lib/newRuleSyntax.ml[461,18366+26]..[461,18366+34])
                          Pexp_ident "branches" (lib/newRuleSyntax.ml[461,18366+26]..[461,18366+34])
                    ]
              ]
            core_type (lib/newRuleSyntax.ml[458,18248+35]..[458,18248+60])
              Ptyp_constr "list" (lib/newRuleSyntax.ml[458,18248+56]..[458,18248+60])
              [
                core_type (lib/newRuleSyntax.ml[458,18248+35]..[458,18248+55])
                  Ptyp_constr "parameterized_branch" (lib/newRuleSyntax.ml[458,18248+35]..[458,18248+55])
                  []
              ]
    ]
  structure_item (lib/newRuleSyntax.ml[467,18529+0]..[476,18947+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[467,18529+4]..[467,18529+8])
          Ppat_var "rule" (lib/newRuleSyntax.ml[467,18529+4]..[467,18529+8])
        expression (lib/newRuleSyntax.ml[467,18529+9]..[476,18947+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/newRuleSyntax.ml[467,18529+9]..[467,18529+22])
            Ppat_constraint
            pattern (lib/newRuleSyntax.ml[467,18529+10]..[467,18529+14])
              Ppat_var "rule" (lib/newRuleSyntax.ml[467,18529+10]..[467,18529+14])
            core_type (lib/newRuleSyntax.ml[467,18529+17]..[467,18529+21])
              Ptyp_constr "rule" (lib/newRuleSyntax.ml[467,18529+17]..[467,18529+21])
              []
          expression (lib/newRuleSyntax.ml[467,18529+23]..[476,18947+3])
            Pexp_constraint
            expression (lib/newRuleSyntax.ml[468,18575+2]..[476,18947+3])
              Pexp_record
              [
                "pr_nt" (lib/newRuleSyntax.ml[471,18669+4]..[471,18669+9])
                  expression (lib/newRuleSyntax.ml[471,18669+21]..[471,18669+50])
                    Pexp_apply
                    expression (lib/newRuleSyntax.ml[471,18669+21]..[471,18669+36])
                      Pexp_ident "Positions.value" (lib/newRuleSyntax.ml[471,18669+21]..[471,18669+36])
                    [
                      <arg>
                      Nolabel
                        expression (lib/newRuleSyntax.ml[471,18669+37]..[471,18669+50])
                          Pexp_field
                          expression (lib/newRuleSyntax.ml[471,18669+37]..[471,18669+41])
                            Pexp_ident "rule" (lib/newRuleSyntax.ml[471,18669+37]..[471,18669+41])
                          "rule_lhs" (lib/newRuleSyntax.ml[471,18669+42]..[471,18669+50])
                    ]
                "pr_positions" (lib/newRuleSyntax.ml[472,18721+4]..[472,18721+16])
                  expression (lib/newRuleSyntax.ml[472,18721+21]..[472,18721+57])
                    Pexp_construct "::" (lib/newRuleSyntax.ml[472,18721+23]..[472,18721+57]) ghost
                    Some
                      expression (lib/newRuleSyntax.ml[472,18721+23]..[472,18721+57]) ghost
                        Pexp_tuple
                        [
                          expression (lib/newRuleSyntax.ml[472,18721+23]..[472,18721+55])
                            Pexp_apply
                            expression (lib/newRuleSyntax.ml[472,18721+23]..[472,18721+41])
                              Pexp_ident "Positions.position" (lib/newRuleSyntax.ml[472,18721+23]..[472,18721+41])
                            [
                              <arg>
                              Nolabel
                                expression (lib/newRuleSyntax.ml[472,18721+42]..[472,18721+55])
                                  Pexp_field
                                  expression (lib/newRuleSyntax.ml[472,18721+42]..[472,18721+46])
                                    Pexp_ident "rule" (lib/newRuleSyntax.ml[472,18721+42]..[472,18721+46])
                                  "rule_lhs" (lib/newRuleSyntax.ml[472,18721+47]..[472,18721+55])
                            ]
                          expression (lib/newRuleSyntax.ml[472,18721+56]..[472,18721+57]) ghost
                            Pexp_construct "[]" (lib/newRuleSyntax.ml[472,18721+56]..[472,18721+57]) ghost
                            None
                        ]
                "pr_branches" (lib/newRuleSyntax.ml[475,18900+4]..[475,18900+15])
                  expression (lib/newRuleSyntax.ml[475,18900+21]..[475,18900+46])
                    Pexp_apply
                    expression (lib/newRuleSyntax.ml[475,18900+21]..[475,18900+32])
                      Pexp_ident "productions" (lib/newRuleSyntax.ml[475,18900+21]..[475,18900+32])
                    [
                      <arg>
                      Nolabel
                        expression (lib/newRuleSyntax.ml[475,18900+33]..[475,18900+46])
                          Pexp_field
                          expression (lib/newRuleSyntax.ml[475,18900+33]..[475,18900+37])
                            Pexp_ident "rule" (lib/newRuleSyntax.ml[475,18900+33]..[475,18900+37])
                          "rule_rhs" (lib/newRuleSyntax.ml[475,18900+38]..[475,18900+46])
                    ]
              ]
              None
            core_type (lib/newRuleSyntax.ml[467,18529+25]..[467,18529+43])
              Ptyp_constr "parameterized_rule" (lib/newRuleSyntax.ml[467,18529+25]..[467,18529+43])
              []
    ]
  structure_item (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
          Ppat_construct "()" (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
          None
        expression (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
          Pexp_apply
          expression (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
            Pexp_ident "Ppx_inline_test_lib.unset_lib" (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
          [
            <arg>
            Nolabel
              expression (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost,None)
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
          Ppat_construct "()" (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
          None
        expression (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
          Pexp_apply
          expression (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
            Pexp_ident "Expect_test_collector.Current_file.unset" (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
          [
            <arg>
            Nolabel
              expression (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
                Pexp_construct "()" (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
                None
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
          Ppat_construct "()" (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
          None
        expression (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
          Pexp_apply
          expression (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
            Pexp_ident "Ppx_bench_lib.Benchmark_accumulator.Current_libname.unset" (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
          [
            <arg>
            Nolabel
              expression (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
                Pexp_construct "()" (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
                None
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
          Ppat_construct "()" (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
          None
        expression (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
          Pexp_apply
          expression (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
            Pexp_ident "Ppx_module_timer_runtime.record_until" (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
          [
            <arg>
            Nolabel
              expression (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
                Pexp_ident "Ppx_module_timer_runtime.__MODULE__" (lib/newRuleSyntax.ml[476,18947+3]..[476,18947+3]) ghost
          ]
    ]
]

[@@@ocaml.ppx.context
  {
    tool_name = "ppx_driver";
    include_dirs = [];
    load_path = [];
    open_modules = [];
    for_package = None;
    debug = false;
    use_threads = false;
    use_vmthreads = false;
    recursive_types = false;
    principal = false;
    transparent_modules = false;
    unboxed_types = false;
    unsafe_string = false;
    cookies = [("inline_tests", "enabled"); ("library-name", "gbnf_parser")]
  }]
let () =
  Ppx_module_timer_runtime.record_start Ppx_module_timer_runtime.__MODULE__
let () =
  Ppx_bench_lib.Benchmark_accumulator.Current_libname.set "gbnf_parser"
let () =
  Expect_test_collector.Current_file.set
    ~absolute_filename:"lib/newRuleSyntax.ml"
let () =
  Ppx_inline_test_lib.set_lib_and_partition "gbnf_parser" "newRuleSyntax.ml"
open Syntax
let (>>) f g x = g (f x)
let rec resolve_puns (e : seq_expression) =
  (Positions.map
     (fun e ->
        match e with
        | ECons (p1, e1, e2) -> ECons (p1, e1, (resolve_puns e2))
        | ESingleton _ | EAction _ -> e) e : seq_expression)
let check_linearity (ps : pattern list) =
  let rec build (m : Positions.positions StringMap.t) (p : pattern) =
    match p with
    | SemPatVar x ->
        let (x, pos) = Positions.decompose x in
        StringMap.multiple_add x pos m
    | SemPatWildcard | SemPatTilde _ -> m
    | SemPatTuple ps -> List.fold_left build m ps in
  let m = List.fold_left build StringMap.empty ps in
  StringMap.iter
    (fun x ->
       fun positions ->
         if (List.length positions) > 1
         then
           Error.error positions "The variable %s is bound several times." x)
    m
let rec patterns (e : seq_expression) =
  (let e = Positions.value e in
   match e with
   | ECons (p, _, e) -> p :: (patterns e)
   | ESingleton _ | EAction _ -> [] : pattern list)
let check_linearity : seq_expression -> unit = patterns >> check_linearity
let rec tilde_used positions (p : pattern) =
  match p with
  | SemPatVar _ | SemPatWildcard -> positions
  | SemPatTilde pos -> pos :: positions
  | SemPatTuple ps -> List.fold_left tilde_used positions ps
let tilde_used_warning positions =
  let n = List.length positions in
  if n > 0
  then
    let (variables_have, tpatterns, wpatterns) =
      if n = 1
      then ("variable has", "a ~ pattern", "a wildcard pattern _")
      else ("variables have", "~ patterns", "wildcard patterns _") in
    Error.warning positions
      "%s nameless %s been introduced by %s,\nyet this sequence does not end in a point-free semantic action <...>.\nPerhaps %s should be used instead."
      (Misc.count n) variables_have tpatterns wpatterns
let pattern (x1 : identifier) (p : pattern) =
  (let c = ref 1 in
   let fresh () = Printf.sprintf "%s_%d" x1 (Misc.postincrement c) in
   let rec pattern p =
     match p with
     | SemPatVar x -> IL.PVar (Positions.value x)
     | SemPatWildcard -> IL.PWildcard
     | SemPatTilde _ -> IL.PVar (fresh ())
     | SemPatTuple [] -> IL.PUnit
     | SemPatTuple (p::[]) -> pattern p
     | SemPatTuple ps -> IL.PTuple (List.map pattern ps) in
   pattern p : IL.pattern)
let rec bv accu p =
  match p with
  | IL.PVar x -> x :: accu
  | IL.PWildcard -> accu
  | IL.PUnit -> accu
  | IL.PTuple ps -> List.fold_left bv accu ps
  | _ -> assert false
let attributes (e : symbol_expression) =
  (match e with | ESymbol (_, _, attrs) -> attrs : attributes)
type context =
  {
  pos: Positions.t ;
  producers: producer list ;
  uxs: identifier option list ;
  bindings: action -> action ;
  tuple: identifier list ;
  tilde_used: Positions.positions }
let empty pos =
  ({
     pos;
     producers = [];
     uxs = [];
     bindings = (fun a -> a);
     tuple = [];
     tilde_used = []
   } : context)
let user (x : identifier located) =
  (Some (Positions.value x) : identifier option)
let auto : identifier option = None
let producers context = (List.rev context.producers : producer list)
let uxs context =
  (Array.of_list (List.rev context.uxs) : identifier option array)
let tuple context = (List.rev context.tuple : identifier list)
let semvar context =
  (let i = (List.length context.producers) + 1 in Printf.sprintf "_%d" i : 
  identifier)
let rec parameter (e : symbol_expression) =
  (match e with
   | ESymbol (sym, args, _attrs) ->
       Parameters.app sym (List.map nested_parameter args) : parameter)
and nested_parameter (e : expression) =
  (match Positions.value e with
   | EChoice ((Branch ({ Positions.value = ESingleton e;_}, _))::[]) ->
       parameter e : parameter)
and producer x (e1 : symbol_expression) =
  ((x, (parameter e1), (attributes e1)) : producer)
and extend (p : pattern) (e1 : symbol_expression) (context : context) =
  (match p with
   | SemPatVar x1 ->
       {
         pos = (context.pos);
         producers = ((producer x1 e1) :: (context.producers));
         uxs = ((user x1) :: (context.uxs));
         bindings = (context.bindings);
         tuple = ((Positions.value x1) :: (context.tuple));
         tilde_used = (context.tilde_used)
       }
   | _ ->
       let x1 = semvar context in
       let tilde_used = tilde_used context.tilde_used p in
       let p : IL.pattern = pattern x1 p in
       let binding = Action.bind p x1 in
       let x1 = Positions.unknown_pos x1 in
       {
         pos = (context.pos);
         producers = ((producer x1 e1) :: (context.producers));
         uxs = (auto :: (context.uxs));
         bindings = (binding >> context.bindings);
         tuple = (bv context.tuple p);
         tilde_used
       } : context)
and production_aux (context : context) (e : seq_expression)
  (level : branch_production_level) =
  (let (e, pos) = Positions.decompose e in
   match e with
   | ECons (p, e1, e2) -> production_aux (extend p e1 context) e2 level
   | EAction (XATraditional raw_action, prec) ->
       (tilde_used_warning context.tilde_used;
        {
          pr_branch_position = (context.pos);
          pr_producers = (producers context)
        }) : parameterized_branch)
and production (Branch (e, level) : branch) =
  let e = resolve_puns e in
  check_linearity e;
  (let pos = Positions.position e in production_aux (empty pos) e level)
and productions (e : expression) =
  (match Positions.value e with
   | EChoice branches -> List.map production branches : parameterized_branch
                                                          list)
let rule (rule : rule) =
  ({
     pr_nt = (Positions.value rule.rule_lhs);
     pr_positions = [Positions.position rule.rule_lhs];
     pr_branches = (productions rule.rule_rhs)
   } : parameterized_rule)
let () = Ppx_inline_test_lib.unset_lib "gbnf_parser"
let () = Expect_test_collector.Current_file.unset ()
let () = Ppx_bench_lib.Benchmark_accumulator.Current_libname.unset ()
let () =
  Ppx_module_timer_runtime.record_until Ppx_module_timer_runtime.__MODULE__
[
  structure_item (_none_[0,0+-1].._none_[0,0+-1]) ghost
    Tstr_attribute "ocaml.ppx.context"
    [
      structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
        Pstr_eval
        expression (_none_[0,0+-1]..[0,0+-1]) ghost
          Pexp_record
          [
            "tool_name" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_constant PConst_string("ppx_driver",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
            "include_dirs" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "load_path" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "open_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "for_package" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "None" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "debug" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_threads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_vmthreads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "recursive_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "principal" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "transparent_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unboxed_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unsafe_string" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "cookies" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                Some
                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                    Pexp_tuple
                    [
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_tuple
                        [
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_constant PConst_string("inline_tests",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                          expression (<command-line>[1,0+0]..[1,0+9])
                            Pexp_constant PConst_string("enabled",(<command-line>[1,0+1]..[1,0+8]),None)
                        ]
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                        Some
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_tuple
                            [
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_tuple
                                [
                                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                    Pexp_constant PConst_string("library-name",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                                  expression (<command-line>[1,0+0]..[1,0+13])
                                    Pexp_constant PConst_string("gbnf_parser",(<command-line>[1,0+1]..[1,0+12]),None)
                                ]
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                                None
                            ]
                    ]
          ]
          None
    ]
  structure_item (lib/newRuleSyntax.ml[14,976+0]..lib/newRuleSyntax.ml[14,976+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[14,976+0]..lib/newRuleSyntax.ml[14,976+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/newRuleSyntax.ml[14,976+0]..lib/newRuleSyntax.ml[14,976+0]) ghost
          Texp_apply
          expression (lib/newRuleSyntax.ml[14,976+0]..lib/newRuleSyntax.ml[14,976+0]) ghost
            Texp_ident "Ppx_module_timer_runtime!.record_start"
          [
            <arg>
              Nolabel
              expression (lib/newRuleSyntax.ml[14,976+0]..lib/newRuleSyntax.ml[14,976+0]) ghost
                Texp_ident "Ppx_module_timer_runtime!.__MODULE__"
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[14,976+0]..lib/newRuleSyntax.ml[14,976+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[14,976+0]..lib/newRuleSyntax.ml[14,976+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/newRuleSyntax.ml[14,976+0]..lib/newRuleSyntax.ml[14,976+0]) ghost
          Texp_apply
          expression (lib/newRuleSyntax.ml[14,976+0]..lib/newRuleSyntax.ml[14,976+0]) ghost
            Texp_ident "Ppx_bench_lib!.Benchmark_accumulator.Current_libname.set"
          [
            <arg>
              Nolabel
              expression (lib/newRuleSyntax.ml[14,976+0]..lib/newRuleSyntax.ml[14,976+0]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/newRuleSyntax.ml[14,976+0]..lib/newRuleSyntax.ml[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[14,976+0]..lib/newRuleSyntax.ml[14,976+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[14,976+0]..lib/newRuleSyntax.ml[14,976+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/newRuleSyntax.ml[14,976+0]..lib/newRuleSyntax.ml[14,976+0]) ghost
          Texp_apply
          expression (lib/newRuleSyntax.ml[14,976+0]..lib/newRuleSyntax.ml[14,976+0]) ghost
            Texp_ident "Expect_test_collector!.Current_file.set"
          [
            <arg>
              Labelled "absolute_filename"
              expression (lib/newRuleSyntax.ml[14,976+0]..lib/newRuleSyntax.ml[14,976+0]) ghost
                Texp_constant Const_string("lib/newRuleSyntax.ml",(lib/newRuleSyntax.ml[14,976+0]..lib/newRuleSyntax.ml[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[14,976+0]..lib/newRuleSyntax.ml[14,976+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[14,976+0]..lib/newRuleSyntax.ml[14,976+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/newRuleSyntax.ml[14,976+0]..lib/newRuleSyntax.ml[14,976+0]) ghost
          Texp_apply
          expression (lib/newRuleSyntax.ml[14,976+0]..lib/newRuleSyntax.ml[14,976+0]) ghost
            Texp_ident "Ppx_inline_test_lib!.set_lib_and_partition"
          [
            <arg>
              Nolabel
              expression (lib/newRuleSyntax.ml[14,976+0]..lib/newRuleSyntax.ml[14,976+0]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/newRuleSyntax.ml[14,976+0]..lib/newRuleSyntax.ml[14,976+0]) ghost,None)
            <arg>
              Nolabel
              expression (lib/newRuleSyntax.ml[14,976+0]..lib/newRuleSyntax.ml[14,976+0]) ghost
                Texp_constant Const_string("newRuleSyntax.ml",(lib/newRuleSyntax.ml[14,976+0]..lib/newRuleSyntax.ml[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[14,976+0]..lib/newRuleSyntax.ml[14,976+11])
    Tstr_open Fresh
    module_expr (lib/newRuleSyntax.ml[14,976+5]..lib/newRuleSyntax.ml[14,976+11])
      Tmod_ident "Gbnf_parser!.Syntax"
  structure_item (lib/newRuleSyntax.ml[25,1413+0]..lib/newRuleSyntax.ml[26,1430+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[25,1413+4]..lib/newRuleSyntax.ml[25,1413+8])
          Tpat_var ">>/1169"
        expression (lib/newRuleSyntax.ml[25,1413+9]..lib/newRuleSyntax.ml[26,1430+9]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/newRuleSyntax.ml[25,1413+9]..lib/newRuleSyntax.ml[25,1413+10])
                Tpat_var "f/1171"
              expression (lib/newRuleSyntax.ml[25,1413+11]..lib/newRuleSyntax.ml[26,1430+9]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/newRuleSyntax.ml[25,1413+11]..lib/newRuleSyntax.ml[25,1413+12])
                      Tpat_var "g/1172"
                    expression (lib/newRuleSyntax.ml[25,1413+13]..lib/newRuleSyntax.ml[26,1430+9]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/newRuleSyntax.ml[25,1413+13]..lib/newRuleSyntax.ml[25,1413+14])
                            Tpat_var "x/1173"
                          expression (lib/newRuleSyntax.ml[26,1430+2]..lib/newRuleSyntax.ml[26,1430+9])
                            Texp_apply
                            expression (lib/newRuleSyntax.ml[26,1430+2]..lib/newRuleSyntax.ml[26,1430+3])
                              Texp_ident "g/1172"
                            [
                              <arg>
                                Nolabel
                                expression (lib/newRuleSyntax.ml[26,1430+4]..lib/newRuleSyntax.ml[26,1430+9])
                                  Texp_apply
                                  expression (lib/newRuleSyntax.ml[26,1430+5]..lib/newRuleSyntax.ml[26,1430+6])
                                    Texp_ident "f/1171"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/newRuleSyntax.ml[26,1430+7]..lib/newRuleSyntax.ml[26,1430+8])
                                        Texp_ident "x/1173"
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[63,3014+0]..lib/newRuleSyntax.ml[76,3551+5])
    Tstr_value Rec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[63,3014+8]..lib/newRuleSyntax.ml[63,3014+20])
          Tpat_var "resolve_puns/1174"
        expression (lib/newRuleSyntax.ml[63,3014+21]..lib/newRuleSyntax.ml[76,3551+5]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/newRuleSyntax.ml[63,3014+22]..lib/newRuleSyntax.ml[63,3014+23])
                extra
                  Tpat_extra_constraint
                  core_type (lib/newRuleSyntax.ml[63,3014+26]..lib/newRuleSyntax.ml[63,3014+40])
                    Ttyp_constr "Gbnf_parser!.Syntax.seq_expression"
                    []
                Tpat_alias "e/1175"
                pattern (lib/newRuleSyntax.ml[63,3014+22]..lib/newRuleSyntax.ml[63,3014+23])
                  Tpat_any
              expression (lib/newRuleSyntax.ml[64,3075+2]..lib/newRuleSyntax.ml[76,3551+5])
                extra
                  Texp_constraint
                  core_type (lib/newRuleSyntax.ml[63,3014+44]..lib/newRuleSyntax.ml[63,3014+58])
                    Ttyp_constr "Gbnf_parser!.Syntax.seq_expression"
                    []
                Texp_apply
                expression (lib/newRuleSyntax.ml[64,3075+2]..lib/newRuleSyntax.ml[64,3075+15])
                  Texp_ident "Gbnf_parser!.Positions.map"
                [
                  <arg>
                    Nolabel
                    expression (lib/newRuleSyntax.ml[64,3075+16]..lib/newRuleSyntax.ml[76,3551+3])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/newRuleSyntax.ml[64,3075+21]..lib/newRuleSyntax.ml[64,3075+22])
                            Tpat_var "e/1246"
                          expression (lib/newRuleSyntax.ml[65,3101+4]..lib/newRuleSyntax.ml[75,3541+9])
                            Texp_match
                            expression (lib/newRuleSyntax.ml[65,3101+10]..lib/newRuleSyntax.ml[65,3101+11])
                              Texp_ident "e/1246"
                            [
                              <case>
                                pattern (lib/newRuleSyntax.ml[71,3435+6]..lib/newRuleSyntax.ml[71,3435+24])
                                  Tpat_value
                                  pattern (lib/newRuleSyntax.ml[71,3435+6]..lib/newRuleSyntax.ml[71,3435+24])
                                    Tpat_construct "ECons"
                                    [
                                      pattern (lib/newRuleSyntax.ml[71,3435+13]..lib/newRuleSyntax.ml[71,3435+15])
                                        Tpat_var "p1/1247"
                                      pattern (lib/newRuleSyntax.ml[71,3435+17]..lib/newRuleSyntax.ml[71,3435+19])
                                        Tpat_var "e1/1248"
                                      pattern (lib/newRuleSyntax.ml[71,3435+21]..lib/newRuleSyntax.ml[71,3435+23])
                                        Tpat_var "e2/1249"
                                    ]
                                    None
                                expression (lib/newRuleSyntax.ml[72,3463+8]..lib/newRuleSyntax.ml[72,3463+39])
                                  Texp_construct "ECons"
                                  [
                                    expression (lib/newRuleSyntax.ml[72,3463+15]..lib/newRuleSyntax.ml[72,3463+17])
                                      Texp_ident "p1/1247"
                                    expression (lib/newRuleSyntax.ml[72,3463+19]..lib/newRuleSyntax.ml[72,3463+21])
                                      Texp_ident "e1/1248"
                                    expression (lib/newRuleSyntax.ml[72,3463+23]..lib/newRuleSyntax.ml[72,3463+38])
                                      Texp_apply
                                      expression (lib/newRuleSyntax.ml[72,3463+23]..lib/newRuleSyntax.ml[72,3463+35])
                                        Texp_ident "resolve_puns/1174"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/newRuleSyntax.ml[72,3463+36]..lib/newRuleSyntax.ml[72,3463+38])
                                            Texp_ident "e2/1249"
                                      ]
                                  ]
                              <case>
                                pattern (lib/newRuleSyntax.ml[73,3503+6]..lib/newRuleSyntax.ml[74,3522+15])
                                  Tpat_or
                                  pattern (lib/newRuleSyntax.ml[73,3503+6]..lib/newRuleSyntax.ml[73,3503+18])
                                    Tpat_value
                                    pattern (lib/newRuleSyntax.ml[73,3503+6]..lib/newRuleSyntax.ml[73,3503+18])
                                      Tpat_construct "ESingleton"
                                      [
                                        pattern (lib/newRuleSyntax.ml[73,3503+17]..lib/newRuleSyntax.ml[73,3503+18])
                                          Tpat_any
                                      ]
                                      None
                                  pattern (lib/newRuleSyntax.ml[74,3522+6]..lib/newRuleSyntax.ml[74,3522+15])
                                    Tpat_value
                                    pattern (lib/newRuleSyntax.ml[74,3522+6]..lib/newRuleSyntax.ml[74,3522+15])
                                      Tpat_construct "EAction"
                                      [
                                        pattern (lib/newRuleSyntax.ml[74,3522+14]..lib/newRuleSyntax.ml[74,3522+15])
                                          Tpat_any
                                        pattern (lib/newRuleSyntax.ml[74,3522+14]..lib/newRuleSyntax.ml[74,3522+15])
                                          Tpat_any
                                      ]
                                      None
                                expression (lib/newRuleSyntax.ml[75,3541+8]..lib/newRuleSyntax.ml[75,3541+9])
                                  Texp_ident "e/1246"
                            ]
                      ]
                  <arg>
                    Nolabel
                    expression (lib/newRuleSyntax.ml[76,3551+4]..lib/newRuleSyntax.ml[76,3551+5])
                      Texp_ident "e/1175"
                ]
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[87,3899+0]..lib/newRuleSyntax.ml[105,4453+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[87,3899+4]..lib/newRuleSyntax.ml[87,3899+19])
          Tpat_var "check_linearity/1311"
        expression (lib/newRuleSyntax.ml[87,3899+20]..lib/newRuleSyntax.ml[105,4453+5]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/newRuleSyntax.ml[87,3899+21]..lib/newRuleSyntax.ml[87,3899+23])
                extra
                  Tpat_extra_constraint
                  core_type (lib/newRuleSyntax.ml[87,3899+26]..lib/newRuleSyntax.ml[87,3899+38])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/newRuleSyntax.ml[87,3899+26]..lib/newRuleSyntax.ml[87,3899+33])
                        Ttyp_constr "Gbnf_parser!.Syntax.pattern"
                        []
                    ]
                Tpat_alias "ps/1313"
                pattern (lib/newRuleSyntax.ml[87,3899+21]..lib/newRuleSyntax.ml[87,3899+23])
                  Tpat_any
              expression (lib/newRuleSyntax.ml[89,3942+2]..lib/newRuleSyntax.ml[105,4453+5])
                Texp_let Rec
                [
                  <def>
                    pattern (lib/newRuleSyntax.ml[89,3942+10]..lib/newRuleSyntax.ml[89,3942+15])
                      Tpat_var "build/1314"
                    expression (lib/newRuleSyntax.ml[89,3942+16]..lib/newRuleSyntax.ml[98,4213+33]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/newRuleSyntax.ml[89,3942+17]..lib/newRuleSyntax.ml[89,3942+18])
                            extra
                              Tpat_extra_constraint
                              core_type (lib/newRuleSyntax.ml[89,3942+21]..lib/newRuleSyntax.ml[89,3942+52])
                                Ttyp_constr "Gbnf_parser!.StringMap.t"
                                [
                                  core_type (lib/newRuleSyntax.ml[89,3942+21]..lib/newRuleSyntax.ml[89,3942+40])
                                    Ttyp_constr "Gbnf_parser!.Positions.positions"
                                    []
                                ]
                            Tpat_alias "m/1363"
                            pattern (lib/newRuleSyntax.ml[89,3942+17]..lib/newRuleSyntax.ml[89,3942+18])
                              Tpat_any
                          expression (lib/newRuleSyntax.ml[89,3942+54]..lib/newRuleSyntax.ml[98,4213+33]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (lib/newRuleSyntax.ml[89,3942+55]..lib/newRuleSyntax.ml[89,3942+56])
                                  extra
                                    Tpat_extra_constraint
                                    core_type (lib/newRuleSyntax.ml[89,3942+59]..lib/newRuleSyntax.ml[89,3942+66])
                                      Ttyp_constr "Gbnf_parser!.Syntax.pattern"
                                      []
                                  Tpat_alias "p/1364"
                                  pattern (lib/newRuleSyntax.ml[89,3942+55]..lib/newRuleSyntax.ml[89,3942+56])
                                    Tpat_any
                                expression (lib/newRuleSyntax.ml[90,4012+4]..lib/newRuleSyntax.ml[98,4213+33])
                                  Texp_match
                                  expression (lib/newRuleSyntax.ml[90,4012+10]..lib/newRuleSyntax.ml[90,4012+11])
                                    Texp_ident "p/1364"
                                  [
                                    <case>
                                      pattern (lib/newRuleSyntax.ml[91,4029+6]..lib/newRuleSyntax.ml[91,4029+17])
                                        Tpat_value
                                        pattern (lib/newRuleSyntax.ml[91,4029+6]..lib/newRuleSyntax.ml[91,4029+17])
                                          Tpat_construct "SemPatVar"
                                          [
                                            pattern (lib/newRuleSyntax.ml[91,4029+16]..lib/newRuleSyntax.ml[91,4029+17])
                                              Tpat_var "x/1365"
                                          ]
                                          None
                                      expression (lib/newRuleSyntax.ml[92,4050+8]..lib/newRuleSyntax.ml[93,4096+38])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/newRuleSyntax.ml[92,4050+12]..lib/newRuleSyntax.ml[92,4050+18])
                                              Tpat_tuple
                                              [
                                                pattern (lib/newRuleSyntax.ml[92,4050+12]..lib/newRuleSyntax.ml[92,4050+13])
                                                  Tpat_var "x/1367"
                                                pattern (lib/newRuleSyntax.ml[92,4050+15]..lib/newRuleSyntax.ml[92,4050+18])
                                                  Tpat_var "pos/1368"
                                              ]
                                            expression (lib/newRuleSyntax.ml[92,4050+21]..lib/newRuleSyntax.ml[92,4050+42])
                                              Texp_apply
                                              expression (lib/newRuleSyntax.ml[92,4050+21]..lib/newRuleSyntax.ml[92,4050+40])
                                                Texp_ident "Gbnf_parser!.Positions.decompose"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/newRuleSyntax.ml[92,4050+41]..lib/newRuleSyntax.ml[92,4050+42])
                                                    Texp_ident "x/1365"
                                              ]
                                        ]
                                        expression (lib/newRuleSyntax.ml[93,4096+8]..lib/newRuleSyntax.ml[93,4096+38])
                                          Texp_apply
                                          expression (lib/newRuleSyntax.ml[93,4096+8]..lib/newRuleSyntax.ml[93,4096+30])
                                            Texp_ident "Gbnf_parser!.StringMap.multiple_add"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/newRuleSyntax.ml[93,4096+31]..lib/newRuleSyntax.ml[93,4096+32])
                                                Texp_ident "x/1367"
                                            <arg>
                                              Nolabel
                                              expression (lib/newRuleSyntax.ml[93,4096+33]..lib/newRuleSyntax.ml[93,4096+36])
                                                Texp_ident "pos/1368"
                                            <arg>
                                              Nolabel
                                              expression (lib/newRuleSyntax.ml[93,4096+37]..lib/newRuleSyntax.ml[93,4096+38])
                                                Texp_ident "m/1363"
                                          ]
                                    <case>
                                      pattern (lib/newRuleSyntax.ml[94,4135+6]..lib/newRuleSyntax.ml[95,4156+19])
                                        Tpat_or
                                        pattern (lib/newRuleSyntax.ml[94,4135+6]..lib/newRuleSyntax.ml[94,4135+20])
                                          Tpat_value
                                          pattern (lib/newRuleSyntax.ml[94,4135+6]..lib/newRuleSyntax.ml[94,4135+20])
                                            Tpat_construct "SemPatWildcard"
                                            []
                                            None
                                        pattern (lib/newRuleSyntax.ml[95,4156+6]..lib/newRuleSyntax.ml[95,4156+19])
                                          Tpat_value
                                          pattern (lib/newRuleSyntax.ml[95,4156+6]..lib/newRuleSyntax.ml[95,4156+19])
                                            Tpat_construct "SemPatTilde"
                                            [
                                              pattern (lib/newRuleSyntax.ml[95,4156+18]..lib/newRuleSyntax.ml[95,4156+19])
                                                Tpat_any
                                            ]
                                            None
                                      expression (lib/newRuleSyntax.ml[96,4179+8]..lib/newRuleSyntax.ml[96,4179+9])
                                        Texp_ident "m/1363"
                                    <case>
                                      pattern (lib/newRuleSyntax.ml[97,4189+6]..lib/newRuleSyntax.ml[97,4189+20])
                                        Tpat_value
                                        pattern (lib/newRuleSyntax.ml[97,4189+6]..lib/newRuleSyntax.ml[97,4189+20])
                                          Tpat_construct "SemPatTuple"
                                          [
                                            pattern (lib/newRuleSyntax.ml[97,4189+18]..lib/newRuleSyntax.ml[97,4189+20])
                                              Tpat_var "ps/1366"
                                          ]
                                          None
                                      expression (lib/newRuleSyntax.ml[98,4213+8]..lib/newRuleSyntax.ml[98,4213+33])
                                        Texp_apply
                                        expression (lib/newRuleSyntax.ml[98,4213+8]..lib/newRuleSyntax.ml[98,4213+22])
                                          Texp_ident "Stdlib!.List.fold_left"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/newRuleSyntax.ml[98,4213+23]..lib/newRuleSyntax.ml[98,4213+28])
                                              Texp_ident "build/1314"
                                          <arg>
                                            Nolabel
                                            expression (lib/newRuleSyntax.ml[98,4213+29]..lib/newRuleSyntax.ml[98,4213+30])
                                              Texp_ident "m/1363"
                                          <arg>
                                            Nolabel
                                            expression (lib/newRuleSyntax.ml[98,4213+31]..lib/newRuleSyntax.ml[98,4213+33])
                                              Texp_ident "ps/1366"
                                        ]
                                  ]
                            ]
                      ]
                ]
                expression (lib/newRuleSyntax.ml[101,4253+2]..lib/newRuleSyntax.ml[105,4453+5])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (lib/newRuleSyntax.ml[101,4253+6]..lib/newRuleSyntax.ml[101,4253+7])
                        Tpat_var "m/1644"
                      expression (lib/newRuleSyntax.ml[101,4253+10]..lib/newRuleSyntax.ml[101,4253+49])
                        Texp_apply
                        expression (lib/newRuleSyntax.ml[101,4253+10]..lib/newRuleSyntax.ml[101,4253+24])
                          Texp_ident "Stdlib!.List.fold_left"
                        [
                          <arg>
                            Nolabel
                            expression (lib/newRuleSyntax.ml[101,4253+25]..lib/newRuleSyntax.ml[101,4253+30])
                              Texp_ident "build/1314"
                          <arg>
                            Nolabel
                            expression (lib/newRuleSyntax.ml[101,4253+31]..lib/newRuleSyntax.ml[101,4253+46])
                              Texp_ident "Gbnf_parser!.StringMap.empty"
                          <arg>
                            Nolabel
                            expression (lib/newRuleSyntax.ml[101,4253+47]..lib/newRuleSyntax.ml[101,4253+49])
                              Texp_ident "ps/1313"
                        ]
                  ]
                  expression (lib/newRuleSyntax.ml[102,4306+2]..lib/newRuleSyntax.ml[105,4453+5])
                    Texp_apply
                    expression (lib/newRuleSyntax.ml[102,4306+2]..lib/newRuleSyntax.ml[102,4306+16])
                      Texp_ident "Gbnf_parser!.StringMap.iter"
                    [
                      <arg>
                        Nolabel
                        expression (lib/newRuleSyntax.ml[102,4306+17]..lib/newRuleSyntax.ml[105,4453+3])
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (lib/newRuleSyntax.ml[102,4306+22]..lib/newRuleSyntax.ml[102,4306+23])
                                Tpat_var "x/1645"
                              expression (lib/newRuleSyntax.ml[102,4306+24]..lib/newRuleSyntax.ml[104,4381+71]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/newRuleSyntax.ml[102,4306+24]..lib/newRuleSyntax.ml[102,4306+33])
                                      Tpat_var "positions/1646"
                                    expression (lib/newRuleSyntax.ml[103,4343+4]..lib/newRuleSyntax.ml[104,4381+71])
                                      Texp_ifthenelse
                                      expression (lib/newRuleSyntax.ml[103,4343+7]..lib/newRuleSyntax.ml[103,4343+32])
                                        Texp_apply
                                        expression (lib/newRuleSyntax.ml[103,4343+29]..lib/newRuleSyntax.ml[103,4343+30])
                                          Texp_ident "Stdlib!.>"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/newRuleSyntax.ml[103,4343+7]..lib/newRuleSyntax.ml[103,4343+28])
                                              Texp_apply
                                              expression (lib/newRuleSyntax.ml[103,4343+7]..lib/newRuleSyntax.ml[103,4343+18])
                                                Texp_ident "Stdlib!.List.length"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/newRuleSyntax.ml[103,4343+19]..lib/newRuleSyntax.ml[103,4343+28])
                                                    Texp_ident "positions/1646"
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (lib/newRuleSyntax.ml[103,4343+31]..lib/newRuleSyntax.ml[103,4343+32])
                                              Texp_constant Const_int 1
                                        ]
                                      expression (lib/newRuleSyntax.ml[104,4381+6]..lib/newRuleSyntax.ml[104,4381+71])
                                        Texp_apply
                                        expression (lib/newRuleSyntax.ml[104,4381+6]..lib/newRuleSyntax.ml[104,4381+17])
                                          Texp_ident "Gbnf_parser!.Error.error"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/newRuleSyntax.ml[104,4381+18]..lib/newRuleSyntax.ml[104,4381+27])
                                              Texp_ident "positions/1646"
                                          <arg>
                                            Nolabel
                                            expression (lib/newRuleSyntax.ml[104,4381+28]..lib/newRuleSyntax.ml[104,4381+69])
                                              Texp_construct "CamlinternalFormatBasics.Format"
                                              [
                                                expression (lib/newRuleSyntax.ml[104,4381+28]..lib/newRuleSyntax.ml[104,4381+69]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                  [
                                                    expression (lib/newRuleSyntax.ml[104,4381+28]..lib/newRuleSyntax.ml[104,4381+69]) ghost
                                                      Texp_constant Const_string("The variable ",(lib/newRuleSyntax.ml[104,4381+28]..lib/newRuleSyntax.ml[104,4381+69]) ghost,None)
                                                    expression (lib/newRuleSyntax.ml[104,4381+28]..lib/newRuleSyntax.ml[104,4381+69]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.String"
                                                      [
                                                        expression (lib/newRuleSyntax.ml[104,4381+28]..lib/newRuleSyntax.ml[104,4381+69]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                                          []
                                                        expression (lib/newRuleSyntax.ml[104,4381+28]..lib/newRuleSyntax.ml[104,4381+69]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                                          [
                                                            expression (lib/newRuleSyntax.ml[104,4381+28]..lib/newRuleSyntax.ml[104,4381+69]) ghost
                                                              Texp_constant Const_string(" is bound several times.",(lib/newRuleSyntax.ml[104,4381+28]..lib/newRuleSyntax.ml[104,4381+69]) ghost,None)
                                                            expression (lib/newRuleSyntax.ml[104,4381+28]..lib/newRuleSyntax.ml[104,4381+69]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                              []
                                                          ]
                                                      ]
                                                  ]
                                                expression (lib/newRuleSyntax.ml[104,4381+28]..lib/newRuleSyntax.ml[104,4381+69]) ghost
                                                  Texp_constant Const_string("The variable %s is bound several times.",(lib/newRuleSyntax.ml[104,4381+28]..lib/newRuleSyntax.ml[104,4381+69]) ghost,None)
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (lib/newRuleSyntax.ml[104,4381+70]..lib/newRuleSyntax.ml[104,4381+71])
                                              Texp_ident "x/1645"
                                        ]
                                      None
                                ]
                          ]
                      <arg>
                        Nolabel
                        expression (lib/newRuleSyntax.ml[105,4453+4]..lib/newRuleSyntax.ml[105,4453+5])
                          Texp_ident "m/1644"
                    ]
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[107,4460+0]..lib/newRuleSyntax.ml[114,4640+8])
    Tstr_value Rec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[107,4460+8]..lib/newRuleSyntax.ml[107,4460+16])
          Tpat_var "patterns/1685"
        expression (lib/newRuleSyntax.ml[107,4460+17]..lib/newRuleSyntax.ml[114,4640+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/newRuleSyntax.ml[107,4460+18]..lib/newRuleSyntax.ml[107,4460+19])
                extra
                  Tpat_extra_constraint
                  core_type (lib/newRuleSyntax.ml[107,4460+22]..lib/newRuleSyntax.ml[107,4460+36])
                    Ttyp_constr "Gbnf_parser!.Syntax.seq_expression"
                    []
                Tpat_alias "e/1686"
                pattern (lib/newRuleSyntax.ml[107,4460+18]..lib/newRuleSyntax.ml[107,4460+19])
                  Tpat_any
              expression (lib/newRuleSyntax.ml[108,4515+2]..lib/newRuleSyntax.ml[114,4640+8])
                extra
                  Texp_constraint
                  core_type (lib/newRuleSyntax.ml[107,4460+40]..lib/newRuleSyntax.ml[107,4460+52])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/newRuleSyntax.ml[107,4460+40]..lib/newRuleSyntax.ml[107,4460+47])
                        Ttyp_constr "Gbnf_parser!.Syntax.pattern"
                        []
                    ]
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/newRuleSyntax.ml[108,4515+6]..lib/newRuleSyntax.ml[108,4515+7])
                      Tpat_var "e/1687"
                    expression (lib/newRuleSyntax.ml[108,4515+10]..lib/newRuleSyntax.ml[108,4515+27])
                      Texp_apply
                      expression (lib/newRuleSyntax.ml[108,4515+10]..lib/newRuleSyntax.ml[108,4515+25])
                        Texp_ident "Gbnf_parser!.Positions.value"
                      [
                        <arg>
                          Nolabel
                          expression (lib/newRuleSyntax.ml[108,4515+26]..lib/newRuleSyntax.ml[108,4515+27])
                            Texp_ident "e/1686"
                      ]
                ]
                expression (lib/newRuleSyntax.ml[109,4546+2]..lib/newRuleSyntax.ml[114,4640+8])
                  Texp_match
                  expression (lib/newRuleSyntax.ml[109,4546+8]..lib/newRuleSyntax.ml[109,4546+9])
                    Texp_ident "e/1687"
                  [
                    <case>
                      pattern (lib/newRuleSyntax.ml[110,4561+4]..lib/newRuleSyntax.ml[110,4561+19])
                        Tpat_value
                        pattern (lib/newRuleSyntax.ml[110,4561+4]..lib/newRuleSyntax.ml[110,4561+19])
                          Tpat_construct "ECons"
                          [
                            pattern (lib/newRuleSyntax.ml[110,4561+11]..lib/newRuleSyntax.ml[110,4561+12])
                              Tpat_var "p/1688"
                            pattern (lib/newRuleSyntax.ml[110,4561+14]..lib/newRuleSyntax.ml[110,4561+15])
                              Tpat_any
                            pattern (lib/newRuleSyntax.ml[110,4561+17]..lib/newRuleSyntax.ml[110,4561+18])
                              Tpat_var "e/1689"
                          ]
                          None
                      expression (lib/newRuleSyntax.ml[111,4584+6]..lib/newRuleSyntax.ml[111,4584+21])
                        Texp_construct "::"
                        [
                          expression (lib/newRuleSyntax.ml[111,4584+6]..lib/newRuleSyntax.ml[111,4584+7])
                            Texp_ident "p/1688"
                          expression (lib/newRuleSyntax.ml[111,4584+11]..lib/newRuleSyntax.ml[111,4584+21])
                            Texp_apply
                            expression (lib/newRuleSyntax.ml[111,4584+11]..lib/newRuleSyntax.ml[111,4584+19])
                              Texp_ident "patterns/1685"
                            [
                              <arg>
                                Nolabel
                                expression (lib/newRuleSyntax.ml[111,4584+20]..lib/newRuleSyntax.ml[111,4584+21])
                                  Texp_ident "e/1689"
                            ]
                        ]
                    <case>
                      pattern (lib/newRuleSyntax.ml[112,4606+4]..lib/newRuleSyntax.ml[113,4623+13])
                        Tpat_or
                        pattern (lib/newRuleSyntax.ml[112,4606+4]..lib/newRuleSyntax.ml[112,4606+16])
                          Tpat_value
                          pattern (lib/newRuleSyntax.ml[112,4606+4]..lib/newRuleSyntax.ml[112,4606+16])
                            Tpat_construct "ESingleton"
                            [
                              pattern (lib/newRuleSyntax.ml[112,4606+15]..lib/newRuleSyntax.ml[112,4606+16])
                                Tpat_any
                            ]
                            None
                        pattern (lib/newRuleSyntax.ml[113,4623+4]..lib/newRuleSyntax.ml[113,4623+13])
                          Tpat_value
                          pattern (lib/newRuleSyntax.ml[113,4623+4]..lib/newRuleSyntax.ml[113,4623+13])
                            Tpat_construct "EAction"
                            [
                              pattern (lib/newRuleSyntax.ml[113,4623+12]..lib/newRuleSyntax.ml[113,4623+13])
                                Tpat_any
                              pattern (lib/newRuleSyntax.ml[113,4623+12]..lib/newRuleSyntax.ml[113,4623+13])
                                Tpat_any
                            ]
                            None
                      expression (lib/newRuleSyntax.ml[114,4640+6]..lib/newRuleSyntax.ml[114,4640+8])
                        Texp_construct "[]"
                        []
                  ]
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[116,4650+0]..lib/newRuleSyntax.ml[117,4697+29])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[116,4650+4]..lib/newRuleSyntax.ml[116,4650+19])
          extra
            Tpat_extra_constraint
            core_type (lib/newRuleSyntax.ml[116,4650+22]..lib/newRuleSyntax.ml[116,4650+44])
              Ttyp_arrow
              Nolabel
              core_type (lib/newRuleSyntax.ml[116,4650+22]..lib/newRuleSyntax.ml[116,4650+36])
                Ttyp_constr "Gbnf_parser!.Syntax.seq_expression"
                []
              core_type (lib/newRuleSyntax.ml[116,4650+40]..lib/newRuleSyntax.ml[116,4650+44])
                Ttyp_constr "unit/6!"
                []
          Tpat_alias "check_linearity/1690"
          pattern (lib/newRuleSyntax.ml[116,4650+4]..lib/newRuleSyntax.ml[116,4650+19])
            Tpat_any
        expression (lib/newRuleSyntax.ml[117,4697+2]..lib/newRuleSyntax.ml[117,4697+29])
          extra
            Texp_constraint
            core_type (lib/newRuleSyntax.ml[116,4650+22]..lib/newRuleSyntax.ml[116,4650+44])
              Ttyp_arrow
              Nolabel
              core_type (lib/newRuleSyntax.ml[116,4650+22]..lib/newRuleSyntax.ml[116,4650+36])
                Ttyp_constr "Gbnf_parser!.Syntax.seq_expression"
                []
              core_type (lib/newRuleSyntax.ml[116,4650+40]..lib/newRuleSyntax.ml[116,4650+44])
                Ttyp_constr "unit/6!"
                []
          Texp_apply
          expression (lib/newRuleSyntax.ml[117,4697+11]..lib/newRuleSyntax.ml[117,4697+13])
            Texp_ident ">>/1169"
          [
            <arg>
              Nolabel
              expression (lib/newRuleSyntax.ml[117,4697+2]..lib/newRuleSyntax.ml[117,4697+10])
                Texp_ident "patterns/1685"
            <arg>
              Nolabel
              expression (lib/newRuleSyntax.ml[117,4697+14]..lib/newRuleSyntax.ml[117,4697+29])
                Texp_ident "check_linearity/1311"
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[123,4874+0]..lib/newRuleSyntax.ml[131,5056+44])
    Tstr_value Rec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[123,4874+8]..lib/newRuleSyntax.ml[123,4874+18])
          Tpat_var "tilde_used/1691"
        expression (lib/newRuleSyntax.ml[123,4874+19]..lib/newRuleSyntax.ml[131,5056+44]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/newRuleSyntax.ml[123,4874+19]..lib/newRuleSyntax.ml[123,4874+28])
                Tpat_var "positions/1692"
              expression (lib/newRuleSyntax.ml[123,4874+29]..lib/newRuleSyntax.ml[131,5056+44]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/newRuleSyntax.ml[123,4874+30]..lib/newRuleSyntax.ml[123,4874+31])
                      extra
                        Tpat_extra_constraint
                        core_type (lib/newRuleSyntax.ml[123,4874+34]..lib/newRuleSyntax.ml[123,4874+41])
                          Ttyp_constr "Gbnf_parser!.Syntax.pattern"
                          []
                      Tpat_alias "p/1693"
                      pattern (lib/newRuleSyntax.ml[123,4874+30]..lib/newRuleSyntax.ml[123,4874+31])
                        Tpat_any
                    expression (lib/newRuleSyntax.ml[124,4919+2]..lib/newRuleSyntax.ml[131,5056+44])
                      Texp_match
                      expression (lib/newRuleSyntax.ml[124,4919+8]..lib/newRuleSyntax.ml[124,4919+9])
                        Texp_ident "p/1693"
                      [
                        <case>
                          pattern (lib/newRuleSyntax.ml[125,4934+4]..lib/newRuleSyntax.ml[126,4950+18])
                            Tpat_or
                            pattern (lib/newRuleSyntax.ml[125,4934+4]..lib/newRuleSyntax.ml[125,4934+15])
                              Tpat_value
                              pattern (lib/newRuleSyntax.ml[125,4934+4]..lib/newRuleSyntax.ml[125,4934+15])
                                Tpat_construct "SemPatVar"
                                [
                                  pattern (lib/newRuleSyntax.ml[125,4934+14]..lib/newRuleSyntax.ml[125,4934+15])
                                    Tpat_any
                                ]
                                None
                            pattern (lib/newRuleSyntax.ml[126,4950+4]..lib/newRuleSyntax.ml[126,4950+18])
                              Tpat_value
                              pattern (lib/newRuleSyntax.ml[126,4950+4]..lib/newRuleSyntax.ml[126,4950+18])
                                Tpat_construct "SemPatWildcard"
                                []
                                None
                          expression (lib/newRuleSyntax.ml[127,4972+6]..lib/newRuleSyntax.ml[127,4972+15])
                            Texp_ident "positions/1692"
                        <case>
                          pattern (lib/newRuleSyntax.ml[128,4988+4]..lib/newRuleSyntax.ml[128,4988+19])
                            Tpat_value
                            pattern (lib/newRuleSyntax.ml[128,4988+4]..lib/newRuleSyntax.ml[128,4988+19])
                              Tpat_construct "SemPatTilde"
                              [
                                pattern (lib/newRuleSyntax.ml[128,4988+16]..lib/newRuleSyntax.ml[128,4988+19])
                                  Tpat_var "pos/1694"
                              ]
                              None
                          expression (lib/newRuleSyntax.ml[129,5011+6]..lib/newRuleSyntax.ml[129,5011+22])
                            Texp_construct "::"
                            [
                              expression (lib/newRuleSyntax.ml[129,5011+6]..lib/newRuleSyntax.ml[129,5011+9])
                                Texp_ident "pos/1694"
                              expression (lib/newRuleSyntax.ml[129,5011+13]..lib/newRuleSyntax.ml[129,5011+22])
                                Texp_ident "positions/1692"
                            ]
                        <case>
                          pattern (lib/newRuleSyntax.ml[130,5034+4]..lib/newRuleSyntax.ml[130,5034+18])
                            Tpat_value
                            pattern (lib/newRuleSyntax.ml[130,5034+4]..lib/newRuleSyntax.ml[130,5034+18])
                              Tpat_construct "SemPatTuple"
                              [
                                pattern (lib/newRuleSyntax.ml[130,5034+16]..lib/newRuleSyntax.ml[130,5034+18])
                                  Tpat_var "ps/1695"
                              ]
                              None
                          expression (lib/newRuleSyntax.ml[131,5056+6]..lib/newRuleSyntax.ml[131,5056+44])
                            Texp_apply
                            expression (lib/newRuleSyntax.ml[131,5056+6]..lib/newRuleSyntax.ml[131,5056+20])
                              Texp_ident "Stdlib!.List.fold_left"
                            [
                              <arg>
                                Nolabel
                                expression (lib/newRuleSyntax.ml[131,5056+21]..lib/newRuleSyntax.ml[131,5056+31])
                                  Texp_ident "tilde_used/1691"
                              <arg>
                                Nolabel
                                expression (lib/newRuleSyntax.ml[131,5056+32]..lib/newRuleSyntax.ml[131,5056+41])
                                  Texp_ident "positions/1692"
                              <arg>
                                Nolabel
                                expression (lib/newRuleSyntax.ml[131,5056+42]..lib/newRuleSyntax.ml[131,5056+44])
                                  Texp_ident "ps/1695"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[136,5254+0]..lib/newRuleSyntax.ml[147,5732+55])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[136,5254+4]..lib/newRuleSyntax.ml[136,5254+22])
          Tpat_var "tilde_used_warning/1696"
        expression (lib/newRuleSyntax.ml[136,5254+23]..lib/newRuleSyntax.ml[147,5732+55]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/newRuleSyntax.ml[136,5254+23]..lib/newRuleSyntax.ml[136,5254+32])
                Tpat_var "positions/1698"
              expression (lib/newRuleSyntax.ml[137,5289+2]..lib/newRuleSyntax.ml[147,5732+55])
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/newRuleSyntax.ml[137,5289+6]..lib/newRuleSyntax.ml[137,5289+7])
                      Tpat_var "n/1699"
                    expression (lib/newRuleSyntax.ml[137,5289+10]..lib/newRuleSyntax.ml[137,5289+31])
                      Texp_apply
                      expression (lib/newRuleSyntax.ml[137,5289+10]..lib/newRuleSyntax.ml[137,5289+21])
                        Texp_ident "Stdlib!.List.length"
                      [
                        <arg>
                          Nolabel
                          expression (lib/newRuleSyntax.ml[137,5289+22]..lib/newRuleSyntax.ml[137,5289+31])
                            Texp_ident "positions/1698"
                      ]
                ]
                expression (lib/newRuleSyntax.ml[138,5324+2]..lib/newRuleSyntax.ml[147,5732+55])
                  Texp_ifthenelse
                  expression (lib/newRuleSyntax.ml[138,5324+5]..lib/newRuleSyntax.ml[138,5324+10])
                    Texp_apply
                    expression (lib/newRuleSyntax.ml[138,5324+7]..lib/newRuleSyntax.ml[138,5324+8])
                      Texp_ident "Stdlib!.>"
                    [
                      <arg>
                        Nolabel
                        expression (lib/newRuleSyntax.ml[138,5324+5]..lib/newRuleSyntax.ml[138,5324+6])
                          Texp_ident "n/1699"
                      <arg>
                        Nolabel
                        expression (lib/newRuleSyntax.ml[138,5324+9]..lib/newRuleSyntax.ml[138,5324+10])
                          Texp_constant Const_int 0
                    ]
                  expression (lib/newRuleSyntax.ml[139,5340+4]..lib/newRuleSyntax.ml[147,5732+55])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (lib/newRuleSyntax.ml[139,5340+8]..lib/newRuleSyntax.ml[139,5340+44])
                          Tpat_tuple
                          [
                            pattern (lib/newRuleSyntax.ml[139,5340+8]..lib/newRuleSyntax.ml[139,5340+22])
                              Tpat_var "variables_have/1700"
                            pattern (lib/newRuleSyntax.ml[139,5340+24]..lib/newRuleSyntax.ml[139,5340+33])
                              Tpat_var "tpatterns/1701"
                            pattern (lib/newRuleSyntax.ml[139,5340+35]..lib/newRuleSyntax.ml[139,5340+44])
                              Tpat_var "wpatterns/1702"
                          ]
                        expression (lib/newRuleSyntax.ml[140,5387+6]..lib/newRuleSyntax.ml[141,5461+64])
                          Texp_ifthenelse
                          expression (lib/newRuleSyntax.ml[140,5387+9]..lib/newRuleSyntax.ml[140,5387+14])
                            Texp_apply
                            expression (lib/newRuleSyntax.ml[140,5387+11]..lib/newRuleSyntax.ml[140,5387+12])
                              Texp_ident "Stdlib!.="
                            [
                              <arg>
                                Nolabel
                                expression (lib/newRuleSyntax.ml[140,5387+9]..lib/newRuleSyntax.ml[140,5387+10])
                                  Texp_ident "n/1699"
                              <arg>
                                Nolabel
                                expression (lib/newRuleSyntax.ml[140,5387+13]..lib/newRuleSyntax.ml[140,5387+14])
                                  Texp_constant Const_int 1
                            ]
                          expression (lib/newRuleSyntax.ml[140,5387+20]..lib/newRuleSyntax.ml[140,5387+73])
                            Texp_tuple
                            [
                              expression (lib/newRuleSyntax.ml[140,5387+20]..lib/newRuleSyntax.ml[140,5387+34])
                                Texp_constant Const_string("variable has",(lib/newRuleSyntax.ml[140,5387+21]..lib/newRuleSyntax.ml[140,5387+33]),None)
                              expression (lib/newRuleSyntax.ml[140,5387+36]..lib/newRuleSyntax.ml[140,5387+49])
                                Texp_constant Const_string("a ~ pattern",(lib/newRuleSyntax.ml[140,5387+37]..lib/newRuleSyntax.ml[140,5387+48]),None)
                              expression (lib/newRuleSyntax.ml[140,5387+51]..lib/newRuleSyntax.ml[140,5387+73])
                                Texp_constant Const_string("a wildcard pattern _",(lib/newRuleSyntax.ml[140,5387+52]..lib/newRuleSyntax.ml[140,5387+72]),None)
                            ]
                          Some
                            expression (lib/newRuleSyntax.ml[141,5461+11]..lib/newRuleSyntax.ml[141,5461+64])
                              Texp_tuple
                              [
                                expression (lib/newRuleSyntax.ml[141,5461+11]..lib/newRuleSyntax.ml[141,5461+27])
                                  Texp_constant Const_string("variables have",(lib/newRuleSyntax.ml[141,5461+12]..lib/newRuleSyntax.ml[141,5461+26]),None)
                                expression (lib/newRuleSyntax.ml[141,5461+29]..lib/newRuleSyntax.ml[141,5461+41])
                                  Texp_constant Const_string("~ patterns",(lib/newRuleSyntax.ml[141,5461+30]..lib/newRuleSyntax.ml[141,5461+40]),None)
                                expression (lib/newRuleSyntax.ml[141,5461+43]..lib/newRuleSyntax.ml[141,5461+64])
                                  Texp_constant Const_string("wildcard patterns _",(lib/newRuleSyntax.ml[141,5461+44]..lib/newRuleSyntax.ml[141,5461+63]),None)
                              ]
                    ]
                    expression (lib/newRuleSyntax.ml[143,5533+4]..lib/newRuleSyntax.ml[147,5732+55])
                      Texp_apply
                      expression (lib/newRuleSyntax.ml[143,5533+4]..lib/newRuleSyntax.ml[143,5533+17])
                        Texp_ident "Gbnf_parser!.Error.warning"
                      [
                        <arg>
                          Nolabel
                          expression (lib/newRuleSyntax.ml[143,5533+18]..lib/newRuleSyntax.ml[143,5533+27])
                            Texp_ident "positions/1698"
                        <arg>
                          Nolabel
                          expression (lib/newRuleSyntax.ml[144,5561+6]..lib/newRuleSyntax.ml[146,5689+42])
                            Texp_construct "CamlinternalFormatBasics.Format"
                            [
                              expression (lib/newRuleSyntax.ml[144,5561+6]..lib/newRuleSyntax.ml[146,5689+42]) ghost
                                Texp_construct "CamlinternalFormatBasics.String"
                                [
                                  expression (lib/newRuleSyntax.ml[144,5561+6]..lib/newRuleSyntax.ml[146,5689+42]) ghost
                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                    []
                                  expression (lib/newRuleSyntax.ml[144,5561+6]..lib/newRuleSyntax.ml[146,5689+42]) ghost
                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                    [
                                      expression (lib/newRuleSyntax.ml[144,5561+6]..lib/newRuleSyntax.ml[146,5689+42]) ghost
                                        Texp_constant Const_string(" nameless ",(lib/newRuleSyntax.ml[144,5561+6]..lib/newRuleSyntax.ml[146,5689+42]) ghost,None)
                                      expression (lib/newRuleSyntax.ml[144,5561+6]..lib/newRuleSyntax.ml[146,5689+42]) ghost
                                        Texp_construct "CamlinternalFormatBasics.String"
                                        [
                                          expression (lib/newRuleSyntax.ml[144,5561+6]..lib/newRuleSyntax.ml[146,5689+42]) ghost
                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                            []
                                          expression (lib/newRuleSyntax.ml[144,5561+6]..lib/newRuleSyntax.ml[146,5689+42]) ghost
                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                            [
                                              expression (lib/newRuleSyntax.ml[144,5561+6]..lib/newRuleSyntax.ml[146,5689+42]) ghost
                                                Texp_constant Const_string(" been introduced by ",(lib/newRuleSyntax.ml[144,5561+6]..lib/newRuleSyntax.ml[146,5689+42]) ghost,None)
                                              expression (lib/newRuleSyntax.ml[144,5561+6]..lib/newRuleSyntax.ml[146,5689+42]) ghost
                                                Texp_construct "CamlinternalFormatBasics.String"
                                                [
                                                  expression (lib/newRuleSyntax.ml[144,5561+6]..lib/newRuleSyntax.ml[146,5689+42]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                    []
                                                  expression (lib/newRuleSyntax.ml[144,5561+6]..lib/newRuleSyntax.ml[146,5689+42]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                    [
                                                      expression (lib/newRuleSyntax.ml[144,5561+6]..lib/newRuleSyntax.ml[146,5689+42]) ghost
                                                        Texp_constant Const_string(",\nyet this sequence does not end in a point-free semantic action <...>.\nPerhaps ",(lib/newRuleSyntax.ml[144,5561+6]..lib/newRuleSyntax.ml[146,5689+42]) ghost,None)
                                                      expression (lib/newRuleSyntax.ml[144,5561+6]..lib/newRuleSyntax.ml[146,5689+42]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.String"
                                                        [
                                                          expression (lib/newRuleSyntax.ml[144,5561+6]..lib/newRuleSyntax.ml[146,5689+42]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                                            []
                                                          expression (lib/newRuleSyntax.ml[144,5561+6]..lib/newRuleSyntax.ml[146,5689+42]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                            [
                                                              expression (lib/newRuleSyntax.ml[144,5561+6]..lib/newRuleSyntax.ml[146,5689+42]) ghost
                                                                Texp_constant Const_string(" should be used instead.",(lib/newRuleSyntax.ml[144,5561+6]..lib/newRuleSyntax.ml[146,5689+42]) ghost,None)
                                                              expression (lib/newRuleSyntax.ml[144,5561+6]..lib/newRuleSyntax.ml[146,5689+42]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                []
                                                            ]
                                                        ]
                                                    ]
                                                ]
                                            ]
                                        ]
                                    ]
                                ]
                              expression (lib/newRuleSyntax.ml[144,5561+6]..lib/newRuleSyntax.ml[146,5689+42]) ghost
                                Texp_constant Const_string("%s nameless %s been introduced by %s,\nyet this sequence does not end in a point-free semantic action <...>.\nPerhaps %s should be used instead.",(lib/newRuleSyntax.ml[144,5561+6]..lib/newRuleSyntax.ml[146,5689+42]) ghost,None)
                            ]
                        <arg>
                          Nolabel
                          expression (lib/newRuleSyntax.ml[147,5732+6]..lib/newRuleSyntax.ml[147,5732+20])
                            Texp_apply
                            expression (lib/newRuleSyntax.ml[147,5732+7]..lib/newRuleSyntax.ml[147,5732+17])
                              Texp_ident "Gbnf_parser!.Misc.count"
                            [
                              <arg>
                                Nolabel
                                expression (lib/newRuleSyntax.ml[147,5732+18]..lib/newRuleSyntax.ml[147,5732+19])
                                  Texp_ident "n/1699"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/newRuleSyntax.ml[147,5732+21]..lib/newRuleSyntax.ml[147,5732+35])
                            Texp_ident "variables_have/1700"
                        <arg>
                          Nolabel
                          expression (lib/newRuleSyntax.ml[147,5732+36]..lib/newRuleSyntax.ml[147,5732+45])
                            Texp_ident "tpatterns/1701"
                        <arg>
                          Nolabel
                          expression (lib/newRuleSyntax.ml[147,5732+46]..lib/newRuleSyntax.ml[147,5732+55])
                            Texp_ident "wpatterns/1702"
                      ]
                  None
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[157,6162+0]..lib/newRuleSyntax.ml[178,6655+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[157,6162+4]..lib/newRuleSyntax.ml[157,6162+11])
          Tpat_var "pattern/1744"
        expression (lib/newRuleSyntax.ml[157,6162+12]..lib/newRuleSyntax.ml[178,6655+11]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/newRuleSyntax.ml[157,6162+13]..lib/newRuleSyntax.ml[157,6162+15])
                extra
                  Tpat_extra_constraint
                  core_type (lib/newRuleSyntax.ml[157,6162+18]..lib/newRuleSyntax.ml[157,6162+28])
                    Ttyp_constr "Gbnf_parser!.Syntax.identifier"
                    []
                Tpat_alias "x1/1746"
                pattern (lib/newRuleSyntax.ml[157,6162+13]..lib/newRuleSyntax.ml[157,6162+15])
                  Tpat_any
              expression (lib/newRuleSyntax.ml[157,6162+30]..lib/newRuleSyntax.ml[178,6655+11]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/newRuleSyntax.ml[157,6162+31]..lib/newRuleSyntax.ml[157,6162+32])
                      extra
                        Tpat_extra_constraint
                        core_type (lib/newRuleSyntax.ml[157,6162+35]..lib/newRuleSyntax.ml[157,6162+42])
                          Ttyp_constr "Gbnf_parser!.Syntax.pattern"
                          []
                      Tpat_alias "p/1747"
                      pattern (lib/newRuleSyntax.ml[157,6162+31]..lib/newRuleSyntax.ml[157,6162+32])
                        Tpat_any
                    expression (lib/newRuleSyntax.ml[159,6222+2]..lib/newRuleSyntax.ml[178,6655+11])
                      extra
                        Texp_constraint
                        core_type (lib/newRuleSyntax.ml[157,6162+46]..lib/newRuleSyntax.ml[157,6162+56])
                          Ttyp_constr "Gbnf_parser!.IL.pattern"
                          []
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/newRuleSyntax.ml[159,6222+6]..lib/newRuleSyntax.ml[159,6222+7])
                            Tpat_var "c/1775"
                          expression (lib/newRuleSyntax.ml[159,6222+10]..lib/newRuleSyntax.ml[159,6222+15])
                            Texp_apply
                            expression (lib/newRuleSyntax.ml[159,6222+10]..lib/newRuleSyntax.ml[159,6222+13])
                              Texp_ident "Stdlib!.ref"
                            [
                              <arg>
                                Nolabel
                                expression (lib/newRuleSyntax.ml[159,6222+14]..lib/newRuleSyntax.ml[159,6222+15])
                                  Texp_constant Const_int 1
                            ]
                      ]
                      expression (lib/newRuleSyntax.ml[160,6241+2]..lib/newRuleSyntax.ml[178,6655+11])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (lib/newRuleSyntax.ml[160,6241+6]..lib/newRuleSyntax.ml[160,6241+11])
                              Tpat_var "fresh/1776"
                            expression (lib/newRuleSyntax.ml[160,6241+12]..lib/newRuleSyntax.ml[160,6241+65]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (lib/newRuleSyntax.ml[160,6241+12]..lib/newRuleSyntax.ml[160,6241+14])
                                    Tpat_construct "()"
                                    []
                                    None
                                  expression (lib/newRuleSyntax.ml[160,6241+17]..lib/newRuleSyntax.ml[160,6241+65])
                                    Texp_apply
                                    expression (lib/newRuleSyntax.ml[160,6241+17]..lib/newRuleSyntax.ml[160,6241+31])
                                      Texp_ident "Stdlib!.Printf.sprintf"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/newRuleSyntax.ml[160,6241+32]..lib/newRuleSyntax.ml[160,6241+39])
                                          Texp_construct "CamlinternalFormatBasics.Format"
                                          [
                                            expression (lib/newRuleSyntax.ml[160,6241+32]..lib/newRuleSyntax.ml[160,6241+39]) ghost
                                              Texp_construct "CamlinternalFormatBasics.String"
                                              [
                                                expression (lib/newRuleSyntax.ml[160,6241+32]..lib/newRuleSyntax.ml[160,6241+39]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                  []
                                                expression (lib/newRuleSyntax.ml[160,6241+32]..lib/newRuleSyntax.ml[160,6241+39]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                  [
                                                    expression (lib/newRuleSyntax.ml[160,6241+32]..lib/newRuleSyntax.ml[160,6241+39]) ghost
                                                      Texp_constant Const_char 5f
                                                    expression (lib/newRuleSyntax.ml[160,6241+32]..lib/newRuleSyntax.ml[160,6241+39]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.Int"
                                                      [
                                                        expression (lib/newRuleSyntax.ml[160,6241+32]..lib/newRuleSyntax.ml[160,6241+39]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.Int_d"
                                                          []
                                                        expression (lib/newRuleSyntax.ml[160,6241+32]..lib/newRuleSyntax.ml[160,6241+39]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                                          []
                                                        expression (lib/newRuleSyntax.ml[160,6241+32]..lib/newRuleSyntax.ml[160,6241+39]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.No_precision"
                                                          []
                                                        expression (lib/newRuleSyntax.ml[160,6241+32]..lib/newRuleSyntax.ml[160,6241+39]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                          []
                                                      ]
                                                  ]
                                              ]
                                            expression (lib/newRuleSyntax.ml[160,6241+32]..lib/newRuleSyntax.ml[160,6241+39]) ghost
                                              Texp_constant Const_string("%s_%d",(lib/newRuleSyntax.ml[160,6241+32]..lib/newRuleSyntax.ml[160,6241+39]) ghost,None)
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (lib/newRuleSyntax.ml[160,6241+40]..lib/newRuleSyntax.ml[160,6241+42])
                                          Texp_ident "x1/1746"
                                      <arg>
                                        Nolabel
                                        expression (lib/newRuleSyntax.ml[160,6241+43]..lib/newRuleSyntax.ml[160,6241+65])
                                          Texp_apply
                                          expression (lib/newRuleSyntax.ml[160,6241+44]..lib/newRuleSyntax.ml[160,6241+62])
                                            Texp_ident "Gbnf_parser!.Misc.postincrement"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/newRuleSyntax.ml[160,6241+63]..lib/newRuleSyntax.ml[160,6241+64])
                                                Texp_ident "c/1775"
                                          ]
                                    ]
                              ]
                        ]
                        expression (lib/newRuleSyntax.ml[162,6311+2]..lib/newRuleSyntax.ml[178,6655+11])
                          Texp_let Rec
                          [
                            <def>
                              pattern (lib/newRuleSyntax.ml[162,6311+10]..lib/newRuleSyntax.ml[162,6311+17])
                                Tpat_var "pattern/1792"
                              expression (lib/newRuleSyntax.ml[162,6311+18]..lib/newRuleSyntax.ml[175,6609+39]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (lib/newRuleSyntax.ml[162,6311+18]..lib/newRuleSyntax.ml[162,6311+19])
                                      Tpat_var "p/1793"
                                    expression (lib/newRuleSyntax.ml[163,6333+4]..lib/newRuleSyntax.ml[175,6609+39])
                                      Texp_match
                                      expression (lib/newRuleSyntax.ml[163,6333+10]..lib/newRuleSyntax.ml[163,6333+11])
                                        Texp_ident "p/1793"
                                      [
                                        <case>
                                          pattern (lib/newRuleSyntax.ml[164,6350+6]..lib/newRuleSyntax.ml[164,6350+17])
                                            Tpat_value
                                            pattern (lib/newRuleSyntax.ml[164,6350+6]..lib/newRuleSyntax.ml[164,6350+17])
                                              Tpat_construct "SemPatVar"
                                              [
                                                pattern (lib/newRuleSyntax.ml[164,6350+16]..lib/newRuleSyntax.ml[164,6350+17])
                                                  Tpat_var "x/1794"
                                              ]
                                              None
                                          expression (lib/newRuleSyntax.ml[165,6371+8]..lib/newRuleSyntax.ml[165,6371+35])
                                            Texp_construct "IL.PVar"
                                            [
                                              expression (lib/newRuleSyntax.ml[165,6371+16]..lib/newRuleSyntax.ml[165,6371+35])
                                                Texp_apply
                                                expression (lib/newRuleSyntax.ml[165,6371+17]..lib/newRuleSyntax.ml[165,6371+32])
                                                  Texp_ident "Gbnf_parser!.Positions.value"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/newRuleSyntax.ml[165,6371+33]..lib/newRuleSyntax.ml[165,6371+34])
                                                      Texp_ident "x/1794"
                                                ]
                                            ]
                                        <case>
                                          pattern (lib/newRuleSyntax.ml[166,6407+6]..lib/newRuleSyntax.ml[166,6407+20])
                                            Tpat_value
                                            pattern (lib/newRuleSyntax.ml[166,6407+6]..lib/newRuleSyntax.ml[166,6407+20])
                                              Tpat_construct "SemPatWildcard"
                                              []
                                              None
                                          expression (lib/newRuleSyntax.ml[167,6431+8]..lib/newRuleSyntax.ml[167,6431+20])
                                            Texp_construct "IL.PWildcard"
                                            []
                                        <case>
                                          pattern (lib/newRuleSyntax.ml[168,6452+6]..lib/newRuleSyntax.ml[168,6452+19])
                                            Tpat_value
                                            pattern (lib/newRuleSyntax.ml[168,6452+6]..lib/newRuleSyntax.ml[168,6452+19])
                                              Tpat_construct "SemPatTilde"
                                              [
                                                pattern (lib/newRuleSyntax.ml[168,6452+18]..lib/newRuleSyntax.ml[168,6452+19])
                                                  Tpat_any
                                              ]
                                              None
                                          expression (lib/newRuleSyntax.ml[169,6475+8]..lib/newRuleSyntax.ml[169,6475+25])
                                            Texp_construct "IL.PVar"
                                            [
                                              expression (lib/newRuleSyntax.ml[169,6475+16]..lib/newRuleSyntax.ml[169,6475+25])
                                                Texp_apply
                                                expression (lib/newRuleSyntax.ml[169,6475+17]..lib/newRuleSyntax.ml[169,6475+22])
                                                  Texp_ident "fresh/1776"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/newRuleSyntax.ml[169,6475+22]..lib/newRuleSyntax.ml[169,6475+24])
                                                      Texp_construct "()"
                                                      []
                                                ]
                                            ]
                                        <case>
                                          pattern (lib/newRuleSyntax.ml[170,6501+6]..lib/newRuleSyntax.ml[170,6501+20])
                                            Tpat_value
                                            pattern (lib/newRuleSyntax.ml[170,6501+6]..lib/newRuleSyntax.ml[170,6501+20])
                                              Tpat_construct "SemPatTuple"
                                              [
                                                pattern (lib/newRuleSyntax.ml[170,6501+18]..lib/newRuleSyntax.ml[170,6501+20])
                                                  Tpat_construct "[]"
                                                  []
                                                  None
                                              ]
                                              None
                                          expression (lib/newRuleSyntax.ml[171,6525+8]..lib/newRuleSyntax.ml[171,6525+16])
                                            Texp_construct "IL.PUnit"
                                            []
                                        <case>
                                          pattern (lib/newRuleSyntax.ml[172,6542+6]..lib/newRuleSyntax.ml[172,6542+21])
                                            Tpat_value
                                            pattern (lib/newRuleSyntax.ml[172,6542+6]..lib/newRuleSyntax.ml[172,6542+21])
                                              Tpat_construct "SemPatTuple"
                                              [
                                                pattern (lib/newRuleSyntax.ml[172,6542+18]..lib/newRuleSyntax.ml[172,6542+21])
                                                  Tpat_construct "::"
                                                  [
                                                    pattern (lib/newRuleSyntax.ml[172,6542+19]..lib/newRuleSyntax.ml[172,6542+20])
                                                      Tpat_var "p/1795"
                                                    pattern (lib/newRuleSyntax.ml[172,6542+20]..lib/newRuleSyntax.ml[172,6542+21]) ghost
                                                      Tpat_construct "[]"
                                                      []
                                                      None
                                                  ]
                                                  None
                                              ]
                                              None
                                          expression (lib/newRuleSyntax.ml[173,6567+8]..lib/newRuleSyntax.ml[173,6567+17])
                                            Texp_apply
                                            expression (lib/newRuleSyntax.ml[173,6567+8]..lib/newRuleSyntax.ml[173,6567+15])
                                              Texp_ident "pattern/1792"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/newRuleSyntax.ml[173,6567+16]..lib/newRuleSyntax.ml[173,6567+17])
                                                  Texp_ident "p/1795"
                                            ]
                                        <case>
                                          pattern (lib/newRuleSyntax.ml[174,6585+6]..lib/newRuleSyntax.ml[174,6585+20])
                                            Tpat_value
                                            pattern (lib/newRuleSyntax.ml[174,6585+6]..lib/newRuleSyntax.ml[174,6585+20])
                                              Tpat_construct "SemPatTuple"
                                              [
                                                pattern (lib/newRuleSyntax.ml[174,6585+18]..lib/newRuleSyntax.ml[174,6585+20])
                                                  Tpat_var "ps/1796"
                                              ]
                                              None
                                          expression (lib/newRuleSyntax.ml[175,6609+8]..lib/newRuleSyntax.ml[175,6609+39])
                                            Texp_construct "IL.PTuple"
                                            [
                                              expression (lib/newRuleSyntax.ml[175,6609+18]..lib/newRuleSyntax.ml[175,6609+39])
                                                Texp_apply
                                                expression (lib/newRuleSyntax.ml[175,6609+19]..lib/newRuleSyntax.ml[175,6609+27])
                                                  Texp_ident "Stdlib!.List.map"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/newRuleSyntax.ml[175,6609+28]..lib/newRuleSyntax.ml[175,6609+35])
                                                      Texp_ident "pattern/1792"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/newRuleSyntax.ml[175,6609+36]..lib/newRuleSyntax.ml[175,6609+38])
                                                      Texp_ident "ps/1796"
                                                ]
                                            ]
                                      ]
                                ]
                          ]
                          expression (lib/newRuleSyntax.ml[178,6655+2]..lib/newRuleSyntax.ml[178,6655+11])
                            Texp_apply
                            expression (lib/newRuleSyntax.ml[178,6655+2]..lib/newRuleSyntax.ml[178,6655+9])
                              Texp_ident "pattern/1792"
                            [
                              <arg>
                                Nolabel
                                expression (lib/newRuleSyntax.ml[178,6655+10]..lib/newRuleSyntax.ml[178,6655+11])
                                  Texp_ident "p/1747"
                            ]
                ]
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[184,6876+0]..lib/newRuleSyntax.ml[196,7107+18])
    Tstr_value Rec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[184,6876+8]..lib/newRuleSyntax.ml[184,6876+10])
          Tpat_var "bv/1824"
        expression (lib/newRuleSyntax.ml[184,6876+11]..lib/newRuleSyntax.ml[196,7107+18]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/newRuleSyntax.ml[184,6876+11]..lib/newRuleSyntax.ml[184,6876+15])
                Tpat_var "accu/1825"
              expression (lib/newRuleSyntax.ml[184,6876+16]..lib/newRuleSyntax.ml[196,7107+18]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/newRuleSyntax.ml[184,6876+16]..lib/newRuleSyntax.ml[184,6876+17])
                      Tpat_var "p/1826"
                    expression (lib/newRuleSyntax.ml[185,6896+2]..lib/newRuleSyntax.ml[196,7107+18])
                      Texp_match
                      expression (lib/newRuleSyntax.ml[185,6896+8]..lib/newRuleSyntax.ml[185,6896+9])
                        Texp_ident "p/1826"
                      [
                        <case>
                          pattern (lib/newRuleSyntax.ml[186,6911+4]..lib/newRuleSyntax.ml[186,6911+13])
                            Tpat_value
                            pattern (lib/newRuleSyntax.ml[186,6911+4]..lib/newRuleSyntax.ml[186,6911+13])
                              Tpat_construct "IL.PVar"
                              [
                                pattern (lib/newRuleSyntax.ml[186,6911+12]..lib/newRuleSyntax.ml[186,6911+13])
                                  Tpat_var "x/1827"
                              ]
                              None
                          expression (lib/newRuleSyntax.ml[187,6928+6]..lib/newRuleSyntax.ml[187,6928+15])
                            Texp_construct "::"
                            [
                              expression (lib/newRuleSyntax.ml[187,6928+6]..lib/newRuleSyntax.ml[187,6928+7])
                                Texp_ident "x/1827"
                              expression (lib/newRuleSyntax.ml[187,6928+11]..lib/newRuleSyntax.ml[187,6928+15])
                                Texp_ident "accu/1825"
                            ]
                        <case>
                          pattern (lib/newRuleSyntax.ml[188,6944+4]..lib/newRuleSyntax.ml[188,6944+16])
                            Tpat_value
                            pattern (lib/newRuleSyntax.ml[188,6944+4]..lib/newRuleSyntax.ml[188,6944+16])
                              Tpat_construct "IL.PWildcard"
                              []
                              None
                          expression (lib/newRuleSyntax.ml[189,6964+6]..lib/newRuleSyntax.ml[189,6964+10])
                            Texp_ident "accu/1825"
                        <case>
                          pattern (lib/newRuleSyntax.ml[190,6975+4]..lib/newRuleSyntax.ml[190,6975+12])
                            Tpat_value
                            pattern (lib/newRuleSyntax.ml[190,6975+4]..lib/newRuleSyntax.ml[190,6975+12])
                              Tpat_construct "IL.PUnit"
                              []
                              None
                          expression (lib/newRuleSyntax.ml[191,6991+6]..lib/newRuleSyntax.ml[191,6991+10])
                            Texp_ident "accu/1825"
                        <case>
                          pattern (lib/newRuleSyntax.ml[192,7002+4]..lib/newRuleSyntax.ml[192,7002+16])
                            Tpat_value
                            pattern (lib/newRuleSyntax.ml[192,7002+4]..lib/newRuleSyntax.ml[192,7002+16])
                              Tpat_construct "IL.PTuple"
                              [
                                pattern (lib/newRuleSyntax.ml[192,7002+14]..lib/newRuleSyntax.ml[192,7002+16])
                                  Tpat_var "ps/1828"
                              ]
                              None
                          expression (lib/newRuleSyntax.ml[193,7022+6]..lib/newRuleSyntax.ml[193,7022+31])
                            Texp_apply
                            expression (lib/newRuleSyntax.ml[193,7022+6]..lib/newRuleSyntax.ml[193,7022+20])
                              Texp_ident "Stdlib!.List.fold_left"
                            [
                              <arg>
                                Nolabel
                                expression (lib/newRuleSyntax.ml[193,7022+21]..lib/newRuleSyntax.ml[193,7022+23])
                                  Texp_ident "bv/1824"
                              <arg>
                                Nolabel
                                expression (lib/newRuleSyntax.ml[193,7022+24]..lib/newRuleSyntax.ml[193,7022+28])
                                  Texp_ident "accu/1825"
                              <arg>
                                Nolabel
                                expression (lib/newRuleSyntax.ml[193,7022+29]..lib/newRuleSyntax.ml[193,7022+31])
                                  Texp_ident "ps/1828"
                            ]
                        <case>
                          pattern (lib/newRuleSyntax.ml[194,7054+4]..lib/newRuleSyntax.ml[194,7054+5])
                            Tpat_value
                            pattern (lib/newRuleSyntax.ml[194,7054+4]..lib/newRuleSyntax.ml[194,7054+5])
                              Tpat_any
                          expression (lib/newRuleSyntax.ml[196,7107+6]..lib/newRuleSyntax.ml[196,7107+18])
                            Texp_assert                            expression (lib/newRuleSyntax.ml[196,7107+13]..lib/newRuleSyntax.ml[196,7107+18])
                              Texp_construct "false"
                              []
                      ]
                ]
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[202,7266+0]..lib/newRuleSyntax.ml[205,7364+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[202,7266+4]..lib/newRuleSyntax.ml[202,7266+14])
          Tpat_var "attributes/1829"
        expression (lib/newRuleSyntax.ml[202,7266+15]..lib/newRuleSyntax.ml[205,7364+11]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/newRuleSyntax.ml[202,7266+16]..lib/newRuleSyntax.ml[202,7266+17])
                extra
                  Tpat_extra_constraint
                  core_type (lib/newRuleSyntax.ml[202,7266+20]..lib/newRuleSyntax.ml[202,7266+37])
                    Ttyp_constr "Gbnf_parser!.Syntax.symbol_expression"
                    []
                Tpat_alias "e/1831"
                pattern (lib/newRuleSyntax.ml[202,7266+16]..lib/newRuleSyntax.ml[202,7266+17])
                  Tpat_any
              expression (lib/newRuleSyntax.ml[203,7320+2]..lib/newRuleSyntax.ml[205,7364+11])
                extra
                  Texp_constraint
                  core_type (lib/newRuleSyntax.ml[202,7266+41]..lib/newRuleSyntax.ml[202,7266+51])
                    Ttyp_constr "Gbnf_parser!.Syntax.attributes"
                    []
                Texp_match
                expression (lib/newRuleSyntax.ml[203,7320+8]..lib/newRuleSyntax.ml[203,7320+9])
                  Texp_ident "e/1831"
                [
                  <case>
                    pattern (lib/newRuleSyntax.ml[204,7335+4]..lib/newRuleSyntax.ml[204,7335+25])
                      Tpat_value
                      pattern (lib/newRuleSyntax.ml[204,7335+4]..lib/newRuleSyntax.ml[204,7335+25])
                        Tpat_construct "ESymbol"
                        [
                          pattern (lib/newRuleSyntax.ml[204,7335+13]..lib/newRuleSyntax.ml[204,7335+14])
                            Tpat_any
                          pattern (lib/newRuleSyntax.ml[204,7335+16]..lib/newRuleSyntax.ml[204,7335+17])
                            Tpat_any
                          pattern (lib/newRuleSyntax.ml[204,7335+19]..lib/newRuleSyntax.ml[204,7335+24])
                            Tpat_var "attrs/1832"
                        ]
                        None
                    expression (lib/newRuleSyntax.ml[205,7364+6]..lib/newRuleSyntax.ml[205,7364+11])
                      Texp_ident "attrs/1832"
                ]
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[212,7590+0]..lib/newRuleSyntax.ml[249,9447+1])
    Tstr_type Rec
    [
      type_declaration context/1833 (lib/newRuleSyntax.ml[212,7590+0]..lib/newRuleSyntax.ml[249,9447+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/newRuleSyntax.ml[215,7666+2]..lib/newRuleSyntax.ml[215,7666+19])
                Immutable
                pos/1834                core_type (lib/newRuleSyntax.ml[215,7666+7]..lib/newRuleSyntax.ml[215,7666+18])
                  Ttyp_poly
                  core_type (lib/newRuleSyntax.ml[215,7666+7]..lib/newRuleSyntax.ml[215,7666+18])
                    Ttyp_constr "Gbnf_parser!.Positions.t"
                    []
              (lib/newRuleSyntax.ml[220,7903+2]..lib/newRuleSyntax.ml[220,7903+27])
                Immutable
                producers/1835                core_type (lib/newRuleSyntax.ml[220,7903+13]..lib/newRuleSyntax.ml[220,7903+26])
                  Ttyp_poly
                  core_type (lib/newRuleSyntax.ml[220,7903+13]..lib/newRuleSyntax.ml[220,7903+26])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/newRuleSyntax.ml[220,7903+13]..lib/newRuleSyntax.ml[220,7903+21])
                        Ttyp_constr "Gbnf_parser!.Syntax.producer"
                        []
                    ]
              (lib/newRuleSyntax.ml[227,8301+2]..lib/newRuleSyntax.ml[227,8301+30])
                Immutable
                uxs/1836                core_type (lib/newRuleSyntax.ml[227,8301+7]..lib/newRuleSyntax.ml[227,8301+29])
                  Ttyp_poly
                  core_type (lib/newRuleSyntax.ml[227,8301+7]..lib/newRuleSyntax.ml[227,8301+29])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/newRuleSyntax.ml[227,8301+7]..lib/newRuleSyntax.ml[227,8301+24])
                        Ttyp_constr "option/10!"
                        [
                          core_type (lib/newRuleSyntax.ml[227,8301+7]..lib/newRuleSyntax.ml[227,8301+17])
                            Ttyp_constr "Gbnf_parser!.Syntax.identifier"
                            []
                        ]
                    ]
              (lib/newRuleSyntax.ml[231,8488+2]..lib/newRuleSyntax.ml[231,8488+29])
                Immutable
                bindings/1837                core_type (lib/newRuleSyntax.ml[231,8488+12]..lib/newRuleSyntax.ml[231,8488+28])
                  Ttyp_poly
                  core_type (lib/newRuleSyntax.ml[231,8488+12]..lib/newRuleSyntax.ml[231,8488+28])
                    Ttyp_arrow
                    Nolabel
                    core_type (lib/newRuleSyntax.ml[231,8488+12]..lib/newRuleSyntax.ml[231,8488+18])
                      Ttyp_constr "Gbnf_parser!.Syntax.action"
                      []
                    core_type (lib/newRuleSyntax.ml[231,8488+22]..lib/newRuleSyntax.ml[231,8488+28])
                      Ttyp_constr "Gbnf_parser!.Syntax.action"
                      []
              (lib/newRuleSyntax.ml[238,8900+2]..lib/newRuleSyntax.ml[238,8900+25])
                Immutable
                tuple/1838                core_type (lib/newRuleSyntax.ml[238,8900+9]..lib/newRuleSyntax.ml[238,8900+24])
                  Ttyp_poly
                  core_type (lib/newRuleSyntax.ml[238,8900+9]..lib/newRuleSyntax.ml[238,8900+24])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/newRuleSyntax.ml[238,8900+9]..lib/newRuleSyntax.ml[238,8900+19])
                        Ttyp_constr "Gbnf_parser!.Syntax.identifier"
                        []
                    ]
              (lib/newRuleSyntax.ml[247,9411+2]..lib/newRuleSyntax.ml[247,9411+34])
                Immutable
                tilde_used/1839                core_type (lib/newRuleSyntax.ml[247,9411+14]..lib/newRuleSyntax.ml[247,9411+33])
                  Ttyp_poly
                  core_type (lib/newRuleSyntax.ml[247,9411+14]..lib/newRuleSyntax.ml[247,9411+33])
                    Ttyp_constr "Gbnf_parser!.Positions.positions"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/newRuleSyntax.ml[253,9476+0]..lib/newRuleSyntax.ml[261,9630+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[253,9476+4]..lib/newRuleSyntax.ml[253,9476+9])
          Tpat_var "empty/1932"
        expression (lib/newRuleSyntax.ml[253,9476+10]..lib/newRuleSyntax.ml[261,9630+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/newRuleSyntax.ml[253,9476+10]..lib/newRuleSyntax.ml[253,9476+13])
                Tpat_var "pos/1934"
              expression (lib/newRuleSyntax.ml[254,9502+2]..lib/newRuleSyntax.ml[261,9630+3])
                extra
                  Texp_constraint
                  core_type (lib/newRuleSyntax.ml[253,9476+16]..lib/newRuleSyntax.ml[253,9476+23])
                    Ttyp_constr "context/1833"
                    []
                Texp_record
                  fields =
                    [
                      "pos"
                        expression (lib/newRuleSyntax.ml[255,9506+4]..lib/newRuleSyntax.ml[255,9506+7])
                          Texp_ident "pos/1934"
                      "producers"
                        expression (lib/newRuleSyntax.ml[256,9515+17]..lib/newRuleSyntax.ml[256,9515+19])
                          Texp_construct "[]"
                          []
                      "uxs"
                        expression (lib/newRuleSyntax.ml[257,9536+17]..lib/newRuleSyntax.ml[257,9536+19])
                          Texp_construct "[]"
                          []
                      "bindings"
                        expression (lib/newRuleSyntax.ml[258,9557+17]..lib/newRuleSyntax.ml[258,9557+29])
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (lib/newRuleSyntax.ml[258,9557+22]..lib/newRuleSyntax.ml[258,9557+23])
                                Tpat_var "a/1935"
                              expression (lib/newRuleSyntax.ml[258,9557+27]..lib/newRuleSyntax.ml[258,9557+28])
                                Texp_ident "a/1935"
                          ]
                      "tuple"
                        expression (lib/newRuleSyntax.ml[259,9588+17]..lib/newRuleSyntax.ml[259,9588+19])
                          Texp_construct "[]"
                          []
                      "tilde_used"
                        expression (lib/newRuleSyntax.ml[260,9609+17]..lib/newRuleSyntax.ml[260,9609+19])
                          Texp_construct "[]"
                          []
                    ]
                  representation =
                    Record_regular
                  extended_expression =
                    None
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[265,9680+0]..lib/newRuleSyntax.ml[266,9736+26])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[265,9680+4]..lib/newRuleSyntax.ml[265,9680+8])
          Tpat_var "user/1936"
        expression (lib/newRuleSyntax.ml[265,9680+9]..lib/newRuleSyntax.ml[266,9736+26]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/newRuleSyntax.ml[265,9680+10]..lib/newRuleSyntax.ml[265,9680+11])
                extra
                  Tpat_extra_constraint
                  core_type (lib/newRuleSyntax.ml[265,9680+14]..lib/newRuleSyntax.ml[265,9680+32])
                    Ttyp_constr "Gbnf_parser!.Syntax.located"
                    [
                      core_type (lib/newRuleSyntax.ml[265,9680+14]..lib/newRuleSyntax.ml[265,9680+24])
                        Ttyp_constr "Gbnf_parser!.Syntax.identifier"
                        []
                    ]
                Tpat_alias "x/1938"
                pattern (lib/newRuleSyntax.ml[265,9680+10]..lib/newRuleSyntax.ml[265,9680+11])
                  Tpat_any
              expression (lib/newRuleSyntax.ml[266,9736+2]..lib/newRuleSyntax.ml[266,9736+26])
                extra
                  Texp_constraint
                  core_type (lib/newRuleSyntax.ml[265,9680+36]..lib/newRuleSyntax.ml[265,9680+53])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/newRuleSyntax.ml[265,9680+36]..lib/newRuleSyntax.ml[265,9680+46])
                        Ttyp_constr "Gbnf_parser!.Syntax.identifier"
                        []
                    ]
                Texp_construct "Some"
                [
                  expression (lib/newRuleSyntax.ml[266,9736+7]..lib/newRuleSyntax.ml[266,9736+26])
                    Texp_apply
                    expression (lib/newRuleSyntax.ml[266,9736+8]..lib/newRuleSyntax.ml[266,9736+23])
                      Texp_ident "Gbnf_parser!.Positions.value"
                    [
                      <arg>
                        Nolabel
                        expression (lib/newRuleSyntax.ml[266,9736+24]..lib/newRuleSyntax.ml[266,9736+25])
                          Texp_ident "x/1938"
                    ]
                ]
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[268,9764+0]..lib/newRuleSyntax.ml[269,9795+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[268,9764+4]..lib/newRuleSyntax.ml[268,9764+8])
          extra
            Tpat_extra_constraint
            core_type (lib/newRuleSyntax.ml[268,9764+11]..lib/newRuleSyntax.ml[268,9764+28])
              Ttyp_constr "option/10!"
              [
                core_type (lib/newRuleSyntax.ml[268,9764+11]..lib/newRuleSyntax.ml[268,9764+21])
                  Ttyp_constr "Gbnf_parser!.Syntax.identifier"
                  []
              ]
          Tpat_alias "auto/1939"
          pattern (lib/newRuleSyntax.ml[268,9764+4]..lib/newRuleSyntax.ml[268,9764+8])
            Tpat_any
        expression (lib/newRuleSyntax.ml[269,9795+2]..lib/newRuleSyntax.ml[269,9795+6])
          extra
            Texp_constraint
            core_type (lib/newRuleSyntax.ml[268,9764+11]..lib/newRuleSyntax.ml[268,9764+28])
              Ttyp_constr "option/10!"
              [
                core_type (lib/newRuleSyntax.ml[268,9764+11]..lib/newRuleSyntax.ml[268,9764+21])
                  Ttyp_constr "Gbnf_parser!.Syntax.identifier"
                  []
              ]
          Texp_construct "None"
          []
    ]
  structure_item (lib/newRuleSyntax.ml[273,9835+0]..lib/newRuleSyntax.ml[274,9875+28])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[273,9835+4]..lib/newRuleSyntax.ml[273,9835+13])
          Tpat_var "producers/1940"
        expression (lib/newRuleSyntax.ml[273,9835+14]..lib/newRuleSyntax.ml[274,9875+28]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/newRuleSyntax.ml[273,9835+14]..lib/newRuleSyntax.ml[273,9835+21])
                Tpat_var "context/1942"
              expression (lib/newRuleSyntax.ml[274,9875+2]..lib/newRuleSyntax.ml[274,9875+28])
                extra
                  Texp_constraint
                  core_type (lib/newRuleSyntax.ml[273,9835+24]..lib/newRuleSyntax.ml[273,9835+37])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/newRuleSyntax.ml[273,9835+24]..lib/newRuleSyntax.ml[273,9835+32])
                        Ttyp_constr "Gbnf_parser!.Syntax.producer"
                        []
                    ]
                Texp_apply
                expression (lib/newRuleSyntax.ml[274,9875+2]..lib/newRuleSyntax.ml[274,9875+10])
                  Texp_ident "Stdlib!.List.rev"
                [
                  <arg>
                    Nolabel
                    expression (lib/newRuleSyntax.ml[274,9875+11]..lib/newRuleSyntax.ml[274,9875+28])
                      Texp_field
                      expression (lib/newRuleSyntax.ml[274,9875+11]..lib/newRuleSyntax.ml[274,9875+18])
                        Texp_ident "context/1942"
                      "producers"
                ]
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[278,9953+0]..lib/newRuleSyntax.ml[279,9997+38])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[278,9953+4]..lib/newRuleSyntax.ml[278,9953+7])
          Tpat_var "uxs/1943"
        expression (lib/newRuleSyntax.ml[278,9953+8]..lib/newRuleSyntax.ml[279,9997+38]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/newRuleSyntax.ml[278,9953+8]..lib/newRuleSyntax.ml[278,9953+15])
                Tpat_var "context/1945"
              expression (lib/newRuleSyntax.ml[279,9997+2]..lib/newRuleSyntax.ml[279,9997+38])
                extra
                  Texp_constraint
                  core_type (lib/newRuleSyntax.ml[278,9953+18]..lib/newRuleSyntax.ml[278,9953+41])
                    Ttyp_constr "array/8!"
                    [
                      core_type (lib/newRuleSyntax.ml[278,9953+18]..lib/newRuleSyntax.ml[278,9953+35])
                        Ttyp_constr "option/10!"
                        [
                          core_type (lib/newRuleSyntax.ml[278,9953+18]..lib/newRuleSyntax.ml[278,9953+28])
                            Ttyp_constr "Gbnf_parser!.Syntax.identifier"
                            []
                        ]
                    ]
                Texp_apply
                expression (lib/newRuleSyntax.ml[279,9997+2]..lib/newRuleSyntax.ml[279,9997+15])
                  Texp_ident "Stdlib!.Array.of_list"
                [
                  <arg>
                    Nolabel
                    expression (lib/newRuleSyntax.ml[279,9997+16]..lib/newRuleSyntax.ml[279,9997+38])
                      Texp_apply
                      expression (lib/newRuleSyntax.ml[279,9997+17]..lib/newRuleSyntax.ml[279,9997+25])
                        Texp_ident "Stdlib!.List.rev"
                      [
                        <arg>
                          Nolabel
                          expression (lib/newRuleSyntax.ml[279,9997+26]..lib/newRuleSyntax.ml[279,9997+37])
                            Texp_field
                            expression (lib/newRuleSyntax.ml[279,9997+26]..lib/newRuleSyntax.ml[279,9997+33])
                              Texp_ident "context/1945"
                            "uxs"
                      ]
                ]
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[283,10065+0]..lib/newRuleSyntax.ml[284,10103+24])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[283,10065+4]..lib/newRuleSyntax.ml[283,10065+9])
          Tpat_var "tuple/1994"
        expression (lib/newRuleSyntax.ml[283,10065+10]..lib/newRuleSyntax.ml[284,10103+24]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/newRuleSyntax.ml[283,10065+10]..lib/newRuleSyntax.ml[283,10065+17])
                Tpat_var "context/1996"
              expression (lib/newRuleSyntax.ml[284,10103+2]..lib/newRuleSyntax.ml[284,10103+24])
                extra
                  Texp_constraint
                  core_type (lib/newRuleSyntax.ml[283,10065+20]..lib/newRuleSyntax.ml[283,10065+35])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/newRuleSyntax.ml[283,10065+20]..lib/newRuleSyntax.ml[283,10065+30])
                        Ttyp_constr "Gbnf_parser!.Syntax.identifier"
                        []
                    ]
                Texp_apply
                expression (lib/newRuleSyntax.ml[284,10103+2]..lib/newRuleSyntax.ml[284,10103+10])
                  Texp_ident "Stdlib!.List.rev"
                [
                  <arg>
                    Nolabel
                    expression (lib/newRuleSyntax.ml[284,10103+11]..lib/newRuleSyntax.ml[284,10103+24])
                      Texp_field
                      expression (lib/newRuleSyntax.ml[284,10103+11]..lib/newRuleSyntax.ml[284,10103+18])
                        Texp_ident "context/1996"
                      "tuple"
                ]
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[294,10459+0]..lib/newRuleSyntax.ml[296,10540+24])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[294,10459+4]..lib/newRuleSyntax.ml[294,10459+10])
          Tpat_var "semvar/1997"
        expression (lib/newRuleSyntax.ml[294,10459+11]..lib/newRuleSyntax.ml[296,10540+24]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/newRuleSyntax.ml[294,10459+11]..lib/newRuleSyntax.ml[294,10459+18])
                Tpat_var "context/1999"
              expression (lib/newRuleSyntax.ml[295,10493+2]..lib/newRuleSyntax.ml[296,10540+24])
                extra
                  Texp_constraint
                  core_type (lib/newRuleSyntax.ml[294,10459+21]..lib/newRuleSyntax.ml[294,10459+31])
                    Ttyp_constr "Gbnf_parser!.Syntax.identifier"
                    []
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/newRuleSyntax.ml[295,10493+6]..lib/newRuleSyntax.ml[295,10493+7])
                      Tpat_var "i/2000"
                    expression (lib/newRuleSyntax.ml[295,10493+10]..lib/newRuleSyntax.ml[295,10493+43])
                      Texp_apply
                      expression (lib/newRuleSyntax.ml[295,10493+40]..lib/newRuleSyntax.ml[295,10493+41])
                        Texp_ident "Stdlib!.+"
                      [
                        <arg>
                          Nolabel
                          expression (lib/newRuleSyntax.ml[295,10493+10]..lib/newRuleSyntax.ml[295,10493+39])
                            Texp_apply
                            expression (lib/newRuleSyntax.ml[295,10493+10]..lib/newRuleSyntax.ml[295,10493+21])
                              Texp_ident "Stdlib!.List.length"
                            [
                              <arg>
                                Nolabel
                                expression (lib/newRuleSyntax.ml[295,10493+22]..lib/newRuleSyntax.ml[295,10493+39])
                                  Texp_field
                                  expression (lib/newRuleSyntax.ml[295,10493+22]..lib/newRuleSyntax.ml[295,10493+29])
                                    Texp_ident "context/1999"
                                  "producers"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/newRuleSyntax.ml[295,10493+42]..lib/newRuleSyntax.ml[295,10493+43])
                            Texp_constant Const_int 1
                      ]
                ]
                expression (lib/newRuleSyntax.ml[296,10540+2]..lib/newRuleSyntax.ml[296,10540+24])
                  Texp_apply
                  expression (lib/newRuleSyntax.ml[296,10540+2]..lib/newRuleSyntax.ml[296,10540+16])
                    Texp_ident "Stdlib!.Printf.sprintf"
                  [
                    <arg>
                      Nolabel
                      expression (lib/newRuleSyntax.ml[296,10540+17]..lib/newRuleSyntax.ml[296,10540+22])
                        Texp_construct "CamlinternalFormatBasics.Format"
                        [
                          expression (lib/newRuleSyntax.ml[296,10540+17]..lib/newRuleSyntax.ml[296,10540+22]) ghost
                            Texp_construct "CamlinternalFormatBasics.Char_literal"
                            [
                              expression (lib/newRuleSyntax.ml[296,10540+17]..lib/newRuleSyntax.ml[296,10540+22]) ghost
                                Texp_constant Const_char 5f
                              expression (lib/newRuleSyntax.ml[296,10540+17]..lib/newRuleSyntax.ml[296,10540+22]) ghost
                                Texp_construct "CamlinternalFormatBasics.Int"
                                [
                                  expression (lib/newRuleSyntax.ml[296,10540+17]..lib/newRuleSyntax.ml[296,10540+22]) ghost
                                    Texp_construct "CamlinternalFormatBasics.Int_d"
                                    []
                                  expression (lib/newRuleSyntax.ml[296,10540+17]..lib/newRuleSyntax.ml[296,10540+22]) ghost
                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                    []
                                  expression (lib/newRuleSyntax.ml[296,10540+17]..lib/newRuleSyntax.ml[296,10540+22]) ghost
                                    Texp_construct "CamlinternalFormatBasics.No_precision"
                                    []
                                  expression (lib/newRuleSyntax.ml[296,10540+17]..lib/newRuleSyntax.ml[296,10540+22]) ghost
                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                    []
                                ]
                            ]
                          expression (lib/newRuleSyntax.ml[296,10540+17]..lib/newRuleSyntax.ml[296,10540+22]) ghost
                            Texp_constant Const_string("_%d",(lib/newRuleSyntax.ml[296,10540+17]..lib/newRuleSyntax.ml[296,10540+22]) ghost,None)
                        ]
                    <arg>
                      Nolabel
                      expression (lib/newRuleSyntax.ml[296,10540+23]..lib/newRuleSyntax.ml[296,10540+24])
                        Texp_ident "i/2000"
                  ]
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[302,10702+0]..lib/newRuleSyntax.ml[461,18366+34])
    Tstr_value Rec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[302,10702+8]..lib/newRuleSyntax.ml[302,10702+17])
          Tpat_var "parameter/2001"
        expression (lib/newRuleSyntax.ml[302,10702+18]..lib/newRuleSyntax.ml[307,10937+57]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/newRuleSyntax.ml[302,10702+19]..lib/newRuleSyntax.ml[302,10702+20])
                extra
                  Tpat_extra_constraint
                  core_type (lib/newRuleSyntax.ml[302,10702+23]..lib/newRuleSyntax.ml[302,10702+40])
                    Ttyp_constr "Gbnf_parser!.Syntax.symbol_expression"
                    []
                Tpat_alias "e/2008"
                pattern (lib/newRuleSyntax.ml[302,10702+19]..lib/newRuleSyntax.ml[302,10702+20])
                  Tpat_any
              expression (lib/newRuleSyntax.ml[303,10758+2]..lib/newRuleSyntax.ml[307,10937+57])
                extra
                  Texp_constraint
                  core_type (lib/newRuleSyntax.ml[302,10702+44]..lib/newRuleSyntax.ml[302,10702+53])
                    Ttyp_constr "Gbnf_parser!.Syntax.parameter"
                    []
                Texp_match
                expression (lib/newRuleSyntax.ml[303,10758+8]..lib/newRuleSyntax.ml[303,10758+9])
                  Texp_ident "e/2008"
                [
                  <case>
                    pattern (lib/newRuleSyntax.ml[304,10773+4]..lib/newRuleSyntax.ml[304,10773+31])
                      Tpat_value
                      pattern (lib/newRuleSyntax.ml[304,10773+4]..lib/newRuleSyntax.ml[304,10773+31])
                        Tpat_construct "ESymbol"
                        [
                          pattern (lib/newRuleSyntax.ml[304,10773+13]..lib/newRuleSyntax.ml[304,10773+16])
                            Tpat_var "sym/2009"
                          pattern (lib/newRuleSyntax.ml[304,10773+18]..lib/newRuleSyntax.ml[304,10773+22])
                            Tpat_var "args/2010"
                          pattern (lib/newRuleSyntax.ml[304,10773+24]..lib/newRuleSyntax.ml[304,10773+30])
                            Tpat_var "_attrs/2011"
                        ]
                        None
                    expression (lib/newRuleSyntax.ml[307,10937+6]..lib/newRuleSyntax.ml[307,10937+57])
                      Texp_apply
                      expression (lib/newRuleSyntax.ml[307,10937+6]..lib/newRuleSyntax.ml[307,10937+20])
                        Texp_ident "Gbnf_parser!.Parameters.app"
                      [
                        <arg>
                          Nolabel
                          expression (lib/newRuleSyntax.ml[307,10937+21]..lib/newRuleSyntax.ml[307,10937+24])
                            Texp_ident "sym/2009"
                        <arg>
                          Nolabel
                          expression (lib/newRuleSyntax.ml[307,10937+25]..lib/newRuleSyntax.ml[307,10937+57])
                            Texp_apply
                            expression (lib/newRuleSyntax.ml[307,10937+26]..lib/newRuleSyntax.ml[307,10937+34])
                              Texp_ident "Stdlib!.List.map"
                            [
                              <arg>
                                Nolabel
                                expression (lib/newRuleSyntax.ml[307,10937+35]..lib/newRuleSyntax.ml[307,10937+51])
                                  Texp_ident "nested_parameter/2002"
                              <arg>
                                Nolabel
                                expression (lib/newRuleSyntax.ml[307,10937+52]..lib/newRuleSyntax.ml[307,10937+56])
                                  Texp_ident "args/2010"
                            ]
                      ]
                ]
          ]
      <def>
        pattern (lib/newRuleSyntax.ml[311,11054+4]..lib/newRuleSyntax.ml[311,11054+20])
          Tpat_var "nested_parameter/2002"
        expression (lib/newRuleSyntax.ml[311,11054+21]..lib/newRuleSyntax.ml[323,11761+16]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/newRuleSyntax.ml[311,11054+22]..lib/newRuleSyntax.ml[311,11054+23])
                extra
                  Tpat_extra_constraint
                  core_type (lib/newRuleSyntax.ml[311,11054+26]..lib/newRuleSyntax.ml[311,11054+36])
                    Ttyp_constr "Gbnf_parser!.Syntax.expression"
                    []
                Tpat_alias "e/2027"
                pattern (lib/newRuleSyntax.ml[311,11054+22]..lib/newRuleSyntax.ml[311,11054+23])
                  Tpat_any
              expression (lib/newRuleSyntax.ml[313,11107+2]..lib/newRuleSyntax.ml[323,11761+16])
                extra
                  Texp_constraint
                  core_type (lib/newRuleSyntax.ml[311,11054+40]..lib/newRuleSyntax.ml[311,11054+49])
                    Ttyp_constr "Gbnf_parser!.Syntax.parameter"
                    []
                Texp_match
                expression (lib/newRuleSyntax.ml[313,11107+8]..lib/newRuleSyntax.ml[313,11107+25])
                  Texp_apply
                  expression (lib/newRuleSyntax.ml[313,11107+8]..lib/newRuleSyntax.ml[313,11107+23])
                    Texp_ident "Gbnf_parser!.Positions.value"
                  [
                    <arg>
                      Nolabel
                      expression (lib/newRuleSyntax.ml[313,11107+24]..lib/newRuleSyntax.ml[313,11107+25])
                        Texp_ident "e/2027"
                  ]
                [
                  <case>
                    pattern (lib/newRuleSyntax.ml[314,11138+4]..lib/newRuleSyntax.ml[314,11138+64])
                      Tpat_value
                      pattern (lib/newRuleSyntax.ml[314,11138+4]..lib/newRuleSyntax.ml[314,11138+64])
                        Tpat_construct "EChoice"
                        [
                          pattern (lib/newRuleSyntax.ml[314,11138+12]..lib/newRuleSyntax.ml[314,11138+64])
                            Tpat_construct "::"
                            [
                              pattern (lib/newRuleSyntax.ml[314,11138+14]..lib/newRuleSyntax.ml[314,11138+62])
                                Tpat_construct "Branch"
                                [
                                  pattern (lib/newRuleSyntax.ml[314,11138+22]..lib/newRuleSyntax.ml[314,11138+58])
                                    Tpat_record
                                    [
                                      "Positions.value"
                                        pattern (lib/newRuleSyntax.ml[314,11138+42]..lib/newRuleSyntax.ml[314,11138+54])
                                          Tpat_construct "ESingleton"
                                          [
                                            pattern (lib/newRuleSyntax.ml[314,11138+53]..lib/newRuleSyntax.ml[314,11138+54])
                                              Tpat_var "e/2028"
                                          ]
                                          None
                                    ]
                                  pattern (lib/newRuleSyntax.ml[314,11138+60]..lib/newRuleSyntax.ml[314,11138+61])
                                    Tpat_any
                                ]
                                None
                              pattern (lib/newRuleSyntax.ml[314,11138+63]..lib/newRuleSyntax.ml[314,11138+64]) ghost
                                Tpat_construct "[]"
                                []
                                None
                            ]
                            None
                        ]
                        None
                    expression (lib/newRuleSyntax.ml[323,11761+5]..lib/newRuleSyntax.ml[323,11761+16])
                      Texp_apply
                      expression (lib/newRuleSyntax.ml[323,11761+5]..lib/newRuleSyntax.ml[323,11761+14])
                        Texp_ident "parameter/2001"
                      [
                        <arg>
                          Nolabel
                          expression (lib/newRuleSyntax.ml[323,11761+15]..lib/newRuleSyntax.ml[323,11761+16])
                            Texp_ident "e/2028"
                      ]
                ]
          ]
      <def>
        pattern (lib/newRuleSyntax.ml[334,12172+4]..lib/newRuleSyntax.ml[334,12172+12])
          Tpat_var "producer/2003"
        expression (lib/newRuleSyntax.ml[334,12172+13]..lib/newRuleSyntax.ml[335,12225+32]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/newRuleSyntax.ml[334,12172+13]..lib/newRuleSyntax.ml[334,12172+14])
                Tpat_var "x/2043"
              expression (lib/newRuleSyntax.ml[334,12172+15]..lib/newRuleSyntax.ml[335,12225+32]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/newRuleSyntax.ml[334,12172+16]..lib/newRuleSyntax.ml[334,12172+18])
                      extra
                        Tpat_extra_constraint
                        core_type (lib/newRuleSyntax.ml[334,12172+21]..lib/newRuleSyntax.ml[334,12172+38])
                          Ttyp_constr "Gbnf_parser!.Syntax.symbol_expression"
                          []
                      Tpat_alias "e1/2044"
                      pattern (lib/newRuleSyntax.ml[334,12172+16]..lib/newRuleSyntax.ml[334,12172+18])
                        Tpat_any
                    expression (lib/newRuleSyntax.ml[335,12225+2]..lib/newRuleSyntax.ml[335,12225+32])
                      extra
                        Texp_constraint
                        core_type (lib/newRuleSyntax.ml[334,12172+42]..lib/newRuleSyntax.ml[334,12172+50])
                          Ttyp_constr "Gbnf_parser!.Syntax.producer"
                          []
                      Texp_tuple
                      [
                        expression (lib/newRuleSyntax.ml[335,12225+2]..lib/newRuleSyntax.ml[335,12225+3])
                          Texp_ident "x/2043"
                        expression (lib/newRuleSyntax.ml[335,12225+5]..lib/newRuleSyntax.ml[335,12225+17])
                          Texp_apply
                          expression (lib/newRuleSyntax.ml[335,12225+5]..lib/newRuleSyntax.ml[335,12225+14])
                            Texp_ident "parameter/2001"
                          [
                            <arg>
                              Nolabel
                              expression (lib/newRuleSyntax.ml[335,12225+15]..lib/newRuleSyntax.ml[335,12225+17])
                                Texp_ident "e1/2044"
                          ]
                        expression (lib/newRuleSyntax.ml[335,12225+19]..lib/newRuleSyntax.ml[335,12225+32])
                          Texp_apply
                          expression (lib/newRuleSyntax.ml[335,12225+19]..lib/newRuleSyntax.ml[335,12225+29])
                            Texp_ident "attributes/1829"
                          [
                            <arg>
                              Nolabel
                              expression (lib/newRuleSyntax.ml[335,12225+30]..lib/newRuleSyntax.ml[335,12225+32])
                                Texp_ident "e1/2044"
                          ]
                      ]
                ]
          ]
      <def>
        pattern (lib/newRuleSyntax.ml[340,12391+4]..lib/newRuleSyntax.ml[340,12391+10])
          Tpat_var "extend/2004"
        expression (lib/newRuleSyntax.ml[340,12391+11]..lib/newRuleSyntax.ml[366,13737+20]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/newRuleSyntax.ml[340,12391+12]..lib/newRuleSyntax.ml[340,12391+13])
                extra
                  Tpat_extra_constraint
                  core_type (lib/newRuleSyntax.ml[340,12391+16]..lib/newRuleSyntax.ml[340,12391+23])
                    Ttyp_constr "Gbnf_parser!.Syntax.pattern"
                    []
                Tpat_alias "p/2045"
                pattern (lib/newRuleSyntax.ml[340,12391+12]..lib/newRuleSyntax.ml[340,12391+13])
                  Tpat_any
              expression (lib/newRuleSyntax.ml[340,12391+25]..lib/newRuleSyntax.ml[366,13737+20]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/newRuleSyntax.ml[340,12391+26]..lib/newRuleSyntax.ml[340,12391+28])
                      extra
                        Tpat_extra_constraint
                        core_type (lib/newRuleSyntax.ml[340,12391+31]..lib/newRuleSyntax.ml[340,12391+48])
                          Ttyp_constr "Gbnf_parser!.Syntax.symbol_expression"
                          []
                      Tpat_alias "e1/2046"
                      pattern (lib/newRuleSyntax.ml[340,12391+26]..lib/newRuleSyntax.ml[340,12391+28])
                        Tpat_any
                    expression (lib/newRuleSyntax.ml[340,12391+50]..lib/newRuleSyntax.ml[366,13737+20]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/newRuleSyntax.ml[340,12391+51]..lib/newRuleSyntax.ml[340,12391+58])
                            extra
                              Tpat_extra_constraint
                              core_type (lib/newRuleSyntax.ml[340,12391+61]..lib/newRuleSyntax.ml[340,12391+68])
                                Ttyp_constr "context/1833"
                                []
                            Tpat_alias "context/2047"
                            pattern (lib/newRuleSyntax.ml[340,12391+51]..lib/newRuleSyntax.ml[340,12391+58])
                              Tpat_any
                          expression (lib/newRuleSyntax.ml[341,12473+2]..lib/newRuleSyntax.ml[366,13737+20])
                            extra
                              Texp_constraint
                              core_type (lib/newRuleSyntax.ml[340,12391+72]..lib/newRuleSyntax.ml[340,12391+79])
                                Ttyp_constr "context/1833"
                                []
                            Texp_match
                            expression (lib/newRuleSyntax.ml[341,12473+8]..lib/newRuleSyntax.ml[341,12473+9])
                              Texp_ident "p/2045"
                            [
                              <case>
                                pattern (lib/newRuleSyntax.ml[342,12488+4]..lib/newRuleSyntax.ml[342,12488+16])
                                  Tpat_value
                                  pattern (lib/newRuleSyntax.ml[342,12488+4]..lib/newRuleSyntax.ml[342,12488+16])
                                    Tpat_construct "SemPatVar"
                                    [
                                      pattern (lib/newRuleSyntax.ml[342,12488+14]..lib/newRuleSyntax.ml[342,12488+16])
                                        Tpat_var "x1/2048"
                                    ]
                                    None
                                expression (lib/newRuleSyntax.ml[345,12657+6]..lib/newRuleSyntax.ml[350,12950+41])
                                  Texp_record
                                    fields =
                                      [
                                        "pos"
                                          expression (lib/newRuleSyntax.ml[345,12657+43]..lib/newRuleSyntax.ml[345,12657+54])
                                            Texp_field
                                            expression (lib/newRuleSyntax.ml[345,12657+43]..lib/newRuleSyntax.ml[345,12657+50])
                                              Texp_ident "context/2047"
                                            "pos"
                                        "producers"
                                          expression (lib/newRuleSyntax.ml[346,12713+21]..lib/newRuleSyntax.ml[346,12713+60])
                                            Texp_construct "::"
                                            [
                                              expression (lib/newRuleSyntax.ml[346,12713+21]..lib/newRuleSyntax.ml[346,12713+35])
                                                Texp_apply
                                                expression (lib/newRuleSyntax.ml[346,12713+21]..lib/newRuleSyntax.ml[346,12713+29])
                                                  Texp_ident "producer/2003"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/newRuleSyntax.ml[346,12713+30]..lib/newRuleSyntax.ml[346,12713+32])
                                                      Texp_ident "x1/2048"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/newRuleSyntax.ml[346,12713+33]..lib/newRuleSyntax.ml[346,12713+35])
                                                      Texp_ident "e1/2046"
                                                ]
                                              expression (lib/newRuleSyntax.ml[346,12713+43]..lib/newRuleSyntax.ml[346,12713+60])
                                                Texp_field
                                                expression (lib/newRuleSyntax.ml[346,12713+43]..lib/newRuleSyntax.ml[346,12713+50])
                                                  Texp_ident "context/2047"
                                                "producers"
                                            ]
                                        "uxs"
                                          expression (lib/newRuleSyntax.ml[347,12775+21]..lib/newRuleSyntax.ml[347,12775+54])
                                            Texp_construct "::"
                                            [
                                              expression (lib/newRuleSyntax.ml[347,12775+21]..lib/newRuleSyntax.ml[347,12775+28])
                                                Texp_apply
                                                expression (lib/newRuleSyntax.ml[347,12775+21]..lib/newRuleSyntax.ml[347,12775+25])
                                                  Texp_ident "user/1936"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/newRuleSyntax.ml[347,12775+26]..lib/newRuleSyntax.ml[347,12775+28])
                                                      Texp_ident "x1/2048"
                                                ]
                                              expression (lib/newRuleSyntax.ml[347,12775+43]..lib/newRuleSyntax.ml[347,12775+54])
                                                Texp_field
                                                expression (lib/newRuleSyntax.ml[347,12775+43]..lib/newRuleSyntax.ml[347,12775+50])
                                                  Texp_ident "context/2047"
                                                "uxs"
                                            ]
                                        "bindings"
                                          expression (lib/newRuleSyntax.ml[348,12831+43]..lib/newRuleSyntax.ml[348,12831+59])
                                            Texp_field
                                            expression (lib/newRuleSyntax.ml[348,12831+43]..lib/newRuleSyntax.ml[348,12831+50])
                                              Texp_ident "context/2047"
                                            "bindings"
                                        "tuple"
                                          expression (lib/newRuleSyntax.ml[349,12892+21]..lib/newRuleSyntax.ml[349,12892+56])
                                            Texp_construct "::"
                                            [
                                              expression (lib/newRuleSyntax.ml[349,12892+21]..lib/newRuleSyntax.ml[349,12892+39])
                                                Texp_apply
                                                expression (lib/newRuleSyntax.ml[349,12892+21]..lib/newRuleSyntax.ml[349,12892+36])
                                                  Texp_ident "Gbnf_parser!.Positions.value"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/newRuleSyntax.ml[349,12892+37]..lib/newRuleSyntax.ml[349,12892+39])
                                                      Texp_ident "x1/2048"
                                                ]
                                              expression (lib/newRuleSyntax.ml[349,12892+43]..lib/newRuleSyntax.ml[349,12892+56])
                                                Texp_field
                                                expression (lib/newRuleSyntax.ml[349,12892+43]..lib/newRuleSyntax.ml[349,12892+50])
                                                  Texp_ident "context/2047"
                                                "tuple"
                                            ]
                                        "tilde_used"
                                          expression (lib/newRuleSyntax.ml[350,12950+21]..lib/newRuleSyntax.ml[350,12950+39])
                                            Texp_field
                                            expression (lib/newRuleSyntax.ml[350,12950+21]..lib/newRuleSyntax.ml[350,12950+28])
                                              Texp_ident "context/2047"
                                            "tilde_used"
                                      ]
                                    representation =
                                      Record_regular
                                    extended_expression =
                                      None
                              <case>
                                pattern (lib/newRuleSyntax.ml[351,12992+4]..lib/newRuleSyntax.ml[351,12992+5])
                                  Tpat_value
                                  pattern (lib/newRuleSyntax.ml[351,12992+4]..lib/newRuleSyntax.ml[351,12992+5])
                                    Tpat_any
                                expression (lib/newRuleSyntax.ml[356,13260+6]..lib/newRuleSyntax.ml[366,13737+20])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/newRuleSyntax.ml[356,13260+10]..lib/newRuleSyntax.ml[356,13260+12])
                                        Tpat_var "x1/2049"
                                      expression (lib/newRuleSyntax.ml[356,13260+15]..lib/newRuleSyntax.ml[356,13260+29])
                                        Texp_apply
                                        expression (lib/newRuleSyntax.ml[356,13260+15]..lib/newRuleSyntax.ml[356,13260+21])
                                          Texp_ident "semvar/1997"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/newRuleSyntax.ml[356,13260+22]..lib/newRuleSyntax.ml[356,13260+29])
                                              Texp_ident "context/2047"
                                        ]
                                  ]
                                  expression (lib/newRuleSyntax.ml[357,13293+6]..lib/newRuleSyntax.ml[366,13737+20])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/newRuleSyntax.ml[357,13293+10]..lib/newRuleSyntax.ml[357,13293+20])
                                          Tpat_var "tilde_used/2050"
                                        expression (lib/newRuleSyntax.ml[357,13293+23]..lib/newRuleSyntax.ml[357,13293+54])
                                          Texp_apply
                                          expression (lib/newRuleSyntax.ml[357,13293+23]..lib/newRuleSyntax.ml[357,13293+33])
                                            Texp_ident "tilde_used/1691"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/newRuleSyntax.ml[357,13293+34]..lib/newRuleSyntax.ml[357,13293+52])
                                                Texp_field
                                                expression (lib/newRuleSyntax.ml[357,13293+34]..lib/newRuleSyntax.ml[357,13293+41])
                                                  Texp_ident "context/2047"
                                                "tilde_used"
                                            <arg>
                                              Nolabel
                                              expression (lib/newRuleSyntax.ml[357,13293+53]..lib/newRuleSyntax.ml[357,13293+54])
                                                Texp_ident "p/2045"
                                          ]
                                    ]
                                    expression (lib/newRuleSyntax.ml[358,13351+6]..lib/newRuleSyntax.ml[366,13737+20])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (lib/newRuleSyntax.ml[358,13351+10]..lib/newRuleSyntax.ml[358,13351+11])
                                            extra
                                              Tpat_extra_constraint
                                              core_type (lib/newRuleSyntax.ml[358,13351+14]..lib/newRuleSyntax.ml[358,13351+24])
                                                Ttyp_constr "Gbnf_parser!.IL.pattern"
                                                []
                                            Tpat_alias "p/2051"
                                            pattern (lib/newRuleSyntax.ml[358,13351+10]..lib/newRuleSyntax.ml[358,13351+11])
                                              Tpat_any
                                          expression (lib/newRuleSyntax.ml[358,13351+27]..lib/newRuleSyntax.ml[358,13351+39])
                                            extra
                                              Texp_constraint
                                              core_type (lib/newRuleSyntax.ml[358,13351+14]..lib/newRuleSyntax.ml[358,13351+24])
                                                Ttyp_constr "Gbnf_parser!.IL.pattern"
                                                []
                                            Texp_apply
                                            expression (lib/newRuleSyntax.ml[358,13351+27]..lib/newRuleSyntax.ml[358,13351+34])
                                              Texp_ident "pattern/1744"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/newRuleSyntax.ml[358,13351+35]..lib/newRuleSyntax.ml[358,13351+37])
                                                  Texp_ident "x1/2049"
                                              <arg>
                                                Nolabel
                                                expression (lib/newRuleSyntax.ml[358,13351+38]..lib/newRuleSyntax.ml[358,13351+39])
                                                  Texp_ident "p/2045"
                                            ]
                                      ]
                                      expression (lib/newRuleSyntax.ml[359,13394+6]..lib/newRuleSyntax.ml[366,13737+20])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/newRuleSyntax.ml[359,13394+10]..lib/newRuleSyntax.ml[359,13394+17])
                                              Tpat_var "binding/2052"
                                            expression (lib/newRuleSyntax.ml[359,13394+20]..lib/newRuleSyntax.ml[359,13394+36])
                                              Texp_apply
                                              expression (lib/newRuleSyntax.ml[359,13394+20]..lib/newRuleSyntax.ml[359,13394+31])
                                                Texp_ident "Gbnf_parser!.Action.bind"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/newRuleSyntax.ml[359,13394+32]..lib/newRuleSyntax.ml[359,13394+33])
                                                    Texp_ident "p/2051"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/newRuleSyntax.ml[359,13394+34]..lib/newRuleSyntax.ml[359,13394+36])
                                                    Texp_ident "x1/2049"
                                              ]
                                        ]
                                        expression (lib/newRuleSyntax.ml[360,13434+6]..lib/newRuleSyntax.ml[366,13737+20])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/newRuleSyntax.ml[360,13434+10]..lib/newRuleSyntax.ml[360,13434+12])
                                                Tpat_var "x1/2099"
                                              expression (lib/newRuleSyntax.ml[360,13434+15]..lib/newRuleSyntax.ml[360,13434+39])
                                                Texp_apply
                                                expression (lib/newRuleSyntax.ml[360,13434+15]..lib/newRuleSyntax.ml[360,13434+36])
                                                  Texp_ident "Gbnf_parser!.Positions.unknown_pos"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/newRuleSyntax.ml[360,13434+37]..lib/newRuleSyntax.ml[360,13434+39])
                                                      Texp_ident "x1/2049"
                                                ]
                                          ]
                                          expression (lib/newRuleSyntax.ml[361,13477+6]..lib/newRuleSyntax.ml[366,13737+20])
                                            Texp_record
                                              fields =
                                                [
                                                  "pos"
                                                    expression (lib/newRuleSyntax.ml[361,13477+39]..lib/newRuleSyntax.ml[361,13477+50])
                                                      Texp_field
                                                      expression (lib/newRuleSyntax.ml[361,13477+39]..lib/newRuleSyntax.ml[361,13477+46])
                                                        Texp_ident "context/2047"
                                                      "pos"
                                                  "producers"
                                                    expression (lib/newRuleSyntax.ml[362,13529+21]..lib/newRuleSyntax.ml[362,13529+56])
                                                      Texp_construct "::"
                                                      [
                                                        expression (lib/newRuleSyntax.ml[362,13529+21]..lib/newRuleSyntax.ml[362,13529+35])
                                                          Texp_apply
                                                          expression (lib/newRuleSyntax.ml[362,13529+21]..lib/newRuleSyntax.ml[362,13529+29])
                                                            Texp_ident "producer/2003"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/newRuleSyntax.ml[362,13529+30]..lib/newRuleSyntax.ml[362,13529+32])
                                                                Texp_ident "x1/2099"
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/newRuleSyntax.ml[362,13529+33]..lib/newRuleSyntax.ml[362,13529+35])
                                                                Texp_ident "e1/2046"
                                                          ]
                                                        expression (lib/newRuleSyntax.ml[362,13529+39]..lib/newRuleSyntax.ml[362,13529+56])
                                                          Texp_field
                                                          expression (lib/newRuleSyntax.ml[362,13529+39]..lib/newRuleSyntax.ml[362,13529+46])
                                                            Texp_ident "context/2047"
                                                          "producers"
                                                      ]
                                                  "uxs"
                                                    expression (lib/newRuleSyntax.ml[363,13587+21]..lib/newRuleSyntax.ml[363,13587+50])
                                                      Texp_construct "::"
                                                      [
                                                        expression (lib/newRuleSyntax.ml[363,13587+21]..lib/newRuleSyntax.ml[363,13587+25])
                                                          Texp_ident "auto/1939"
                                                        expression (lib/newRuleSyntax.ml[363,13587+39]..lib/newRuleSyntax.ml[363,13587+50])
                                                          Texp_field
                                                          expression (lib/newRuleSyntax.ml[363,13587+39]..lib/newRuleSyntax.ml[363,13587+46])
                                                            Texp_ident "context/2047"
                                                          "uxs"
                                                      ]
                                                  "bindings"
                                                    expression (lib/newRuleSyntax.ml[364,13639+21]..lib/newRuleSyntax.ml[364,13639+55])
                                                      Texp_apply
                                                      expression (lib/newRuleSyntax.ml[364,13639+36]..lib/newRuleSyntax.ml[364,13639+38])
                                                        Texp_ident ">>/1169"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/newRuleSyntax.ml[364,13639+21]..lib/newRuleSyntax.ml[364,13639+28])
                                                            Texp_ident "binding/2052"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/newRuleSyntax.ml[364,13639+39]..lib/newRuleSyntax.ml[364,13639+55])
                                                            Texp_field
                                                            expression (lib/newRuleSyntax.ml[364,13639+39]..lib/newRuleSyntax.ml[364,13639+46])
                                                              Texp_ident "context/2047"
                                                            "bindings"
                                                      ]
                                                  "tuple"
                                                    expression (lib/newRuleSyntax.ml[365,13696+21]..lib/newRuleSyntax.ml[365,13696+39])
                                                      Texp_apply
                                                      expression (lib/newRuleSyntax.ml[365,13696+21]..lib/newRuleSyntax.ml[365,13696+23])
                                                        Texp_ident "bv/1824"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/newRuleSyntax.ml[365,13696+24]..lib/newRuleSyntax.ml[365,13696+37])
                                                            Texp_field
                                                            expression (lib/newRuleSyntax.ml[365,13696+24]..lib/newRuleSyntax.ml[365,13696+31])
                                                              Texp_ident "context/2047"
                                                            "tuple"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/newRuleSyntax.ml[365,13696+38]..lib/newRuleSyntax.ml[365,13696+39])
                                                            Texp_ident "p/2051"
                                                      ]
                                                  "tilde_used"
                                                    expression (lib/newRuleSyntax.ml[366,13737+8]..lib/newRuleSyntax.ml[366,13737+18])
                                                      Texp_ident "tilde_used/2050"
                                                ]
                                              representation =
                                                Record_regular
                                              extended_expression =
                                                None
                            ]
                      ]
                ]
          ]
      <def>
        pattern (lib/newRuleSyntax.ml[370,13816+4]..lib/newRuleSyntax.ml[370,13816+18])
          Tpat_var "production_aux/2005"
        expression (lib/newRuleSyntax.ml[371,13835+2]..lib/newRuleSyntax.ml[396,14937+7]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/newRuleSyntax.ml[371,13835+3]..lib/newRuleSyntax.ml[371,13835+10])
                extra
                  Tpat_extra_constraint
                  core_type (lib/newRuleSyntax.ml[371,13835+13]..lib/newRuleSyntax.ml[371,13835+20])
                    Ttyp_constr "context/1833"
                    []
                Tpat_alias "context/2100"
                pattern (lib/newRuleSyntax.ml[371,13835+3]..lib/newRuleSyntax.ml[371,13835+10])
                  Tpat_any
              expression (lib/newRuleSyntax.ml[372,13857+2]..lib/newRuleSyntax.ml[396,14937+7]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/newRuleSyntax.ml[372,13857+3]..lib/newRuleSyntax.ml[372,13857+4])
                      extra
                        Tpat_extra_constraint
                        core_type (lib/newRuleSyntax.ml[372,13857+7]..lib/newRuleSyntax.ml[372,13857+21])
                          Ttyp_constr "Gbnf_parser!.Syntax.seq_expression"
                          []
                      Tpat_alias "e/2101"
                      pattern (lib/newRuleSyntax.ml[372,13857+3]..lib/newRuleSyntax.ml[372,13857+4])
                        Tpat_any
                    expression (lib/newRuleSyntax.ml[373,13880+2]..lib/newRuleSyntax.ml[396,14937+7]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/newRuleSyntax.ml[373,13880+3]..lib/newRuleSyntax.ml[373,13880+8])
                            extra
                              Tpat_extra_constraint
                              core_type (lib/newRuleSyntax.ml[373,13880+11]..lib/newRuleSyntax.ml[373,13880+34])
                                Ttyp_constr "Gbnf_parser!.Syntax.branch_production_level"
                                []
                            Tpat_alias "level/2102"
                            pattern (lib/newRuleSyntax.ml[373,13880+3]..lib/newRuleSyntax.ml[373,13880+8])
                              Tpat_any
                          expression (lib/newRuleSyntax.ml[375,13941+2]..lib/newRuleSyntax.ml[396,14937+7])
                            extra
                              Texp_constraint
                              core_type (lib/newRuleSyntax.ml[374,13916+2]..lib/newRuleSyntax.ml[374,13916+22])
                                Ttyp_constr "Gbnf_parser!.Syntax.parameterized_branch"
                                []
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (lib/newRuleSyntax.ml[375,13941+6]..lib/newRuleSyntax.ml[375,13941+12])
                                  Tpat_tuple
                                  [
                                    pattern (lib/newRuleSyntax.ml[375,13941+6]..lib/newRuleSyntax.ml[375,13941+7])
                                      Tpat_var "e/2103"
                                    pattern (lib/newRuleSyntax.ml[375,13941+9]..lib/newRuleSyntax.ml[375,13941+12])
                                      Tpat_var "pos/2104"
                                  ]
                                expression (lib/newRuleSyntax.ml[375,13941+15]..lib/newRuleSyntax.ml[375,13941+36])
                                  Texp_apply
                                  expression (lib/newRuleSyntax.ml[375,13941+15]..lib/newRuleSyntax.ml[375,13941+34])
                                    Texp_ident "Gbnf_parser!.Positions.decompose"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/newRuleSyntax.ml[375,13941+35]..lib/newRuleSyntax.ml[375,13941+36])
                                        Texp_ident "e/2101"
                                  ]
                            ]
                            expression (lib/newRuleSyntax.ml[376,13981+2]..lib/newRuleSyntax.ml[396,14937+7])
                              Texp_match
                              expression (lib/newRuleSyntax.ml[376,13981+8]..lib/newRuleSyntax.ml[376,13981+9])
                                Texp_ident "e/2103"
                              [
                                <case>
                                  pattern (lib/newRuleSyntax.ml[378,13997+4]..lib/newRuleSyntax.ml[378,13997+21])
                                    Tpat_value
                                    pattern (lib/newRuleSyntax.ml[378,13997+4]..lib/newRuleSyntax.ml[378,13997+21])
                                      Tpat_construct "ECons"
                                      [
                                        pattern (lib/newRuleSyntax.ml[378,13997+11]..lib/newRuleSyntax.ml[378,13997+12])
                                          Tpat_var "p/2105"
                                        pattern (lib/newRuleSyntax.ml[378,13997+14]..lib/newRuleSyntax.ml[378,13997+16])
                                          Tpat_var "e1/2106"
                                        pattern (lib/newRuleSyntax.ml[378,13997+18]..lib/newRuleSyntax.ml[378,13997+20])
                                          Tpat_var "e2/2107"
                                      ]
                                      None
                                  expression (lib/newRuleSyntax.ml[381,14147+6]..lib/newRuleSyntax.ml[381,14147+51])
                                    Texp_apply
                                    expression (lib/newRuleSyntax.ml[381,14147+6]..lib/newRuleSyntax.ml[381,14147+20])
                                      Texp_ident "production_aux/2005"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/newRuleSyntax.ml[381,14147+21]..lib/newRuleSyntax.ml[381,14147+42])
                                          Texp_apply
                                          expression (lib/newRuleSyntax.ml[381,14147+22]..lib/newRuleSyntax.ml[381,14147+28])
                                            Texp_ident "extend/2004"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/newRuleSyntax.ml[381,14147+29]..lib/newRuleSyntax.ml[381,14147+30])
                                                Texp_ident "p/2105"
                                            <arg>
                                              Nolabel
                                              expression (lib/newRuleSyntax.ml[381,14147+31]..lib/newRuleSyntax.ml[381,14147+33])
                                                Texp_ident "e1/2106"
                                            <arg>
                                              Nolabel
                                              expression (lib/newRuleSyntax.ml[381,14147+34]..lib/newRuleSyntax.ml[381,14147+41])
                                                Texp_ident "context/2100"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (lib/newRuleSyntax.ml[381,14147+43]..lib/newRuleSyntax.ml[381,14147+45])
                                          Texp_ident "e2/2107"
                                      <arg>
                                        Nolabel
                                        expression (lib/newRuleSyntax.ml[381,14147+46]..lib/newRuleSyntax.ml[381,14147+51])
                                          Texp_ident "level/2102"
                                    ]
                                <case>
                                  pattern (lib/newRuleSyntax.ml[383,14200+4]..lib/newRuleSyntax.ml[383,14200+44])
                                    Tpat_value
                                    pattern (lib/newRuleSyntax.ml[383,14200+4]..lib/newRuleSyntax.ml[383,14200+44])
                                      Tpat_construct "EAction"
                                      [
                                        pattern (lib/newRuleSyntax.ml[383,14200+13]..lib/newRuleSyntax.ml[383,14200+37])
                                          Tpat_construct "XATraditional"
                                          [
                                            pattern (lib/newRuleSyntax.ml[383,14200+27]..lib/newRuleSyntax.ml[383,14200+37])
                                              Tpat_var "raw_action/2108"
                                          ]
                                          None
                                        pattern (lib/newRuleSyntax.ml[383,14200+39]..lib/newRuleSyntax.ml[383,14200+43])
                                          Tpat_var "prec/2109"
                                      ]
                                      None
                                  expression (lib/newRuleSyntax.ml[385,14315+6]..lib/newRuleSyntax.ml[396,14937+7])
                                    Texp_sequence
                                    expression (lib/newRuleSyntax.ml[385,14315+6]..lib/newRuleSyntax.ml[385,14315+43])
                                      Texp_apply
                                      expression (lib/newRuleSyntax.ml[385,14315+6]..lib/newRuleSyntax.ml[385,14315+24])
                                        Texp_ident "tilde_used_warning/1696"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/newRuleSyntax.ml[385,14315+25]..lib/newRuleSyntax.ml[385,14315+43])
                                            Texp_field
                                            expression (lib/newRuleSyntax.ml[385,14315+25]..lib/newRuleSyntax.ml[385,14315+32])
                                              Texp_ident "context/2100"
                                            "tilde_used"
                                      ]
                                    expression (lib/newRuleSyntax.ml[389,14570+6]..lib/newRuleSyntax.ml[396,14937+7])
                                      Texp_record
                                        fields =
                                          [
                                            "pr_branch_position"
                                              expression (lib/newRuleSyntax.ml[390,14578+37]..lib/newRuleSyntax.ml[390,14578+48])
                                                Texp_field
                                                expression (lib/newRuleSyntax.ml[390,14578+37]..lib/newRuleSyntax.ml[390,14578+44])
                                                  Texp_ident "context/2100"
                                                "pos"
                                            "pr_producers"
                                              expression (lib/newRuleSyntax.ml[391,14628+37]..lib/newRuleSyntax.ml[391,14628+54])
                                                Texp_apply
                                                expression (lib/newRuleSyntax.ml[391,14628+37]..lib/newRuleSyntax.ml[391,14628+46])
                                                  Texp_ident "producers/1940"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/newRuleSyntax.ml[391,14628+47]..lib/newRuleSyntax.ml[391,14628+54])
                                                      Texp_ident "context/2100"
                                                ]
                                          ]
                                        representation =
                                          Record_regular
                                        extended_expression =
                                          None
                              ]
                      ]
                ]
          ]
      <def>
        pattern (lib/newRuleSyntax.ml[452,18079+4]..lib/newRuleSyntax.ml[452,18079+14])
          Tpat_var "production/2006"
        expression (lib/newRuleSyntax.ml[452,18079+15]..lib/newRuleSyntax.ml[456,18210+36]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/newRuleSyntax.ml[452,18079+16]..lib/newRuleSyntax.ml[452,18079+33])
                extra
                  Tpat_extra_constraint
                  core_type (lib/newRuleSyntax.ml[452,18079+36]..lib/newRuleSyntax.ml[452,18079+42])
                    Ttyp_constr "Gbnf_parser!.Syntax.branch"
                    []
                Tpat_construct "Branch"
                [
                  pattern (lib/newRuleSyntax.ml[452,18079+24]..lib/newRuleSyntax.ml[452,18079+25])
                    Tpat_var "e/2110"
                  pattern (lib/newRuleSyntax.ml[452,18079+27]..lib/newRuleSyntax.ml[452,18079+32])
                    Tpat_var "level/2111"
                ]
                None
              expression (lib/newRuleSyntax.ml[453,18125+2]..lib/newRuleSyntax.ml[456,18210+36])
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/newRuleSyntax.ml[453,18125+6]..lib/newRuleSyntax.ml[453,18125+7])
                      Tpat_var "e/2112"
                    expression (lib/newRuleSyntax.ml[453,18125+10]..lib/newRuleSyntax.ml[453,18125+24])
                      Texp_apply
                      expression (lib/newRuleSyntax.ml[453,18125+10]..lib/newRuleSyntax.ml[453,18125+22])
                        Texp_ident "resolve_puns/1174"
                      [
                        <arg>
                          Nolabel
                          expression (lib/newRuleSyntax.ml[453,18125+23]..lib/newRuleSyntax.ml[453,18125+24])
                            Texp_ident "e/2110"
                      ]
                ]
                expression (lib/newRuleSyntax.ml[454,18153+2]..lib/newRuleSyntax.ml[456,18210+36])
                  Texp_sequence
                  expression (lib/newRuleSyntax.ml[454,18153+2]..lib/newRuleSyntax.ml[454,18153+19])
                    Texp_apply
                    expression (lib/newRuleSyntax.ml[454,18153+2]..lib/newRuleSyntax.ml[454,18153+17])
                      Texp_ident "check_linearity/1690"
                    [
                      <arg>
                        Nolabel
                        expression (lib/newRuleSyntax.ml[454,18153+18]..lib/newRuleSyntax.ml[454,18153+19])
                          Texp_ident "e/2112"
                    ]
                  expression (lib/newRuleSyntax.ml[455,18174+2]..lib/newRuleSyntax.ml[456,18210+36])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (lib/newRuleSyntax.ml[455,18174+6]..lib/newRuleSyntax.ml[455,18174+9])
                          Tpat_var "pos/2113"
                        expression (lib/newRuleSyntax.ml[455,18174+12]..lib/newRuleSyntax.ml[455,18174+32])
                          Texp_apply
                          expression (lib/newRuleSyntax.ml[455,18174+12]..lib/newRuleSyntax.ml[455,18174+30])
                            Texp_ident "Gbnf_parser!.Positions.position"
                          [
                            <arg>
                              Nolabel
                              expression (lib/newRuleSyntax.ml[455,18174+31]..lib/newRuleSyntax.ml[455,18174+32])
                                Texp_ident "e/2112"
                          ]
                    ]
                    expression (lib/newRuleSyntax.ml[456,18210+2]..lib/newRuleSyntax.ml[456,18210+36])
                      Texp_apply
                      expression (lib/newRuleSyntax.ml[456,18210+2]..lib/newRuleSyntax.ml[456,18210+16])
                        Texp_ident "production_aux/2005"
                      [
                        <arg>
                          Nolabel
                          expression (lib/newRuleSyntax.ml[456,18210+17]..lib/newRuleSyntax.ml[456,18210+28])
                            Texp_apply
                            expression (lib/newRuleSyntax.ml[456,18210+18]..lib/newRuleSyntax.ml[456,18210+23])
                              Texp_ident "empty/1932"
                            [
                              <arg>
                                Nolabel
                                expression (lib/newRuleSyntax.ml[456,18210+24]..lib/newRuleSyntax.ml[456,18210+27])
                                  Texp_ident "pos/2113"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/newRuleSyntax.ml[456,18210+29]..lib/newRuleSyntax.ml[456,18210+30])
                            Texp_ident "e/2112"
                        <arg>
                          Nolabel
                          expression (lib/newRuleSyntax.ml[456,18210+31]..lib/newRuleSyntax.ml[456,18210+36])
                            Texp_ident "level/2111"
                      ]
          ]
      <def>
        pattern (lib/newRuleSyntax.ml[458,18248+4]..lib/newRuleSyntax.ml[458,18248+15])
          Tpat_var "productions/2007"
        expression (lib/newRuleSyntax.ml[458,18248+16]..lib/newRuleSyntax.ml[461,18366+34]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/newRuleSyntax.ml[458,18248+17]..lib/newRuleSyntax.ml[458,18248+18])
                extra
                  Tpat_extra_constraint
                  core_type (lib/newRuleSyntax.ml[458,18248+21]..lib/newRuleSyntax.ml[458,18248+31])
                    Ttyp_constr "Gbnf_parser!.Syntax.expression"
                    []
                Tpat_alias "e/2115"
                pattern (lib/newRuleSyntax.ml[458,18248+17]..lib/newRuleSyntax.ml[458,18248+18])
                  Tpat_any
              expression (lib/newRuleSyntax.ml[459,18311+2]..lib/newRuleSyntax.ml[461,18366+34])
                extra
                  Texp_constraint
                  core_type (lib/newRuleSyntax.ml[458,18248+35]..lib/newRuleSyntax.ml[458,18248+60])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/newRuleSyntax.ml[458,18248+35]..lib/newRuleSyntax.ml[458,18248+55])
                        Ttyp_constr "Gbnf_parser!.Syntax.parameterized_branch"
                        []
                    ]
                Texp_match
                expression (lib/newRuleSyntax.ml[459,18311+8]..lib/newRuleSyntax.ml[459,18311+25])
                  Texp_apply
                  expression (lib/newRuleSyntax.ml[459,18311+8]..lib/newRuleSyntax.ml[459,18311+23])
                    Texp_ident "Gbnf_parser!.Positions.value"
                  [
                    <arg>
                      Nolabel
                      expression (lib/newRuleSyntax.ml[459,18311+24]..lib/newRuleSyntax.ml[459,18311+25])
                        Texp_ident "e/2115"
                  ]
                [
                  <case>
                    pattern (lib/newRuleSyntax.ml[460,18342+4]..lib/newRuleSyntax.ml[460,18342+20])
                      Tpat_value
                      pattern (lib/newRuleSyntax.ml[460,18342+4]..lib/newRuleSyntax.ml[460,18342+20])
                        Tpat_construct "EChoice"
                        [
                          pattern (lib/newRuleSyntax.ml[460,18342+12]..lib/newRuleSyntax.ml[460,18342+20])
                            Tpat_var "branches/2116"
                        ]
                        None
                    expression (lib/newRuleSyntax.ml[461,18366+6]..lib/newRuleSyntax.ml[461,18366+34])
                      Texp_apply
                      expression (lib/newRuleSyntax.ml[461,18366+6]..lib/newRuleSyntax.ml[461,18366+14])
                        Texp_ident "Stdlib!.List.map"
                      [
                        <arg>
                          Nolabel
                          expression (lib/newRuleSyntax.ml[461,18366+15]..lib/newRuleSyntax.ml[461,18366+25])
                            Texp_ident "production/2006"
                        <arg>
                          Nolabel
                          expression (lib/newRuleSyntax.ml[461,18366+26]..lib/newRuleSyntax.ml[461,18366+34])
                            Texp_ident "branches/2116"
                      ]
                ]
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[467,18529+0]..lib/newRuleSyntax.ml[476,18947+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[467,18529+4]..lib/newRuleSyntax.ml[467,18529+8])
          Tpat_var "rule/2117"
        expression (lib/newRuleSyntax.ml[467,18529+9]..lib/newRuleSyntax.ml[476,18947+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/newRuleSyntax.ml[467,18529+10]..lib/newRuleSyntax.ml[467,18529+14])
                extra
                  Tpat_extra_constraint
                  core_type (lib/newRuleSyntax.ml[467,18529+17]..lib/newRuleSyntax.ml[467,18529+21])
                    Ttyp_constr "Gbnf_parser!.Syntax.rule"
                    []
                Tpat_alias "rule/2119"
                pattern (lib/newRuleSyntax.ml[467,18529+10]..lib/newRuleSyntax.ml[467,18529+14])
                  Tpat_any
              expression (lib/newRuleSyntax.ml[468,18575+2]..lib/newRuleSyntax.ml[476,18947+3])
                extra
                  Texp_constraint
                  core_type (lib/newRuleSyntax.ml[467,18529+25]..lib/newRuleSyntax.ml[467,18529+43])
                    Ttyp_constr "Gbnf_parser!.Syntax.parameterized_rule"
                    []
                Texp_record
                  fields =
                    [
                      "pr_nt"
                        expression (lib/newRuleSyntax.ml[471,18669+21]..lib/newRuleSyntax.ml[471,18669+50])
                          Texp_apply
                          expression (lib/newRuleSyntax.ml[471,18669+21]..lib/newRuleSyntax.ml[471,18669+36])
                            Texp_ident "Gbnf_parser!.Positions.value"
                          [
                            <arg>
                              Nolabel
                              expression (lib/newRuleSyntax.ml[471,18669+37]..lib/newRuleSyntax.ml[471,18669+50])
                                Texp_field
                                expression (lib/newRuleSyntax.ml[471,18669+37]..lib/newRuleSyntax.ml[471,18669+41])
                                  Texp_ident "rule/2119"
                                "rule_lhs"
                          ]
                      "pr_positions"
                        expression (lib/newRuleSyntax.ml[472,18721+21]..lib/newRuleSyntax.ml[472,18721+57])
                          Texp_construct "::"
                          [
                            expression (lib/newRuleSyntax.ml[472,18721+23]..lib/newRuleSyntax.ml[472,18721+55])
                              Texp_apply
                              expression (lib/newRuleSyntax.ml[472,18721+23]..lib/newRuleSyntax.ml[472,18721+41])
                                Texp_ident "Gbnf_parser!.Positions.position"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/newRuleSyntax.ml[472,18721+42]..lib/newRuleSyntax.ml[472,18721+55])
                                    Texp_field
                                    expression (lib/newRuleSyntax.ml[472,18721+42]..lib/newRuleSyntax.ml[472,18721+46])
                                      Texp_ident "rule/2119"
                                    "rule_lhs"
                              ]
                            expression (lib/newRuleSyntax.ml[472,18721+56]..lib/newRuleSyntax.ml[472,18721+57]) ghost
                              Texp_construct "[]"
                              []
                          ]
                      "pr_branches"
                        expression (lib/newRuleSyntax.ml[475,18900+21]..lib/newRuleSyntax.ml[475,18900+46])
                          Texp_apply
                          expression (lib/newRuleSyntax.ml[475,18900+21]..lib/newRuleSyntax.ml[475,18900+32])
                            Texp_ident "productions/2007"
                          [
                            <arg>
                              Nolabel
                              expression (lib/newRuleSyntax.ml[475,18900+33]..lib/newRuleSyntax.ml[475,18900+46])
                                Texp_field
                                expression (lib/newRuleSyntax.ml[475,18900+33]..lib/newRuleSyntax.ml[475,18900+37])
                                  Texp_ident "rule/2119"
                                "rule_rhs"
                          ]
                    ]
                  representation =
                    Record_regular
                  extended_expression =
                    None
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[476,18947+3]..lib/newRuleSyntax.ml[476,18947+3]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[476,18947+3]..lib/newRuleSyntax.ml[476,18947+3]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/newRuleSyntax.ml[476,18947+3]..lib/newRuleSyntax.ml[476,18947+3]) ghost
          Texp_apply
          expression (lib/newRuleSyntax.ml[476,18947+3]..lib/newRuleSyntax.ml[476,18947+3]) ghost
            Texp_ident "Ppx_inline_test_lib!.unset_lib"
          [
            <arg>
              Nolabel
              expression (lib/newRuleSyntax.ml[476,18947+3]..lib/newRuleSyntax.ml[476,18947+3]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/newRuleSyntax.ml[476,18947+3]..lib/newRuleSyntax.ml[476,18947+3]) ghost,None)
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[476,18947+3]..lib/newRuleSyntax.ml[476,18947+3]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[476,18947+3]..lib/newRuleSyntax.ml[476,18947+3]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/newRuleSyntax.ml[476,18947+3]..lib/newRuleSyntax.ml[476,18947+3]) ghost
          Texp_apply
          expression (lib/newRuleSyntax.ml[476,18947+3]..lib/newRuleSyntax.ml[476,18947+3]) ghost
            Texp_ident "Expect_test_collector!.Current_file.unset"
          [
            <arg>
              Nolabel
              expression (lib/newRuleSyntax.ml[476,18947+3]..lib/newRuleSyntax.ml[476,18947+3]) ghost
                Texp_construct "()"
                []
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[476,18947+3]..lib/newRuleSyntax.ml[476,18947+3]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[476,18947+3]..lib/newRuleSyntax.ml[476,18947+3]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/newRuleSyntax.ml[476,18947+3]..lib/newRuleSyntax.ml[476,18947+3]) ghost
          Texp_apply
          expression (lib/newRuleSyntax.ml[476,18947+3]..lib/newRuleSyntax.ml[476,18947+3]) ghost
            Texp_ident "Ppx_bench_lib!.Benchmark_accumulator.Current_libname.unset"
          [
            <arg>
              Nolabel
              expression (lib/newRuleSyntax.ml[476,18947+3]..lib/newRuleSyntax.ml[476,18947+3]) ghost
                Texp_construct "()"
                []
          ]
    ]
  structure_item (lib/newRuleSyntax.ml[476,18947+3]..lib/newRuleSyntax.ml[476,18947+3]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/newRuleSyntax.ml[476,18947+3]..lib/newRuleSyntax.ml[476,18947+3]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/newRuleSyntax.ml[476,18947+3]..lib/newRuleSyntax.ml[476,18947+3]) ghost
          Texp_apply
          expression (lib/newRuleSyntax.ml[476,18947+3]..lib/newRuleSyntax.ml[476,18947+3]) ghost
            Texp_ident "Ppx_module_timer_runtime!.record_until"
          [
            <arg>
              Nolabel
              expression (lib/newRuleSyntax.ml[476,18947+3]..lib/newRuleSyntax.ml[476,18947+3]) ghost
                Texp_ident "Ppx_module_timer_runtime!.__MODULE__"
          ]
    ]
]

{<Gbnf_parser__NewRuleSyntax>
 ">>"[value] -> <Gbnf_parser__NewRuleSyntax.0>;
 "attributes"[value] -> <Gbnf_parser__NewRuleSyntax.54>;
 "auto"[value] -> <Gbnf_parser__NewRuleSyntax.69>;
 "bv"[value] -> <Gbnf_parser__NewRuleSyntax.49>;
 "check_linearity"[value] -> <Gbnf_parser__NewRuleSyntax.27>;
 "context"[type] -> <Gbnf_parser__NewRuleSyntax.57>;
 "empty"[value] -> <Gbnf_parser__NewRuleSyntax.64>;
 "extend"[value] -> <Gbnf_parser__NewRuleSyntax.82>;
 "nested_parameter"[value] -> <Gbnf_parser__NewRuleSyntax.80>;
 "parameter"[value] -> <Gbnf_parser__NewRuleSyntax.79>;
 "pattern"[value] -> <Gbnf_parser__NewRuleSyntax.39>;
 "patterns"[value] -> <Gbnf_parser__NewRuleSyntax.22>;
 "producer"[value] -> <Gbnf_parser__NewRuleSyntax.81>;
 "producers"[value] -> <Gbnf_parser__NewRuleSyntax.70>;
 "production"[value] -> <Gbnf_parser__NewRuleSyntax.84>;
 "production_aux"[value] -> <Gbnf_parser__NewRuleSyntax.83>;
 "productions"[value] -> <Gbnf_parser__NewRuleSyntax.85>;
 "resolve_puns"[value] -> <Gbnf_parser__NewRuleSyntax.4>;
 "rule"[value] -> <Gbnf_parser__NewRuleSyntax.119>;
 "semvar"[value] -> <Gbnf_parser__NewRuleSyntax.76>;
 "tilde_used"[value] -> <Gbnf_parser__NewRuleSyntax.28>;
 "tilde_used_warning"[value] -> <Gbnf_parser__NewRuleSyntax.33>;
 "tuple"[value] -> <Gbnf_parser__NewRuleSyntax.74>;
 "user"[value] -> <Gbnf_parser__NewRuleSyntax.67>;
 "uxs"[value] -> <Gbnf_parser__NewRuleSyntax.72>;
 }

(setglobal Gbnf_parser__NewRuleSyntax!
  (let
    (*match*/2826 =
       (after Gbnf_parser__NewRuleSyntax lib/newRuleSyntax.ml(14)<ghost>:976-976
         (apply (field_imm 3 (global Ppx_module_timer_runtime!))
           #"Gbnf_parser__NewRuleSyntax"))
     *match*/2824 =
       (after Gbnf_parser__NewRuleSyntax lib/newRuleSyntax.ml(14)<ghost>:976-976
         (apply
           (field_imm 0
             (field_imm 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
           "gbnf_parser"))
     *match*/2822 =
       (after Gbnf_parser__NewRuleSyntax lib/newRuleSyntax.ml(14)<ghost>:976-976
         (apply (field_imm 0 (field_imm 5 (global Expect_test_collector!)))
           "lib/newRuleSyntax.ml"))
     *match*/2820 =
       (after Gbnf_parser__NewRuleSyntax lib/newRuleSyntax.ml(14)<ghost>:976-976
         (apply (field_imm 4 (global Ppx_inline_test_lib!)) "gbnf_parser"
           "newRuleSyntax.ml"))
     >>/1169 =
       (function f/1171 g/1172 x/1173
         (funct-body Gbnf_parser__NewRuleSyntax.(>>) lib/newRuleSyntax.ml(25)<ghost>:1422-1439
           (before Gbnf_parser__NewRuleSyntax.(>>) lib/newRuleSyntax.ml(26):1432-1439
             (after Gbnf_parser__NewRuleSyntax.(>>) lib/newRuleSyntax.ml(26):1432-1439
               (apply g/1172
                 (after Gbnf_parser__NewRuleSyntax.(>>) lib/newRuleSyntax.ml(26):1434-1439
                   (apply f/1171 x/1173))))))))
    (letrec
      (resolve_puns/1174
         (function e/1175
           (funct-body Gbnf_parser__NewRuleSyntax.resolve_puns lib/newRuleSyntax.ml(63)<ghost>:3035-3556
             (before Gbnf_parser__NewRuleSyntax.resolve_puns lib/newRuleSyntax.ml(64):3077-3556
               (after Gbnf_parser__NewRuleSyntax.resolve_puns lib/newRuleSyntax.ml(64):3077-3556
                 (apply (field_imm 5 (global Gbnf_parser__Positions!))
                   (function e/1246
                     (funct-body Gbnf_parser__NewRuleSyntax.resolve_puns.(fun) lib/newRuleSyntax.ml(64):3091-3554
                       (before Gbnf_parser__NewRuleSyntax.resolve_puns.(fun) lib/newRuleSyntax.ml(65):3105-3550
                         (catch
                           (switch* e/1246
                            case tag 0:
                             (let
                               (e2/1249 =a (field_imm 2 e/1246)
                                e1/1248 =a (field_imm 1 e/1246)
                                p1/1247 =a (field_imm 0 e/1246))
                               (before Gbnf_parser__NewRuleSyntax.resolve_puns.(fun) lib/newRuleSyntax.ml(72):3471-3502
                                 (makeblock 0 p1/1247 e1/1248
                                   (after Gbnf_parser__NewRuleSyntax.resolve_puns.(fun) lib/newRuleSyntax.ml(72):3486-3501
                                     (apply resolve_puns/1174 e2/1249)))))
                            case tag 1: (exit 1)
                            case tag 2: (exit 1))
                          with (1)
                           (before Gbnf_parser__NewRuleSyntax.resolve_puns.(fun) lib/newRuleSyntax.ml(75):3549-3550
                             e/1246)))))
                   e/1175))))))
      (let
        (check_linearity/1311 =
           (function ps/1313 : int
             (funct-body Gbnf_parser__NewRuleSyntax.check_linearity lib/newRuleSyntax.ml(87)<ghost>:3919-4458
               (before Gbnf_parser__NewRuleSyntax.check_linearity lib/newRuleSyntax.ml(89):3944-4458
                 (letrec
                   (build/1314
                      (function m/1363 p/1364
                        (funct-body Gbnf_parser__NewRuleSyntax.check_linearity.build lib/newRuleSyntax.ml(89)<ghost>:3958-4246
                          (before Gbnf_parser__NewRuleSyntax.check_linearity.build lib/newRuleSyntax.ml(90):4016-4246
                            (catch
                              (switch* p/1364
                               case int 0: (exit 5)
                               case tag 0:
                                (let (x/1365 =a (field_imm 0 p/1364))
                                  (before Gbnf_parser__NewRuleSyntax.check_linearity.build lib/newRuleSyntax.ml(92):4058-4134
                                    (let
                                      (*match*/2772 =
                                         (after Gbnf_parser__NewRuleSyntax.check_linearity.build lib/newRuleSyntax.ml(92):4071-4092
                                           (apply
                                             (field_imm 2
                                               (global Gbnf_parser__Positions!))
                                             x/1365))
                                       pos/1368 =a (field_imm 1 *match*/2772)
                                       x/1367 =a (field_imm 0 *match*/2772))
                                      (before Gbnf_parser__NewRuleSyntax.check_linearity.build lib/newRuleSyntax.ml(93):4104-4134
                                        (after Gbnf_parser__NewRuleSyntax.check_linearity.build lib/newRuleSyntax.ml(93):4104-4134
                                          (apply
                                            (field_imm 44
                                              (global Gbnf_parser__StringMap!))
                                            x/1367 pos/1368 m/1363))))))
                               case tag 1: (exit 5)
                               case tag 2:
                                (let (ps/1366 =a (field_imm 0 p/1364))
                                  (before Gbnf_parser__NewRuleSyntax.check_linearity.build lib/newRuleSyntax.ml(98):4221-4246
                                    (after Gbnf_parser__NewRuleSyntax.check_linearity.build lib/newRuleSyntax.ml(98):4221-4246
                                      (apply
                                        (field_imm 25 (global Stdlib__List!))
                                        build/1314 m/1363 ps/1366)))))
                             with (5)
                              (before Gbnf_parser__NewRuleSyntax.check_linearity.build lib/newRuleSyntax.ml(96):4187-4188
                                m/1363))))))
                   (before Gbnf_parser__NewRuleSyntax.check_linearity lib/newRuleSyntax.ml(101):4255-4458
                     (let
                       (m/1644 =
                          (after Gbnf_parser__NewRuleSyntax.check_linearity lib/newRuleSyntax.ml(101):4263-4302
                            (apply (field_imm 25 (global Stdlib__List!))
                              build/1314
                              (field_imm 0 (global Gbnf_parser__StringMap!))
                              ps/1313)))
                       (before Gbnf_parser__NewRuleSyntax.check_linearity lib/newRuleSyntax.ml(102):4308-4458
                         (after Gbnf_parser__NewRuleSyntax.check_linearity lib/newRuleSyntax.ml(102):4308-4458
                           (apply
                             (field_imm 21 (global Gbnf_parser__StringMap!))
                             (function x/1645 positions/1646 : int
                               (funct-body Gbnf_parser__NewRuleSyntax.check_linearity.(fun) lib/newRuleSyntax.ml(102):4323-4456
                                 (before Gbnf_parser__NewRuleSyntax.check_linearity.(fun) lib/newRuleSyntax.ml(103):4347-4452
                                   (if
                                     (>
                                       (after Gbnf_parser__NewRuleSyntax.check_linearity.(fun) lib/newRuleSyntax.ml(103):4350-4371
                                         (apply
                                           (field_imm 0
                                             (global Stdlib__List!))
                                           positions/1646))
                                       1)
                                     (before Gbnf_parser__NewRuleSyntax.check_linearity.(fun) lib/newRuleSyntax.ml(104):4387-4452
                                       (after Gbnf_parser__NewRuleSyntax.check_linearity.(fun) lib/newRuleSyntax.ml(104):4387-4452
                                         (apply
                                           (field_imm 6
                                             (global Gbnf_parser__Error!))
                                           positions/1646
                                           [0:
                                            [11:
                                             "The variable "
                                             [2:
                                              0
                                              [11:
                                               " is bound several times." 0]]]
                                            "The variable %s is bound several times."]
                                           x/1645)))
                                     0))))
                             m/1644))))))))))
        (letrec
          (patterns/1685
             (function e/1686
               (funct-body Gbnf_parser__NewRuleSyntax.patterns lib/newRuleSyntax.ml(107)<ghost>:4477-4648
                 (before Gbnf_parser__NewRuleSyntax.patterns lib/newRuleSyntax.ml(108):4517-4648
                   (let
                     (e/1687 =
                        (after Gbnf_parser__NewRuleSyntax.patterns lib/newRuleSyntax.ml(108):4525-4542
                          (apply
                            (field_imm 0 (global Gbnf_parser__Positions!))
                            e/1686)))
                     (before Gbnf_parser__NewRuleSyntax.patterns lib/newRuleSyntax.ml(109):4548-4648
                       (catch
                         (switch* e/1687
                          case tag 0:
                           (let
                             (e/1689 =a (field_imm 2 e/1687)
                              *match*/2774 =a (field_imm 1 e/1687)
                              p/1688 =a (field_imm 0 e/1687))
                             (before Gbnf_parser__NewRuleSyntax.patterns lib/newRuleSyntax.ml(111):4590-4605
                               (makeblock 0 p/1688
                                 (after Gbnf_parser__NewRuleSyntax.patterns lib/newRuleSyntax.ml(111):4595-4605
                                   (apply patterns/1685 e/1689)))))
                          case tag 1: (exit 6)
                          case tag 2: (exit 6))
                        with (6)
                         (before Gbnf_parser__NewRuleSyntax.patterns lib/newRuleSyntax.ml(114):4646-4648
                           0))))))))
          (let
            (check_linearity/1690 =
               (after Gbnf_parser__NewRuleSyntax.check_linearity lib/newRuleSyntax.ml(117):4699-4726
                 (apply >>/1169 patterns/1685 check_linearity/1311)))
            (letrec
              (tilde_used/1691
                 (function positions/1692 p/1693
                   (funct-body Gbnf_parser__NewRuleSyntax.tilde_used lib/newRuleSyntax.ml(123)<ghost>:4893-5100
                     (before Gbnf_parser__NewRuleSyntax.tilde_used lib/newRuleSyntax.ml(124):4921-5100
                       (catch
                         (switch* p/1693
                          case int 0: (exit 7)
                          case tag 0: (exit 7)
                          case tag 1:
                           (let (pos/1694 =a (field_imm 0 p/1693))
                             (before Gbnf_parser__NewRuleSyntax.tilde_used lib/newRuleSyntax.ml(129):5017-5033
                               (makeblock 0 pos/1694 positions/1692)))
                          case tag 2:
                           (let (ps/1695 =a (field_imm 0 p/1693))
                             (before Gbnf_parser__NewRuleSyntax.tilde_used lib/newRuleSyntax.ml(131):5062-5100
                               (after Gbnf_parser__NewRuleSyntax.tilde_used lib/newRuleSyntax.ml(131):5062-5100
                                 (apply (field_imm 25 (global Stdlib__List!))
                                   tilde_used/1691 positions/1692 ps/1695)))))
                        with (7)
                         (before Gbnf_parser__NewRuleSyntax.tilde_used lib/newRuleSyntax.ml(127):4978-4987
                           positions/1692))))))
              (let
                (tilde_used_warning/1696 =
                   (function positions/1698 : int
                     (funct-body Gbnf_parser__NewRuleSyntax.tilde_used_warning lib/newRuleSyntax.ml(136)<ghost>:5277-5787
                       (before Gbnf_parser__NewRuleSyntax.tilde_used_warning lib/newRuleSyntax.ml(137):5291-5787
                         (let
                           (n/1699 =[int]
                              (after Gbnf_parser__NewRuleSyntax.tilde_used_warning lib/newRuleSyntax.ml(137):5299-5320
                                (apply (field_imm 0 (global Stdlib__List!))
                                  positions/1698)))
                           (before Gbnf_parser__NewRuleSyntax.tilde_used_warning lib/newRuleSyntax.ml(138):5326-5787
                             (if (> n/1699 0)
                               (before Gbnf_parser__NewRuleSyntax.tilde_used_warning lib/newRuleSyntax.ml(139):5344-5787
                                 (catch
                                   (if (== n/1699 1)
                                     (before Gbnf_parser__NewRuleSyntax.tilde_used_warning lib/newRuleSyntax.ml(140):5407-5460
                                       (let
                                         (wpatterns/2784 =
                                            "a wildcard pattern _"
                                          tpatterns/2783 = "a ~ pattern"
                                          variables_have/2782 =
                                            "variable has")
                                         (exit 8 variables_have/2782
                                           tpatterns/2783 wpatterns/2784)))
                                     (before Gbnf_parser__NewRuleSyntax.tilde_used_warning lib/newRuleSyntax.ml(141):5472-5525
                                       (let
                                         (wpatterns/2781 =
                                            "wildcard patterns _"
                                          tpatterns/2780 = "~ patterns"
                                          variables_have/2779 =
                                            "variables have")
                                         (exit 8 variables_have/2779
                                           tpatterns/2780 wpatterns/2781))))
                                  with (8 variables_have/1700 tpatterns/1701 wpatterns/1702)
                                   (before Gbnf_parser__NewRuleSyntax.tilde_used_warning lib/newRuleSyntax.ml(143):5537-5787
                                     (after Gbnf_parser__NewRuleSyntax.tilde_used_warning lib/newRuleSyntax.ml(143):5537-5787
                                       (apply
                                         (field_imm 7
                                           (global Gbnf_parser__Error!))
                                         positions/1698
                                         [0:
                                          [2:
                                           0
                                           [11:
                                            " nameless "
                                            [2:
                                             0
                                             [11:
                                              " been introduced by "
                                              [2:
                                               0
                                               [11:
                                                ",\nyet this sequence does not end in a point-free semantic action <...>.\nPerhaps "
                                                [2:
                                                 0
                                                 [11:
                                                  " should be used instead."
                                                  0]]]]]]]]
                                          "%s nameless %s been introduced by %s,\nyet this sequence does not end in a point-free semantic action <...>.\nPerhaps %s should be used instead."]
                                         (after Gbnf_parser__NewRuleSyntax.tilde_used_warning lib/newRuleSyntax.ml(147):5738-5752
                                           (apply
                                             (field_imm 35
                                               (global Gbnf_parser__Misc!))
                                             n/1699))
                                         variables_have/1700 tpatterns/1701
                                         wpatterns/1702)))))
                               0))))))
                 pattern/1744 =
                   (function x1/1746 p/1747
                     (funct-body Gbnf_parser__NewRuleSyntax.pattern lib/newRuleSyntax.ml(157)<ghost>:6174-6666
                       (before Gbnf_parser__NewRuleSyntax.pattern lib/newRuleSyntax.ml(159):6224-6666
                         (let (c/1775 = (makemutable 0 (int) 1))
                           (before Gbnf_parser__NewRuleSyntax.pattern lib/newRuleSyntax.ml(160):6243-6666
                             (let
                               (fresh/1776 =
                                  (function param/1791[int]
                                    (funct-body Gbnf_parser__NewRuleSyntax.pattern.fresh lib/newRuleSyntax.ml(160)<ghost>:6253-6306
                                      (before Gbnf_parser__NewRuleSyntax.pattern.fresh lib/newRuleSyntax.ml(160):6258-6306
                                        (after Gbnf_parser__NewRuleSyntax.pattern.fresh lib/newRuleSyntax.ml(160):6258-6306
                                          (apply
                                            (field_imm 3
                                              (global Stdlib__Printf!))
                                            [0:
                                             [2: 0 [12: '_' [4: 0 0 0 0]]]
                                             "%s_%d"]
                                            x1/1746
                                            (after Gbnf_parser__NewRuleSyntax.pattern.fresh lib/newRuleSyntax.ml(160):6284-6306
                                              (apply
                                                (field_imm 22
                                                  (global Gbnf_parser__Misc!))
                                                c/1775))))))))
                               (before Gbnf_parser__NewRuleSyntax.pattern lib/newRuleSyntax.ml(162):6313-6666
                                 (letrec
                                   (pattern/1792
                                      (function p/1793
                                        (funct-body Gbnf_parser__NewRuleSyntax.pattern.pattern lib/newRuleSyntax.ml(162)<ghost>:6329-6648
                                          (before Gbnf_parser__NewRuleSyntax.pattern.pattern lib/newRuleSyntax.ml(163):6337-6648
                                            (switch* p/1793
                                             case int 0:
                                              (before Gbnf_parser__NewRuleSyntax.pattern.pattern lib/newRuleSyntax.ml(167):6439-6451
                                                0)
                                             case tag 0:
                                              (let
                                                (x/1794 =a
                                                   (field_imm 0 p/1793))
                                                (before Gbnf_parser__NewRuleSyntax.pattern.pattern lib/newRuleSyntax.ml(165):6379-6406
                                                  (makeblock 0
                                                    (after Gbnf_parser__NewRuleSyntax.pattern.pattern lib/newRuleSyntax.ml(165):6387-6406
                                                      (apply
                                                        (field_imm 0
                                                          (global Gbnf_parser__Positions!))
                                                        x/1794)))))
                                             case tag 1:
                                              (let
                                                (*match*/2785 =a
                                                   (field_imm 0 p/1793))
                                                (before Gbnf_parser__NewRuleSyntax.pattern.pattern lib/newRuleSyntax.ml(169):6483-6500
                                                  (makeblock 0
                                                    (after Gbnf_parser__NewRuleSyntax.pattern.pattern lib/newRuleSyntax.ml(169):6491-6500
                                                      (apply fresh/1776 0)))))
                                             case tag 2:
                                              (let
                                                (ps/1796 =a
                                                   (field_imm 0 p/1793))
                                                (catch
                                                  (if ps/1796
                                                    (let
                                                      (*match*/2786 =a
                                                         (field_imm 1
                                                           ps/1796))
                                                      (if *match*/2786
                                                        (exit 15)
                                                        (let
                                                          (p/1795 =a
                                                             (field_imm 0
                                                               ps/1796))
                                                          (before Gbnf_parser__NewRuleSyntax.pattern.pattern lib/newRuleSyntax.ml(173):6575-6584
                                                            (after Gbnf_parser__NewRuleSyntax.pattern.pattern lib/newRuleSyntax.ml(173):6575-6584
                                                              (apply
                                                                pattern/1792
                                                                p/1795))))))
                                                    (before Gbnf_parser__NewRuleSyntax.pattern.pattern lib/newRuleSyntax.ml(171):6533-6541
                                                      1))
                                                 with (15)
                                                  (before Gbnf_parser__NewRuleSyntax.pattern.pattern lib/newRuleSyntax.ml(175):6617-6648
                                                    (makeblock 3
                                                      (after Gbnf_parser__NewRuleSyntax.pattern.pattern lib/newRuleSyntax.ml(175):6627-6648
                                                        (apply
                                                          (field_imm 19
                                                            (global Stdlib__List!))
                                                          pattern/1792
                                                          ps/1796)))))))))))
                                   (before Gbnf_parser__NewRuleSyntax.pattern lib/newRuleSyntax.ml(178):6657-6666
                                     (after Gbnf_parser__NewRuleSyntax.pattern lib/newRuleSyntax.ml(178):6657-6666
                                       (apply pattern/1792 p/1747))))))))))))
                (letrec
                  (bv/1824
                     (function accu/1825 p/1826
                       (funct-body Gbnf_parser__NewRuleSyntax.bv lib/newRuleSyntax.ml(184)<ghost>:6887-7125
                         (before Gbnf_parser__NewRuleSyntax.bv lib/newRuleSyntax.ml(185):6898-7125
                           (catch
                             (switch p/1826
                              case int 0:
                               (before Gbnf_parser__NewRuleSyntax.bv lib/newRuleSyntax.ml(189):6970-6974
                                 accu/1825)
                              case int 1:
                               (before Gbnf_parser__NewRuleSyntax.bv lib/newRuleSyntax.ml(191):6997-7001
                                 accu/1825)
                              case tag 0:
                               (let (x/1827 =a (field_imm 0 p/1826))
                                 (before Gbnf_parser__NewRuleSyntax.bv lib/newRuleSyntax.ml(187):6934-6943
                                   (makeblock 0 x/1827 accu/1825)))
                              case tag 3:
                               (let (ps/1828 =a (field_imm 0 p/1826))
                                 (before Gbnf_parser__NewRuleSyntax.bv lib/newRuleSyntax.ml(193):7028-7053
                                   (after Gbnf_parser__NewRuleSyntax.bv lib/newRuleSyntax.ml(193):7028-7053
                                     (apply
                                       (field_imm 25 (global Stdlib__List!))
                                       bv/1824 accu/1825 ps/1828))))
                              default: (exit 16))
                            with (16)
                             (before Gbnf_parser__NewRuleSyntax.bv lib/newRuleSyntax.ml(196):7113-7125
                               (raise
                                 (after Gbnf_parser__NewRuleSyntax.bv lib/newRuleSyntax.ml(196):7113-7125
                                   (makeblock 0 (global Assert_failure/28!)
                                     [0: "lib/newRuleSyntax.ml" 196 6])))))))))
                  (let
                    (attributes/1829 =
                       (function e/1831
                         (funct-body Gbnf_parser__NewRuleSyntax.attributes lib/newRuleSyntax.ml(202)<ghost>:7281-7375
                           (before Gbnf_parser__NewRuleSyntax.attributes lib/newRuleSyntax.ml(203):7322-7375
                             (let
                               (attrs/1832 =a (field_imm 2 e/1831)
                                *match*/2788 =a (field_imm 1 e/1831)
                                *match*/2787 =a (field_imm 0 e/1831))
                               (before Gbnf_parser__NewRuleSyntax.attributes lib/newRuleSyntax.ml(205):7370-7375
                                 attrs/1832)))))
                     empty/1932 =
                       (function pos/1934
                         (funct-body Gbnf_parser__NewRuleSyntax.empty lib/newRuleSyntax.ml(253)<ghost>:9486-9633
                           (before Gbnf_parser__NewRuleSyntax.empty lib/newRuleSyntax.ml(254):9504-9633
                             (makeblock 0 pos/1934 0 0
                               (function a/1935
                                 (funct-body Gbnf_parser__NewRuleSyntax.empty.(fun) lib/newRuleSyntax.ml(258):9574-9586
                                   (before Gbnf_parser__NewRuleSyntax.empty.(fun) lib/newRuleSyntax.ml(258):9584-9585
                                     a/1935)))
                               0 0))))
                     user/1936 =
                       (function x/1938
                         (funct-body Gbnf_parser__NewRuleSyntax.user lib/newRuleSyntax.ml(265)<ghost>:9689-9762
                           (before Gbnf_parser__NewRuleSyntax.user lib/newRuleSyntax.ml(266):9738-9762
                             (makeblock 0
                               (after Gbnf_parser__NewRuleSyntax.user lib/newRuleSyntax.ml(266):9743-9762
                                 (apply
                                   (field_imm 0
                                     (global Gbnf_parser__Positions!))
                                   x/1938))))))
                     auto/1939 = 0
                     producers/1940 =
                       (function context/1942
                         (funct-body Gbnf_parser__NewRuleSyntax.producers lib/newRuleSyntax.ml(273)<ghost>:9849-9903
                           (before Gbnf_parser__NewRuleSyntax.producers lib/newRuleSyntax.ml(274):9877-9903
                             (after Gbnf_parser__NewRuleSyntax.producers lib/newRuleSyntax.ml(274):9877-9903
                               (apply (field_imm 9 (global Stdlib__List!))
                                 (field_imm 1 context/1942))))))
                     uxs/1943 =
                       (function context/1945
                         (funct-body Gbnf_parser__NewRuleSyntax.uxs lib/newRuleSyntax.ml(278)<ghost>:9961-10035
                           (before Gbnf_parser__NewRuleSyntax.uxs lib/newRuleSyntax.ml(279):9999-10035
                             (after Gbnf_parser__NewRuleSyntax.uxs lib/newRuleSyntax.ml(279):9999-10035
                               (apply (field_imm 9 (global Stdlib__Array!))
                                 (after Gbnf_parser__NewRuleSyntax.uxs lib/newRuleSyntax.ml(279):10013-10035
                                   (apply
                                     (field_imm 9 (global Stdlib__List!))
                                     (field_imm 2 context/1945))))))))
                     tuple/1994 =
                       (function context/1996
                         (funct-body Gbnf_parser__NewRuleSyntax.tuple lib/newRuleSyntax.ml(283)<ghost>:10075-10127
                           (before Gbnf_parser__NewRuleSyntax.tuple lib/newRuleSyntax.ml(284):10105-10127
                             (after Gbnf_parser__NewRuleSyntax.tuple lib/newRuleSyntax.ml(284):10105-10127
                               (apply (field_imm 9 (global Stdlib__List!))
                                 (field_imm 4 context/1996))))))
                     semvar/1997 =
                       (function context/1999
                         (funct-body Gbnf_parser__NewRuleSyntax.semvar lib/newRuleSyntax.ml(294)<ghost>:10470-10564
                           (before Gbnf_parser__NewRuleSyntax.semvar lib/newRuleSyntax.ml(295):10495-10564
                             (let
                               (i/2000 =[int]
                                  (+
                                    (after Gbnf_parser__NewRuleSyntax.semvar lib/newRuleSyntax.ml(295):10503-10532
                                      (apply
                                        (field_imm 0 (global Stdlib__List!))
                                        (field_imm 1 context/1999)))
                                    1))
                               (before Gbnf_parser__NewRuleSyntax.semvar lib/newRuleSyntax.ml(296):10542-10564
                                 (after Gbnf_parser__NewRuleSyntax.semvar lib/newRuleSyntax.ml(296):10542-10564
                                   (apply
                                     (field_imm 3 (global Stdlib__Printf!))
                                     [0: [12: '_' [4: 0 0 0 0]] "_%d"]
                                     i/2000))))))))
                    (letrec
                      (parameter/2001
                         (function e/2008
                           (funct-body Gbnf_parser__NewRuleSyntax.parameter lib/newRuleSyntax.ml(302)<ghost>:10720-10994
                             (before Gbnf_parser__NewRuleSyntax.parameter lib/newRuleSyntax.ml(303):10760-10994
                               (let
                                 (_attrs/2011 =a (field_imm 2 e/2008)
                                  args/2010 =a (field_imm 1 e/2008)
                                  sym/2009 =a (field_imm 0 e/2008))
                                 (before Gbnf_parser__NewRuleSyntax.parameter lib/newRuleSyntax.ml(307):10943-10994
                                   (after Gbnf_parser__NewRuleSyntax.parameter lib/newRuleSyntax.ml(307):10943-10994
                                     (apply
                                       (field_imm 0
                                         (global Gbnf_parser__Parameters!))
                                       sym/2009
                                       (after Gbnf_parser__NewRuleSyntax.parameter lib/newRuleSyntax.ml(307):10962-10994
                                         (apply
                                           (field_imm 19
                                             (global Stdlib__List!))
                                           nested_parameter/2002 args/2010)))))))))
                        nested_parameter/2002
                          (function e/2027
                            (funct-body Gbnf_parser__NewRuleSyntax.nested_parameter lib/newRuleSyntax.ml(311)<ghost>:11075-11777
                              (before Gbnf_parser__NewRuleSyntax.nested_parameter lib/newRuleSyntax.ml(313):11109-11777
                                (catch
                                  (let
                                    (*match*/2790 =
                                       (after Gbnf_parser__NewRuleSyntax.nested_parameter lib/newRuleSyntax.ml(313):11115-11132
                                         (apply
                                           (field_imm 0
                                             (global Gbnf_parser__Positions!))
                                           e/2027))
                                     *match*/2791 =a
                                       (field_imm 0 *match*/2790))
                                    (if *match*/2791
                                      (let
                                        (*match*/2792 =a
                                           (field_imm 0 *match*/2791)
                                         *match*/2793 =a
                                           (field_imm 0 *match*/2792)
                                         *match*/2794 =a
                                           (field_imm 0 *match*/2793))
                                        (switch* *match*/2794
                                         case tag 0: (exit 17)
                                         case tag 1:
                                          (let
                                            (*match*/2797 =a
                                               (field_imm 1 *match*/2791))
                                            (if *match*/2797 (exit 17)
                                              (let
                                                (*match*/2796 =a
                                                   (field_imm 1 *match*/2792)
                                                 *match*/2795 =a
                                                   (field_imm 1 *match*/2793)
                                                 e/2028 =a
                                                   (field_imm 0 *match*/2794))
                                                (before Gbnf_parser__NewRuleSyntax.nested_parameter lib/newRuleSyntax.ml(323):11766-11777
                                                  (after Gbnf_parser__NewRuleSyntax.nested_parameter lib/newRuleSyntax.ml(323):11766-11777
                                                    (apply parameter/2001
                                                      e/2028))))))
                                         case tag 2: (exit 17)))
                                      (exit 17)))
                                 with (17)
                                  (raise
                                    (makeblock 0 (global Match_failure/18!)
                                      [0: "lib/newRuleSyntax.ml" 313 2]))))))
                        producer/2003
                          (function x/2043 e1/2044
                            (funct-body Gbnf_parser__NewRuleSyntax.producer lib/newRuleSyntax.ml(334)<ghost>:12185-12257
                              (before Gbnf_parser__NewRuleSyntax.producer lib/newRuleSyntax.ml(335):12227-12257
                                (makeblock 0 x/2043
                                  (after Gbnf_parser__NewRuleSyntax.producer lib/newRuleSyntax.ml(335):12230-12242
                                    (apply parameter/2001 e1/2044))
                                  (after Gbnf_parser__NewRuleSyntax.producer lib/newRuleSyntax.ml(335):12244-12257
                                    (apply attributes/1829 e1/2044))))))
                        extend/2004
                          (function p/2045 e1/2046 context/2047
                            (funct-body Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(340)<ghost>:12402-13757
                              (before Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(341):12475-13757
                                (catch
                                  (switch p/2045
                                   case tag 0:
                                    (let (x1/2048 =a (field_imm 0 p/2045))
                                      (before Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(345):12663-12991
                                        (makeblock 0
                                          (field_imm 0 context/2047)
                                          (makeblock 0
                                            (after Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(346):12734-12748
                                              (apply producer/2003 x1/2048
                                                e1/2046))
                                            (field_imm 1 context/2047))
                                          (makeblock 0
                                            (after Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(347):12796-12803
                                              (apply user/1936 x1/2048))
                                            (field_imm 2 context/2047))
                                          (field_imm 3 context/2047)
                                          (makeblock 0
                                            (after Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(349):12913-12931
                                              (apply
                                                (field_imm 0
                                                  (global Gbnf_parser__Positions!))
                                                x1/2048))
                                            (field_imm 4 context/2047))
                                          (field_imm 5 context/2047))))
                                   default: (exit 21))
                                 with (21)
                                  (before Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(356):13266-13757
                                    (let
                                      (x1/2049 =
                                         (after Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(356):13275-13289
                                           (apply semvar/1997 context/2047)))
                                      (before Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(357):13299-13757
                                        (let
                                          (tilde_used/2050 =
                                             (after Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(357):13316-13347
                                               (apply tilde_used/1691
                                                 (field_imm 5 context/2047)
                                                 p/2045)))
                                          (before Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(358):13357-13757
                                            (let
                                              (p/2051 =
                                                 (after Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(358):13378-13390
                                                   (apply pattern/1744
                                                     x1/2049 p/2045)))
                                              (before Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(359):13400-13757
                                                (let
                                                  (binding/2052 =
                                                     (after Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(359):13414-13430
                                                       (apply
                                                         (field_imm 5
                                                           (global Gbnf_parser__Action!))
                                                         p/2051 x1/2049)))
                                                  (before Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(360):13440-13757
                                                    (let
                                                      (x1/2099 =
                                                         (after Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(360):13449-13473
                                                           (apply
                                                             (field_imm 10
                                                               (global Gbnf_parser__Positions!))
                                                             x1/2049)))
                                                      (before Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(361):13483-13757
                                                        (makeblock 0
                                                          (field_imm 0
                                                            context/2047)
                                                          (makeblock 0
                                                            (after Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(362):13550-13564
                                                              (apply
                                                                producer/2003
                                                                x1/2099
                                                                e1/2046))
                                                            (field_imm 1
                                                              context/2047))
                                                          (makeblock 0
                                                            auto/1939
                                                            (field_imm 2
                                                              context/2047))
                                                          (after Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(364):13660-13694
                                                            (apply >>/1169
                                                              binding/2052
                                                              (field_imm 3
                                                                context/2047)))
                                                          (after Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(365):13717-13735
                                                            (apply bv/1824
                                                              (field_imm 4
                                                                context/2047)
                                                              p/2051))
                                                          tilde_used/2050))))))))))))))))
                        production_aux/2005
                          (function context/2100 e/2101 level/2102
                            (funct-body Gbnf_parser__NewRuleSyntax.production_aux lib/newRuleSyntax.ml(371)<ghost>:13837-14944
                              (before Gbnf_parser__NewRuleSyntax.production_aux lib/newRuleSyntax.ml(375):13943-14944
                                (let
                                  (*match*/2806 =
                                     (after Gbnf_parser__NewRuleSyntax.production_aux lib/newRuleSyntax.ml(375):13956-13977
                                       (apply
                                         (field_imm 2
                                           (global Gbnf_parser__Positions!))
                                         e/2101))
                                   pos/2104 =a (field_imm 1 *match*/2806)
                                   e/2103 =a (field_imm 0 *match*/2806))
                                  (before Gbnf_parser__NewRuleSyntax.production_aux lib/newRuleSyntax.ml(376):13983-14944
                                    (catch
                                      (switch* e/2103
                                       case tag 0:
                                        (let
                                          (e2/2107 =a (field_imm 2 e/2103)
                                           e1/2106 =a (field_imm 1 e/2103)
                                           p/2105 =a (field_imm 0 e/2103))
                                          (before Gbnf_parser__NewRuleSyntax.production_aux lib/newRuleSyntax.ml(381):14153-14198
                                            (after Gbnf_parser__NewRuleSyntax.production_aux lib/newRuleSyntax.ml(381):14153-14198
                                              (apply production_aux/2005
                                                (after Gbnf_parser__NewRuleSyntax.production_aux lib/newRuleSyntax.ml(381):14168-14189
                                                  (apply extend/2004 p/2105
                                                    e1/2106 context/2100))
                                                e2/2107 level/2102))))
                                       case tag 1: (exit 22)
                                       case tag 2:
                                        (let
                                          (*match*/2802 =a
                                             (field_imm 0 e/2103))
                                          (switch* *match*/2802
                                           case tag 0:
                                            (let
                                              (prec/2109 =a
                                                 (field_imm 1 e/2103)
                                               raw_action/2108 =a
                                                 (field_imm 0 *match*/2802))
                                              (before Gbnf_parser__NewRuleSyntax.production_aux lib/newRuleSyntax.ml(385):14321-14944
                                                (seq
                                                  (after Gbnf_parser__NewRuleSyntax.production_aux lib/newRuleSyntax.ml(385):14321-14358
                                                    (apply
                                                      tilde_used_warning/1696
                                                      (field_imm 5
                                                        context/2100)))
                                                  (before Gbnf_parser__NewRuleSyntax.production_aux lib/newRuleSyntax.ml(389):14576-14944
                                                    (makeblock 0
                                                      (field_imm 0
                                                        context/2100)
                                                      (after Gbnf_parser__NewRuleSyntax.production_aux lib/newRuleSyntax.ml(391):14665-14682
                                                        (apply producers/1940
                                                          context/2100)))))))
                                           case tag 1: (exit 22))))
                                     with (22)
                                      (raise
                                        (makeblock 0
                                          (global Match_failure/18!)
                                          [0: "lib/newRuleSyntax.ml" 376 2]))))))))
                        production/2006
                          (function param/2114
                            (funct-body Gbnf_parser__NewRuleSyntax.production lib/newRuleSyntax.ml(452)<ghost>:18094-18246
                              (let
                                (level/2111 =a (field_imm 1 param/2114)
                                 e/2110 =a (field_imm 0 param/2114))
                                (before Gbnf_parser__NewRuleSyntax.production lib/newRuleSyntax.ml(453):18127-18246
                                  (let
                                    (e/2112 =
                                       (after Gbnf_parser__NewRuleSyntax.production lib/newRuleSyntax.ml(453):18135-18149
                                         (apply resolve_puns/1174 e/2110)))
                                    (before Gbnf_parser__NewRuleSyntax.production lib/newRuleSyntax.ml(454):18155-18246
                                      (seq
                                        (after Gbnf_parser__NewRuleSyntax.production lib/newRuleSyntax.ml(454):18155-18172
                                          (apply check_linearity/1690 e/2112))
                                        (before Gbnf_parser__NewRuleSyntax.production lib/newRuleSyntax.ml(455):18176-18246
                                          (let
                                            (pos/2113 =
                                               (after Gbnf_parser__NewRuleSyntax.production lib/newRuleSyntax.ml(455):18186-18206
                                                 (apply
                                                   (field_imm 1
                                                     (global Gbnf_parser__Positions!))
                                                   e/2112)))
                                            (before Gbnf_parser__NewRuleSyntax.production lib/newRuleSyntax.ml(456):18212-18246
                                              (after Gbnf_parser__NewRuleSyntax.production lib/newRuleSyntax.ml(456):18212-18246
                                                (apply production_aux/2005
                                                  (after Gbnf_parser__NewRuleSyntax.production lib/newRuleSyntax.ml(456):18227-18238
                                                    (apply empty/1932
                                                      pos/2113))
                                                  e/2112 level/2111))))))))))))
                        productions/2007
                          (function e/2115
                            (funct-body Gbnf_parser__NewRuleSyntax.productions lib/newRuleSyntax.ml(458)<ghost>:18264-18400
                              (before Gbnf_parser__NewRuleSyntax.productions lib/newRuleSyntax.ml(459):18313-18400
                                (let
                                  (*match*/2807 =
                                     (after Gbnf_parser__NewRuleSyntax.productions lib/newRuleSyntax.ml(459):18319-18336
                                       (apply
                                         (field_imm 0
                                           (global Gbnf_parser__Positions!))
                                         e/2115))
                                   branches/2116 =a
                                     (field_imm 0 *match*/2807))
                                  (before Gbnf_parser__NewRuleSyntax.productions lib/newRuleSyntax.ml(461):18372-18400
                                    (after Gbnf_parser__NewRuleSyntax.productions lib/newRuleSyntax.ml(461):18372-18400
                                      (apply
                                        (field_imm 19 (global Stdlib__List!))
                                        production/2006 branches/2116))))))))
                      (let
                        (rule/2117 =
                           (function rule/2119
                             (funct-body Gbnf_parser__NewRuleSyntax.rule lib/newRuleSyntax.ml(467)<ghost>:18538-18950
                               (before Gbnf_parser__NewRuleSyntax.rule lib/newRuleSyntax.ml(468):18577-18950
                                 (makeblock 0
                                   (after Gbnf_parser__NewRuleSyntax.rule lib/newRuleSyntax.ml(471):18690-18719
                                     (apply
                                       (field_imm 0
                                         (global Gbnf_parser__Positions!))
                                       (field_imm 2 rule/2119)))
                                   (makeblock 0
                                     (after Gbnf_parser__NewRuleSyntax.rule lib/newRuleSyntax.ml(472):18744-18776
                                       (apply
                                         (field_imm 1
                                           (global Gbnf_parser__Positions!))
                                         (field_imm 2 rule/2119)))
                                     0)
                                   (after Gbnf_parser__NewRuleSyntax.rule lib/newRuleSyntax.ml(475):18921-18946
                                     (apply productions/2007
                                       (field_imm 4 rule/2119)))))))
                         *match*/2816 =
                           (after Gbnf_parser__NewRuleSyntax lib/newRuleSyntax.ml(476)<ghost>:18950-18950
                             (apply
                               (field_imm 5 (global Ppx_inline_test_lib!))
                               "gbnf_parser"))
                         *match*/2814 =
                           (after Gbnf_parser__NewRuleSyntax lib/newRuleSyntax.ml(476)<ghost>:18950-18950
                             (apply
                               (field_imm 1
                                 (field_imm 5
                                   (global Expect_test_collector!)))
                               0))
                         *match*/2812 =
                           (after Gbnf_parser__NewRuleSyntax lib/newRuleSyntax.ml(476)<ghost>:18950-18950
                             (apply
                               (field_imm 1
                                 (field_imm 0
                                   (global Ppx_bench_lib__Benchmark_accumulator!)))
                               0))
                         *match*/2810 =
                           (after Gbnf_parser__NewRuleSyntax lib/newRuleSyntax.ml(476)<ghost>:18950-18950
                             (apply
                               (field_imm 4
                                 (global Ppx_module_timer_runtime!))
                               #"Gbnf_parser__NewRuleSyntax")))
                        (pseudo <unknown location>
                          (makeblock 0 >>/1169 resolve_puns/1174
                            patterns/1685 check_linearity/1690
                            tilde_used/1691 tilde_used_warning/1696
                            pattern/1744 bv/1824 attributes/1829 empty/1932
                            user/1936 auto/1939 producers/1940 uxs/1943
                            tuple/1994 semvar/1997 parameter/2001
                            nested_parameter/2002 producer/2003 extend/2004
                            production_aux/2005 production/2006
                            productions/2007 rule/2117))))))))))))))
(setglobal Gbnf_parser__NewRuleSyntax!
  (let
    (*match*/2826 =
       (after Gbnf_parser__NewRuleSyntax lib/newRuleSyntax.ml(14)<ghost>:976-976
         (apply (field_imm 3 (global Ppx_module_timer_runtime!))
           #"Gbnf_parser__NewRuleSyntax"))
     *match*/2824 =
       (after Gbnf_parser__NewRuleSyntax lib/newRuleSyntax.ml(14)<ghost>:976-976
         (apply
           (field_imm 0
             (field_imm 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
           "gbnf_parser"))
     *match*/2822 =
       (after Gbnf_parser__NewRuleSyntax lib/newRuleSyntax.ml(14)<ghost>:976-976
         (apply (field_imm 0 (field_imm 5 (global Expect_test_collector!)))
           "lib/newRuleSyntax.ml"))
     *match*/2820 =
       (after Gbnf_parser__NewRuleSyntax lib/newRuleSyntax.ml(14)<ghost>:976-976
         (apply (field_imm 4 (global Ppx_inline_test_lib!)) "gbnf_parser"
           "newRuleSyntax.ml"))
     >>/1169 =
       (function f/1171 g/1172 x/1173
         (funct-body Gbnf_parser__NewRuleSyntax.(>>) lib/newRuleSyntax.ml(25)<ghost>:1422-1439
           (before Gbnf_parser__NewRuleSyntax.(>>) lib/newRuleSyntax.ml(26):1432-1439
             (after Gbnf_parser__NewRuleSyntax.(>>) lib/newRuleSyntax.ml(26):1432-1439
               (apply g/1172
                 (after Gbnf_parser__NewRuleSyntax.(>>) lib/newRuleSyntax.ml(26):1434-1439
                   (apply f/1171 x/1173))))))))
    (letrec
      (resolve_puns/1174
         (function e/1175
           (funct-body Gbnf_parser__NewRuleSyntax.resolve_puns lib/newRuleSyntax.ml(63)<ghost>:3035-3556
             (before Gbnf_parser__NewRuleSyntax.resolve_puns lib/newRuleSyntax.ml(64):3077-3556
               (after Gbnf_parser__NewRuleSyntax.resolve_puns lib/newRuleSyntax.ml(64):3077-3556
                 (apply (field_imm 5 (global Gbnf_parser__Positions!))
                   (function e/1246
                     (funct-body Gbnf_parser__NewRuleSyntax.resolve_puns.(fun) lib/newRuleSyntax.ml(64):3091-3554
                       (before Gbnf_parser__NewRuleSyntax.resolve_puns.(fun) lib/newRuleSyntax.ml(65):3105-3550
                         (catch
                           (switch* e/1246
                            case tag 0:
                             (let
                               (e2/1249 =a (field_imm 2 e/1246)
                                e1/1248 =a (field_imm 1 e/1246)
                                p1/1247 =a (field_imm 0 e/1246))
                               (before Gbnf_parser__NewRuleSyntax.resolve_puns.(fun) lib/newRuleSyntax.ml(72):3471-3502
                                 (makeblock 0 p1/1247 e1/1248
                                   (after Gbnf_parser__NewRuleSyntax.resolve_puns.(fun) lib/newRuleSyntax.ml(72):3486-3501
                                     (apply resolve_puns/1174 e2/1249)))))
                            case tag 1: (exit 1)
                            case tag 2: (exit 1))
                          with (1)
                           (before Gbnf_parser__NewRuleSyntax.resolve_puns.(fun) lib/newRuleSyntax.ml(75):3549-3550
                             e/1246)))))
                   e/1175))))))
      (let
        (check_linearity/1311 =
           (function ps/1313 : int
             (funct-body Gbnf_parser__NewRuleSyntax.check_linearity lib/newRuleSyntax.ml(87)<ghost>:3919-4458
               (before Gbnf_parser__NewRuleSyntax.check_linearity lib/newRuleSyntax.ml(89):3944-4458
                 (letrec
                   (build/1314
                      (function m/1363 p/1364
                        (funct-body Gbnf_parser__NewRuleSyntax.check_linearity.build lib/newRuleSyntax.ml(89)<ghost>:3958-4246
                          (before Gbnf_parser__NewRuleSyntax.check_linearity.build lib/newRuleSyntax.ml(90):4016-4246
                            (catch
                              (switch* p/1364
                               case int 0: (exit 5)
                               case tag 0:
                                (let (x/1365 =a (field_imm 0 p/1364))
                                  (before Gbnf_parser__NewRuleSyntax.check_linearity.build lib/newRuleSyntax.ml(92):4058-4134
                                    (let
                                      (*match*/2772 =
                                         (after Gbnf_parser__NewRuleSyntax.check_linearity.build lib/newRuleSyntax.ml(92):4071-4092
                                           (apply
                                             (field_imm 2
                                               (global Gbnf_parser__Positions!))
                                             x/1365))
                                       pos/1368 =a (field_imm 1 *match*/2772)
                                       x/1367 =a (field_imm 0 *match*/2772))
                                      (before Gbnf_parser__NewRuleSyntax.check_linearity.build lib/newRuleSyntax.ml(93):4104-4134
                                        (after Gbnf_parser__NewRuleSyntax.check_linearity.build lib/newRuleSyntax.ml(93):4104-4134
                                          (apply
                                            (field_imm 44
                                              (global Gbnf_parser__StringMap!))
                                            x/1367 pos/1368 m/1363))))))
                               case tag 1: (exit 5)
                               case tag 2:
                                (let (ps/1366 =a (field_imm 0 p/1364))
                                  (before Gbnf_parser__NewRuleSyntax.check_linearity.build lib/newRuleSyntax.ml(98):4221-4246
                                    (after Gbnf_parser__NewRuleSyntax.check_linearity.build lib/newRuleSyntax.ml(98):4221-4246
                                      (apply
                                        (field_imm 25 (global Stdlib__List!))
                                        build/1314 m/1363 ps/1366)))))
                             with (5)
                              (before Gbnf_parser__NewRuleSyntax.check_linearity.build lib/newRuleSyntax.ml(96):4187-4188
                                m/1363))))))
                   (before Gbnf_parser__NewRuleSyntax.check_linearity lib/newRuleSyntax.ml(101):4255-4458
                     (let
                       (m/1644 =
                          (after Gbnf_parser__NewRuleSyntax.check_linearity lib/newRuleSyntax.ml(101):4263-4302
                            (apply (field_imm 25 (global Stdlib__List!))
                              build/1314
                              (field_imm 0 (global Gbnf_parser__StringMap!))
                              ps/1313)))
                       (before Gbnf_parser__NewRuleSyntax.check_linearity lib/newRuleSyntax.ml(102):4308-4458
                         (after Gbnf_parser__NewRuleSyntax.check_linearity lib/newRuleSyntax.ml(102):4308-4458
                           (apply
                             (field_imm 21 (global Gbnf_parser__StringMap!))
                             (function x/1645 positions/1646 : int
                               (funct-body Gbnf_parser__NewRuleSyntax.check_linearity.(fun) lib/newRuleSyntax.ml(102):4323-4456
                                 (before Gbnf_parser__NewRuleSyntax.check_linearity.(fun) lib/newRuleSyntax.ml(103):4347-4452
                                   (if
                                     (>
                                       (after Gbnf_parser__NewRuleSyntax.check_linearity.(fun) lib/newRuleSyntax.ml(103):4350-4371
                                         (apply
                                           (field_imm 0
                                             (global Stdlib__List!))
                                           positions/1646))
                                       1)
                                     (before Gbnf_parser__NewRuleSyntax.check_linearity.(fun) lib/newRuleSyntax.ml(104):4387-4452
                                       (after Gbnf_parser__NewRuleSyntax.check_linearity.(fun) lib/newRuleSyntax.ml(104):4387-4452
                                         (apply
                                           (field_imm 6
                                             (global Gbnf_parser__Error!))
                                           positions/1646
                                           [0:
                                            [11:
                                             "The variable "
                                             [2:
                                              0
                                              [11:
                                               " is bound several times." 0]]]
                                            "The variable %s is bound several times."]
                                           x/1645)))
                                     0))))
                             m/1644))))))))))
        (letrec
          (patterns/1685
             (function e/1686
               (funct-body Gbnf_parser__NewRuleSyntax.patterns lib/newRuleSyntax.ml(107)<ghost>:4477-4648
                 (before Gbnf_parser__NewRuleSyntax.patterns lib/newRuleSyntax.ml(108):4517-4648
                   (let
                     (e/1687 =
                        (after Gbnf_parser__NewRuleSyntax.patterns lib/newRuleSyntax.ml(108):4525-4542
                          (apply
                            (field_imm 0 (global Gbnf_parser__Positions!))
                            e/1686)))
                     (before Gbnf_parser__NewRuleSyntax.patterns lib/newRuleSyntax.ml(109):4548-4648
                       (catch
                         (switch* e/1687
                          case tag 0:
                           (let
                             (e/1689 =a (field_imm 2 e/1687)
                              p/1688 =a (field_imm 0 e/1687))
                             (before Gbnf_parser__NewRuleSyntax.patterns lib/newRuleSyntax.ml(111):4590-4605
                               (makeblock 0 p/1688
                                 (after Gbnf_parser__NewRuleSyntax.patterns lib/newRuleSyntax.ml(111):4595-4605
                                   (apply patterns/1685 e/1689)))))
                          case tag 1: (exit 6)
                          case tag 2: (exit 6))
                        with (6)
                         (before Gbnf_parser__NewRuleSyntax.patterns lib/newRuleSyntax.ml(114):4646-4648
                           0))))))))
          (let
            (check_linearity/1690 =
               (after Gbnf_parser__NewRuleSyntax.check_linearity lib/newRuleSyntax.ml(117):4699-4726
                 (apply >>/1169 patterns/1685 check_linearity/1311)))
            (letrec
              (tilde_used/1691
                 (function positions/1692 p/1693
                   (funct-body Gbnf_parser__NewRuleSyntax.tilde_used lib/newRuleSyntax.ml(123)<ghost>:4893-5100
                     (before Gbnf_parser__NewRuleSyntax.tilde_used lib/newRuleSyntax.ml(124):4921-5100
                       (catch
                         (switch* p/1693
                          case int 0: (exit 7)
                          case tag 0: (exit 7)
                          case tag 1:
                           (let (pos/1694 =a (field_imm 0 p/1693))
                             (before Gbnf_parser__NewRuleSyntax.tilde_used lib/newRuleSyntax.ml(129):5017-5033
                               (makeblock 0 pos/1694 positions/1692)))
                          case tag 2:
                           (let (ps/1695 =a (field_imm 0 p/1693))
                             (before Gbnf_parser__NewRuleSyntax.tilde_used lib/newRuleSyntax.ml(131):5062-5100
                               (after Gbnf_parser__NewRuleSyntax.tilde_used lib/newRuleSyntax.ml(131):5062-5100
                                 (apply (field_imm 25 (global Stdlib__List!))
                                   tilde_used/1691 positions/1692 ps/1695)))))
                        with (7)
                         (before Gbnf_parser__NewRuleSyntax.tilde_used lib/newRuleSyntax.ml(127):4978-4987
                           positions/1692))))))
              (let
                (tilde_used_warning/1696 =
                   (function positions/1698 : int
                     (funct-body Gbnf_parser__NewRuleSyntax.tilde_used_warning lib/newRuleSyntax.ml(136)<ghost>:5277-5787
                       (before Gbnf_parser__NewRuleSyntax.tilde_used_warning lib/newRuleSyntax.ml(137):5291-5787
                         (let
                           (n/1699 =[int]
                              (after Gbnf_parser__NewRuleSyntax.tilde_used_warning lib/newRuleSyntax.ml(137):5299-5320
                                (apply (field_imm 0 (global Stdlib__List!))
                                  positions/1698)))
                           (before Gbnf_parser__NewRuleSyntax.tilde_used_warning lib/newRuleSyntax.ml(138):5326-5787
                             (if (> n/1699 0)
                               (before Gbnf_parser__NewRuleSyntax.tilde_used_warning lib/newRuleSyntax.ml(139):5344-5787
                                 (catch
                                   (if (== n/1699 1)
                                     (before Gbnf_parser__NewRuleSyntax.tilde_used_warning lib/newRuleSyntax.ml(140):5407-5460
                                       (let
                                         (wpatterns/2784 =
                                            "a wildcard pattern _"
                                          tpatterns/2783 = "a ~ pattern"
                                          variables_have/2782 =
                                            "variable has")
                                         (exit 8 variables_have/2782
                                           tpatterns/2783 wpatterns/2784)))
                                     (before Gbnf_parser__NewRuleSyntax.tilde_used_warning lib/newRuleSyntax.ml(141):5472-5525
                                       (let
                                         (wpatterns/2781 =
                                            "wildcard patterns _"
                                          tpatterns/2780 = "~ patterns"
                                          variables_have/2779 =
                                            "variables have")
                                         (exit 8 variables_have/2779
                                           tpatterns/2780 wpatterns/2781))))
                                  with (8 variables_have/1700 tpatterns/1701 wpatterns/1702)
                                   (before Gbnf_parser__NewRuleSyntax.tilde_used_warning lib/newRuleSyntax.ml(143):5537-5787
                                     (after Gbnf_parser__NewRuleSyntax.tilde_used_warning lib/newRuleSyntax.ml(143):5537-5787
                                       (apply
                                         (field_imm 7
                                           (global Gbnf_parser__Error!))
                                         positions/1698
                                         [0:
                                          [2:
                                           0
                                           [11:
                                            " nameless "
                                            [2:
                                             0
                                             [11:
                                              " been introduced by "
                                              [2:
                                               0
                                               [11:
                                                ",\nyet this sequence does not end in a point-free semantic action <...>.\nPerhaps "
                                                [2:
                                                 0
                                                 [11:
                                                  " should be used instead."
                                                  0]]]]]]]]
                                          "%s nameless %s been introduced by %s,\nyet this sequence does not end in a point-free semantic action <...>.\nPerhaps %s should be used instead."]
                                         (after Gbnf_parser__NewRuleSyntax.tilde_used_warning lib/newRuleSyntax.ml(147):5738-5752
                                           (apply
                                             (field_imm 35
                                               (global Gbnf_parser__Misc!))
                                             n/1699))
                                         variables_have/1700 tpatterns/1701
                                         wpatterns/1702)))))
                               0))))))
                 pattern/1744 =
                   (function x1/1746 p/1747
                     (funct-body Gbnf_parser__NewRuleSyntax.pattern lib/newRuleSyntax.ml(157)<ghost>:6174-6666
                       (before Gbnf_parser__NewRuleSyntax.pattern lib/newRuleSyntax.ml(159):6224-6666
                         (let (c/1775 = (makemutable 0 (int) 1))
                           (before Gbnf_parser__NewRuleSyntax.pattern lib/newRuleSyntax.ml(160):6243-6666
                             (let
                               (fresh/1776 =
                                  (function param/1791[int]
                                    (funct-body Gbnf_parser__NewRuleSyntax.pattern.fresh lib/newRuleSyntax.ml(160)<ghost>:6253-6306
                                      (before Gbnf_parser__NewRuleSyntax.pattern.fresh lib/newRuleSyntax.ml(160):6258-6306
                                        (after Gbnf_parser__NewRuleSyntax.pattern.fresh lib/newRuleSyntax.ml(160):6258-6306
                                          (apply
                                            (field_imm 3
                                              (global Stdlib__Printf!))
                                            [0:
                                             [2: 0 [12: '_' [4: 0 0 0 0]]]
                                             "%s_%d"]
                                            x1/1746
                                            (after Gbnf_parser__NewRuleSyntax.pattern.fresh lib/newRuleSyntax.ml(160):6284-6306
                                              (apply
                                                (field_imm 22
                                                  (global Gbnf_parser__Misc!))
                                                c/1775))))))))
                               (before Gbnf_parser__NewRuleSyntax.pattern lib/newRuleSyntax.ml(162):6313-6666
                                 (letrec
                                   (pattern/1792
                                      (function p/1793
                                        (funct-body Gbnf_parser__NewRuleSyntax.pattern.pattern lib/newRuleSyntax.ml(162)<ghost>:6329-6648
                                          (before Gbnf_parser__NewRuleSyntax.pattern.pattern lib/newRuleSyntax.ml(163):6337-6648
                                            (switch* p/1793
                                             case int 0:
                                              (before Gbnf_parser__NewRuleSyntax.pattern.pattern lib/newRuleSyntax.ml(167):6439-6451
                                                0)
                                             case tag 0:
                                              (let
                                                (x/1794 =a
                                                   (field_imm 0 p/1793))
                                                (before Gbnf_parser__NewRuleSyntax.pattern.pattern lib/newRuleSyntax.ml(165):6379-6406
                                                  (makeblock 0
                                                    (after Gbnf_parser__NewRuleSyntax.pattern.pattern lib/newRuleSyntax.ml(165):6387-6406
                                                      (apply
                                                        (field_imm 0
                                                          (global Gbnf_parser__Positions!))
                                                        x/1794)))))
                                             case tag 1:
                                              (before Gbnf_parser__NewRuleSyntax.pattern.pattern lib/newRuleSyntax.ml(169):6483-6500
                                                (makeblock 0
                                                  (after Gbnf_parser__NewRuleSyntax.pattern.pattern lib/newRuleSyntax.ml(169):6491-6500
                                                    (apply fresh/1776 0))))
                                             case tag 2:
                                              (let
                                                (ps/1796 =a
                                                   (field_imm 0 p/1793))
                                                (if ps/1796
                                                  (let
                                                    (*match*/2786 =a
                                                       (field_imm 1 ps/1796))
                                                    (if *match*/2786
                                                      (before Gbnf_parser__NewRuleSyntax.pattern.pattern lib/newRuleSyntax.ml(175):6617-6648
                                                        (makeblock 3
                                                          (after Gbnf_parser__NewRuleSyntax.pattern.pattern lib/newRuleSyntax.ml(175):6627-6648
                                                            (apply
                                                              (field_imm 19
                                                                (global Stdlib__List!))
                                                              pattern/1792
                                                              ps/1796))))
                                                      (let
                                                        (p/1795 =a
                                                           (field_imm 0
                                                             ps/1796))
                                                        (before Gbnf_parser__NewRuleSyntax.pattern.pattern lib/newRuleSyntax.ml(173):6575-6584
                                                          (after Gbnf_parser__NewRuleSyntax.pattern.pattern lib/newRuleSyntax.ml(173):6575-6584
                                                            (apply
                                                              pattern/1792
                                                              p/1795))))))
                                                  (before Gbnf_parser__NewRuleSyntax.pattern.pattern lib/newRuleSyntax.ml(171):6533-6541
                                                    1))))))))
                                   (before Gbnf_parser__NewRuleSyntax.pattern lib/newRuleSyntax.ml(178):6657-6666
                                     (after Gbnf_parser__NewRuleSyntax.pattern lib/newRuleSyntax.ml(178):6657-6666
                                       (apply pattern/1792 p/1747))))))))))))
                (letrec
                  (bv/1824
                     (function accu/1825 p/1826
                       (funct-body Gbnf_parser__NewRuleSyntax.bv lib/newRuleSyntax.ml(184)<ghost>:6887-7125
                         (before Gbnf_parser__NewRuleSyntax.bv lib/newRuleSyntax.ml(185):6898-7125
                           (switch p/1826
                            case int 0:
                             (before Gbnf_parser__NewRuleSyntax.bv lib/newRuleSyntax.ml(189):6970-6974
                               accu/1825)
                            case int 1:
                             (before Gbnf_parser__NewRuleSyntax.bv lib/newRuleSyntax.ml(191):6997-7001
                               accu/1825)
                            case tag 0:
                             (let (x/1827 =a (field_imm 0 p/1826))
                               (before Gbnf_parser__NewRuleSyntax.bv lib/newRuleSyntax.ml(187):6934-6943
                                 (makeblock 0 x/1827 accu/1825)))
                            case tag 3:
                             (let (ps/1828 =a (field_imm 0 p/1826))
                               (before Gbnf_parser__NewRuleSyntax.bv lib/newRuleSyntax.ml(193):7028-7053
                                 (after Gbnf_parser__NewRuleSyntax.bv lib/newRuleSyntax.ml(193):7028-7053
                                   (apply
                                     (field_imm 25 (global Stdlib__List!))
                                     bv/1824 accu/1825 ps/1828))))
                            default:
                             (before Gbnf_parser__NewRuleSyntax.bv lib/newRuleSyntax.ml(196):7113-7125
                               (raise
                                 (after Gbnf_parser__NewRuleSyntax.bv lib/newRuleSyntax.ml(196):7113-7125
                                   (makeblock 0 (global Assert_failure/28!)
                                     [0: "lib/newRuleSyntax.ml" 196 6])))))))))
                  (let
                    (attributes/1829 =
                       (function e/1831
                         (funct-body Gbnf_parser__NewRuleSyntax.attributes lib/newRuleSyntax.ml(202)<ghost>:7281-7375
                           (before Gbnf_parser__NewRuleSyntax.attributes lib/newRuleSyntax.ml(203):7322-7375
                             (let (attrs/1832 =a (field_imm 2 e/1831))
                               (before Gbnf_parser__NewRuleSyntax.attributes lib/newRuleSyntax.ml(205):7370-7375
                                 attrs/1832)))))
                     empty/1932 =
                       (function pos/1934
                         (funct-body Gbnf_parser__NewRuleSyntax.empty lib/newRuleSyntax.ml(253)<ghost>:9486-9633
                           (before Gbnf_parser__NewRuleSyntax.empty lib/newRuleSyntax.ml(254):9504-9633
                             (makeblock 0 pos/1934 0 0
                               (function a/1935
                                 (funct-body Gbnf_parser__NewRuleSyntax.empty.(fun) lib/newRuleSyntax.ml(258):9574-9586
                                   (before Gbnf_parser__NewRuleSyntax.empty.(fun) lib/newRuleSyntax.ml(258):9584-9585
                                     a/1935)))
                               0 0))))
                     user/1936 =
                       (function x/1938
                         (funct-body Gbnf_parser__NewRuleSyntax.user lib/newRuleSyntax.ml(265)<ghost>:9689-9762
                           (before Gbnf_parser__NewRuleSyntax.user lib/newRuleSyntax.ml(266):9738-9762
                             (makeblock 0
                               (after Gbnf_parser__NewRuleSyntax.user lib/newRuleSyntax.ml(266):9743-9762
                                 (apply
                                   (field_imm 0
                                     (global Gbnf_parser__Positions!))
                                   x/1938))))))
                     auto/1939 = 0
                     producers/1940 =
                       (function context/1942
                         (funct-body Gbnf_parser__NewRuleSyntax.producers lib/newRuleSyntax.ml(273)<ghost>:9849-9903
                           (before Gbnf_parser__NewRuleSyntax.producers lib/newRuleSyntax.ml(274):9877-9903
                             (after Gbnf_parser__NewRuleSyntax.producers lib/newRuleSyntax.ml(274):9877-9903
                               (apply (field_imm 9 (global Stdlib__List!))
                                 (field_imm 1 context/1942))))))
                     uxs/1943 =
                       (function context/1945
                         (funct-body Gbnf_parser__NewRuleSyntax.uxs lib/newRuleSyntax.ml(278)<ghost>:9961-10035
                           (before Gbnf_parser__NewRuleSyntax.uxs lib/newRuleSyntax.ml(279):9999-10035
                             (after Gbnf_parser__NewRuleSyntax.uxs lib/newRuleSyntax.ml(279):9999-10035
                               (apply (field_imm 9 (global Stdlib__Array!))
                                 (after Gbnf_parser__NewRuleSyntax.uxs lib/newRuleSyntax.ml(279):10013-10035
                                   (apply
                                     (field_imm 9 (global Stdlib__List!))
                                     (field_imm 2 context/1945))))))))
                     tuple/1994 =
                       (function context/1996
                         (funct-body Gbnf_parser__NewRuleSyntax.tuple lib/newRuleSyntax.ml(283)<ghost>:10075-10127
                           (before Gbnf_parser__NewRuleSyntax.tuple lib/newRuleSyntax.ml(284):10105-10127
                             (after Gbnf_parser__NewRuleSyntax.tuple lib/newRuleSyntax.ml(284):10105-10127
                               (apply (field_imm 9 (global Stdlib__List!))
                                 (field_imm 4 context/1996))))))
                     semvar/1997 =
                       (function context/1999
                         (funct-body Gbnf_parser__NewRuleSyntax.semvar lib/newRuleSyntax.ml(294)<ghost>:10470-10564
                           (before Gbnf_parser__NewRuleSyntax.semvar lib/newRuleSyntax.ml(295):10495-10564
                             (let
                               (i/2000 =[int]
                                  (+
                                    (after Gbnf_parser__NewRuleSyntax.semvar lib/newRuleSyntax.ml(295):10503-10532
                                      (apply
                                        (field_imm 0 (global Stdlib__List!))
                                        (field_imm 1 context/1999)))
                                    1))
                               (before Gbnf_parser__NewRuleSyntax.semvar lib/newRuleSyntax.ml(296):10542-10564
                                 (after Gbnf_parser__NewRuleSyntax.semvar lib/newRuleSyntax.ml(296):10542-10564
                                   (apply
                                     (field_imm 3 (global Stdlib__Printf!))
                                     [0: [12: '_' [4: 0 0 0 0]] "_%d"]
                                     i/2000))))))))
                    (letrec
                      (parameter/2001
                         (function e/2008
                           (funct-body Gbnf_parser__NewRuleSyntax.parameter lib/newRuleSyntax.ml(302)<ghost>:10720-10994
                             (before Gbnf_parser__NewRuleSyntax.parameter lib/newRuleSyntax.ml(303):10760-10994
                               (let
                                 (args/2010 =a (field_imm 1 e/2008)
                                  sym/2009 =a (field_imm 0 e/2008))
                                 (before Gbnf_parser__NewRuleSyntax.parameter lib/newRuleSyntax.ml(307):10943-10994
                                   (after Gbnf_parser__NewRuleSyntax.parameter lib/newRuleSyntax.ml(307):10943-10994
                                     (apply
                                       (field_imm 0
                                         (global Gbnf_parser__Parameters!))
                                       sym/2009
                                       (after Gbnf_parser__NewRuleSyntax.parameter lib/newRuleSyntax.ml(307):10962-10994
                                         (apply
                                           (field_imm 19
                                             (global Stdlib__List!))
                                           nested_parameter/2002 args/2010)))))))))
                        nested_parameter/2002
                          (function e/2027
                            (funct-body Gbnf_parser__NewRuleSyntax.nested_parameter lib/newRuleSyntax.ml(311)<ghost>:11075-11777
                              (before Gbnf_parser__NewRuleSyntax.nested_parameter lib/newRuleSyntax.ml(313):11109-11777
                                (catch
                                  (let
                                    (*match*/2790 =
                                       (after Gbnf_parser__NewRuleSyntax.nested_parameter lib/newRuleSyntax.ml(313):11115-11132
                                         (apply
                                           (field_imm 0
                                             (global Gbnf_parser__Positions!))
                                           e/2027))
                                     *match*/2791 =a
                                       (field_imm 0 *match*/2790))
                                    (if *match*/2791
                                      (let
                                        (*match*/2792 =a
                                           (field_imm 0 *match*/2791)
                                         *match*/2793 =a
                                           (field_imm 0 *match*/2792)
                                         *match*/2794 =a
                                           (field_imm 0 *match*/2793))
                                        (switch* *match*/2794
                                         case tag 0: (exit 17)
                                         case tag 1:
                                          (let
                                            (*match*/2797 =a
                                               (field_imm 1 *match*/2791))
                                            (if *match*/2797 (exit 17)
                                              (let
                                                (e/2028 =a
                                                   (field_imm 0 *match*/2794))
                                                (before Gbnf_parser__NewRuleSyntax.nested_parameter lib/newRuleSyntax.ml(323):11766-11777
                                                  (after Gbnf_parser__NewRuleSyntax.nested_parameter lib/newRuleSyntax.ml(323):11766-11777
                                                    (apply parameter/2001
                                                      e/2028))))))
                                         case tag 2: (exit 17)))
                                      (exit 17)))
                                 with (17)
                                  (raise
                                    (makeblock 0 (global Match_failure/18!)
                                      [0: "lib/newRuleSyntax.ml" 313 2]))))))
                        producer/2003
                          (function x/2043 e1/2044
                            (funct-body Gbnf_parser__NewRuleSyntax.producer lib/newRuleSyntax.ml(334)<ghost>:12185-12257
                              (before Gbnf_parser__NewRuleSyntax.producer lib/newRuleSyntax.ml(335):12227-12257
                                (makeblock 0 x/2043
                                  (after Gbnf_parser__NewRuleSyntax.producer lib/newRuleSyntax.ml(335):12230-12242
                                    (apply parameter/2001 e1/2044))
                                  (after Gbnf_parser__NewRuleSyntax.producer lib/newRuleSyntax.ml(335):12244-12257
                                    (apply attributes/1829 e1/2044))))))
                        extend/2004
                          (function p/2045 e1/2046 context/2047
                            (funct-body Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(340)<ghost>:12402-13757
                              (before Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(341):12475-13757
                                (catch
                                  (switch p/2045
                                   case tag 0:
                                    (let (x1/2048 =a (field_imm 0 p/2045))
                                      (before Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(345):12663-12991
                                        (makeblock 0
                                          (field_imm 0 context/2047)
                                          (makeblock 0
                                            (after Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(346):12734-12748
                                              (apply producer/2003 x1/2048
                                                e1/2046))
                                            (field_imm 1 context/2047))
                                          (makeblock 0
                                            (after Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(347):12796-12803
                                              (apply user/1936 x1/2048))
                                            (field_imm 2 context/2047))
                                          (field_imm 3 context/2047)
                                          (makeblock 0
                                            (after Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(349):12913-12931
                                              (apply
                                                (field_imm 0
                                                  (global Gbnf_parser__Positions!))
                                                x1/2048))
                                            (field_imm 4 context/2047))
                                          (field_imm 5 context/2047))))
                                   default: (exit 21))
                                 with (21)
                                  (before Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(356):13266-13757
                                    (let
                                      (x1/2049 =
                                         (after Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(356):13275-13289
                                           (apply semvar/1997 context/2047)))
                                      (before Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(357):13299-13757
                                        (let
                                          (tilde_used/2050 =
                                             (after Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(357):13316-13347
                                               (apply tilde_used/1691
                                                 (field_imm 5 context/2047)
                                                 p/2045)))
                                          (before Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(358):13357-13757
                                            (let
                                              (p/2051 =
                                                 (after Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(358):13378-13390
                                                   (apply pattern/1744
                                                     x1/2049 p/2045)))
                                              (before Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(359):13400-13757
                                                (let
                                                  (binding/2052 =
                                                     (after Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(359):13414-13430
                                                       (apply
                                                         (field_imm 5
                                                           (global Gbnf_parser__Action!))
                                                         p/2051 x1/2049)))
                                                  (before Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(360):13440-13757
                                                    (let
                                                      (x1/2099 =
                                                         (after Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(360):13449-13473
                                                           (apply
                                                             (field_imm 10
                                                               (global Gbnf_parser__Positions!))
                                                             x1/2049)))
                                                      (before Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(361):13483-13757
                                                        (makeblock 0
                                                          (field_imm 0
                                                            context/2047)
                                                          (makeblock 0
                                                            (after Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(362):13550-13564
                                                              (apply
                                                                producer/2003
                                                                x1/2099
                                                                e1/2046))
                                                            (field_imm 1
                                                              context/2047))
                                                          (makeblock 0
                                                            auto/1939
                                                            (field_imm 2
                                                              context/2047))
                                                          (after Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(364):13660-13694
                                                            (apply >>/1169
                                                              binding/2052
                                                              (field_imm 3
                                                                context/2047)))
                                                          (after Gbnf_parser__NewRuleSyntax.extend lib/newRuleSyntax.ml(365):13717-13735
                                                            (apply bv/1824
                                                              (field_imm 4
                                                                context/2047)
                                                              p/2051))
                                                          tilde_used/2050))))))))))))))))
                        production_aux/2005
                          (function context/2100 e/2101 level/2102
                            (funct-body Gbnf_parser__NewRuleSyntax.production_aux lib/newRuleSyntax.ml(371)<ghost>:13837-14944
                              (before Gbnf_parser__NewRuleSyntax.production_aux lib/newRuleSyntax.ml(375):13943-14944
                                (let
                                  (*match*/2806 =
                                     (after Gbnf_parser__NewRuleSyntax.production_aux lib/newRuleSyntax.ml(375):13956-13977
                                       (apply
                                         (field_imm 2
                                           (global Gbnf_parser__Positions!))
                                         e/2101))
                                   e/2103 =a (field_imm 0 *match*/2806))
                                  (before Gbnf_parser__NewRuleSyntax.production_aux lib/newRuleSyntax.ml(376):13983-14944
                                    (catch
                                      (switch* e/2103
                                       case tag 0:
                                        (let
                                          (e2/2107 =a (field_imm 2 e/2103)
                                           e1/2106 =a (field_imm 1 e/2103)
                                           p/2105 =a (field_imm 0 e/2103))
                                          (before Gbnf_parser__NewRuleSyntax.production_aux lib/newRuleSyntax.ml(381):14153-14198
                                            (after Gbnf_parser__NewRuleSyntax.production_aux lib/newRuleSyntax.ml(381):14153-14198
                                              (apply production_aux/2005
                                                (after Gbnf_parser__NewRuleSyntax.production_aux lib/newRuleSyntax.ml(381):14168-14189
                                                  (apply extend/2004 p/2105
                                                    e1/2106 context/2100))
                                                e2/2107 level/2102))))
                                       case tag 1: (exit 22)
                                       case tag 2:
                                        (let
                                          (*match*/2802 =a
                                             (field_imm 0 e/2103))
                                          (switch* *match*/2802
                                           case tag 0:
                                            (before Gbnf_parser__NewRuleSyntax.production_aux lib/newRuleSyntax.ml(385):14321-14944
                                              (seq
                                                (after Gbnf_parser__NewRuleSyntax.production_aux lib/newRuleSyntax.ml(385):14321-14358
                                                  (apply
                                                    tilde_used_warning/1696
                                                    (field_imm 5
                                                      context/2100)))
                                                (before Gbnf_parser__NewRuleSyntax.production_aux lib/newRuleSyntax.ml(389):14576-14944
                                                  (makeblock 0
                                                    (field_imm 0
                                                      context/2100)
                                                    (after Gbnf_parser__NewRuleSyntax.production_aux lib/newRuleSyntax.ml(391):14665-14682
                                                      (apply producers/1940
                                                        context/2100))))))
                                           case tag 1: (exit 22))))
                                     with (22)
                                      (raise
                                        (makeblock 0
                                          (global Match_failure/18!)
                                          [0: "lib/newRuleSyntax.ml" 376 2]))))))))
                        production/2006
                          (function param/2114
                            (funct-body Gbnf_parser__NewRuleSyntax.production lib/newRuleSyntax.ml(452)<ghost>:18094-18246
                              (let
                                (level/2111 =a (field_imm 1 param/2114)
                                 e/2110 =a (field_imm 0 param/2114))
                                (before Gbnf_parser__NewRuleSyntax.production lib/newRuleSyntax.ml(453):18127-18246
                                  (let
                                    (e/2112 =
                                       (after Gbnf_parser__NewRuleSyntax.production lib/newRuleSyntax.ml(453):18135-18149
                                         (apply resolve_puns/1174 e/2110)))
                                    (before Gbnf_parser__NewRuleSyntax.production lib/newRuleSyntax.ml(454):18155-18246
                                      (seq
                                        (after Gbnf_parser__NewRuleSyntax.production lib/newRuleSyntax.ml(454):18155-18172
                                          (apply check_linearity/1690 e/2112))
                                        (before Gbnf_parser__NewRuleSyntax.production lib/newRuleSyntax.ml(455):18176-18246
                                          (let
                                            (pos/2113 =
                                               (after Gbnf_parser__NewRuleSyntax.production lib/newRuleSyntax.ml(455):18186-18206
                                                 (apply
                                                   (field_imm 1
                                                     (global Gbnf_parser__Positions!))
                                                   e/2112)))
                                            (before Gbnf_parser__NewRuleSyntax.production lib/newRuleSyntax.ml(456):18212-18246
                                              (after Gbnf_parser__NewRuleSyntax.production lib/newRuleSyntax.ml(456):18212-18246
                                                (apply production_aux/2005
                                                  (after Gbnf_parser__NewRuleSyntax.production lib/newRuleSyntax.ml(456):18227-18238
                                                    (apply empty/1932
                                                      pos/2113))
                                                  e/2112 level/2111))))))))))))
                        productions/2007
                          (function e/2115
                            (funct-body Gbnf_parser__NewRuleSyntax.productions lib/newRuleSyntax.ml(458)<ghost>:18264-18400
                              (before Gbnf_parser__NewRuleSyntax.productions lib/newRuleSyntax.ml(459):18313-18400
                                (let
                                  (*match*/2807 =
                                     (after Gbnf_parser__NewRuleSyntax.productions lib/newRuleSyntax.ml(459):18319-18336
                                       (apply
                                         (field_imm 0
                                           (global Gbnf_parser__Positions!))
                                         e/2115))
                                   branches/2116 =a
                                     (field_imm 0 *match*/2807))
                                  (before Gbnf_parser__NewRuleSyntax.productions lib/newRuleSyntax.ml(461):18372-18400
                                    (after Gbnf_parser__NewRuleSyntax.productions lib/newRuleSyntax.ml(461):18372-18400
                                      (apply
                                        (field_imm 19 (global Stdlib__List!))
                                        production/2006 branches/2116))))))))
                      (let
                        (rule/2117 =
                           (function rule/2119
                             (funct-body Gbnf_parser__NewRuleSyntax.rule lib/newRuleSyntax.ml(467)<ghost>:18538-18950
                               (before Gbnf_parser__NewRuleSyntax.rule lib/newRuleSyntax.ml(468):18577-18950
                                 (makeblock 0
                                   (after Gbnf_parser__NewRuleSyntax.rule lib/newRuleSyntax.ml(471):18690-18719
                                     (apply
                                       (field_imm 0
                                         (global Gbnf_parser__Positions!))
                                       (field_imm 2 rule/2119)))
                                   (makeblock 0
                                     (after Gbnf_parser__NewRuleSyntax.rule lib/newRuleSyntax.ml(472):18744-18776
                                       (apply
                                         (field_imm 1
                                           (global Gbnf_parser__Positions!))
                                         (field_imm 2 rule/2119)))
                                     0)
                                   (after Gbnf_parser__NewRuleSyntax.rule lib/newRuleSyntax.ml(475):18921-18946
                                     (apply productions/2007
                                       (field_imm 4 rule/2119)))))))
                         *match*/2816 =
                           (after Gbnf_parser__NewRuleSyntax lib/newRuleSyntax.ml(476)<ghost>:18950-18950
                             (apply
                               (field_imm 5 (global Ppx_inline_test_lib!))
                               "gbnf_parser"))
                         *match*/2814 =
                           (after Gbnf_parser__NewRuleSyntax lib/newRuleSyntax.ml(476)<ghost>:18950-18950
                             (apply
                               (field_imm 1
                                 (field_imm 5
                                   (global Expect_test_collector!)))
                               0))
                         *match*/2812 =
                           (after Gbnf_parser__NewRuleSyntax lib/newRuleSyntax.ml(476)<ghost>:18950-18950
                             (apply
                               (field_imm 1
                                 (field_imm 0
                                   (global Ppx_bench_lib__Benchmark_accumulator!)))
                               0))
                         *match*/2810 =
                           (after Gbnf_parser__NewRuleSyntax lib/newRuleSyntax.ml(476)<ghost>:18950-18950
                             (apply
                               (field_imm 4
                                 (global Ppx_module_timer_runtime!))
                               #"Gbnf_parser__NewRuleSyntax")))
                        (pseudo <unknown location>
                          (makeblock 0 >>/1169 resolve_puns/1174
                            patterns/1685 check_linearity/1690
                            tilde_used/1691 tilde_used_warning/1696
                            pattern/1744 bv/1824 attributes/1829 empty/1932
                            user/1936 auto/1939 producers/1940 uxs/1943
                            tuple/1994 semvar/1997 parameter/2001
                            nested_parameter/2002 producer/2003 extend/2004
                            production_aux/2005 production/2006
                            productions/2007 rule/2117))))))))))))))
