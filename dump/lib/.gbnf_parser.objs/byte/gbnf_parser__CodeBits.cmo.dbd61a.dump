[
  structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
    Pstr_attribute "ocaml.ppx.context"
    [
      structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
        Pstr_eval
        expression (_none_[0,0+-1]..[0,0+-1]) ghost
          Pexp_record
          [
            "tool_name" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_constant PConst_string("ppx_driver",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
            "include_dirs" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "load_path" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "open_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "for_package" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "None" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "debug" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_threads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_vmthreads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "recursive_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "principal" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "transparent_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unboxed_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unsafe_string" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "cookies" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                Some
                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                    Pexp_tuple
                    [
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_tuple
                        [
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_constant PConst_string("inline_tests",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                          expression (<command-line>[1,0+0]..[1,0+9])
                            Pexp_constant PConst_string("enabled",(<command-line>[1,0+1]..[1,0+8]),None)
                        ]
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                        Some
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_tuple
                            [
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_tuple
                                [
                                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                    Pexp_constant PConst_string("library-name",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                                  expression (<command-line>[1,0+0]..[1,0+13])
                                    Pexp_constant PConst_string("gbnf_parser",(<command-line>[1,0+1]..[1,0+12]),None)
                                ]
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                                None
                            ]
                    ]
          ]
          None
    ]
  structure_item (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
          Ppat_construct "()" (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
          None
        expression (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
          Pexp_apply
          expression (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
            Pexp_ident "Ppx_module_timer_runtime.record_start" (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
                Pexp_ident "Ppx_module_timer_runtime.__MODULE__" (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
          ]
    ]
  structure_item (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
          Ppat_construct "()" (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
          None
        expression (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
          Pexp_apply
          expression (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
            Pexp_ident "Ppx_bench_lib.Benchmark_accumulator.Current_libname.set" (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost,None)
          ]
    ]
  structure_item (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
          Ppat_construct "()" (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
          None
        expression (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
          Pexp_apply
          expression (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
            Pexp_ident "Expect_test_collector.Current_file.set" (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
          [
            <arg>
            Labelled "absolute_filename"
              expression (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
                Pexp_constant PConst_string("lib/codeBits.ml",(lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost,None)
          ]
    ]
  structure_item (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
          Ppat_construct "()" (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
          None
        expression (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
          Pexp_apply
          expression (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
            Pexp_ident "Ppx_inline_test_lib.set_lib_and_partition" (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost,None)
            <arg>
            Nolabel
              expression (lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost
                Pexp_constant PConst_string("codeBits.ml",(lib/codeBits.ml[17,1063+0]..[17,1063+0]) ghost,None)
          ]
    ]
  structure_item (lib/codeBits.ml[17,1063+0]..[17,1063+7])
    Pstr_open Fresh
    module_expr (lib/codeBits.ml[17,1063+5]..[17,1063+7])
      Pmod_ident "IL" (lib/codeBits.ml[17,1063+5]..[17,1063+7])
  structure_item (lib/codeBits.ml[21,1118+0]..[28,1352+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[21,1118+4]..[21,1118+15])
          Ppat_var "pvarlocated" (lib/codeBits.ml[21,1118+4]..[21,1118+15])
        expression (lib/codeBits.ml[21,1118+16]..[28,1352+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[21,1118+16]..[21,1118+18])
            Ppat_var "id" (lib/codeBits.ml[21,1118+16]..[21,1118+18])
          expression (lib/codeBits.ml[22,1139+2]..[28,1352+18])
            Pexp_let Nonrec
            [
              <def>
                pattern (lib/codeBits.ml[22,1139+6]..[22,1139+12])
                  Ppat_tuple
                  [
                    pattern (lib/codeBits.ml[22,1139+6]..[22,1139+7])
                      Ppat_var "x" (lib/codeBits.ml[22,1139+6]..[22,1139+7])
                    pattern (lib/codeBits.ml[22,1139+9]..[22,1139+12])
                      Ppat_var "pos" (lib/codeBits.ml[22,1139+9]..[22,1139+12])
                  ]
                expression (lib/codeBits.ml[22,1139+15]..[22,1139+37])
                  Pexp_apply
                  expression (lib/codeBits.ml[22,1139+15]..[22,1139+34])
                    Pexp_ident "Positions.decompose" (lib/codeBits.ml[22,1139+15]..[22,1139+34])
                  [
                    <arg>
                    Nolabel
                      expression (lib/codeBits.ml[22,1139+35]..[22,1139+37])
                        Pexp_ident "id" (lib/codeBits.ml[22,1139+35]..[22,1139+37])
                  ]
            ]
            expression (lib/codeBits.ml[23,1180+2]..[28,1352+18])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/codeBits.ml[23,1180+6]..[23,1180+10])
                    Ppat_var "pos1" (lib/codeBits.ml[23,1180+6]..[23,1180+10])
                  expression (lib/codeBits.ml[23,1180+13]..[23,1180+44])
                    Pexp_apply
                    expression (lib/codeBits.ml[23,1180+13]..[23,1180+40])
                      Pexp_ident "Positions.start_of_position" (lib/codeBits.ml[23,1180+13]..[23,1180+40])
                    [
                      <arg>
                      Nolabel
                        expression (lib/codeBits.ml[23,1180+41]..[23,1180+44])
                          Pexp_ident "pos" (lib/codeBits.ml[23,1180+41]..[23,1180+44])
                    ]
                <def>
                  pattern (lib/codeBits.ml[24,1225+6]..[24,1225+10])
                    Ppat_var "pos2" (lib/codeBits.ml[24,1225+6]..[24,1225+10])
                  expression (lib/codeBits.ml[24,1225+13]..[24,1225+42])
                    Pexp_apply
                    expression (lib/codeBits.ml[24,1225+13]..[24,1225+38])
                      Pexp_ident "Positions.end_of_position" (lib/codeBits.ml[24,1225+13]..[24,1225+38])
                    [
                      <arg>
                      Nolabel
                        expression (lib/codeBits.ml[24,1225+39]..[24,1225+42])
                          Pexp_ident "pos" (lib/codeBits.ml[24,1225+39]..[24,1225+42])
                    ]
              ]
              expression (lib/codeBits.ml[25,1271+2]..[28,1352+18])
                Pexp_ifthenelse
                expression (lib/codeBits.ml[25,1271+5]..[25,1271+57])
                  Pexp_apply
                  expression (lib/codeBits.ml[25,1271+30]..[25,1271+32])
                    Pexp_ident "||" (lib/codeBits.ml[25,1271+30]..[25,1271+32])
                  [
                    <arg>
                    Nolabel
                      expression (lib/codeBits.ml[25,1271+5]..[25,1271+29])
                        Pexp_apply
                        expression (lib/codeBits.ml[25,1271+10]..[25,1271+12])
                          Pexp_ident "==" (lib/codeBits.ml[25,1271+10]..[25,1271+12])
                        [
                          <arg>
                          Nolabel
                            expression (lib/codeBits.ml[25,1271+5]..[25,1271+9])
                              Pexp_ident "pos1" (lib/codeBits.ml[25,1271+5]..[25,1271+9])
                          <arg>
                          Nolabel
                            expression (lib/codeBits.ml[25,1271+13]..[25,1271+29])
                              Pexp_ident "Lexing.dummy_pos" (lib/codeBits.ml[25,1271+13]..[25,1271+29])
                        ]
                    <arg>
                    Nolabel
                      expression (lib/codeBits.ml[25,1271+33]..[25,1271+57])
                        Pexp_apply
                        expression (lib/codeBits.ml[25,1271+38]..[25,1271+40])
                          Pexp_ident "==" (lib/codeBits.ml[25,1271+38]..[25,1271+40])
                        [
                          <arg>
                          Nolabel
                            expression (lib/codeBits.ml[25,1271+33]..[25,1271+37])
                              Pexp_ident "pos2" (lib/codeBits.ml[25,1271+33]..[25,1271+37])
                          <arg>
                          Nolabel
                            expression (lib/codeBits.ml[25,1271+41]..[25,1271+57])
                              Pexp_ident "Lexing.dummy_pos" (lib/codeBits.ml[25,1271+41]..[25,1271+57])
                        ]
                  ]
                expression (lib/codeBits.ml[26,1334+4]..[26,1334+10])
                  Pexp_construct "PVar" (lib/codeBits.ml[26,1334+4]..[26,1334+8])
                  Some
                    expression (lib/codeBits.ml[26,1334+9]..[26,1334+10])
                      Pexp_ident "x" (lib/codeBits.ml[26,1334+9]..[26,1334+10])
                Some
                  expression (lib/codeBits.ml[28,1352+4]..[28,1352+18])
                    Pexp_construct "PVarLocated" (lib/codeBits.ml[28,1352+4]..[28,1352+15])
                    Some
                      expression (lib/codeBits.ml[28,1352+16]..[28,1352+18])
                        Pexp_ident "id" (lib/codeBits.ml[28,1352+16]..[28,1352+18])
    ]
  structure_item (lib/codeBits.ml[32,1387+0]..[38,1462+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[32,1387+4]..[32,1387+10])
          Ppat_var "etuple" (lib/codeBits.ml[32,1387+4]..[32,1387+10])
        expression (lib/codeBits.ml[32,1387+13]..[38,1462+15])
          Pexp_function
          [
            <case>
              pattern (lib/codeBits.ml[33,1409+4]..[33,1409+6])
                Ppat_construct "[]" (lib/codeBits.ml[33,1409+4]..[33,1409+6])
                None
              expression (lib/codeBits.ml[34,1419+6]..[34,1419+11])
                Pexp_construct "EUnit" (lib/codeBits.ml[34,1419+6]..[34,1419+11])
                None
            <case>
              pattern (lib/codeBits.ml[35,1431+4]..[35,1431+9])
                Ppat_construct "::" (lib/codeBits.ml[35,1431+6]..[35,1431+9]) ghost
                Some
                  []
                  pattern (lib/codeBits.ml[35,1431+6]..[35,1431+9]) ghost
                    Ppat_tuple
                    [
                      pattern (lib/codeBits.ml[35,1431+6]..[35,1431+7])
                        Ppat_var "e" (lib/codeBits.ml[35,1431+6]..[35,1431+7])
                      pattern (lib/codeBits.ml[35,1431+8]..[35,1431+9]) ghost
                        Ppat_construct "[]" (lib/codeBits.ml[35,1431+8]..[35,1431+9]) ghost
                        None
                    ]
              expression (lib/codeBits.ml[36,1444+6]..[36,1444+7])
                Pexp_ident "e" (lib/codeBits.ml[36,1444+6]..[36,1444+7])
            <case>
              pattern (lib/codeBits.ml[37,1452+4]..[37,1452+6])
                Ppat_var "es" (lib/codeBits.ml[37,1452+4]..[37,1452+6])
              expression (lib/codeBits.ml[38,1462+6]..[38,1462+15])
                Pexp_construct "ETuple" (lib/codeBits.ml[38,1462+6]..[38,1462+12])
                Some
                  expression (lib/codeBits.ml[38,1462+13]..[38,1462+15])
                    Pexp_ident "es" (lib/codeBits.ml[38,1462+13]..[38,1462+15])
          ]
    ]
  structure_item (lib/codeBits.ml[40,1479+0]..[46,1554+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[40,1479+4]..[40,1479+10])
          Ppat_var "ptuple" (lib/codeBits.ml[40,1479+4]..[40,1479+10])
        expression (lib/codeBits.ml[40,1479+13]..[46,1554+15])
          Pexp_function
          [
            <case>
              pattern (lib/codeBits.ml[41,1501+4]..[41,1501+6])
                Ppat_construct "[]" (lib/codeBits.ml[41,1501+4]..[41,1501+6])
                None
              expression (lib/codeBits.ml[42,1511+6]..[42,1511+11])
                Pexp_construct "PUnit" (lib/codeBits.ml[42,1511+6]..[42,1511+11])
                None
            <case>
              pattern (lib/codeBits.ml[43,1523+4]..[43,1523+9])
                Ppat_construct "::" (lib/codeBits.ml[43,1523+6]..[43,1523+9]) ghost
                Some
                  []
                  pattern (lib/codeBits.ml[43,1523+6]..[43,1523+9]) ghost
                    Ppat_tuple
                    [
                      pattern (lib/codeBits.ml[43,1523+6]..[43,1523+7])
                        Ppat_var "p" (lib/codeBits.ml[43,1523+6]..[43,1523+7])
                      pattern (lib/codeBits.ml[43,1523+8]..[43,1523+9]) ghost
                        Ppat_construct "[]" (lib/codeBits.ml[43,1523+8]..[43,1523+9]) ghost
                        None
                    ]
              expression (lib/codeBits.ml[44,1536+6]..[44,1536+7])
                Pexp_ident "p" (lib/codeBits.ml[44,1536+6]..[44,1536+7])
            <case>
              pattern (lib/codeBits.ml[45,1544+4]..[45,1544+6])
                Ppat_var "ps" (lib/codeBits.ml[45,1544+4]..[45,1544+6])
              expression (lib/codeBits.ml[46,1554+6]..[46,1554+15])
                Pexp_construct "PTuple" (lib/codeBits.ml[46,1554+6]..[46,1554+12])
                Some
                  expression (lib/codeBits.ml[46,1554+13]..[46,1554+15])
                    Pexp_ident "ps" (lib/codeBits.ml[46,1554+13]..[46,1554+15])
          ]
    ]
  structure_item (lib/codeBits.ml[50,1609+0]..[54,1666+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[50,1609+4]..[50,1609+7])
          Ppat_var "ifn" (lib/codeBits.ml[50,1609+4]..[50,1609+7])
        expression (lib/codeBits.ml[50,1609+8]..[54,1666+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[50,1609+8]..[50,1609+17])
            Ppat_var "condition" (lib/codeBits.ml[50,1609+8]..[50,1609+17])
          expression (lib/codeBits.ml[50,1609+18]..[54,1666+6]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/codeBits.ml[50,1609+18]..[50,1609+20])
              Ppat_var "xs" (lib/codeBits.ml[50,1609+18]..[50,1609+20])
            expression (lib/codeBits.ml[51,1632+2]..[54,1666+6])
              Pexp_ifthenelse
              expression (lib/codeBits.ml[51,1632+5]..[51,1632+14])
                Pexp_ident "condition" (lib/codeBits.ml[51,1632+5]..[51,1632+14])
              expression (lib/codeBits.ml[52,1652+4]..[52,1652+6])
                Pexp_ident "xs" (lib/codeBits.ml[52,1652+4]..[52,1652+6])
              Some
                expression (lib/codeBits.ml[54,1666+4]..[54,1666+6])
                  Pexp_construct "[]" (lib/codeBits.ml[54,1666+4]..[54,1666+6])
                  None
    ]
  structure_item (lib/codeBits.ml[56,1674+0]..[60,1733+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[56,1674+4]..[56,1674+7])
          Ppat_var "if1" (lib/codeBits.ml[56,1674+4]..[56,1674+7])
        expression (lib/codeBits.ml[56,1674+8]..[60,1733+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[56,1674+8]..[56,1674+17])
            Ppat_var "condition" (lib/codeBits.ml[56,1674+8]..[56,1674+17])
          expression (lib/codeBits.ml[56,1674+18]..[60,1733+6]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/codeBits.ml[56,1674+18]..[56,1674+19])
              Ppat_var "x" (lib/codeBits.ml[56,1674+18]..[56,1674+19])
            expression (lib/codeBits.ml[57,1696+2]..[60,1733+6])
              Pexp_ifthenelse
              expression (lib/codeBits.ml[57,1696+5]..[57,1696+14])
                Pexp_ident "condition" (lib/codeBits.ml[57,1696+5]..[57,1696+14])
              expression (lib/codeBits.ml[58,1716+4]..[58,1716+9])
                Pexp_construct "::" (lib/codeBits.ml[58,1716+6]..[58,1716+9]) ghost
                Some
                  expression (lib/codeBits.ml[58,1716+6]..[58,1716+9]) ghost
                    Pexp_tuple
                    [
                      expression (lib/codeBits.ml[58,1716+6]..[58,1716+7])
                        Pexp_ident "x" (lib/codeBits.ml[58,1716+6]..[58,1716+7])
                      expression (lib/codeBits.ml[58,1716+8]..[58,1716+9]) ghost
                        Pexp_construct "[]" (lib/codeBits.ml[58,1716+8]..[58,1716+9]) ghost
                        None
                    ]
              Some
                expression (lib/codeBits.ml[60,1733+4]..[60,1733+6])
                  Pexp_construct "[]" (lib/codeBits.ml[60,1733+4]..[60,1733+6])
                  None
    ]
  structure_item (lib/codeBits.ml[62,1741+0]..[66,1804+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[62,1741+4]..[62,1741+11])
          Ppat_var "ifnlazy" (lib/codeBits.ml[62,1741+4]..[62,1741+11])
        expression (lib/codeBits.ml[62,1741+12]..[66,1804+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[62,1741+12]..[62,1741+21])
            Ppat_var "condition" (lib/codeBits.ml[62,1741+12]..[62,1741+21])
          expression (lib/codeBits.ml[62,1741+22]..[66,1804+6]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/codeBits.ml[62,1741+22]..[62,1741+24])
              Ppat_var "xs" (lib/codeBits.ml[62,1741+22]..[62,1741+24])
            expression (lib/codeBits.ml[63,1768+2]..[66,1804+6])
              Pexp_ifthenelse
              expression (lib/codeBits.ml[63,1768+5]..[63,1768+14])
                Pexp_ident "condition" (lib/codeBits.ml[63,1768+5]..[63,1768+14])
              expression (lib/codeBits.ml[64,1788+4]..[64,1788+8])
                Pexp_apply
                expression (lib/codeBits.ml[64,1788+4]..[64,1788+6])
                  Pexp_ident "xs" (lib/codeBits.ml[64,1788+4]..[64,1788+6])
                [
                  <arg>
                  Nolabel
                    expression (lib/codeBits.ml[64,1788+6]..[64,1788+8])
                      Pexp_construct "()" (lib/codeBits.ml[64,1788+6]..[64,1788+8])
                      None
                ]
              Some
                expression (lib/codeBits.ml[66,1804+4]..[66,1804+6])
                  Pexp_construct "[]" (lib/codeBits.ml[66,1804+4]..[66,1804+6])
                  None
    ]
  structure_item (lib/codeBits.ml[70,1834+0]..[71,1846+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[70,1834+4]..[70,1834+9])
          Ppat_var "tunit" (lib/codeBits.ml[70,1834+4]..[70,1834+9])
        expression (lib/codeBits.ml[71,1846+2]..[71,1846+21])
          Pexp_construct "TypApp" (lib/codeBits.ml[71,1846+2]..[71,1846+8])
          Some
            expression (lib/codeBits.ml[71,1846+9]..[71,1846+21])
              Pexp_tuple
              [
                expression (lib/codeBits.ml[71,1846+10]..[71,1846+16])
                  Pexp_constant PConst_string("unit",(lib/codeBits.ml[71,1846+11]..[71,1846+15]),None)
                expression (lib/codeBits.ml[71,1846+18]..[71,1846+20])
                  Pexp_construct "[]" (lib/codeBits.ml[71,1846+18]..[71,1846+20])
                  None
              ]
    ]
  structure_item (lib/codeBits.ml[75,1894+0]..[76,1906+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[75,1894+4]..[75,1894+9])
          Ppat_var "tbool" (lib/codeBits.ml[75,1894+4]..[75,1894+9])
        expression (lib/codeBits.ml[76,1906+2]..[76,1906+21])
          Pexp_construct "TypApp" (lib/codeBits.ml[76,1906+2]..[76,1906+8])
          Some
            expression (lib/codeBits.ml[76,1906+9]..[76,1906+21])
              Pexp_tuple
              [
                expression (lib/codeBits.ml[76,1906+10]..[76,1906+16])
                  Pexp_constant PConst_string("bool",(lib/codeBits.ml[76,1906+11]..[76,1906+15]),None)
                expression (lib/codeBits.ml[76,1906+18]..[76,1906+20])
                  Pexp_construct "[]" (lib/codeBits.ml[76,1906+18]..[76,1906+20])
                  None
              ]
    ]
  structure_item (lib/codeBits.ml[80,1954+0]..[81,1965+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[80,1954+4]..[80,1954+8])
          Ppat_var "tint" (lib/codeBits.ml[80,1954+4]..[80,1954+8])
        expression (lib/codeBits.ml[81,1965+2]..[81,1965+20])
          Pexp_construct "TypApp" (lib/codeBits.ml[81,1965+2]..[81,1965+8])
          Some
            expression (lib/codeBits.ml[81,1965+9]..[81,1965+20])
              Pexp_tuple
              [
                expression (lib/codeBits.ml[81,1965+10]..[81,1965+15])
                  Pexp_constant PConst_string("int",(lib/codeBits.ml[81,1965+11]..[81,1965+14]),None)
                expression (lib/codeBits.ml[81,1965+17]..[81,1965+19])
                  Pexp_construct "[]" (lib/codeBits.ml[81,1965+17]..[81,1965+19])
                  None
              ]
    ]
  structure_item (lib/codeBits.ml[85,2011+0]..[86,2025+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[85,2011+4]..[85,2011+11])
          Ppat_var "tstring" (lib/codeBits.ml[85,2011+4]..[85,2011+11])
        expression (lib/codeBits.ml[86,2025+2]..[86,2025+23])
          Pexp_construct "TypApp" (lib/codeBits.ml[86,2025+2]..[86,2025+8])
          Some
            expression (lib/codeBits.ml[86,2025+9]..[86,2025+23])
              Pexp_tuple
              [
                expression (lib/codeBits.ml[86,2025+10]..[86,2025+18])
                  Pexp_constant PConst_string("string",(lib/codeBits.ml[86,2025+11]..[86,2025+17]),None)
                expression (lib/codeBits.ml[86,2025+20]..[86,2025+22])
                  Pexp_construct "[]" (lib/codeBits.ml[86,2025+20]..[86,2025+22])
                  None
              ]
    ]
  structure_item (lib/codeBits.ml[90,2077+0]..[91,2088+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[90,2077+4]..[90,2077+8])
          Ppat_var "texn" (lib/codeBits.ml[90,2077+4]..[90,2077+8])
        expression (lib/codeBits.ml[91,2088+2]..[91,2088+20])
          Pexp_construct "TypApp" (lib/codeBits.ml[91,2088+2]..[91,2088+8])
          Some
            expression (lib/codeBits.ml[91,2088+9]..[91,2088+20])
              Pexp_tuple
              [
                expression (lib/codeBits.ml[91,2088+10]..[91,2088+15])
                  Pexp_constant PConst_string("exn",(lib/codeBits.ml[91,2088+11]..[91,2088+14]),None)
                expression (lib/codeBits.ml[91,2088+17]..[91,2088+19])
                  Pexp_construct "[]" (lib/codeBits.ml[91,2088+17]..[91,2088+19])
                  None
              ]
    ]
  structure_item (lib/codeBits.ml[95,2136+0]..[96,2158+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[95,2136+4]..[95,2136+9])
          Ppat_var "tpair" (lib/codeBits.ml[95,2136+4]..[95,2136+9])
        expression (lib/codeBits.ml[95,2136+10]..[96,2158+23]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[95,2136+10]..[95,2136+14])
            Ppat_var "typ1" (lib/codeBits.ml[95,2136+10]..[95,2136+14])
          expression (lib/codeBits.ml[95,2136+15]..[96,2158+23]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/codeBits.ml[95,2136+15]..[95,2136+19])
              Ppat_var "typ2" (lib/codeBits.ml[95,2136+15]..[95,2136+19])
            expression (lib/codeBits.ml[96,2158+2]..[96,2158+23])
              Pexp_construct "TypTuple" (lib/codeBits.ml[96,2158+2]..[96,2158+10])
              Some
                expression (lib/codeBits.ml[96,2158+11]..[96,2158+23])
                  Pexp_construct "::" (lib/codeBits.ml[96,2158+12]..[96,2158+23]) ghost
                  Some
                    expression (lib/codeBits.ml[96,2158+12]..[96,2158+23]) ghost
                      Pexp_tuple
                      [
                        expression (lib/codeBits.ml[96,2158+12]..[96,2158+16])
                          Pexp_ident "typ1" (lib/codeBits.ml[96,2158+12]..[96,2158+16])
                        expression (lib/codeBits.ml[96,2158+18]..[96,2158+23]) ghost
                          Pexp_construct "::" (lib/codeBits.ml[96,2158+18]..[96,2158+23]) ghost
                          Some
                            expression (lib/codeBits.ml[96,2158+18]..[96,2158+23]) ghost
                              Pexp_tuple
                              [
                                expression (lib/codeBits.ml[96,2158+18]..[96,2158+22])
                                  Pexp_ident "typ2" (lib/codeBits.ml[96,2158+18]..[96,2158+22])
                                expression (lib/codeBits.ml[96,2158+22]..[96,2158+23]) ghost
                                  Pexp_construct "[]" (lib/codeBits.ml[96,2158+22]..[96,2158+23]) ghost
                                  None
                              ]
                      ]
    ]
  structure_item (lib/codeBits.ml[100,2219+0]..[101,2235+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[100,2219+4]..[100,2219+13])
          Ppat_var "tposition" (lib/codeBits.ml[100,2219+4]..[100,2219+13])
        expression (lib/codeBits.ml[101,2235+2]..[101,2235+32])
          Pexp_construct "TypApp" (lib/codeBits.ml[101,2235+2]..[101,2235+8])
          Some
            expression (lib/codeBits.ml[101,2235+9]..[101,2235+32])
              Pexp_tuple
              [
                expression (lib/codeBits.ml[101,2235+10]..[101,2235+27])
                  Pexp_constant PConst_string("Lexing.position",(lib/codeBits.ml[101,2235+11]..[101,2235+26]),None)
                expression (lib/codeBits.ml[101,2235+29]..[101,2235+31])
                  Pexp_construct "[]" (lib/codeBits.ml[101,2235+29]..[101,2235+31])
                  None
              ]
    ]
  structure_item (lib/codeBits.ml[107,2392+0]..[108,2408+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[107,2392+4]..[107,2392+13])
          Ppat_var "tlocation" (lib/codeBits.ml[107,2392+4]..[107,2392+13])
        expression (lib/codeBits.ml[108,2408+2]..[108,2408+27])
          Pexp_apply
          expression (lib/codeBits.ml[108,2408+2]..[108,2408+7])
            Pexp_ident "tpair" (lib/codeBits.ml[108,2408+2]..[108,2408+7])
          [
            <arg>
            Nolabel
              expression (lib/codeBits.ml[108,2408+8]..[108,2408+17])
                Pexp_ident "tposition" (lib/codeBits.ml[108,2408+8]..[108,2408+17])
            <arg>
            Nolabel
              expression (lib/codeBits.ml[108,2408+18]..[108,2408+27])
                Pexp_ident "tposition" (lib/codeBits.ml[108,2408+18]..[108,2408+27])
          ]
    ]
  structure_item (lib/codeBits.ml[112,2471+0]..[113,2485+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[112,2471+4]..[112,2471+11])
          Ppat_var "tlexbuf" (lib/codeBits.ml[112,2471+4]..[112,2471+11])
        expression (lib/codeBits.ml[113,2485+2]..[113,2485+30])
          Pexp_construct "TypApp" (lib/codeBits.ml[113,2485+2]..[113,2485+8])
          Some
            expression (lib/codeBits.ml[113,2485+9]..[113,2485+30])
              Pexp_tuple
              [
                expression (lib/codeBits.ml[113,2485+10]..[113,2485+25])
                  Pexp_constant PConst_string("Lexing.lexbuf",(lib/codeBits.ml[113,2485+11]..[113,2485+24]),None)
                expression (lib/codeBits.ml[113,2485+27]..[113,2485+29])
                  Pexp_construct "[]" (lib/codeBits.ml[113,2485+27]..[113,2485+29])
                  None
              ]
    ]
  structure_item (lib/codeBits.ml[117,2561+0]..[118,2572+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[117,2561+4]..[117,2561+8])
          Ppat_var "tobj" (lib/codeBits.ml[117,2561+4]..[117,2561+8])
        expression (lib/codeBits.ml[118,2572+2]..[118,2572+22])
          Pexp_construct "TypApp" (lib/codeBits.ml[118,2572+2]..[118,2572+8])
          Some
            expression (lib/codeBits.ml[118,2572+9]..[118,2572+22])
              Pexp_tuple
              [
                expression (lib/codeBits.ml[118,2572+10]..[118,2572+17])
                  Pexp_constant PConst_string("Obj.t",(lib/codeBits.ml[118,2572+11]..[118,2572+16]),None)
                expression (lib/codeBits.ml[118,2572+19]..[118,2572+21])
                  Pexp_construct "[]" (lib/codeBits.ml[118,2572+19]..[118,2572+21])
                  None
              ]
    ]
  structure_item (lib/codeBits.ml[122,2629+0]..[123,2648+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[122,2629+4]..[122,2629+8])
          Ppat_var "tvar" (lib/codeBits.ml[122,2629+4]..[122,2629+8])
        expression (lib/codeBits.ml[122,2629+9]..[123,2648+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[122,2629+9]..[122,2629+10])
            Ppat_var "x" (lib/codeBits.ml[122,2629+9]..[122,2629+10])
          expression (lib/codeBits.ml[122,2629+11]..[123,2648+10])
            Pexp_constraint
            expression (lib/codeBits.ml[123,2648+2]..[123,2648+10])
              Pexp_construct "TypVar" (lib/codeBits.ml[123,2648+2]..[123,2648+8])
              Some
                expression (lib/codeBits.ml[123,2648+9]..[123,2648+10])
                  Pexp_ident "x" (lib/codeBits.ml[123,2648+9]..[123,2648+10])
            core_type (lib/codeBits.ml[122,2629+13]..[122,2629+16])
              Ptyp_constr "typ" (lib/codeBits.ml[122,2629+13]..[122,2629+16])
              []
    ]
  structure_item (lib/codeBits.ml[127,2691+0]..[131,2748+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[127,2691+4]..[127,2691+10])
          Ppat_var "scheme" (lib/codeBits.ml[127,2691+4]..[127,2691+10])
        expression (lib/codeBits.ml[127,2691+11]..[131,2748+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[127,2691+11]..[127,2691+13])
            Ppat_var "qs" (lib/codeBits.ml[127,2691+11]..[127,2691+13])
          expression (lib/codeBits.ml[127,2691+14]..[131,2748+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/codeBits.ml[127,2691+14]..[127,2691+15])
              Ppat_var "t" (lib/codeBits.ml[127,2691+14]..[127,2691+15])
            expression (lib/codeBits.ml[128,2709+2]..[131,2748+3])
              Pexp_record
              [
                "quantifiers" (lib/codeBits.ml[129,2713+4]..[129,2713+15])
                  expression (lib/codeBits.ml[129,2713+18]..[129,2713+20])
                    Pexp_ident "qs" (lib/codeBits.ml[129,2713+18]..[129,2713+20])
                "body" (lib/codeBits.ml[130,2735+4]..[130,2735+8])
                  expression (lib/codeBits.ml[130,2735+11]..[130,2735+12])
                    Pexp_ident "t" (lib/codeBits.ml[130,2735+11]..[130,2735+12])
              ]
              None
    ]
  structure_item (lib/codeBits.ml[135,2818+0]..[136,2838+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[135,2818+4]..[135,2818+15])
          Ppat_var "type2scheme" (lib/codeBits.ml[135,2818+4]..[135,2818+15])
        expression (lib/codeBits.ml[135,2818+16]..[136,2838+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[135,2818+16]..[135,2818+17])
            Ppat_var "t" (lib/codeBits.ml[135,2818+16]..[135,2818+17])
          expression (lib/codeBits.ml[136,2838+2]..[136,2838+13])
            Pexp_apply
            expression (lib/codeBits.ml[136,2838+2]..[136,2838+8])
              Pexp_ident "scheme" (lib/codeBits.ml[136,2838+2]..[136,2838+8])
            [
              <arg>
              Nolabel
                expression (lib/codeBits.ml[136,2838+9]..[136,2838+11])
                  Pexp_construct "[]" (lib/codeBits.ml[136,2838+9]..[136,2838+11])
                  None
              <arg>
              Nolabel
                expression (lib/codeBits.ml[136,2838+12]..[136,2838+13])
                  Pexp_ident "t" (lib/codeBits.ml[136,2838+12]..[136,2838+13])
            ]
    ]
  structure_item (lib/codeBits.ml[140,2917+0]..[141,2936+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[140,2917+4]..[140,2917+12])
          Ppat_var "annotate" (lib/codeBits.ml[140,2917+4]..[140,2917+12])
        expression (lib/codeBits.ml[140,2917+13]..[141,2936+27]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[140,2917+13]..[140,2917+14])
            Ppat_var "e" (lib/codeBits.ml[140,2917+13]..[140,2917+14])
          expression (lib/codeBits.ml[140,2917+15]..[141,2936+27]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/codeBits.ml[140,2917+15]..[140,2917+16])
              Ppat_var "t" (lib/codeBits.ml[140,2917+15]..[140,2917+16])
            expression (lib/codeBits.ml[141,2936+2]..[141,2936+27])
              Pexp_construct "EAnnot" (lib/codeBits.ml[141,2936+2]..[141,2936+8])
              Some
                expression (lib/codeBits.ml[141,2936+9]..[141,2936+27])
                  Pexp_tuple
                  [
                    expression (lib/codeBits.ml[141,2936+10]..[141,2936+11])
                      Pexp_ident "e" (lib/codeBits.ml[141,2936+10]..[141,2936+11])
                    expression (lib/codeBits.ml[141,2936+13]..[141,2936+26])
                      Pexp_apply
                      expression (lib/codeBits.ml[141,2936+13]..[141,2936+24])
                        Pexp_ident "type2scheme" (lib/codeBits.ml[141,2936+13]..[141,2936+24])
                      [
                        <arg>
                        Nolabel
                          expression (lib/codeBits.ml[141,2936+25]..[141,2936+26])
                            Pexp_ident "t" (lib/codeBits.ml[141,2936+25]..[141,2936+26])
                      ]
                  ]
    ]
  structure_item (lib/codeBits.ml[143,2965+0]..[147,3019+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[143,2965+4]..[143,2965+11])
          Ppat_var "pat2var" (lib/codeBits.ml[143,2965+4]..[143,2965+11])
        expression (lib/codeBits.ml[143,2965+14]..[147,3019+18])
          Pexp_function
          [
            <case>
              pattern (lib/codeBits.ml[144,2988+4]..[144,2988+10])
                Ppat_construct "PVar" (lib/codeBits.ml[144,2988+4]..[144,2988+8])
                Some
                  []
                  pattern (lib/codeBits.ml[144,2988+9]..[144,2988+10])
                    Ppat_var "x" (lib/codeBits.ml[144,2988+9]..[144,2988+10])
              expression (lib/codeBits.ml[145,3002+6]..[145,3002+7])
                Pexp_ident "x" (lib/codeBits.ml[145,3002+6]..[145,3002+7])
            <case>
              pattern (lib/codeBits.ml[146,3010+4]..[146,3010+5])
                Ppat_any
              expression (lib/codeBits.ml[147,3019+6]..[147,3019+18])
                Pexp_assert
                expression (lib/codeBits.ml[147,3019+13]..[147,3019+18])
                  Pexp_construct "false" (lib/codeBits.ml[147,3019+13]..[147,3019+18])
                  None
          ]
    ]
  structure_item (lib/codeBits.ml[152,3132+0]..[162,3426+34])
    Pstr_value Rec
    [
      <def>
        pattern (lib/codeBits.ml[152,3132+8]..[152,3132+16])
          Ppat_var "simplify" (lib/codeBits.ml[152,3132+8]..[152,3132+16])
        expression (lib/codeBits.ml[152,3132+19]..[162,3426+34])
          Pexp_function
          [
            <case>
              pattern (lib/codeBits.ml[153,3160+4]..[153,3160+6])
                Ppat_construct "[]" (lib/codeBits.ml[153,3160+4]..[153,3160+6])
                None
              expression (lib/codeBits.ml[154,3170+6]..[154,3170+8])
                Pexp_construct "[]" (lib/codeBits.ml[154,3170+6]..[154,3170+8])
                None
            <case>
              pattern (lib/codeBits.ml[155,3179+4]..[155,3179+34])
                Ppat_construct "::" (lib/codeBits.ml[155,3179+23]..[155,3179+25])
                Some
                  []
                  pattern (lib/codeBits.ml[155,3179+4]..[155,3179+34]) ghost
                    Ppat_tuple
                    [
                      pattern (lib/codeBits.ml[155,3179+4]..[155,3179+22])
                        Ppat_tuple
                        [
                          pattern (lib/codeBits.ml[155,3179+5]..[155,3179+12])
                            Ppat_construct "PVar" (lib/codeBits.ml[155,3179+5]..[155,3179+9])
                            Some
                              []
                              pattern (lib/codeBits.ml[155,3179+10]..[155,3179+12])
                                Ppat_var "v1" (lib/codeBits.ml[155,3179+10]..[155,3179+12])
                          pattern (lib/codeBits.ml[155,3179+14]..[155,3179+21])
                            Ppat_construct "EVar" (lib/codeBits.ml[155,3179+14]..[155,3179+18])
                            Some
                              []
                              pattern (lib/codeBits.ml[155,3179+19]..[155,3179+21])
                                Ppat_var "v2" (lib/codeBits.ml[155,3179+19]..[155,3179+21])
                        ]
                      pattern (lib/codeBits.ml[155,3179+26]..[155,3179+34])
                        Ppat_var "bindings" (lib/codeBits.ml[155,3179+26]..[155,3179+34])
                    ]
              <when>
                expression (lib/codeBits.ml[155,3179+40]..[155,3179+47])
                  Pexp_apply
                  expression (lib/codeBits.ml[155,3179+43]..[155,3179+44])
                    Pexp_ident "=" (lib/codeBits.ml[155,3179+43]..[155,3179+44])
                  [
                    <arg>
                    Nolabel
                      expression (lib/codeBits.ml[155,3179+40]..[155,3179+42])
                        Pexp_ident "v1" (lib/codeBits.ml[155,3179+40]..[155,3179+42])
                    <arg>
                    Nolabel
                      expression (lib/codeBits.ml[155,3179+45]..[155,3179+47])
                        Pexp_ident "v2" (lib/codeBits.ml[155,3179+45]..[155,3179+47])
                  ]
              expression (lib/codeBits.ml[157,3271+6]..[157,3271+23])
                Pexp_apply
                expression (lib/codeBits.ml[157,3271+6]..[157,3271+14])
                  Pexp_ident "simplify" (lib/codeBits.ml[157,3271+6]..[157,3271+14])
                [
                  <arg>
                  Nolabel
                    expression (lib/codeBits.ml[157,3271+15]..[157,3271+23])
                      Pexp_ident "bindings" (lib/codeBits.ml[157,3271+15]..[157,3271+23])
                ]
            <case>
              pattern (lib/codeBits.ml[158,3295+4]..[158,3295+35])
                Ppat_construct "::" (lib/codeBits.ml[158,3295+24]..[158,3295+26])
                Some
                  []
                  pattern (lib/codeBits.ml[158,3295+4]..[158,3295+35]) ghost
                    Ppat_tuple
                    [
                      pattern (lib/codeBits.ml[158,3295+4]..[158,3295+23])
                        Ppat_tuple
                        [
                          pattern (lib/codeBits.ml[158,3295+5]..[158,3295+14])
                            Ppat_construct "PWildcard" (lib/codeBits.ml[158,3295+5]..[158,3295+14])
                            None
                          pattern (lib/codeBits.ml[158,3295+16]..[158,3295+22])
                            Ppat_construct "EVar" (lib/codeBits.ml[158,3295+16]..[158,3295+20])
                            Some
                              []
                              pattern (lib/codeBits.ml[158,3295+21]..[158,3295+22])
                                Ppat_any
                        ]
                      pattern (lib/codeBits.ml[158,3295+27]..[158,3295+35])
                        Ppat_var "bindings" (lib/codeBits.ml[158,3295+27]..[158,3295+35])
                    ]
              expression (lib/codeBits.ml[160,3375+6]..[160,3375+23])
                Pexp_apply
                expression (lib/codeBits.ml[160,3375+6]..[160,3375+14])
                  Pexp_ident "simplify" (lib/codeBits.ml[160,3375+6]..[160,3375+14])
                [
                  <arg>
                  Nolabel
                    expression (lib/codeBits.ml[160,3375+15]..[160,3375+23])
                      Pexp_ident "bindings" (lib/codeBits.ml[160,3375+15]..[160,3375+23])
                ]
            <case>
              pattern (lib/codeBits.ml[161,3399+4]..[161,3399+23])
                Ppat_construct "::" (lib/codeBits.ml[161,3399+12]..[161,3399+14])
                Some
                  []
                  pattern (lib/codeBits.ml[161,3399+4]..[161,3399+23]) ghost
                    Ppat_tuple
                    [
                      pattern (lib/codeBits.ml[161,3399+4]..[161,3399+11])
                        Ppat_var "binding" (lib/codeBits.ml[161,3399+4]..[161,3399+11])
                      pattern (lib/codeBits.ml[161,3399+15]..[161,3399+23])
                        Ppat_var "bindings" (lib/codeBits.ml[161,3399+15]..[161,3399+23])
                    ]
              expression (lib/codeBits.ml[162,3426+6]..[162,3426+34])
                Pexp_construct "::" (lib/codeBits.ml[162,3426+14]..[162,3426+16])
                Some
                  expression (lib/codeBits.ml[162,3426+6]..[162,3426+34]) ghost
                    Pexp_tuple
                    [
                      expression (lib/codeBits.ml[162,3426+6]..[162,3426+13])
                        Pexp_ident "binding" (lib/codeBits.ml[162,3426+6]..[162,3426+13])
                      expression (lib/codeBits.ml[162,3426+17]..[162,3426+34])
                        Pexp_apply
                        expression (lib/codeBits.ml[162,3426+17]..[162,3426+25])
                          Pexp_ident "simplify" (lib/codeBits.ml[162,3426+17]..[162,3426+25])
                        [
                          <arg>
                          Nolabel
                            expression (lib/codeBits.ml[162,3426+26]..[162,3426+34])
                              Pexp_ident "bindings" (lib/codeBits.ml[162,3426+26]..[162,3426+34])
                        ]
                    ]
          ]
    ]
  structure_item (lib/codeBits.ml[166,3529+0]..[175,3760+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[166,3529+4]..[166,3529+8])
          Ppat_var "blet" (lib/codeBits.ml[166,3529+4]..[166,3529+8])
        expression (lib/codeBits.ml[166,3529+9]..[175,3760+27]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[166,3529+9]..[166,3529+25])
            Ppat_tuple
            [
              pattern (lib/codeBits.ml[166,3529+10]..[166,3529+18])
                Ppat_var "bindings" (lib/codeBits.ml[166,3529+10]..[166,3529+18])
              pattern (lib/codeBits.ml[166,3529+20]..[166,3529+24])
                Ppat_var "body" (lib/codeBits.ml[166,3529+20]..[166,3529+24])
            ]
          expression (lib/codeBits.ml[167,3557+2]..[175,3760+27])
            Pexp_let Nonrec
            [
              <def>
                pattern (lib/codeBits.ml[167,3557+6]..[167,3557+14])
                  Ppat_var "bindings" (lib/codeBits.ml[167,3557+6]..[167,3557+14])
                expression (lib/codeBits.ml[167,3557+17]..[167,3557+34])
                  Pexp_apply
                  expression (lib/codeBits.ml[167,3557+17]..[167,3557+25])
                    Pexp_ident "simplify" (lib/codeBits.ml[167,3557+17]..[167,3557+25])
                  [
                    <arg>
                    Nolabel
                      expression (lib/codeBits.ml[167,3557+26]..[167,3557+34])
                        Pexp_ident "bindings" (lib/codeBits.ml[167,3557+26]..[167,3557+34])
                  ]
            ]
            expression (lib/codeBits.ml[168,3595+2]..[175,3760+27])
              Pexp_match
              expression (lib/codeBits.ml[168,3595+8]..[168,3595+22])
                Pexp_tuple
                [
                  expression (lib/codeBits.ml[168,3595+8]..[168,3595+16])
                    Pexp_ident "bindings" (lib/codeBits.ml[168,3595+8]..[168,3595+16])
                  expression (lib/codeBits.ml[168,3595+18]..[168,3595+22])
                    Pexp_ident "body" (lib/codeBits.ml[168,3595+18]..[168,3595+22])
                ]
              [
                <case>
                  pattern (lib/codeBits.ml[169,3623+4]..[169,3623+9])
                    Ppat_tuple
                    [
                      pattern (lib/codeBits.ml[169,3623+4]..[169,3623+6])
                        Ppat_construct "[]" (lib/codeBits.ml[169,3623+4]..[169,3623+6])
                        None
                      pattern (lib/codeBits.ml[169,3623+8]..[169,3623+9])
                        Ppat_any
                    ]
                  expression (lib/codeBits.ml[170,3636+6]..[170,3636+10])
                    Pexp_ident "body" (lib/codeBits.ml[170,3636+6]..[170,3636+10])
                <case>
                  pattern (lib/codeBits.ml[171,3647+4]..[171,3647+27])
                    Ppat_tuple
                    [
                      pattern (lib/codeBits.ml[171,3647+4]..[171,3647+18])
                        Ppat_construct "::" (lib/codeBits.ml[171,3647+6]..[171,3647+18]) ghost
                        Some
                          []
                          pattern (lib/codeBits.ml[171,3647+6]..[171,3647+18]) ghost
                            Ppat_tuple
                            [
                              pattern (lib/codeBits.ml[171,3647+6]..[171,3647+16])
                                Ppat_tuple
                                [
                                  pattern (lib/codeBits.ml[171,3647+6]..[171,3647+13])
                                    Ppat_construct "PVar" (lib/codeBits.ml[171,3647+6]..[171,3647+10])
                                    Some
                                      []
                                      pattern (lib/codeBits.ml[171,3647+11]..[171,3647+13])
                                        Ppat_var "x1" (lib/codeBits.ml[171,3647+11]..[171,3647+13])
                                  pattern (lib/codeBits.ml[171,3647+15]..[171,3647+16])
                                    Ppat_var "e" (lib/codeBits.ml[171,3647+15]..[171,3647+16])
                                ]
                              pattern (lib/codeBits.ml[171,3647+17]..[171,3647+18]) ghost
                                Ppat_construct "[]" (lib/codeBits.ml[171,3647+17]..[171,3647+18]) ghost
                                None
                            ]
                      pattern (lib/codeBits.ml[171,3647+20]..[171,3647+27])
                        Ppat_construct "EVar" (lib/codeBits.ml[171,3647+20]..[171,3647+24])
                        Some
                          []
                          pattern (lib/codeBits.ml[171,3647+25]..[171,3647+27])
                            Ppat_var "x2" (lib/codeBits.ml[171,3647+25]..[171,3647+27])
                    ]
                  <when>
                    expression (lib/codeBits.ml[171,3647+33]..[171,3647+40])
                      Pexp_apply
                      expression (lib/codeBits.ml[171,3647+36]..[171,3647+37])
                        Pexp_ident "=" (lib/codeBits.ml[171,3647+36]..[171,3647+37])
                      [
                        <arg>
                        Nolabel
                          expression (lib/codeBits.ml[171,3647+33]..[171,3647+35])
                            Pexp_ident "x1" (lib/codeBits.ml[171,3647+33]..[171,3647+35])
                        <arg>
                        Nolabel
                          expression (lib/codeBits.ml[171,3647+38]..[171,3647+40])
                            Pexp_ident "x2" (lib/codeBits.ml[171,3647+38]..[171,3647+40])
                      ]
                  expression (lib/codeBits.ml[173,3740+6]..[173,3740+7])
                    Pexp_ident "e" (lib/codeBits.ml[173,3740+6]..[173,3740+7])
                <case>
                  pattern (lib/codeBits.ml[174,3748+4]..[174,3748+8])
                    Ppat_tuple
                    [
                      pattern (lib/codeBits.ml[174,3748+4]..[174,3748+5])
                        Ppat_any
                      pattern (lib/codeBits.ml[174,3748+7]..[174,3748+8])
                        Ppat_any
                    ]
                  expression (lib/codeBits.ml[175,3760+6]..[175,3760+27])
                    Pexp_construct "ELet" (lib/codeBits.ml[175,3760+6]..[175,3760+10])
                    Some
                      expression (lib/codeBits.ml[175,3760+11]..[175,3760+27])
                        Pexp_tuple
                        [
                          expression (lib/codeBits.ml[175,3760+12]..[175,3760+20])
                            Pexp_ident "bindings" (lib/codeBits.ml[175,3760+12]..[175,3760+20])
                          expression (lib/codeBits.ml[175,3760+22]..[175,3760+26])
                            Pexp_ident "body" (lib/codeBits.ml[175,3760+22]..[175,3760+26])
                        ]
              ]
    ]
  structure_item (lib/codeBits.ml[177,3789+0]..[178,3821+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[177,3789+4]..[177,3789+8])
          Ppat_var "mlet" (lib/codeBits.ml[177,3789+4]..[177,3789+8])
        expression (lib/codeBits.ml[177,3789+9]..[178,3821+43]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[177,3789+9]..[177,3789+16])
            Ppat_var "formals" (lib/codeBits.ml[177,3789+9]..[177,3789+16])
          expression (lib/codeBits.ml[177,3789+17]..[178,3821+43]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/codeBits.ml[177,3789+17]..[177,3789+24])
              Ppat_var "actuals" (lib/codeBits.ml[177,3789+17]..[177,3789+24])
            expression (lib/codeBits.ml[177,3789+25]..[178,3821+43]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/codeBits.ml[177,3789+25]..[177,3789+29])
                Ppat_var "body" (lib/codeBits.ml[177,3789+25]..[177,3789+29])
              expression (lib/codeBits.ml[178,3821+2]..[178,3821+43])
                Pexp_apply
                expression (lib/codeBits.ml[178,3821+2]..[178,3821+6])
                  Pexp_ident "blet" (lib/codeBits.ml[178,3821+2]..[178,3821+6])
                [
                  <arg>
                  Nolabel
                    expression (lib/codeBits.ml[178,3821+7]..[178,3821+43])
                      Pexp_tuple
                      [
                        expression (lib/codeBits.ml[178,3821+8]..[178,3821+36])
                          Pexp_apply
                          expression (lib/codeBits.ml[178,3821+8]..[178,3821+20])
                            Pexp_ident "List.combine" (lib/codeBits.ml[178,3821+8]..[178,3821+20])
                          [
                            <arg>
                            Nolabel
                              expression (lib/codeBits.ml[178,3821+21]..[178,3821+28])
                                Pexp_ident "formals" (lib/codeBits.ml[178,3821+21]..[178,3821+28])
                            <arg>
                            Nolabel
                              expression (lib/codeBits.ml[178,3821+29]..[178,3821+36])
                                Pexp_ident "actuals" (lib/codeBits.ml[178,3821+29]..[178,3821+36])
                          ]
                        expression (lib/codeBits.ml[178,3821+38]..[178,3821+42])
                          Pexp_ident "body" (lib/codeBits.ml[178,3821+38]..[178,3821+42])
                      ]
                ]
    ]
  structure_item (lib/codeBits.ml[182,3920+0]..[197,4381+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[182,3920+4]..[182,3920+11])
          Ppat_var "eletand" (lib/codeBits.ml[182,3920+4]..[182,3920+11])
        expression (lib/codeBits.ml[182,3920+12]..[197,4381+48]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[182,3920+12]..[182,3920+28])
            Ppat_tuple
            [
              pattern (lib/codeBits.ml[182,3920+13]..[182,3920+21])
                Ppat_var "bindings" (lib/codeBits.ml[182,3920+13]..[182,3920+21])
              pattern (lib/codeBits.ml[182,3920+23]..[182,3920+27])
                Ppat_var "body" (lib/codeBits.ml[182,3920+23]..[182,3920+27])
            ]
          expression (lib/codeBits.ml[183,3951+2]..[197,4381+48])
            Pexp_let Nonrec
            [
              <def>
                pattern (lib/codeBits.ml[183,3951+6]..[183,3951+14])
                  Ppat_var "bindings" (lib/codeBits.ml[183,3951+6]..[183,3951+14])
                expression (lib/codeBits.ml[183,3951+17]..[183,3951+34])
                  Pexp_apply
                  expression (lib/codeBits.ml[183,3951+17]..[183,3951+25])
                    Pexp_ident "simplify" (lib/codeBits.ml[183,3951+17]..[183,3951+25])
                  [
                    <arg>
                    Nolabel
                      expression (lib/codeBits.ml[183,3951+26]..[183,3951+34])
                        Pexp_ident "bindings" (lib/codeBits.ml[183,3951+26]..[183,3951+34])
                  ]
            ]
            expression (lib/codeBits.ml[184,3989+2]..[197,4381+48])
              Pexp_match
              expression (lib/codeBits.ml[184,3989+8]..[184,3989+22])
                Pexp_tuple
                [
                  expression (lib/codeBits.ml[184,3989+8]..[184,3989+16])
                    Pexp_ident "bindings" (lib/codeBits.ml[184,3989+8]..[184,3989+16])
                  expression (lib/codeBits.ml[184,3989+18]..[184,3989+22])
                    Pexp_ident "body" (lib/codeBits.ml[184,3989+18]..[184,3989+22])
                ]
              [
                <case>
                  pattern (lib/codeBits.ml[185,4017+4]..[185,4017+9])
                    Ppat_tuple
                    [
                      pattern (lib/codeBits.ml[185,4017+4]..[185,4017+6])
                        Ppat_construct "[]" (lib/codeBits.ml[185,4017+4]..[185,4017+6])
                        None
                      pattern (lib/codeBits.ml[185,4017+8]..[185,4017+9])
                        Ppat_any
                    ]
                  expression (lib/codeBits.ml[187,4070+6]..[187,4070+10])
                    Pexp_ident "body" (lib/codeBits.ml[187,4070+6]..[187,4070+10])
                <case>
                  pattern (lib/codeBits.ml[188,4081+4]..[188,4081+27])
                    Ppat_tuple
                    [
                      pattern (lib/codeBits.ml[188,4081+4]..[188,4081+18])
                        Ppat_construct "::" (lib/codeBits.ml[188,4081+6]..[188,4081+18]) ghost
                        Some
                          []
                          pattern (lib/codeBits.ml[188,4081+6]..[188,4081+18]) ghost
                            Ppat_tuple
                            [
                              pattern (lib/codeBits.ml[188,4081+6]..[188,4081+16])
                                Ppat_tuple
                                [
                                  pattern (lib/codeBits.ml[188,4081+6]..[188,4081+13])
                                    Ppat_construct "PVar" (lib/codeBits.ml[188,4081+6]..[188,4081+10])
                                    Some
                                      []
                                      pattern (lib/codeBits.ml[188,4081+11]..[188,4081+13])
                                        Ppat_var "x1" (lib/codeBits.ml[188,4081+11]..[188,4081+13])
                                  pattern (lib/codeBits.ml[188,4081+15]..[188,4081+16])
                                    Ppat_var "e" (lib/codeBits.ml[188,4081+15]..[188,4081+16])
                                ]
                              pattern (lib/codeBits.ml[188,4081+17]..[188,4081+18]) ghost
                                Ppat_construct "[]" (lib/codeBits.ml[188,4081+17]..[188,4081+18]) ghost
                                None
                            ]
                      pattern (lib/codeBits.ml[188,4081+20]..[188,4081+27])
                        Ppat_construct "EVar" (lib/codeBits.ml[188,4081+20]..[188,4081+24])
                        Some
                          []
                          pattern (lib/codeBits.ml[188,4081+25]..[188,4081+27])
                            Ppat_var "x2" (lib/codeBits.ml[188,4081+25]..[188,4081+27])
                    ]
                  <when>
                    expression (lib/codeBits.ml[188,4081+33]..[188,4081+40])
                      Pexp_apply
                      expression (lib/codeBits.ml[188,4081+36]..[188,4081+37])
                        Pexp_ident "=" (lib/codeBits.ml[188,4081+36]..[188,4081+37])
                      [
                        <arg>
                        Nolabel
                          expression (lib/codeBits.ml[188,4081+33]..[188,4081+35])
                            Pexp_ident "x1" (lib/codeBits.ml[188,4081+33]..[188,4081+35])
                        <arg>
                        Nolabel
                          expression (lib/codeBits.ml[188,4081+38]..[188,4081+40])
                            Pexp_ident "x2" (lib/codeBits.ml[188,4081+38]..[188,4081+40])
                      ]
                  expression (lib/codeBits.ml[190,4174+6]..[190,4174+7])
                    Pexp_ident "e" (lib/codeBits.ml[190,4174+6]..[190,4174+7])
                <case>
                  pattern (lib/codeBits.ml[191,4182+4]..[191,4182+12])
                    Ppat_tuple
                    [
                      pattern (lib/codeBits.ml[191,4182+4]..[191,4182+9])
                        Ppat_construct "::" (lib/codeBits.ml[191,4182+6]..[191,4182+9]) ghost
                        Some
                          []
                          pattern (lib/codeBits.ml[191,4182+6]..[191,4182+9]) ghost
                            Ppat_tuple
                            [
                              pattern (lib/codeBits.ml[191,4182+6]..[191,4182+7])
                                Ppat_any
                              pattern (lib/codeBits.ml[191,4182+8]..[191,4182+9]) ghost
                                Ppat_construct "[]" (lib/codeBits.ml[191,4182+8]..[191,4182+9]) ghost
                                None
                            ]
                      pattern (lib/codeBits.ml[191,4182+11]..[191,4182+12])
                        Ppat_any
                    ]
                  expression (lib/codeBits.ml[193,4236+6]..[193,4236+27])
                    Pexp_construct "ELet" (lib/codeBits.ml[193,4236+6]..[193,4236+10])
                    Some
                      expression (lib/codeBits.ml[193,4236+11]..[193,4236+27])
                        Pexp_tuple
                        [
                          expression (lib/codeBits.ml[193,4236+12]..[193,4236+20])
                            Pexp_ident "bindings" (lib/codeBits.ml[193,4236+12]..[193,4236+20])
                          expression (lib/codeBits.ml[193,4236+22]..[193,4236+26])
                            Pexp_ident "body" (lib/codeBits.ml[193,4236+22]..[193,4236+26])
                        ]
                <case>
                  pattern (lib/codeBits.ml[194,4264+4]..[194,4264+18])
                    Ppat_tuple
                    [
                      pattern (lib/codeBits.ml[194,4264+4]..[194,4264+15])
                        Ppat_construct "::" (lib/codeBits.ml[194,4264+6]..[194,4264+8])
                        Some
                          []
                          pattern (lib/codeBits.ml[194,4264+4]..[194,4264+15]) ghost
                            Ppat_tuple
                            [
                              pattern (lib/codeBits.ml[194,4264+4]..[194,4264+5])
                                Ppat_any
                              pattern (lib/codeBits.ml[194,4264+9]..[194,4264+15])
                                Ppat_construct "::" (lib/codeBits.ml[194,4264+11]..[194,4264+13])
                                Some
                                  []
                                  pattern (lib/codeBits.ml[194,4264+9]..[194,4264+15]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (lib/codeBits.ml[194,4264+9]..[194,4264+10])
                                        Ppat_any
                                      pattern (lib/codeBits.ml[194,4264+14]..[194,4264+15])
                                        Ppat_any
                                    ]
                            ]
                      pattern (lib/codeBits.ml[194,4264+17]..[194,4264+18])
                        Ppat_any
                    ]
                  expression (lib/codeBits.ml[196,4334+6]..[197,4381+48])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/codeBits.ml[196,4334+10]..[196,4334+21])
                          Ppat_tuple
                          [
                            pattern (lib/codeBits.ml[196,4334+10]..[196,4334+14])
                              Ppat_var "pats" (lib/codeBits.ml[196,4334+10]..[196,4334+14])
                            pattern (lib/codeBits.ml[196,4334+16]..[196,4334+21])
                              Ppat_var "exprs" (lib/codeBits.ml[196,4334+16]..[196,4334+21])
                          ]
                        expression (lib/codeBits.ml[196,4334+24]..[196,4334+43])
                          Pexp_apply
                          expression (lib/codeBits.ml[196,4334+24]..[196,4334+34])
                            Pexp_ident "List.split" (lib/codeBits.ml[196,4334+24]..[196,4334+34])
                          [
                            <arg>
                            Nolabel
                              expression (lib/codeBits.ml[196,4334+35]..[196,4334+43])
                                Pexp_ident "bindings" (lib/codeBits.ml[196,4334+35]..[196,4334+43])
                          ]
                    ]
                    expression (lib/codeBits.ml[197,4381+6]..[197,4381+48])
                      Pexp_construct "ELet" (lib/codeBits.ml[197,4381+6]..[197,4381+10])
                      Some
                        expression (lib/codeBits.ml[197,4381+11]..[197,4381+48])
                          Pexp_tuple
                          [
                            expression (lib/codeBits.ml[197,4381+12]..[197,4381+41])
                              Pexp_construct "::" (lib/codeBits.ml[197,4381+14]..[197,4381+41]) ghost
                              Some
                                expression (lib/codeBits.ml[197,4381+14]..[197,4381+41]) ghost
                                  Pexp_tuple
                                  [
                                    expression (lib/codeBits.ml[197,4381+14]..[197,4381+39])
                                      Pexp_tuple
                                      [
                                        expression (lib/codeBits.ml[197,4381+14]..[197,4381+25])
                                          Pexp_construct "PTuple" (lib/codeBits.ml[197,4381+14]..[197,4381+20])
                                          Some
                                            expression (lib/codeBits.ml[197,4381+21]..[197,4381+25])
                                              Pexp_ident "pats" (lib/codeBits.ml[197,4381+21]..[197,4381+25])
                                        expression (lib/codeBits.ml[197,4381+27]..[197,4381+39])
                                          Pexp_construct "ETuple" (lib/codeBits.ml[197,4381+27]..[197,4381+33])
                                          Some
                                            expression (lib/codeBits.ml[197,4381+34]..[197,4381+39])
                                              Pexp_ident "exprs" (lib/codeBits.ml[197,4381+34]..[197,4381+39])
                                      ]
                                    expression (lib/codeBits.ml[197,4381+40]..[197,4381+41]) ghost
                                      Pexp_construct "[]" (lib/codeBits.ml[197,4381+40]..[197,4381+41]) ghost
                                      None
                                  ]
                            expression (lib/codeBits.ml[197,4381+43]..[197,4381+47])
                              Pexp_ident "body" (lib/codeBits.ml[197,4381+43]..[197,4381+47])
                          ]
              ]
    ]
  structure_item (lib/codeBits.ml[201,4497+0]..[202,4518+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[201,4497+4]..[201,4497+18])
          Ppat_var "eraisenotfound" (lib/codeBits.ml[201,4497+4]..[201,4497+18])
        expression (lib/codeBits.ml[202,4518+2]..[202,4518+34])
          Pexp_construct "ERaise" (lib/codeBits.ml[202,4518+2]..[202,4518+8])
          Some
            expression (lib/codeBits.ml[202,4518+9]..[202,4518+34])
              Pexp_construct "EData" (lib/codeBits.ml[202,4518+10]..[202,4518+15])
              Some
                expression (lib/codeBits.ml[202,4518+16]..[202,4518+33])
                  Pexp_tuple
                  [
                    expression (lib/codeBits.ml[202,4518+17]..[202,4518+28])
                      Pexp_constant PConst_string("Not_found",(lib/codeBits.ml[202,4518+18]..[202,4518+27]),None)
                    expression (lib/codeBits.ml[202,4518+30]..[202,4518+32])
                      Pexp_construct "[]" (lib/codeBits.ml[202,4518+30]..[202,4518+32])
                      None
                  ]
    ]
  structure_item (lib/codeBits.ml[204,4554+0]..[205,4570+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[204,4554+4]..[204,4554+11])
          Ppat_var "eassert" (lib/codeBits.ml[204,4554+4]..[204,4554+11])
        expression (lib/codeBits.ml[204,4554+12]..[205,4570+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[204,4554+12]..[204,4554+13])
            Ppat_var "e" (lib/codeBits.ml[204,4554+12]..[204,4554+13])
          expression (lib/codeBits.ml[205,4570+2]..[205,4570+29])
            Pexp_construct "EApp" (lib/codeBits.ml[205,4570+2]..[205,4570+6])
            Some
              expression (lib/codeBits.ml[205,4570+7]..[205,4570+29])
                Pexp_tuple
                [
                  expression (lib/codeBits.ml[205,4570+8]..[205,4570+21])
                    Pexp_construct "EVar" (lib/codeBits.ml[205,4570+8]..[205,4570+12])
                    Some
                      expression (lib/codeBits.ml[205,4570+13]..[205,4570+21])
                        Pexp_constant PConst_string("assert",(lib/codeBits.ml[205,4570+14]..[205,4570+20]),None)
                  expression (lib/codeBits.ml[205,4570+23]..[205,4570+28])
                    Pexp_construct "::" (lib/codeBits.ml[205,4570+25]..[205,4570+28]) ghost
                    Some
                      expression (lib/codeBits.ml[205,4570+25]..[205,4570+28]) ghost
                        Pexp_tuple
                        [
                          expression (lib/codeBits.ml[205,4570+25]..[205,4570+26])
                            Pexp_ident "e" (lib/codeBits.ml[205,4570+25]..[205,4570+26])
                          expression (lib/codeBits.ml[205,4570+27]..[205,4570+28]) ghost
                            Pexp_construct "[]" (lib/codeBits.ml[205,4570+27]..[205,4570+28]) ghost
                            None
                        ]
                ]
    ]
  structure_item (lib/codeBits.ml[210,4687+0]..[211,4700+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[210,4687+4]..[210,4687+10])
          Ppat_var "bottom" (lib/codeBits.ml[210,4687+4]..[210,4687+10])
        expression (lib/codeBits.ml[211,4700+2]..[211,4700+16])
          Pexp_ident "eraisenotfound" (lib/codeBits.ml[211,4700+2]..[211,4700+16])
    ]
  structure_item (lib/codeBits.ml[215,4744+0]..[216,4764+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[215,4744+4]..[215,4744+17]) ghost
          Ppat_constraint
          pattern (lib/codeBits.ml[215,4744+4]..[215,4744+10])
            Ppat_var "efalse" (lib/codeBits.ml[215,4744+4]..[215,4744+10])
          core_type (lib/codeBits.ml[215,4744+13]..[215,4744+17]) ghost
            Ptyp_poly
            core_type (lib/codeBits.ml[215,4744+13]..[215,4744+17])
              Ptyp_constr "expr" (lib/codeBits.ml[215,4744+13]..[215,4744+17])
              []
        expression (lib/codeBits.ml[215,4744+4]..[216,4764+21])
          Pexp_constraint
          expression (lib/codeBits.ml[216,4764+2]..[216,4764+21])
            Pexp_construct "EData" (lib/codeBits.ml[216,4764+2]..[216,4764+7])
            Some
              expression (lib/codeBits.ml[216,4764+8]..[216,4764+21])
                Pexp_tuple
                [
                  expression (lib/codeBits.ml[216,4764+9]..[216,4764+16])
                    Pexp_constant PConst_string("false",(lib/codeBits.ml[216,4764+10]..[216,4764+15]),None)
                  expression (lib/codeBits.ml[216,4764+18]..[216,4764+20])
                    Pexp_construct "[]" (lib/codeBits.ml[216,4764+18]..[216,4764+20])
                    None
                ]
          core_type (lib/codeBits.ml[215,4744+13]..[215,4744+17])
            Ptyp_constr "expr" (lib/codeBits.ml[215,4744+13]..[215,4744+17])
            []
    ]
  structure_item (lib/codeBits.ml[218,4787+0]..[219,4806+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[218,4787+4]..[218,4787+16]) ghost
          Ppat_constraint
          pattern (lib/codeBits.ml[218,4787+4]..[218,4787+9])
            Ppat_var "etrue" (lib/codeBits.ml[218,4787+4]..[218,4787+9])
          core_type (lib/codeBits.ml[218,4787+12]..[218,4787+16]) ghost
            Ptyp_poly
            core_type (lib/codeBits.ml[218,4787+12]..[218,4787+16])
              Ptyp_constr "expr" (lib/codeBits.ml[218,4787+12]..[218,4787+16])
              []
        expression (lib/codeBits.ml[218,4787+4]..[219,4806+20])
          Pexp_constraint
          expression (lib/codeBits.ml[219,4806+2]..[219,4806+20])
            Pexp_construct "EData" (lib/codeBits.ml[219,4806+2]..[219,4806+7])
            Some
              expression (lib/codeBits.ml[219,4806+8]..[219,4806+20])
                Pexp_tuple
                [
                  expression (lib/codeBits.ml[219,4806+9]..[219,4806+15])
                    Pexp_constant PConst_string("true",(lib/codeBits.ml[219,4806+10]..[219,4806+14]),None)
                  expression (lib/codeBits.ml[219,4806+17]..[219,4806+19])
                    Pexp_construct "[]" (lib/codeBits.ml[219,4806+17]..[219,4806+19])
                    None
                ]
          core_type (lib/codeBits.ml[218,4787+12]..[218,4787+16])
            Ptyp_constr "expr" (lib/codeBits.ml[218,4787+12]..[218,4787+16])
            []
    ]
  structure_item (lib/codeBits.ml[221,4828+0]..[222,4847+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[221,4828+4]..[221,4828+14])
          Ppat_var "eboolconst" (lib/codeBits.ml[221,4828+4]..[221,4828+14])
        expression (lib/codeBits.ml[221,4828+15]..[222,4847+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[221,4828+15]..[221,4828+16])
            Ppat_var "b" (lib/codeBits.ml[221,4828+15]..[221,4828+16])
          expression (lib/codeBits.ml[222,4847+2]..[222,4847+29])
            Pexp_ifthenelse
            expression (lib/codeBits.ml[222,4847+5]..[222,4847+6])
              Pexp_ident "b" (lib/codeBits.ml[222,4847+5]..[222,4847+6])
            expression (lib/codeBits.ml[222,4847+12]..[222,4847+17])
              Pexp_ident "etrue" (lib/codeBits.ml[222,4847+12]..[222,4847+17])
            Some
              expression (lib/codeBits.ml[222,4847+23]..[222,4847+29])
                Pexp_ident "efalse" (lib/codeBits.ml[222,4847+23]..[222,4847+29])
    ]
  structure_item (lib/codeBits.ml[226,4906+0]..[227,4918+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[226,4906+4]..[226,4906+9])
          Ppat_var "enone" (lib/codeBits.ml[226,4906+4]..[226,4906+9])
        expression (lib/codeBits.ml[227,4918+2]..[227,4918+20])
          Pexp_construct "EData" (lib/codeBits.ml[227,4918+2]..[227,4918+7])
          Some
            expression (lib/codeBits.ml[227,4918+8]..[227,4918+20])
              Pexp_tuple
              [
                expression (lib/codeBits.ml[227,4918+9]..[227,4918+15])
                  Pexp_constant PConst_string("None",(lib/codeBits.ml[227,4918+10]..[227,4918+14]),None)
                expression (lib/codeBits.ml[227,4918+17]..[227,4918+19])
                  Pexp_construct "[]" (lib/codeBits.ml[227,4918+17]..[227,4918+19])
                  None
              ]
    ]
  structure_item (lib/codeBits.ml[229,4940+0]..[230,4954+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[229,4940+4]..[229,4940+9])
          Ppat_var "esome" (lib/codeBits.ml[229,4940+4]..[229,4940+9])
        expression (lib/codeBits.ml[229,4940+10]..[230,4954+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[229,4940+10]..[229,4940+11])
            Ppat_var "e" (lib/codeBits.ml[229,4940+10]..[229,4940+11])
          expression (lib/codeBits.ml[230,4954+2]..[230,4954+21])
            Pexp_construct "EData" (lib/codeBits.ml[230,4954+2]..[230,4954+7])
            Some
              expression (lib/codeBits.ml[230,4954+8]..[230,4954+21])
                Pexp_tuple
                [
                  expression (lib/codeBits.ml[230,4954+9]..[230,4954+15])
                    Pexp_constant PConst_string("Some",(lib/codeBits.ml[230,4954+10]..[230,4954+14]),None)
                  expression (lib/codeBits.ml[230,4954+17]..[230,4954+20])
                    Pexp_construct "::" (lib/codeBits.ml[230,4954+18]..[230,4954+20]) ghost
                    Some
                      expression (lib/codeBits.ml[230,4954+18]..[230,4954+20]) ghost
                        Pexp_tuple
                        [
                          expression (lib/codeBits.ml[230,4954+18]..[230,4954+19])
                            Pexp_ident "e" (lib/codeBits.ml[230,4954+18]..[230,4954+19])
                          expression (lib/codeBits.ml[230,4954+19]..[230,4954+20]) ghost
                            Pexp_construct "[]" (lib/codeBits.ml[230,4954+19]..[230,4954+20]) ghost
                            None
                        ]
                ]
    ]
  structure_item (lib/codeBits.ml[234,5003+0]..[239,5086+35])
    Pstr_value Rec
    [
      <def>
        pattern (lib/codeBits.ml[234,5003+8]..[234,5003+13])
          Ppat_var "elist" (lib/codeBits.ml[234,5003+8]..[234,5003+13])
        expression (lib/codeBits.ml[234,5003+14]..[239,5086+35]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[234,5003+14]..[234,5003+16])
            Ppat_var "xs" (lib/codeBits.ml[234,5003+14]..[234,5003+16])
          expression (lib/codeBits.ml[235,5022+2]..[239,5086+35])
            Pexp_match
            expression (lib/codeBits.ml[235,5022+8]..[235,5022+10])
              Pexp_ident "xs" (lib/codeBits.ml[235,5022+8]..[235,5022+10])
            [
              <case>
                pattern (lib/codeBits.ml[236,5038+4]..[236,5038+6])
                  Ppat_construct "[]" (lib/codeBits.ml[236,5038+4]..[236,5038+6])
                  None
                expression (lib/codeBits.ml[237,5048+6]..[237,5048+22])
                  Pexp_construct "EData" (lib/codeBits.ml[237,5048+6]..[237,5048+11])
                  Some
                    expression (lib/codeBits.ml[237,5048+12]..[237,5048+22])
                      Pexp_tuple
                      [
                        expression (lib/codeBits.ml[237,5048+13]..[237,5048+17])
                          Pexp_constant PConst_string("[]",(lib/codeBits.ml[237,5048+14]..[237,5048+16]),None)
                        expression (lib/codeBits.ml[237,5048+19]..[237,5048+21])
                          Pexp_construct "[]" (lib/codeBits.ml[237,5048+19]..[237,5048+21])
                          None
                      ]
              <case>
                pattern (lib/codeBits.ml[238,5071+4]..[238,5071+11])
                  Ppat_construct "::" (lib/codeBits.ml[238,5071+6]..[238,5071+8])
                  Some
                    []
                    pattern (lib/codeBits.ml[238,5071+4]..[238,5071+11]) ghost
                      Ppat_tuple
                      [
                        pattern (lib/codeBits.ml[238,5071+4]..[238,5071+5])
                          Ppat_var "x" (lib/codeBits.ml[238,5071+4]..[238,5071+5])
                        pattern (lib/codeBits.ml[238,5071+9]..[238,5071+11])
                          Ppat_var "xs" (lib/codeBits.ml[238,5071+9]..[238,5071+11])
                      ]
                expression (lib/codeBits.ml[239,5086+6]..[239,5086+35])
                  Pexp_construct "EData" (lib/codeBits.ml[239,5086+6]..[239,5086+11])
                  Some
                    expression (lib/codeBits.ml[239,5086+12]..[239,5086+35])
                      Pexp_tuple
                      [
                        expression (lib/codeBits.ml[239,5086+13]..[239,5086+17])
                          Pexp_constant PConst_string("::",(lib/codeBits.ml[239,5086+14]..[239,5086+16]),None)
                        expression (lib/codeBits.ml[239,5086+19]..[239,5086+34])
                          Pexp_construct "::" (lib/codeBits.ml[239,5086+21]..[239,5086+34]) ghost
                          Some
                            expression (lib/codeBits.ml[239,5086+21]..[239,5086+34]) ghost
                              Pexp_tuple
                              [
                                expression (lib/codeBits.ml[239,5086+21]..[239,5086+22])
                                  Pexp_ident "x" (lib/codeBits.ml[239,5086+21]..[239,5086+22])
                                expression (lib/codeBits.ml[239,5086+24]..[239,5086+34]) ghost
                                  Pexp_construct "::" (lib/codeBits.ml[239,5086+24]..[239,5086+34]) ghost
                                  Some
                                    expression (lib/codeBits.ml[239,5086+24]..[239,5086+34]) ghost
                                      Pexp_tuple
                                      [
                                        expression (lib/codeBits.ml[239,5086+24]..[239,5086+32])
                                          Pexp_apply
                                          expression (lib/codeBits.ml[239,5086+24]..[239,5086+29])
                                            Pexp_ident "elist" (lib/codeBits.ml[239,5086+24]..[239,5086+29])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/codeBits.ml[239,5086+30]..[239,5086+32])
                                                Pexp_ident "xs" (lib/codeBits.ml[239,5086+30]..[239,5086+32])
                                          ]
                                        expression (lib/codeBits.ml[239,5086+33]..[239,5086+34]) ghost
                                          Pexp_construct "[]" (lib/codeBits.ml[239,5086+33]..[239,5086+34]) ghost
                                          None
                                      ]
                              ]
                      ]
            ]
    ]
  structure_item (lib/codeBits.ml[243,5161+0]..[244,5184+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[243,5161+4]..[243,5161+8])
          Ppat_var "pint" (lib/codeBits.ml[243,5161+4]..[243,5161+8])
        expression (lib/codeBits.ml[243,5161+9]..[244,5184+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[243,5161+9]..[243,5161+10])
            Ppat_var "k" (lib/codeBits.ml[243,5161+9]..[243,5161+10])
          expression (lib/codeBits.ml[243,5161+11]..[244,5184+29])
            Pexp_constraint
            expression (lib/codeBits.ml[244,5184+2]..[244,5184+29])
              Pexp_construct "PData" (lib/codeBits.ml[244,5184+2]..[244,5184+7])
              Some
                expression (lib/codeBits.ml[244,5184+8]..[244,5184+29])
                  Pexp_tuple
                  [
                    expression (lib/codeBits.ml[244,5184+9]..[244,5184+24])
                      Pexp_apply
                      expression (lib/codeBits.ml[244,5184+9]..[244,5184+22])
                        Pexp_ident "string_of_int" (lib/codeBits.ml[244,5184+9]..[244,5184+22])
                      [
                        <arg>
                        Nolabel
                          expression (lib/codeBits.ml[244,5184+23]..[244,5184+24])
                            Pexp_ident "k" (lib/codeBits.ml[244,5184+23]..[244,5184+24])
                      ]
                    expression (lib/codeBits.ml[244,5184+26]..[244,5184+28])
                      Pexp_construct "[]" (lib/codeBits.ml[244,5184+26]..[244,5184+28])
                      None
                  ]
            core_type (lib/codeBits.ml[243,5161+13]..[243,5161+20])
              Ptyp_constr "pattern" (lib/codeBits.ml[243,5161+13]..[243,5161+20])
              []
    ]
  structure_item (lib/codeBits.ml[248,5255+0]..[249,5282+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[248,5255+4]..[248,5255+9])
          Ppat_var "arrow" (lib/codeBits.ml[248,5255+4]..[248,5255+9])
        expression (lib/codeBits.ml[248,5255+10]..[249,5282+22]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[248,5255+10]..[248,5255+13])
            Ppat_var "typ" (lib/codeBits.ml[248,5255+10]..[248,5255+13])
          expression (lib/codeBits.ml[248,5255+14]..[249,5282+22]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/codeBits.ml[248,5255+14]..[248,5255+18])
              Ppat_var "body" (lib/codeBits.ml[248,5255+14]..[248,5255+18])
            expression (lib/codeBits.ml[248,5255+19]..[249,5282+22])
              Pexp_constraint
              expression (lib/codeBits.ml[249,5282+2]..[249,5282+22])
                Pexp_construct "TypArrow" (lib/codeBits.ml[249,5282+2]..[249,5282+10])
                Some
                  expression (lib/codeBits.ml[249,5282+11]..[249,5282+22])
                    Pexp_tuple
                    [
                      expression (lib/codeBits.ml[249,5282+12]..[249,5282+15])
                        Pexp_ident "typ" (lib/codeBits.ml[249,5282+12]..[249,5282+15])
                      expression (lib/codeBits.ml[249,5282+17]..[249,5282+21])
                        Pexp_ident "body" (lib/codeBits.ml[249,5282+17]..[249,5282+21])
                    ]
              core_type (lib/codeBits.ml[248,5255+21]..[248,5255+24])
                Ptyp_constr "typ" (lib/codeBits.ml[248,5255+21]..[248,5255+24])
                []
    ]
  structure_item (lib/codeBits.ml[251,5306+0]..[255,5381+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[251,5306+4]..[251,5306+11])
          Ppat_var "arrowif" (lib/codeBits.ml[251,5306+4]..[251,5306+11])
        expression (lib/codeBits.ml[251,5306+12]..[255,5381+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[251,5306+12]..[251,5306+16])
            Ppat_var "flag" (lib/codeBits.ml[251,5306+12]..[251,5306+16])
          expression (lib/codeBits.ml[251,5306+17]..[255,5381+8]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/codeBits.ml[251,5306+17]..[251,5306+20])
              Ppat_var "typ" (lib/codeBits.ml[251,5306+17]..[251,5306+20])
            expression (lib/codeBits.ml[251,5306+21]..[255,5381+8]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/codeBits.ml[251,5306+21]..[251,5306+25])
                Ppat_var "body" (lib/codeBits.ml[251,5306+21]..[251,5306+25])
              expression (lib/codeBits.ml[251,5306+26]..[255,5381+8])
                Pexp_constraint
                expression (lib/codeBits.ml[252,5340+2]..[255,5381+8])
                  Pexp_ifthenelse
                  expression (lib/codeBits.ml[252,5340+5]..[252,5340+9])
                    Pexp_ident "flag" (lib/codeBits.ml[252,5340+5]..[252,5340+9])
                  expression (lib/codeBits.ml[253,5355+4]..[253,5355+18])
                    Pexp_apply
                    expression (lib/codeBits.ml[253,5355+4]..[253,5355+9])
                      Pexp_ident "arrow" (lib/codeBits.ml[253,5355+4]..[253,5355+9])
                    [
                      <arg>
                      Nolabel
                        expression (lib/codeBits.ml[253,5355+10]..[253,5355+13])
                          Pexp_ident "typ" (lib/codeBits.ml[253,5355+10]..[253,5355+13])
                      <arg>
                      Nolabel
                        expression (lib/codeBits.ml[253,5355+14]..[253,5355+18])
                          Pexp_ident "body" (lib/codeBits.ml[253,5355+14]..[253,5355+18])
                    ]
                  Some
                    expression (lib/codeBits.ml[255,5381+4]..[255,5381+8])
                      Pexp_ident "body" (lib/codeBits.ml[255,5381+4]..[255,5381+8])
                core_type (lib/codeBits.ml[251,5306+28]..[251,5306+31])
                  Ptyp_constr "typ" (lib/codeBits.ml[251,5306+28]..[251,5306+31])
                  []
    ]
  structure_item (lib/codeBits.ml[257,5391+0]..[258,5420+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[257,5391+4]..[257,5391+10])
          Ppat_var "marrow" (lib/codeBits.ml[257,5391+4]..[257,5391+10])
        expression (lib/codeBits.ml[257,5391+11]..[258,5420+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[257,5391+11]..[257,5391+15])
            Ppat_var "typs" (lib/codeBits.ml[257,5391+11]..[257,5391+15])
          expression (lib/codeBits.ml[257,5391+16]..[258,5420+33]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/codeBits.ml[257,5391+16]..[257,5391+20])
              Ppat_var "body" (lib/codeBits.ml[257,5391+16]..[257,5391+20])
            expression (lib/codeBits.ml[257,5391+21]..[258,5420+33])
              Pexp_constraint
              expression (lib/codeBits.ml[258,5420+2]..[258,5420+33])
                Pexp_apply
                expression (lib/codeBits.ml[258,5420+2]..[258,5420+17])
                  Pexp_ident "List.fold_right" (lib/codeBits.ml[258,5420+2]..[258,5420+17])
                [
                  <arg>
                  Nolabel
                    expression (lib/codeBits.ml[258,5420+18]..[258,5420+23])
                      Pexp_ident "arrow" (lib/codeBits.ml[258,5420+18]..[258,5420+23])
                  <arg>
                  Nolabel
                    expression (lib/codeBits.ml[258,5420+24]..[258,5420+28])
                      Pexp_ident "typs" (lib/codeBits.ml[258,5420+24]..[258,5420+28])
                  <arg>
                  Nolabel
                    expression (lib/codeBits.ml[258,5420+29]..[258,5420+33])
                      Pexp_ident "body" (lib/codeBits.ml[258,5420+29]..[258,5420+33])
                ]
              core_type (lib/codeBits.ml[257,5391+23]..[257,5391+26])
                Ptyp_constr "typ" (lib/codeBits.ml[257,5391+23]..[257,5391+26])
                []
    ]
  structure_item (lib/codeBits.ml[262,5471+0]..[267,5582+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[262,5471+4]..[262,5471+11])
          Ppat_var "eprintf" (lib/codeBits.ml[262,5471+4]..[262,5471+11])
        expression (lib/codeBits.ml[262,5471+12]..[267,5582+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[262,5471+12]..[262,5471+18])
            Ppat_var "format" (lib/codeBits.ml[262,5471+12]..[262,5471+18])
          expression (lib/codeBits.ml[262,5471+19]..[267,5582+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/codeBits.ml[262,5471+19]..[262,5471+23])
              Ppat_var "args" (lib/codeBits.ml[262,5471+19]..[262,5471+23])
            expression (lib/codeBits.ml[263,5497+2]..[267,5582+3])
              Pexp_construct "EApp" (lib/codeBits.ml[263,5497+2]..[263,5497+6])
              Some
                expression (lib/codeBits.ml[263,5497+7]..[267,5582+3])
                  Pexp_tuple
                  [
                    expression (lib/codeBits.ml[264,5506+4]..[264,5506+25])
                      Pexp_construct "EVar" (lib/codeBits.ml[264,5506+4]..[264,5506+8])
                      Some
                        expression (lib/codeBits.ml[264,5506+9]..[264,5506+25])
                          Pexp_constant PConst_string("Printf.eprintf",(lib/codeBits.ml[264,5506+10]..[264,5506+24]),None)
                    expression (lib/codeBits.ml[265,5533+4]..[266,5573+8])
                      Pexp_construct "::" (lib/codeBits.ml[265,5533+37]..[265,5533+39])
                      Some
                        expression (lib/codeBits.ml[265,5533+4]..[266,5573+8]) ghost
                          Pexp_tuple
                          [
                            expression (lib/codeBits.ml[265,5533+4]..[265,5533+36])
                              Pexp_construct "EStringConst" (lib/codeBits.ml[265,5533+5]..[265,5533+17])
                              Some
                                expression (lib/codeBits.ml[265,5533+18]..[265,5533+35])
                                  Pexp_apply
                                  expression (lib/codeBits.ml[265,5533+26]..[265,5533+27])
                                    Pexp_ident "^" (lib/codeBits.ml[265,5533+26]..[265,5533+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/codeBits.ml[265,5533+19]..[265,5533+25])
                                        Pexp_ident "format" (lib/codeBits.ml[265,5533+19]..[265,5533+25])
                                    <arg>
                                    Nolabel
                                      expression (lib/codeBits.ml[265,5533+28]..[265,5533+34])
                                        Pexp_constant PConst_string("\n%!",(lib/codeBits.ml[265,5533+29]..[265,5533+33]),None)
                                  ]
                            expression (lib/codeBits.ml[266,5573+4]..[266,5573+8])
                              Pexp_ident "args" (lib/codeBits.ml[266,5573+4]..[266,5573+8])
                          ]
                  ]
    ]
  structure_item (lib/codeBits.ml[269,5587+0]..[270,5660+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[269,5587+4]..[269,5587+9])
          Ppat_var "trace" (lib/codeBits.ml[269,5587+4]..[269,5587+9])
        expression (lib/codeBits.ml[269,5587+10]..[270,5660+34]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[269,5587+10]..[269,5587+27])
            Ppat_constraint
            pattern (lib/codeBits.ml[269,5587+11]..[269,5587+17])
              Ppat_var "format" (lib/codeBits.ml[269,5587+11]..[269,5587+17])
            core_type (lib/codeBits.ml[269,5587+20]..[269,5587+26])
              Ptyp_constr "string" (lib/codeBits.ml[269,5587+20]..[269,5587+26])
              []
          expression (lib/codeBits.ml[269,5587+28]..[270,5660+34]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/codeBits.ml[269,5587+28]..[269,5587+46])
              Ppat_constraint
              pattern (lib/codeBits.ml[269,5587+29]..[269,5587+33])
                Ppat_var "args" (lib/codeBits.ml[269,5587+29]..[269,5587+33])
              core_type (lib/codeBits.ml[269,5587+36]..[269,5587+45])
                Ptyp_constr "list" (lib/codeBits.ml[269,5587+41]..[269,5587+45])
                [
                  core_type (lib/codeBits.ml[269,5587+36]..[269,5587+40])
                    Ptyp_constr "expr" (lib/codeBits.ml[269,5587+36]..[269,5587+40])
                    []
                ]
            expression (lib/codeBits.ml[269,5587+47]..[270,5660+34])
              Pexp_constraint
              expression (lib/codeBits.ml[270,5660+4]..[270,5660+34])
                Pexp_construct "::" (lib/codeBits.ml[270,5660+6]..[270,5660+34]) ghost
                Some
                  expression (lib/codeBits.ml[270,5660+6]..[270,5660+34]) ghost
                    Pexp_tuple
                    [
                      expression (lib/codeBits.ml[270,5660+6]..[270,5660+32])
                        Pexp_tuple
                        [
                          expression (lib/codeBits.ml[270,5660+6]..[270,5660+11])
                            Pexp_construct "PUnit" (lib/codeBits.ml[270,5660+6]..[270,5660+11])
                            None
                          expression (lib/codeBits.ml[270,5660+13]..[270,5660+32])
                            Pexp_apply
                            expression (lib/codeBits.ml[270,5660+13]..[270,5660+20])
                              Pexp_ident "eprintf" (lib/codeBits.ml[270,5660+13]..[270,5660+20])
                            [
                              <arg>
                              Nolabel
                                expression (lib/codeBits.ml[270,5660+21]..[270,5660+27])
                                  Pexp_ident "format" (lib/codeBits.ml[270,5660+21]..[270,5660+27])
                              <arg>
                              Nolabel
                                expression (lib/codeBits.ml[270,5660+28]..[270,5660+32])
                                  Pexp_ident "args" (lib/codeBits.ml[270,5660+28]..[270,5660+32])
                            ]
                        ]
                      expression (lib/codeBits.ml[270,5660+33]..[270,5660+34]) ghost
                        Pexp_construct "[]" (lib/codeBits.ml[270,5660+33]..[270,5660+34]) ghost
                        None
                    ]
              core_type (lib/codeBits.ml[269,5587+49]..[269,5587+70])
                Ptyp_constr "list" (lib/codeBits.ml[269,5587+66]..[269,5587+70])
                [
                  core_type (lib/codeBits.ml[269,5587+50]..[269,5587+64])
                    Ptyp_tuple
                    [
                      core_type (lib/codeBits.ml[269,5587+50]..[269,5587+57])
                        Ptyp_constr "pattern" (lib/codeBits.ml[269,5587+50]..[269,5587+57])
                        []
                      core_type (lib/codeBits.ml[269,5587+60]..[269,5587+64])
                        Ptyp_constr "expr" (lib/codeBits.ml[269,5587+60]..[269,5587+64])
                        []
                    ]
                ]
    ]
  structure_item (lib/codeBits.ml[273,5697+0]..[274,5756+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[273,5697+4]..[273,5697+16])
          Ppat_var "tracecomment" (lib/codeBits.ml[273,5697+4]..[273,5697+16])
        expression (lib/codeBits.ml[273,5697+17]..[274,5756+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[273,5697+17]..[273,5697+35])
            Ppat_constraint
            pattern (lib/codeBits.ml[273,5697+18]..[273,5697+25])
              Ppat_var "comment" (lib/codeBits.ml[273,5697+18]..[273,5697+25])
            core_type (lib/codeBits.ml[273,5697+28]..[273,5697+34])
              Ptyp_constr "string" (lib/codeBits.ml[273,5697+28]..[273,5697+34])
              []
          expression (lib/codeBits.ml[273,5697+36]..[274,5756+33]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/codeBits.ml[273,5697+36]..[273,5697+49])
              Ppat_constraint
              pattern (lib/codeBits.ml[273,5697+37]..[273,5697+41])
                Ppat_var "body" (lib/codeBits.ml[273,5697+37]..[273,5697+41])
              core_type (lib/codeBits.ml[273,5697+44]..[273,5697+48])
                Ptyp_constr "expr" (lib/codeBits.ml[273,5697+44]..[273,5697+48])
                []
            expression (lib/codeBits.ml[273,5697+50]..[274,5756+33])
              Pexp_constraint
              expression (lib/codeBits.ml[274,5756+4]..[274,5756+33])
                Pexp_apply
                expression (lib/codeBits.ml[274,5756+4]..[274,5756+8])
                  Pexp_ident "blet" (lib/codeBits.ml[274,5756+4]..[274,5756+8])
                [
                  <arg>
                  Nolabel
                    expression (lib/codeBits.ml[274,5756+9]..[274,5756+33])
                      Pexp_tuple
                      [
                        expression (lib/codeBits.ml[274,5756+10]..[274,5756+26])
                          Pexp_apply
                          expression (lib/codeBits.ml[274,5756+10]..[274,5756+15])
                            Pexp_ident "trace" (lib/codeBits.ml[274,5756+10]..[274,5756+15])
                          [
                            <arg>
                            Nolabel
                              expression (lib/codeBits.ml[274,5756+16]..[274,5756+23])
                                Pexp_ident "comment" (lib/codeBits.ml[274,5756+16]..[274,5756+23])
                            <arg>
                            Nolabel
                              expression (lib/codeBits.ml[274,5756+24]..[274,5756+26])
                                Pexp_construct "[]" (lib/codeBits.ml[274,5756+24]..[274,5756+26])
                                None
                          ]
                        expression (lib/codeBits.ml[274,5756+28]..[274,5756+32])
                          Pexp_ident "body" (lib/codeBits.ml[274,5756+28]..[274,5756+32])
                      ]
                ]
              core_type (lib/codeBits.ml[273,5697+52]..[273,5697+56])
                Ptyp_constr "expr" (lib/codeBits.ml[273,5697+52]..[273,5697+56])
                []
    ]
  structure_item (lib/codeBits.ml[285,6290+0]..[286,6308+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[285,6290+4]..[285,6290+10])
          Ppat_var "prefix" (lib/codeBits.ml[285,6290+4]..[285,6290+10])
        expression (lib/codeBits.ml[285,6290+11]..[286,6308+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[285,6290+11]..[285,6290+15])
            Ppat_var "name" (lib/codeBits.ml[285,6290+11]..[285,6290+15])
          expression (lib/codeBits.ml[286,6308+4]..[286,6308+21])
            Pexp_apply
            expression (lib/codeBits.ml[286,6308+15]..[286,6308+16])
              Pexp_ident "^" (lib/codeBits.ml[286,6308+15]..[286,6308+16])
            [
              <arg>
              Nolabel
                expression (lib/codeBits.ml[286,6308+4]..[286,6308+14])
                  Pexp_constant PConst_string("_menhir_",(lib/codeBits.ml[286,6308+5]..[286,6308+13]),None)
              <arg>
              Nolabel
                expression (lib/codeBits.ml[286,6308+17]..[286,6308+21])
                  Pexp_ident "name" (lib/codeBits.ml[286,6308+17]..[286,6308+21])
            ]
    ]
  structure_item (lib/codeBits.ml[288,6331+0]..[289,6353+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[288,6331+4]..[288,6331+14])
          Ppat_var "dataprefix" (lib/codeBits.ml[288,6331+4]..[288,6331+14])
        expression (lib/codeBits.ml[288,6331+15]..[289,6353+17]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[288,6331+15]..[288,6331+19])
            Ppat_var "name" (lib/codeBits.ml[288,6331+15]..[288,6331+19])
          expression (lib/codeBits.ml[289,6353+2]..[289,6353+17])
            Pexp_apply
            expression (lib/codeBits.ml[289,6353+11]..[289,6353+12])
              Pexp_ident "^" (lib/codeBits.ml[289,6353+11]..[289,6353+12])
            [
              <arg>
              Nolabel
                expression (lib/codeBits.ml[289,6353+2]..[289,6353+10])
                  Pexp_constant PConst_string("Menhir",(lib/codeBits.ml[289,6353+3]..[289,6353+9]),None)
              <arg>
              Nolabel
                expression (lib/codeBits.ml[289,6353+13]..[289,6353+17])
                  Pexp_ident "name" (lib/codeBits.ml[289,6353+13]..[289,6353+17])
            ]
    ]
  structure_item (lib/codeBits.ml[291,6372+0]..[292,6392+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[291,6372+4]..[291,6372+12])
          Ppat_var "tvprefix" (lib/codeBits.ml[291,6372+4]..[291,6372+12])
        expression (lib/codeBits.ml[291,6372+13]..[292,6392+17]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[291,6372+13]..[291,6372+17])
            Ppat_var "name" (lib/codeBits.ml[291,6372+13]..[291,6372+17])
          expression (lib/codeBits.ml[292,6392+4]..[292,6392+17])
            Pexp_apply
            expression (lib/codeBits.ml[292,6392+11]..[292,6392+12])
              Pexp_ident "^" (lib/codeBits.ml[292,6392+11]..[292,6392+12])
            [
              <arg>
              Nolabel
                expression (lib/codeBits.ml[292,6392+4]..[292,6392+10])
                  Pexp_constant PConst_string("ttv_",(lib/codeBits.ml[292,6392+5]..[292,6392+9]),None)
              <arg>
              Nolabel
                expression (lib/codeBits.ml[292,6392+13]..[292,6392+17])
                  Pexp_ident "name" (lib/codeBits.ml[292,6392+13]..[292,6392+17])
            ]
    ]
  structure_item (lib/codeBits.ml[299,6589+0]..[309,6828+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[299,6589+4]..[299,6589+36])
          Ppat_var "interface_item_to_structure_item" (lib/codeBits.ml[299,6589+4]..[299,6589+36])
        expression (lib/codeBits.ml[299,6589+39]..[309,6828+8])
          Pexp_function
          [
            <case>
              pattern (lib/codeBits.ml[300,6637+4]..[300,6637+19])
                Ppat_construct "IIExcDecls" (lib/codeBits.ml[300,6637+4]..[300,6637+14])
                Some
                  []
                  pattern (lib/codeBits.ml[300,6637+15]..[300,6637+19])
                    Ppat_var "defs" (lib/codeBits.ml[300,6637+15]..[300,6637+19])
              expression (lib/codeBits.ml[301,6660+6]..[301,6660+24])
                Pexp_construct "::" (lib/codeBits.ml[301,6660+8]..[301,6660+24]) ghost
                Some
                  expression (lib/codeBits.ml[301,6660+8]..[301,6660+24]) ghost
                    Pexp_tuple
                    [
                      expression (lib/codeBits.ml[301,6660+8]..[301,6660+22])
                        Pexp_construct "SIExcDefs" (lib/codeBits.ml[301,6660+8]..[301,6660+17])
                        Some
                          expression (lib/codeBits.ml[301,6660+18]..[301,6660+22])
                            Pexp_ident "defs" (lib/codeBits.ml[301,6660+18]..[301,6660+22])
                      expression (lib/codeBits.ml[301,6660+23]..[301,6660+24]) ghost
                        Pexp_construct "[]" (lib/codeBits.ml[301,6660+23]..[301,6660+24]) ghost
                        None
                    ]
            <case>
              pattern (lib/codeBits.ml[302,6685+4]..[302,6685+20])
                Ppat_construct "IITypeDecls" (lib/codeBits.ml[302,6685+4]..[302,6685+15])
                Some
                  []
                  pattern (lib/codeBits.ml[302,6685+16]..[302,6685+20])
                    Ppat_var "defs" (lib/codeBits.ml[302,6685+16]..[302,6685+20])
              expression (lib/codeBits.ml[303,6709+6]..[303,6709+25])
                Pexp_construct "::" (lib/codeBits.ml[303,6709+8]..[303,6709+25]) ghost
                Some
                  expression (lib/codeBits.ml[303,6709+8]..[303,6709+25]) ghost
                    Pexp_tuple
                    [
                      expression (lib/codeBits.ml[303,6709+8]..[303,6709+23])
                        Pexp_construct "SITypeDefs" (lib/codeBits.ml[303,6709+8]..[303,6709+18])
                        Some
                          expression (lib/codeBits.ml[303,6709+19]..[303,6709+23])
                            Pexp_ident "defs" (lib/codeBits.ml[303,6709+19]..[303,6709+23])
                      expression (lib/codeBits.ml[303,6709+24]..[303,6709+25]) ghost
                        Pexp_construct "[]" (lib/codeBits.ml[303,6709+24]..[303,6709+25]) ghost
                        None
                    ]
            <case>
              pattern (lib/codeBits.ml[304,6735+4]..[308,6809+15])
                Ppat_or
                pattern (lib/codeBits.ml[304,6735+4]..[307,6789+19])
                  Ppat_or
                  pattern (lib/codeBits.ml[304,6735+4]..[306,6773+15])
                    Ppat_or
                    pattern (lib/codeBits.ml[304,6735+4]..[305,6756+16])
                      Ppat_or
                      pattern (lib/codeBits.ml[304,6735+4]..[304,6735+20])
                        Ppat_construct "IIFunctor" (lib/codeBits.ml[304,6735+4]..[304,6735+13])
                        Some
                          []
                          pattern (lib/codeBits.ml[304,6735+14]..[304,6735+20])
                            Ppat_tuple
                            [
                              pattern (lib/codeBits.ml[304,6735+15]..[304,6735+16])
                                Ppat_any
                              pattern (lib/codeBits.ml[304,6735+18]..[304,6735+19])
                                Ppat_any
                            ]
                      pattern (lib/codeBits.ml[305,6756+4]..[305,6756+16])
                        Ppat_construct "IIValDecls" (lib/codeBits.ml[305,6756+4]..[305,6756+14])
                        Some
                          []
                          pattern (lib/codeBits.ml[305,6756+15]..[305,6756+16])
                            Ppat_any
                    pattern (lib/codeBits.ml[306,6773+4]..[306,6773+15])
                      Ppat_construct "IIInclude" (lib/codeBits.ml[306,6773+4]..[306,6773+13])
                      Some
                        []
                        pattern (lib/codeBits.ml[306,6773+14]..[306,6773+15])
                          Ppat_any
                  pattern (lib/codeBits.ml[307,6789+4]..[307,6789+19])
                    Ppat_construct "IIModule" (lib/codeBits.ml[307,6789+4]..[307,6789+12])
                    Some
                      []
                      pattern (lib/codeBits.ml[307,6789+13]..[307,6789+19])
                        Ppat_tuple
                        [
                          pattern (lib/codeBits.ml[307,6789+14]..[307,6789+15])
                            Ppat_any
                          pattern (lib/codeBits.ml[307,6789+17]..[307,6789+18])
                            Ppat_any
                        ]
                pattern (lib/codeBits.ml[308,6809+4]..[308,6809+15])
                  Ppat_construct "IIComment" (lib/codeBits.ml[308,6809+4]..[308,6809+13])
                  Some
                    []
                    pattern (lib/codeBits.ml[308,6809+14]..[308,6809+15])
                      Ppat_any
              expression (lib/codeBits.ml[309,6828+6]..[309,6828+8])
                Pexp_construct "[]" (lib/codeBits.ml[309,6828+6]..[309,6828+8])
                None
          ]
    ]
  structure_item (lib/codeBits.ml[311,6838+0]..[312,6869+60])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[311,6838+4]..[311,6838+26])
          Ppat_var "interface_to_structure" (lib/codeBits.ml[311,6838+4]..[311,6838+26])
        expression (lib/codeBits.ml[311,6838+27]..[312,6869+60]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[311,6838+27]..[311,6838+28])
            Ppat_var "i" (lib/codeBits.ml[311,6838+27]..[311,6838+28])
          expression (lib/codeBits.ml[312,6869+2]..[312,6869+60])
            Pexp_apply
            expression (lib/codeBits.ml[312,6869+2]..[312,6869+14])
              Pexp_ident "List.flatten" (lib/codeBits.ml[312,6869+2]..[312,6869+14])
            [
              <arg>
              Nolabel
                expression (lib/codeBits.ml[312,6869+15]..[312,6869+60])
                  Pexp_apply
                  expression (lib/codeBits.ml[312,6869+16]..[312,6869+24])
                    Pexp_ident "List.map" (lib/codeBits.ml[312,6869+16]..[312,6869+24])
                  [
                    <arg>
                    Nolabel
                      expression (lib/codeBits.ml[312,6869+25]..[312,6869+57])
                        Pexp_ident "interface_item_to_structure_item" (lib/codeBits.ml[312,6869+25]..[312,6869+57])
                    <arg>
                    Nolabel
                      expression (lib/codeBits.ml[312,6869+58]..[312,6869+59])
                        Pexp_ident "i" (lib/codeBits.ml[312,6869+58]..[312,6869+59])
                  ]
            ]
    ]
  structure_item (lib/codeBits.ml[317,7023+0]..[320,7141+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[317,7023+4]..[317,7023+14])
          Ppat_var "with_types" (lib/codeBits.ml[317,7023+4]..[317,7023+14])
        expression (lib/codeBits.ml[317,7023+15]..[320,7141+32]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[317,7023+15]..[317,7023+17])
            Ppat_var "wk" (lib/codeBits.ml[317,7023+15]..[317,7023+17])
          expression (lib/codeBits.ml[317,7023+18]..[320,7141+32]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/codeBits.ml[317,7023+18]..[317,7023+22])
              Ppat_var "name" (lib/codeBits.ml[317,7023+18]..[317,7023+22])
            expression (lib/codeBits.ml[317,7023+23]..[320,7141+32]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/codeBits.ml[317,7023+23]..[317,7023+26])
                Ppat_var "tys" (lib/codeBits.ml[317,7023+23]..[317,7023+26])
              expression (lib/codeBits.ml[318,7052+2]..[320,7141+32])
                Pexp_apply
                expression (lib/codeBits.ml[318,7052+2]..[318,7052+16])
                  Pexp_ident "List.fold_left" (lib/codeBits.ml[318,7052+2]..[318,7052+16])
                [
                  <arg>
                  Nolabel
                    expression (lib/codeBits.ml[318,7052+17]..[320,7141+3])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lib/codeBits.ml[318,7052+22]..[318,7052+24])
                        Ppat_var "mt" (lib/codeBits.ml[318,7052+22]..[318,7052+24])
                      expression (lib/codeBits.ml[318,7052+25]..[319,7099+41]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lib/codeBits.ml[318,7052+25]..[318,7052+43])
                          Ppat_tuple
                          [
                            pattern (lib/codeBits.ml[318,7052+26]..[318,7052+32])
                              Ppat_var "params" (lib/codeBits.ml[318,7052+26]..[318,7052+32])
                            pattern (lib/codeBits.ml[318,7052+34]..[318,7052+38])
                              Ppat_var "name" (lib/codeBits.ml[318,7052+34]..[318,7052+38])
                            pattern (lib/codeBits.ml[318,7052+40]..[318,7052+42])
                              Ppat_var "ty" (lib/codeBits.ml[318,7052+40]..[318,7052+42])
                          ]
                        expression (lib/codeBits.ml[319,7099+4]..[319,7099+41])
                          Pexp_construct "MTWithType" (lib/codeBits.ml[319,7099+4]..[319,7099+14])
                          Some
                            expression (lib/codeBits.ml[319,7099+15]..[319,7099+41])
                              Pexp_tuple
                              [
                                expression (lib/codeBits.ml[319,7099+16]..[319,7099+18])
                                  Pexp_ident "mt" (lib/codeBits.ml[319,7099+16]..[319,7099+18])
                                expression (lib/codeBits.ml[319,7099+20]..[319,7099+26])
                                  Pexp_ident "params" (lib/codeBits.ml[319,7099+20]..[319,7099+26])
                                expression (lib/codeBits.ml[319,7099+28]..[319,7099+32])
                                  Pexp_ident "name" (lib/codeBits.ml[319,7099+28]..[319,7099+32])
                                expression (lib/codeBits.ml[319,7099+34]..[319,7099+36])
                                  Pexp_ident "wk" (lib/codeBits.ml[319,7099+34]..[319,7099+36])
                                expression (lib/codeBits.ml[319,7099+38]..[319,7099+40])
                                  Pexp_ident "ty" (lib/codeBits.ml[319,7099+38]..[319,7099+40])
                              ]
                  <arg>
                  Nolabel
                    expression (lib/codeBits.ml[320,7141+4]..[320,7141+28])
                      Pexp_construct "MTNamedModuleType" (lib/codeBits.ml[320,7141+5]..[320,7141+22])
                      Some
                        expression (lib/codeBits.ml[320,7141+23]..[320,7141+27])
                          Pexp_ident "name" (lib/codeBits.ml[320,7141+23]..[320,7141+27])
                  <arg>
                  Nolabel
                    expression (lib/codeBits.ml[320,7141+29]..[320,7141+32])
                      Pexp_ident "tys" (lib/codeBits.ml[320,7141+29]..[320,7141+32])
                ]
    ]
  structure_item (lib/codeBits.ml[322,7175+0]..[323,7194+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[322,7175+4]..[322,7175+8])
          Ppat_var "mapp" (lib/codeBits.ml[322,7175+4]..[322,7175+8])
        expression (lib/codeBits.ml[322,7175+9]..[323,7194+17]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[322,7175+9]..[322,7175+12])
            Ppat_var "me1" (lib/codeBits.ml[322,7175+9]..[322,7175+12])
          expression (lib/codeBits.ml[322,7175+13]..[323,7194+17]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/codeBits.ml[322,7175+13]..[322,7175+16])
              Ppat_var "me2" (lib/codeBits.ml[322,7175+13]..[322,7175+16])
            expression (lib/codeBits.ml[323,7194+2]..[323,7194+17])
              Pexp_construct "MApp" (lib/codeBits.ml[323,7194+2]..[323,7194+6])
              Some
                expression (lib/codeBits.ml[323,7194+7]..[323,7194+17])
                  Pexp_tuple
                  [
                    expression (lib/codeBits.ml[323,7194+8]..[323,7194+11])
                      Pexp_ident "me1" (lib/codeBits.ml[323,7194+8]..[323,7194+11])
                    expression (lib/codeBits.ml[323,7194+13]..[323,7194+16])
                      Pexp_ident "me2" (lib/codeBits.ml[323,7194+13]..[323,7194+16])
                  ]
    ]
  structure_item (lib/codeBits.ml[325,7213+0]..[326,7233+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[325,7213+4]..[325,7213+8])
          Ppat_var "mapp" (lib/codeBits.ml[325,7213+4]..[325,7213+8])
        expression (lib/codeBits.ml[325,7213+9]..[326,7233+30]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[325,7213+9]..[325,7213+12])
            Ppat_var "me1" (lib/codeBits.ml[325,7213+9]..[325,7213+12])
          expression (lib/codeBits.ml[325,7213+13]..[326,7233+30]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/codeBits.ml[325,7213+13]..[325,7213+17])
              Ppat_var "mes2" (lib/codeBits.ml[325,7213+13]..[325,7213+17])
            expression (lib/codeBits.ml[326,7233+2]..[326,7233+30])
              Pexp_apply
              expression (lib/codeBits.ml[326,7233+2]..[326,7233+16])
                Pexp_ident "List.fold_left" (lib/codeBits.ml[326,7233+2]..[326,7233+16])
              [
                <arg>
                Nolabel
                  expression (lib/codeBits.ml[326,7233+17]..[326,7233+21])
                    Pexp_ident "mapp" (lib/codeBits.ml[326,7233+17]..[326,7233+21])
                <arg>
                Nolabel
                  expression (lib/codeBits.ml[326,7233+22]..[326,7233+25])
                    Pexp_ident "me1" (lib/codeBits.ml[326,7233+22]..[326,7233+25])
                <arg>
                Nolabel
                  expression (lib/codeBits.ml[326,7233+26]..[326,7233+30])
                    Pexp_ident "mes2" (lib/codeBits.ml[326,7233+26]..[326,7233+30])
              ]
    ]
  structure_item (lib/codeBits.ml[328,7265+0]..[333,7380+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[328,7265+4]..[328,7265+9])
          Ppat_var "field" (lib/codeBits.ml[328,7265+4]..[328,7265+9])
        expression (lib/codeBits.ml[328,7265+10]..[333,7380+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[328,7265+10]..[328,7265+20])
            Ppat_var "modifiable" (lib/codeBits.ml[328,7265+10]..[328,7265+20])
          expression (lib/codeBits.ml[328,7265+21]..[333,7380+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/codeBits.ml[328,7265+21]..[328,7265+25])
              Ppat_var "name" (lib/codeBits.ml[328,7265+21]..[328,7265+25])
            expression (lib/codeBits.ml[328,7265+26]..[333,7380+3]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/codeBits.ml[328,7265+26]..[328,7265+27])
                Ppat_var "t" (lib/codeBits.ml[328,7265+26]..[328,7265+27])
              expression (lib/codeBits.ml[329,7295+2]..[333,7380+3])
                Pexp_record
                [
                  "modifiable" (lib/codeBits.ml[330,7299+4]..[330,7299+14])
                    expression (lib/codeBits.ml[330,7299+17]..[330,7299+27])
                      Pexp_ident "modifiable" (lib/codeBits.ml[330,7299+17]..[330,7299+27])
                  "fieldname" (lib/codeBits.ml[331,7328+4]..[331,7328+13])
                    expression (lib/codeBits.ml[331,7328+16]..[331,7328+20])
                      Pexp_ident "name" (lib/codeBits.ml[331,7328+16]..[331,7328+20])
                  "fieldtype" (lib/codeBits.ml[332,7350+4]..[332,7350+13])
                    expression (lib/codeBits.ml[332,7350+16]..[332,7350+29])
                      Pexp_apply
                      expression (lib/codeBits.ml[332,7350+16]..[332,7350+27])
                        Pexp_ident "type2scheme" (lib/codeBits.ml[332,7350+16]..[332,7350+27])
                      [
                        <arg>
                        Nolabel
                          expression (lib/codeBits.ml[332,7350+28]..[332,7350+29])
                            Pexp_ident "t" (lib/codeBits.ml[332,7350+28]..[332,7350+29])
                      ]
                ]
                None
    ]
  structure_item (lib/codeBits.ml[335,7385+0]..[336,7419+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[335,7385+4]..[335,7385+10])
          Ppat_var "branch" (lib/codeBits.ml[335,7385+4]..[335,7385+10])
        expression (lib/codeBits.ml[335,7385+11]..[336,7419+27]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/codeBits.ml[335,7385+11]..[335,7385+20])
            Ppat_var "branchpat" (lib/codeBits.ml[335,7385+11]..[335,7385+20])
          expression (lib/codeBits.ml[335,7385+21]..[336,7419+27]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/codeBits.ml[335,7385+21]..[335,7385+31])
              Ppat_var "branchbody" (lib/codeBits.ml[335,7385+21]..[335,7385+31])
            expression (lib/codeBits.ml[336,7419+2]..[336,7419+27])
              Pexp_record
              [
                "branchpat" (lib/codeBits.ml[336,7419+4]..[336,7419+13]) ghost
                  expression (lib/codeBits.ml[336,7419+4]..[336,7419+13])
                    Pexp_ident "branchpat" (lib/codeBits.ml[336,7419+4]..[336,7419+13])
                "branchbody" (lib/codeBits.ml[336,7419+15]..[336,7419+25]) ghost
                  expression (lib/codeBits.ml[336,7419+15]..[336,7419+25])
                    Pexp_ident "branchbody" (lib/codeBits.ml[336,7419+15]..[336,7419+25])
              ]
              None
    ]
  structure_item (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
          Ppat_construct "()" (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
          None
        expression (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
          Pexp_apply
          expression (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
            Pexp_ident "Ppx_inline_test_lib.unset_lib" (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
          [
            <arg>
            Nolabel
              expression (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost,None)
          ]
    ]
  structure_item (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
          Ppat_construct "()" (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
          None
        expression (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
          Pexp_apply
          expression (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
            Pexp_ident "Expect_test_collector.Current_file.unset" (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
          [
            <arg>
            Nolabel
              expression (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
                Pexp_construct "()" (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
                None
          ]
    ]
  structure_item (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
          Ppat_construct "()" (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
          None
        expression (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
          Pexp_apply
          expression (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
            Pexp_ident "Ppx_bench_lib.Benchmark_accumulator.Current_libname.unset" (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
          [
            <arg>
            Nolabel
              expression (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
                Pexp_construct "()" (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
                None
          ]
    ]
  structure_item (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
          Ppat_construct "()" (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
          None
        expression (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
          Pexp_apply
          expression (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
            Pexp_ident "Ppx_module_timer_runtime.record_until" (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
          [
            <arg>
            Nolabel
              expression (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
                Pexp_ident "Ppx_module_timer_runtime.__MODULE__" (lib/codeBits.ml[336,7419+27]..[336,7419+27]) ghost
          ]
    ]
]

[@@@ocaml.ppx.context
  {
    tool_name = "ppx_driver";
    include_dirs = [];
    load_path = [];
    open_modules = [];
    for_package = None;
    debug = false;
    use_threads = false;
    use_vmthreads = false;
    recursive_types = false;
    principal = false;
    transparent_modules = false;
    unboxed_types = false;
    unsafe_string = false;
    cookies = [("inline_tests", "enabled"); ("library-name", "gbnf_parser")]
  }]
let () =
  Ppx_module_timer_runtime.record_start Ppx_module_timer_runtime.__MODULE__
let () =
  Ppx_bench_lib.Benchmark_accumulator.Current_libname.set "gbnf_parser"
let () =
  Expect_test_collector.Current_file.set ~absolute_filename:"lib/codeBits.ml"
let () =
  Ppx_inline_test_lib.set_lib_and_partition "gbnf_parser" "codeBits.ml"
open IL
let pvarlocated id =
  let (x, pos) = Positions.decompose id in
  let pos1 = Positions.start_of_position pos
  and pos2 = Positions.end_of_position pos in
  if (pos1 == Lexing.dummy_pos) || (pos2 == Lexing.dummy_pos)
  then PVar x
  else PVarLocated id
let etuple = function | [] -> EUnit | e::[] -> e | es -> ETuple es
let ptuple = function | [] -> PUnit | p::[] -> p | ps -> PTuple ps
let ifn condition xs = if condition then xs else []
let if1 condition x = if condition then [x] else []
let ifnlazy condition xs = if condition then xs () else []
let tunit = TypApp ("unit", [])
let tbool = TypApp ("bool", [])
let tint = TypApp ("int", [])
let tstring = TypApp ("string", [])
let texn = TypApp ("exn", [])
let tpair typ1 typ2 = TypTuple [typ1; typ2]
let tposition = TypApp ("Lexing.position", [])
let tlocation = tpair tposition tposition
let tlexbuf = TypApp ("Lexing.lexbuf", [])
let tobj = TypApp ("Obj.t", [])
let tvar x = (TypVar x : typ)
let scheme qs t = { quantifiers = qs; body = t }
let type2scheme t = scheme [] t
let annotate e t = EAnnot (e, (type2scheme t))
let pat2var = function | PVar x -> x | _ -> assert false
let rec simplify =
  function
  | [] -> []
  | (PVar v1, EVar v2)::bindings when v1 = v2 -> simplify bindings
  | (PWildcard, EVar _)::bindings -> simplify bindings
  | binding::bindings -> binding :: (simplify bindings)
let blet (bindings, body) =
  let bindings = simplify bindings in
  match (bindings, body) with
  | ([], _) -> body
  | ((PVar x1, e)::[], EVar x2) when x1 = x2 -> e
  | (_, _) -> ELet (bindings, body)
let mlet formals actuals body = blet ((List.combine formals actuals), body)
let eletand (bindings, body) =
  let bindings = simplify bindings in
  match (bindings, body) with
  | ([], _) -> body
  | ((PVar x1, e)::[], EVar x2) when x1 = x2 -> e
  | (_::[], _) -> ELet (bindings, body)
  | (_::_::_, _) ->
      let (pats, exprs) = List.split bindings in
      ELet ([((PTuple pats), (ETuple exprs))], body)
let eraisenotfound = ERaise (EData ("Not_found", []))
let eassert e = EApp ((EVar "assert"), [e])
let bottom = eraisenotfound
let efalse : expr = EData ("false", [])
let etrue : expr = EData ("true", [])
let eboolconst b = if b then etrue else efalse
let enone = EData ("None", [])
let esome e = EData ("Some", [e])
let rec elist xs =
  match xs with
  | [] -> EData ("[]", [])
  | x::xs -> EData ("::", [x; elist xs])
let pint k = (PData ((string_of_int k), []) : pattern)
let arrow typ body = (TypArrow (typ, body) : typ)
let arrowif flag typ body = (if flag then arrow typ body else body : typ)
let marrow typs body = (List.fold_right arrow typs body : typ)
let eprintf format args =
  EApp ((EVar "Printf.eprintf"), ((EStringConst (format ^ "\n%!")) :: args))
let trace (format : string) (args : expr list) =
  ([(PUnit, (eprintf format args))] : (pattern * expr) list)
let tracecomment (comment : string) (body : expr) =
  (blet ((trace comment []), body) : expr)
let prefix name = "_menhir_" ^ name
let dataprefix name = "Menhir" ^ name
let tvprefix name = "ttv_" ^ name
let interface_item_to_structure_item =
  function
  | IIExcDecls defs -> [SIExcDefs defs]
  | IITypeDecls defs -> [SITypeDefs defs]
  | IIFunctor (_, _) | IIValDecls _ | IIInclude _ | IIModule (_, _)
    | IIComment _ -> []
let interface_to_structure i =
  List.flatten (List.map interface_item_to_structure_item i)
let with_types wk name tys =
  List.fold_left
    (fun mt ->
       fun (params, name, ty) -> MTWithType (mt, params, name, wk, ty))
    (MTNamedModuleType name) tys
let mapp me1 me2 = MApp (me1, me2)
let mapp me1 mes2 = List.fold_left mapp me1 mes2
let field modifiable name t =
  { modifiable; fieldname = name; fieldtype = (type2scheme t) }
let branch branchpat branchbody = { branchpat; branchbody }
let () = Ppx_inline_test_lib.unset_lib "gbnf_parser"
let () = Expect_test_collector.Current_file.unset ()
let () = Ppx_bench_lib.Benchmark_accumulator.Current_libname.unset ()
let () =
  Ppx_module_timer_runtime.record_until Ppx_module_timer_runtime.__MODULE__
[
  structure_item (_none_[0,0+-1].._none_[0,0+-1]) ghost
    Tstr_attribute "ocaml.ppx.context"
    [
      structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
        Pstr_eval
        expression (_none_[0,0+-1]..[0,0+-1]) ghost
          Pexp_record
          [
            "tool_name" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_constant PConst_string("ppx_driver",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
            "include_dirs" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "load_path" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "open_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "for_package" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "None" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "debug" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_threads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_vmthreads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "recursive_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "principal" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "transparent_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unboxed_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unsafe_string" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "cookies" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                Some
                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                    Pexp_tuple
                    [
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_tuple
                        [
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_constant PConst_string("inline_tests",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                          expression (<command-line>[1,0+0]..[1,0+9])
                            Pexp_constant PConst_string("enabled",(<command-line>[1,0+1]..[1,0+8]),None)
                        ]
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                        Some
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_tuple
                            [
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_tuple
                                [
                                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                    Pexp_constant PConst_string("library-name",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                                  expression (<command-line>[1,0+0]..[1,0+13])
                                    Pexp_constant PConst_string("gbnf_parser",(<command-line>[1,0+1]..[1,0+12]),None)
                                ]
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                                None
                            ]
                    ]
          ]
          None
    ]
  structure_item (lib/codeBits.ml[17,1063+0]..lib/codeBits.ml[17,1063+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[17,1063+0]..lib/codeBits.ml[17,1063+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/codeBits.ml[17,1063+0]..lib/codeBits.ml[17,1063+0]) ghost
          Texp_apply
          expression (lib/codeBits.ml[17,1063+0]..lib/codeBits.ml[17,1063+0]) ghost
            Texp_ident "Ppx_module_timer_runtime!.record_start"
          [
            <arg>
              Nolabel
              expression (lib/codeBits.ml[17,1063+0]..lib/codeBits.ml[17,1063+0]) ghost
                Texp_ident "Ppx_module_timer_runtime!.__MODULE__"
          ]
    ]
  structure_item (lib/codeBits.ml[17,1063+0]..lib/codeBits.ml[17,1063+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[17,1063+0]..lib/codeBits.ml[17,1063+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/codeBits.ml[17,1063+0]..lib/codeBits.ml[17,1063+0]) ghost
          Texp_apply
          expression (lib/codeBits.ml[17,1063+0]..lib/codeBits.ml[17,1063+0]) ghost
            Texp_ident "Ppx_bench_lib!.Benchmark_accumulator.Current_libname.set"
          [
            <arg>
              Nolabel
              expression (lib/codeBits.ml[17,1063+0]..lib/codeBits.ml[17,1063+0]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/codeBits.ml[17,1063+0]..lib/codeBits.ml[17,1063+0]) ghost,None)
          ]
    ]
  structure_item (lib/codeBits.ml[17,1063+0]..lib/codeBits.ml[17,1063+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[17,1063+0]..lib/codeBits.ml[17,1063+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/codeBits.ml[17,1063+0]..lib/codeBits.ml[17,1063+0]) ghost
          Texp_apply
          expression (lib/codeBits.ml[17,1063+0]..lib/codeBits.ml[17,1063+0]) ghost
            Texp_ident "Expect_test_collector!.Current_file.set"
          [
            <arg>
              Labelled "absolute_filename"
              expression (lib/codeBits.ml[17,1063+0]..lib/codeBits.ml[17,1063+0]) ghost
                Texp_constant Const_string("lib/codeBits.ml",(lib/codeBits.ml[17,1063+0]..lib/codeBits.ml[17,1063+0]) ghost,None)
          ]
    ]
  structure_item (lib/codeBits.ml[17,1063+0]..lib/codeBits.ml[17,1063+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[17,1063+0]..lib/codeBits.ml[17,1063+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/codeBits.ml[17,1063+0]..lib/codeBits.ml[17,1063+0]) ghost
          Texp_apply
          expression (lib/codeBits.ml[17,1063+0]..lib/codeBits.ml[17,1063+0]) ghost
            Texp_ident "Ppx_inline_test_lib!.set_lib_and_partition"
          [
            <arg>
              Nolabel
              expression (lib/codeBits.ml[17,1063+0]..lib/codeBits.ml[17,1063+0]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/codeBits.ml[17,1063+0]..lib/codeBits.ml[17,1063+0]) ghost,None)
            <arg>
              Nolabel
              expression (lib/codeBits.ml[17,1063+0]..lib/codeBits.ml[17,1063+0]) ghost
                Texp_constant Const_string("codeBits.ml",(lib/codeBits.ml[17,1063+0]..lib/codeBits.ml[17,1063+0]) ghost,None)
          ]
    ]
  structure_item (lib/codeBits.ml[17,1063+0]..lib/codeBits.ml[17,1063+7])
    Tstr_open Fresh
    module_expr (lib/codeBits.ml[17,1063+5]..lib/codeBits.ml[17,1063+7])
      Tmod_ident "Gbnf_parser!.IL"
  structure_item (lib/codeBits.ml[21,1118+0]..lib/codeBits.ml[28,1352+18])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[21,1118+4]..lib/codeBits.ml[21,1118+15])
          Tpat_var "pvarlocated/1155"
        expression (lib/codeBits.ml[21,1118+16]..lib/codeBits.ml[28,1352+18]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[21,1118+16]..lib/codeBits.ml[21,1118+18])
                Tpat_var "id/1157"
              expression (lib/codeBits.ml[22,1139+2]..lib/codeBits.ml[28,1352+18])
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/codeBits.ml[22,1139+6]..lib/codeBits.ml[22,1139+12])
                      Tpat_tuple
                      [
                        pattern (lib/codeBits.ml[22,1139+6]..lib/codeBits.ml[22,1139+7])
                          Tpat_var "x/1158"
                        pattern (lib/codeBits.ml[22,1139+9]..lib/codeBits.ml[22,1139+12])
                          Tpat_var "pos/1159"
                      ]
                    expression (lib/codeBits.ml[22,1139+15]..lib/codeBits.ml[22,1139+37])
                      Texp_apply
                      expression (lib/codeBits.ml[22,1139+15]..lib/codeBits.ml[22,1139+34])
                        Texp_ident "Gbnf_parser!.Positions.decompose"
                      [
                        <arg>
                          Nolabel
                          expression (lib/codeBits.ml[22,1139+35]..lib/codeBits.ml[22,1139+37])
                            Texp_ident "id/1157"
                      ]
                ]
                expression (lib/codeBits.ml[23,1180+2]..lib/codeBits.ml[28,1352+18])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (lib/codeBits.ml[23,1180+6]..lib/codeBits.ml[23,1180+10])
                        Tpat_var "pos1/1230"
                      expression (lib/codeBits.ml[23,1180+13]..lib/codeBits.ml[23,1180+44])
                        Texp_apply
                        expression (lib/codeBits.ml[23,1180+13]..lib/codeBits.ml[23,1180+40])
                          Texp_ident "Gbnf_parser!.Positions.start_of_position"
                        [
                          <arg>
                            Nolabel
                            expression (lib/codeBits.ml[23,1180+41]..lib/codeBits.ml[23,1180+44])
                              Texp_ident "pos/1159"
                        ]
                    <def>
                      pattern (lib/codeBits.ml[24,1225+6]..lib/codeBits.ml[24,1225+10])
                        Tpat_var "pos2/1231"
                      expression (lib/codeBits.ml[24,1225+13]..lib/codeBits.ml[24,1225+42])
                        Texp_apply
                        expression (lib/codeBits.ml[24,1225+13]..lib/codeBits.ml[24,1225+38])
                          Texp_ident "Gbnf_parser!.Positions.end_of_position"
                        [
                          <arg>
                            Nolabel
                            expression (lib/codeBits.ml[24,1225+39]..lib/codeBits.ml[24,1225+42])
                              Texp_ident "pos/1159"
                        ]
                  ]
                  expression (lib/codeBits.ml[25,1271+2]..lib/codeBits.ml[28,1352+18])
                    Texp_ifthenelse
                    expression (lib/codeBits.ml[25,1271+5]..lib/codeBits.ml[25,1271+57])
                      Texp_apply
                      expression (lib/codeBits.ml[25,1271+30]..lib/codeBits.ml[25,1271+32])
                        Texp_ident "Stdlib!.||"
                      [
                        <arg>
                          Nolabel
                          expression (lib/codeBits.ml[25,1271+5]..lib/codeBits.ml[25,1271+29])
                            Texp_apply
                            expression (lib/codeBits.ml[25,1271+10]..lib/codeBits.ml[25,1271+12])
                              Texp_ident "Stdlib!.=="
                            [
                              <arg>
                                Nolabel
                                expression (lib/codeBits.ml[25,1271+5]..lib/codeBits.ml[25,1271+9])
                                  Texp_ident "pos1/1230"
                              <arg>
                                Nolabel
                                expression (lib/codeBits.ml[25,1271+13]..lib/codeBits.ml[25,1271+29])
                                  Texp_ident "Stdlib!.Lexing.dummy_pos"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/codeBits.ml[25,1271+33]..lib/codeBits.ml[25,1271+57])
                            Texp_apply
                            expression (lib/codeBits.ml[25,1271+38]..lib/codeBits.ml[25,1271+40])
                              Texp_ident "Stdlib!.=="
                            [
                              <arg>
                                Nolabel
                                expression (lib/codeBits.ml[25,1271+33]..lib/codeBits.ml[25,1271+37])
                                  Texp_ident "pos2/1231"
                              <arg>
                                Nolabel
                                expression (lib/codeBits.ml[25,1271+41]..lib/codeBits.ml[25,1271+57])
                                  Texp_ident "Stdlib!.Lexing.dummy_pos"
                            ]
                      ]
                    expression (lib/codeBits.ml[26,1334+4]..lib/codeBits.ml[26,1334+10])
                      Texp_construct "PVar"
                      [
                        expression (lib/codeBits.ml[26,1334+9]..lib/codeBits.ml[26,1334+10])
                          Texp_ident "x/1158"
                      ]
                    Some
                      expression (lib/codeBits.ml[28,1352+4]..lib/codeBits.ml[28,1352+18])
                        Texp_construct "PVarLocated"
                        [
                          expression (lib/codeBits.ml[28,1352+16]..lib/codeBits.ml[28,1352+18])
                            Texp_ident "id/1157"
                        ]
          ]
    ]
  structure_item (lib/codeBits.ml[32,1387+0]..lib/codeBits.ml[38,1462+15])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[32,1387+4]..lib/codeBits.ml[32,1387+10])
          Tpat_var "etuple/1307"
        expression (lib/codeBits.ml[32,1387+13]..lib/codeBits.ml[38,1462+15])
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[33,1409+4]..lib/codeBits.ml[33,1409+6])
                Tpat_construct "[]"
                []
                None
              expression (lib/codeBits.ml[34,1419+6]..lib/codeBits.ml[34,1419+11])
                Texp_construct "EUnit"
                []
            <case>
              pattern (lib/codeBits.ml[35,1431+4]..lib/codeBits.ml[35,1431+9])
                Tpat_construct "::"
                [
                  pattern (lib/codeBits.ml[35,1431+6]..lib/codeBits.ml[35,1431+7])
                    Tpat_var "e/1309"
                  pattern (lib/codeBits.ml[35,1431+8]..lib/codeBits.ml[35,1431+9]) ghost
                    Tpat_construct "[]"
                    []
                    None
                ]
                None
              expression (lib/codeBits.ml[36,1444+6]..lib/codeBits.ml[36,1444+7])
                Texp_ident "e/1309"
            <case>
              pattern (lib/codeBits.ml[37,1452+4]..lib/codeBits.ml[37,1452+6])
                Tpat_var "es/1310"
              expression (lib/codeBits.ml[38,1462+6]..lib/codeBits.ml[38,1462+15])
                Texp_construct "ETuple"
                [
                  expression (lib/codeBits.ml[38,1462+13]..lib/codeBits.ml[38,1462+15])
                    Texp_ident "es/1310"
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[40,1479+0]..lib/codeBits.ml[46,1554+15])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[40,1479+4]..lib/codeBits.ml[40,1479+10])
          Tpat_var "ptuple/1311"
        expression (lib/codeBits.ml[40,1479+13]..lib/codeBits.ml[46,1554+15])
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[41,1501+4]..lib/codeBits.ml[41,1501+6])
                Tpat_construct "[]"
                []
                None
              expression (lib/codeBits.ml[42,1511+6]..lib/codeBits.ml[42,1511+11])
                Texp_construct "PUnit"
                []
            <case>
              pattern (lib/codeBits.ml[43,1523+4]..lib/codeBits.ml[43,1523+9])
                Tpat_construct "::"
                [
                  pattern (lib/codeBits.ml[43,1523+6]..lib/codeBits.ml[43,1523+7])
                    Tpat_var "p/1313"
                  pattern (lib/codeBits.ml[43,1523+8]..lib/codeBits.ml[43,1523+9]) ghost
                    Tpat_construct "[]"
                    []
                    None
                ]
                None
              expression (lib/codeBits.ml[44,1536+6]..lib/codeBits.ml[44,1536+7])
                Texp_ident "p/1313"
            <case>
              pattern (lib/codeBits.ml[45,1544+4]..lib/codeBits.ml[45,1544+6])
                Tpat_var "ps/1314"
              expression (lib/codeBits.ml[46,1554+6]..lib/codeBits.ml[46,1554+15])
                Texp_construct "PTuple"
                [
                  expression (lib/codeBits.ml[46,1554+13]..lib/codeBits.ml[46,1554+15])
                    Texp_ident "ps/1314"
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[50,1609+0]..lib/codeBits.ml[54,1666+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[50,1609+4]..lib/codeBits.ml[50,1609+7])
          Tpat_var "ifn/1315"
        expression (lib/codeBits.ml[50,1609+8]..lib/codeBits.ml[54,1666+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[50,1609+8]..lib/codeBits.ml[50,1609+17])
                Tpat_var "condition/1317"
              expression (lib/codeBits.ml[50,1609+18]..lib/codeBits.ml[54,1666+6]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/codeBits.ml[50,1609+18]..lib/codeBits.ml[50,1609+20])
                      Tpat_var "xs/1318"
                    expression (lib/codeBits.ml[51,1632+2]..lib/codeBits.ml[54,1666+6])
                      Texp_ifthenelse
                      expression (lib/codeBits.ml[51,1632+5]..lib/codeBits.ml[51,1632+14])
                        Texp_ident "condition/1317"
                      expression (lib/codeBits.ml[52,1652+4]..lib/codeBits.ml[52,1652+6])
                        Texp_ident "xs/1318"
                      Some
                        expression (lib/codeBits.ml[54,1666+4]..lib/codeBits.ml[54,1666+6])
                          Texp_construct "[]"
                          []
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[56,1674+0]..lib/codeBits.ml[60,1733+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[56,1674+4]..lib/codeBits.ml[56,1674+7])
          Tpat_var "if1/1319"
        expression (lib/codeBits.ml[56,1674+8]..lib/codeBits.ml[60,1733+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[56,1674+8]..lib/codeBits.ml[56,1674+17])
                Tpat_var "condition/1321"
              expression (lib/codeBits.ml[56,1674+18]..lib/codeBits.ml[60,1733+6]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/codeBits.ml[56,1674+18]..lib/codeBits.ml[56,1674+19])
                      Tpat_var "x/1322"
                    expression (lib/codeBits.ml[57,1696+2]..lib/codeBits.ml[60,1733+6])
                      Texp_ifthenelse
                      expression (lib/codeBits.ml[57,1696+5]..lib/codeBits.ml[57,1696+14])
                        Texp_ident "condition/1321"
                      expression (lib/codeBits.ml[58,1716+4]..lib/codeBits.ml[58,1716+9])
                        Texp_construct "::"
                        [
                          expression (lib/codeBits.ml[58,1716+6]..lib/codeBits.ml[58,1716+7])
                            Texp_ident "x/1322"
                          expression (lib/codeBits.ml[58,1716+8]..lib/codeBits.ml[58,1716+9]) ghost
                            Texp_construct "[]"
                            []
                        ]
                      Some
                        expression (lib/codeBits.ml[60,1733+4]..lib/codeBits.ml[60,1733+6])
                          Texp_construct "[]"
                          []
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[62,1741+0]..lib/codeBits.ml[66,1804+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[62,1741+4]..lib/codeBits.ml[62,1741+11])
          Tpat_var "ifnlazy/1323"
        expression (lib/codeBits.ml[62,1741+12]..lib/codeBits.ml[66,1804+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[62,1741+12]..lib/codeBits.ml[62,1741+21])
                Tpat_var "condition/1325"
              expression (lib/codeBits.ml[62,1741+22]..lib/codeBits.ml[66,1804+6]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/codeBits.ml[62,1741+22]..lib/codeBits.ml[62,1741+24])
                      Tpat_var "xs/1326"
                    expression (lib/codeBits.ml[63,1768+2]..lib/codeBits.ml[66,1804+6])
                      Texp_ifthenelse
                      expression (lib/codeBits.ml[63,1768+5]..lib/codeBits.ml[63,1768+14])
                        Texp_ident "condition/1325"
                      expression (lib/codeBits.ml[64,1788+4]..lib/codeBits.ml[64,1788+8])
                        Texp_apply
                        expression (lib/codeBits.ml[64,1788+4]..lib/codeBits.ml[64,1788+6])
                          Texp_ident "xs/1326"
                        [
                          <arg>
                            Nolabel
                            expression (lib/codeBits.ml[64,1788+6]..lib/codeBits.ml[64,1788+8])
                              Texp_construct "()"
                              []
                        ]
                      Some
                        expression (lib/codeBits.ml[66,1804+4]..lib/codeBits.ml[66,1804+6])
                          Texp_construct "[]"
                          []
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[70,1834+0]..lib/codeBits.ml[71,1846+21])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[70,1834+4]..lib/codeBits.ml[70,1834+9])
          Tpat_var "tunit/1327"
        expression (lib/codeBits.ml[71,1846+2]..lib/codeBits.ml[71,1846+21])
          Texp_construct "TypApp"
          [
            expression (lib/codeBits.ml[71,1846+10]..lib/codeBits.ml[71,1846+16])
              Texp_constant Const_string("unit",(lib/codeBits.ml[71,1846+11]..lib/codeBits.ml[71,1846+15]),None)
            expression (lib/codeBits.ml[71,1846+18]..lib/codeBits.ml[71,1846+20])
              Texp_construct "[]"
              []
          ]
    ]
  structure_item (lib/codeBits.ml[75,1894+0]..lib/codeBits.ml[76,1906+21])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[75,1894+4]..lib/codeBits.ml[75,1894+9])
          Tpat_var "tbool/1328"
        expression (lib/codeBits.ml[76,1906+2]..lib/codeBits.ml[76,1906+21])
          Texp_construct "TypApp"
          [
            expression (lib/codeBits.ml[76,1906+10]..lib/codeBits.ml[76,1906+16])
              Texp_constant Const_string("bool",(lib/codeBits.ml[76,1906+11]..lib/codeBits.ml[76,1906+15]),None)
            expression (lib/codeBits.ml[76,1906+18]..lib/codeBits.ml[76,1906+20])
              Texp_construct "[]"
              []
          ]
    ]
  structure_item (lib/codeBits.ml[80,1954+0]..lib/codeBits.ml[81,1965+20])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[80,1954+4]..lib/codeBits.ml[80,1954+8])
          Tpat_var "tint/1329"
        expression (lib/codeBits.ml[81,1965+2]..lib/codeBits.ml[81,1965+20])
          Texp_construct "TypApp"
          [
            expression (lib/codeBits.ml[81,1965+10]..lib/codeBits.ml[81,1965+15])
              Texp_constant Const_string("int",(lib/codeBits.ml[81,1965+11]..lib/codeBits.ml[81,1965+14]),None)
            expression (lib/codeBits.ml[81,1965+17]..lib/codeBits.ml[81,1965+19])
              Texp_construct "[]"
              []
          ]
    ]
  structure_item (lib/codeBits.ml[85,2011+0]..lib/codeBits.ml[86,2025+23])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[85,2011+4]..lib/codeBits.ml[85,2011+11])
          Tpat_var "tstring/1330"
        expression (lib/codeBits.ml[86,2025+2]..lib/codeBits.ml[86,2025+23])
          Texp_construct "TypApp"
          [
            expression (lib/codeBits.ml[86,2025+10]..lib/codeBits.ml[86,2025+18])
              Texp_constant Const_string("string",(lib/codeBits.ml[86,2025+11]..lib/codeBits.ml[86,2025+17]),None)
            expression (lib/codeBits.ml[86,2025+20]..lib/codeBits.ml[86,2025+22])
              Texp_construct "[]"
              []
          ]
    ]
  structure_item (lib/codeBits.ml[90,2077+0]..lib/codeBits.ml[91,2088+20])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[90,2077+4]..lib/codeBits.ml[90,2077+8])
          Tpat_var "texn/1331"
        expression (lib/codeBits.ml[91,2088+2]..lib/codeBits.ml[91,2088+20])
          Texp_construct "TypApp"
          [
            expression (lib/codeBits.ml[91,2088+10]..lib/codeBits.ml[91,2088+15])
              Texp_constant Const_string("exn",(lib/codeBits.ml[91,2088+11]..lib/codeBits.ml[91,2088+14]),None)
            expression (lib/codeBits.ml[91,2088+17]..lib/codeBits.ml[91,2088+19])
              Texp_construct "[]"
              []
          ]
    ]
  structure_item (lib/codeBits.ml[95,2136+0]..lib/codeBits.ml[96,2158+23])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[95,2136+4]..lib/codeBits.ml[95,2136+9])
          Tpat_var "tpair/1332"
        expression (lib/codeBits.ml[95,2136+10]..lib/codeBits.ml[96,2158+23]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[95,2136+10]..lib/codeBits.ml[95,2136+14])
                Tpat_var "typ1/1334"
              expression (lib/codeBits.ml[95,2136+15]..lib/codeBits.ml[96,2158+23]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/codeBits.ml[95,2136+15]..lib/codeBits.ml[95,2136+19])
                      Tpat_var "typ2/1335"
                    expression (lib/codeBits.ml[96,2158+2]..lib/codeBits.ml[96,2158+23])
                      Texp_construct "TypTuple"
                      [
                        expression (lib/codeBits.ml[96,2158+11]..lib/codeBits.ml[96,2158+23])
                          Texp_construct "::"
                          [
                            expression (lib/codeBits.ml[96,2158+12]..lib/codeBits.ml[96,2158+16])
                              Texp_ident "typ1/1334"
                            expression (lib/codeBits.ml[96,2158+18]..lib/codeBits.ml[96,2158+23]) ghost
                              Texp_construct "::"
                              [
                                expression (lib/codeBits.ml[96,2158+18]..lib/codeBits.ml[96,2158+22])
                                  Texp_ident "typ2/1335"
                                expression (lib/codeBits.ml[96,2158+22]..lib/codeBits.ml[96,2158+23]) ghost
                                  Texp_construct "[]"
                                  []
                              ]
                          ]
                      ]
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[100,2219+0]..lib/codeBits.ml[101,2235+32])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[100,2219+4]..lib/codeBits.ml[100,2219+13])
          Tpat_var "tposition/1336"
        expression (lib/codeBits.ml[101,2235+2]..lib/codeBits.ml[101,2235+32])
          Texp_construct "TypApp"
          [
            expression (lib/codeBits.ml[101,2235+10]..lib/codeBits.ml[101,2235+27])
              Texp_constant Const_string("Lexing.position",(lib/codeBits.ml[101,2235+11]..lib/codeBits.ml[101,2235+26]),None)
            expression (lib/codeBits.ml[101,2235+29]..lib/codeBits.ml[101,2235+31])
              Texp_construct "[]"
              []
          ]
    ]
  structure_item (lib/codeBits.ml[107,2392+0]..lib/codeBits.ml[108,2408+27])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[107,2392+4]..lib/codeBits.ml[107,2392+13])
          Tpat_var "tlocation/1337"
        expression (lib/codeBits.ml[108,2408+2]..lib/codeBits.ml[108,2408+27])
          Texp_apply
          expression (lib/codeBits.ml[108,2408+2]..lib/codeBits.ml[108,2408+7])
            Texp_ident "tpair/1332"
          [
            <arg>
              Nolabel
              expression (lib/codeBits.ml[108,2408+8]..lib/codeBits.ml[108,2408+17])
                Texp_ident "tposition/1336"
            <arg>
              Nolabel
              expression (lib/codeBits.ml[108,2408+18]..lib/codeBits.ml[108,2408+27])
                Texp_ident "tposition/1336"
          ]
    ]
  structure_item (lib/codeBits.ml[112,2471+0]..lib/codeBits.ml[113,2485+30])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[112,2471+4]..lib/codeBits.ml[112,2471+11])
          Tpat_var "tlexbuf/1338"
        expression (lib/codeBits.ml[113,2485+2]..lib/codeBits.ml[113,2485+30])
          Texp_construct "TypApp"
          [
            expression (lib/codeBits.ml[113,2485+10]..lib/codeBits.ml[113,2485+25])
              Texp_constant Const_string("Lexing.lexbuf",(lib/codeBits.ml[113,2485+11]..lib/codeBits.ml[113,2485+24]),None)
            expression (lib/codeBits.ml[113,2485+27]..lib/codeBits.ml[113,2485+29])
              Texp_construct "[]"
              []
          ]
    ]
  structure_item (lib/codeBits.ml[117,2561+0]..lib/codeBits.ml[118,2572+22])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[117,2561+4]..lib/codeBits.ml[117,2561+8])
          Tpat_var "tobj/1339"
        expression (lib/codeBits.ml[118,2572+2]..lib/codeBits.ml[118,2572+22])
          Texp_construct "TypApp"
          [
            expression (lib/codeBits.ml[118,2572+10]..lib/codeBits.ml[118,2572+17])
              Texp_constant Const_string("Obj.t",(lib/codeBits.ml[118,2572+11]..lib/codeBits.ml[118,2572+16]),None)
            expression (lib/codeBits.ml[118,2572+19]..lib/codeBits.ml[118,2572+21])
              Texp_construct "[]"
              []
          ]
    ]
  structure_item (lib/codeBits.ml[122,2629+0]..lib/codeBits.ml[123,2648+10])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[122,2629+4]..lib/codeBits.ml[122,2629+8])
          Tpat_var "tvar/1340"
        expression (lib/codeBits.ml[122,2629+9]..lib/codeBits.ml[123,2648+10]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[122,2629+9]..lib/codeBits.ml[122,2629+10])
                Tpat_var "x/1342"
              expression (lib/codeBits.ml[123,2648+2]..lib/codeBits.ml[123,2648+10])
                extra
                  Texp_constraint
                  core_type (lib/codeBits.ml[122,2629+13]..lib/codeBits.ml[122,2629+16])
                    Ttyp_constr "Gbnf_parser!.IL.typ"
                    []
                Texp_construct "TypVar"
                [
                  expression (lib/codeBits.ml[123,2648+9]..lib/codeBits.ml[123,2648+10])
                    Texp_ident "x/1342"
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[127,2691+0]..lib/codeBits.ml[131,2748+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[127,2691+4]..lib/codeBits.ml[127,2691+10])
          Tpat_var "scheme/1343"
        expression (lib/codeBits.ml[127,2691+11]..lib/codeBits.ml[131,2748+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[127,2691+11]..lib/codeBits.ml[127,2691+13])
                Tpat_var "qs/1345"
              expression (lib/codeBits.ml[127,2691+14]..lib/codeBits.ml[131,2748+3]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/codeBits.ml[127,2691+14]..lib/codeBits.ml[127,2691+15])
                      Tpat_var "t/1346"
                    expression (lib/codeBits.ml[128,2709+2]..lib/codeBits.ml[131,2748+3])
                      Texp_record
                        fields =
                          [
                            "quantifiers"
                              expression (lib/codeBits.ml[129,2713+18]..lib/codeBits.ml[129,2713+20])
                                Texp_ident "qs/1345"
                            "body"
                              expression (lib/codeBits.ml[130,2735+11]..lib/codeBits.ml[130,2735+12])
                                Texp_ident "t/1346"
                          ]
                        representation =
                          Record_regular
                        extended_expression =
                          None
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[135,2818+0]..lib/codeBits.ml[136,2838+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[135,2818+4]..lib/codeBits.ml[135,2818+15])
          Tpat_var "type2scheme/1347"
        expression (lib/codeBits.ml[135,2818+16]..lib/codeBits.ml[136,2838+13]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[135,2818+16]..lib/codeBits.ml[135,2818+17])
                Tpat_var "t/1349"
              expression (lib/codeBits.ml[136,2838+2]..lib/codeBits.ml[136,2838+13])
                Texp_apply
                expression (lib/codeBits.ml[136,2838+2]..lib/codeBits.ml[136,2838+8])
                  Texp_ident "scheme/1343"
                [
                  <arg>
                    Nolabel
                    expression (lib/codeBits.ml[136,2838+9]..lib/codeBits.ml[136,2838+11])
                      Texp_construct "[]"
                      []
                  <arg>
                    Nolabel
                    expression (lib/codeBits.ml[136,2838+12]..lib/codeBits.ml[136,2838+13])
                      Texp_ident "t/1349"
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[140,2917+0]..lib/codeBits.ml[141,2936+27])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[140,2917+4]..lib/codeBits.ml[140,2917+12])
          Tpat_var "annotate/1350"
        expression (lib/codeBits.ml[140,2917+13]..lib/codeBits.ml[141,2936+27]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[140,2917+13]..lib/codeBits.ml[140,2917+14])
                Tpat_var "e/1352"
              expression (lib/codeBits.ml[140,2917+15]..lib/codeBits.ml[141,2936+27]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/codeBits.ml[140,2917+15]..lib/codeBits.ml[140,2917+16])
                      Tpat_var "t/1353"
                    expression (lib/codeBits.ml[141,2936+2]..lib/codeBits.ml[141,2936+27])
                      Texp_construct "EAnnot"
                      [
                        expression (lib/codeBits.ml[141,2936+10]..lib/codeBits.ml[141,2936+11])
                          Texp_ident "e/1352"
                        expression (lib/codeBits.ml[141,2936+13]..lib/codeBits.ml[141,2936+26])
                          Texp_apply
                          expression (lib/codeBits.ml[141,2936+13]..lib/codeBits.ml[141,2936+24])
                            Texp_ident "type2scheme/1347"
                          [
                            <arg>
                              Nolabel
                              expression (lib/codeBits.ml[141,2936+25]..lib/codeBits.ml[141,2936+26])
                                Texp_ident "t/1353"
                          ]
                      ]
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[143,2965+0]..lib/codeBits.ml[147,3019+18])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[143,2965+4]..lib/codeBits.ml[143,2965+11])
          Tpat_var "pat2var/1354"
        expression (lib/codeBits.ml[143,2965+14]..lib/codeBits.ml[147,3019+18])
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[144,2988+4]..lib/codeBits.ml[144,2988+10])
                Tpat_construct "PVar"
                [
                  pattern (lib/codeBits.ml[144,2988+9]..lib/codeBits.ml[144,2988+10])
                    Tpat_var "x/1356"
                ]
                None
              expression (lib/codeBits.ml[145,3002+6]..lib/codeBits.ml[145,3002+7])
                Texp_ident "x/1356"
            <case>
              pattern (lib/codeBits.ml[146,3010+4]..lib/codeBits.ml[146,3010+5])
                Tpat_any
              expression (lib/codeBits.ml[147,3019+6]..lib/codeBits.ml[147,3019+18])
                Texp_assert                expression (lib/codeBits.ml[147,3019+13]..lib/codeBits.ml[147,3019+18])
                  Texp_construct "false"
                  []
          ]
    ]
  structure_item (lib/codeBits.ml[152,3132+0]..lib/codeBits.ml[162,3426+34])
    Tstr_value Rec
    [
      <def>
        pattern (lib/codeBits.ml[152,3132+8]..lib/codeBits.ml[152,3132+16])
          Tpat_var "simplify/1358"
        expression (lib/codeBits.ml[152,3132+19]..lib/codeBits.ml[162,3426+34])
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[153,3160+4]..lib/codeBits.ml[153,3160+6])
                Tpat_construct "[]"
                []
                None
              expression (lib/codeBits.ml[154,3170+6]..lib/codeBits.ml[154,3170+8])
                Texp_construct "[]"
                []
            <case>
              pattern (lib/codeBits.ml[155,3179+4]..lib/codeBits.ml[155,3179+34])
                Tpat_construct "::"
                [
                  pattern (lib/codeBits.ml[155,3179+4]..lib/codeBits.ml[155,3179+22])
                    Tpat_tuple
                    [
                      pattern (lib/codeBits.ml[155,3179+5]..lib/codeBits.ml[155,3179+12])
                        Tpat_construct "PVar"
                        [
                          pattern (lib/codeBits.ml[155,3179+10]..lib/codeBits.ml[155,3179+12])
                            Tpat_var "v1/1359"
                        ]
                        None
                      pattern (lib/codeBits.ml[155,3179+14]..lib/codeBits.ml[155,3179+21])
                        Tpat_construct "EVar"
                        [
                          pattern (lib/codeBits.ml[155,3179+19]..lib/codeBits.ml[155,3179+21])
                            Tpat_var "v2/1360"
                        ]
                        None
                    ]
                  pattern (lib/codeBits.ml[155,3179+26]..lib/codeBits.ml[155,3179+34])
                    Tpat_var "bindings/1361"
                ]
                None
              <when>
                expression (lib/codeBits.ml[155,3179+40]..lib/codeBits.ml[155,3179+47])
                  Texp_apply
                  expression (lib/codeBits.ml[155,3179+43]..lib/codeBits.ml[155,3179+44])
                    Texp_ident "Stdlib!.="
                  [
                    <arg>
                      Nolabel
                      expression (lib/codeBits.ml[155,3179+40]..lib/codeBits.ml[155,3179+42])
                        Texp_ident "v1/1359"
                    <arg>
                      Nolabel
                      expression (lib/codeBits.ml[155,3179+45]..lib/codeBits.ml[155,3179+47])
                        Texp_ident "v2/1360"
                  ]
              expression (lib/codeBits.ml[157,3271+6]..lib/codeBits.ml[157,3271+23])
                Texp_apply
                expression (lib/codeBits.ml[157,3271+6]..lib/codeBits.ml[157,3271+14])
                  Texp_ident "simplify/1358"
                [
                  <arg>
                    Nolabel
                    expression (lib/codeBits.ml[157,3271+15]..lib/codeBits.ml[157,3271+23])
                      Texp_ident "bindings/1361"
                ]
            <case>
              pattern (lib/codeBits.ml[158,3295+4]..lib/codeBits.ml[158,3295+35])
                Tpat_construct "::"
                [
                  pattern (lib/codeBits.ml[158,3295+4]..lib/codeBits.ml[158,3295+23])
                    Tpat_tuple
                    [
                      pattern (lib/codeBits.ml[158,3295+5]..lib/codeBits.ml[158,3295+14])
                        Tpat_construct "PWildcard"
                        []
                        None
                      pattern (lib/codeBits.ml[158,3295+16]..lib/codeBits.ml[158,3295+22])
                        Tpat_construct "EVar"
                        [
                          pattern (lib/codeBits.ml[158,3295+21]..lib/codeBits.ml[158,3295+22])
                            Tpat_any
                        ]
                        None
                    ]
                  pattern (lib/codeBits.ml[158,3295+27]..lib/codeBits.ml[158,3295+35])
                    Tpat_var "bindings/1362"
                ]
                None
              expression (lib/codeBits.ml[160,3375+6]..lib/codeBits.ml[160,3375+23])
                Texp_apply
                expression (lib/codeBits.ml[160,3375+6]..lib/codeBits.ml[160,3375+14])
                  Texp_ident "simplify/1358"
                [
                  <arg>
                    Nolabel
                    expression (lib/codeBits.ml[160,3375+15]..lib/codeBits.ml[160,3375+23])
                      Texp_ident "bindings/1362"
                ]
            <case>
              pattern (lib/codeBits.ml[161,3399+4]..lib/codeBits.ml[161,3399+23])
                Tpat_construct "::"
                [
                  pattern (lib/codeBits.ml[161,3399+4]..lib/codeBits.ml[161,3399+11])
                    Tpat_var "binding/1363"
                  pattern (lib/codeBits.ml[161,3399+15]..lib/codeBits.ml[161,3399+23])
                    Tpat_var "bindings/1364"
                ]
                None
              expression (lib/codeBits.ml[162,3426+6]..lib/codeBits.ml[162,3426+34])
                Texp_construct "::"
                [
                  expression (lib/codeBits.ml[162,3426+6]..lib/codeBits.ml[162,3426+13])
                    Texp_ident "binding/1363"
                  expression (lib/codeBits.ml[162,3426+17]..lib/codeBits.ml[162,3426+34])
                    Texp_apply
                    expression (lib/codeBits.ml[162,3426+17]..lib/codeBits.ml[162,3426+25])
                      Texp_ident "simplify/1358"
                    [
                      <arg>
                        Nolabel
                        expression (lib/codeBits.ml[162,3426+26]..lib/codeBits.ml[162,3426+34])
                          Texp_ident "bindings/1364"
                    ]
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[166,3529+0]..lib/codeBits.ml[175,3760+27])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[166,3529+4]..lib/codeBits.ml[166,3529+8])
          Tpat_var "blet/1366"
        expression (lib/codeBits.ml[166,3529+9]..lib/codeBits.ml[175,3760+27]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[166,3529+9]..lib/codeBits.ml[166,3529+25])
                Tpat_tuple
                [
                  pattern (lib/codeBits.ml[166,3529+10]..lib/codeBits.ml[166,3529+18])
                    Tpat_var "bindings/1368"
                  pattern (lib/codeBits.ml[166,3529+20]..lib/codeBits.ml[166,3529+24])
                    Tpat_var "body/1369"
                ]
              expression (lib/codeBits.ml[167,3557+2]..lib/codeBits.ml[175,3760+27])
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/codeBits.ml[167,3557+6]..lib/codeBits.ml[167,3557+14])
                      Tpat_var "bindings/1370"
                    expression (lib/codeBits.ml[167,3557+17]..lib/codeBits.ml[167,3557+34])
                      Texp_apply
                      expression (lib/codeBits.ml[167,3557+17]..lib/codeBits.ml[167,3557+25])
                        Texp_ident "simplify/1358"
                      [
                        <arg>
                          Nolabel
                          expression (lib/codeBits.ml[167,3557+26]..lib/codeBits.ml[167,3557+34])
                            Texp_ident "bindings/1368"
                      ]
                ]
                expression (lib/codeBits.ml[168,3595+2]..lib/codeBits.ml[175,3760+27])
                  Texp_match
                  expression (lib/codeBits.ml[168,3595+8]..lib/codeBits.ml[168,3595+22])
                    Texp_tuple
                    [
                      expression (lib/codeBits.ml[168,3595+8]..lib/codeBits.ml[168,3595+16])
                        Texp_ident "bindings/1370"
                      expression (lib/codeBits.ml[168,3595+18]..lib/codeBits.ml[168,3595+22])
                        Texp_ident "body/1369"
                    ]
                  [
                    <case>
                      pattern (lib/codeBits.ml[169,3623+4]..lib/codeBits.ml[169,3623+9])
                        Tpat_value
                        pattern (lib/codeBits.ml[169,3623+4]..lib/codeBits.ml[169,3623+9])
                          Tpat_tuple
                          [
                            pattern (lib/codeBits.ml[169,3623+4]..lib/codeBits.ml[169,3623+6])
                              Tpat_construct "[]"
                              []
                              None
                            pattern (lib/codeBits.ml[169,3623+8]..lib/codeBits.ml[169,3623+9])
                              Tpat_any
                          ]
                      expression (lib/codeBits.ml[170,3636+6]..lib/codeBits.ml[170,3636+10])
                        Texp_ident "body/1369"
                    <case>
                      pattern (lib/codeBits.ml[171,3647+4]..lib/codeBits.ml[171,3647+27])
                        Tpat_value
                        pattern (lib/codeBits.ml[171,3647+4]..lib/codeBits.ml[171,3647+27])
                          Tpat_tuple
                          [
                            pattern (lib/codeBits.ml[171,3647+4]..lib/codeBits.ml[171,3647+18])
                              Tpat_construct "::"
                              [
                                pattern (lib/codeBits.ml[171,3647+6]..lib/codeBits.ml[171,3647+16])
                                  Tpat_tuple
                                  [
                                    pattern (lib/codeBits.ml[171,3647+6]..lib/codeBits.ml[171,3647+13])
                                      Tpat_construct "PVar"
                                      [
                                        pattern (lib/codeBits.ml[171,3647+11]..lib/codeBits.ml[171,3647+13])
                                          Tpat_var "x1/1371"
                                      ]
                                      None
                                    pattern (lib/codeBits.ml[171,3647+15]..lib/codeBits.ml[171,3647+16])
                                      Tpat_var "e/1372"
                                  ]
                                pattern (lib/codeBits.ml[171,3647+17]..lib/codeBits.ml[171,3647+18]) ghost
                                  Tpat_construct "[]"
                                  []
                                  None
                              ]
                              None
                            pattern (lib/codeBits.ml[171,3647+20]..lib/codeBits.ml[171,3647+27])
                              Tpat_construct "EVar"
                              [
                                pattern (lib/codeBits.ml[171,3647+25]..lib/codeBits.ml[171,3647+27])
                                  Tpat_var "x2/1373"
                              ]
                              None
                          ]
                      <when>
                        expression (lib/codeBits.ml[171,3647+33]..lib/codeBits.ml[171,3647+40])
                          Texp_apply
                          expression (lib/codeBits.ml[171,3647+36]..lib/codeBits.ml[171,3647+37])
                            Texp_ident "Stdlib!.="
                          [
                            <arg>
                              Nolabel
                              expression (lib/codeBits.ml[171,3647+33]..lib/codeBits.ml[171,3647+35])
                                Texp_ident "x1/1371"
                            <arg>
                              Nolabel
                              expression (lib/codeBits.ml[171,3647+38]..lib/codeBits.ml[171,3647+40])
                                Texp_ident "x2/1373"
                          ]
                      expression (lib/codeBits.ml[173,3740+6]..lib/codeBits.ml[173,3740+7])
                        Texp_ident "e/1372"
                    <case>
                      pattern (lib/codeBits.ml[174,3748+4]..lib/codeBits.ml[174,3748+8])
                        Tpat_value
                        pattern (lib/codeBits.ml[174,3748+4]..lib/codeBits.ml[174,3748+8])
                          Tpat_tuple
                          [
                            pattern (lib/codeBits.ml[174,3748+4]..lib/codeBits.ml[174,3748+5])
                              Tpat_any
                            pattern (lib/codeBits.ml[174,3748+7]..lib/codeBits.ml[174,3748+8])
                              Tpat_any
                          ]
                      expression (lib/codeBits.ml[175,3760+6]..lib/codeBits.ml[175,3760+27])
                        Texp_construct "ELet"
                        [
                          expression (lib/codeBits.ml[175,3760+12]..lib/codeBits.ml[175,3760+20])
                            Texp_ident "bindings/1370"
                          expression (lib/codeBits.ml[175,3760+22]..lib/codeBits.ml[175,3760+26])
                            Texp_ident "body/1369"
                        ]
                  ]
          ]
    ]
  structure_item (lib/codeBits.ml[177,3789+0]..lib/codeBits.ml[178,3821+43])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[177,3789+4]..lib/codeBits.ml[177,3789+8])
          Tpat_var "mlet/1375"
        expression (lib/codeBits.ml[177,3789+9]..lib/codeBits.ml[178,3821+43]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[177,3789+9]..lib/codeBits.ml[177,3789+16])
                Tpat_var "formals/1377"
              expression (lib/codeBits.ml[177,3789+17]..lib/codeBits.ml[178,3821+43]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/codeBits.ml[177,3789+17]..lib/codeBits.ml[177,3789+24])
                      Tpat_var "actuals/1378"
                    expression (lib/codeBits.ml[177,3789+25]..lib/codeBits.ml[178,3821+43]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/codeBits.ml[177,3789+25]..lib/codeBits.ml[177,3789+29])
                            Tpat_var "body/1379"
                          expression (lib/codeBits.ml[178,3821+2]..lib/codeBits.ml[178,3821+43])
                            Texp_apply
                            expression (lib/codeBits.ml[178,3821+2]..lib/codeBits.ml[178,3821+6])
                              Texp_ident "blet/1366"
                            [
                              <arg>
                                Nolabel
                                expression (lib/codeBits.ml[178,3821+7]..lib/codeBits.ml[178,3821+43])
                                  Texp_tuple
                                  [
                                    expression (lib/codeBits.ml[178,3821+8]..lib/codeBits.ml[178,3821+36])
                                      Texp_apply
                                      expression (lib/codeBits.ml[178,3821+8]..lib/codeBits.ml[178,3821+20])
                                        Texp_ident "Stdlib!.List.combine"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/codeBits.ml[178,3821+21]..lib/codeBits.ml[178,3821+28])
                                            Texp_ident "formals/1377"
                                        <arg>
                                          Nolabel
                                          expression (lib/codeBits.ml[178,3821+29]..lib/codeBits.ml[178,3821+36])
                                            Texp_ident "actuals/1378"
                                      ]
                                    expression (lib/codeBits.ml[178,3821+38]..lib/codeBits.ml[178,3821+42])
                                      Texp_ident "body/1379"
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[182,3920+0]..lib/codeBits.ml[197,4381+48])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[182,3920+4]..lib/codeBits.ml[182,3920+11])
          Tpat_var "eletand/1443"
        expression (lib/codeBits.ml[182,3920+12]..lib/codeBits.ml[197,4381+48]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[182,3920+12]..lib/codeBits.ml[182,3920+28])
                Tpat_tuple
                [
                  pattern (lib/codeBits.ml[182,3920+13]..lib/codeBits.ml[182,3920+21])
                    Tpat_var "bindings/1445"
                  pattern (lib/codeBits.ml[182,3920+23]..lib/codeBits.ml[182,3920+27])
                    Tpat_var "body/1446"
                ]
              expression (lib/codeBits.ml[183,3951+2]..lib/codeBits.ml[197,4381+48])
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/codeBits.ml[183,3951+6]..lib/codeBits.ml[183,3951+14])
                      Tpat_var "bindings/1447"
                    expression (lib/codeBits.ml[183,3951+17]..lib/codeBits.ml[183,3951+34])
                      Texp_apply
                      expression (lib/codeBits.ml[183,3951+17]..lib/codeBits.ml[183,3951+25])
                        Texp_ident "simplify/1358"
                      [
                        <arg>
                          Nolabel
                          expression (lib/codeBits.ml[183,3951+26]..lib/codeBits.ml[183,3951+34])
                            Texp_ident "bindings/1445"
                      ]
                ]
                expression (lib/codeBits.ml[184,3989+2]..lib/codeBits.ml[197,4381+48])
                  Texp_match
                  expression (lib/codeBits.ml[184,3989+8]..lib/codeBits.ml[184,3989+22])
                    Texp_tuple
                    [
                      expression (lib/codeBits.ml[184,3989+8]..lib/codeBits.ml[184,3989+16])
                        Texp_ident "bindings/1447"
                      expression (lib/codeBits.ml[184,3989+18]..lib/codeBits.ml[184,3989+22])
                        Texp_ident "body/1446"
                    ]
                  [
                    <case>
                      pattern (lib/codeBits.ml[185,4017+4]..lib/codeBits.ml[185,4017+9])
                        Tpat_value
                        pattern (lib/codeBits.ml[185,4017+4]..lib/codeBits.ml[185,4017+9])
                          Tpat_tuple
                          [
                            pattern (lib/codeBits.ml[185,4017+4]..lib/codeBits.ml[185,4017+6])
                              Tpat_construct "[]"
                              []
                              None
                            pattern (lib/codeBits.ml[185,4017+8]..lib/codeBits.ml[185,4017+9])
                              Tpat_any
                          ]
                      expression (lib/codeBits.ml[187,4070+6]..lib/codeBits.ml[187,4070+10])
                        Texp_ident "body/1446"
                    <case>
                      pattern (lib/codeBits.ml[188,4081+4]..lib/codeBits.ml[188,4081+27])
                        Tpat_value
                        pattern (lib/codeBits.ml[188,4081+4]..lib/codeBits.ml[188,4081+27])
                          Tpat_tuple
                          [
                            pattern (lib/codeBits.ml[188,4081+4]..lib/codeBits.ml[188,4081+18])
                              Tpat_construct "::"
                              [
                                pattern (lib/codeBits.ml[188,4081+6]..lib/codeBits.ml[188,4081+16])
                                  Tpat_tuple
                                  [
                                    pattern (lib/codeBits.ml[188,4081+6]..lib/codeBits.ml[188,4081+13])
                                      Tpat_construct "PVar"
                                      [
                                        pattern (lib/codeBits.ml[188,4081+11]..lib/codeBits.ml[188,4081+13])
                                          Tpat_var "x1/1448"
                                      ]
                                      None
                                    pattern (lib/codeBits.ml[188,4081+15]..lib/codeBits.ml[188,4081+16])
                                      Tpat_var "e/1449"
                                  ]
                                pattern (lib/codeBits.ml[188,4081+17]..lib/codeBits.ml[188,4081+18]) ghost
                                  Tpat_construct "[]"
                                  []
                                  None
                              ]
                              None
                            pattern (lib/codeBits.ml[188,4081+20]..lib/codeBits.ml[188,4081+27])
                              Tpat_construct "EVar"
                              [
                                pattern (lib/codeBits.ml[188,4081+25]..lib/codeBits.ml[188,4081+27])
                                  Tpat_var "x2/1450"
                              ]
                              None
                          ]
                      <when>
                        expression (lib/codeBits.ml[188,4081+33]..lib/codeBits.ml[188,4081+40])
                          Texp_apply
                          expression (lib/codeBits.ml[188,4081+36]..lib/codeBits.ml[188,4081+37])
                            Texp_ident "Stdlib!.="
                          [
                            <arg>
                              Nolabel
                              expression (lib/codeBits.ml[188,4081+33]..lib/codeBits.ml[188,4081+35])
                                Texp_ident "x1/1448"
                            <arg>
                              Nolabel
                              expression (lib/codeBits.ml[188,4081+38]..lib/codeBits.ml[188,4081+40])
                                Texp_ident "x2/1450"
                          ]
                      expression (lib/codeBits.ml[190,4174+6]..lib/codeBits.ml[190,4174+7])
                        Texp_ident "e/1449"
                    <case>
                      pattern (lib/codeBits.ml[191,4182+4]..lib/codeBits.ml[191,4182+12])
                        Tpat_value
                        pattern (lib/codeBits.ml[191,4182+4]..lib/codeBits.ml[191,4182+12])
                          Tpat_tuple
                          [
                            pattern (lib/codeBits.ml[191,4182+4]..lib/codeBits.ml[191,4182+9])
                              Tpat_construct "::"
                              [
                                pattern (lib/codeBits.ml[191,4182+6]..lib/codeBits.ml[191,4182+7])
                                  Tpat_any
                                pattern (lib/codeBits.ml[191,4182+8]..lib/codeBits.ml[191,4182+9]) ghost
                                  Tpat_construct "[]"
                                  []
                                  None
                              ]
                              None
                            pattern (lib/codeBits.ml[191,4182+11]..lib/codeBits.ml[191,4182+12])
                              Tpat_any
                          ]
                      expression (lib/codeBits.ml[193,4236+6]..lib/codeBits.ml[193,4236+27])
                        Texp_construct "ELet"
                        [
                          expression (lib/codeBits.ml[193,4236+12]..lib/codeBits.ml[193,4236+20])
                            Texp_ident "bindings/1447"
                          expression (lib/codeBits.ml[193,4236+22]..lib/codeBits.ml[193,4236+26])
                            Texp_ident "body/1446"
                        ]
                    <case>
                      pattern (lib/codeBits.ml[194,4264+4]..lib/codeBits.ml[194,4264+18])
                        Tpat_value
                        pattern (lib/codeBits.ml[194,4264+4]..lib/codeBits.ml[194,4264+18])
                          Tpat_tuple
                          [
                            pattern (lib/codeBits.ml[194,4264+4]..lib/codeBits.ml[194,4264+15])
                              Tpat_construct "::"
                              [
                                pattern (lib/codeBits.ml[194,4264+4]..lib/codeBits.ml[194,4264+5])
                                  Tpat_any
                                pattern (lib/codeBits.ml[194,4264+9]..lib/codeBits.ml[194,4264+15])
                                  Tpat_construct "::"
                                  [
                                    pattern (lib/codeBits.ml[194,4264+9]..lib/codeBits.ml[194,4264+10])
                                      Tpat_any
                                    pattern (lib/codeBits.ml[194,4264+14]..lib/codeBits.ml[194,4264+15])
                                      Tpat_any
                                  ]
                                  None
                              ]
                              None
                            pattern (lib/codeBits.ml[194,4264+17]..lib/codeBits.ml[194,4264+18])
                              Tpat_any
                          ]
                      expression (lib/codeBits.ml[196,4334+6]..lib/codeBits.ml[197,4381+48])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (lib/codeBits.ml[196,4334+10]..lib/codeBits.ml[196,4334+21])
                              Tpat_tuple
                              [
                                pattern (lib/codeBits.ml[196,4334+10]..lib/codeBits.ml[196,4334+14])
                                  Tpat_var "pats/1451"
                                pattern (lib/codeBits.ml[196,4334+16]..lib/codeBits.ml[196,4334+21])
                                  Tpat_var "exprs/1452"
                              ]
                            expression (lib/codeBits.ml[196,4334+24]..lib/codeBits.ml[196,4334+43])
                              Texp_apply
                              expression (lib/codeBits.ml[196,4334+24]..lib/codeBits.ml[196,4334+34])
                                Texp_ident "Stdlib!.List.split"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/codeBits.ml[196,4334+35]..lib/codeBits.ml[196,4334+43])
                                    Texp_ident "bindings/1447"
                              ]
                        ]
                        expression (lib/codeBits.ml[197,4381+6]..lib/codeBits.ml[197,4381+48])
                          Texp_construct "ELet"
                          [
                            expression (lib/codeBits.ml[197,4381+12]..lib/codeBits.ml[197,4381+41])
                              Texp_construct "::"
                              [
                                expression (lib/codeBits.ml[197,4381+14]..lib/codeBits.ml[197,4381+39])
                                  Texp_tuple
                                  [
                                    expression (lib/codeBits.ml[197,4381+14]..lib/codeBits.ml[197,4381+25])
                                      Texp_construct "PTuple"
                                      [
                                        expression (lib/codeBits.ml[197,4381+21]..lib/codeBits.ml[197,4381+25])
                                          Texp_ident "pats/1451"
                                      ]
                                    expression (lib/codeBits.ml[197,4381+27]..lib/codeBits.ml[197,4381+39])
                                      Texp_construct "ETuple"
                                      [
                                        expression (lib/codeBits.ml[197,4381+34]..lib/codeBits.ml[197,4381+39])
                                          Texp_ident "exprs/1452"
                                      ]
                                  ]
                                expression (lib/codeBits.ml[197,4381+40]..lib/codeBits.ml[197,4381+41]) ghost
                                  Texp_construct "[]"
                                  []
                              ]
                            expression (lib/codeBits.ml[197,4381+43]..lib/codeBits.ml[197,4381+47])
                              Texp_ident "body/1446"
                          ]
                  ]
          ]
    ]
  structure_item (lib/codeBits.ml[201,4497+0]..lib/codeBits.ml[202,4518+34])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[201,4497+4]..lib/codeBits.ml[201,4497+18])
          Tpat_var "eraisenotfound/1454"
        expression (lib/codeBits.ml[202,4518+2]..lib/codeBits.ml[202,4518+34])
          Texp_construct "ERaise"
          [
            expression (lib/codeBits.ml[202,4518+9]..lib/codeBits.ml[202,4518+34])
              Texp_construct "EData"
              [
                expression (lib/codeBits.ml[202,4518+17]..lib/codeBits.ml[202,4518+28])
                  Texp_constant Const_string("Not_found",(lib/codeBits.ml[202,4518+18]..lib/codeBits.ml[202,4518+27]),None)
                expression (lib/codeBits.ml[202,4518+30]..lib/codeBits.ml[202,4518+32])
                  Texp_construct "[]"
                  []
              ]
          ]
    ]
  structure_item (lib/codeBits.ml[204,4554+0]..lib/codeBits.ml[205,4570+29])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[204,4554+4]..lib/codeBits.ml[204,4554+11])
          Tpat_var "eassert/1455"
        expression (lib/codeBits.ml[204,4554+12]..lib/codeBits.ml[205,4570+29]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[204,4554+12]..lib/codeBits.ml[204,4554+13])
                Tpat_var "e/1457"
              expression (lib/codeBits.ml[205,4570+2]..lib/codeBits.ml[205,4570+29])
                Texp_construct "EApp"
                [
                  expression (lib/codeBits.ml[205,4570+8]..lib/codeBits.ml[205,4570+21])
                    Texp_construct "EVar"
                    [
                      expression (lib/codeBits.ml[205,4570+13]..lib/codeBits.ml[205,4570+21])
                        Texp_constant Const_string("assert",(lib/codeBits.ml[205,4570+14]..lib/codeBits.ml[205,4570+20]),None)
                    ]
                  expression (lib/codeBits.ml[205,4570+23]..lib/codeBits.ml[205,4570+28])
                    Texp_construct "::"
                    [
                      expression (lib/codeBits.ml[205,4570+25]..lib/codeBits.ml[205,4570+26])
                        Texp_ident "e/1457"
                      expression (lib/codeBits.ml[205,4570+27]..lib/codeBits.ml[205,4570+28]) ghost
                        Texp_construct "[]"
                        []
                    ]
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[210,4687+0]..lib/codeBits.ml[211,4700+16])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[210,4687+4]..lib/codeBits.ml[210,4687+10])
          Tpat_var "bottom/1458"
        expression (lib/codeBits.ml[211,4700+2]..lib/codeBits.ml[211,4700+16])
          Texp_ident "eraisenotfound/1454"
    ]
  structure_item (lib/codeBits.ml[215,4744+0]..lib/codeBits.ml[216,4764+21])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[215,4744+4]..lib/codeBits.ml[215,4744+10])
          extra
            Tpat_extra_constraint
            core_type (lib/codeBits.ml[215,4744+13]..lib/codeBits.ml[215,4744+17]) ghost
              Ttyp_poly
              core_type (lib/codeBits.ml[215,4744+13]..lib/codeBits.ml[215,4744+17])
                Ttyp_constr "Gbnf_parser!.IL.expr"
                []
          Tpat_var "efalse/1459"
        expression (lib/codeBits.ml[216,4764+2]..lib/codeBits.ml[216,4764+21])
          extra
            Texp_constraint
            core_type (lib/codeBits.ml[215,4744+13]..lib/codeBits.ml[215,4744+17])
              Ttyp_constr "Gbnf_parser!.IL.expr"
              []
          Texp_construct "EData"
          [
            expression (lib/codeBits.ml[216,4764+9]..lib/codeBits.ml[216,4764+16])
              Texp_constant Const_string("false",(lib/codeBits.ml[216,4764+10]..lib/codeBits.ml[216,4764+15]),None)
            expression (lib/codeBits.ml[216,4764+18]..lib/codeBits.ml[216,4764+20])
              Texp_construct "[]"
              []
          ]
    ]
  structure_item (lib/codeBits.ml[218,4787+0]..lib/codeBits.ml[219,4806+20])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[218,4787+4]..lib/codeBits.ml[218,4787+9])
          extra
            Tpat_extra_constraint
            core_type (lib/codeBits.ml[218,4787+12]..lib/codeBits.ml[218,4787+16]) ghost
              Ttyp_poly
              core_type (lib/codeBits.ml[218,4787+12]..lib/codeBits.ml[218,4787+16])
                Ttyp_constr "Gbnf_parser!.IL.expr"
                []
          Tpat_var "etrue/1460"
        expression (lib/codeBits.ml[219,4806+2]..lib/codeBits.ml[219,4806+20])
          extra
            Texp_constraint
            core_type (lib/codeBits.ml[218,4787+12]..lib/codeBits.ml[218,4787+16])
              Ttyp_constr "Gbnf_parser!.IL.expr"
              []
          Texp_construct "EData"
          [
            expression (lib/codeBits.ml[219,4806+9]..lib/codeBits.ml[219,4806+15])
              Texp_constant Const_string("true",(lib/codeBits.ml[219,4806+10]..lib/codeBits.ml[219,4806+14]),None)
            expression (lib/codeBits.ml[219,4806+17]..lib/codeBits.ml[219,4806+19])
              Texp_construct "[]"
              []
          ]
    ]
  structure_item (lib/codeBits.ml[221,4828+0]..lib/codeBits.ml[222,4847+29])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[221,4828+4]..lib/codeBits.ml[221,4828+14])
          Tpat_var "eboolconst/1461"
        expression (lib/codeBits.ml[221,4828+15]..lib/codeBits.ml[222,4847+29]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[221,4828+15]..lib/codeBits.ml[221,4828+16])
                Tpat_var "b/1463"
              expression (lib/codeBits.ml[222,4847+2]..lib/codeBits.ml[222,4847+29])
                Texp_ifthenelse
                expression (lib/codeBits.ml[222,4847+5]..lib/codeBits.ml[222,4847+6])
                  Texp_ident "b/1463"
                expression (lib/codeBits.ml[222,4847+12]..lib/codeBits.ml[222,4847+17])
                  Texp_ident "etrue/1460"
                Some
                  expression (lib/codeBits.ml[222,4847+23]..lib/codeBits.ml[222,4847+29])
                    Texp_ident "efalse/1459"
          ]
    ]
  structure_item (lib/codeBits.ml[226,4906+0]..lib/codeBits.ml[227,4918+20])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[226,4906+4]..lib/codeBits.ml[226,4906+9])
          Tpat_var "enone/1464"
        expression (lib/codeBits.ml[227,4918+2]..lib/codeBits.ml[227,4918+20])
          Texp_construct "EData"
          [
            expression (lib/codeBits.ml[227,4918+9]..lib/codeBits.ml[227,4918+15])
              Texp_constant Const_string("None",(lib/codeBits.ml[227,4918+10]..lib/codeBits.ml[227,4918+14]),None)
            expression (lib/codeBits.ml[227,4918+17]..lib/codeBits.ml[227,4918+19])
              Texp_construct "[]"
              []
          ]
    ]
  structure_item (lib/codeBits.ml[229,4940+0]..lib/codeBits.ml[230,4954+21])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[229,4940+4]..lib/codeBits.ml[229,4940+9])
          Tpat_var "esome/1465"
        expression (lib/codeBits.ml[229,4940+10]..lib/codeBits.ml[230,4954+21]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[229,4940+10]..lib/codeBits.ml[229,4940+11])
                Tpat_var "e/1467"
              expression (lib/codeBits.ml[230,4954+2]..lib/codeBits.ml[230,4954+21])
                Texp_construct "EData"
                [
                  expression (lib/codeBits.ml[230,4954+9]..lib/codeBits.ml[230,4954+15])
                    Texp_constant Const_string("Some",(lib/codeBits.ml[230,4954+10]..lib/codeBits.ml[230,4954+14]),None)
                  expression (lib/codeBits.ml[230,4954+17]..lib/codeBits.ml[230,4954+20])
                    Texp_construct "::"
                    [
                      expression (lib/codeBits.ml[230,4954+18]..lib/codeBits.ml[230,4954+19])
                        Texp_ident "e/1467"
                      expression (lib/codeBits.ml[230,4954+19]..lib/codeBits.ml[230,4954+20]) ghost
                        Texp_construct "[]"
                        []
                    ]
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[234,5003+0]..lib/codeBits.ml[239,5086+35])
    Tstr_value Rec
    [
      <def>
        pattern (lib/codeBits.ml[234,5003+8]..lib/codeBits.ml[234,5003+13])
          Tpat_var "elist/1468"
        expression (lib/codeBits.ml[234,5003+14]..lib/codeBits.ml[239,5086+35]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[234,5003+14]..lib/codeBits.ml[234,5003+16])
                Tpat_var "xs/1469"
              expression (lib/codeBits.ml[235,5022+2]..lib/codeBits.ml[239,5086+35])
                Texp_match
                expression (lib/codeBits.ml[235,5022+8]..lib/codeBits.ml[235,5022+10])
                  Texp_ident "xs/1469"
                [
                  <case>
                    pattern (lib/codeBits.ml[236,5038+4]..lib/codeBits.ml[236,5038+6])
                      Tpat_value
                      pattern (lib/codeBits.ml[236,5038+4]..lib/codeBits.ml[236,5038+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (lib/codeBits.ml[237,5048+6]..lib/codeBits.ml[237,5048+22])
                      Texp_construct "EData"
                      [
                        expression (lib/codeBits.ml[237,5048+13]..lib/codeBits.ml[237,5048+17])
                          Texp_constant Const_string("[]",(lib/codeBits.ml[237,5048+14]..lib/codeBits.ml[237,5048+16]),None)
                        expression (lib/codeBits.ml[237,5048+19]..lib/codeBits.ml[237,5048+21])
                          Texp_construct "[]"
                          []
                      ]
                  <case>
                    pattern (lib/codeBits.ml[238,5071+4]..lib/codeBits.ml[238,5071+11])
                      Tpat_value
                      pattern (lib/codeBits.ml[238,5071+4]..lib/codeBits.ml[238,5071+11])
                        Tpat_construct "::"
                        [
                          pattern (lib/codeBits.ml[238,5071+4]..lib/codeBits.ml[238,5071+5])
                            Tpat_var "x/1470"
                          pattern (lib/codeBits.ml[238,5071+9]..lib/codeBits.ml[238,5071+11])
                            Tpat_var "xs/1471"
                        ]
                        None
                    expression (lib/codeBits.ml[239,5086+6]..lib/codeBits.ml[239,5086+35])
                      Texp_construct "EData"
                      [
                        expression (lib/codeBits.ml[239,5086+13]..lib/codeBits.ml[239,5086+17])
                          Texp_constant Const_string("::",(lib/codeBits.ml[239,5086+14]..lib/codeBits.ml[239,5086+16]),None)
                        expression (lib/codeBits.ml[239,5086+19]..lib/codeBits.ml[239,5086+34])
                          Texp_construct "::"
                          [
                            expression (lib/codeBits.ml[239,5086+21]..lib/codeBits.ml[239,5086+22])
                              Texp_ident "x/1470"
                            expression (lib/codeBits.ml[239,5086+24]..lib/codeBits.ml[239,5086+34]) ghost
                              Texp_construct "::"
                              [
                                expression (lib/codeBits.ml[239,5086+24]..lib/codeBits.ml[239,5086+32])
                                  Texp_apply
                                  expression (lib/codeBits.ml[239,5086+24]..lib/codeBits.ml[239,5086+29])
                                    Texp_ident "elist/1468"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/codeBits.ml[239,5086+30]..lib/codeBits.ml[239,5086+32])
                                        Texp_ident "xs/1471"
                                  ]
                                expression (lib/codeBits.ml[239,5086+33]..lib/codeBits.ml[239,5086+34]) ghost
                                  Texp_construct "[]"
                                  []
                              ]
                          ]
                      ]
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[243,5161+0]..lib/codeBits.ml[244,5184+29])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[243,5161+4]..lib/codeBits.ml[243,5161+8])
          Tpat_var "pint/1472"
        expression (lib/codeBits.ml[243,5161+9]..lib/codeBits.ml[244,5184+29]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[243,5161+9]..lib/codeBits.ml[243,5161+10])
                Tpat_var "k/1474"
              expression (lib/codeBits.ml[244,5184+2]..lib/codeBits.ml[244,5184+29])
                extra
                  Texp_constraint
                  core_type (lib/codeBits.ml[243,5161+13]..lib/codeBits.ml[243,5161+20])
                    Ttyp_constr "Gbnf_parser!.IL.pattern"
                    []
                Texp_construct "PData"
                [
                  expression (lib/codeBits.ml[244,5184+9]..lib/codeBits.ml[244,5184+24])
                    Texp_apply
                    expression (lib/codeBits.ml[244,5184+9]..lib/codeBits.ml[244,5184+22])
                      Texp_ident "Stdlib!.string_of_int"
                    [
                      <arg>
                        Nolabel
                        expression (lib/codeBits.ml[244,5184+23]..lib/codeBits.ml[244,5184+24])
                          Texp_ident "k/1474"
                    ]
                  expression (lib/codeBits.ml[244,5184+26]..lib/codeBits.ml[244,5184+28])
                    Texp_construct "[]"
                    []
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[248,5255+0]..lib/codeBits.ml[249,5282+22])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[248,5255+4]..lib/codeBits.ml[248,5255+9])
          Tpat_var "arrow/1475"
        expression (lib/codeBits.ml[248,5255+10]..lib/codeBits.ml[249,5282+22]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[248,5255+10]..lib/codeBits.ml[248,5255+13])
                Tpat_var "typ/1477"
              expression (lib/codeBits.ml[248,5255+14]..lib/codeBits.ml[249,5282+22]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/codeBits.ml[248,5255+14]..lib/codeBits.ml[248,5255+18])
                      Tpat_var "body/1478"
                    expression (lib/codeBits.ml[249,5282+2]..lib/codeBits.ml[249,5282+22])
                      extra
                        Texp_constraint
                        core_type (lib/codeBits.ml[248,5255+21]..lib/codeBits.ml[248,5255+24])
                          Ttyp_constr "Gbnf_parser!.IL.typ"
                          []
                      Texp_construct "TypArrow"
                      [
                        expression (lib/codeBits.ml[249,5282+12]..lib/codeBits.ml[249,5282+15])
                          Texp_ident "typ/1477"
                        expression (lib/codeBits.ml[249,5282+17]..lib/codeBits.ml[249,5282+21])
                          Texp_ident "body/1478"
                      ]
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[251,5306+0]..lib/codeBits.ml[255,5381+8])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[251,5306+4]..lib/codeBits.ml[251,5306+11])
          Tpat_var "arrowif/1479"
        expression (lib/codeBits.ml[251,5306+12]..lib/codeBits.ml[255,5381+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[251,5306+12]..lib/codeBits.ml[251,5306+16])
                Tpat_var "flag/1481"
              expression (lib/codeBits.ml[251,5306+17]..lib/codeBits.ml[255,5381+8]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/codeBits.ml[251,5306+17]..lib/codeBits.ml[251,5306+20])
                      Tpat_var "typ/1482"
                    expression (lib/codeBits.ml[251,5306+21]..lib/codeBits.ml[255,5381+8]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/codeBits.ml[251,5306+21]..lib/codeBits.ml[251,5306+25])
                            Tpat_var "body/1483"
                          expression (lib/codeBits.ml[252,5340+2]..lib/codeBits.ml[255,5381+8])
                            extra
                              Texp_constraint
                              core_type (lib/codeBits.ml[251,5306+28]..lib/codeBits.ml[251,5306+31])
                                Ttyp_constr "Gbnf_parser!.IL.typ"
                                []
                            Texp_ifthenelse
                            expression (lib/codeBits.ml[252,5340+5]..lib/codeBits.ml[252,5340+9])
                              Texp_ident "flag/1481"
                            expression (lib/codeBits.ml[253,5355+4]..lib/codeBits.ml[253,5355+18])
                              Texp_apply
                              expression (lib/codeBits.ml[253,5355+4]..lib/codeBits.ml[253,5355+9])
                                Texp_ident "arrow/1475"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/codeBits.ml[253,5355+10]..lib/codeBits.ml[253,5355+13])
                                    Texp_ident "typ/1482"
                                <arg>
                                  Nolabel
                                  expression (lib/codeBits.ml[253,5355+14]..lib/codeBits.ml[253,5355+18])
                                    Texp_ident "body/1483"
                              ]
                            Some
                              expression (lib/codeBits.ml[255,5381+4]..lib/codeBits.ml[255,5381+8])
                                Texp_ident "body/1483"
                      ]
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[257,5391+0]..lib/codeBits.ml[258,5420+33])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[257,5391+4]..lib/codeBits.ml[257,5391+10])
          Tpat_var "marrow/1484"
        expression (lib/codeBits.ml[257,5391+11]..lib/codeBits.ml[258,5420+33]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[257,5391+11]..lib/codeBits.ml[257,5391+15])
                Tpat_var "typs/1486"
              expression (lib/codeBits.ml[257,5391+16]..lib/codeBits.ml[258,5420+33]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/codeBits.ml[257,5391+16]..lib/codeBits.ml[257,5391+20])
                      Tpat_var "body/1487"
                    expression (lib/codeBits.ml[258,5420+2]..lib/codeBits.ml[258,5420+33])
                      extra
                        Texp_constraint
                        core_type (lib/codeBits.ml[257,5391+23]..lib/codeBits.ml[257,5391+26])
                          Ttyp_constr "Gbnf_parser!.IL.typ"
                          []
                      Texp_apply
                      expression (lib/codeBits.ml[258,5420+2]..lib/codeBits.ml[258,5420+17])
                        Texp_ident "Stdlib!.List.fold_right"
                      [
                        <arg>
                          Nolabel
                          expression (lib/codeBits.ml[258,5420+18]..lib/codeBits.ml[258,5420+23])
                            Texp_ident "arrow/1475"
                        <arg>
                          Nolabel
                          expression (lib/codeBits.ml[258,5420+24]..lib/codeBits.ml[258,5420+28])
                            Texp_ident "typs/1486"
                        <arg>
                          Nolabel
                          expression (lib/codeBits.ml[258,5420+29]..lib/codeBits.ml[258,5420+33])
                            Texp_ident "body/1487"
                      ]
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[262,5471+0]..lib/codeBits.ml[267,5582+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[262,5471+4]..lib/codeBits.ml[262,5471+11])
          Tpat_var "eprintf/1488"
        expression (lib/codeBits.ml[262,5471+12]..lib/codeBits.ml[267,5582+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[262,5471+12]..lib/codeBits.ml[262,5471+18])
                Tpat_var "format/1490"
              expression (lib/codeBits.ml[262,5471+19]..lib/codeBits.ml[267,5582+3]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/codeBits.ml[262,5471+19]..lib/codeBits.ml[262,5471+23])
                      Tpat_var "args/1491"
                    expression (lib/codeBits.ml[263,5497+2]..lib/codeBits.ml[267,5582+3])
                      Texp_construct "EApp"
                      [
                        expression (lib/codeBits.ml[264,5506+4]..lib/codeBits.ml[264,5506+25])
                          Texp_construct "EVar"
                          [
                            expression (lib/codeBits.ml[264,5506+9]..lib/codeBits.ml[264,5506+25])
                              Texp_constant Const_string("Printf.eprintf",(lib/codeBits.ml[264,5506+10]..lib/codeBits.ml[264,5506+24]),None)
                          ]
                        expression (lib/codeBits.ml[265,5533+4]..lib/codeBits.ml[266,5573+8])
                          Texp_construct "::"
                          [
                            expression (lib/codeBits.ml[265,5533+4]..lib/codeBits.ml[265,5533+36])
                              Texp_construct "EStringConst"
                              [
                                expression (lib/codeBits.ml[265,5533+18]..lib/codeBits.ml[265,5533+35])
                                  Texp_apply
                                  expression (lib/codeBits.ml[265,5533+26]..lib/codeBits.ml[265,5533+27])
                                    Texp_ident "Stdlib!.^"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/codeBits.ml[265,5533+19]..lib/codeBits.ml[265,5533+25])
                                        Texp_ident "format/1490"
                                    <arg>
                                      Nolabel
                                      expression (lib/codeBits.ml[265,5533+28]..lib/codeBits.ml[265,5533+34])
                                        Texp_constant Const_string("\n%!",(lib/codeBits.ml[265,5533+29]..lib/codeBits.ml[265,5533+33]),None)
                                  ]
                              ]
                            expression (lib/codeBits.ml[266,5573+4]..lib/codeBits.ml[266,5573+8])
                              Texp_ident "args/1491"
                          ]
                      ]
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[269,5587+0]..lib/codeBits.ml[270,5660+34])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[269,5587+4]..lib/codeBits.ml[269,5587+9])
          Tpat_var "trace/1492"
        expression (lib/codeBits.ml[269,5587+10]..lib/codeBits.ml[270,5660+34]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[269,5587+11]..lib/codeBits.ml[269,5587+17])
                extra
                  Tpat_extra_constraint
                  core_type (lib/codeBits.ml[269,5587+20]..lib/codeBits.ml[269,5587+26])
                    Ttyp_constr "string/15!"
                    []
                Tpat_alias "format/1494"
                pattern (lib/codeBits.ml[269,5587+11]..lib/codeBits.ml[269,5587+17])
                  Tpat_any
              expression (lib/codeBits.ml[269,5587+28]..lib/codeBits.ml[270,5660+34]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/codeBits.ml[269,5587+29]..lib/codeBits.ml[269,5587+33])
                      extra
                        Tpat_extra_constraint
                        core_type (lib/codeBits.ml[269,5587+36]..lib/codeBits.ml[269,5587+45])
                          Ttyp_constr "list/9!"
                          [
                            core_type (lib/codeBits.ml[269,5587+36]..lib/codeBits.ml[269,5587+40])
                              Ttyp_constr "Gbnf_parser!.IL.expr"
                              []
                          ]
                      Tpat_alias "args/1495"
                      pattern (lib/codeBits.ml[269,5587+29]..lib/codeBits.ml[269,5587+33])
                        Tpat_any
                    expression (lib/codeBits.ml[270,5660+4]..lib/codeBits.ml[270,5660+34])
                      extra
                        Texp_constraint
                        core_type (lib/codeBits.ml[269,5587+49]..lib/codeBits.ml[269,5587+70])
                          Ttyp_constr "list/9!"
                          [
                            core_type (lib/codeBits.ml[269,5587+50]..lib/codeBits.ml[269,5587+64])
                              Ttyp_tuple
                              [
                                core_type (lib/codeBits.ml[269,5587+50]..lib/codeBits.ml[269,5587+57])
                                  Ttyp_constr "Gbnf_parser!.IL.pattern"
                                  []
                                core_type (lib/codeBits.ml[269,5587+60]..lib/codeBits.ml[269,5587+64])
                                  Ttyp_constr "Gbnf_parser!.IL.expr"
                                  []
                              ]
                          ]
                      Texp_construct "::"
                      [
                        expression (lib/codeBits.ml[270,5660+6]..lib/codeBits.ml[270,5660+32])
                          Texp_tuple
                          [
                            expression (lib/codeBits.ml[270,5660+6]..lib/codeBits.ml[270,5660+11])
                              Texp_construct "PUnit"
                              []
                            expression (lib/codeBits.ml[270,5660+13]..lib/codeBits.ml[270,5660+32])
                              Texp_apply
                              expression (lib/codeBits.ml[270,5660+13]..lib/codeBits.ml[270,5660+20])
                                Texp_ident "eprintf/1488"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/codeBits.ml[270,5660+21]..lib/codeBits.ml[270,5660+27])
                                    Texp_ident "format/1494"
                                <arg>
                                  Nolabel
                                  expression (lib/codeBits.ml[270,5660+28]..lib/codeBits.ml[270,5660+32])
                                    Texp_ident "args/1495"
                              ]
                          ]
                        expression (lib/codeBits.ml[270,5660+33]..lib/codeBits.ml[270,5660+34]) ghost
                          Texp_construct "[]"
                          []
                      ]
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[273,5697+0]..lib/codeBits.ml[274,5756+33])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[273,5697+4]..lib/codeBits.ml[273,5697+16])
          Tpat_var "tracecomment/1496"
        expression (lib/codeBits.ml[273,5697+17]..lib/codeBits.ml[274,5756+33]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[273,5697+18]..lib/codeBits.ml[273,5697+25])
                extra
                  Tpat_extra_constraint
                  core_type (lib/codeBits.ml[273,5697+28]..lib/codeBits.ml[273,5697+34])
                    Ttyp_constr "string/15!"
                    []
                Tpat_alias "comment/1498"
                pattern (lib/codeBits.ml[273,5697+18]..lib/codeBits.ml[273,5697+25])
                  Tpat_any
              expression (lib/codeBits.ml[273,5697+36]..lib/codeBits.ml[274,5756+33]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/codeBits.ml[273,5697+37]..lib/codeBits.ml[273,5697+41])
                      extra
                        Tpat_extra_constraint
                        core_type (lib/codeBits.ml[273,5697+44]..lib/codeBits.ml[273,5697+48])
                          Ttyp_constr "Gbnf_parser!.IL.expr"
                          []
                      Tpat_alias "body/1499"
                      pattern (lib/codeBits.ml[273,5697+37]..lib/codeBits.ml[273,5697+41])
                        Tpat_any
                    expression (lib/codeBits.ml[274,5756+4]..lib/codeBits.ml[274,5756+33])
                      extra
                        Texp_constraint
                        core_type (lib/codeBits.ml[273,5697+52]..lib/codeBits.ml[273,5697+56])
                          Ttyp_constr "Gbnf_parser!.IL.expr"
                          []
                      Texp_apply
                      expression (lib/codeBits.ml[274,5756+4]..lib/codeBits.ml[274,5756+8])
                        Texp_ident "blet/1366"
                      [
                        <arg>
                          Nolabel
                          expression (lib/codeBits.ml[274,5756+9]..lib/codeBits.ml[274,5756+33])
                            Texp_tuple
                            [
                              expression (lib/codeBits.ml[274,5756+10]..lib/codeBits.ml[274,5756+26])
                                Texp_apply
                                expression (lib/codeBits.ml[274,5756+10]..lib/codeBits.ml[274,5756+15])
                                  Texp_ident "trace/1492"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/codeBits.ml[274,5756+16]..lib/codeBits.ml[274,5756+23])
                                      Texp_ident "comment/1498"
                                  <arg>
                                    Nolabel
                                    expression (lib/codeBits.ml[274,5756+24]..lib/codeBits.ml[274,5756+26])
                                      Texp_construct "[]"
                                      []
                                ]
                              expression (lib/codeBits.ml[274,5756+28]..lib/codeBits.ml[274,5756+32])
                                Texp_ident "body/1499"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[285,6290+0]..lib/codeBits.ml[286,6308+21])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[285,6290+4]..lib/codeBits.ml[285,6290+10])
          Tpat_var "prefix/1500"
        expression (lib/codeBits.ml[285,6290+11]..lib/codeBits.ml[286,6308+21]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[285,6290+11]..lib/codeBits.ml[285,6290+15])
                Tpat_var "name/1502"
              expression (lib/codeBits.ml[286,6308+4]..lib/codeBits.ml[286,6308+21])
                Texp_apply
                expression (lib/codeBits.ml[286,6308+15]..lib/codeBits.ml[286,6308+16])
                  Texp_ident "Stdlib!.^"
                [
                  <arg>
                    Nolabel
                    expression (lib/codeBits.ml[286,6308+4]..lib/codeBits.ml[286,6308+14])
                      Texp_constant Const_string("_menhir_",(lib/codeBits.ml[286,6308+5]..lib/codeBits.ml[286,6308+13]),None)
                  <arg>
                    Nolabel
                    expression (lib/codeBits.ml[286,6308+17]..lib/codeBits.ml[286,6308+21])
                      Texp_ident "name/1502"
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[288,6331+0]..lib/codeBits.ml[289,6353+17])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[288,6331+4]..lib/codeBits.ml[288,6331+14])
          Tpat_var "dataprefix/1503"
        expression (lib/codeBits.ml[288,6331+15]..lib/codeBits.ml[289,6353+17]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[288,6331+15]..lib/codeBits.ml[288,6331+19])
                Tpat_var "name/1505"
              expression (lib/codeBits.ml[289,6353+2]..lib/codeBits.ml[289,6353+17])
                Texp_apply
                expression (lib/codeBits.ml[289,6353+11]..lib/codeBits.ml[289,6353+12])
                  Texp_ident "Stdlib!.^"
                [
                  <arg>
                    Nolabel
                    expression (lib/codeBits.ml[289,6353+2]..lib/codeBits.ml[289,6353+10])
                      Texp_constant Const_string("Menhir",(lib/codeBits.ml[289,6353+3]..lib/codeBits.ml[289,6353+9]),None)
                  <arg>
                    Nolabel
                    expression (lib/codeBits.ml[289,6353+13]..lib/codeBits.ml[289,6353+17])
                      Texp_ident "name/1505"
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[291,6372+0]..lib/codeBits.ml[292,6392+17])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[291,6372+4]..lib/codeBits.ml[291,6372+12])
          Tpat_var "tvprefix/1506"
        expression (lib/codeBits.ml[291,6372+13]..lib/codeBits.ml[292,6392+17]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[291,6372+13]..lib/codeBits.ml[291,6372+17])
                Tpat_var "name/1508"
              expression (lib/codeBits.ml[292,6392+4]..lib/codeBits.ml[292,6392+17])
                Texp_apply
                expression (lib/codeBits.ml[292,6392+11]..lib/codeBits.ml[292,6392+12])
                  Texp_ident "Stdlib!.^"
                [
                  <arg>
                    Nolabel
                    expression (lib/codeBits.ml[292,6392+4]..lib/codeBits.ml[292,6392+10])
                      Texp_constant Const_string("ttv_",(lib/codeBits.ml[292,6392+5]..lib/codeBits.ml[292,6392+9]),None)
                  <arg>
                    Nolabel
                    expression (lib/codeBits.ml[292,6392+13]..lib/codeBits.ml[292,6392+17])
                      Texp_ident "name/1508"
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[299,6589+0]..lib/codeBits.ml[309,6828+8])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[299,6589+4]..lib/codeBits.ml[299,6589+36])
          Tpat_var "interface_item_to_structure_item/1509"
        expression (lib/codeBits.ml[299,6589+39]..lib/codeBits.ml[309,6828+8])
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[300,6637+4]..lib/codeBits.ml[300,6637+19])
                Tpat_construct "IIExcDecls"
                [
                  pattern (lib/codeBits.ml[300,6637+15]..lib/codeBits.ml[300,6637+19])
                    Tpat_var "defs/1511"
                ]
                None
              expression (lib/codeBits.ml[301,6660+6]..lib/codeBits.ml[301,6660+24])
                Texp_construct "::"
                [
                  expression (lib/codeBits.ml[301,6660+8]..lib/codeBits.ml[301,6660+22])
                    Texp_construct "SIExcDefs"
                    [
                      expression (lib/codeBits.ml[301,6660+18]..lib/codeBits.ml[301,6660+22])
                        Texp_ident "defs/1511"
                    ]
                  expression (lib/codeBits.ml[301,6660+23]..lib/codeBits.ml[301,6660+24]) ghost
                    Texp_construct "[]"
                    []
                ]
            <case>
              pattern (lib/codeBits.ml[302,6685+4]..lib/codeBits.ml[302,6685+20])
                Tpat_construct "IITypeDecls"
                [
                  pattern (lib/codeBits.ml[302,6685+16]..lib/codeBits.ml[302,6685+20])
                    Tpat_var "defs/1512"
                ]
                None
              expression (lib/codeBits.ml[303,6709+6]..lib/codeBits.ml[303,6709+25])
                Texp_construct "::"
                [
                  expression (lib/codeBits.ml[303,6709+8]..lib/codeBits.ml[303,6709+23])
                    Texp_construct "SITypeDefs"
                    [
                      expression (lib/codeBits.ml[303,6709+19]..lib/codeBits.ml[303,6709+23])
                        Texp_ident "defs/1512"
                    ]
                  expression (lib/codeBits.ml[303,6709+24]..lib/codeBits.ml[303,6709+25]) ghost
                    Texp_construct "[]"
                    []
                ]
            <case>
              pattern (lib/codeBits.ml[304,6735+4]..lib/codeBits.ml[308,6809+15])
                Tpat_or
                pattern (lib/codeBits.ml[304,6735+4]..lib/codeBits.ml[307,6789+19])
                  Tpat_or
                  pattern (lib/codeBits.ml[304,6735+4]..lib/codeBits.ml[306,6773+15])
                    Tpat_or
                    pattern (lib/codeBits.ml[304,6735+4]..lib/codeBits.ml[305,6756+16])
                      Tpat_or
                      pattern (lib/codeBits.ml[304,6735+4]..lib/codeBits.ml[304,6735+20])
                        Tpat_construct "IIFunctor"
                        [
                          pattern (lib/codeBits.ml[304,6735+15]..lib/codeBits.ml[304,6735+16])
                            Tpat_any
                          pattern (lib/codeBits.ml[304,6735+18]..lib/codeBits.ml[304,6735+19])
                            Tpat_any
                        ]
                        None
                      pattern (lib/codeBits.ml[305,6756+4]..lib/codeBits.ml[305,6756+16])
                        Tpat_construct "IIValDecls"
                        [
                          pattern (lib/codeBits.ml[305,6756+15]..lib/codeBits.ml[305,6756+16])
                            Tpat_any
                        ]
                        None
                    pattern (lib/codeBits.ml[306,6773+4]..lib/codeBits.ml[306,6773+15])
                      Tpat_construct "IIInclude"
                      [
                        pattern (lib/codeBits.ml[306,6773+14]..lib/codeBits.ml[306,6773+15])
                          Tpat_any
                      ]
                      None
                  pattern (lib/codeBits.ml[307,6789+4]..lib/codeBits.ml[307,6789+19])
                    Tpat_construct "IIModule"
                    [
                      pattern (lib/codeBits.ml[307,6789+14]..lib/codeBits.ml[307,6789+15])
                        Tpat_any
                      pattern (lib/codeBits.ml[307,6789+17]..lib/codeBits.ml[307,6789+18])
                        Tpat_any
                    ]
                    None
                pattern (lib/codeBits.ml[308,6809+4]..lib/codeBits.ml[308,6809+15])
                  Tpat_construct "IIComment"
                  [
                    pattern (lib/codeBits.ml[308,6809+14]..lib/codeBits.ml[308,6809+15])
                      Tpat_any
                  ]
                  None
              expression (lib/codeBits.ml[309,6828+6]..lib/codeBits.ml[309,6828+8])
                Texp_construct "[]"
                []
          ]
    ]
  structure_item (lib/codeBits.ml[311,6838+0]..lib/codeBits.ml[312,6869+60])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[311,6838+4]..lib/codeBits.ml[311,6838+26])
          Tpat_var "interface_to_structure/1514"
        expression (lib/codeBits.ml[311,6838+27]..lib/codeBits.ml[312,6869+60]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[311,6838+27]..lib/codeBits.ml[311,6838+28])
                Tpat_var "i/1516"
              expression (lib/codeBits.ml[312,6869+2]..lib/codeBits.ml[312,6869+60])
                Texp_apply
                expression (lib/codeBits.ml[312,6869+2]..lib/codeBits.ml[312,6869+14])
                  Texp_ident "Stdlib!.List.flatten"
                [
                  <arg>
                    Nolabel
                    expression (lib/codeBits.ml[312,6869+15]..lib/codeBits.ml[312,6869+60])
                      Texp_apply
                      expression (lib/codeBits.ml[312,6869+16]..lib/codeBits.ml[312,6869+24])
                        Texp_ident "Stdlib!.List.map"
                      [
                        <arg>
                          Nolabel
                          expression (lib/codeBits.ml[312,6869+25]..lib/codeBits.ml[312,6869+57])
                            Texp_ident "interface_item_to_structure_item/1509"
                        <arg>
                          Nolabel
                          expression (lib/codeBits.ml[312,6869+58]..lib/codeBits.ml[312,6869+59])
                            Texp_ident "i/1516"
                      ]
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[317,7023+0]..lib/codeBits.ml[320,7141+32])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[317,7023+4]..lib/codeBits.ml[317,7023+14])
          Tpat_var "with_types/1517"
        expression (lib/codeBits.ml[317,7023+15]..lib/codeBits.ml[320,7141+32]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[317,7023+15]..lib/codeBits.ml[317,7023+17])
                Tpat_var "wk/1519"
              expression (lib/codeBits.ml[317,7023+18]..lib/codeBits.ml[320,7141+32]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/codeBits.ml[317,7023+18]..lib/codeBits.ml[317,7023+22])
                      Tpat_var "name/1520"
                    expression (lib/codeBits.ml[317,7023+23]..lib/codeBits.ml[320,7141+32]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/codeBits.ml[317,7023+23]..lib/codeBits.ml[317,7023+26])
                            Tpat_var "tys/1521"
                          expression (lib/codeBits.ml[318,7052+2]..lib/codeBits.ml[320,7141+32])
                            Texp_apply
                            expression (lib/codeBits.ml[318,7052+2]..lib/codeBits.ml[318,7052+16])
                              Texp_ident "Stdlib!.List.fold_left"
                            [
                              <arg>
                                Nolabel
                                expression (lib/codeBits.ml[318,7052+17]..lib/codeBits.ml[320,7141+3])
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/codeBits.ml[318,7052+22]..lib/codeBits.ml[318,7052+24])
                                        Tpat_var "mt/1522"
                                      expression (lib/codeBits.ml[318,7052+25]..lib/codeBits.ml[319,7099+41]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/codeBits.ml[318,7052+25]..lib/codeBits.ml[318,7052+43])
                                              Tpat_tuple
                                              [
                                                pattern (lib/codeBits.ml[318,7052+26]..lib/codeBits.ml[318,7052+32])
                                                  Tpat_var "params/1523"
                                                pattern (lib/codeBits.ml[318,7052+34]..lib/codeBits.ml[318,7052+38])
                                                  Tpat_var "name/1524"
                                                pattern (lib/codeBits.ml[318,7052+40]..lib/codeBits.ml[318,7052+42])
                                                  Tpat_var "ty/1525"
                                              ]
                                            expression (lib/codeBits.ml[319,7099+4]..lib/codeBits.ml[319,7099+41])
                                              Texp_construct "MTWithType"
                                              [
                                                expression (lib/codeBits.ml[319,7099+16]..lib/codeBits.ml[319,7099+18])
                                                  Texp_ident "mt/1522"
                                                expression (lib/codeBits.ml[319,7099+20]..lib/codeBits.ml[319,7099+26])
                                                  Texp_ident "params/1523"
                                                expression (lib/codeBits.ml[319,7099+28]..lib/codeBits.ml[319,7099+32])
                                                  Texp_ident "name/1524"
                                                expression (lib/codeBits.ml[319,7099+34]..lib/codeBits.ml[319,7099+36])
                                                  Texp_ident "wk/1519"
                                                expression (lib/codeBits.ml[319,7099+38]..lib/codeBits.ml[319,7099+40])
                                                  Texp_ident "ty/1525"
                                              ]
                                        ]
                                  ]
                              <arg>
                                Nolabel
                                expression (lib/codeBits.ml[320,7141+4]..lib/codeBits.ml[320,7141+28])
                                  Texp_construct "MTNamedModuleType"
                                  [
                                    expression (lib/codeBits.ml[320,7141+23]..lib/codeBits.ml[320,7141+27])
                                      Texp_ident "name/1520"
                                  ]
                              <arg>
                                Nolabel
                                expression (lib/codeBits.ml[320,7141+29]..lib/codeBits.ml[320,7141+32])
                                  Texp_ident "tys/1521"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[322,7175+0]..lib/codeBits.ml[323,7194+17])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[322,7175+4]..lib/codeBits.ml[322,7175+8])
          Tpat_var "mapp/1527"
        expression (lib/codeBits.ml[322,7175+9]..lib/codeBits.ml[323,7194+17]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[322,7175+9]..lib/codeBits.ml[322,7175+12])
                Tpat_var "me1/1529"
              expression (lib/codeBits.ml[322,7175+13]..lib/codeBits.ml[323,7194+17]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/codeBits.ml[322,7175+13]..lib/codeBits.ml[322,7175+16])
                      Tpat_var "me2/1530"
                    expression (lib/codeBits.ml[323,7194+2]..lib/codeBits.ml[323,7194+17])
                      Texp_construct "MApp"
                      [
                        expression (lib/codeBits.ml[323,7194+8]..lib/codeBits.ml[323,7194+11])
                          Texp_ident "me1/1529"
                        expression (lib/codeBits.ml[323,7194+13]..lib/codeBits.ml[323,7194+16])
                          Texp_ident "me2/1530"
                      ]
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[325,7213+0]..lib/codeBits.ml[326,7233+30])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[325,7213+4]..lib/codeBits.ml[325,7213+8])
          Tpat_var "mapp/1531"
        expression (lib/codeBits.ml[325,7213+9]..lib/codeBits.ml[326,7233+30]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[325,7213+9]..lib/codeBits.ml[325,7213+12])
                Tpat_var "me1/1532"
              expression (lib/codeBits.ml[325,7213+13]..lib/codeBits.ml[326,7233+30]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/codeBits.ml[325,7213+13]..lib/codeBits.ml[325,7213+17])
                      Tpat_var "mes2/1533"
                    expression (lib/codeBits.ml[326,7233+2]..lib/codeBits.ml[326,7233+30])
                      Texp_apply
                      expression (lib/codeBits.ml[326,7233+2]..lib/codeBits.ml[326,7233+16])
                        Texp_ident "Stdlib!.List.fold_left"
                      [
                        <arg>
                          Nolabel
                          expression (lib/codeBits.ml[326,7233+17]..lib/codeBits.ml[326,7233+21])
                            Texp_ident "mapp/1527"
                        <arg>
                          Nolabel
                          expression (lib/codeBits.ml[326,7233+22]..lib/codeBits.ml[326,7233+25])
                            Texp_ident "me1/1532"
                        <arg>
                          Nolabel
                          expression (lib/codeBits.ml[326,7233+26]..lib/codeBits.ml[326,7233+30])
                            Texp_ident "mes2/1533"
                      ]
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[328,7265+0]..lib/codeBits.ml[333,7380+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[328,7265+4]..lib/codeBits.ml[328,7265+9])
          Tpat_var "field/1534"
        expression (lib/codeBits.ml[328,7265+10]..lib/codeBits.ml[333,7380+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[328,7265+10]..lib/codeBits.ml[328,7265+20])
                Tpat_var "modifiable/1536"
              expression (lib/codeBits.ml[328,7265+21]..lib/codeBits.ml[333,7380+3]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/codeBits.ml[328,7265+21]..lib/codeBits.ml[328,7265+25])
                      Tpat_var "name/1537"
                    expression (lib/codeBits.ml[328,7265+26]..lib/codeBits.ml[333,7380+3]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/codeBits.ml[328,7265+26]..lib/codeBits.ml[328,7265+27])
                            Tpat_var "t/1538"
                          expression (lib/codeBits.ml[329,7295+2]..lib/codeBits.ml[333,7380+3])
                            Texp_record
                              fields =
                                [
                                  "modifiable"
                                    expression (lib/codeBits.ml[330,7299+17]..lib/codeBits.ml[330,7299+27])
                                      Texp_ident "modifiable/1536"
                                  "fieldname"
                                    expression (lib/codeBits.ml[331,7328+16]..lib/codeBits.ml[331,7328+20])
                                      Texp_ident "name/1537"
                                  "fieldtype"
                                    expression (lib/codeBits.ml[332,7350+16]..lib/codeBits.ml[332,7350+29])
                                      Texp_apply
                                      expression (lib/codeBits.ml[332,7350+16]..lib/codeBits.ml[332,7350+27])
                                        Texp_ident "type2scheme/1347"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/codeBits.ml[332,7350+28]..lib/codeBits.ml[332,7350+29])
                                            Texp_ident "t/1538"
                                      ]
                                ]
                              representation =
                                Record_regular
                              extended_expression =
                                None
                      ]
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[335,7385+0]..lib/codeBits.ml[336,7419+27])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[335,7385+4]..lib/codeBits.ml[335,7385+10])
          Tpat_var "branch/1539"
        expression (lib/codeBits.ml[335,7385+11]..lib/codeBits.ml[336,7419+27]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/codeBits.ml[335,7385+11]..lib/codeBits.ml[335,7385+20])
                Tpat_var "branchpat/1541"
              expression (lib/codeBits.ml[335,7385+21]..lib/codeBits.ml[336,7419+27]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/codeBits.ml[335,7385+21]..lib/codeBits.ml[335,7385+31])
                      Tpat_var "branchbody/1542"
                    expression (lib/codeBits.ml[336,7419+2]..lib/codeBits.ml[336,7419+27])
                      Texp_record
                        fields =
                          [
                            "branchpat"
                              expression (lib/codeBits.ml[336,7419+4]..lib/codeBits.ml[336,7419+13])
                                Texp_ident "branchpat/1541"
                            "branchbody"
                              expression (lib/codeBits.ml[336,7419+15]..lib/codeBits.ml[336,7419+25])
                                Texp_ident "branchbody/1542"
                          ]
                        representation =
                          Record_regular
                        extended_expression =
                          None
                ]
          ]
    ]
  structure_item (lib/codeBits.ml[336,7419+27]..lib/codeBits.ml[336,7419+27]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[336,7419+27]..lib/codeBits.ml[336,7419+27]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/codeBits.ml[336,7419+27]..lib/codeBits.ml[336,7419+27]) ghost
          Texp_apply
          expression (lib/codeBits.ml[336,7419+27]..lib/codeBits.ml[336,7419+27]) ghost
            Texp_ident "Ppx_inline_test_lib!.unset_lib"
          [
            <arg>
              Nolabel
              expression (lib/codeBits.ml[336,7419+27]..lib/codeBits.ml[336,7419+27]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/codeBits.ml[336,7419+27]..lib/codeBits.ml[336,7419+27]) ghost,None)
          ]
    ]
  structure_item (lib/codeBits.ml[336,7419+27]..lib/codeBits.ml[336,7419+27]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[336,7419+27]..lib/codeBits.ml[336,7419+27]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/codeBits.ml[336,7419+27]..lib/codeBits.ml[336,7419+27]) ghost
          Texp_apply
          expression (lib/codeBits.ml[336,7419+27]..lib/codeBits.ml[336,7419+27]) ghost
            Texp_ident "Expect_test_collector!.Current_file.unset"
          [
            <arg>
              Nolabel
              expression (lib/codeBits.ml[336,7419+27]..lib/codeBits.ml[336,7419+27]) ghost
                Texp_construct "()"
                []
          ]
    ]
  structure_item (lib/codeBits.ml[336,7419+27]..lib/codeBits.ml[336,7419+27]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[336,7419+27]..lib/codeBits.ml[336,7419+27]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/codeBits.ml[336,7419+27]..lib/codeBits.ml[336,7419+27]) ghost
          Texp_apply
          expression (lib/codeBits.ml[336,7419+27]..lib/codeBits.ml[336,7419+27]) ghost
            Texp_ident "Ppx_bench_lib!.Benchmark_accumulator.Current_libname.unset"
          [
            <arg>
              Nolabel
              expression (lib/codeBits.ml[336,7419+27]..lib/codeBits.ml[336,7419+27]) ghost
                Texp_construct "()"
                []
          ]
    ]
  structure_item (lib/codeBits.ml[336,7419+27]..lib/codeBits.ml[336,7419+27]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/codeBits.ml[336,7419+27]..lib/codeBits.ml[336,7419+27]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/codeBits.ml[336,7419+27]..lib/codeBits.ml[336,7419+27]) ghost
          Texp_apply
          expression (lib/codeBits.ml[336,7419+27]..lib/codeBits.ml[336,7419+27]) ghost
            Texp_ident "Ppx_module_timer_runtime!.record_until"
          [
            <arg>
              Nolabel
              expression (lib/codeBits.ml[336,7419+27]..lib/codeBits.ml[336,7419+27]) ghost
                Texp_ident "Ppx_module_timer_runtime!.__MODULE__"
          ]
    ]
]

{<Gbnf_parser__CodeBits>
 "annotate"[value] -> <Gbnf_parser__CodeBits.40>;
 "arrow"[value] -> <Gbnf_parser__CodeBits.89>;
 "arrowif"[value] -> <Gbnf_parser__CodeBits.92>;
 "blet"[value] -> <Gbnf_parser__CodeBits.52>;
 "bottom"[value] -> <Gbnf_parser__CodeBits.75>;
 "branch"[value] -> <Gbnf_parser__CodeBits.137>;
 "dataprefix"[value] -> <Gbnf_parser__CodeBits.110>;
 "eassert"[value] -> <Gbnf_parser__CodeBits.73>;
 "eboolconst"[value] -> <Gbnf_parser__CodeBits.78>;
 "efalse"[value] -> <Gbnf_parser__CodeBits.76>;
 "eletand"[value] -> <Gbnf_parser__CodeBits.63>;
 "elist"[value] -> <Gbnf_parser__CodeBits.83>;
 "enone"[value] -> <Gbnf_parser__CodeBits.80>;
 "eprintf"[value] -> <Gbnf_parser__CodeBits.99>;
 "eraisenotfound"[value] -> <Gbnf_parser__CodeBits.72>;
 "esome"[value] -> <Gbnf_parser__CodeBits.81>;
 "etrue"[value] -> <Gbnf_parser__CodeBits.77>;
 "etuple"[value] -> <Gbnf_parser__CodeBits.6>;
 "field"[value] -> <Gbnf_parser__CodeBits.133>;
 "if1"[value] -> <Gbnf_parser__CodeBits.15>;
 "ifn"[value] -> <Gbnf_parser__CodeBits.12>;
 "ifnlazy"[value] -> <Gbnf_parser__CodeBits.18>;
 "interface_item_to_structure_item"[value] -> <Gbnf_parser__CodeBits.114>;
 "interface_to_structure"[value] -> <Gbnf_parser__CodeBits.117>;
 "mapp"[value] -> <Gbnf_parser__CodeBits.130>;
 "marrow"[value] -> <Gbnf_parser__CodeBits.96>;
 "mlet"[value] -> <Gbnf_parser__CodeBits.59>;
 "pat2var"[value] -> <Gbnf_parser__CodeBits.43>;
 "pint"[value] -> <Gbnf_parser__CodeBits.87>;
 "prefix"[value] -> <Gbnf_parser__CodeBits.108>;
 "ptuple"[value] -> <Gbnf_parser__CodeBits.9>;
 "pvarlocated"[value] -> <Gbnf_parser__CodeBits.0>;
 "scheme"[value] -> <Gbnf_parser__CodeBits.35>;
 "simplify"[value] -> <Gbnf_parser__CodeBits.45>;
 "tbool"[value] -> <Gbnf_parser__CodeBits.22>;
 "texn"[value] -> <Gbnf_parser__CodeBits.25>;
 "tint"[value] -> <Gbnf_parser__CodeBits.23>;
 "tlexbuf"[value] -> <Gbnf_parser__CodeBits.31>;
 "tlocation"[value] -> <Gbnf_parser__CodeBits.30>;
 "tobj"[value] -> <Gbnf_parser__CodeBits.32>;
 "tpair"[value] -> <Gbnf_parser__CodeBits.26>;
 "tposition"[value] -> <Gbnf_parser__CodeBits.29>;
 "trace"[value] -> <Gbnf_parser__CodeBits.102>;
 "tracecomment"[value] -> <Gbnf_parser__CodeBits.105>;
 "tstring"[value] -> <Gbnf_parser__CodeBits.24>;
 "tunit"[value] -> <Gbnf_parser__CodeBits.21>;
 "tvar"[value] -> <Gbnf_parser__CodeBits.33>;
 "tvprefix"[value] -> <Gbnf_parser__CodeBits.112>;
 "type2scheme"[value] -> <Gbnf_parser__CodeBits.38>;
 "with_types"[value] -> <Gbnf_parser__CodeBits.119>;
 }

(setglobal Gbnf_parser__CodeBits!
  (let
    (*match*/2175 =
       (after Gbnf_parser__CodeBits lib/codeBits.ml(17)<ghost>:1063-1063
         (apply (field 3 (global Ppx_module_timer_runtime!))
           #"Gbnf_parser__CodeBits"))
     *match*/2173 =
       (after Gbnf_parser__CodeBits lib/codeBits.ml(17)<ghost>:1063-1063
         (apply
           (field 0 (field 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
           "gbnf_parser"))
     *match*/2171 =
       (after Gbnf_parser__CodeBits lib/codeBits.ml(17)<ghost>:1063-1063
         (apply (field 0 (field 5 (global Expect_test_collector!)))
           "lib/codeBits.ml"))
     *match*/2169 =
       (after Gbnf_parser__CodeBits lib/codeBits.ml(17)<ghost>:1063-1063
         (apply (field 4 (global Ppx_inline_test_lib!)) "gbnf_parser"
           "codeBits.ml"))
     pvarlocated/1155 =
       (function id/1157
         (funct-body Gbnf_parser__CodeBits.pvarlocated lib/codeBits.ml(21)<ghost>:1134-1370
           (before Gbnf_parser__CodeBits.pvarlocated lib/codeBits.ml(22):1141-1370
             (let
               (*match*/2129 =
                  (after Gbnf_parser__CodeBits.pvarlocated lib/codeBits.ml(22):1154-1176
                    (apply (field 2 (global Gbnf_parser__Positions!))
                      id/1157))
                pos/1159 =a (field 1 *match*/2129)
                x/1158 =a (field 0 *match*/2129))
               (before Gbnf_parser__CodeBits.pvarlocated lib/codeBits.ml(23):1182-1370
                 (let
                   (pos1/1230 =
                      (after Gbnf_parser__CodeBits.pvarlocated lib/codeBits.ml(23):1193-1224
                        (apply (field 11 (global Gbnf_parser__Positions!))
                          pos/1159))
                    pos2/1231 =
                      (after Gbnf_parser__CodeBits.pvarlocated lib/codeBits.ml(24):1238-1267
                        (apply (field 12 (global Gbnf_parser__Positions!))
                          pos/1159)))
                   (before Gbnf_parser__CodeBits.pvarlocated lib/codeBits.ml(25):1273-1370
                     (if
                       (|| (== pos1/1230 (field 0 (global Stdlib__Lexing!)))
                         (== pos2/1231 (field 0 (global Stdlib__Lexing!))))
                       (before Gbnf_parser__CodeBits.pvarlocated lib/codeBits.ml(26):1338-1344
                         (makeblock 0 x/1158))
                       (before Gbnf_parser__CodeBits.pvarlocated lib/codeBits.ml(28):1356-1370
                         (makeblock 1 id/1157))))))))))
     etuple/1307 =
       (function es/1310
         (funct-body Gbnf_parser__CodeBits.etuple lib/codeBits.ml(32):1400-1477
           (catch
             (if es/1310
               (let (*match*/2130 =a (field 1 es/1310))
                 (if *match*/2130 (exit 4)
                   (let (e/1309 =a (field 0 es/1310))
                     (before Gbnf_parser__CodeBits.etuple lib/codeBits.ml(36):1450-1451
                       e/1309))))
               (before Gbnf_parser__CodeBits.etuple lib/codeBits.ml(34):1425-1430
                 0))
            with (4)
             (before Gbnf_parser__CodeBits.etuple lib/codeBits.ml(38):1468-1477
               (makeblock 12 es/1310)))))
     ptuple/1311 =
       (function ps/1314
         (funct-body Gbnf_parser__CodeBits.ptuple lib/codeBits.ml(40):1492-1569
           (catch
             (if ps/1314
               (let (*match*/2131 =a (field 1 ps/1314))
                 (if *match*/2131 (exit 5)
                   (let (p/1313 =a (field 0 ps/1314))
                     (before Gbnf_parser__CodeBits.ptuple lib/codeBits.ml(44):1542-1543
                       p/1313))))
               (before Gbnf_parser__CodeBits.ptuple lib/codeBits.ml(42):1517-1522
                 1))
            with (5)
             (before Gbnf_parser__CodeBits.ptuple lib/codeBits.ml(46):1560-1569
               (makeblock 3 ps/1314)))))
     ifn/1315 =
       (function condition/1317[int] xs/1318
         (funct-body Gbnf_parser__CodeBits.ifn lib/codeBits.ml(50)<ghost>:1617-1672
           (before Gbnf_parser__CodeBits.ifn lib/codeBits.ml(51):1634-1672
             (if condition/1317
               (before Gbnf_parser__CodeBits.ifn lib/codeBits.ml(52):1656-1658
                 xs/1318)
               (before Gbnf_parser__CodeBits.ifn lib/codeBits.ml(54):1670-1672
                 0)))))
     if1/1319 =
       (function condition/1321[int] x/1322
         (funct-body Gbnf_parser__CodeBits.if1 lib/codeBits.ml(56)<ghost>:1682-1739
           (before Gbnf_parser__CodeBits.if1 lib/codeBits.ml(57):1698-1739
             (if condition/1321
               (before Gbnf_parser__CodeBits.if1 lib/codeBits.ml(58):1720-1725
                 (makeblock 0 x/1322 0))
               (before Gbnf_parser__CodeBits.if1 lib/codeBits.ml(60):1737-1739
                 0)))))
     ifnlazy/1323 =
       (function condition/1325[int] xs/1326
         (funct-body Gbnf_parser__CodeBits.ifnlazy lib/codeBits.ml(62)<ghost>:1753-1810
           (before Gbnf_parser__CodeBits.ifnlazy lib/codeBits.ml(63):1770-1810
             (if condition/1325
               (before Gbnf_parser__CodeBits.ifnlazy lib/codeBits.ml(64):1792-1796
                 (after Gbnf_parser__CodeBits.ifnlazy lib/codeBits.ml(64):1792-1796
                   (apply xs/1326 0)))
               (before Gbnf_parser__CodeBits.ifnlazy lib/codeBits.ml(66):1808-1810
                 0)))))
     tunit/1327 = [2: "unit" 0]
     tbool/1328 = [2: "bool" 0]
     tint/1329 = [2: "int" 0]
     tstring/1330 = [2: "string" 0]
     texn/1331 = [2: "exn" 0]
     tpair/1332 =
       (function typ1/1334 typ2/1335
         (funct-body Gbnf_parser__CodeBits.tpair lib/codeBits.ml(95)<ghost>:2146-2181
           (before Gbnf_parser__CodeBits.tpair lib/codeBits.ml(96):2160-2181
             (makeblock 3 (makeblock 0 typ1/1334 (makeblock 0 typ2/1335 0))))))
     tposition/1336 = [2: "Lexing.position" 0]
     tlocation/1337 =
       (after Gbnf_parser__CodeBits.tlocation lib/codeBits.ml(108):2410-2435
         (apply tpair/1332 tposition/1336 tposition/1336))
     tlexbuf/1338 = [2: "Lexing.lexbuf" 0]
     tobj/1339 = [2: "Obj.t" 0]
     tvar/1340 =
       (function x/1342
         (funct-body Gbnf_parser__CodeBits.tvar lib/codeBits.ml(122)<ghost>:2638-2658
           (before Gbnf_parser__CodeBits.tvar lib/codeBits.ml(123):2650-2658
             (makeblock 1 x/1342))))
     scheme/1343 =
       (function qs/1345 t/1346
         (funct-body Gbnf_parser__CodeBits.scheme lib/codeBits.ml(127)<ghost>:2702-2751
           (before Gbnf_parser__CodeBits.scheme lib/codeBits.ml(128):2711-2751
             (makeblock 0 qs/1345 t/1346))))
     type2scheme/1347 =
       (function t/1349
         (funct-body Gbnf_parser__CodeBits.type2scheme lib/codeBits.ml(135)<ghost>:2834-2851
           (before Gbnf_parser__CodeBits.type2scheme lib/codeBits.ml(136):2840-2851
             (after Gbnf_parser__CodeBits.type2scheme lib/codeBits.ml(136):2840-2851
               (apply scheme/1343 0 t/1349)))))
     annotate/1350 =
       (function e/1352 t/1353
         (funct-body Gbnf_parser__CodeBits.annotate lib/codeBits.ml(140)<ghost>:2930-2963
           (before Gbnf_parser__CodeBits.annotate lib/codeBits.ml(141):2938-2963
             (makeblock 13 e/1352
               (after Gbnf_parser__CodeBits.annotate lib/codeBits.ml(141):2949-2962
                 (apply type2scheme/1347 t/1353))))))
     pat2var/1354 =
       (function param/1357
         (funct-body Gbnf_parser__CodeBits.pat2var lib/codeBits.ml(143):2979-3037
           (catch
             (switch param/1357
              case tag 0:
               (let (x/1356 =a (field 0 param/1357))
                 (before Gbnf_parser__CodeBits.pat2var lib/codeBits.ml(145):3008-3009
                   x/1356))
              default: (exit 6))
            with (6)
             (before Gbnf_parser__CodeBits.pat2var lib/codeBits.ml(147):3025-3037
               (raise
                 (after Gbnf_parser__CodeBits.pat2var lib/codeBits.ml(147):3025-3037
                   (makeblock 0 (global Assert_failure/28!)
                     [0: "lib/codeBits.ml" 147 6]))))))))
    (letrec
      (simplify/1358
         (function param/1365
           (funct-body Gbnf_parser__CodeBits.simplify lib/codeBits.ml(152):3151-3460
             (if param/1365
               (let (binding/1363 =a (field 0 param/1365))
                 (catch
                   (let (*match*/2133 =a (field 0 binding/1363))
                     (switch *match*/2133
                      case int 0:
                       (let (*match*/2135 =a (field 1 binding/1363))
                         (switch *match*/2135
                          case tag 0:
                           (let
                             (bindings/1362 =a (field 1 param/1365)
                              *match*/2136 =a (field 0 *match*/2135))
                             (before Gbnf_parser__CodeBits.simplify lib/codeBits.ml(160):3381-3398
                               (after Gbnf_parser__CodeBits.simplify lib/codeBits.ml(160):3381-3398
                                 (apply simplify/1358 bindings/1362))))
                          default: (exit 7)))
                      case tag 0:
                       (let (*match*/2134 =a (field 1 binding/1363))
                         (switch *match*/2134
                          case tag 0:
                           (let
                             (bindings/1361 =a (field 1 param/1365)
                              v2/1360 =a (field 0 *match*/2134)
                              v1/1359 =a (field 0 *match*/2133))
                             (before Gbnf_parser__CodeBits.simplify lib/codeBits.ml(155):3219-3226
                               (if
                                 (after Gbnf_parser__CodeBits.simplify lib/codeBits.ml(155):3219-3226
                                   (caml_string_equal v1/1359 v2/1360))
                                 (before Gbnf_parser__CodeBits.simplify lib/codeBits.ml(157):3277-3294
                                   (after Gbnf_parser__CodeBits.simplify lib/codeBits.ml(157):3277-3294
                                     (apply simplify/1358 bindings/1361)))
                                 (exit 7))))
                          default: (exit 7)))
                      default: (exit 7)))
                  with (7)
                   (let (bindings/1364 =a (field 1 param/1365))
                     (before Gbnf_parser__CodeBits.simplify lib/codeBits.ml(162):3432-3460
                       (makeblock 0 binding/1363
                         (after Gbnf_parser__CodeBits.simplify lib/codeBits.ml(162):3443-3460
                           (apply simplify/1358 bindings/1364)))))))
               (before Gbnf_parser__CodeBits.simplify lib/codeBits.ml(154):3176-3178
                 0)))))
      (let
        (blet/1366 =
           (function param/1374
             (funct-body Gbnf_parser__CodeBits.blet lib/codeBits.ml(166)<ghost>:3538-3787
               (let
                 (body/1369 =a (field 1 param/1374)
                  bindings/1368 =a (field 0 param/1374))
                 (before Gbnf_parser__CodeBits.blet lib/codeBits.ml(167):3559-3787
                   (let
                     (bindings/1370 =
                        (after Gbnf_parser__CodeBits.blet lib/codeBits.ml(167):3574-3591
                          (apply simplify/1358 bindings/1368)))
                     (before Gbnf_parser__CodeBits.blet lib/codeBits.ml(168):3597-3787
                       (catch
                         (if bindings/1370
                           (let
                             (*match*/2137 =a (field 0 bindings/1370)
                              *match*/2138 =a (field 0 *match*/2137))
                             (switch *match*/2138
                              case tag 0:
                               (let (*match*/2139 =a (field 1 bindings/1370))
                                 (if *match*/2139 (exit 8)
                                   (switch body/1369
                                    case tag 0:
                                     (let
                                       (x2/1373 =a (field 0 body/1369)
                                        e/1372 =a (field 1 *match*/2137)
                                        x1/1371 =a (field 0 *match*/2138))
                                       (before Gbnf_parser__CodeBits.blet lib/codeBits.ml(171):3680-3687
                                         (if
                                           (after Gbnf_parser__CodeBits.blet lib/codeBits.ml(171):3680-3687
                                             (caml_string_equal x1/1371
                                               x2/1373))
                                           (before Gbnf_parser__CodeBits.blet lib/codeBits.ml(173):3746-3747
                                             e/1372)
                                           (exit 8))))
                                    default: (exit 8))))
                              default: (exit 8)))
                           (before Gbnf_parser__CodeBits.blet lib/codeBits.ml(170):3642-3646
                             body/1369))
                        with (8)
                         (before Gbnf_parser__CodeBits.blet lib/codeBits.ml(175):3766-3787
                           (makeblock 3 bindings/1370 body/1369)))))))))
         mlet/1375 =
           (function formals/1377 actuals/1378 body/1379
             (funct-body Gbnf_parser__CodeBits.mlet lib/codeBits.ml(177)<ghost>:3798-3864
               (before Gbnf_parser__CodeBits.mlet lib/codeBits.ml(178):3823-3864
                 (after Gbnf_parser__CodeBits.mlet lib/codeBits.ml(178):3823-3864
                   (apply blet/1366
                     (makeblock 0
                       (after Gbnf_parser__CodeBits.mlet lib/codeBits.ml(178):3829-3857
                         (apply (field 54 (global Stdlib__List!))
                           formals/1377 actuals/1378))
                       body/1379))))))
         eletand/1443 =
           (function param/1453
             (funct-body Gbnf_parser__CodeBits.eletand lib/codeBits.ml(182)<ghost>:3932-4429
               (let
                 (body/1446 =a (field 1 param/1453)
                  bindings/1445 =a (field 0 param/1453))
                 (before Gbnf_parser__CodeBits.eletand lib/codeBits.ml(183):3953-4429
                   (let
                     (bindings/1447 =
                        (after Gbnf_parser__CodeBits.eletand lib/codeBits.ml(183):3968-3985
                          (apply simplify/1358 bindings/1445)))
                     (before Gbnf_parser__CodeBits.eletand lib/codeBits.ml(184):3991-4429
                       (if bindings/1447
                         (let
                           (*match*/2144 =a (field 0 bindings/1447)
                            *match*/2145 =a (field 0 *match*/2144))
                           (catch
                             (switch *match*/2145
                              case tag 0:
                               (let (*match*/2146 =a (field 1 bindings/1447))
                                 (if *match*/2146 (exit 12)
                                   (switch body/1446
                                    case tag 0:
                                     (let
                                       (x2/1450 =a (field 0 body/1446)
                                        e/1449 =a (field 1 *match*/2144)
                                        x1/1448 =a (field 0 *match*/2145))
                                       (before Gbnf_parser__CodeBits.eletand lib/codeBits.ml(188):4114-4121
                                         (if
                                           (after Gbnf_parser__CodeBits.eletand lib/codeBits.ml(188):4114-4121
                                             (caml_string_equal x1/1448
                                               x2/1450))
                                           (before Gbnf_parser__CodeBits.eletand lib/codeBits.ml(190):4180-4181
                                             e/1449)
                                           (exit 12))))
                                    default: (exit 12))))
                              default: (exit 12))
                            with (12)
                             (let
                               (*match*/2148 =a (field 1 bindings/1447)
                                *match*/2147 =a (field 1 *match*/2144))
                               (if *match*/2148
                                 (let
                                   (*match*/2150 =a (field 1 *match*/2148)
                                    *match*/2149 =a (field 0 *match*/2148))
                                   (before Gbnf_parser__CodeBits.eletand lib/codeBits.ml(196):4340-4429
                                     (let
                                       (*match*/2143 =
                                          (after Gbnf_parser__CodeBits.eletand lib/codeBits.ml(196):4358-4377
                                            (apply
                                              (field 53
                                                (global Stdlib__List!))
                                              bindings/1447))
                                        exprs/1452 =a (field 1 *match*/2143)
                                        pats/1451 =a (field 0 *match*/2143))
                                       (before Gbnf_parser__CodeBits.eletand lib/codeBits.ml(197):4387-4429
                                         (makeblock 3
                                           (makeblock 0
                                             (makeblock 0
                                               (makeblock 3 pats/1451)
                                               (makeblock 12 exprs/1452))
                                             0)
                                           body/1446)))))
                                 (before Gbnf_parser__CodeBits.eletand lib/codeBits.ml(193):4242-4263
                                   (makeblock 3 bindings/1447 body/1446))))))
                         (before Gbnf_parser__CodeBits.eletand lib/codeBits.ml(187):4076-4080
                           body/1446))))))))
         eraisenotfound/1454 = [7: [11: "Not_found" 0]]
         eassert/1455 =
           (function e/1457
             (funct-body Gbnf_parser__CodeBits.eassert lib/codeBits.ml(204)<ghost>:4566-4599
               (before Gbnf_parser__CodeBits.eassert lib/codeBits.ml(205):4572-4599
                 (makeblock 2 [0: "assert"] (makeblock 0 e/1457 0)))))
         bottom/1458 = eraisenotfound/1454
         efalse/1459 = [11: "false" 0]
         etrue/1460 = [11: "true" 0]
         eboolconst/1461 =
           (function b/1463[int]
             (funct-body Gbnf_parser__CodeBits.eboolconst lib/codeBits.ml(221)<ghost>:4843-4876
               (before Gbnf_parser__CodeBits.eboolconst lib/codeBits.ml(222):4849-4876
                 (if b/1463
                   (before Gbnf_parser__CodeBits.eboolconst lib/codeBits.ml(222):4859-4864
                     etrue/1460)
                   (before Gbnf_parser__CodeBits.eboolconst lib/codeBits.ml(222):4870-4876
                     efalse/1459)))))
         enone/1464 = [11: "None" 0]
         esome/1465 =
           (function e/1467
             (funct-body Gbnf_parser__CodeBits.esome lib/codeBits.ml(229)<ghost>:4950-4975
               (before Gbnf_parser__CodeBits.esome lib/codeBits.ml(230):4956-4975
                 (makeblock 11 "Some" (makeblock 0 e/1467 0))))))
        (letrec
          (elist/1468
             (function xs/1469
               (funct-body Gbnf_parser__CodeBits.elist lib/codeBits.ml(234)<ghost>:5017-5121
                 (before Gbnf_parser__CodeBits.elist lib/codeBits.ml(235):5024-5121
                   (if xs/1469
                     (let
                       (xs/1471 =a (field 1 xs/1469)
                        x/1470 =a (field 0 xs/1469))
                       (before Gbnf_parser__CodeBits.elist lib/codeBits.ml(239):5092-5121
                         (makeblock 11 "::"
                           (makeblock 0 x/1470
                             (makeblock 0
                               (after Gbnf_parser__CodeBits.elist lib/codeBits.ml(239):5110-5118
                                 (apply elist/1468 xs/1471))
                               0)))))
                     (before Gbnf_parser__CodeBits.elist lib/codeBits.ml(237):5054-5070
                       [11: "[]" 0]))))))
          (let
            (pint/1472 =
               (function k/1474[int]
                 (funct-body Gbnf_parser__CodeBits.pint lib/codeBits.ml(243)<ghost>:5170-5213
                   (before Gbnf_parser__CodeBits.pint lib/codeBits.ml(244):5186-5213
                     (makeblock 2
                       (after Gbnf_parser__CodeBits.pint lib/codeBits.ml(244):5193-5208
                         (apply (field 32 (global Stdlib!)) k/1474))
                       0))))
             arrow/1475 =
               (function typ/1477 body/1478
                 (funct-body Gbnf_parser__CodeBits.arrow lib/codeBits.ml(248)<ghost>:5265-5304
                   (before Gbnf_parser__CodeBits.arrow lib/codeBits.ml(249):5284-5304
                     (makeblock 4 typ/1477 body/1478))))
             arrowif/1479 =
               (function flag/1481[int] typ/1482 body/1483
                 (funct-body Gbnf_parser__CodeBits.arrowif lib/codeBits.ml(251)<ghost>:5318-5389
                   (before Gbnf_parser__CodeBits.arrowif lib/codeBits.ml(252):5342-5389
                     (if flag/1481
                       (before Gbnf_parser__CodeBits.arrowif lib/codeBits.ml(253):5359-5373
                         (after Gbnf_parser__CodeBits.arrowif lib/codeBits.ml(253):5359-5373
                           (apply arrow/1475 typ/1482 body/1483)))
                       (before Gbnf_parser__CodeBits.arrowif lib/codeBits.ml(255):5385-5389
                         body/1483)))))
             marrow/1484 =
               (function typs/1486 body/1487
                 (funct-body Gbnf_parser__CodeBits.marrow lib/codeBits.ml(257)<ghost>:5402-5453
                   (before Gbnf_parser__CodeBits.marrow lib/codeBits.ml(258):5422-5453
                     (after Gbnf_parser__CodeBits.marrow lib/codeBits.ml(258):5422-5453
                       (apply (field 25 (global Stdlib__List!)) arrow/1475
                         typs/1486 body/1487)))))
             eprintf/1488 =
               (function format/1490 args/1491
                 (funct-body Gbnf_parser__CodeBits.eprintf lib/codeBits.ml(262)<ghost>:5483-5585
                   (before Gbnf_parser__CodeBits.eprintf lib/codeBits.ml(263):5499-5585
                     (makeblock 2 [0: "Printf.eprintf"]
                       (makeblock 0
                         (makeblock 10
                           (after Gbnf_parser__CodeBits.eprintf lib/codeBits.ml(265):5551-5568
                             (apply (field 27 (global Stdlib!)) format/1490
                               "\n%!")))
                         args/1491)))))
             trace/1492 =
               (function format/1494 args/1495
                 (funct-body Gbnf_parser__CodeBits.trace lib/codeBits.ml(269)<ghost>:5597-5694
                   (before Gbnf_parser__CodeBits.trace lib/codeBits.ml(270):5664-5694
                     (makeblock 0
                       (makeblock 0 1
                         (after Gbnf_parser__CodeBits.trace lib/codeBits.ml(270):5673-5692
                           (apply eprintf/1488 format/1494 args/1495)))
                       0))))
             tracecomment/1496 =
               (function comment/1498 body/1499
                 (funct-body Gbnf_parser__CodeBits.tracecomment lib/codeBits.ml(273)<ghost>:5714-5789
                   (before Gbnf_parser__CodeBits.tracecomment lib/codeBits.ml(274):5760-5789
                     (after Gbnf_parser__CodeBits.tracecomment lib/codeBits.ml(274):5760-5789
                       (apply blet/1366
                         (makeblock 0
                           (after Gbnf_parser__CodeBits.tracecomment lib/codeBits.ml(274):5766-5782
                             (apply trace/1492 comment/1498 0))
                           body/1499))))))
             prefix/1500 =
               (function name/1502
                 (funct-body Gbnf_parser__CodeBits.prefix lib/codeBits.ml(285)<ghost>:6301-6329
                   (before Gbnf_parser__CodeBits.prefix lib/codeBits.ml(286):6312-6329
                     (after Gbnf_parser__CodeBits.prefix lib/codeBits.ml(286):6312-6329
                       (apply (field 27 (global Stdlib!)) "_menhir_"
                         name/1502)))))
             dataprefix/1503 =
               (function name/1505
                 (funct-body Gbnf_parser__CodeBits.dataprefix lib/codeBits.ml(288)<ghost>:6346-6370
                   (before Gbnf_parser__CodeBits.dataprefix lib/codeBits.ml(289):6355-6370
                     (after Gbnf_parser__CodeBits.dataprefix lib/codeBits.ml(289):6355-6370
                       (apply (field 27 (global Stdlib!)) "Menhir" name/1505)))))
             tvprefix/1506 =
               (function name/1508
                 (funct-body Gbnf_parser__CodeBits.tvprefix lib/codeBits.ml(291)<ghost>:6385-6409
                   (before Gbnf_parser__CodeBits.tvprefix lib/codeBits.ml(292):6396-6409
                     (after Gbnf_parser__CodeBits.tvprefix lib/codeBits.ml(292):6396-6409
                       (apply (field 27 (global Stdlib!)) "ttv_" name/1508)))))
             interface_item_to_structure_item/1509 =
               (function param/1513
                 (funct-body Gbnf_parser__CodeBits.interface_item_to_structure_item lib/codeBits.ml(299):6628-6836
                   (catch
                     (switch param/1513
                      case tag 1:
                       (let (defs/1511 =a (field 0 param/1513))
                         (before Gbnf_parser__CodeBits.interface_item_to_structure_item lib/codeBits.ml(301):6666-6684
                           (makeblock 0 (makeblock 1 defs/1511) 0)))
                      case tag 2:
                       (let (defs/1512 =a (field 0 param/1513))
                         (before Gbnf_parser__CodeBits.interface_item_to_structure_item lib/codeBits.ml(303):6715-6734
                           (makeblock 0 (makeblock 2 defs/1512) 0)))
                      default: (exit 13))
                    with (13)
                     (before Gbnf_parser__CodeBits.interface_item_to_structure_item lib/codeBits.ml(309):6834-6836
                       0))))
             interface_to_structure/1514 =
               (function i/1516
                 (funct-body Gbnf_parser__CodeBits.interface_to_structure lib/codeBits.ml(311)<ghost>:6865-6929
                   (before Gbnf_parser__CodeBits.interface_to_structure lib/codeBits.ml(312):6871-6929
                     (after Gbnf_parser__CodeBits.interface_to_structure lib/codeBits.ml(312):6871-6929
                       (apply (field 13 (global Stdlib__List!))
                         (after Gbnf_parser__CodeBits.interface_to_structure lib/codeBits.ml(312):6884-6929
                           (apply (field 18 (global Stdlib__List!))
                             interface_item_to_structure_item/1509 i/1516)))))))
             with_types/1517 =
               (function wk/1519[int] name/1520 tys/1521
                 (funct-body Gbnf_parser__CodeBits.with_types lib/codeBits.ml(317)<ghost>:7038-7173
                   (before Gbnf_parser__CodeBits.with_types lib/codeBits.ml(318):7054-7173
                     (after Gbnf_parser__CodeBits.with_types lib/codeBits.ml(318):7054-7173
                       (apply (field 24 (global Stdlib__List!))
                         (function mt/1522 param/1526
                           (funct-body Gbnf_parser__CodeBits.with_types.(fun) lib/codeBits.ml(318):7069-7144
                             (let
                               (ty/1525 =a (field 2 param/1526)
                                name/1524 =a (field 1 param/1526)
                                params/1523 =a (field 0 param/1526))
                               (before Gbnf_parser__CodeBits.with_types.(fun) lib/codeBits.ml(319):7103-7140
                                 (makeblock 1 (*,*,*,int,*) mt/1522
                                   params/1523 name/1524 wk/1519 ty/1525)))))
                         (makeblock 0 name/1520) tys/1521)))))
             mapp/1527 =
               (function me1/1529 me2/1530
                 (funct-body Gbnf_parser__CodeBits.mapp lib/codeBits.ml(322)<ghost>:7184-7211
                   (before Gbnf_parser__CodeBits.mapp lib/codeBits.ml(323):7196-7211
                     (makeblock 2 me1/1529 me2/1530))))
             mapp/1531 =
               (function me1/1532 mes2/1533
                 (funct-body Gbnf_parser__CodeBits.mapp lib/codeBits.ml(325)<ghost>:7222-7263
                   (before Gbnf_parser__CodeBits.mapp lib/codeBits.ml(326):7235-7263
                     (after Gbnf_parser__CodeBits.mapp lib/codeBits.ml(326):7235-7263
                       (apply (field 24 (global Stdlib__List!)) mapp/1527
                         me1/1532 mes2/1533)))))
             field/1534 =
               (function modifiable/1536[int] name/1537 t/1538
                 (funct-body Gbnf_parser__CodeBits.field lib/codeBits.ml(328)<ghost>:7275-7383
                   (before Gbnf_parser__CodeBits.field lib/codeBits.ml(329):7297-7383
                     (makeblock 0 (int,*,*) modifiable/1536 name/1537
                       (after Gbnf_parser__CodeBits.field lib/codeBits.ml(332):7366-7379
                         (apply type2scheme/1347 t/1538))))))
             branch/1539 =
               (function branchpat/1541 branchbody/1542
                 (funct-body Gbnf_parser__CodeBits.branch lib/codeBits.ml(335)<ghost>:7396-7446
                   (before Gbnf_parser__CodeBits.branch lib/codeBits.ml(336):7421-7446
                     (makeblock 0 branchpat/1541 branchbody/1542))))
             *match*/2167 =
               (after Gbnf_parser__CodeBits lib/codeBits.ml(336)<ghost>:7446-7446
                 (apply (field 5 (global Ppx_inline_test_lib!))
                   "gbnf_parser"))
             *match*/2165 =
               (after Gbnf_parser__CodeBits lib/codeBits.ml(336)<ghost>:7446-7446
                 (apply (field 1 (field 5 (global Expect_test_collector!)))
                   0))
             *match*/2163 =
               (after Gbnf_parser__CodeBits lib/codeBits.ml(336)<ghost>:7446-7446
                 (apply
                   (field 1
                     (field 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
                   0))
             *match*/2161 =
               (after Gbnf_parser__CodeBits lib/codeBits.ml(336)<ghost>:7446-7446
                 (apply (field 4 (global Ppx_module_timer_runtime!))
                   #"Gbnf_parser__CodeBits")))
            (pseudo <unknown location>
              (makeblock 0 pvarlocated/1155 etuple/1307 ptuple/1311 ifn/1315
                if1/1319 ifnlazy/1323 tunit/1327 tbool/1328 tint/1329
                tstring/1330 texn/1331 tpair/1332 tposition/1336
                tlocation/1337 tlexbuf/1338 tobj/1339 tvar/1340 scheme/1343
                type2scheme/1347 annotate/1350 pat2var/1354 simplify/1358
                blet/1366 mlet/1375 eletand/1443 eraisenotfound/1454
                eassert/1455 bottom/1458 efalse/1459 etrue/1460
                eboolconst/1461 enone/1464 esome/1465 elist/1468 pint/1472
                arrow/1475 arrowif/1479 marrow/1484 eprintf/1488 trace/1492
                tracecomment/1496 prefix/1500 dataprefix/1503 tvprefix/1506
                interface_item_to_structure_item/1509
                interface_to_structure/1514 with_types/1517 mapp/1531
                field/1534 branch/1539))))))))
(setglobal Gbnf_parser__CodeBits!
  (let
    (*match*/2175 =
       (after Gbnf_parser__CodeBits lib/codeBits.ml(17)<ghost>:1063-1063
         (apply (field 3 (global Ppx_module_timer_runtime!))
           #"Gbnf_parser__CodeBits"))
     *match*/2173 =
       (after Gbnf_parser__CodeBits lib/codeBits.ml(17)<ghost>:1063-1063
         (apply
           (field 0 (field 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
           "gbnf_parser"))
     *match*/2171 =
       (after Gbnf_parser__CodeBits lib/codeBits.ml(17)<ghost>:1063-1063
         (apply (field 0 (field 5 (global Expect_test_collector!)))
           "lib/codeBits.ml"))
     *match*/2169 =
       (after Gbnf_parser__CodeBits lib/codeBits.ml(17)<ghost>:1063-1063
         (apply (field 4 (global Ppx_inline_test_lib!)) "gbnf_parser"
           "codeBits.ml"))
     pvarlocated/1155 =
       (function id/1157
         (funct-body Gbnf_parser__CodeBits.pvarlocated lib/codeBits.ml(21)<ghost>:1134-1370
           (before Gbnf_parser__CodeBits.pvarlocated lib/codeBits.ml(22):1141-1370
             (let
               (*match*/2129 =
                  (after Gbnf_parser__CodeBits.pvarlocated lib/codeBits.ml(22):1154-1176
                    (apply (field 2 (global Gbnf_parser__Positions!))
                      id/1157))
                pos/1159 =a (field 1 *match*/2129)
                x/1158 =a (field 0 *match*/2129))
               (before Gbnf_parser__CodeBits.pvarlocated lib/codeBits.ml(23):1182-1370
                 (let
                   (pos1/1230 =
                      (after Gbnf_parser__CodeBits.pvarlocated lib/codeBits.ml(23):1193-1224
                        (apply (field 11 (global Gbnf_parser__Positions!))
                          pos/1159))
                    pos2/1231 =
                      (after Gbnf_parser__CodeBits.pvarlocated lib/codeBits.ml(24):1238-1267
                        (apply (field 12 (global Gbnf_parser__Positions!))
                          pos/1159)))
                   (before Gbnf_parser__CodeBits.pvarlocated lib/codeBits.ml(25):1273-1370
                     (if
                       (|| (== pos1/1230 (field 0 (global Stdlib__Lexing!)))
                         (== pos2/1231 (field 0 (global Stdlib__Lexing!))))
                       (before Gbnf_parser__CodeBits.pvarlocated lib/codeBits.ml(26):1338-1344
                         (makeblock 0 x/1158))
                       (before Gbnf_parser__CodeBits.pvarlocated lib/codeBits.ml(28):1356-1370
                         (makeblock 1 id/1157))))))))))
     etuple/1307 =
       (function es/1310
         (funct-body Gbnf_parser__CodeBits.etuple lib/codeBits.ml(32):1400-1477
           (if es/1310
             (let (*match*/2130 =a (field 1 es/1310))
               (if *match*/2130
                 (before Gbnf_parser__CodeBits.etuple lib/codeBits.ml(38):1468-1477
                   (makeblock 12 es/1310))
                 (let (e/1309 =a (field 0 es/1310))
                   (before Gbnf_parser__CodeBits.etuple lib/codeBits.ml(36):1450-1451
                     e/1309))))
             (before Gbnf_parser__CodeBits.etuple lib/codeBits.ml(34):1425-1430
               0))))
     ptuple/1311 =
       (function ps/1314
         (funct-body Gbnf_parser__CodeBits.ptuple lib/codeBits.ml(40):1492-1569
           (if ps/1314
             (let (*match*/2131 =a (field 1 ps/1314))
               (if *match*/2131
                 (before Gbnf_parser__CodeBits.ptuple lib/codeBits.ml(46):1560-1569
                   (makeblock 3 ps/1314))
                 (let (p/1313 =a (field 0 ps/1314))
                   (before Gbnf_parser__CodeBits.ptuple lib/codeBits.ml(44):1542-1543
                     p/1313))))
             (before Gbnf_parser__CodeBits.ptuple lib/codeBits.ml(42):1517-1522
               1))))
     ifn/1315 =
       (function condition/1317[int] xs/1318
         (funct-body Gbnf_parser__CodeBits.ifn lib/codeBits.ml(50)<ghost>:1617-1672
           (before Gbnf_parser__CodeBits.ifn lib/codeBits.ml(51):1634-1672
             (if condition/1317
               (before Gbnf_parser__CodeBits.ifn lib/codeBits.ml(52):1656-1658
                 xs/1318)
               (before Gbnf_parser__CodeBits.ifn lib/codeBits.ml(54):1670-1672
                 0)))))
     if1/1319 =
       (function condition/1321[int] x/1322
         (funct-body Gbnf_parser__CodeBits.if1 lib/codeBits.ml(56)<ghost>:1682-1739
           (before Gbnf_parser__CodeBits.if1 lib/codeBits.ml(57):1698-1739
             (if condition/1321
               (before Gbnf_parser__CodeBits.if1 lib/codeBits.ml(58):1720-1725
                 (makeblock 0 x/1322 0))
               (before Gbnf_parser__CodeBits.if1 lib/codeBits.ml(60):1737-1739
                 0)))))
     ifnlazy/1323 =
       (function condition/1325[int] xs/1326
         (funct-body Gbnf_parser__CodeBits.ifnlazy lib/codeBits.ml(62)<ghost>:1753-1810
           (before Gbnf_parser__CodeBits.ifnlazy lib/codeBits.ml(63):1770-1810
             (if condition/1325
               (before Gbnf_parser__CodeBits.ifnlazy lib/codeBits.ml(64):1792-1796
                 (after Gbnf_parser__CodeBits.ifnlazy lib/codeBits.ml(64):1792-1796
                   (apply xs/1326 0)))
               (before Gbnf_parser__CodeBits.ifnlazy lib/codeBits.ml(66):1808-1810
                 0)))))
     tunit/1327 = [2: "unit" 0]
     tbool/1328 = [2: "bool" 0]
     tint/1329 = [2: "int" 0]
     tstring/1330 = [2: "string" 0]
     texn/1331 = [2: "exn" 0]
     tpair/1332 =
       (function typ1/1334 typ2/1335
         (funct-body Gbnf_parser__CodeBits.tpair lib/codeBits.ml(95)<ghost>:2146-2181
           (before Gbnf_parser__CodeBits.tpair lib/codeBits.ml(96):2160-2181
             (makeblock 3 (makeblock 0 typ1/1334 (makeblock 0 typ2/1335 0))))))
     tposition/1336 = [2: "Lexing.position" 0]
     tlocation/1337 =
       (after Gbnf_parser__CodeBits.tlocation lib/codeBits.ml(108):2410-2435
         (apply tpair/1332 tposition/1336 tposition/1336))
     tlexbuf/1338 = [2: "Lexing.lexbuf" 0]
     tobj/1339 = [2: "Obj.t" 0]
     tvar/1340 =
       (function x/1342
         (funct-body Gbnf_parser__CodeBits.tvar lib/codeBits.ml(122)<ghost>:2638-2658
           (before Gbnf_parser__CodeBits.tvar lib/codeBits.ml(123):2650-2658
             (makeblock 1 x/1342))))
     scheme/1343 =
       (function qs/1345 t/1346
         (funct-body Gbnf_parser__CodeBits.scheme lib/codeBits.ml(127)<ghost>:2702-2751
           (before Gbnf_parser__CodeBits.scheme lib/codeBits.ml(128):2711-2751
             (makeblock 0 qs/1345 t/1346))))
     type2scheme/1347 =
       (function t/1349
         (funct-body Gbnf_parser__CodeBits.type2scheme lib/codeBits.ml(135)<ghost>:2834-2851
           (before Gbnf_parser__CodeBits.type2scheme lib/codeBits.ml(136):2840-2851
             (after Gbnf_parser__CodeBits.type2scheme lib/codeBits.ml(136):2840-2851
               (apply scheme/1343 0 t/1349)))))
     annotate/1350 =
       (function e/1352 t/1353
         (funct-body Gbnf_parser__CodeBits.annotate lib/codeBits.ml(140)<ghost>:2930-2963
           (before Gbnf_parser__CodeBits.annotate lib/codeBits.ml(141):2938-2963
             (makeblock 13 e/1352
               (after Gbnf_parser__CodeBits.annotate lib/codeBits.ml(141):2949-2962
                 (apply type2scheme/1347 t/1353))))))
     pat2var/1354 =
       (function param/1357
         (funct-body Gbnf_parser__CodeBits.pat2var lib/codeBits.ml(143):2979-3037
           (catch
             (switch param/1357
              case tag 0:
               (let (x/1356 =a (field 0 param/1357))
                 (before Gbnf_parser__CodeBits.pat2var lib/codeBits.ml(145):3008-3009
                   x/1356))
              default: (exit 6))
            with (6)
             (before Gbnf_parser__CodeBits.pat2var lib/codeBits.ml(147):3025-3037
               (raise
                 (after Gbnf_parser__CodeBits.pat2var lib/codeBits.ml(147):3025-3037
                   (makeblock 0 (global Assert_failure/28!)
                     [0: "lib/codeBits.ml" 147 6]))))))))
    (letrec
      (simplify/1358
         (function param/1365
           (funct-body Gbnf_parser__CodeBits.simplify lib/codeBits.ml(152):3151-3460
             (if param/1365
               (let (binding/1363 =a (field 0 param/1365))
                 (catch
                   (let (*match*/2133 =a (field 0 binding/1363))
                     (switch *match*/2133
                      case int 0:
                       (let (*match*/2135 =a (field 1 binding/1363))
                         (switch *match*/2135
                          case tag 0:
                           (let (bindings/1362 =a (field 1 param/1365))
                             (before Gbnf_parser__CodeBits.simplify lib/codeBits.ml(160):3381-3398
                               (after Gbnf_parser__CodeBits.simplify lib/codeBits.ml(160):3381-3398
                                 (apply simplify/1358 bindings/1362))))
                          default: (exit 7)))
                      case tag 0:
                       (let (*match*/2134 =a (field 1 binding/1363))
                         (switch *match*/2134
                          case tag 0:
                           (let
                             (bindings/1361 =a (field 1 param/1365)
                              v2/1360 =a (field 0 *match*/2134)
                              v1/1359 =a (field 0 *match*/2133))
                             (before Gbnf_parser__CodeBits.simplify lib/codeBits.ml(155):3219-3226
                               (if
                                 (after Gbnf_parser__CodeBits.simplify lib/codeBits.ml(155):3219-3226
                                   (caml_string_equal v1/1359 v2/1360))
                                 (before Gbnf_parser__CodeBits.simplify lib/codeBits.ml(157):3277-3294
                                   (after Gbnf_parser__CodeBits.simplify lib/codeBits.ml(157):3277-3294
                                     (apply simplify/1358 bindings/1361)))
                                 (exit 7))))
                          default: (exit 7)))
                      default: (exit 7)))
                  with (7)
                   (let (bindings/1364 =a (field 1 param/1365))
                     (before Gbnf_parser__CodeBits.simplify lib/codeBits.ml(162):3432-3460
                       (makeblock 0 binding/1363
                         (after Gbnf_parser__CodeBits.simplify lib/codeBits.ml(162):3443-3460
                           (apply simplify/1358 bindings/1364)))))))
               (before Gbnf_parser__CodeBits.simplify lib/codeBits.ml(154):3176-3178
                 0)))))
      (let
        (blet/1366 =
           (function param/1374
             (funct-body Gbnf_parser__CodeBits.blet lib/codeBits.ml(166)<ghost>:3538-3787
               (let
                 (body/1369 =a (field 1 param/1374)
                  bindings/1368 =a (field 0 param/1374))
                 (before Gbnf_parser__CodeBits.blet lib/codeBits.ml(167):3559-3787
                   (let
                     (bindings/1370 =
                        (after Gbnf_parser__CodeBits.blet lib/codeBits.ml(167):3574-3591
                          (apply simplify/1358 bindings/1368)))
                     (before Gbnf_parser__CodeBits.blet lib/codeBits.ml(168):3597-3787
                       (catch
                         (if bindings/1370
                           (let
                             (*match*/2137 =a (field 0 bindings/1370)
                              *match*/2138 =a (field 0 *match*/2137))
                             (switch *match*/2138
                              case tag 0:
                               (let (*match*/2139 =a (field 1 bindings/1370))
                                 (if *match*/2139 (exit 8)
                                   (switch body/1369
                                    case tag 0:
                                     (let
                                       (x2/1373 =a (field 0 body/1369)
                                        e/1372 =a (field 1 *match*/2137)
                                        x1/1371 =a (field 0 *match*/2138))
                                       (before Gbnf_parser__CodeBits.blet lib/codeBits.ml(171):3680-3687
                                         (if
                                           (after Gbnf_parser__CodeBits.blet lib/codeBits.ml(171):3680-3687
                                             (caml_string_equal x1/1371
                                               x2/1373))
                                           (before Gbnf_parser__CodeBits.blet lib/codeBits.ml(173):3746-3747
                                             e/1372)
                                           (exit 8))))
                                    default: (exit 8))))
                              default: (exit 8)))
                           (before Gbnf_parser__CodeBits.blet lib/codeBits.ml(170):3642-3646
                             body/1369))
                        with (8)
                         (before Gbnf_parser__CodeBits.blet lib/codeBits.ml(175):3766-3787
                           (makeblock 3 bindings/1370 body/1369)))))))))
         mlet/1375 =
           (function formals/1377 actuals/1378 body/1379
             (funct-body Gbnf_parser__CodeBits.mlet lib/codeBits.ml(177)<ghost>:3798-3864
               (before Gbnf_parser__CodeBits.mlet lib/codeBits.ml(178):3823-3864
                 (after Gbnf_parser__CodeBits.mlet lib/codeBits.ml(178):3823-3864
                   (apply blet/1366
                     (makeblock 0
                       (after Gbnf_parser__CodeBits.mlet lib/codeBits.ml(178):3829-3857
                         (apply (field 54 (global Stdlib__List!))
                           formals/1377 actuals/1378))
                       body/1379))))))
         eletand/1443 =
           (function param/1453
             (funct-body Gbnf_parser__CodeBits.eletand lib/codeBits.ml(182)<ghost>:3932-4429
               (let
                 (body/1446 =a (field 1 param/1453)
                  bindings/1445 =a (field 0 param/1453))
                 (before Gbnf_parser__CodeBits.eletand lib/codeBits.ml(183):3953-4429
                   (let
                     (bindings/1447 =
                        (after Gbnf_parser__CodeBits.eletand lib/codeBits.ml(183):3968-3985
                          (apply simplify/1358 bindings/1445)))
                     (before Gbnf_parser__CodeBits.eletand lib/codeBits.ml(184):3991-4429
                       (if bindings/1447
                         (let
                           (*match*/2144 =a (field 0 bindings/1447)
                            *match*/2145 =a (field 0 *match*/2144))
                           (catch
                             (switch *match*/2145
                              case tag 0:
                               (let (*match*/2146 =a (field 1 bindings/1447))
                                 (if *match*/2146 (exit 12)
                                   (switch body/1446
                                    case tag 0:
                                     (let
                                       (x2/1450 =a (field 0 body/1446)
                                        e/1449 =a (field 1 *match*/2144)
                                        x1/1448 =a (field 0 *match*/2145))
                                       (before Gbnf_parser__CodeBits.eletand lib/codeBits.ml(188):4114-4121
                                         (if
                                           (after Gbnf_parser__CodeBits.eletand lib/codeBits.ml(188):4114-4121
                                             (caml_string_equal x1/1448
                                               x2/1450))
                                           (before Gbnf_parser__CodeBits.eletand lib/codeBits.ml(190):4180-4181
                                             e/1449)
                                           (exit 12))))
                                    default: (exit 12))))
                              default: (exit 12))
                            with (12)
                             (let (*match*/2148 =a (field 1 bindings/1447))
                               (if *match*/2148
                                 (before Gbnf_parser__CodeBits.eletand lib/codeBits.ml(196):4340-4429
                                   (let
                                     (*match*/2143 =
                                        (after Gbnf_parser__CodeBits.eletand lib/codeBits.ml(196):4358-4377
                                          (apply
                                            (field 53 (global Stdlib__List!))
                                            bindings/1447))
                                      exprs/1452 =a (field 1 *match*/2143)
                                      pats/1451 =a (field 0 *match*/2143))
                                     (before Gbnf_parser__CodeBits.eletand lib/codeBits.ml(197):4387-4429
                                       (makeblock 3
                                         (makeblock 0
                                           (makeblock 0
                                             (makeblock 3 pats/1451)
                                             (makeblock 12 exprs/1452))
                                           0)
                                         body/1446))))
                                 (before Gbnf_parser__CodeBits.eletand lib/codeBits.ml(193):4242-4263
                                   (makeblock 3 bindings/1447 body/1446))))))
                         (before Gbnf_parser__CodeBits.eletand lib/codeBits.ml(187):4076-4080
                           body/1446))))))))
         eraisenotfound/1454 = [7: [11: "Not_found" 0]]
         eassert/1455 =
           (function e/1457
             (funct-body Gbnf_parser__CodeBits.eassert lib/codeBits.ml(204)<ghost>:4566-4599
               (before Gbnf_parser__CodeBits.eassert lib/codeBits.ml(205):4572-4599
                 (makeblock 2 [0: "assert"] (makeblock 0 e/1457 0)))))
         bottom/1458 = eraisenotfound/1454
         efalse/1459 = [11: "false" 0]
         etrue/1460 = [11: "true" 0]
         eboolconst/1461 =
           (function b/1463[int]
             (funct-body Gbnf_parser__CodeBits.eboolconst lib/codeBits.ml(221)<ghost>:4843-4876
               (before Gbnf_parser__CodeBits.eboolconst lib/codeBits.ml(222):4849-4876
                 (if b/1463
                   (before Gbnf_parser__CodeBits.eboolconst lib/codeBits.ml(222):4859-4864
                     etrue/1460)
                   (before Gbnf_parser__CodeBits.eboolconst lib/codeBits.ml(222):4870-4876
                     efalse/1459)))))
         enone/1464 = [11: "None" 0]
         esome/1465 =
           (function e/1467
             (funct-body Gbnf_parser__CodeBits.esome lib/codeBits.ml(229)<ghost>:4950-4975
               (before Gbnf_parser__CodeBits.esome lib/codeBits.ml(230):4956-4975
                 (makeblock 11 "Some" (makeblock 0 e/1467 0))))))
        (letrec
          (elist/1468
             (function xs/1469
               (funct-body Gbnf_parser__CodeBits.elist lib/codeBits.ml(234)<ghost>:5017-5121
                 (before Gbnf_parser__CodeBits.elist lib/codeBits.ml(235):5024-5121
                   (if xs/1469
                     (let
                       (xs/1471 =a (field 1 xs/1469)
                        x/1470 =a (field 0 xs/1469))
                       (before Gbnf_parser__CodeBits.elist lib/codeBits.ml(239):5092-5121
                         (makeblock 11 "::"
                           (makeblock 0 x/1470
                             (makeblock 0
                               (after Gbnf_parser__CodeBits.elist lib/codeBits.ml(239):5110-5118
                                 (apply elist/1468 xs/1471))
                               0)))))
                     (before Gbnf_parser__CodeBits.elist lib/codeBits.ml(237):5054-5070
                       [11: "[]" 0]))))))
          (let
            (pint/1472 =
               (function k/1474[int]
                 (funct-body Gbnf_parser__CodeBits.pint lib/codeBits.ml(243)<ghost>:5170-5213
                   (before Gbnf_parser__CodeBits.pint lib/codeBits.ml(244):5186-5213
                     (makeblock 2
                       (after Gbnf_parser__CodeBits.pint lib/codeBits.ml(244):5193-5208
                         (apply (field 32 (global Stdlib!)) k/1474))
                       0))))
             arrow/1475 =
               (function typ/1477 body/1478
                 (funct-body Gbnf_parser__CodeBits.arrow lib/codeBits.ml(248)<ghost>:5265-5304
                   (before Gbnf_parser__CodeBits.arrow lib/codeBits.ml(249):5284-5304
                     (makeblock 4 typ/1477 body/1478))))
             arrowif/1479 =
               (function flag/1481[int] typ/1482 body/1483
                 (funct-body Gbnf_parser__CodeBits.arrowif lib/codeBits.ml(251)<ghost>:5318-5389
                   (before Gbnf_parser__CodeBits.arrowif lib/codeBits.ml(252):5342-5389
                     (if flag/1481
                       (before Gbnf_parser__CodeBits.arrowif lib/codeBits.ml(253):5359-5373
                         (after Gbnf_parser__CodeBits.arrowif lib/codeBits.ml(253):5359-5373
                           (apply arrow/1475 typ/1482 body/1483)))
                       (before Gbnf_parser__CodeBits.arrowif lib/codeBits.ml(255):5385-5389
                         body/1483)))))
             marrow/1484 =
               (function typs/1486 body/1487
                 (funct-body Gbnf_parser__CodeBits.marrow lib/codeBits.ml(257)<ghost>:5402-5453
                   (before Gbnf_parser__CodeBits.marrow lib/codeBits.ml(258):5422-5453
                     (after Gbnf_parser__CodeBits.marrow lib/codeBits.ml(258):5422-5453
                       (apply (field 25 (global Stdlib__List!)) arrow/1475
                         typs/1486 body/1487)))))
             eprintf/1488 =
               (function format/1490 args/1491
                 (funct-body Gbnf_parser__CodeBits.eprintf lib/codeBits.ml(262)<ghost>:5483-5585
                   (before Gbnf_parser__CodeBits.eprintf lib/codeBits.ml(263):5499-5585
                     (makeblock 2 [0: "Printf.eprintf"]
                       (makeblock 0
                         (makeblock 10
                           (after Gbnf_parser__CodeBits.eprintf lib/codeBits.ml(265):5551-5568
                             (apply (field 27 (global Stdlib!)) format/1490
                               "\n%!")))
                         args/1491)))))
             trace/1492 =
               (function format/1494 args/1495
                 (funct-body Gbnf_parser__CodeBits.trace lib/codeBits.ml(269)<ghost>:5597-5694
                   (before Gbnf_parser__CodeBits.trace lib/codeBits.ml(270):5664-5694
                     (makeblock 0
                       (makeblock 0 1
                         (after Gbnf_parser__CodeBits.trace lib/codeBits.ml(270):5673-5692
                           (apply eprintf/1488 format/1494 args/1495)))
                       0))))
             tracecomment/1496 =
               (function comment/1498 body/1499
                 (funct-body Gbnf_parser__CodeBits.tracecomment lib/codeBits.ml(273)<ghost>:5714-5789
                   (before Gbnf_parser__CodeBits.tracecomment lib/codeBits.ml(274):5760-5789
                     (after Gbnf_parser__CodeBits.tracecomment lib/codeBits.ml(274):5760-5789
                       (apply blet/1366
                         (makeblock 0
                           (after Gbnf_parser__CodeBits.tracecomment lib/codeBits.ml(274):5766-5782
                             (apply trace/1492 comment/1498 0))
                           body/1499))))))
             prefix/1500 =
               (function name/1502
                 (funct-body Gbnf_parser__CodeBits.prefix lib/codeBits.ml(285)<ghost>:6301-6329
                   (before Gbnf_parser__CodeBits.prefix lib/codeBits.ml(286):6312-6329
                     (after Gbnf_parser__CodeBits.prefix lib/codeBits.ml(286):6312-6329
                       (apply (field 27 (global Stdlib!)) "_menhir_"
                         name/1502)))))
             dataprefix/1503 =
               (function name/1505
                 (funct-body Gbnf_parser__CodeBits.dataprefix lib/codeBits.ml(288)<ghost>:6346-6370
                   (before Gbnf_parser__CodeBits.dataprefix lib/codeBits.ml(289):6355-6370
                     (after Gbnf_parser__CodeBits.dataprefix lib/codeBits.ml(289):6355-6370
                       (apply (field 27 (global Stdlib!)) "Menhir" name/1505)))))
             tvprefix/1506 =
               (function name/1508
                 (funct-body Gbnf_parser__CodeBits.tvprefix lib/codeBits.ml(291)<ghost>:6385-6409
                   (before Gbnf_parser__CodeBits.tvprefix lib/codeBits.ml(292):6396-6409
                     (after Gbnf_parser__CodeBits.tvprefix lib/codeBits.ml(292):6396-6409
                       (apply (field 27 (global Stdlib!)) "ttv_" name/1508)))))
             interface_item_to_structure_item/1509 =
               (function param/1513
                 (funct-body Gbnf_parser__CodeBits.interface_item_to_structure_item lib/codeBits.ml(299):6628-6836
                   (switch param/1513
                    case tag 1:
                     (let (defs/1511 =a (field 0 param/1513))
                       (before Gbnf_parser__CodeBits.interface_item_to_structure_item lib/codeBits.ml(301):6666-6684
                         (makeblock 0 (makeblock 1 defs/1511) 0)))
                    case tag 2:
                     (let (defs/1512 =a (field 0 param/1513))
                       (before Gbnf_parser__CodeBits.interface_item_to_structure_item lib/codeBits.ml(303):6715-6734
                         (makeblock 0 (makeblock 2 defs/1512) 0)))
                    default:
                     (before Gbnf_parser__CodeBits.interface_item_to_structure_item lib/codeBits.ml(309):6834-6836
                       0))))
             interface_to_structure/1514 =
               (function i/1516
                 (funct-body Gbnf_parser__CodeBits.interface_to_structure lib/codeBits.ml(311)<ghost>:6865-6929
                   (before Gbnf_parser__CodeBits.interface_to_structure lib/codeBits.ml(312):6871-6929
                     (after Gbnf_parser__CodeBits.interface_to_structure lib/codeBits.ml(312):6871-6929
                       (apply (field 13 (global Stdlib__List!))
                         (after Gbnf_parser__CodeBits.interface_to_structure lib/codeBits.ml(312):6884-6929
                           (apply (field 18 (global Stdlib__List!))
                             interface_item_to_structure_item/1509 i/1516)))))))
             with_types/1517 =
               (function wk/1519[int] name/1520 tys/1521
                 (funct-body Gbnf_parser__CodeBits.with_types lib/codeBits.ml(317)<ghost>:7038-7173
                   (before Gbnf_parser__CodeBits.with_types lib/codeBits.ml(318):7054-7173
                     (after Gbnf_parser__CodeBits.with_types lib/codeBits.ml(318):7054-7173
                       (apply (field 24 (global Stdlib__List!))
                         (function mt/1522 param/1526
                           (funct-body Gbnf_parser__CodeBits.with_types.(fun) lib/codeBits.ml(318):7069-7144
                             (let
                               (ty/1525 =a (field 2 param/1526)
                                name/1524 =a (field 1 param/1526)
                                params/1523 =a (field 0 param/1526))
                               (before Gbnf_parser__CodeBits.with_types.(fun) lib/codeBits.ml(319):7103-7140
                                 (makeblock 1 (*,*,*,int,*) mt/1522
                                   params/1523 name/1524 wk/1519 ty/1525)))))
                         (makeblock 0 name/1520) tys/1521)))))
             mapp/1527 =
               (function me1/1529 me2/1530
                 (funct-body Gbnf_parser__CodeBits.mapp lib/codeBits.ml(322)<ghost>:7184-7211
                   (before Gbnf_parser__CodeBits.mapp lib/codeBits.ml(323):7196-7211
                     (makeblock 2 me1/1529 me2/1530))))
             mapp/1531 =
               (function me1/1532 mes2/1533
                 (funct-body Gbnf_parser__CodeBits.mapp lib/codeBits.ml(325)<ghost>:7222-7263
                   (before Gbnf_parser__CodeBits.mapp lib/codeBits.ml(326):7235-7263
                     (after Gbnf_parser__CodeBits.mapp lib/codeBits.ml(326):7235-7263
                       (apply (field 24 (global Stdlib__List!)) mapp/1527
                         me1/1532 mes2/1533)))))
             field/1534 =
               (function modifiable/1536[int] name/1537 t/1538
                 (funct-body Gbnf_parser__CodeBits.field lib/codeBits.ml(328)<ghost>:7275-7383
                   (before Gbnf_parser__CodeBits.field lib/codeBits.ml(329):7297-7383
                     (makeblock 0 (int,*,*) modifiable/1536 name/1537
                       (after Gbnf_parser__CodeBits.field lib/codeBits.ml(332):7366-7379
                         (apply type2scheme/1347 t/1538))))))
             branch/1539 =
               (function branchpat/1541 branchbody/1542
                 (funct-body Gbnf_parser__CodeBits.branch lib/codeBits.ml(335)<ghost>:7396-7446
                   (before Gbnf_parser__CodeBits.branch lib/codeBits.ml(336):7421-7446
                     (makeblock 0 branchpat/1541 branchbody/1542))))
             *match*/2167 =
               (after Gbnf_parser__CodeBits lib/codeBits.ml(336)<ghost>:7446-7446
                 (apply (field 5 (global Ppx_inline_test_lib!))
                   "gbnf_parser"))
             *match*/2165 =
               (after Gbnf_parser__CodeBits lib/codeBits.ml(336)<ghost>:7446-7446
                 (apply (field 1 (field 5 (global Expect_test_collector!)))
                   0))
             *match*/2163 =
               (after Gbnf_parser__CodeBits lib/codeBits.ml(336)<ghost>:7446-7446
                 (apply
                   (field 1
                     (field 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
                   0))
             *match*/2161 =
               (after Gbnf_parser__CodeBits lib/codeBits.ml(336)<ghost>:7446-7446
                 (apply (field 4 (global Ppx_module_timer_runtime!))
                   #"Gbnf_parser__CodeBits")))
            (pseudo <unknown location>
              (makeblock 0 pvarlocated/1155 etuple/1307 ptuple/1311 ifn/1315
                if1/1319 ifnlazy/1323 tunit/1327 tbool/1328 tint/1329
                tstring/1330 texn/1331 tpair/1332 tposition/1336
                tlocation/1337 tlexbuf/1338 tobj/1339 tvar/1340 scheme/1343
                type2scheme/1347 annotate/1350 pat2var/1354 simplify/1358
                blet/1366 mlet/1375 eletand/1443 eraisenotfound/1454
                eassert/1455 bottom/1458 efalse/1459 etrue/1460
                eboolconst/1461 enone/1464 esome/1465 elist/1468 pint/1472
                arrow/1475 arrowif/1479 marrow/1484 eprintf/1488 trace/1492
                tracecomment/1496 prefix/1500 dataprefix/1503 tvprefix/1506
                interface_item_to_structure_item/1509
                interface_to_structure/1514 with_types/1517 mapp/1531
                field/1534 branch/1539))))))))
