[
  structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
    Pstr_attribute "ocaml.ppx.context"
    [
      structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
        Pstr_eval
        expression (_none_[0,0+-1]..[0,0+-1]) ghost
          Pexp_record
          [
            "tool_name" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_constant PConst_string("ppx_driver",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
            "include_dirs" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "load_path" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "open_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "for_package" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "None" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "debug" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_threads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_vmthreads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "recursive_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "principal" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "transparent_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unboxed_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unsafe_string" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "cookies" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                Some
                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                    Pexp_tuple
                    [
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_tuple
                        [
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_constant PConst_string("inline_tests",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                          expression (<command-line>[1,0+0]..[1,0+9])
                            Pexp_constant PConst_string("enabled",(<command-line>[1,0+1]..[1,0+8]),None)
                        ]
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                        Some
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_tuple
                            [
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_tuple
                                [
                                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                    Pexp_constant PConst_string("library-name",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                                  expression (<command-line>[1,0+0]..[1,0+13])
                                    Pexp_constant PConst_string("gbnf_parser",(<command-line>[1,0+1]..[1,0+12]),None)
                                ]
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                                None
                            ]
                    ]
          ]
          None
    ]
  structure_item (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
          Ppat_construct "()" (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
          None
        expression (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
          Pexp_apply
          expression (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
            Pexp_ident "Ppx_module_timer_runtime.record_start" (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
                Pexp_ident "Ppx_module_timer_runtime.__MODULE__" (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
          Ppat_construct "()" (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
          None
        expression (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
          Pexp_apply
          expression (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
            Pexp_ident "Ppx_bench_lib.Benchmark_accumulator.Current_libname.set" (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost,None)
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
          Ppat_construct "()" (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
          None
        expression (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
          Pexp_apply
          expression (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
            Pexp_ident "Expect_test_collector.Current_file.set" (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
          [
            <arg>
            Labelled "absolute_filename"
              expression (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
                Pexp_constant PConst_string("lib/AtomicBitSet.ml",(lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost,None)
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
          Ppat_construct "()" (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
          None
        expression (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
          Pexp_apply
          expression (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
            Pexp_ident "Ppx_inline_test_lib.set_lib_and_partition" (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost,None)
            <arg>
            Nolabel
              expression (lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost
                Pexp_constant PConst_string("AtomicBitSet.ml",(lib/AtomicBitSet.ml[18,1194+0]..[18,1194+0]) ghost,None)
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[18,1194+0]..[19,1203+5])
    Pstr_type Rec
    [
      type_declaration "t" (lib/AtomicBitSet.ml[18,1194+5]..[18,1194+6]) (lib/AtomicBitSet.ml[18,1194+0]..[19,1203+5])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/AtomicBitSet.ml[19,1203+2]..[19,1203+5])
              Ptyp_constr "int" (lib/AtomicBitSet.ml[19,1203+2]..[19,1203+5])
              []
    ]
  structure_item (lib/AtomicBitSet.ml[21,1210+0]..[22,1225+5])
    Pstr_type Rec
    [
      type_declaration "element" (lib/AtomicBitSet.ml[21,1210+5]..[21,1210+12]) (lib/AtomicBitSet.ml[21,1210+0]..[22,1225+5])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/AtomicBitSet.ml[22,1225+2]..[22,1225+5])
              Ptyp_constr "int" (lib/AtomicBitSet.ml[22,1225+2]..[22,1225+5])
              []
    ]
  structure_item (lib/AtomicBitSet.ml[24,1232+0]..[25,1244+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[24,1232+4]..[24,1232+9])
          Ppat_var "bound" (lib/AtomicBitSet.ml[24,1232+4]..[24,1232+9])
        expression (lib/AtomicBitSet.ml[25,1244+2]..[25,1244+19])
          Pexp_apply
          expression (lib/AtomicBitSet.ml[25,1244+16]..[25,1244+17])
            Pexp_ident "-" (lib/AtomicBitSet.ml[25,1244+16]..[25,1244+17])
          [
            <arg>
            Nolabel
              expression (lib/AtomicBitSet.ml[25,1244+2]..[25,1244+15])
                Pexp_ident "Sys.word_size" (lib/AtomicBitSet.ml[25,1244+2]..[25,1244+15])
            <arg>
            Nolabel
              expression (lib/AtomicBitSet.ml[25,1244+18]..[25,1244+19])
                Pexp_constant PConst_int (1,None)
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[31,1372+0]..[33,1416+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[31,1372+4]..[31,1372+7])
          Ppat_var "bit" (lib/AtomicBitSet.ml[31,1372+4]..[31,1372+7])
        expression (lib/AtomicBitSet.ml[31,1372+8]..[33,1416+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/AtomicBitSet.ml[31,1372+8]..[31,1372+9])
            Ppat_var "i" (lib/AtomicBitSet.ml[31,1372+8]..[31,1372+9])
          expression (lib/AtomicBitSet.ml[32,1384+2]..[33,1416+9])
            Pexp_sequence
            expression (lib/AtomicBitSet.ml[32,1384+2]..[32,1384+30])
              Pexp_assert
              expression (lib/AtomicBitSet.ml[32,1384+9]..[32,1384+30])
                Pexp_apply
                expression (lib/AtomicBitSet.ml[32,1384+17]..[32,1384+19])
                  Pexp_ident "&&" (lib/AtomicBitSet.ml[32,1384+17]..[32,1384+19])
                [
                  <arg>
                  Nolabel
                    expression (lib/AtomicBitSet.ml[32,1384+10]..[32,1384+16])
                      Pexp_apply
                      expression (lib/AtomicBitSet.ml[32,1384+12]..[32,1384+14])
                        Pexp_ident "<=" (lib/AtomicBitSet.ml[32,1384+12]..[32,1384+14])
                      [
                        <arg>
                        Nolabel
                          expression (lib/AtomicBitSet.ml[32,1384+10]..[32,1384+11])
                            Pexp_constant PConst_int (0,None)
                        <arg>
                        Nolabel
                          expression (lib/AtomicBitSet.ml[32,1384+15]..[32,1384+16])
                            Pexp_ident "i" (lib/AtomicBitSet.ml[32,1384+15]..[32,1384+16])
                      ]
                  <arg>
                  Nolabel
                    expression (lib/AtomicBitSet.ml[32,1384+20]..[32,1384+29])
                      Pexp_apply
                      expression (lib/AtomicBitSet.ml[32,1384+22]..[32,1384+23])
                        Pexp_ident "<" (lib/AtomicBitSet.ml[32,1384+22]..[32,1384+23])
                      [
                        <arg>
                        Nolabel
                          expression (lib/AtomicBitSet.ml[32,1384+20]..[32,1384+21])
                            Pexp_ident "i" (lib/AtomicBitSet.ml[32,1384+20]..[32,1384+21])
                        <arg>
                        Nolabel
                          expression (lib/AtomicBitSet.ml[32,1384+24]..[32,1384+29])
                            Pexp_ident "bound" (lib/AtomicBitSet.ml[32,1384+24]..[32,1384+29])
                      ]
                ]
            expression (lib/AtomicBitSet.ml[33,1416+2]..[33,1416+9])
              Pexp_apply
              expression (lib/AtomicBitSet.ml[33,1416+4]..[33,1416+7])
                Pexp_ident "lsl" (lib/AtomicBitSet.ml[33,1416+4]..[33,1416+7])
              [
                <arg>
                Nolabel
                  expression (lib/AtomicBitSet.ml[33,1416+2]..[33,1416+3])
                    Pexp_constant PConst_int (1,None)
                <arg>
                Nolabel
                  expression (lib/AtomicBitSet.ml[33,1416+8]..[33,1416+9])
                    Pexp_ident "i" (lib/AtomicBitSet.ml[33,1416+8]..[33,1416+9])
              ]
    ]
  structure_item (lib/AtomicBitSet.ml[46,1906+0]..[47,1917+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[46,1906+4]..[46,1906+8])
          Ppat_var "log2" (lib/AtomicBitSet.ml[46,1906+4]..[46,1906+8])
        expression (lib/AtomicBitSet.ml[47,1917+2]..[47,1917+18])
          Pexp_apply
          expression (lib/AtomicBitSet.ml[47,1917+2]..[47,1917+12])
            Pexp_ident "Array.make" (lib/AtomicBitSet.ml[47,1917+2]..[47,1917+12])
          [
            <arg>
            Nolabel
              expression (lib/AtomicBitSet.ml[47,1917+13]..[47,1917+16])
                Pexp_constant PConst_int (255,None)
            <arg>
            Nolabel
              expression (lib/AtomicBitSet.ml[47,1917+17]..[47,1917+18])
                Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[48,1936+0]..[49,1945+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[48,1936+4]..[48,1936+6])
          Ppat_construct "()" (lib/AtomicBitSet.ml[48,1936+4]..[48,1936+6])
          None
        expression (lib/AtomicBitSet.ml[49,1945+2]..[49,1945+42])
          Pexp_for Up
          pattern (lib/AtomicBitSet.ml[49,1945+6]..[49,1945+7])
            Ppat_var "i" (lib/AtomicBitSet.ml[49,1945+6]..[49,1945+7])
          expression (lib/AtomicBitSet.ml[49,1945+10]..[49,1945+11])
            Pexp_constant PConst_int (0,None)
          expression (lib/AtomicBitSet.ml[49,1945+15]..[49,1945+16])
            Pexp_constant PConst_int (7,None)
          expression (lib/AtomicBitSet.ml[49,1945+20]..[49,1945+37])
            Pexp_apply
            expression (lib/AtomicBitSet.ml[49,1945+20]..[49,1945+37]) ghost
              Pexp_ident "Array.set" (lib/AtomicBitSet.ml[49,1945+20]..[49,1945+37]) ghost
            [
              <arg>
              Nolabel
                expression (lib/AtomicBitSet.ml[49,1945+20]..[49,1945+24])
                  Pexp_ident "log2" (lib/AtomicBitSet.ml[49,1945+20]..[49,1945+24])
              <arg>
              Nolabel
                expression (lib/AtomicBitSet.ml[49,1945+26]..[49,1945+31])
                  Pexp_apply
                  expression (lib/AtomicBitSet.ml[49,1945+26]..[49,1945+29])
                    Pexp_ident "bit" (lib/AtomicBitSet.ml[49,1945+26]..[49,1945+29])
                  [
                    <arg>
                    Nolabel
                      expression (lib/AtomicBitSet.ml[49,1945+30]..[49,1945+31])
                        Pexp_ident "i" (lib/AtomicBitSet.ml[49,1945+30]..[49,1945+31])
                  ]
              <arg>
              Nolabel
                expression (lib/AtomicBitSet.ml[49,1945+36]..[49,1945+37])
                  Pexp_ident "i" (lib/AtomicBitSet.ml[49,1945+36]..[49,1945+37])
            ]
    ]
  structure_item (lib/AtomicBitSet.ml[51,1989+0]..[55,2071+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[51,1989+4]..[51,1989+9])
          Ppat_var "tib16" (lib/AtomicBitSet.ml[51,1989+4]..[51,1989+9])
        expression (lib/AtomicBitSet.ml[51,1989+10]..[55,2071+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/AtomicBitSet.ml[51,1989+10]..[51,1989+14])
            Ppat_var "accu" (lib/AtomicBitSet.ml[51,1989+10]..[51,1989+14])
          expression (lib/AtomicBitSet.ml[51,1989+15]..[55,2071+19]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/AtomicBitSet.ml[51,1989+15]..[51,1989+16])
              Ppat_var "x" (lib/AtomicBitSet.ml[51,1989+15]..[51,1989+16])
            expression (lib/AtomicBitSet.ml[52,2008+2]..[55,2071+19])
              Pexp_ifthenelse
              expression (lib/AtomicBitSet.ml[52,2008+5]..[52,2008+20])
                Pexp_apply
                expression (lib/AtomicBitSet.ml[52,2008+17]..[52,2008+18])
                  Pexp_ident "=" (lib/AtomicBitSet.ml[52,2008+17]..[52,2008+18])
                [
                  <arg>
                  Nolabel
                    expression (lib/AtomicBitSet.ml[52,2008+5]..[52,2008+16])
                      Pexp_apply
                      expression (lib/AtomicBitSet.ml[52,2008+7]..[52,2008+11])
                        Pexp_ident "land" (lib/AtomicBitSet.ml[52,2008+7]..[52,2008+11])
                      [
                        <arg>
                        Nolabel
                          expression (lib/AtomicBitSet.ml[52,2008+5]..[52,2008+6])
                            Pexp_ident "x" (lib/AtomicBitSet.ml[52,2008+5]..[52,2008+6])
                        <arg>
                        Nolabel
                          expression (lib/AtomicBitSet.ml[52,2008+12]..[52,2008+16])
                            Pexp_constant PConst_int (0xFF,None)
                      ]
                  <arg>
                  Nolabel
                    expression (lib/AtomicBitSet.ml[52,2008+19]..[52,2008+20])
                      Pexp_constant PConst_int (0,None)
                ]
              expression (lib/AtomicBitSet.ml[53,2034+4]..[53,2034+29])
                Pexp_apply
                expression (lib/AtomicBitSet.ml[53,2034+13]..[53,2034+14])
                  Pexp_ident "+" (lib/AtomicBitSet.ml[53,2034+13]..[53,2034+14])
                [
                  <arg>
                  Nolabel
                    expression (lib/AtomicBitSet.ml[53,2034+4]..[53,2034+12])
                      Pexp_apply
                      expression (lib/AtomicBitSet.ml[53,2034+9]..[53,2034+10])
                        Pexp_ident "+" (lib/AtomicBitSet.ml[53,2034+9]..[53,2034+10])
                      [
                        <arg>
                        Nolabel
                          expression (lib/AtomicBitSet.ml[53,2034+4]..[53,2034+8])
                            Pexp_ident "accu" (lib/AtomicBitSet.ml[53,2034+4]..[53,2034+8])
                        <arg>
                        Nolabel
                          expression (lib/AtomicBitSet.ml[53,2034+11]..[53,2034+12])
                            Pexp_constant PConst_int (8,None)
                      ]
                  <arg>
                  Nolabel
                    expression (lib/AtomicBitSet.ml[53,2034+15]..[53,2034+29])
                      Pexp_apply
                      expression (lib/AtomicBitSet.ml[53,2034+15]..[53,2034+29]) ghost
                        Pexp_ident "Array.get" (lib/AtomicBitSet.ml[53,2034+15]..[53,2034+29]) ghost
                      [
                        <arg>
                        Nolabel
                          expression (lib/AtomicBitSet.ml[53,2034+15]..[53,2034+19])
                            Pexp_ident "log2" (lib/AtomicBitSet.ml[53,2034+15]..[53,2034+19])
                        <arg>
                        Nolabel
                          expression (lib/AtomicBitSet.ml[53,2034+21]..[53,2034+28])
                            Pexp_apply
                            expression (lib/AtomicBitSet.ml[53,2034+23]..[53,2034+26])
                              Pexp_ident "lsr" (lib/AtomicBitSet.ml[53,2034+23]..[53,2034+26])
                            [
                              <arg>
                              Nolabel
                                expression (lib/AtomicBitSet.ml[53,2034+21]..[53,2034+22])
                                  Pexp_ident "x" (lib/AtomicBitSet.ml[53,2034+21]..[53,2034+22])
                              <arg>
                              Nolabel
                                expression (lib/AtomicBitSet.ml[53,2034+27]..[53,2034+28])
                                  Pexp_constant PConst_int (8,None)
                            ]
                      ]
                ]
              Some
                expression (lib/AtomicBitSet.ml[55,2071+4]..[55,2071+19])
                  Pexp_apply
                  expression (lib/AtomicBitSet.ml[55,2071+9]..[55,2071+10])
                    Pexp_ident "+" (lib/AtomicBitSet.ml[55,2071+9]..[55,2071+10])
                  [
                    <arg>
                    Nolabel
                      expression (lib/AtomicBitSet.ml[55,2071+4]..[55,2071+8])
                        Pexp_ident "accu" (lib/AtomicBitSet.ml[55,2071+4]..[55,2071+8])
                    <arg>
                    Nolabel
                      expression (lib/AtomicBitSet.ml[55,2071+11]..[55,2071+19])
                        Pexp_apply
                        expression (lib/AtomicBitSet.ml[55,2071+11]..[55,2071+19]) ghost
                          Pexp_ident "Array.get" (lib/AtomicBitSet.ml[55,2071+11]..[55,2071+19]) ghost
                        [
                          <arg>
                          Nolabel
                            expression (lib/AtomicBitSet.ml[55,2071+11]..[55,2071+15])
                              Pexp_ident "log2" (lib/AtomicBitSet.ml[55,2071+11]..[55,2071+15])
                          <arg>
                          Nolabel
                            expression (lib/AtomicBitSet.ml[55,2071+17]..[55,2071+18])
                              Pexp_ident "x" (lib/AtomicBitSet.ml[55,2071+17]..[55,2071+18])
                        ]
                  ]
    ]
  structure_item (lib/AtomicBitSet.ml[57,2092+0]..[61,2179+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[57,2092+4]..[57,2092+9])
          Ppat_var "tib32" (lib/AtomicBitSet.ml[57,2092+4]..[57,2092+9])
        expression (lib/AtomicBitSet.ml[57,2092+10]..[61,2179+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/AtomicBitSet.ml[57,2092+10]..[57,2092+14])
            Ppat_var "accu" (lib/AtomicBitSet.ml[57,2092+10]..[57,2092+14])
          expression (lib/AtomicBitSet.ml[57,2092+15]..[61,2179+16]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/AtomicBitSet.ml[57,2092+15]..[57,2092+16])
              Ppat_var "x" (lib/AtomicBitSet.ml[57,2092+15]..[57,2092+16])
            expression (lib/AtomicBitSet.ml[58,2111+2]..[61,2179+16])
              Pexp_ifthenelse
              expression (lib/AtomicBitSet.ml[58,2111+5]..[58,2111+22])
                Pexp_apply
                expression (lib/AtomicBitSet.ml[58,2111+19]..[58,2111+20])
                  Pexp_ident "=" (lib/AtomicBitSet.ml[58,2111+19]..[58,2111+20])
                [
                  <arg>
                  Nolabel
                    expression (lib/AtomicBitSet.ml[58,2111+5]..[58,2111+18])
                      Pexp_apply
                      expression (lib/AtomicBitSet.ml[58,2111+7]..[58,2111+11])
                        Pexp_ident "land" (lib/AtomicBitSet.ml[58,2111+7]..[58,2111+11])
                      [
                        <arg>
                        Nolabel
                          expression (lib/AtomicBitSet.ml[58,2111+5]..[58,2111+6])
                            Pexp_ident "x" (lib/AtomicBitSet.ml[58,2111+5]..[58,2111+6])
                        <arg>
                        Nolabel
                          expression (lib/AtomicBitSet.ml[58,2111+12]..[58,2111+18])
                            Pexp_constant PConst_int (0xFFFF,None)
                      ]
                  <arg>
                  Nolabel
                    expression (lib/AtomicBitSet.ml[58,2111+21]..[58,2111+22])
                      Pexp_constant PConst_int (0,None)
                ]
              expression (lib/AtomicBitSet.ml[59,2139+4]..[59,2139+32])
                Pexp_apply
                expression (lib/AtomicBitSet.ml[59,2139+4]..[59,2139+9])
                  Pexp_ident "tib16" (lib/AtomicBitSet.ml[59,2139+4]..[59,2139+9])
                [
                  <arg>
                  Nolabel
                    expression (lib/AtomicBitSet.ml[59,2139+10]..[59,2139+21])
                      Pexp_apply
                      expression (lib/AtomicBitSet.ml[59,2139+16]..[59,2139+17])
                        Pexp_ident "+" (lib/AtomicBitSet.ml[59,2139+16]..[59,2139+17])
                      [
                        <arg>
                        Nolabel
                          expression (lib/AtomicBitSet.ml[59,2139+11]..[59,2139+15])
                            Pexp_ident "accu" (lib/AtomicBitSet.ml[59,2139+11]..[59,2139+15])
                        <arg>
                        Nolabel
                          expression (lib/AtomicBitSet.ml[59,2139+18]..[59,2139+20])
                            Pexp_constant PConst_int (16,None)
                      ]
                  <arg>
                  Nolabel
                    expression (lib/AtomicBitSet.ml[59,2139+22]..[59,2139+32])
                      Pexp_apply
                      expression (lib/AtomicBitSet.ml[59,2139+25]..[59,2139+28])
                        Pexp_ident "lsr" (lib/AtomicBitSet.ml[59,2139+25]..[59,2139+28])
                      [
                        <arg>
                        Nolabel
                          expression (lib/AtomicBitSet.ml[59,2139+23]..[59,2139+24])
                            Pexp_ident "x" (lib/AtomicBitSet.ml[59,2139+23]..[59,2139+24])
                        <arg>
                        Nolabel
                          expression (lib/AtomicBitSet.ml[59,2139+29]..[59,2139+31])
                            Pexp_constant PConst_int (16,None)
                      ]
                ]
              Some
                expression (lib/AtomicBitSet.ml[61,2179+4]..[61,2179+16])
                  Pexp_apply
                  expression (lib/AtomicBitSet.ml[61,2179+4]..[61,2179+9])
                    Pexp_ident "tib16" (lib/AtomicBitSet.ml[61,2179+4]..[61,2179+9])
                  [
                    <arg>
                    Nolabel
                      expression (lib/AtomicBitSet.ml[61,2179+10]..[61,2179+14])
                        Pexp_ident "accu" (lib/AtomicBitSet.ml[61,2179+10]..[61,2179+14])
                    <arg>
                    Nolabel
                      expression (lib/AtomicBitSet.ml[61,2179+15]..[61,2179+16])
                        Pexp_ident "x" (lib/AtomicBitSet.ml[61,2179+15]..[61,2179+16])
                  ]
    ]
  structure_item (lib/AtomicBitSet.ml[63,2197+0]..[64,2212+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[63,2197+4]..[63,2197+12])
          Ppat_var "ffffffff" (lib/AtomicBitSet.ml[63,2197+4]..[63,2197+12])
        expression (lib/AtomicBitSet.ml[64,2212+2]..[64,2212+28])
          Pexp_apply
          expression (lib/AtomicBitSet.ml[64,2212+18]..[64,2212+21])
            Pexp_ident "lor" (lib/AtomicBitSet.ml[64,2212+18]..[64,2212+21])
          [
            <arg>
            Nolabel
              expression (lib/AtomicBitSet.ml[64,2212+2]..[64,2212+17])
                Pexp_apply
                expression (lib/AtomicBitSet.ml[64,2212+10]..[64,2212+13])
                  Pexp_ident "lsl" (lib/AtomicBitSet.ml[64,2212+10]..[64,2212+13])
                [
                  <arg>
                  Nolabel
                    expression (lib/AtomicBitSet.ml[64,2212+3]..[64,2212+9])
                      Pexp_constant PConst_int (0xffff,None)
                  <arg>
                  Nolabel
                    expression (lib/AtomicBitSet.ml[64,2212+14]..[64,2212+16])
                      Pexp_constant PConst_int (16,None)
                ]
            <arg>
            Nolabel
              expression (lib/AtomicBitSet.ml[64,2212+22]..[64,2212+28])
                Pexp_constant PConst_int (0xffff,None)
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[68,2371+0]..[72,2446+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[68,2371+4]..[68,2371+9])
          Ppat_var "tib64" (lib/AtomicBitSet.ml[68,2371+4]..[68,2371+9])
        expression (lib/AtomicBitSet.ml[68,2371+10]..[72,2446+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/AtomicBitSet.ml[68,2371+10]..[68,2371+11])
            Ppat_var "x" (lib/AtomicBitSet.ml[68,2371+10]..[68,2371+11])
          expression (lib/AtomicBitSet.ml[69,2385+2]..[72,2446+13])
            Pexp_ifthenelse
            expression (lib/AtomicBitSet.ml[69,2385+5]..[69,2385+24])
              Pexp_apply
              expression (lib/AtomicBitSet.ml[69,2385+21]..[69,2385+22])
                Pexp_ident "=" (lib/AtomicBitSet.ml[69,2385+21]..[69,2385+22])
              [
                <arg>
                Nolabel
                  expression (lib/AtomicBitSet.ml[69,2385+5]..[69,2385+20])
                    Pexp_apply
                    expression (lib/AtomicBitSet.ml[69,2385+7]..[69,2385+11])
                      Pexp_ident "land" (lib/AtomicBitSet.ml[69,2385+7]..[69,2385+11])
                    [
                      <arg>
                      Nolabel
                        expression (lib/AtomicBitSet.ml[69,2385+5]..[69,2385+6])
                          Pexp_ident "x" (lib/AtomicBitSet.ml[69,2385+5]..[69,2385+6])
                      <arg>
                      Nolabel
                        expression (lib/AtomicBitSet.ml[69,2385+12]..[69,2385+20])
                          Pexp_ident "ffffffff" (lib/AtomicBitSet.ml[69,2385+12]..[69,2385+20])
                    ]
                <arg>
                Nolabel
                  expression (lib/AtomicBitSet.ml[69,2385+23]..[69,2385+24])
                    Pexp_constant PConst_int (0,None)
              ]
            expression (lib/AtomicBitSet.ml[70,2415+4]..[70,2415+23])
              Pexp_apply
              expression (lib/AtomicBitSet.ml[70,2415+4]..[70,2415+9])
                Pexp_ident "tib32" (lib/AtomicBitSet.ml[70,2415+4]..[70,2415+9])
              [
                <arg>
                Nolabel
                  expression (lib/AtomicBitSet.ml[70,2415+10]..[70,2415+12])
                    Pexp_constant PConst_int (32,None)
                <arg>
                Nolabel
                  expression (lib/AtomicBitSet.ml[70,2415+13]..[70,2415+23])
                    Pexp_apply
                    expression (lib/AtomicBitSet.ml[70,2415+16]..[70,2415+19])
                      Pexp_ident "lsr" (lib/AtomicBitSet.ml[70,2415+16]..[70,2415+19])
                    [
                      <arg>
                      Nolabel
                        expression (lib/AtomicBitSet.ml[70,2415+14]..[70,2415+15])
                          Pexp_ident "x" (lib/AtomicBitSet.ml[70,2415+14]..[70,2415+15])
                      <arg>
                      Nolabel
                        expression (lib/AtomicBitSet.ml[70,2415+20]..[70,2415+22])
                          Pexp_constant PConst_int (32,None)
                    ]
              ]
            Some
              expression (lib/AtomicBitSet.ml[72,2446+4]..[72,2446+13])
                Pexp_apply
                expression (lib/AtomicBitSet.ml[72,2446+4]..[72,2446+9])
                  Pexp_ident "tib32" (lib/AtomicBitSet.ml[72,2446+4]..[72,2446+9])
                [
                  <arg>
                  Nolabel
                    expression (lib/AtomicBitSet.ml[72,2446+10]..[72,2446+11])
                      Pexp_constant PConst_int (0,None)
                  <arg>
                  Nolabel
                    expression (lib/AtomicBitSet.ml[72,2446+12]..[72,2446+13])
                      Pexp_ident "x" (lib/AtomicBitSet.ml[72,2446+12]..[72,2446+13])
                ]
    ]
  structure_item (lib/AtomicBitSet.ml[74,2461+0]..[78,2538+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[74,2461+4]..[74,2461+7])
          Ppat_var "tib" (lib/AtomicBitSet.ml[74,2461+4]..[74,2461+7])
        expression (lib/AtomicBitSet.ml[74,2461+8]..[78,2538+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/AtomicBitSet.ml[74,2461+8]..[74,2461+9])
            Ppat_var "x" (lib/AtomicBitSet.ml[74,2461+8]..[74,2461+9])
          expression (lib/AtomicBitSet.ml[75,2473+2]..[78,2538+21])
            Pexp_match
            expression (lib/AtomicBitSet.ml[75,2473+8]..[75,2473+21])
              Pexp_ident "Sys.word_size" (lib/AtomicBitSet.ml[75,2473+8]..[75,2473+21])
            [
              <case>
                pattern (lib/AtomicBitSet.ml[76,2500+4]..[76,2500+6])
                  Ppat_constant PConst_int (32,None)
                expression (lib/AtomicBitSet.ml[76,2500+10]..[76,2500+19])
                  Pexp_apply
                  expression (lib/AtomicBitSet.ml[76,2500+10]..[76,2500+15])
                    Pexp_ident "tib32" (lib/AtomicBitSet.ml[76,2500+10]..[76,2500+15])
                  [
                    <arg>
                    Nolabel
                      expression (lib/AtomicBitSet.ml[76,2500+16]..[76,2500+17])
                        Pexp_constant PConst_int (0,None)
                    <arg>
                    Nolabel
                      expression (lib/AtomicBitSet.ml[76,2500+18]..[76,2500+19])
                        Pexp_ident "x" (lib/AtomicBitSet.ml[76,2500+18]..[76,2500+19])
                  ]
              <case>
                pattern (lib/AtomicBitSet.ml[77,2520+4]..[77,2520+6])
                  Ppat_constant PConst_int (64,None)
                expression (lib/AtomicBitSet.ml[77,2520+10]..[77,2520+17])
                  Pexp_apply
                  expression (lib/AtomicBitSet.ml[77,2520+10]..[77,2520+15])
                    Pexp_ident "tib64" (lib/AtomicBitSet.ml[77,2520+10]..[77,2520+15])
                  [
                    <arg>
                    Nolabel
                      expression (lib/AtomicBitSet.ml[77,2520+16]..[77,2520+17])
                        Pexp_ident "x" (lib/AtomicBitSet.ml[77,2520+16]..[77,2520+17])
                  ]
              <case>
                pattern (lib/AtomicBitSet.ml[78,2538+4]..[78,2538+5])
                  Ppat_any
                expression (lib/AtomicBitSet.ml[78,2538+9]..[78,2538+21])
                  Pexp_assert
                  expression (lib/AtomicBitSet.ml[78,2538+16]..[78,2538+21])
                    Pexp_construct "false" (lib/AtomicBitSet.ml[78,2538+16]..[78,2538+21])
                    None
            ]
    ]
  structure_item (lib/AtomicBitSet.ml[80,2561+0]..[82,2625+57])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[80,2561+4]..[80,2561+6])
          Ppat_construct "()" (lib/AtomicBitSet.ml[80,2561+4]..[80,2561+6])
          None
        expression (lib/AtomicBitSet.ml[82,2625+2]..[82,2625+57])
          Pexp_for Up
          pattern (lib/AtomicBitSet.ml[82,2625+6]..[82,2625+7])
            Ppat_var "i" (lib/AtomicBitSet.ml[82,2625+6]..[82,2625+7])
          expression (lib/AtomicBitSet.ml[82,2625+10]..[82,2625+11])
            Pexp_constant PConst_int (0,None)
          expression (lib/AtomicBitSet.ml[82,2625+15]..[82,2625+24])
            Pexp_apply
            expression (lib/AtomicBitSet.ml[82,2625+21]..[82,2625+22])
              Pexp_ident "-" (lib/AtomicBitSet.ml[82,2625+21]..[82,2625+22])
            [
              <arg>
              Nolabel
                expression (lib/AtomicBitSet.ml[82,2625+15]..[82,2625+20])
                  Pexp_ident "bound" (lib/AtomicBitSet.ml[82,2625+15]..[82,2625+20])
              <arg>
              Nolabel
                expression (lib/AtomicBitSet.ml[82,2625+23]..[82,2625+24])
                  Pexp_constant PConst_int (1,None)
            ]
          expression (lib/AtomicBitSet.ml[82,2625+28]..[82,2625+52])
            Pexp_assert
            expression (lib/AtomicBitSet.ml[82,2625+35]..[82,2625+52])
              Pexp_apply
              expression (lib/AtomicBitSet.ml[82,2625+48]..[82,2625+49])
                Pexp_ident "=" (lib/AtomicBitSet.ml[82,2625+48]..[82,2625+49])
              [
                <arg>
                Nolabel
                  expression (lib/AtomicBitSet.ml[82,2625+36]..[82,2625+47])
                    Pexp_apply
                    expression (lib/AtomicBitSet.ml[82,2625+36]..[82,2625+39])
                      Pexp_ident "tib" (lib/AtomicBitSet.ml[82,2625+36]..[82,2625+39])
                    [
                      <arg>
                      Nolabel
                        expression (lib/AtomicBitSet.ml[82,2625+40]..[82,2625+47])
                          Pexp_apply
                          expression (lib/AtomicBitSet.ml[82,2625+41]..[82,2625+44])
                            Pexp_ident "bit" (lib/AtomicBitSet.ml[82,2625+41]..[82,2625+44])
                          [
                            <arg>
                            Nolabel
                              expression (lib/AtomicBitSet.ml[82,2625+45]..[82,2625+46])
                                Pexp_ident "i" (lib/AtomicBitSet.ml[82,2625+45]..[82,2625+46])
                          ]
                    ]
                <arg>
                Nolabel
                  expression (lib/AtomicBitSet.ml[82,2625+50]..[82,2625+51])
                    Pexp_ident "i" (lib/AtomicBitSet.ml[82,2625+50]..[82,2625+51])
              ]
    ]
  structure_item (lib/AtomicBitSet.ml[91,2931+0]..[91,2931+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[91,2931+4]..[91,2931+6])
          Ppat_var "b0" (lib/AtomicBitSet.ml[91,2931+4]..[91,2931+6])
        expression (lib/AtomicBitSet.ml[91,2931+9]..[91,2931+19])
          Pexp_constant PConst_int (0x55555555,None)
    ]
  structure_item (lib/AtomicBitSet.ml[92,2951+0]..[92,2951+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[92,2951+4]..[92,2951+6])
          Ppat_var "b1" (lib/AtomicBitSet.ml[92,2951+4]..[92,2951+6])
        expression (lib/AtomicBitSet.ml[92,2951+9]..[92,2951+19])
          Pexp_constant PConst_int (0x33333333,None)
    ]
  structure_item (lib/AtomicBitSet.ml[93,2971+0]..[93,2971+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[93,2971+4]..[93,2971+6])
          Ppat_var "b2" (lib/AtomicBitSet.ml[93,2971+4]..[93,2971+6])
        expression (lib/AtomicBitSet.ml[93,2971+9]..[93,2971+18])
          Pexp_constant PConst_int (0xf0f0f0f,None)
    ]
  structure_item (lib/AtomicBitSet.ml[95,2991+0]..[105,3463+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[95,2991+4]..[95,2991+9])
          Ppat_var "pop32" (lib/AtomicBitSet.ml[95,2991+4]..[95,2991+9])
        expression (lib/AtomicBitSet.ml[95,2991+10]..[105,3463+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/AtomicBitSet.ml[95,2991+10]..[95,2991+11])
            Ppat_var "x" (lib/AtomicBitSet.ml[95,2991+10]..[95,2991+11])
          expression (lib/AtomicBitSet.ml[98,3141+2]..[105,3463+13])
            Pexp_let Nonrec
            [
              <def>
                pattern (lib/AtomicBitSet.ml[98,3141+6]..[98,3141+7])
                  Ppat_var "x" (lib/AtomicBitSet.ml[98,3141+6]..[98,3141+7])
                expression (lib/AtomicBitSet.ml[98,3141+10]..[98,3141+39])
                  Pexp_apply
                  expression (lib/AtomicBitSet.ml[98,3141+20]..[98,3141+21])
                    Pexp_ident "-" (lib/AtomicBitSet.ml[98,3141+20]..[98,3141+21])
                  [
                    <arg>
                    Nolabel
                      expression (lib/AtomicBitSet.ml[98,3141+10]..[98,3141+11])
                        Pexp_ident "x" (lib/AtomicBitSet.ml[98,3141+10]..[98,3141+11])
                    <arg>
                    Nolabel
                      expression (lib/AtomicBitSet.ml[98,3141+22]..[98,3141+39])
                        Pexp_apply
                        expression (lib/AtomicBitSet.ml[98,3141+32]..[98,3141+36])
                          Pexp_ident "land" (lib/AtomicBitSet.ml[98,3141+32]..[98,3141+36])
                        [
                          <arg>
                          Nolabel
                            expression (lib/AtomicBitSet.ml[98,3141+22]..[98,3141+31])
                              Pexp_apply
                              expression (lib/AtomicBitSet.ml[98,3141+25]..[98,3141+28])
                                Pexp_ident "lsr" (lib/AtomicBitSet.ml[98,3141+25]..[98,3141+28])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/AtomicBitSet.ml[98,3141+23]..[98,3141+24])
                                    Pexp_ident "x" (lib/AtomicBitSet.ml[98,3141+23]..[98,3141+24])
                                <arg>
                                Nolabel
                                  expression (lib/AtomicBitSet.ml[98,3141+29]..[98,3141+30])
                                    Pexp_constant PConst_int (1,None)
                              ]
                          <arg>
                          Nolabel
                            expression (lib/AtomicBitSet.ml[98,3141+37]..[98,3141+39])
                              Pexp_ident "b0" (lib/AtomicBitSet.ml[98,3141+37]..[98,3141+39])
                        ]
                  ]
            ]
            expression (lib/AtomicBitSet.ml[99,3184+2]..[105,3463+13])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/AtomicBitSet.ml[99,3184+6]..[99,3184+7])
                    Ppat_var "x" (lib/AtomicBitSet.ml[99,3184+6]..[99,3184+7])
                  expression (lib/AtomicBitSet.ml[99,3184+10]..[99,3184+39])
                    Pexp_apply
                    expression (lib/AtomicBitSet.ml[99,3184+20]..[99,3184+21])
                      Pexp_ident "+" (lib/AtomicBitSet.ml[99,3184+20]..[99,3184+21])
                    [
                      <arg>
                      Nolabel
                        expression (lib/AtomicBitSet.ml[99,3184+10]..[99,3184+19])
                          Pexp_apply
                          expression (lib/AtomicBitSet.ml[99,3184+12]..[99,3184+16])
                            Pexp_ident "land" (lib/AtomicBitSet.ml[99,3184+12]..[99,3184+16])
                          [
                            <arg>
                            Nolabel
                              expression (lib/AtomicBitSet.ml[99,3184+10]..[99,3184+11])
                                Pexp_ident "x" (lib/AtomicBitSet.ml[99,3184+10]..[99,3184+11])
                            <arg>
                            Nolabel
                              expression (lib/AtomicBitSet.ml[99,3184+17]..[99,3184+19])
                                Pexp_ident "b1" (lib/AtomicBitSet.ml[99,3184+17]..[99,3184+19])
                          ]
                      <arg>
                      Nolabel
                        expression (lib/AtomicBitSet.ml[99,3184+22]..[99,3184+39])
                          Pexp_apply
                          expression (lib/AtomicBitSet.ml[99,3184+32]..[99,3184+36])
                            Pexp_ident "land" (lib/AtomicBitSet.ml[99,3184+32]..[99,3184+36])
                          [
                            <arg>
                            Nolabel
                              expression (lib/AtomicBitSet.ml[99,3184+22]..[99,3184+31])
                                Pexp_apply
                                expression (lib/AtomicBitSet.ml[99,3184+25]..[99,3184+28])
                                  Pexp_ident "lsr" (lib/AtomicBitSet.ml[99,3184+25]..[99,3184+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/AtomicBitSet.ml[99,3184+23]..[99,3184+24])
                                      Pexp_ident "x" (lib/AtomicBitSet.ml[99,3184+23]..[99,3184+24])
                                  <arg>
                                  Nolabel
                                    expression (lib/AtomicBitSet.ml[99,3184+29]..[99,3184+30])
                                      Pexp_constant PConst_int (2,None)
                                ]
                            <arg>
                            Nolabel
                              expression (lib/AtomicBitSet.ml[99,3184+37]..[99,3184+39])
                                Pexp_ident "b1" (lib/AtomicBitSet.ml[99,3184+37]..[99,3184+39])
                          ]
                    ]
              ]
              expression (lib/AtomicBitSet.ml[100,3227+2]..[105,3463+13])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lib/AtomicBitSet.ml[100,3227+6]..[100,3227+7])
                      Ppat_var "x" (lib/AtomicBitSet.ml[100,3227+6]..[100,3227+7])
                    expression (lib/AtomicBitSet.ml[100,3227+10]..[100,3227+39])
                      Pexp_apply
                      expression (lib/AtomicBitSet.ml[100,3227+20]..[100,3227+21])
                        Pexp_ident "+" (lib/AtomicBitSet.ml[100,3227+20]..[100,3227+21])
                      [
                        <arg>
                        Nolabel
                          expression (lib/AtomicBitSet.ml[100,3227+10]..[100,3227+19])
                            Pexp_apply
                            expression (lib/AtomicBitSet.ml[100,3227+12]..[100,3227+16])
                              Pexp_ident "land" (lib/AtomicBitSet.ml[100,3227+12]..[100,3227+16])
                            [
                              <arg>
                              Nolabel
                                expression (lib/AtomicBitSet.ml[100,3227+10]..[100,3227+11])
                                  Pexp_ident "x" (lib/AtomicBitSet.ml[100,3227+10]..[100,3227+11])
                              <arg>
                              Nolabel
                                expression (lib/AtomicBitSet.ml[100,3227+17]..[100,3227+19])
                                  Pexp_ident "b2" (lib/AtomicBitSet.ml[100,3227+17]..[100,3227+19])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/AtomicBitSet.ml[100,3227+22]..[100,3227+39])
                            Pexp_apply
                            expression (lib/AtomicBitSet.ml[100,3227+32]..[100,3227+36])
                              Pexp_ident "land" (lib/AtomicBitSet.ml[100,3227+32]..[100,3227+36])
                            [
                              <arg>
                              Nolabel
                                expression (lib/AtomicBitSet.ml[100,3227+22]..[100,3227+31])
                                  Pexp_apply
                                  expression (lib/AtomicBitSet.ml[100,3227+25]..[100,3227+28])
                                    Pexp_ident "lsr" (lib/AtomicBitSet.ml[100,3227+25]..[100,3227+28])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/AtomicBitSet.ml[100,3227+23]..[100,3227+24])
                                        Pexp_ident "x" (lib/AtomicBitSet.ml[100,3227+23]..[100,3227+24])
                                    <arg>
                                    Nolabel
                                      expression (lib/AtomicBitSet.ml[100,3227+29]..[100,3227+30])
                                        Pexp_constant PConst_int (4,None)
                                  ]
                              <arg>
                              Nolabel
                                expression (lib/AtomicBitSet.ml[100,3227+37]..[100,3227+39])
                                  Pexp_ident "b2" (lib/AtomicBitSet.ml[100,3227+37]..[100,3227+39])
                            ]
                      ]
                ]
                expression (lib/AtomicBitSet.ml[103,3412+2]..[105,3463+13])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/AtomicBitSet.ml[103,3412+6]..[103,3412+7])
                        Ppat_var "x" (lib/AtomicBitSet.ml[103,3412+6]..[103,3412+7])
                      expression (lib/AtomicBitSet.ml[103,3412+10]..[103,3412+21])
                        Pexp_apply
                        expression (lib/AtomicBitSet.ml[103,3412+12]..[103,3412+13])
                          Pexp_ident "+" (lib/AtomicBitSet.ml[103,3412+12]..[103,3412+13])
                        [
                          <arg>
                          Nolabel
                            expression (lib/AtomicBitSet.ml[103,3412+10]..[103,3412+11])
                              Pexp_ident "x" (lib/AtomicBitSet.ml[103,3412+10]..[103,3412+11])
                          <arg>
                          Nolabel
                            expression (lib/AtomicBitSet.ml[103,3412+14]..[103,3412+21])
                              Pexp_apply
                              expression (lib/AtomicBitSet.ml[103,3412+16]..[103,3412+19])
                                Pexp_ident "lsr" (lib/AtomicBitSet.ml[103,3412+16]..[103,3412+19])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/AtomicBitSet.ml[103,3412+14]..[103,3412+15])
                                    Pexp_ident "x" (lib/AtomicBitSet.ml[103,3412+14]..[103,3412+15])
                                <arg>
                                Nolabel
                                  expression (lib/AtomicBitSet.ml[103,3412+20]..[103,3412+21])
                                    Pexp_constant PConst_int (8,None)
                              ]
                        ]
                  ]
                  expression (lib/AtomicBitSet.ml[104,3437+2]..[105,3463+13])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/AtomicBitSet.ml[104,3437+6]..[104,3437+7])
                          Ppat_var "x" (lib/AtomicBitSet.ml[104,3437+6]..[104,3437+7])
                        expression (lib/AtomicBitSet.ml[104,3437+10]..[104,3437+22])
                          Pexp_apply
                          expression (lib/AtomicBitSet.ml[104,3437+12]..[104,3437+13])
                            Pexp_ident "+" (lib/AtomicBitSet.ml[104,3437+12]..[104,3437+13])
                          [
                            <arg>
                            Nolabel
                              expression (lib/AtomicBitSet.ml[104,3437+10]..[104,3437+11])
                                Pexp_ident "x" (lib/AtomicBitSet.ml[104,3437+10]..[104,3437+11])
                            <arg>
                            Nolabel
                              expression (lib/AtomicBitSet.ml[104,3437+14]..[104,3437+22])
                                Pexp_apply
                                expression (lib/AtomicBitSet.ml[104,3437+16]..[104,3437+19])
                                  Pexp_ident "lsr" (lib/AtomicBitSet.ml[104,3437+16]..[104,3437+19])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/AtomicBitSet.ml[104,3437+14]..[104,3437+15])
                                      Pexp_ident "x" (lib/AtomicBitSet.ml[104,3437+14]..[104,3437+15])
                                  <arg>
                                  Nolabel
                                    expression (lib/AtomicBitSet.ml[104,3437+20]..[104,3437+22])
                                      Pexp_constant PConst_int (16,None)
                                ]
                          ]
                    ]
                    expression (lib/AtomicBitSet.ml[105,3463+2]..[105,3463+13])
                      Pexp_apply
                      expression (lib/AtomicBitSet.ml[105,3463+4]..[105,3463+8])
                        Pexp_ident "land" (lib/AtomicBitSet.ml[105,3463+4]..[105,3463+8])
                      [
                        <arg>
                        Nolabel
                          expression (lib/AtomicBitSet.ml[105,3463+2]..[105,3463+3])
                            Pexp_ident "x" (lib/AtomicBitSet.ml[105,3463+2]..[105,3463+3])
                        <arg>
                        Nolabel
                          expression (lib/AtomicBitSet.ml[105,3463+9]..[105,3463+13])
                            Pexp_constant PConst_int (0xff,None)
                      ]
    ]
  structure_item (lib/AtomicBitSet.ml[107,3478+0]..[108,3492+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[107,3478+4]..[107,3478+9])
          Ppat_var "pop64" (lib/AtomicBitSet.ml[107,3478+4]..[107,3478+9])
        expression (lib/AtomicBitSet.ml[107,3478+10]..[108,3492+28]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/AtomicBitSet.ml[107,3478+10]..[107,3478+11])
            Ppat_var "x" (lib/AtomicBitSet.ml[107,3478+10]..[107,3478+11])
          expression (lib/AtomicBitSet.ml[108,3492+2]..[108,3492+28])
            Pexp_apply
            expression (lib/AtomicBitSet.ml[108,3492+10]..[108,3492+11])
              Pexp_ident "+" (lib/AtomicBitSet.ml[108,3492+10]..[108,3492+11])
            [
              <arg>
              Nolabel
                expression (lib/AtomicBitSet.ml[108,3492+2]..[108,3492+9])
                  Pexp_apply
                  expression (lib/AtomicBitSet.ml[108,3492+2]..[108,3492+7])
                    Pexp_ident "pop32" (lib/AtomicBitSet.ml[108,3492+2]..[108,3492+7])
                  [
                    <arg>
                    Nolabel
                      expression (lib/AtomicBitSet.ml[108,3492+8]..[108,3492+9])
                        Pexp_ident "x" (lib/AtomicBitSet.ml[108,3492+8]..[108,3492+9])
                  ]
              <arg>
              Nolabel
                expression (lib/AtomicBitSet.ml[108,3492+12]..[108,3492+28])
                  Pexp_apply
                  expression (lib/AtomicBitSet.ml[108,3492+12]..[108,3492+17])
                    Pexp_ident "pop32" (lib/AtomicBitSet.ml[108,3492+12]..[108,3492+17])
                  [
                    <arg>
                    Nolabel
                      expression (lib/AtomicBitSet.ml[108,3492+18]..[108,3492+28])
                        Pexp_apply
                        expression (lib/AtomicBitSet.ml[108,3492+21]..[108,3492+24])
                          Pexp_ident "lsr" (lib/AtomicBitSet.ml[108,3492+21]..[108,3492+24])
                        [
                          <arg>
                          Nolabel
                            expression (lib/AtomicBitSet.ml[108,3492+19]..[108,3492+20])
                              Pexp_ident "x" (lib/AtomicBitSet.ml[108,3492+19]..[108,3492+20])
                          <arg>
                          Nolabel
                            expression (lib/AtomicBitSet.ml[108,3492+25]..[108,3492+27])
                              Pexp_constant PConst_int (32,None)
                        ]
                  ]
            ]
    ]
  structure_item (lib/AtomicBitSet.ml[112,3658+0]..[116,3733+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[112,3658+4]..[112,3658+7])
          Ppat_var "pop" (lib/AtomicBitSet.ml[112,3658+4]..[112,3658+7])
        expression (lib/AtomicBitSet.ml[112,3658+8]..[116,3733+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/AtomicBitSet.ml[112,3658+8]..[112,3658+9])
            Ppat_var "x" (lib/AtomicBitSet.ml[112,3658+8]..[112,3658+9])
          expression (lib/AtomicBitSet.ml[113,3670+2]..[116,3733+21])
            Pexp_match
            expression (lib/AtomicBitSet.ml[113,3670+8]..[113,3670+21])
              Pexp_ident "Sys.word_size" (lib/AtomicBitSet.ml[113,3670+8]..[113,3670+21])
            [
              <case>
                pattern (lib/AtomicBitSet.ml[114,3697+4]..[114,3697+6])
                  Ppat_constant PConst_int (32,None)
                expression (lib/AtomicBitSet.ml[114,3697+10]..[114,3697+17])
                  Pexp_apply
                  expression (lib/AtomicBitSet.ml[114,3697+10]..[114,3697+15])
                    Pexp_ident "pop32" (lib/AtomicBitSet.ml[114,3697+10]..[114,3697+15])
                  [
                    <arg>
                    Nolabel
                      expression (lib/AtomicBitSet.ml[114,3697+16]..[114,3697+17])
                        Pexp_ident "x" (lib/AtomicBitSet.ml[114,3697+16]..[114,3697+17])
                  ]
              <case>
                pattern (lib/AtomicBitSet.ml[115,3715+4]..[115,3715+6])
                  Ppat_constant PConst_int (64,None)
                expression (lib/AtomicBitSet.ml[115,3715+10]..[115,3715+17])
                  Pexp_apply
                  expression (lib/AtomicBitSet.ml[115,3715+10]..[115,3715+15])
                    Pexp_ident "pop64" (lib/AtomicBitSet.ml[115,3715+10]..[115,3715+15])
                  [
                    <arg>
                    Nolabel
                      expression (lib/AtomicBitSet.ml[115,3715+16]..[115,3715+17])
                        Pexp_ident "x" (lib/AtomicBitSet.ml[115,3715+16]..[115,3715+17])
                  ]
              <case>
                pattern (lib/AtomicBitSet.ml[116,3733+4]..[116,3733+5])
                  Ppat_any
                expression (lib/AtomicBitSet.ml[116,3733+9]..[116,3733+21])
                  Pexp_assert
                  expression (lib/AtomicBitSet.ml[116,3733+16]..[116,3733+21])
                    Pexp_construct "false" (lib/AtomicBitSet.ml[116,3733+16]..[116,3733+21])
                    None
            ]
    ]
  structure_item (lib/AtomicBitSet.ml[122,3857+0]..[123,3869+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[122,3857+4]..[122,3857+9])
          Ppat_var "empty" (lib/AtomicBitSet.ml[122,3857+4]..[122,3857+9])
        expression (lib/AtomicBitSet.ml[123,3869+2]..[123,3869+3])
          Pexp_constant PConst_int (0,None)
    ]
  structure_item (lib/AtomicBitSet.ml[125,3874+0]..[126,3891+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[125,3874+4]..[125,3874+12])
          Ppat_var "is_empty" (lib/AtomicBitSet.ml[125,3874+4]..[125,3874+12])
        expression (lib/AtomicBitSet.ml[125,3874+13]..[126,3891+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/AtomicBitSet.ml[125,3874+13]..[125,3874+14])
            Ppat_var "s" (lib/AtomicBitSet.ml[125,3874+13]..[125,3874+14])
          expression (lib/AtomicBitSet.ml[126,3891+2]..[126,3891+7])
            Pexp_apply
            expression (lib/AtomicBitSet.ml[126,3891+4]..[126,3891+5])
              Pexp_ident "=" (lib/AtomicBitSet.ml[126,3891+4]..[126,3891+5])
            [
              <arg>
              Nolabel
                expression (lib/AtomicBitSet.ml[126,3891+2]..[126,3891+3])
                  Pexp_ident "s" (lib/AtomicBitSet.ml[126,3891+2]..[126,3891+3])
              <arg>
              Nolabel
                expression (lib/AtomicBitSet.ml[126,3891+6]..[126,3891+7])
                  Pexp_constant PConst_int (0,None)
            ]
    ]
  structure_item (lib/AtomicBitSet.ml[128,3900+0]..[129,3916+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[128,3900+4]..[128,3900+13])
          Ppat_var "singleton" (lib/AtomicBitSet.ml[128,3900+4]..[128,3900+13])
        expression (lib/AtomicBitSet.ml[129,3916+2]..[129,3916+5])
          Pexp_ident "bit" (lib/AtomicBitSet.ml[129,3916+2]..[129,3916+5])
    ]
  structure_item (lib/AtomicBitSet.ml[131,3923+0]..[132,3937+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[131,3923+4]..[131,3923+7])
          Ppat_var "add" (lib/AtomicBitSet.ml[131,3923+4]..[131,3923+7])
        expression (lib/AtomicBitSet.ml[131,3923+8]..[132,3937+15]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/AtomicBitSet.ml[131,3923+8]..[131,3923+9])
            Ppat_var "i" (lib/AtomicBitSet.ml[131,3923+8]..[131,3923+9])
          expression (lib/AtomicBitSet.ml[131,3923+10]..[132,3937+15]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/AtomicBitSet.ml[131,3923+10]..[131,3923+11])
              Ppat_var "s" (lib/AtomicBitSet.ml[131,3923+10]..[131,3923+11])
            expression (lib/AtomicBitSet.ml[132,3937+2]..[132,3937+15])
              Pexp_apply
              expression (lib/AtomicBitSet.ml[132,3937+10]..[132,3937+13])
                Pexp_ident "lor" (lib/AtomicBitSet.ml[132,3937+10]..[132,3937+13])
              [
                <arg>
                Nolabel
                  expression (lib/AtomicBitSet.ml[132,3937+2]..[132,3937+9])
                    Pexp_apply
                    expression (lib/AtomicBitSet.ml[132,3937+3]..[132,3937+6])
                      Pexp_ident "bit" (lib/AtomicBitSet.ml[132,3937+3]..[132,3937+6])
                    [
                      <arg>
                      Nolabel
                        expression (lib/AtomicBitSet.ml[132,3937+7]..[132,3937+8])
                          Pexp_ident "i" (lib/AtomicBitSet.ml[132,3937+7]..[132,3937+8])
                    ]
                <arg>
                Nolabel
                  expression (lib/AtomicBitSet.ml[132,3937+14]..[132,3937+15])
                    Pexp_ident "s" (lib/AtomicBitSet.ml[132,3937+14]..[132,3937+15])
              ]
    ]
  structure_item (lib/AtomicBitSet.ml[134,3954+0]..[135,3971+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[134,3954+4]..[134,3954+10])
          Ppat_var "remove" (lib/AtomicBitSet.ml[134,3954+4]..[134,3954+10])
        expression (lib/AtomicBitSet.ml[134,3954+11]..[135,3971+23]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/AtomicBitSet.ml[134,3954+11]..[134,3954+12])
            Ppat_var "i" (lib/AtomicBitSet.ml[134,3954+11]..[134,3954+12])
          expression (lib/AtomicBitSet.ml[134,3954+13]..[135,3971+23]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/AtomicBitSet.ml[134,3954+13]..[134,3954+14])
              Ppat_var "s" (lib/AtomicBitSet.ml[134,3954+13]..[134,3954+14])
            expression (lib/AtomicBitSet.ml[135,3971+2]..[135,3971+23])
              Pexp_apply
              expression (lib/AtomicBitSet.ml[135,3971+17]..[135,3971+21])
                Pexp_ident "land" (lib/AtomicBitSet.ml[135,3971+17]..[135,3971+21])
              [
                <arg>
                Nolabel
                  expression (lib/AtomicBitSet.ml[135,3971+2]..[135,3971+16])
                    Pexp_apply
                    expression (lib/AtomicBitSet.ml[135,3971+3]..[135,3971+7])
                      Pexp_ident "lnot" (lib/AtomicBitSet.ml[135,3971+3]..[135,3971+7])
                    [
                      <arg>
                      Nolabel
                        expression (lib/AtomicBitSet.ml[135,3971+8]..[135,3971+15])
                          Pexp_apply
                          expression (lib/AtomicBitSet.ml[135,3971+9]..[135,3971+12])
                            Pexp_ident "bit" (lib/AtomicBitSet.ml[135,3971+9]..[135,3971+12])
                          [
                            <arg>
                            Nolabel
                              expression (lib/AtomicBitSet.ml[135,3971+13]..[135,3971+14])
                                Pexp_ident "i" (lib/AtomicBitSet.ml[135,3971+13]..[135,3971+14])
                          ]
                    ]
                <arg>
                Nolabel
                  expression (lib/AtomicBitSet.ml[135,3971+22]..[135,3971+23])
                    Pexp_ident "s" (lib/AtomicBitSet.ml[135,3971+22]..[135,3971+23])
              ]
    ]
  structure_item (lib/AtomicBitSet.ml[137,3996+0]..[144,4172+29])
    Pstr_value Rec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[137,3996+8]..[137,3996+18])
          Ppat_var "fold_delta" (lib/AtomicBitSet.ml[137,3996+8]..[137,3996+18])
        expression (lib/AtomicBitSet.ml[137,3996+19]..[144,4172+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/AtomicBitSet.ml[137,3996+19]..[137,3996+24])
            Ppat_var "delta" (lib/AtomicBitSet.ml[137,3996+19]..[137,3996+24])
          expression (lib/AtomicBitSet.ml[137,3996+25]..[144,4172+29]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/AtomicBitSet.ml[137,3996+25]..[137,3996+26])
              Ppat_var "f" (lib/AtomicBitSet.ml[137,3996+25]..[137,3996+26])
            expression (lib/AtomicBitSet.ml[137,3996+27]..[144,4172+29]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/AtomicBitSet.ml[137,3996+27]..[137,3996+28])
                Ppat_var "s" (lib/AtomicBitSet.ml[137,3996+27]..[137,3996+28])
              expression (lib/AtomicBitSet.ml[137,3996+29]..[144,4172+29]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lib/AtomicBitSet.ml[137,3996+29]..[137,3996+33])
                  Ppat_var "accu" (lib/AtomicBitSet.ml[137,3996+29]..[137,3996+33])
                expression (lib/AtomicBitSet.ml[138,4032+2]..[144,4172+29])
                  Pexp_ifthenelse
                  expression (lib/AtomicBitSet.ml[138,4032+5]..[138,4032+10])
                    Pexp_apply
                    expression (lib/AtomicBitSet.ml[138,4032+7]..[138,4032+8])
                      Pexp_ident "=" (lib/AtomicBitSet.ml[138,4032+7]..[138,4032+8])
                    [
                      <arg>
                      Nolabel
                        expression (lib/AtomicBitSet.ml[138,4032+5]..[138,4032+6])
                          Pexp_ident "s" (lib/AtomicBitSet.ml[138,4032+5]..[138,4032+6])
                      <arg>
                      Nolabel
                        expression (lib/AtomicBitSet.ml[138,4032+9]..[138,4032+10])
                          Pexp_constant PConst_int (0,None)
                    ]
                  expression (lib/AtomicBitSet.ml[139,4048+4]..[139,4048+8])
                    Pexp_ident "accu" (lib/AtomicBitSet.ml[139,4048+4]..[139,4048+8])
                  Some
                    expression (lib/AtomicBitSet.ml[141,4064+4]..[144,4172+29])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/AtomicBitSet.ml[141,4064+8]..[141,4064+9])
                            Ppat_var "x" (lib/AtomicBitSet.ml[141,4064+8]..[141,4064+9])
                          expression (lib/AtomicBitSet.ml[141,4064+12]..[141,4064+23])
                            Pexp_apply
                            expression (lib/AtomicBitSet.ml[141,4064+14]..[141,4064+18])
                              Pexp_ident "land" (lib/AtomicBitSet.ml[141,4064+14]..[141,4064+18])
                            [
                              <arg>
                              Nolabel
                                expression (lib/AtomicBitSet.ml[141,4064+12]..[141,4064+13])
                                  Pexp_ident "s" (lib/AtomicBitSet.ml[141,4064+12]..[141,4064+13])
                              <arg>
                              Nolabel
                                expression (lib/AtomicBitSet.ml[141,4064+19]..[141,4064+23])
                                  Pexp_apply
                                  expression (lib/AtomicBitSet.ml[141,4064+20]..[141,4064+21])
                                    Pexp_ident "~-" (lib/AtomicBitSet.ml[141,4064+20]..[141,4064+21])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/AtomicBitSet.ml[141,4064+21]..[141,4064+22])
                                        Pexp_ident "s" (lib/AtomicBitSet.ml[141,4064+21]..[141,4064+22])
                                  ]
                            ]
                      ]
                      expression (lib/AtomicBitSet.ml[142,4091+4]..[144,4172+29])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/AtomicBitSet.ml[142,4091+8]..[142,4091+9])
                              Ppat_var "s" (lib/AtomicBitSet.ml[142,4091+8]..[142,4091+9])
                            expression (lib/AtomicBitSet.ml[142,4091+12]..[142,4091+20])
                              Pexp_apply
                              expression (lib/AtomicBitSet.ml[142,4091+14]..[142,4091+18])
                                Pexp_ident "lxor" (lib/AtomicBitSet.ml[142,4091+14]..[142,4091+18])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/AtomicBitSet.ml[142,4091+12]..[142,4091+13])
                                    Pexp_ident "s" (lib/AtomicBitSet.ml[142,4091+12]..[142,4091+13])
                                <arg>
                                Nolabel
                                  expression (lib/AtomicBitSet.ml[142,4091+19]..[142,4091+20])
                                    Pexp_ident "x" (lib/AtomicBitSet.ml[142,4091+19]..[142,4091+20])
                              ]
                        ]
                        expression (lib/AtomicBitSet.ml[143,4131+4]..[144,4172+29])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lib/AtomicBitSet.ml[143,4131+8]..[143,4131+12])
                                Ppat_var "accu" (lib/AtomicBitSet.ml[143,4131+8]..[143,4131+12])
                              expression (lib/AtomicBitSet.ml[143,4131+15]..[143,4131+37])
                                Pexp_apply
                                expression (lib/AtomicBitSet.ml[143,4131+15]..[143,4131+16])
                                  Pexp_ident "f" (lib/AtomicBitSet.ml[143,4131+15]..[143,4131+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/AtomicBitSet.ml[143,4131+17]..[143,4131+32])
                                      Pexp_apply
                                      expression (lib/AtomicBitSet.ml[143,4131+24]..[143,4131+25])
                                        Pexp_ident "+" (lib/AtomicBitSet.ml[143,4131+24]..[143,4131+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/AtomicBitSet.ml[143,4131+18]..[143,4131+23])
                                            Pexp_ident "delta" (lib/AtomicBitSet.ml[143,4131+18]..[143,4131+23])
                                        <arg>
                                        Nolabel
                                          expression (lib/AtomicBitSet.ml[143,4131+26]..[143,4131+31])
                                            Pexp_apply
                                            expression (lib/AtomicBitSet.ml[143,4131+26]..[143,4131+29])
                                              Pexp_ident "tib" (lib/AtomicBitSet.ml[143,4131+26]..[143,4131+29])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/AtomicBitSet.ml[143,4131+30]..[143,4131+31])
                                                  Pexp_ident "x" (lib/AtomicBitSet.ml[143,4131+30]..[143,4131+31])
                                            ]
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lib/AtomicBitSet.ml[143,4131+33]..[143,4131+37])
                                      Pexp_ident "accu" (lib/AtomicBitSet.ml[143,4131+33]..[143,4131+37])
                                ]
                          ]
                          expression (lib/AtomicBitSet.ml[144,4172+4]..[144,4172+29])
                            Pexp_apply
                            expression (lib/AtomicBitSet.ml[144,4172+4]..[144,4172+14])
                              Pexp_ident "fold_delta" (lib/AtomicBitSet.ml[144,4172+4]..[144,4172+14])
                            [
                              <arg>
                              Nolabel
                                expression (lib/AtomicBitSet.ml[144,4172+15]..[144,4172+20])
                                  Pexp_ident "delta" (lib/AtomicBitSet.ml[144,4172+15]..[144,4172+20])
                              <arg>
                              Nolabel
                                expression (lib/AtomicBitSet.ml[144,4172+21]..[144,4172+22])
                                  Pexp_ident "f" (lib/AtomicBitSet.ml[144,4172+21]..[144,4172+22])
                              <arg>
                              Nolabel
                                expression (lib/AtomicBitSet.ml[144,4172+23]..[144,4172+24])
                                  Pexp_ident "s" (lib/AtomicBitSet.ml[144,4172+23]..[144,4172+24])
                              <arg>
                              Nolabel
                                expression (lib/AtomicBitSet.ml[144,4172+25]..[144,4172+29])
                                  Pexp_ident "accu" (lib/AtomicBitSet.ml[144,4172+25]..[144,4172+29])
                            ]
    ]
  structure_item (lib/AtomicBitSet.ml[146,4203+0]..[151,4341+24])
    Pstr_value Rec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[146,4203+8]..[146,4203+18])
          Ppat_var "iter_delta" (lib/AtomicBitSet.ml[146,4203+8]..[146,4203+18])
        expression (lib/AtomicBitSet.ml[146,4203+19]..[151,4341+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/AtomicBitSet.ml[146,4203+19]..[146,4203+24])
            Ppat_var "delta" (lib/AtomicBitSet.ml[146,4203+19]..[146,4203+24])
          expression (lib/AtomicBitSet.ml[146,4203+25]..[151,4341+24]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/AtomicBitSet.ml[146,4203+25]..[146,4203+26])
              Ppat_var "f" (lib/AtomicBitSet.ml[146,4203+25]..[146,4203+26])
            expression (lib/AtomicBitSet.ml[146,4203+27]..[151,4341+24]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/AtomicBitSet.ml[146,4203+27]..[146,4203+28])
                Ppat_var "s" (lib/AtomicBitSet.ml[146,4203+27]..[146,4203+28])
              expression (lib/AtomicBitSet.ml[147,4234+2]..[151,4341+24])
                Pexp_ifthenelse
                expression (lib/AtomicBitSet.ml[147,4234+5]..[147,4234+11])
                  Pexp_apply
                  expression (lib/AtomicBitSet.ml[147,4234+7]..[147,4234+9])
                    Pexp_ident "<>" (lib/AtomicBitSet.ml[147,4234+7]..[147,4234+9])
                  [
                    <arg>
                    Nolabel
                      expression (lib/AtomicBitSet.ml[147,4234+5]..[147,4234+6])
                        Pexp_ident "s" (lib/AtomicBitSet.ml[147,4234+5]..[147,4234+6])
                    <arg>
                    Nolabel
                      expression (lib/AtomicBitSet.ml[147,4234+10]..[147,4234+11])
                        Pexp_constant PConst_int (0,None)
                  ]
                expression (lib/AtomicBitSet.ml[148,4251+4]..[151,4341+24])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/AtomicBitSet.ml[148,4251+8]..[148,4251+9])
                        Ppat_var "x" (lib/AtomicBitSet.ml[148,4251+8]..[148,4251+9])
                      expression (lib/AtomicBitSet.ml[148,4251+12]..[148,4251+23])
                        Pexp_apply
                        expression (lib/AtomicBitSet.ml[148,4251+14]..[148,4251+18])
                          Pexp_ident "land" (lib/AtomicBitSet.ml[148,4251+14]..[148,4251+18])
                        [
                          <arg>
                          Nolabel
                            expression (lib/AtomicBitSet.ml[148,4251+12]..[148,4251+13])
                              Pexp_ident "s" (lib/AtomicBitSet.ml[148,4251+12]..[148,4251+13])
                          <arg>
                          Nolabel
                            expression (lib/AtomicBitSet.ml[148,4251+19]..[148,4251+23])
                              Pexp_apply
                              expression (lib/AtomicBitSet.ml[148,4251+20]..[148,4251+21])
                                Pexp_ident "~-" (lib/AtomicBitSet.ml[148,4251+20]..[148,4251+21])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/AtomicBitSet.ml[148,4251+21]..[148,4251+22])
                                    Pexp_ident "s" (lib/AtomicBitSet.ml[148,4251+21]..[148,4251+22])
                              ]
                        ]
                  ]
                  expression (lib/AtomicBitSet.ml[149,4278+4]..[151,4341+24])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/AtomicBitSet.ml[149,4278+8]..[149,4278+9])
                          Ppat_var "s" (lib/AtomicBitSet.ml[149,4278+8]..[149,4278+9])
                        expression (lib/AtomicBitSet.ml[149,4278+12]..[149,4278+20])
                          Pexp_apply
                          expression (lib/AtomicBitSet.ml[149,4278+14]..[149,4278+18])
                            Pexp_ident "lxor" (lib/AtomicBitSet.ml[149,4278+14]..[149,4278+18])
                          [
                            <arg>
                            Nolabel
                              expression (lib/AtomicBitSet.ml[149,4278+12]..[149,4278+13])
                                Pexp_ident "s" (lib/AtomicBitSet.ml[149,4278+12]..[149,4278+13])
                            <arg>
                            Nolabel
                              expression (lib/AtomicBitSet.ml[149,4278+19]..[149,4278+20])
                                Pexp_ident "x" (lib/AtomicBitSet.ml[149,4278+19]..[149,4278+20])
                          ]
                    ]
                    expression (lib/AtomicBitSet.ml[150,4318+4]..[151,4341+24])
                      Pexp_sequence
                      expression (lib/AtomicBitSet.ml[150,4318+4]..[150,4318+21])
                        Pexp_apply
                        expression (lib/AtomicBitSet.ml[150,4318+4]..[150,4318+5])
                          Pexp_ident "f" (lib/AtomicBitSet.ml[150,4318+4]..[150,4318+5])
                        [
                          <arg>
                          Nolabel
                            expression (lib/AtomicBitSet.ml[150,4318+6]..[150,4318+21])
                              Pexp_apply
                              expression (lib/AtomicBitSet.ml[150,4318+13]..[150,4318+14])
                                Pexp_ident "+" (lib/AtomicBitSet.ml[150,4318+13]..[150,4318+14])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/AtomicBitSet.ml[150,4318+7]..[150,4318+12])
                                    Pexp_ident "delta" (lib/AtomicBitSet.ml[150,4318+7]..[150,4318+12])
                                <arg>
                                Nolabel
                                  expression (lib/AtomicBitSet.ml[150,4318+15]..[150,4318+20])
                                    Pexp_apply
                                    expression (lib/AtomicBitSet.ml[150,4318+15]..[150,4318+18])
                                      Pexp_ident "tib" (lib/AtomicBitSet.ml[150,4318+15]..[150,4318+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/AtomicBitSet.ml[150,4318+19]..[150,4318+20])
                                          Pexp_ident "x" (lib/AtomicBitSet.ml[150,4318+19]..[150,4318+20])
                                    ]
                              ]
                        ]
                      expression (lib/AtomicBitSet.ml[151,4341+4]..[151,4341+24])
                        Pexp_apply
                        expression (lib/AtomicBitSet.ml[151,4341+4]..[151,4341+14])
                          Pexp_ident "iter_delta" (lib/AtomicBitSet.ml[151,4341+4]..[151,4341+14])
                        [
                          <arg>
                          Nolabel
                            expression (lib/AtomicBitSet.ml[151,4341+15]..[151,4341+20])
                              Pexp_ident "delta" (lib/AtomicBitSet.ml[151,4341+15]..[151,4341+20])
                          <arg>
                          Nolabel
                            expression (lib/AtomicBitSet.ml[151,4341+21]..[151,4341+22])
                              Pexp_ident "f" (lib/AtomicBitSet.ml[151,4341+21]..[151,4341+22])
                          <arg>
                          Nolabel
                            expression (lib/AtomicBitSet.ml[151,4341+23]..[151,4341+24])
                              Pexp_ident "s" (lib/AtomicBitSet.ml[151,4341+23]..[151,4341+24])
                        ]
                None
    ]
  structure_item (lib/AtomicBitSet.ml[153,4367+0]..[160,4523+17])
    Pstr_value Rec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[153,4367+8]..[153,4367+12])
          Ppat_var "fold" (lib/AtomicBitSet.ml[153,4367+8]..[153,4367+12])
        expression (lib/AtomicBitSet.ml[153,4367+13]..[160,4523+17]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/AtomicBitSet.ml[153,4367+13]..[153,4367+14])
            Ppat_var "f" (lib/AtomicBitSet.ml[153,4367+13]..[153,4367+14])
          expression (lib/AtomicBitSet.ml[153,4367+15]..[160,4523+17]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/AtomicBitSet.ml[153,4367+15]..[153,4367+16])
              Ppat_var "s" (lib/AtomicBitSet.ml[153,4367+15]..[153,4367+16])
            expression (lib/AtomicBitSet.ml[153,4367+17]..[160,4523+17]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/AtomicBitSet.ml[153,4367+17]..[153,4367+21])
                Ppat_var "accu" (lib/AtomicBitSet.ml[153,4367+17]..[153,4367+21])
              expression (lib/AtomicBitSet.ml[154,4391+2]..[160,4523+17])
                Pexp_ifthenelse
                expression (lib/AtomicBitSet.ml[154,4391+5]..[154,4391+10])
                  Pexp_apply
                  expression (lib/AtomicBitSet.ml[154,4391+7]..[154,4391+8])
                    Pexp_ident "=" (lib/AtomicBitSet.ml[154,4391+7]..[154,4391+8])
                  [
                    <arg>
                    Nolabel
                      expression (lib/AtomicBitSet.ml[154,4391+5]..[154,4391+6])
                        Pexp_ident "s" (lib/AtomicBitSet.ml[154,4391+5]..[154,4391+6])
                    <arg>
                    Nolabel
                      expression (lib/AtomicBitSet.ml[154,4391+9]..[154,4391+10])
                        Pexp_constant PConst_int (0,None)
                  ]
                expression (lib/AtomicBitSet.ml[155,4407+4]..[155,4407+8])
                  Pexp_ident "accu" (lib/AtomicBitSet.ml[155,4407+4]..[155,4407+8])
                Some
                  expression (lib/AtomicBitSet.ml[157,4423+4]..[160,4523+17])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/AtomicBitSet.ml[157,4423+8]..[157,4423+9])
                          Ppat_var "x" (lib/AtomicBitSet.ml[157,4423+8]..[157,4423+9])
                        expression (lib/AtomicBitSet.ml[157,4423+12]..[157,4423+23])
                          Pexp_apply
                          expression (lib/AtomicBitSet.ml[157,4423+14]..[157,4423+18])
                            Pexp_ident "land" (lib/AtomicBitSet.ml[157,4423+14]..[157,4423+18])
                          [
                            <arg>
                            Nolabel
                              expression (lib/AtomicBitSet.ml[157,4423+12]..[157,4423+13])
                                Pexp_ident "s" (lib/AtomicBitSet.ml[157,4423+12]..[157,4423+13])
                            <arg>
                            Nolabel
                              expression (lib/AtomicBitSet.ml[157,4423+19]..[157,4423+23])
                                Pexp_apply
                                expression (lib/AtomicBitSet.ml[157,4423+20]..[157,4423+21])
                                  Pexp_ident "~-" (lib/AtomicBitSet.ml[157,4423+20]..[157,4423+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/AtomicBitSet.ml[157,4423+21]..[157,4423+22])
                                      Pexp_ident "s" (lib/AtomicBitSet.ml[157,4423+21]..[157,4423+22])
                                ]
                          ]
                    ]
                    expression (lib/AtomicBitSet.ml[158,4450+4]..[160,4523+17])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/AtomicBitSet.ml[158,4450+8]..[158,4450+9])
                            Ppat_var "s" (lib/AtomicBitSet.ml[158,4450+8]..[158,4450+9])
                          expression (lib/AtomicBitSet.ml[158,4450+12]..[158,4450+20])
                            Pexp_apply
                            expression (lib/AtomicBitSet.ml[158,4450+14]..[158,4450+18])
                              Pexp_ident "lxor" (lib/AtomicBitSet.ml[158,4450+14]..[158,4450+18])
                            [
                              <arg>
                              Nolabel
                                expression (lib/AtomicBitSet.ml[158,4450+12]..[158,4450+13])
                                  Pexp_ident "s" (lib/AtomicBitSet.ml[158,4450+12]..[158,4450+13])
                              <arg>
                              Nolabel
                                expression (lib/AtomicBitSet.ml[158,4450+19]..[158,4450+20])
                                  Pexp_ident "x" (lib/AtomicBitSet.ml[158,4450+19]..[158,4450+20])
                            ]
                      ]
                      expression (lib/AtomicBitSet.ml[159,4490+4]..[160,4523+17])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/AtomicBitSet.ml[159,4490+8]..[159,4490+12])
                              Ppat_var "accu" (lib/AtomicBitSet.ml[159,4490+8]..[159,4490+12])
                            expression (lib/AtomicBitSet.ml[159,4490+15]..[159,4490+29])
                              Pexp_apply
                              expression (lib/AtomicBitSet.ml[159,4490+15]..[159,4490+16])
                                Pexp_ident "f" (lib/AtomicBitSet.ml[159,4490+15]..[159,4490+16])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/AtomicBitSet.ml[159,4490+17]..[159,4490+24])
                                    Pexp_apply
                                    expression (lib/AtomicBitSet.ml[159,4490+18]..[159,4490+21])
                                      Pexp_ident "tib" (lib/AtomicBitSet.ml[159,4490+18]..[159,4490+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/AtomicBitSet.ml[159,4490+22]..[159,4490+23])
                                          Pexp_ident "x" (lib/AtomicBitSet.ml[159,4490+22]..[159,4490+23])
                                    ]
                                <arg>
                                Nolabel
                                  expression (lib/AtomicBitSet.ml[159,4490+25]..[159,4490+29])
                                    Pexp_ident "accu" (lib/AtomicBitSet.ml[159,4490+25]..[159,4490+29])
                              ]
                        ]
                        expression (lib/AtomicBitSet.ml[160,4523+4]..[160,4523+17])
                          Pexp_apply
                          expression (lib/AtomicBitSet.ml[160,4523+4]..[160,4523+8])
                            Pexp_ident "fold" (lib/AtomicBitSet.ml[160,4523+4]..[160,4523+8])
                          [
                            <arg>
                            Nolabel
                              expression (lib/AtomicBitSet.ml[160,4523+9]..[160,4523+10])
                                Pexp_ident "f" (lib/AtomicBitSet.ml[160,4523+9]..[160,4523+10])
                            <arg>
                            Nolabel
                              expression (lib/AtomicBitSet.ml[160,4523+11]..[160,4523+12])
                                Pexp_ident "s" (lib/AtomicBitSet.ml[160,4523+11]..[160,4523+12])
                            <arg>
                            Nolabel
                              expression (lib/AtomicBitSet.ml[160,4523+13]..[160,4523+17])
                                Pexp_ident "accu" (lib/AtomicBitSet.ml[160,4523+13]..[160,4523+17])
                          ]
    ]
  structure_item (lib/AtomicBitSet.ml[162,4542+0]..[167,4660+12])
    Pstr_value Rec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[162,4542+8]..[162,4542+12])
          Ppat_var "iter" (lib/AtomicBitSet.ml[162,4542+8]..[162,4542+12])
        expression (lib/AtomicBitSet.ml[162,4542+13]..[167,4660+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/AtomicBitSet.ml[162,4542+13]..[162,4542+14])
            Ppat_var "f" (lib/AtomicBitSet.ml[162,4542+13]..[162,4542+14])
          expression (lib/AtomicBitSet.ml[162,4542+15]..[167,4660+12]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/AtomicBitSet.ml[162,4542+15]..[162,4542+16])
              Ppat_var "s" (lib/AtomicBitSet.ml[162,4542+15]..[162,4542+16])
            expression (lib/AtomicBitSet.ml[163,4561+2]..[167,4660+12])
              Pexp_ifthenelse
              expression (lib/AtomicBitSet.ml[163,4561+5]..[163,4561+11])
                Pexp_apply
                expression (lib/AtomicBitSet.ml[163,4561+7]..[163,4561+9])
                  Pexp_ident "<>" (lib/AtomicBitSet.ml[163,4561+7]..[163,4561+9])
                [
                  <arg>
                  Nolabel
                    expression (lib/AtomicBitSet.ml[163,4561+5]..[163,4561+6])
                      Pexp_ident "s" (lib/AtomicBitSet.ml[163,4561+5]..[163,4561+6])
                  <arg>
                  Nolabel
                    expression (lib/AtomicBitSet.ml[163,4561+10]..[163,4561+11])
                      Pexp_constant PConst_int (0,None)
                ]
              expression (lib/AtomicBitSet.ml[164,4578+4]..[167,4660+12])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lib/AtomicBitSet.ml[164,4578+8]..[164,4578+9])
                      Ppat_var "x" (lib/AtomicBitSet.ml[164,4578+8]..[164,4578+9])
                    expression (lib/AtomicBitSet.ml[164,4578+12]..[164,4578+23])
                      Pexp_apply
                      expression (lib/AtomicBitSet.ml[164,4578+14]..[164,4578+18])
                        Pexp_ident "land" (lib/AtomicBitSet.ml[164,4578+14]..[164,4578+18])
                      [
                        <arg>
                        Nolabel
                          expression (lib/AtomicBitSet.ml[164,4578+12]..[164,4578+13])
                            Pexp_ident "s" (lib/AtomicBitSet.ml[164,4578+12]..[164,4578+13])
                        <arg>
                        Nolabel
                          expression (lib/AtomicBitSet.ml[164,4578+19]..[164,4578+23])
                            Pexp_apply
                            expression (lib/AtomicBitSet.ml[164,4578+20]..[164,4578+21])
                              Pexp_ident "~-" (lib/AtomicBitSet.ml[164,4578+20]..[164,4578+21])
                            [
                              <arg>
                              Nolabel
                                expression (lib/AtomicBitSet.ml[164,4578+21]..[164,4578+22])
                                  Pexp_ident "s" (lib/AtomicBitSet.ml[164,4578+21]..[164,4578+22])
                            ]
                      ]
                ]
                expression (lib/AtomicBitSet.ml[165,4605+4]..[167,4660+12])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/AtomicBitSet.ml[165,4605+8]..[165,4605+9])
                        Ppat_var "s" (lib/AtomicBitSet.ml[165,4605+8]..[165,4605+9])
                      expression (lib/AtomicBitSet.ml[165,4605+12]..[165,4605+20])
                        Pexp_apply
                        expression (lib/AtomicBitSet.ml[165,4605+14]..[165,4605+18])
                          Pexp_ident "lxor" (lib/AtomicBitSet.ml[165,4605+14]..[165,4605+18])
                        [
                          <arg>
                          Nolabel
                            expression (lib/AtomicBitSet.ml[165,4605+12]..[165,4605+13])
                              Pexp_ident "s" (lib/AtomicBitSet.ml[165,4605+12]..[165,4605+13])
                          <arg>
                          Nolabel
                            expression (lib/AtomicBitSet.ml[165,4605+19]..[165,4605+20])
                              Pexp_ident "x" (lib/AtomicBitSet.ml[165,4605+19]..[165,4605+20])
                        ]
                  ]
                  expression (lib/AtomicBitSet.ml[166,4645+4]..[167,4660+12])
                    Pexp_sequence
                    expression (lib/AtomicBitSet.ml[166,4645+4]..[166,4645+13])
                      Pexp_apply
                      expression (lib/AtomicBitSet.ml[166,4645+4]..[166,4645+5])
                        Pexp_ident "f" (lib/AtomicBitSet.ml[166,4645+4]..[166,4645+5])
                      [
                        <arg>
                        Nolabel
                          expression (lib/AtomicBitSet.ml[166,4645+6]..[166,4645+13])
                            Pexp_apply
                            expression (lib/AtomicBitSet.ml[166,4645+7]..[166,4645+10])
                              Pexp_ident "tib" (lib/AtomicBitSet.ml[166,4645+7]..[166,4645+10])
                            [
                              <arg>
                              Nolabel
                                expression (lib/AtomicBitSet.ml[166,4645+11]..[166,4645+12])
                                  Pexp_ident "x" (lib/AtomicBitSet.ml[166,4645+11]..[166,4645+12])
                            ]
                      ]
                    expression (lib/AtomicBitSet.ml[167,4660+4]..[167,4660+12])
                      Pexp_apply
                      expression (lib/AtomicBitSet.ml[167,4660+4]..[167,4660+8])
                        Pexp_ident "iter" (lib/AtomicBitSet.ml[167,4660+4]..[167,4660+8])
                      [
                        <arg>
                        Nolabel
                          expression (lib/AtomicBitSet.ml[167,4660+9]..[167,4660+10])
                            Pexp_ident "f" (lib/AtomicBitSet.ml[167,4660+9]..[167,4660+10])
                        <arg>
                        Nolabel
                          expression (lib/AtomicBitSet.ml[167,4660+11]..[167,4660+12])
                            Pexp_ident "s" (lib/AtomicBitSet.ml[167,4660+11]..[167,4660+12])
                      ]
              None
    ]
  structure_item (lib/AtomicBitSet.ml[169,4674+0]..[172,4819+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[169,4674+4]..[169,4674+16])
          Ppat_var "is_singleton" (lib/AtomicBitSet.ml[169,4674+4]..[169,4674+16])
        expression (lib/AtomicBitSet.ml[169,4674+17]..[172,4819+20]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/AtomicBitSet.ml[169,4674+17]..[169,4674+18])
            Ppat_var "s" (lib/AtomicBitSet.ml[169,4674+17]..[169,4674+18])
          expression (lib/AtomicBitSet.ml[172,4819+2]..[172,4819+20])
            Pexp_apply
            expression (lib/AtomicBitSet.ml[172,4819+17]..[172,4819+18])
              Pexp_ident "=" (lib/AtomicBitSet.ml[172,4819+17]..[172,4819+18])
            [
              <arg>
              Nolabel
                expression (lib/AtomicBitSet.ml[172,4819+2]..[172,4819+16])
                  Pexp_apply
                  expression (lib/AtomicBitSet.ml[172,4819+4]..[172,4819+8])
                    Pexp_ident "land" (lib/AtomicBitSet.ml[172,4819+4]..[172,4819+8])
                  [
                    <arg>
                    Nolabel
                      expression (lib/AtomicBitSet.ml[172,4819+2]..[172,4819+3])
                        Pexp_ident "s" (lib/AtomicBitSet.ml[172,4819+2]..[172,4819+3])
                    <arg>
                    Nolabel
                      expression (lib/AtomicBitSet.ml[172,4819+9]..[172,4819+16])
                        Pexp_apply
                        expression (lib/AtomicBitSet.ml[172,4819+12]..[172,4819+13])
                          Pexp_ident "-" (lib/AtomicBitSet.ml[172,4819+12]..[172,4819+13])
                        [
                          <arg>
                          Nolabel
                            expression (lib/AtomicBitSet.ml[172,4819+10]..[172,4819+11])
                              Pexp_ident "s" (lib/AtomicBitSet.ml[172,4819+10]..[172,4819+11])
                          <arg>
                          Nolabel
                            expression (lib/AtomicBitSet.ml[172,4819+14]..[172,4819+15])
                              Pexp_constant PConst_int (1,None)
                        ]
                  ]
              <arg>
              Nolabel
                expression (lib/AtomicBitSet.ml[172,4819+19]..[172,4819+20])
                  Pexp_constant PConst_int (0,None)
            ]
    ]
  structure_item (lib/AtomicBitSet.ml[174,4841+0]..[175,4858+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[174,4841+4]..[174,4841+12])
          Ppat_var "cardinal" (lib/AtomicBitSet.ml[174,4841+4]..[174,4841+12])
        expression (lib/AtomicBitSet.ml[174,4841+13]..[175,4858+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/AtomicBitSet.ml[174,4841+13]..[174,4841+14])
            Ppat_var "s" (lib/AtomicBitSet.ml[174,4841+13]..[174,4841+14])
          expression (lib/AtomicBitSet.ml[175,4858+2]..[175,4858+7])
            Pexp_apply
            expression (lib/AtomicBitSet.ml[175,4858+2]..[175,4858+5])
              Pexp_ident "pop" (lib/AtomicBitSet.ml[175,4858+2]..[175,4858+5])
            [
              <arg>
              Nolabel
                expression (lib/AtomicBitSet.ml[175,4858+6]..[175,4858+7])
                  Pexp_ident "s" (lib/AtomicBitSet.ml[175,4858+6]..[175,4858+7])
            ]
    ]
  structure_item (lib/AtomicBitSet.ml[178,4907+0]..[180,4980+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[178,4907+4]..[178,4907+12])
          Ppat_var "elements" (lib/AtomicBitSet.ml[178,4907+4]..[178,4907+12])
        expression (lib/AtomicBitSet.ml[178,4907+13]..[180,4980+35]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/AtomicBitSet.ml[178,4907+13]..[178,4907+14])
            Ppat_var "s" (lib/AtomicBitSet.ml[178,4907+13]..[178,4907+14])
          expression (lib/AtomicBitSet.ml[180,4980+2]..[180,4980+35])
            Pexp_apply
            expression (lib/AtomicBitSet.ml[180,4980+2]..[180,4980+6])
              Pexp_ident "fold" (lib/AtomicBitSet.ml[180,4980+2]..[180,4980+6])
            [
              <arg>
              Nolabel
                expression (lib/AtomicBitSet.ml[180,4980+7]..[180,4980+30])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lib/AtomicBitSet.ml[180,4980+12]..[180,4980+14])
                    Ppat_var "tl" (lib/AtomicBitSet.ml[180,4980+12]..[180,4980+14])
                  expression (lib/AtomicBitSet.ml[180,4980+15]..[180,4980+29]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lib/AtomicBitSet.ml[180,4980+15]..[180,4980+17])
                      Ppat_var "hd" (lib/AtomicBitSet.ml[180,4980+15]..[180,4980+17])
                    expression (lib/AtomicBitSet.ml[180,4980+21]..[180,4980+29])
                      Pexp_construct "::" (lib/AtomicBitSet.ml[180,4980+24]..[180,4980+26])
                      Some
                        expression (lib/AtomicBitSet.ml[180,4980+21]..[180,4980+29]) ghost
                          Pexp_tuple
                          [
                            expression (lib/AtomicBitSet.ml[180,4980+21]..[180,4980+23])
                              Pexp_ident "tl" (lib/AtomicBitSet.ml[180,4980+21]..[180,4980+23])
                            expression (lib/AtomicBitSet.ml[180,4980+27]..[180,4980+29])
                              Pexp_ident "hd" (lib/AtomicBitSet.ml[180,4980+27]..[180,4980+29])
                          ]
              <arg>
              Nolabel
                expression (lib/AtomicBitSet.ml[180,4980+31]..[180,4980+32])
                  Pexp_ident "s" (lib/AtomicBitSet.ml[180,4980+31]..[180,4980+32])
              <arg>
              Nolabel
                expression (lib/AtomicBitSet.ml[180,4980+33]..[180,4980+35])
                  Pexp_construct "[]" (lib/AtomicBitSet.ml[180,4980+33]..[180,4980+35])
                  None
            ]
    ]
  structure_item (lib/AtomicBitSet.ml[182,5017+0]..[183,5036+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[182,5017+4]..[182,5017+10])
          Ppat_var "subset" (lib/AtomicBitSet.ml[182,5017+4]..[182,5017+10])
        expression (lib/AtomicBitSet.ml[182,5017+11]..[183,5036+17]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/AtomicBitSet.ml[182,5017+11]..[182,5017+13])
            Ppat_var "s1" (lib/AtomicBitSet.ml[182,5017+11]..[182,5017+13])
          expression (lib/AtomicBitSet.ml[182,5017+14]..[183,5036+17]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/AtomicBitSet.ml[182,5017+14]..[182,5017+16])
              Ppat_var "s2" (lib/AtomicBitSet.ml[182,5017+14]..[182,5017+16])
            expression (lib/AtomicBitSet.ml[183,5036+2]..[183,5036+17])
              Pexp_apply
              expression (lib/AtomicBitSet.ml[183,5036+13]..[183,5036+14])
                Pexp_ident "=" (lib/AtomicBitSet.ml[183,5036+13]..[183,5036+14])
              [
                <arg>
                Nolabel
                  expression (lib/AtomicBitSet.ml[183,5036+2]..[183,5036+12])
                    Pexp_apply
                    expression (lib/AtomicBitSet.ml[183,5036+5]..[183,5036+9])
                      Pexp_ident "land" (lib/AtomicBitSet.ml[183,5036+5]..[183,5036+9])
                    [
                      <arg>
                      Nolabel
                        expression (lib/AtomicBitSet.ml[183,5036+2]..[183,5036+4])
                          Pexp_ident "s1" (lib/AtomicBitSet.ml[183,5036+2]..[183,5036+4])
                      <arg>
                      Nolabel
                        expression (lib/AtomicBitSet.ml[183,5036+10]..[183,5036+12])
                          Pexp_ident "s2" (lib/AtomicBitSet.ml[183,5036+10]..[183,5036+12])
                    ]
                <arg>
                Nolabel
                  expression (lib/AtomicBitSet.ml[183,5036+15]..[183,5036+17])
                    Pexp_ident "s1" (lib/AtomicBitSet.ml[183,5036+15]..[183,5036+17])
              ]
    ]
  structure_item (lib/AtomicBitSet.ml[185,5055+0]..[186,5069+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[185,5055+4]..[185,5055+7])
          Ppat_var "mem" (lib/AtomicBitSet.ml[185,5055+4]..[185,5055+7])
        expression (lib/AtomicBitSet.ml[185,5055+8]..[186,5069+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/AtomicBitSet.ml[185,5055+8]..[185,5055+9])
            Ppat_var "i" (lib/AtomicBitSet.ml[185,5055+8]..[185,5055+9])
          expression (lib/AtomicBitSet.ml[185,5055+10]..[186,5069+24]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/AtomicBitSet.ml[185,5055+10]..[185,5055+11])
              Ppat_var "s" (lib/AtomicBitSet.ml[185,5055+10]..[185,5055+11])
            expression (lib/AtomicBitSet.ml[186,5069+2]..[186,5069+24])
              Pexp_apply
              expression (lib/AtomicBitSet.ml[186,5069+2]..[186,5069+8])
                Pexp_ident "subset" (lib/AtomicBitSet.ml[186,5069+2]..[186,5069+8])
              [
                <arg>
                Nolabel
                  expression (lib/AtomicBitSet.ml[186,5069+9]..[186,5069+22])
                    Pexp_apply
                    expression (lib/AtomicBitSet.ml[186,5069+10]..[186,5069+19])
                      Pexp_ident "singleton" (lib/AtomicBitSet.ml[186,5069+10]..[186,5069+19])
                    [
                      <arg>
                      Nolabel
                        expression (lib/AtomicBitSet.ml[186,5069+20]..[186,5069+21])
                          Pexp_ident "i" (lib/AtomicBitSet.ml[186,5069+20]..[186,5069+21])
                    ]
                <arg>
                Nolabel
                  expression (lib/AtomicBitSet.ml[186,5069+23]..[186,5069+24])
                    Pexp_ident "s" (lib/AtomicBitSet.ml[186,5069+23]..[186,5069+24])
              ]
    ]
  structure_item (lib/AtomicBitSet.ml[188,5095+0]..[189,5113+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[188,5095+4]..[188,5095+9])
          Ppat_var "union" (lib/AtomicBitSet.ml[188,5095+4]..[188,5095+9])
        expression (lib/AtomicBitSet.ml[188,5095+10]..[189,5113+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/AtomicBitSet.ml[188,5095+10]..[188,5095+12])
            Ppat_var "s1" (lib/AtomicBitSet.ml[188,5095+10]..[188,5095+12])
          expression (lib/AtomicBitSet.ml[188,5095+13]..[189,5113+11]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/AtomicBitSet.ml[188,5095+13]..[188,5095+15])
              Ppat_var "s2" (lib/AtomicBitSet.ml[188,5095+13]..[188,5095+15])
            expression (lib/AtomicBitSet.ml[189,5113+2]..[189,5113+11])
              Pexp_apply
              expression (lib/AtomicBitSet.ml[189,5113+5]..[189,5113+8])
                Pexp_ident "lor" (lib/AtomicBitSet.ml[189,5113+5]..[189,5113+8])
              [
                <arg>
                Nolabel
                  expression (lib/AtomicBitSet.ml[189,5113+2]..[189,5113+4])
                    Pexp_ident "s1" (lib/AtomicBitSet.ml[189,5113+2]..[189,5113+4])
                <arg>
                Nolabel
                  expression (lib/AtomicBitSet.ml[189,5113+9]..[189,5113+11])
                    Pexp_ident "s2" (lib/AtomicBitSet.ml[189,5113+9]..[189,5113+11])
              ]
    ]
  structure_item (lib/AtomicBitSet.ml[191,5126+0]..[192,5144+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[191,5126+4]..[191,5126+9])
          Ppat_var "inter" (lib/AtomicBitSet.ml[191,5126+4]..[191,5126+9])
        expression (lib/AtomicBitSet.ml[191,5126+10]..[192,5144+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/AtomicBitSet.ml[191,5126+10]..[191,5126+12])
            Ppat_var "s1" (lib/AtomicBitSet.ml[191,5126+10]..[191,5126+12])
          expression (lib/AtomicBitSet.ml[191,5126+13]..[192,5144+12]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/AtomicBitSet.ml[191,5126+13]..[191,5126+15])
              Ppat_var "s2" (lib/AtomicBitSet.ml[191,5126+13]..[191,5126+15])
            expression (lib/AtomicBitSet.ml[192,5144+2]..[192,5144+12])
              Pexp_apply
              expression (lib/AtomicBitSet.ml[192,5144+5]..[192,5144+9])
                Pexp_ident "land" (lib/AtomicBitSet.ml[192,5144+5]..[192,5144+9])
              [
                <arg>
                Nolabel
                  expression (lib/AtomicBitSet.ml[192,5144+2]..[192,5144+4])
                    Pexp_ident "s1" (lib/AtomicBitSet.ml[192,5144+2]..[192,5144+4])
                <arg>
                Nolabel
                  expression (lib/AtomicBitSet.ml[192,5144+10]..[192,5144+12])
                    Pexp_ident "s2" (lib/AtomicBitSet.ml[192,5144+10]..[192,5144+12])
              ]
    ]
  structure_item (lib/AtomicBitSet.ml[194,5158+0]..[199,5244+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[194,5158+4]..[194,5158+11])
          Ppat_var "minimum" (lib/AtomicBitSet.ml[194,5158+4]..[194,5158+11])
        expression (lib/AtomicBitSet.ml[194,5158+12]..[199,5244+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/AtomicBitSet.ml[194,5158+12]..[194,5158+13])
            Ppat_var "s" (lib/AtomicBitSet.ml[194,5158+12]..[194,5158+13])
          expression (lib/AtomicBitSet.ml[195,5174+2]..[199,5244+9])
            Pexp_ifthenelse
            expression (lib/AtomicBitSet.ml[195,5174+5]..[195,5174+10])
              Pexp_apply
              expression (lib/AtomicBitSet.ml[195,5174+7]..[195,5174+8])
                Pexp_ident "=" (lib/AtomicBitSet.ml[195,5174+7]..[195,5174+8])
              [
                <arg>
                Nolabel
                  expression (lib/AtomicBitSet.ml[195,5174+5]..[195,5174+6])
                    Pexp_ident "s" (lib/AtomicBitSet.ml[195,5174+5]..[195,5174+6])
                <arg>
                Nolabel
                  expression (lib/AtomicBitSet.ml[195,5174+9]..[195,5174+10])
                    Pexp_constant PConst_int (0,None)
              ]
            expression (lib/AtomicBitSet.ml[196,5190+4]..[196,5190+19])
              Pexp_apply
              expression (lib/AtomicBitSet.ml[196,5190+4]..[196,5190+9])
                Pexp_ident "raise" (lib/AtomicBitSet.ml[196,5190+4]..[196,5190+9])
              [
                <arg>
                Nolabel
                  expression (lib/AtomicBitSet.ml[196,5190+10]..[196,5190+19])
                    Pexp_construct "Not_found" (lib/AtomicBitSet.ml[196,5190+10]..[196,5190+19])
                    None
              ]
            Some
              expression (lib/AtomicBitSet.ml[198,5217+4]..[199,5244+9])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lib/AtomicBitSet.ml[198,5217+8]..[198,5217+9])
                      Ppat_var "x" (lib/AtomicBitSet.ml[198,5217+8]..[198,5217+9])
                    expression (lib/AtomicBitSet.ml[198,5217+12]..[198,5217+23])
                      Pexp_apply
                      expression (lib/AtomicBitSet.ml[198,5217+14]..[198,5217+18])
                        Pexp_ident "land" (lib/AtomicBitSet.ml[198,5217+14]..[198,5217+18])
                      [
                        <arg>
                        Nolabel
                          expression (lib/AtomicBitSet.ml[198,5217+12]..[198,5217+13])
                            Pexp_ident "s" (lib/AtomicBitSet.ml[198,5217+12]..[198,5217+13])
                        <arg>
                        Nolabel
                          expression (lib/AtomicBitSet.ml[198,5217+19]..[198,5217+23])
                            Pexp_apply
                            expression (lib/AtomicBitSet.ml[198,5217+20]..[198,5217+21])
                              Pexp_ident "~-" (lib/AtomicBitSet.ml[198,5217+20]..[198,5217+21])
                            [
                              <arg>
                              Nolabel
                                expression (lib/AtomicBitSet.ml[198,5217+21]..[198,5217+22])
                                  Pexp_ident "s" (lib/AtomicBitSet.ml[198,5217+21]..[198,5217+22])
                            ]
                      ]
                ]
                expression (lib/AtomicBitSet.ml[199,5244+4]..[199,5244+9])
                  Pexp_apply
                  expression (lib/AtomicBitSet.ml[199,5244+4]..[199,5244+7])
                    Pexp_ident "tib" (lib/AtomicBitSet.ml[199,5244+4]..[199,5244+7])
                  [
                    <arg>
                    Nolabel
                      expression (lib/AtomicBitSet.ml[199,5244+8]..[199,5244+9])
                        Pexp_ident "x" (lib/AtomicBitSet.ml[199,5244+8]..[199,5244+9])
                  ]
    ]
  structure_item (lib/AtomicBitSet.ml[201,5255+0]..[202,5268+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[201,5255+4]..[201,5255+10])
          Ppat_var "choose" (lib/AtomicBitSet.ml[201,5255+4]..[201,5255+10])
        expression (lib/AtomicBitSet.ml[202,5268+2]..[202,5268+9])
          Pexp_ident "minimum" (lib/AtomicBitSet.ml[202,5268+2]..[202,5268+9])
    ]
  structure_item (lib/AtomicBitSet.ml[204,5279+0]..[205,5309+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[204,5279+4]..[204,5279+27]) ghost
          Ppat_constraint
          pattern (lib/AtomicBitSet.ml[204,5279+4]..[204,5279+11])
            Ppat_var "compare" (lib/AtomicBitSet.ml[204,5279+4]..[204,5279+11])
          core_type (lib/AtomicBitSet.ml[204,5279+14]..[204,5279+27]) ghost
            Ptyp_poly
            core_type (lib/AtomicBitSet.ml[204,5279+14]..[204,5279+27])
              Ptyp_arrow
              Nolabel
              core_type (lib/AtomicBitSet.ml[204,5279+14]..[204,5279+15])
                Ptyp_constr "t" (lib/AtomicBitSet.ml[204,5279+14]..[204,5279+15])
                []
              core_type (lib/AtomicBitSet.ml[204,5279+19]..[204,5279+27])
                Ptyp_arrow
                Nolabel
                core_type (lib/AtomicBitSet.ml[204,5279+19]..[204,5279+20])
                  Ptyp_constr "t" (lib/AtomicBitSet.ml[204,5279+19]..[204,5279+20])
                  []
                core_type (lib/AtomicBitSet.ml[204,5279+24]..[204,5279+27])
                  Ptyp_constr "int" (lib/AtomicBitSet.ml[204,5279+24]..[204,5279+27])
                  []
        expression (lib/AtomicBitSet.ml[204,5279+4]..[205,5309+9])
          Pexp_constraint
          expression (lib/AtomicBitSet.ml[205,5309+2]..[205,5309+9])
            Pexp_ident "compare" (lib/AtomicBitSet.ml[205,5309+2]..[205,5309+9])
          core_type (lib/AtomicBitSet.ml[204,5279+14]..[204,5279+27])
            Ptyp_arrow
            Nolabel
            core_type (lib/AtomicBitSet.ml[204,5279+14]..[204,5279+15])
              Ptyp_constr "t" (lib/AtomicBitSet.ml[204,5279+14]..[204,5279+15])
              []
            core_type (lib/AtomicBitSet.ml[204,5279+19]..[204,5279+27])
              Ptyp_arrow
              Nolabel
              core_type (lib/AtomicBitSet.ml[204,5279+19]..[204,5279+20])
                Ptyp_constr "t" (lib/AtomicBitSet.ml[204,5279+19]..[204,5279+20])
                []
              core_type (lib/AtomicBitSet.ml[204,5279+24]..[204,5279+27])
                Ptyp_constr "int" (lib/AtomicBitSet.ml[204,5279+24]..[204,5279+27])
                []
    ]
  structure_item (lib/AtomicBitSet.ml[207,5352+0]..[208,5381+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[207,5352+4]..[207,5352+26]) ghost
          Ppat_constraint
          pattern (lib/AtomicBitSet.ml[207,5352+4]..[207,5352+9])
            Ppat_var "equal" (lib/AtomicBitSet.ml[207,5352+4]..[207,5352+9])
          core_type (lib/AtomicBitSet.ml[207,5352+12]..[207,5352+26]) ghost
            Ptyp_poly
            core_type (lib/AtomicBitSet.ml[207,5352+12]..[207,5352+26])
              Ptyp_arrow
              Nolabel
              core_type (lib/AtomicBitSet.ml[207,5352+12]..[207,5352+13])
                Ptyp_constr "t" (lib/AtomicBitSet.ml[207,5352+12]..[207,5352+13])
                []
              core_type (lib/AtomicBitSet.ml[207,5352+17]..[207,5352+26])
                Ptyp_arrow
                Nolabel
                core_type (lib/AtomicBitSet.ml[207,5352+17]..[207,5352+18])
                  Ptyp_constr "t" (lib/AtomicBitSet.ml[207,5352+17]..[207,5352+18])
                  []
                core_type (lib/AtomicBitSet.ml[207,5352+22]..[207,5352+26])
                  Ptyp_constr "bool" (lib/AtomicBitSet.ml[207,5352+22]..[207,5352+26])
                  []
        expression (lib/AtomicBitSet.ml[207,5352+4]..[208,5381+5])
          Pexp_constraint
          expression (lib/AtomicBitSet.ml[208,5381+2]..[208,5381+5])
            Pexp_ident "=" (lib/AtomicBitSet.ml[208,5381+2]..[208,5381+5])
          core_type (lib/AtomicBitSet.ml[207,5352+12]..[207,5352+26])
            Ptyp_arrow
            Nolabel
            core_type (lib/AtomicBitSet.ml[207,5352+12]..[207,5352+13])
              Ptyp_constr "t" (lib/AtomicBitSet.ml[207,5352+12]..[207,5352+13])
              []
            core_type (lib/AtomicBitSet.ml[207,5352+17]..[207,5352+26])
              Ptyp_arrow
              Nolabel
              core_type (lib/AtomicBitSet.ml[207,5352+17]..[207,5352+18])
                Ptyp_constr "t" (lib/AtomicBitSet.ml[207,5352+17]..[207,5352+18])
                []
              core_type (lib/AtomicBitSet.ml[207,5352+22]..[207,5352+26])
                Ptyp_constr "bool" (lib/AtomicBitSet.ml[207,5352+22]..[207,5352+26])
                []
    ]
  structure_item (lib/AtomicBitSet.ml[210,5388+0]..[211,5409+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[210,5388+4]..[210,5388+12])
          Ppat_var "disjoint" (lib/AtomicBitSet.ml[210,5388+4]..[210,5388+12])
        expression (lib/AtomicBitSet.ml[210,5388+13]..[211,5409+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/AtomicBitSet.ml[210,5388+13]..[210,5388+15])
            Ppat_var "s1" (lib/AtomicBitSet.ml[210,5388+13]..[210,5388+15])
          expression (lib/AtomicBitSet.ml[210,5388+16]..[211,5409+24]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/AtomicBitSet.ml[210,5388+16]..[210,5388+18])
              Ppat_var "s2" (lib/AtomicBitSet.ml[210,5388+16]..[210,5388+18])
            expression (lib/AtomicBitSet.ml[211,5409+2]..[211,5409+24])
              Pexp_apply
              expression (lib/AtomicBitSet.ml[211,5409+2]..[211,5409+10])
                Pexp_ident "is_empty" (lib/AtomicBitSet.ml[211,5409+2]..[211,5409+10])
              [
                <arg>
                Nolabel
                  expression (lib/AtomicBitSet.ml[211,5409+11]..[211,5409+24])
                    Pexp_apply
                    expression (lib/AtomicBitSet.ml[211,5409+12]..[211,5409+17])
                      Pexp_ident "inter" (lib/AtomicBitSet.ml[211,5409+12]..[211,5409+17])
                    [
                      <arg>
                      Nolabel
                        expression (lib/AtomicBitSet.ml[211,5409+18]..[211,5409+20])
                          Pexp_ident "s1" (lib/AtomicBitSet.ml[211,5409+18]..[211,5409+20])
                      <arg>
                      Nolabel
                        expression (lib/AtomicBitSet.ml[211,5409+21]..[211,5409+23])
                          Pexp_ident "s2" (lib/AtomicBitSet.ml[211,5409+21]..[211,5409+23])
                    ]
              ]
    ]
  structure_item (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
          Ppat_construct "()" (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
          None
        expression (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
          Pexp_apply
          expression (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
            Pexp_ident "Ppx_inline_test_lib.unset_lib" (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
          [
            <arg>
            Nolabel
              expression (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost,None)
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
          Ppat_construct "()" (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
          None
        expression (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
          Pexp_apply
          expression (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
            Pexp_ident "Expect_test_collector.Current_file.unset" (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
          [
            <arg>
            Nolabel
              expression (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
                Pexp_construct "()" (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
                None
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
          Ppat_construct "()" (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
          None
        expression (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
          Pexp_apply
          expression (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
            Pexp_ident "Ppx_bench_lib.Benchmark_accumulator.Current_libname.unset" (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
          [
            <arg>
            Nolabel
              expression (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
                Pexp_construct "()" (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
                None
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
          Ppat_construct "()" (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
          None
        expression (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
          Pexp_apply
          expression (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
            Pexp_ident "Ppx_module_timer_runtime.record_until" (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
          [
            <arg>
            Nolabel
              expression (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
                Pexp_ident "Ppx_module_timer_runtime.__MODULE__" (lib/AtomicBitSet.ml[211,5409+24]..[211,5409+24]) ghost
          ]
    ]
]

[@@@ocaml.ppx.context
  {
    tool_name = "ppx_driver";
    include_dirs = [];
    load_path = [];
    open_modules = [];
    for_package = None;
    debug = false;
    use_threads = false;
    use_vmthreads = false;
    recursive_types = false;
    principal = false;
    transparent_modules = false;
    unboxed_types = false;
    unsafe_string = false;
    cookies = [("inline_tests", "enabled"); ("library-name", "gbnf_parser")]
  }]
let () =
  Ppx_module_timer_runtime.record_start Ppx_module_timer_runtime.__MODULE__
let () =
  Ppx_bench_lib.Benchmark_accumulator.Current_libname.set "gbnf_parser"
let () =
  Expect_test_collector.Current_file.set
    ~absolute_filename:"lib/AtomicBitSet.ml"
let () =
  Ppx_inline_test_lib.set_lib_and_partition "gbnf_parser" "AtomicBitSet.ml"
type t = int
type element = int
let bound = Sys.word_size - 1
let bit i = assert ((0 <= i) && (i < bound)); 1 lsl i
let log2 = Array.make 255 0
let () = for i = 0 to 7 do log2.(bit i) <- i done
let tib16 accu x =
  if (x land 0xFF) = 0
  then (accu + 8) + (log2.(x lsr 8))
  else accu + (log2.(x))
let tib32 accu x =
  if (x land 0xFFFF) = 0 then tib16 (accu + 16) (x lsr 16) else tib16 accu x
let ffffffff = (0xffff lsl 16) lor 0xffff
let tib64 x =
  if (x land ffffffff) = 0 then tib32 32 (x lsr 32) else tib32 0 x
let tib x =
  match Sys.word_size with
  | 32 -> tib32 0 x
  | 64 -> tib64 x
  | _ -> assert false
let () = for i = 0 to bound - 1 do assert ((tib (bit i)) = i) done
let b0 = 0x55555555
let b1 = 0x33333333
let b2 = 0xf0f0f0f
let pop32 x =
  let x = x - ((x lsr 1) land b0) in
  let x = (x land b1) + ((x lsr 2) land b1) in
  let x = (x land b2) + ((x lsr 4) land b2) in
  let x = x + (x lsr 8) in let x = x + (x lsr 16) in x land 0xff
let pop64 x = (pop32 x) + (pop32 (x lsr 32))
let pop x =
  match Sys.word_size with
  | 32 -> pop32 x
  | 64 -> pop64 x
  | _ -> assert false
let empty = 0
let is_empty s = s = 0
let singleton = bit
let add i s = (bit i) lor s
let remove i s = (lnot (bit i)) land s
let rec fold_delta delta f s accu =
  if s = 0
  then accu
  else
    (let x = s land (- s) in
     let s = s lxor x in
     let accu = f (delta + (tib x)) accu in fold_delta delta f s accu)
let rec iter_delta delta f s =
  if s <> 0
  then
    let x = s land (- s) in
    let s = s lxor x in (f (delta + (tib x)); iter_delta delta f s)
let rec fold f s accu =
  if s = 0
  then accu
  else
    (let x = s land (- s) in
     let s = s lxor x in let accu = f (tib x) accu in fold f s accu)
let rec iter f s =
  if s <> 0
  then let x = s land (- s) in let s = s lxor x in (f (tib x); iter f s)
let is_singleton s = (s land (s - 1)) = 0
let cardinal s = pop s
let elements s = fold (fun tl -> fun hd -> tl :: hd) s []
let subset s1 s2 = (s1 land s2) = s1
let mem i s = subset (singleton i) s
let union s1 s2 = s1 lor s2
let inter s1 s2 = s1 land s2
let minimum s =
  if s = 0 then raise Not_found else (let x = s land (- s) in tib x)
let choose = minimum
let compare : t -> t -> int = compare
let equal : t -> t -> bool = (=)
let disjoint s1 s2 = is_empty (inter s1 s2)
let () = Ppx_inline_test_lib.unset_lib "gbnf_parser"
let () = Expect_test_collector.Current_file.unset ()
let () = Ppx_bench_lib.Benchmark_accumulator.Current_libname.unset ()
let () =
  Ppx_module_timer_runtime.record_until Ppx_module_timer_runtime.__MODULE__
[
  structure_item (_none_[0,0+-1].._none_[0,0+-1]) ghost
    Tstr_attribute "ocaml.ppx.context"
    [
      structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
        Pstr_eval
        expression (_none_[0,0+-1]..[0,0+-1]) ghost
          Pexp_record
          [
            "tool_name" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_constant PConst_string("ppx_driver",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
            "include_dirs" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "load_path" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "open_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "for_package" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "None" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "debug" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_threads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_vmthreads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "recursive_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "principal" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "transparent_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unboxed_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unsafe_string" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "cookies" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                Some
                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                    Pexp_tuple
                    [
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_tuple
                        [
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_constant PConst_string("inline_tests",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                          expression (<command-line>[1,0+0]..[1,0+9])
                            Pexp_constant PConst_string("enabled",(<command-line>[1,0+1]..[1,0+8]),None)
                        ]
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                        Some
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_tuple
                            [
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_tuple
                                [
                                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                    Pexp_constant PConst_string("library-name",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                                  expression (<command-line>[1,0+0]..[1,0+13])
                                    Pexp_constant PConst_string("gbnf_parser",(<command-line>[1,0+1]..[1,0+12]),None)
                                ]
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                                None
                            ]
                    ]
          ]
          None
    ]
  structure_item (lib/AtomicBitSet.ml[18,1194+0]..lib/AtomicBitSet.ml[18,1194+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[18,1194+0]..lib/AtomicBitSet.ml[18,1194+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/AtomicBitSet.ml[18,1194+0]..lib/AtomicBitSet.ml[18,1194+0]) ghost
          Texp_apply
          expression (lib/AtomicBitSet.ml[18,1194+0]..lib/AtomicBitSet.ml[18,1194+0]) ghost
            Texp_ident "Ppx_module_timer_runtime!.record_start"
          [
            <arg>
              Nolabel
              expression (lib/AtomicBitSet.ml[18,1194+0]..lib/AtomicBitSet.ml[18,1194+0]) ghost
                Texp_ident "Ppx_module_timer_runtime!.__MODULE__"
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[18,1194+0]..lib/AtomicBitSet.ml[18,1194+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[18,1194+0]..lib/AtomicBitSet.ml[18,1194+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/AtomicBitSet.ml[18,1194+0]..lib/AtomicBitSet.ml[18,1194+0]) ghost
          Texp_apply
          expression (lib/AtomicBitSet.ml[18,1194+0]..lib/AtomicBitSet.ml[18,1194+0]) ghost
            Texp_ident "Ppx_bench_lib!.Benchmark_accumulator.Current_libname.set"
          [
            <arg>
              Nolabel
              expression (lib/AtomicBitSet.ml[18,1194+0]..lib/AtomicBitSet.ml[18,1194+0]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/AtomicBitSet.ml[18,1194+0]..lib/AtomicBitSet.ml[18,1194+0]) ghost,None)
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[18,1194+0]..lib/AtomicBitSet.ml[18,1194+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[18,1194+0]..lib/AtomicBitSet.ml[18,1194+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/AtomicBitSet.ml[18,1194+0]..lib/AtomicBitSet.ml[18,1194+0]) ghost
          Texp_apply
          expression (lib/AtomicBitSet.ml[18,1194+0]..lib/AtomicBitSet.ml[18,1194+0]) ghost
            Texp_ident "Expect_test_collector!.Current_file.set"
          [
            <arg>
              Labelled "absolute_filename"
              expression (lib/AtomicBitSet.ml[18,1194+0]..lib/AtomicBitSet.ml[18,1194+0]) ghost
                Texp_constant Const_string("lib/AtomicBitSet.ml",(lib/AtomicBitSet.ml[18,1194+0]..lib/AtomicBitSet.ml[18,1194+0]) ghost,None)
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[18,1194+0]..lib/AtomicBitSet.ml[18,1194+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[18,1194+0]..lib/AtomicBitSet.ml[18,1194+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/AtomicBitSet.ml[18,1194+0]..lib/AtomicBitSet.ml[18,1194+0]) ghost
          Texp_apply
          expression (lib/AtomicBitSet.ml[18,1194+0]..lib/AtomicBitSet.ml[18,1194+0]) ghost
            Texp_ident "Ppx_inline_test_lib!.set_lib_and_partition"
          [
            <arg>
              Nolabel
              expression (lib/AtomicBitSet.ml[18,1194+0]..lib/AtomicBitSet.ml[18,1194+0]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/AtomicBitSet.ml[18,1194+0]..lib/AtomicBitSet.ml[18,1194+0]) ghost,None)
            <arg>
              Nolabel
              expression (lib/AtomicBitSet.ml[18,1194+0]..lib/AtomicBitSet.ml[18,1194+0]) ghost
                Texp_constant Const_string("AtomicBitSet.ml",(lib/AtomicBitSet.ml[18,1194+0]..lib/AtomicBitSet.ml[18,1194+0]) ghost,None)
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[18,1194+0]..lib/AtomicBitSet.ml[19,1203+5])
    Tstr_type Rec
    [
      type_declaration t/1128 (lib/AtomicBitSet.ml[18,1194+0]..lib/AtomicBitSet.ml[19,1203+5])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/AtomicBitSet.ml[19,1203+2]..lib/AtomicBitSet.ml[19,1203+5])
              Ttyp_constr "int/1!"
              []
    ]
  structure_item (lib/AtomicBitSet.ml[21,1210+0]..lib/AtomicBitSet.ml[22,1225+5])
    Tstr_type Rec
    [
      type_declaration element/1129 (lib/AtomicBitSet.ml[21,1210+0]..lib/AtomicBitSet.ml[22,1225+5])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/AtomicBitSet.ml[22,1225+2]..lib/AtomicBitSet.ml[22,1225+5])
              Ttyp_constr "int/1!"
              []
    ]
  structure_item (lib/AtomicBitSet.ml[24,1232+0]..lib/AtomicBitSet.ml[25,1244+19])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[24,1232+4]..lib/AtomicBitSet.ml[24,1232+9])
          Tpat_var "bound/1130"
        expression (lib/AtomicBitSet.ml[25,1244+2]..lib/AtomicBitSet.ml[25,1244+19])
          Texp_apply
          expression (lib/AtomicBitSet.ml[25,1244+16]..lib/AtomicBitSet.ml[25,1244+17])
            Texp_ident "Stdlib!.-"
          [
            <arg>
              Nolabel
              expression (lib/AtomicBitSet.ml[25,1244+2]..lib/AtomicBitSet.ml[25,1244+15])
                Texp_ident "Stdlib!.Sys.word_size"
            <arg>
              Nolabel
              expression (lib/AtomicBitSet.ml[25,1244+18]..lib/AtomicBitSet.ml[25,1244+19])
                Texp_constant Const_int 1
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[31,1372+0]..lib/AtomicBitSet.ml[33,1416+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[31,1372+4]..lib/AtomicBitSet.ml[31,1372+7])
          Tpat_var "bit/1204"
        expression (lib/AtomicBitSet.ml[31,1372+8]..lib/AtomicBitSet.ml[33,1416+9]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/AtomicBitSet.ml[31,1372+8]..lib/AtomicBitSet.ml[31,1372+9])
                Tpat_var "i/1206"
              expression (lib/AtomicBitSet.ml[32,1384+2]..lib/AtomicBitSet.ml[33,1416+9])
                Texp_sequence
                expression (lib/AtomicBitSet.ml[32,1384+2]..lib/AtomicBitSet.ml[32,1384+30])
                  Texp_assert                  expression (lib/AtomicBitSet.ml[32,1384+9]..lib/AtomicBitSet.ml[32,1384+30])
                    Texp_apply
                    expression (lib/AtomicBitSet.ml[32,1384+17]..lib/AtomicBitSet.ml[32,1384+19])
                      Texp_ident "Stdlib!.&&"
                    [
                      <arg>
                        Nolabel
                        expression (lib/AtomicBitSet.ml[32,1384+10]..lib/AtomicBitSet.ml[32,1384+16])
                          Texp_apply
                          expression (lib/AtomicBitSet.ml[32,1384+12]..lib/AtomicBitSet.ml[32,1384+14])
                            Texp_ident "Stdlib!.<="
                          [
                            <arg>
                              Nolabel
                              expression (lib/AtomicBitSet.ml[32,1384+10]..lib/AtomicBitSet.ml[32,1384+11])
                                Texp_constant Const_int 0
                            <arg>
                              Nolabel
                              expression (lib/AtomicBitSet.ml[32,1384+15]..lib/AtomicBitSet.ml[32,1384+16])
                                Texp_ident "i/1206"
                          ]
                      <arg>
                        Nolabel
                        expression (lib/AtomicBitSet.ml[32,1384+20]..lib/AtomicBitSet.ml[32,1384+29])
                          Texp_apply
                          expression (lib/AtomicBitSet.ml[32,1384+22]..lib/AtomicBitSet.ml[32,1384+23])
                            Texp_ident "Stdlib!.<"
                          [
                            <arg>
                              Nolabel
                              expression (lib/AtomicBitSet.ml[32,1384+20]..lib/AtomicBitSet.ml[32,1384+21])
                                Texp_ident "i/1206"
                            <arg>
                              Nolabel
                              expression (lib/AtomicBitSet.ml[32,1384+24]..lib/AtomicBitSet.ml[32,1384+29])
                                Texp_ident "bound/1130"
                          ]
                    ]
                expression (lib/AtomicBitSet.ml[33,1416+2]..lib/AtomicBitSet.ml[33,1416+9])
                  Texp_apply
                  expression (lib/AtomicBitSet.ml[33,1416+4]..lib/AtomicBitSet.ml[33,1416+7])
                    Texp_ident "Stdlib!.lsl"
                  [
                    <arg>
                      Nolabel
                      expression (lib/AtomicBitSet.ml[33,1416+2]..lib/AtomicBitSet.ml[33,1416+3])
                        Texp_constant Const_int 1
                    <arg>
                      Nolabel
                      expression (lib/AtomicBitSet.ml[33,1416+8]..lib/AtomicBitSet.ml[33,1416+9])
                        Texp_ident "i/1206"
                  ]
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[46,1906+0]..lib/AtomicBitSet.ml[47,1917+18])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[46,1906+4]..lib/AtomicBitSet.ml[46,1906+8])
          Tpat_var "log2/1207"
        expression (lib/AtomicBitSet.ml[47,1917+2]..lib/AtomicBitSet.ml[47,1917+18])
          Texp_apply
          expression (lib/AtomicBitSet.ml[47,1917+2]..lib/AtomicBitSet.ml[47,1917+12])
            Texp_ident "Stdlib!.Array.make"
          [
            <arg>
              Nolabel
              expression (lib/AtomicBitSet.ml[47,1917+13]..lib/AtomicBitSet.ml[47,1917+16])
                Texp_constant Const_int 255
            <arg>
              Nolabel
              expression (lib/AtomicBitSet.ml[47,1917+17]..lib/AtomicBitSet.ml[47,1917+18])
                Texp_constant Const_int 0
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[48,1936+0]..lib/AtomicBitSet.ml[49,1945+42])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[48,1936+4]..lib/AtomicBitSet.ml[48,1936+6])
          Tpat_construct "()"
          []
          None
        expression (lib/AtomicBitSet.ml[49,1945+2]..lib/AtomicBitSet.ml[49,1945+42])
          Texp_for "i/1255" Up
          expression (lib/AtomicBitSet.ml[49,1945+10]..lib/AtomicBitSet.ml[49,1945+11])
            Texp_constant Const_int 0
          expression (lib/AtomicBitSet.ml[49,1945+15]..lib/AtomicBitSet.ml[49,1945+16])
            Texp_constant Const_int 7
          expression (lib/AtomicBitSet.ml[49,1945+20]..lib/AtomicBitSet.ml[49,1945+37])
            Texp_apply
            expression (lib/AtomicBitSet.ml[49,1945+20]..lib/AtomicBitSet.ml[49,1945+37]) ghost
              Texp_ident "Stdlib!.Array.set"
            [
              <arg>
                Nolabel
                expression (lib/AtomicBitSet.ml[49,1945+20]..lib/AtomicBitSet.ml[49,1945+24])
                  Texp_ident "log2/1207"
              <arg>
                Nolabel
                expression (lib/AtomicBitSet.ml[49,1945+26]..lib/AtomicBitSet.ml[49,1945+31])
                  Texp_apply
                  expression (lib/AtomicBitSet.ml[49,1945+26]..lib/AtomicBitSet.ml[49,1945+29])
                    Texp_ident "bit/1204"
                  [
                    <arg>
                      Nolabel
                      expression (lib/AtomicBitSet.ml[49,1945+30]..lib/AtomicBitSet.ml[49,1945+31])
                        Texp_ident "i/1255"
                  ]
              <arg>
                Nolabel
                expression (lib/AtomicBitSet.ml[49,1945+36]..lib/AtomicBitSet.ml[49,1945+37])
                  Texp_ident "i/1255"
            ]
    ]
  structure_item (lib/AtomicBitSet.ml[51,1989+0]..lib/AtomicBitSet.ml[55,2071+19])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[51,1989+4]..lib/AtomicBitSet.ml[51,1989+9])
          Tpat_var "tib16/1256"
        expression (lib/AtomicBitSet.ml[51,1989+10]..lib/AtomicBitSet.ml[55,2071+19]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/AtomicBitSet.ml[51,1989+10]..lib/AtomicBitSet.ml[51,1989+14])
                Tpat_var "accu/1258"
              expression (lib/AtomicBitSet.ml[51,1989+15]..lib/AtomicBitSet.ml[55,2071+19]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/AtomicBitSet.ml[51,1989+15]..lib/AtomicBitSet.ml[51,1989+16])
                      Tpat_var "x/1259"
                    expression (lib/AtomicBitSet.ml[52,2008+2]..lib/AtomicBitSet.ml[55,2071+19])
                      Texp_ifthenelse
                      expression (lib/AtomicBitSet.ml[52,2008+5]..lib/AtomicBitSet.ml[52,2008+20])
                        Texp_apply
                        expression (lib/AtomicBitSet.ml[52,2008+17]..lib/AtomicBitSet.ml[52,2008+18])
                          Texp_ident "Stdlib!.="
                        [
                          <arg>
                            Nolabel
                            expression (lib/AtomicBitSet.ml[52,2008+5]..lib/AtomicBitSet.ml[52,2008+16])
                              Texp_apply
                              expression (lib/AtomicBitSet.ml[52,2008+7]..lib/AtomicBitSet.ml[52,2008+11])
                                Texp_ident "Stdlib!.land"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/AtomicBitSet.ml[52,2008+5]..lib/AtomicBitSet.ml[52,2008+6])
                                    Texp_ident "x/1259"
                                <arg>
                                  Nolabel
                                  expression (lib/AtomicBitSet.ml[52,2008+12]..lib/AtomicBitSet.ml[52,2008+16])
                                    Texp_constant Const_int 255
                              ]
                          <arg>
                            Nolabel
                            expression (lib/AtomicBitSet.ml[52,2008+19]..lib/AtomicBitSet.ml[52,2008+20])
                              Texp_constant Const_int 0
                        ]
                      expression (lib/AtomicBitSet.ml[53,2034+4]..lib/AtomicBitSet.ml[53,2034+29])
                        Texp_apply
                        expression (lib/AtomicBitSet.ml[53,2034+13]..lib/AtomicBitSet.ml[53,2034+14])
                          Texp_ident "Stdlib!.+"
                        [
                          <arg>
                            Nolabel
                            expression (lib/AtomicBitSet.ml[53,2034+4]..lib/AtomicBitSet.ml[53,2034+12])
                              Texp_apply
                              expression (lib/AtomicBitSet.ml[53,2034+9]..lib/AtomicBitSet.ml[53,2034+10])
                                Texp_ident "Stdlib!.+"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/AtomicBitSet.ml[53,2034+4]..lib/AtomicBitSet.ml[53,2034+8])
                                    Texp_ident "accu/1258"
                                <arg>
                                  Nolabel
                                  expression (lib/AtomicBitSet.ml[53,2034+11]..lib/AtomicBitSet.ml[53,2034+12])
                                    Texp_constant Const_int 8
                              ]
                          <arg>
                            Nolabel
                            expression (lib/AtomicBitSet.ml[53,2034+15]..lib/AtomicBitSet.ml[53,2034+29])
                              Texp_apply
                              expression (lib/AtomicBitSet.ml[53,2034+15]..lib/AtomicBitSet.ml[53,2034+29]) ghost
                                Texp_ident "Stdlib!.Array.get"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/AtomicBitSet.ml[53,2034+15]..lib/AtomicBitSet.ml[53,2034+19])
                                    Texp_ident "log2/1207"
                                <arg>
                                  Nolabel
                                  expression (lib/AtomicBitSet.ml[53,2034+21]..lib/AtomicBitSet.ml[53,2034+28])
                                    Texp_apply
                                    expression (lib/AtomicBitSet.ml[53,2034+23]..lib/AtomicBitSet.ml[53,2034+26])
                                      Texp_ident "Stdlib!.lsr"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/AtomicBitSet.ml[53,2034+21]..lib/AtomicBitSet.ml[53,2034+22])
                                          Texp_ident "x/1259"
                                      <arg>
                                        Nolabel
                                        expression (lib/AtomicBitSet.ml[53,2034+27]..lib/AtomicBitSet.ml[53,2034+28])
                                          Texp_constant Const_int 8
                                    ]
                              ]
                        ]
                      Some
                        expression (lib/AtomicBitSet.ml[55,2071+4]..lib/AtomicBitSet.ml[55,2071+19])
                          Texp_apply
                          expression (lib/AtomicBitSet.ml[55,2071+9]..lib/AtomicBitSet.ml[55,2071+10])
                            Texp_ident "Stdlib!.+"
                          [
                            <arg>
                              Nolabel
                              expression (lib/AtomicBitSet.ml[55,2071+4]..lib/AtomicBitSet.ml[55,2071+8])
                                Texp_ident "accu/1258"
                            <arg>
                              Nolabel
                              expression (lib/AtomicBitSet.ml[55,2071+11]..lib/AtomicBitSet.ml[55,2071+19])
                                Texp_apply
                                expression (lib/AtomicBitSet.ml[55,2071+11]..lib/AtomicBitSet.ml[55,2071+19]) ghost
                                  Texp_ident "Stdlib!.Array.get"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/AtomicBitSet.ml[55,2071+11]..lib/AtomicBitSet.ml[55,2071+15])
                                      Texp_ident "log2/1207"
                                  <arg>
                                    Nolabel
                                    expression (lib/AtomicBitSet.ml[55,2071+17]..lib/AtomicBitSet.ml[55,2071+18])
                                      Texp_ident "x/1259"
                                ]
                          ]
                ]
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[57,2092+0]..lib/AtomicBitSet.ml[61,2179+16])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[57,2092+4]..lib/AtomicBitSet.ml[57,2092+9])
          Tpat_var "tib32/1260"
        expression (lib/AtomicBitSet.ml[57,2092+10]..lib/AtomicBitSet.ml[61,2179+16]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/AtomicBitSet.ml[57,2092+10]..lib/AtomicBitSet.ml[57,2092+14])
                Tpat_var "accu/1262"
              expression (lib/AtomicBitSet.ml[57,2092+15]..lib/AtomicBitSet.ml[61,2179+16]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/AtomicBitSet.ml[57,2092+15]..lib/AtomicBitSet.ml[57,2092+16])
                      Tpat_var "x/1263"
                    expression (lib/AtomicBitSet.ml[58,2111+2]..lib/AtomicBitSet.ml[61,2179+16])
                      Texp_ifthenelse
                      expression (lib/AtomicBitSet.ml[58,2111+5]..lib/AtomicBitSet.ml[58,2111+22])
                        Texp_apply
                        expression (lib/AtomicBitSet.ml[58,2111+19]..lib/AtomicBitSet.ml[58,2111+20])
                          Texp_ident "Stdlib!.="
                        [
                          <arg>
                            Nolabel
                            expression (lib/AtomicBitSet.ml[58,2111+5]..lib/AtomicBitSet.ml[58,2111+18])
                              Texp_apply
                              expression (lib/AtomicBitSet.ml[58,2111+7]..lib/AtomicBitSet.ml[58,2111+11])
                                Texp_ident "Stdlib!.land"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/AtomicBitSet.ml[58,2111+5]..lib/AtomicBitSet.ml[58,2111+6])
                                    Texp_ident "x/1263"
                                <arg>
                                  Nolabel
                                  expression (lib/AtomicBitSet.ml[58,2111+12]..lib/AtomicBitSet.ml[58,2111+18])
                                    Texp_constant Const_int 65535
                              ]
                          <arg>
                            Nolabel
                            expression (lib/AtomicBitSet.ml[58,2111+21]..lib/AtomicBitSet.ml[58,2111+22])
                              Texp_constant Const_int 0
                        ]
                      expression (lib/AtomicBitSet.ml[59,2139+4]..lib/AtomicBitSet.ml[59,2139+32])
                        Texp_apply
                        expression (lib/AtomicBitSet.ml[59,2139+4]..lib/AtomicBitSet.ml[59,2139+9])
                          Texp_ident "tib16/1256"
                        [
                          <arg>
                            Nolabel
                            expression (lib/AtomicBitSet.ml[59,2139+10]..lib/AtomicBitSet.ml[59,2139+21])
                              Texp_apply
                              expression (lib/AtomicBitSet.ml[59,2139+16]..lib/AtomicBitSet.ml[59,2139+17])
                                Texp_ident "Stdlib!.+"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/AtomicBitSet.ml[59,2139+11]..lib/AtomicBitSet.ml[59,2139+15])
                                    Texp_ident "accu/1262"
                                <arg>
                                  Nolabel
                                  expression (lib/AtomicBitSet.ml[59,2139+18]..lib/AtomicBitSet.ml[59,2139+20])
                                    Texp_constant Const_int 16
                              ]
                          <arg>
                            Nolabel
                            expression (lib/AtomicBitSet.ml[59,2139+22]..lib/AtomicBitSet.ml[59,2139+32])
                              Texp_apply
                              expression (lib/AtomicBitSet.ml[59,2139+25]..lib/AtomicBitSet.ml[59,2139+28])
                                Texp_ident "Stdlib!.lsr"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/AtomicBitSet.ml[59,2139+23]..lib/AtomicBitSet.ml[59,2139+24])
                                    Texp_ident "x/1263"
                                <arg>
                                  Nolabel
                                  expression (lib/AtomicBitSet.ml[59,2139+29]..lib/AtomicBitSet.ml[59,2139+31])
                                    Texp_constant Const_int 16
                              ]
                        ]
                      Some
                        expression (lib/AtomicBitSet.ml[61,2179+4]..lib/AtomicBitSet.ml[61,2179+16])
                          Texp_apply
                          expression (lib/AtomicBitSet.ml[61,2179+4]..lib/AtomicBitSet.ml[61,2179+9])
                            Texp_ident "tib16/1256"
                          [
                            <arg>
                              Nolabel
                              expression (lib/AtomicBitSet.ml[61,2179+10]..lib/AtomicBitSet.ml[61,2179+14])
                                Texp_ident "accu/1262"
                            <arg>
                              Nolabel
                              expression (lib/AtomicBitSet.ml[61,2179+15]..lib/AtomicBitSet.ml[61,2179+16])
                                Texp_ident "x/1263"
                          ]
                ]
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[63,2197+0]..lib/AtomicBitSet.ml[64,2212+28])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[63,2197+4]..lib/AtomicBitSet.ml[63,2197+12])
          Tpat_var "ffffffff/1264"
        expression (lib/AtomicBitSet.ml[64,2212+2]..lib/AtomicBitSet.ml[64,2212+28])
          Texp_apply
          expression (lib/AtomicBitSet.ml[64,2212+18]..lib/AtomicBitSet.ml[64,2212+21])
            Texp_ident "Stdlib!.lor"
          [
            <arg>
              Nolabel
              expression (lib/AtomicBitSet.ml[64,2212+2]..lib/AtomicBitSet.ml[64,2212+17])
                Texp_apply
                expression (lib/AtomicBitSet.ml[64,2212+10]..lib/AtomicBitSet.ml[64,2212+13])
                  Texp_ident "Stdlib!.lsl"
                [
                  <arg>
                    Nolabel
                    expression (lib/AtomicBitSet.ml[64,2212+3]..lib/AtomicBitSet.ml[64,2212+9])
                      Texp_constant Const_int 65535
                  <arg>
                    Nolabel
                    expression (lib/AtomicBitSet.ml[64,2212+14]..lib/AtomicBitSet.ml[64,2212+16])
                      Texp_constant Const_int 16
                ]
            <arg>
              Nolabel
              expression (lib/AtomicBitSet.ml[64,2212+22]..lib/AtomicBitSet.ml[64,2212+28])
                Texp_constant Const_int 65535
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[68,2371+0]..lib/AtomicBitSet.ml[72,2446+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[68,2371+4]..lib/AtomicBitSet.ml[68,2371+9])
          Tpat_var "tib64/1265"
        expression (lib/AtomicBitSet.ml[68,2371+10]..lib/AtomicBitSet.ml[72,2446+13]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/AtomicBitSet.ml[68,2371+10]..lib/AtomicBitSet.ml[68,2371+11])
                Tpat_var "x/1267"
              expression (lib/AtomicBitSet.ml[69,2385+2]..lib/AtomicBitSet.ml[72,2446+13])
                Texp_ifthenelse
                expression (lib/AtomicBitSet.ml[69,2385+5]..lib/AtomicBitSet.ml[69,2385+24])
                  Texp_apply
                  expression (lib/AtomicBitSet.ml[69,2385+21]..lib/AtomicBitSet.ml[69,2385+22])
                    Texp_ident "Stdlib!.="
                  [
                    <arg>
                      Nolabel
                      expression (lib/AtomicBitSet.ml[69,2385+5]..lib/AtomicBitSet.ml[69,2385+20])
                        Texp_apply
                        expression (lib/AtomicBitSet.ml[69,2385+7]..lib/AtomicBitSet.ml[69,2385+11])
                          Texp_ident "Stdlib!.land"
                        [
                          <arg>
                            Nolabel
                            expression (lib/AtomicBitSet.ml[69,2385+5]..lib/AtomicBitSet.ml[69,2385+6])
                              Texp_ident "x/1267"
                          <arg>
                            Nolabel
                            expression (lib/AtomicBitSet.ml[69,2385+12]..lib/AtomicBitSet.ml[69,2385+20])
                              Texp_ident "ffffffff/1264"
                        ]
                    <arg>
                      Nolabel
                      expression (lib/AtomicBitSet.ml[69,2385+23]..lib/AtomicBitSet.ml[69,2385+24])
                        Texp_constant Const_int 0
                  ]
                expression (lib/AtomicBitSet.ml[70,2415+4]..lib/AtomicBitSet.ml[70,2415+23])
                  Texp_apply
                  expression (lib/AtomicBitSet.ml[70,2415+4]..lib/AtomicBitSet.ml[70,2415+9])
                    Texp_ident "tib32/1260"
                  [
                    <arg>
                      Nolabel
                      expression (lib/AtomicBitSet.ml[70,2415+10]..lib/AtomicBitSet.ml[70,2415+12])
                        Texp_constant Const_int 32
                    <arg>
                      Nolabel
                      expression (lib/AtomicBitSet.ml[70,2415+13]..lib/AtomicBitSet.ml[70,2415+23])
                        Texp_apply
                        expression (lib/AtomicBitSet.ml[70,2415+16]..lib/AtomicBitSet.ml[70,2415+19])
                          Texp_ident "Stdlib!.lsr"
                        [
                          <arg>
                            Nolabel
                            expression (lib/AtomicBitSet.ml[70,2415+14]..lib/AtomicBitSet.ml[70,2415+15])
                              Texp_ident "x/1267"
                          <arg>
                            Nolabel
                            expression (lib/AtomicBitSet.ml[70,2415+20]..lib/AtomicBitSet.ml[70,2415+22])
                              Texp_constant Const_int 32
                        ]
                  ]
                Some
                  expression (lib/AtomicBitSet.ml[72,2446+4]..lib/AtomicBitSet.ml[72,2446+13])
                    Texp_apply
                    expression (lib/AtomicBitSet.ml[72,2446+4]..lib/AtomicBitSet.ml[72,2446+9])
                      Texp_ident "tib32/1260"
                    [
                      <arg>
                        Nolabel
                        expression (lib/AtomicBitSet.ml[72,2446+10]..lib/AtomicBitSet.ml[72,2446+11])
                          Texp_constant Const_int 0
                      <arg>
                        Nolabel
                        expression (lib/AtomicBitSet.ml[72,2446+12]..lib/AtomicBitSet.ml[72,2446+13])
                          Texp_ident "x/1267"
                    ]
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[74,2461+0]..lib/AtomicBitSet.ml[78,2538+21])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[74,2461+4]..lib/AtomicBitSet.ml[74,2461+7])
          Tpat_var "tib/1268"
        expression (lib/AtomicBitSet.ml[74,2461+8]..lib/AtomicBitSet.ml[78,2538+21]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/AtomicBitSet.ml[74,2461+8]..lib/AtomicBitSet.ml[74,2461+9])
                Tpat_var "x/1270"
              expression (lib/AtomicBitSet.ml[75,2473+2]..lib/AtomicBitSet.ml[78,2538+21])
                Texp_match
                expression (lib/AtomicBitSet.ml[75,2473+8]..lib/AtomicBitSet.ml[75,2473+21])
                  Texp_ident "Stdlib!.Sys.word_size"
                [
                  <case>
                    pattern (lib/AtomicBitSet.ml[76,2500+4]..lib/AtomicBitSet.ml[76,2500+6])
                      Tpat_value
                      pattern (lib/AtomicBitSet.ml[76,2500+4]..lib/AtomicBitSet.ml[76,2500+6])
                        Tpat_constant Const_int 32
                    expression (lib/AtomicBitSet.ml[76,2500+10]..lib/AtomicBitSet.ml[76,2500+19])
                      Texp_apply
                      expression (lib/AtomicBitSet.ml[76,2500+10]..lib/AtomicBitSet.ml[76,2500+15])
                        Texp_ident "tib32/1260"
                      [
                        <arg>
                          Nolabel
                          expression (lib/AtomicBitSet.ml[76,2500+16]..lib/AtomicBitSet.ml[76,2500+17])
                            Texp_constant Const_int 0
                        <arg>
                          Nolabel
                          expression (lib/AtomicBitSet.ml[76,2500+18]..lib/AtomicBitSet.ml[76,2500+19])
                            Texp_ident "x/1270"
                      ]
                  <case>
                    pattern (lib/AtomicBitSet.ml[77,2520+4]..lib/AtomicBitSet.ml[77,2520+6])
                      Tpat_value
                      pattern (lib/AtomicBitSet.ml[77,2520+4]..lib/AtomicBitSet.ml[77,2520+6])
                        Tpat_constant Const_int 64
                    expression (lib/AtomicBitSet.ml[77,2520+10]..lib/AtomicBitSet.ml[77,2520+17])
                      Texp_apply
                      expression (lib/AtomicBitSet.ml[77,2520+10]..lib/AtomicBitSet.ml[77,2520+15])
                        Texp_ident "tib64/1265"
                      [
                        <arg>
                          Nolabel
                          expression (lib/AtomicBitSet.ml[77,2520+16]..lib/AtomicBitSet.ml[77,2520+17])
                            Texp_ident "x/1270"
                      ]
                  <case>
                    pattern (lib/AtomicBitSet.ml[78,2538+4]..lib/AtomicBitSet.ml[78,2538+5])
                      Tpat_value
                      pattern (lib/AtomicBitSet.ml[78,2538+4]..lib/AtomicBitSet.ml[78,2538+5])
                        Tpat_any
                    expression (lib/AtomicBitSet.ml[78,2538+9]..lib/AtomicBitSet.ml[78,2538+21])
                      Texp_assert                      expression (lib/AtomicBitSet.ml[78,2538+16]..lib/AtomicBitSet.ml[78,2538+21])
                        Texp_construct "false"
                        []
                ]
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[80,2561+0]..lib/AtomicBitSet.ml[82,2625+57])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[80,2561+4]..lib/AtomicBitSet.ml[80,2561+6])
          Tpat_construct "()"
          []
          None
        expression (lib/AtomicBitSet.ml[82,2625+2]..lib/AtomicBitSet.ml[82,2625+57])
          Texp_for "i/1271" Up
          expression (lib/AtomicBitSet.ml[82,2625+10]..lib/AtomicBitSet.ml[82,2625+11])
            Texp_constant Const_int 0
          expression (lib/AtomicBitSet.ml[82,2625+15]..lib/AtomicBitSet.ml[82,2625+24])
            Texp_apply
            expression (lib/AtomicBitSet.ml[82,2625+21]..lib/AtomicBitSet.ml[82,2625+22])
              Texp_ident "Stdlib!.-"
            [
              <arg>
                Nolabel
                expression (lib/AtomicBitSet.ml[82,2625+15]..lib/AtomicBitSet.ml[82,2625+20])
                  Texp_ident "bound/1130"
              <arg>
                Nolabel
                expression (lib/AtomicBitSet.ml[82,2625+23]..lib/AtomicBitSet.ml[82,2625+24])
                  Texp_constant Const_int 1
            ]
          expression (lib/AtomicBitSet.ml[82,2625+28]..lib/AtomicBitSet.ml[82,2625+52])
            Texp_assert            expression (lib/AtomicBitSet.ml[82,2625+35]..lib/AtomicBitSet.ml[82,2625+52])
              Texp_apply
              expression (lib/AtomicBitSet.ml[82,2625+48]..lib/AtomicBitSet.ml[82,2625+49])
                Texp_ident "Stdlib!.="
              [
                <arg>
                  Nolabel
                  expression (lib/AtomicBitSet.ml[82,2625+36]..lib/AtomicBitSet.ml[82,2625+47])
                    Texp_apply
                    expression (lib/AtomicBitSet.ml[82,2625+36]..lib/AtomicBitSet.ml[82,2625+39])
                      Texp_ident "tib/1268"
                    [
                      <arg>
                        Nolabel
                        expression (lib/AtomicBitSet.ml[82,2625+40]..lib/AtomicBitSet.ml[82,2625+47])
                          Texp_apply
                          expression (lib/AtomicBitSet.ml[82,2625+41]..lib/AtomicBitSet.ml[82,2625+44])
                            Texp_ident "bit/1204"
                          [
                            <arg>
                              Nolabel
                              expression (lib/AtomicBitSet.ml[82,2625+45]..lib/AtomicBitSet.ml[82,2625+46])
                                Texp_ident "i/1271"
                          ]
                    ]
                <arg>
                  Nolabel
                  expression (lib/AtomicBitSet.ml[82,2625+50]..lib/AtomicBitSet.ml[82,2625+51])
                    Texp_ident "i/1271"
              ]
    ]
  structure_item (lib/AtomicBitSet.ml[91,2931+0]..lib/AtomicBitSet.ml[91,2931+19])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[91,2931+4]..lib/AtomicBitSet.ml[91,2931+6])
          Tpat_var "b0/1272"
        expression (lib/AtomicBitSet.ml[91,2931+9]..lib/AtomicBitSet.ml[91,2931+19])
          Texp_constant Const_int 1431655765
    ]
  structure_item (lib/AtomicBitSet.ml[92,2951+0]..lib/AtomicBitSet.ml[92,2951+19])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[92,2951+4]..lib/AtomicBitSet.ml[92,2951+6])
          Tpat_var "b1/1273"
        expression (lib/AtomicBitSet.ml[92,2951+9]..lib/AtomicBitSet.ml[92,2951+19])
          Texp_constant Const_int 858993459
    ]
  structure_item (lib/AtomicBitSet.ml[93,2971+0]..lib/AtomicBitSet.ml[93,2971+18])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[93,2971+4]..lib/AtomicBitSet.ml[93,2971+6])
          Tpat_var "b2/1274"
        expression (lib/AtomicBitSet.ml[93,2971+9]..lib/AtomicBitSet.ml[93,2971+18])
          Texp_constant Const_int 252645135
    ]
  structure_item (lib/AtomicBitSet.ml[95,2991+0]..lib/AtomicBitSet.ml[105,3463+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[95,2991+4]..lib/AtomicBitSet.ml[95,2991+9])
          Tpat_var "pop32/1275"
        expression (lib/AtomicBitSet.ml[95,2991+10]..lib/AtomicBitSet.ml[105,3463+13]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/AtomicBitSet.ml[95,2991+10]..lib/AtomicBitSet.ml[95,2991+11])
                Tpat_var "x/1277"
              expression (lib/AtomicBitSet.ml[98,3141+2]..lib/AtomicBitSet.ml[105,3463+13])
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/AtomicBitSet.ml[98,3141+6]..lib/AtomicBitSet.ml[98,3141+7])
                      Tpat_var "x/1278"
                    expression (lib/AtomicBitSet.ml[98,3141+10]..lib/AtomicBitSet.ml[98,3141+39])
                      Texp_apply
                      expression (lib/AtomicBitSet.ml[98,3141+20]..lib/AtomicBitSet.ml[98,3141+21])
                        Texp_ident "Stdlib!.-"
                      [
                        <arg>
                          Nolabel
                          expression (lib/AtomicBitSet.ml[98,3141+10]..lib/AtomicBitSet.ml[98,3141+11])
                            Texp_ident "x/1277"
                        <arg>
                          Nolabel
                          expression (lib/AtomicBitSet.ml[98,3141+22]..lib/AtomicBitSet.ml[98,3141+39])
                            Texp_apply
                            expression (lib/AtomicBitSet.ml[98,3141+32]..lib/AtomicBitSet.ml[98,3141+36])
                              Texp_ident "Stdlib!.land"
                            [
                              <arg>
                                Nolabel
                                expression (lib/AtomicBitSet.ml[98,3141+22]..lib/AtomicBitSet.ml[98,3141+31])
                                  Texp_apply
                                  expression (lib/AtomicBitSet.ml[98,3141+25]..lib/AtomicBitSet.ml[98,3141+28])
                                    Texp_ident "Stdlib!.lsr"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/AtomicBitSet.ml[98,3141+23]..lib/AtomicBitSet.ml[98,3141+24])
                                        Texp_ident "x/1277"
                                    <arg>
                                      Nolabel
                                      expression (lib/AtomicBitSet.ml[98,3141+29]..lib/AtomicBitSet.ml[98,3141+30])
                                        Texp_constant Const_int 1
                                  ]
                              <arg>
                                Nolabel
                                expression (lib/AtomicBitSet.ml[98,3141+37]..lib/AtomicBitSet.ml[98,3141+39])
                                  Texp_ident "b0/1272"
                            ]
                      ]
                ]
                expression (lib/AtomicBitSet.ml[99,3184+2]..lib/AtomicBitSet.ml[105,3463+13])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (lib/AtomicBitSet.ml[99,3184+6]..lib/AtomicBitSet.ml[99,3184+7])
                        Tpat_var "x/1279"
                      expression (lib/AtomicBitSet.ml[99,3184+10]..lib/AtomicBitSet.ml[99,3184+39])
                        Texp_apply
                        expression (lib/AtomicBitSet.ml[99,3184+20]..lib/AtomicBitSet.ml[99,3184+21])
                          Texp_ident "Stdlib!.+"
                        [
                          <arg>
                            Nolabel
                            expression (lib/AtomicBitSet.ml[99,3184+10]..lib/AtomicBitSet.ml[99,3184+19])
                              Texp_apply
                              expression (lib/AtomicBitSet.ml[99,3184+12]..lib/AtomicBitSet.ml[99,3184+16])
                                Texp_ident "Stdlib!.land"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/AtomicBitSet.ml[99,3184+10]..lib/AtomicBitSet.ml[99,3184+11])
                                    Texp_ident "x/1278"
                                <arg>
                                  Nolabel
                                  expression (lib/AtomicBitSet.ml[99,3184+17]..lib/AtomicBitSet.ml[99,3184+19])
                                    Texp_ident "b1/1273"
                              ]
                          <arg>
                            Nolabel
                            expression (lib/AtomicBitSet.ml[99,3184+22]..lib/AtomicBitSet.ml[99,3184+39])
                              Texp_apply
                              expression (lib/AtomicBitSet.ml[99,3184+32]..lib/AtomicBitSet.ml[99,3184+36])
                                Texp_ident "Stdlib!.land"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/AtomicBitSet.ml[99,3184+22]..lib/AtomicBitSet.ml[99,3184+31])
                                    Texp_apply
                                    expression (lib/AtomicBitSet.ml[99,3184+25]..lib/AtomicBitSet.ml[99,3184+28])
                                      Texp_ident "Stdlib!.lsr"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/AtomicBitSet.ml[99,3184+23]..lib/AtomicBitSet.ml[99,3184+24])
                                          Texp_ident "x/1278"
                                      <arg>
                                        Nolabel
                                        expression (lib/AtomicBitSet.ml[99,3184+29]..lib/AtomicBitSet.ml[99,3184+30])
                                          Texp_constant Const_int 2
                                    ]
                                <arg>
                                  Nolabel
                                  expression (lib/AtomicBitSet.ml[99,3184+37]..lib/AtomicBitSet.ml[99,3184+39])
                                    Texp_ident "b1/1273"
                              ]
                        ]
                  ]
                  expression (lib/AtomicBitSet.ml[100,3227+2]..lib/AtomicBitSet.ml[105,3463+13])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (lib/AtomicBitSet.ml[100,3227+6]..lib/AtomicBitSet.ml[100,3227+7])
                          Tpat_var "x/1280"
                        expression (lib/AtomicBitSet.ml[100,3227+10]..lib/AtomicBitSet.ml[100,3227+39])
                          Texp_apply
                          expression (lib/AtomicBitSet.ml[100,3227+20]..lib/AtomicBitSet.ml[100,3227+21])
                            Texp_ident "Stdlib!.+"
                          [
                            <arg>
                              Nolabel
                              expression (lib/AtomicBitSet.ml[100,3227+10]..lib/AtomicBitSet.ml[100,3227+19])
                                Texp_apply
                                expression (lib/AtomicBitSet.ml[100,3227+12]..lib/AtomicBitSet.ml[100,3227+16])
                                  Texp_ident "Stdlib!.land"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/AtomicBitSet.ml[100,3227+10]..lib/AtomicBitSet.ml[100,3227+11])
                                      Texp_ident "x/1279"
                                  <arg>
                                    Nolabel
                                    expression (lib/AtomicBitSet.ml[100,3227+17]..lib/AtomicBitSet.ml[100,3227+19])
                                      Texp_ident "b2/1274"
                                ]
                            <arg>
                              Nolabel
                              expression (lib/AtomicBitSet.ml[100,3227+22]..lib/AtomicBitSet.ml[100,3227+39])
                                Texp_apply
                                expression (lib/AtomicBitSet.ml[100,3227+32]..lib/AtomicBitSet.ml[100,3227+36])
                                  Texp_ident "Stdlib!.land"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/AtomicBitSet.ml[100,3227+22]..lib/AtomicBitSet.ml[100,3227+31])
                                      Texp_apply
                                      expression (lib/AtomicBitSet.ml[100,3227+25]..lib/AtomicBitSet.ml[100,3227+28])
                                        Texp_ident "Stdlib!.lsr"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/AtomicBitSet.ml[100,3227+23]..lib/AtomicBitSet.ml[100,3227+24])
                                            Texp_ident "x/1279"
                                        <arg>
                                          Nolabel
                                          expression (lib/AtomicBitSet.ml[100,3227+29]..lib/AtomicBitSet.ml[100,3227+30])
                                            Texp_constant Const_int 4
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (lib/AtomicBitSet.ml[100,3227+37]..lib/AtomicBitSet.ml[100,3227+39])
                                      Texp_ident "b2/1274"
                                ]
                          ]
                    ]
                    expression (lib/AtomicBitSet.ml[103,3412+2]..lib/AtomicBitSet.ml[105,3463+13])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/AtomicBitSet.ml[103,3412+6]..lib/AtomicBitSet.ml[103,3412+7])
                            Tpat_var "x/1281"
                          expression (lib/AtomicBitSet.ml[103,3412+10]..lib/AtomicBitSet.ml[103,3412+21])
                            Texp_apply
                            expression (lib/AtomicBitSet.ml[103,3412+12]..lib/AtomicBitSet.ml[103,3412+13])
                              Texp_ident "Stdlib!.+"
                            [
                              <arg>
                                Nolabel
                                expression (lib/AtomicBitSet.ml[103,3412+10]..lib/AtomicBitSet.ml[103,3412+11])
                                  Texp_ident "x/1280"
                              <arg>
                                Nolabel
                                expression (lib/AtomicBitSet.ml[103,3412+14]..lib/AtomicBitSet.ml[103,3412+21])
                                  Texp_apply
                                  expression (lib/AtomicBitSet.ml[103,3412+16]..lib/AtomicBitSet.ml[103,3412+19])
                                    Texp_ident "Stdlib!.lsr"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/AtomicBitSet.ml[103,3412+14]..lib/AtomicBitSet.ml[103,3412+15])
                                        Texp_ident "x/1280"
                                    <arg>
                                      Nolabel
                                      expression (lib/AtomicBitSet.ml[103,3412+20]..lib/AtomicBitSet.ml[103,3412+21])
                                        Texp_constant Const_int 8
                                  ]
                            ]
                      ]
                      expression (lib/AtomicBitSet.ml[104,3437+2]..lib/AtomicBitSet.ml[105,3463+13])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (lib/AtomicBitSet.ml[104,3437+6]..lib/AtomicBitSet.ml[104,3437+7])
                              Tpat_var "x/1282"
                            expression (lib/AtomicBitSet.ml[104,3437+10]..lib/AtomicBitSet.ml[104,3437+22])
                              Texp_apply
                              expression (lib/AtomicBitSet.ml[104,3437+12]..lib/AtomicBitSet.ml[104,3437+13])
                                Texp_ident "Stdlib!.+"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/AtomicBitSet.ml[104,3437+10]..lib/AtomicBitSet.ml[104,3437+11])
                                    Texp_ident "x/1281"
                                <arg>
                                  Nolabel
                                  expression (lib/AtomicBitSet.ml[104,3437+14]..lib/AtomicBitSet.ml[104,3437+22])
                                    Texp_apply
                                    expression (lib/AtomicBitSet.ml[104,3437+16]..lib/AtomicBitSet.ml[104,3437+19])
                                      Texp_ident "Stdlib!.lsr"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/AtomicBitSet.ml[104,3437+14]..lib/AtomicBitSet.ml[104,3437+15])
                                          Texp_ident "x/1281"
                                      <arg>
                                        Nolabel
                                        expression (lib/AtomicBitSet.ml[104,3437+20]..lib/AtomicBitSet.ml[104,3437+22])
                                          Texp_constant Const_int 16
                                    ]
                              ]
                        ]
                        expression (lib/AtomicBitSet.ml[105,3463+2]..lib/AtomicBitSet.ml[105,3463+13])
                          Texp_apply
                          expression (lib/AtomicBitSet.ml[105,3463+4]..lib/AtomicBitSet.ml[105,3463+8])
                            Texp_ident "Stdlib!.land"
                          [
                            <arg>
                              Nolabel
                              expression (lib/AtomicBitSet.ml[105,3463+2]..lib/AtomicBitSet.ml[105,3463+3])
                                Texp_ident "x/1282"
                            <arg>
                              Nolabel
                              expression (lib/AtomicBitSet.ml[105,3463+9]..lib/AtomicBitSet.ml[105,3463+13])
                                Texp_constant Const_int 255
                          ]
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[107,3478+0]..lib/AtomicBitSet.ml[108,3492+28])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[107,3478+4]..lib/AtomicBitSet.ml[107,3478+9])
          Tpat_var "pop64/1283"
        expression (lib/AtomicBitSet.ml[107,3478+10]..lib/AtomicBitSet.ml[108,3492+28]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/AtomicBitSet.ml[107,3478+10]..lib/AtomicBitSet.ml[107,3478+11])
                Tpat_var "x/1285"
              expression (lib/AtomicBitSet.ml[108,3492+2]..lib/AtomicBitSet.ml[108,3492+28])
                Texp_apply
                expression (lib/AtomicBitSet.ml[108,3492+10]..lib/AtomicBitSet.ml[108,3492+11])
                  Texp_ident "Stdlib!.+"
                [
                  <arg>
                    Nolabel
                    expression (lib/AtomicBitSet.ml[108,3492+2]..lib/AtomicBitSet.ml[108,3492+9])
                      Texp_apply
                      expression (lib/AtomicBitSet.ml[108,3492+2]..lib/AtomicBitSet.ml[108,3492+7])
                        Texp_ident "pop32/1275"
                      [
                        <arg>
                          Nolabel
                          expression (lib/AtomicBitSet.ml[108,3492+8]..lib/AtomicBitSet.ml[108,3492+9])
                            Texp_ident "x/1285"
                      ]
                  <arg>
                    Nolabel
                    expression (lib/AtomicBitSet.ml[108,3492+12]..lib/AtomicBitSet.ml[108,3492+28])
                      Texp_apply
                      expression (lib/AtomicBitSet.ml[108,3492+12]..lib/AtomicBitSet.ml[108,3492+17])
                        Texp_ident "pop32/1275"
                      [
                        <arg>
                          Nolabel
                          expression (lib/AtomicBitSet.ml[108,3492+18]..lib/AtomicBitSet.ml[108,3492+28])
                            Texp_apply
                            expression (lib/AtomicBitSet.ml[108,3492+21]..lib/AtomicBitSet.ml[108,3492+24])
                              Texp_ident "Stdlib!.lsr"
                            [
                              <arg>
                                Nolabel
                                expression (lib/AtomicBitSet.ml[108,3492+19]..lib/AtomicBitSet.ml[108,3492+20])
                                  Texp_ident "x/1285"
                              <arg>
                                Nolabel
                                expression (lib/AtomicBitSet.ml[108,3492+25]..lib/AtomicBitSet.ml[108,3492+27])
                                  Texp_constant Const_int 32
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[112,3658+0]..lib/AtomicBitSet.ml[116,3733+21])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[112,3658+4]..lib/AtomicBitSet.ml[112,3658+7])
          Tpat_var "pop/1286"
        expression (lib/AtomicBitSet.ml[112,3658+8]..lib/AtomicBitSet.ml[116,3733+21]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/AtomicBitSet.ml[112,3658+8]..lib/AtomicBitSet.ml[112,3658+9])
                Tpat_var "x/1288"
              expression (lib/AtomicBitSet.ml[113,3670+2]..lib/AtomicBitSet.ml[116,3733+21])
                Texp_match
                expression (lib/AtomicBitSet.ml[113,3670+8]..lib/AtomicBitSet.ml[113,3670+21])
                  Texp_ident "Stdlib!.Sys.word_size"
                [
                  <case>
                    pattern (lib/AtomicBitSet.ml[114,3697+4]..lib/AtomicBitSet.ml[114,3697+6])
                      Tpat_value
                      pattern (lib/AtomicBitSet.ml[114,3697+4]..lib/AtomicBitSet.ml[114,3697+6])
                        Tpat_constant Const_int 32
                    expression (lib/AtomicBitSet.ml[114,3697+10]..lib/AtomicBitSet.ml[114,3697+17])
                      Texp_apply
                      expression (lib/AtomicBitSet.ml[114,3697+10]..lib/AtomicBitSet.ml[114,3697+15])
                        Texp_ident "pop32/1275"
                      [
                        <arg>
                          Nolabel
                          expression (lib/AtomicBitSet.ml[114,3697+16]..lib/AtomicBitSet.ml[114,3697+17])
                            Texp_ident "x/1288"
                      ]
                  <case>
                    pattern (lib/AtomicBitSet.ml[115,3715+4]..lib/AtomicBitSet.ml[115,3715+6])
                      Tpat_value
                      pattern (lib/AtomicBitSet.ml[115,3715+4]..lib/AtomicBitSet.ml[115,3715+6])
                        Tpat_constant Const_int 64
                    expression (lib/AtomicBitSet.ml[115,3715+10]..lib/AtomicBitSet.ml[115,3715+17])
                      Texp_apply
                      expression (lib/AtomicBitSet.ml[115,3715+10]..lib/AtomicBitSet.ml[115,3715+15])
                        Texp_ident "pop64/1283"
                      [
                        <arg>
                          Nolabel
                          expression (lib/AtomicBitSet.ml[115,3715+16]..lib/AtomicBitSet.ml[115,3715+17])
                            Texp_ident "x/1288"
                      ]
                  <case>
                    pattern (lib/AtomicBitSet.ml[116,3733+4]..lib/AtomicBitSet.ml[116,3733+5])
                      Tpat_value
                      pattern (lib/AtomicBitSet.ml[116,3733+4]..lib/AtomicBitSet.ml[116,3733+5])
                        Tpat_any
                    expression (lib/AtomicBitSet.ml[116,3733+9]..lib/AtomicBitSet.ml[116,3733+21])
                      Texp_assert                      expression (lib/AtomicBitSet.ml[116,3733+16]..lib/AtomicBitSet.ml[116,3733+21])
                        Texp_construct "false"
                        []
                ]
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[122,3857+0]..lib/AtomicBitSet.ml[123,3869+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[122,3857+4]..lib/AtomicBitSet.ml[122,3857+9])
          Tpat_var "empty/1289"
        expression (lib/AtomicBitSet.ml[123,3869+2]..lib/AtomicBitSet.ml[123,3869+3])
          Texp_constant Const_int 0
    ]
  structure_item (lib/AtomicBitSet.ml[125,3874+0]..lib/AtomicBitSet.ml[126,3891+7])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[125,3874+4]..lib/AtomicBitSet.ml[125,3874+12])
          Tpat_var "is_empty/1290"
        expression (lib/AtomicBitSet.ml[125,3874+13]..lib/AtomicBitSet.ml[126,3891+7]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/AtomicBitSet.ml[125,3874+13]..lib/AtomicBitSet.ml[125,3874+14])
                Tpat_var "s/1292"
              expression (lib/AtomicBitSet.ml[126,3891+2]..lib/AtomicBitSet.ml[126,3891+7])
                Texp_apply
                expression (lib/AtomicBitSet.ml[126,3891+4]..lib/AtomicBitSet.ml[126,3891+5])
                  Texp_ident "Stdlib!.="
                [
                  <arg>
                    Nolabel
                    expression (lib/AtomicBitSet.ml[126,3891+2]..lib/AtomicBitSet.ml[126,3891+3])
                      Texp_ident "s/1292"
                  <arg>
                    Nolabel
                    expression (lib/AtomicBitSet.ml[126,3891+6]..lib/AtomicBitSet.ml[126,3891+7])
                      Texp_constant Const_int 0
                ]
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[128,3900+0]..lib/AtomicBitSet.ml[129,3916+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[128,3900+4]..lib/AtomicBitSet.ml[128,3900+13])
          Tpat_var "singleton/1293"
        expression (lib/AtomicBitSet.ml[129,3916+2]..lib/AtomicBitSet.ml[129,3916+5])
          Texp_ident "bit/1204"
    ]
  structure_item (lib/AtomicBitSet.ml[131,3923+0]..lib/AtomicBitSet.ml[132,3937+15])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[131,3923+4]..lib/AtomicBitSet.ml[131,3923+7])
          Tpat_var "add/1294"
        expression (lib/AtomicBitSet.ml[131,3923+8]..lib/AtomicBitSet.ml[132,3937+15]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/AtomicBitSet.ml[131,3923+8]..lib/AtomicBitSet.ml[131,3923+9])
                Tpat_var "i/1296"
              expression (lib/AtomicBitSet.ml[131,3923+10]..lib/AtomicBitSet.ml[132,3937+15]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/AtomicBitSet.ml[131,3923+10]..lib/AtomicBitSet.ml[131,3923+11])
                      Tpat_var "s/1297"
                    expression (lib/AtomicBitSet.ml[132,3937+2]..lib/AtomicBitSet.ml[132,3937+15])
                      Texp_apply
                      expression (lib/AtomicBitSet.ml[132,3937+10]..lib/AtomicBitSet.ml[132,3937+13])
                        Texp_ident "Stdlib!.lor"
                      [
                        <arg>
                          Nolabel
                          expression (lib/AtomicBitSet.ml[132,3937+2]..lib/AtomicBitSet.ml[132,3937+9])
                            Texp_apply
                            expression (lib/AtomicBitSet.ml[132,3937+3]..lib/AtomicBitSet.ml[132,3937+6])
                              Texp_ident "bit/1204"
                            [
                              <arg>
                                Nolabel
                                expression (lib/AtomicBitSet.ml[132,3937+7]..lib/AtomicBitSet.ml[132,3937+8])
                                  Texp_ident "i/1296"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/AtomicBitSet.ml[132,3937+14]..lib/AtomicBitSet.ml[132,3937+15])
                            Texp_ident "s/1297"
                      ]
                ]
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[134,3954+0]..lib/AtomicBitSet.ml[135,3971+23])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[134,3954+4]..lib/AtomicBitSet.ml[134,3954+10])
          Tpat_var "remove/1298"
        expression (lib/AtomicBitSet.ml[134,3954+11]..lib/AtomicBitSet.ml[135,3971+23]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/AtomicBitSet.ml[134,3954+11]..lib/AtomicBitSet.ml[134,3954+12])
                Tpat_var "i/1300"
              expression (lib/AtomicBitSet.ml[134,3954+13]..lib/AtomicBitSet.ml[135,3971+23]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/AtomicBitSet.ml[134,3954+13]..lib/AtomicBitSet.ml[134,3954+14])
                      Tpat_var "s/1301"
                    expression (lib/AtomicBitSet.ml[135,3971+2]..lib/AtomicBitSet.ml[135,3971+23])
                      Texp_apply
                      expression (lib/AtomicBitSet.ml[135,3971+17]..lib/AtomicBitSet.ml[135,3971+21])
                        Texp_ident "Stdlib!.land"
                      [
                        <arg>
                          Nolabel
                          expression (lib/AtomicBitSet.ml[135,3971+2]..lib/AtomicBitSet.ml[135,3971+16])
                            Texp_apply
                            expression (lib/AtomicBitSet.ml[135,3971+3]..lib/AtomicBitSet.ml[135,3971+7])
                              Texp_ident "Stdlib!.lnot"
                            [
                              <arg>
                                Nolabel
                                expression (lib/AtomicBitSet.ml[135,3971+8]..lib/AtomicBitSet.ml[135,3971+15])
                                  Texp_apply
                                  expression (lib/AtomicBitSet.ml[135,3971+9]..lib/AtomicBitSet.ml[135,3971+12])
                                    Texp_ident "bit/1204"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/AtomicBitSet.ml[135,3971+13]..lib/AtomicBitSet.ml[135,3971+14])
                                        Texp_ident "i/1300"
                                  ]
                            ]
                        <arg>
                          Nolabel
                          expression (lib/AtomicBitSet.ml[135,3971+22]..lib/AtomicBitSet.ml[135,3971+23])
                            Texp_ident "s/1301"
                      ]
                ]
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[137,3996+0]..lib/AtomicBitSet.ml[144,4172+29])
    Tstr_value Rec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[137,3996+8]..lib/AtomicBitSet.ml[137,3996+18])
          Tpat_var "fold_delta/1302"
        expression (lib/AtomicBitSet.ml[137,3996+19]..lib/AtomicBitSet.ml[144,4172+29]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/AtomicBitSet.ml[137,3996+19]..lib/AtomicBitSet.ml[137,3996+24])
                Tpat_var "delta/1303"
              expression (lib/AtomicBitSet.ml[137,3996+25]..lib/AtomicBitSet.ml[144,4172+29]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/AtomicBitSet.ml[137,3996+25]..lib/AtomicBitSet.ml[137,3996+26])
                      Tpat_var "f/1304"
                    expression (lib/AtomicBitSet.ml[137,3996+27]..lib/AtomicBitSet.ml[144,4172+29]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/AtomicBitSet.ml[137,3996+27]..lib/AtomicBitSet.ml[137,3996+28])
                            Tpat_var "s/1305"
                          expression (lib/AtomicBitSet.ml[137,3996+29]..lib/AtomicBitSet.ml[144,4172+29]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (lib/AtomicBitSet.ml[137,3996+29]..lib/AtomicBitSet.ml[137,3996+33])
                                  Tpat_var "accu/1306"
                                expression (lib/AtomicBitSet.ml[138,4032+2]..lib/AtomicBitSet.ml[144,4172+29])
                                  Texp_ifthenelse
                                  expression (lib/AtomicBitSet.ml[138,4032+5]..lib/AtomicBitSet.ml[138,4032+10])
                                    Texp_apply
                                    expression (lib/AtomicBitSet.ml[138,4032+7]..lib/AtomicBitSet.ml[138,4032+8])
                                      Texp_ident "Stdlib!.="
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/AtomicBitSet.ml[138,4032+5]..lib/AtomicBitSet.ml[138,4032+6])
                                          Texp_ident "s/1305"
                                      <arg>
                                        Nolabel
                                        expression (lib/AtomicBitSet.ml[138,4032+9]..lib/AtomicBitSet.ml[138,4032+10])
                                          Texp_constant Const_int 0
                                    ]
                                  expression (lib/AtomicBitSet.ml[139,4048+4]..lib/AtomicBitSet.ml[139,4048+8])
                                    Texp_ident "accu/1306"
                                  Some
                                    expression (lib/AtomicBitSet.ml[141,4064+4]..lib/AtomicBitSet.ml[144,4172+29])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (lib/AtomicBitSet.ml[141,4064+8]..lib/AtomicBitSet.ml[141,4064+9])
                                            Tpat_var "x/1307"
                                          expression (lib/AtomicBitSet.ml[141,4064+12]..lib/AtomicBitSet.ml[141,4064+23])
                                            Texp_apply
                                            expression (lib/AtomicBitSet.ml[141,4064+14]..lib/AtomicBitSet.ml[141,4064+18])
                                              Texp_ident "Stdlib!.land"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/AtomicBitSet.ml[141,4064+12]..lib/AtomicBitSet.ml[141,4064+13])
                                                  Texp_ident "s/1305"
                                              <arg>
                                                Nolabel
                                                expression (lib/AtomicBitSet.ml[141,4064+19]..lib/AtomicBitSet.ml[141,4064+23])
                                                  Texp_apply
                                                  expression (lib/AtomicBitSet.ml[141,4064+20]..lib/AtomicBitSet.ml[141,4064+21])
                                                    Texp_ident "Stdlib!.~-"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/AtomicBitSet.ml[141,4064+21]..lib/AtomicBitSet.ml[141,4064+22])
                                                        Texp_ident "s/1305"
                                                  ]
                                            ]
                                      ]
                                      expression (lib/AtomicBitSet.ml[142,4091+4]..lib/AtomicBitSet.ml[144,4172+29])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/AtomicBitSet.ml[142,4091+8]..lib/AtomicBitSet.ml[142,4091+9])
                                              Tpat_var "s/1308"
                                            expression (lib/AtomicBitSet.ml[142,4091+12]..lib/AtomicBitSet.ml[142,4091+20])
                                              Texp_apply
                                              expression (lib/AtomicBitSet.ml[142,4091+14]..lib/AtomicBitSet.ml[142,4091+18])
                                                Texp_ident "Stdlib!.lxor"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/AtomicBitSet.ml[142,4091+12]..lib/AtomicBitSet.ml[142,4091+13])
                                                    Texp_ident "s/1305"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/AtomicBitSet.ml[142,4091+19]..lib/AtomicBitSet.ml[142,4091+20])
                                                    Texp_ident "x/1307"
                                              ]
                                        ]
                                        expression (lib/AtomicBitSet.ml[143,4131+4]..lib/AtomicBitSet.ml[144,4172+29])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/AtomicBitSet.ml[143,4131+8]..lib/AtomicBitSet.ml[143,4131+12])
                                                Tpat_var "accu/1309"
                                              expression (lib/AtomicBitSet.ml[143,4131+15]..lib/AtomicBitSet.ml[143,4131+37])
                                                Texp_apply
                                                expression (lib/AtomicBitSet.ml[143,4131+15]..lib/AtomicBitSet.ml[143,4131+16])
                                                  Texp_ident "f/1304"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/AtomicBitSet.ml[143,4131+17]..lib/AtomicBitSet.ml[143,4131+32])
                                                      Texp_apply
                                                      expression (lib/AtomicBitSet.ml[143,4131+24]..lib/AtomicBitSet.ml[143,4131+25])
                                                        Texp_ident "Stdlib!.+"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/AtomicBitSet.ml[143,4131+18]..lib/AtomicBitSet.ml[143,4131+23])
                                                            Texp_ident "delta/1303"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/AtomicBitSet.ml[143,4131+26]..lib/AtomicBitSet.ml[143,4131+31])
                                                            Texp_apply
                                                            expression (lib/AtomicBitSet.ml[143,4131+26]..lib/AtomicBitSet.ml[143,4131+29])
                                                              Texp_ident "tib/1268"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/AtomicBitSet.ml[143,4131+30]..lib/AtomicBitSet.ml[143,4131+31])
                                                                  Texp_ident "x/1307"
                                                            ]
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/AtomicBitSet.ml[143,4131+33]..lib/AtomicBitSet.ml[143,4131+37])
                                                      Texp_ident "accu/1306"
                                                ]
                                          ]
                                          expression (lib/AtomicBitSet.ml[144,4172+4]..lib/AtomicBitSet.ml[144,4172+29])
                                            Texp_apply
                                            expression (lib/AtomicBitSet.ml[144,4172+4]..lib/AtomicBitSet.ml[144,4172+14])
                                              Texp_ident "fold_delta/1302"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/AtomicBitSet.ml[144,4172+15]..lib/AtomicBitSet.ml[144,4172+20])
                                                  Texp_ident "delta/1303"
                                              <arg>
                                                Nolabel
                                                expression (lib/AtomicBitSet.ml[144,4172+21]..lib/AtomicBitSet.ml[144,4172+22])
                                                  Texp_ident "f/1304"
                                              <arg>
                                                Nolabel
                                                expression (lib/AtomicBitSet.ml[144,4172+23]..lib/AtomicBitSet.ml[144,4172+24])
                                                  Texp_ident "s/1308"
                                              <arg>
                                                Nolabel
                                                expression (lib/AtomicBitSet.ml[144,4172+25]..lib/AtomicBitSet.ml[144,4172+29])
                                                  Texp_ident "accu/1309"
                                            ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[146,4203+0]..lib/AtomicBitSet.ml[151,4341+24])
    Tstr_value Rec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[146,4203+8]..lib/AtomicBitSet.ml[146,4203+18])
          Tpat_var "iter_delta/1310"
        expression (lib/AtomicBitSet.ml[146,4203+19]..lib/AtomicBitSet.ml[151,4341+24]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/AtomicBitSet.ml[146,4203+19]..lib/AtomicBitSet.ml[146,4203+24])
                Tpat_var "delta/1311"
              expression (lib/AtomicBitSet.ml[146,4203+25]..lib/AtomicBitSet.ml[151,4341+24]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/AtomicBitSet.ml[146,4203+25]..lib/AtomicBitSet.ml[146,4203+26])
                      Tpat_var "f/1312"
                    expression (lib/AtomicBitSet.ml[146,4203+27]..lib/AtomicBitSet.ml[151,4341+24]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/AtomicBitSet.ml[146,4203+27]..lib/AtomicBitSet.ml[146,4203+28])
                            Tpat_var "s/1313"
                          expression (lib/AtomicBitSet.ml[147,4234+2]..lib/AtomicBitSet.ml[151,4341+24])
                            Texp_ifthenelse
                            expression (lib/AtomicBitSet.ml[147,4234+5]..lib/AtomicBitSet.ml[147,4234+11])
                              Texp_apply
                              expression (lib/AtomicBitSet.ml[147,4234+7]..lib/AtomicBitSet.ml[147,4234+9])
                                Texp_ident "Stdlib!.<>"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/AtomicBitSet.ml[147,4234+5]..lib/AtomicBitSet.ml[147,4234+6])
                                    Texp_ident "s/1313"
                                <arg>
                                  Nolabel
                                  expression (lib/AtomicBitSet.ml[147,4234+10]..lib/AtomicBitSet.ml[147,4234+11])
                                    Texp_constant Const_int 0
                              ]
                            expression (lib/AtomicBitSet.ml[148,4251+4]..lib/AtomicBitSet.ml[151,4341+24])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (lib/AtomicBitSet.ml[148,4251+8]..lib/AtomicBitSet.ml[148,4251+9])
                                    Tpat_var "x/1314"
                                  expression (lib/AtomicBitSet.ml[148,4251+12]..lib/AtomicBitSet.ml[148,4251+23])
                                    Texp_apply
                                    expression (lib/AtomicBitSet.ml[148,4251+14]..lib/AtomicBitSet.ml[148,4251+18])
                                      Texp_ident "Stdlib!.land"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/AtomicBitSet.ml[148,4251+12]..lib/AtomicBitSet.ml[148,4251+13])
                                          Texp_ident "s/1313"
                                      <arg>
                                        Nolabel
                                        expression (lib/AtomicBitSet.ml[148,4251+19]..lib/AtomicBitSet.ml[148,4251+23])
                                          Texp_apply
                                          expression (lib/AtomicBitSet.ml[148,4251+20]..lib/AtomicBitSet.ml[148,4251+21])
                                            Texp_ident "Stdlib!.~-"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/AtomicBitSet.ml[148,4251+21]..lib/AtomicBitSet.ml[148,4251+22])
                                                Texp_ident "s/1313"
                                          ]
                                    ]
                              ]
                              expression (lib/AtomicBitSet.ml[149,4278+4]..lib/AtomicBitSet.ml[151,4341+24])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/AtomicBitSet.ml[149,4278+8]..lib/AtomicBitSet.ml[149,4278+9])
                                      Tpat_var "s/1315"
                                    expression (lib/AtomicBitSet.ml[149,4278+12]..lib/AtomicBitSet.ml[149,4278+20])
                                      Texp_apply
                                      expression (lib/AtomicBitSet.ml[149,4278+14]..lib/AtomicBitSet.ml[149,4278+18])
                                        Texp_ident "Stdlib!.lxor"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/AtomicBitSet.ml[149,4278+12]..lib/AtomicBitSet.ml[149,4278+13])
                                            Texp_ident "s/1313"
                                        <arg>
                                          Nolabel
                                          expression (lib/AtomicBitSet.ml[149,4278+19]..lib/AtomicBitSet.ml[149,4278+20])
                                            Texp_ident "x/1314"
                                      ]
                                ]
                                expression (lib/AtomicBitSet.ml[150,4318+4]..lib/AtomicBitSet.ml[151,4341+24])
                                  Texp_sequence
                                  expression (lib/AtomicBitSet.ml[150,4318+4]..lib/AtomicBitSet.ml[150,4318+21])
                                    Texp_apply
                                    expression (lib/AtomicBitSet.ml[150,4318+4]..lib/AtomicBitSet.ml[150,4318+5])
                                      Texp_ident "f/1312"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/AtomicBitSet.ml[150,4318+6]..lib/AtomicBitSet.ml[150,4318+21])
                                          Texp_apply
                                          expression (lib/AtomicBitSet.ml[150,4318+13]..lib/AtomicBitSet.ml[150,4318+14])
                                            Texp_ident "Stdlib!.+"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/AtomicBitSet.ml[150,4318+7]..lib/AtomicBitSet.ml[150,4318+12])
                                                Texp_ident "delta/1311"
                                            <arg>
                                              Nolabel
                                              expression (lib/AtomicBitSet.ml[150,4318+15]..lib/AtomicBitSet.ml[150,4318+20])
                                                Texp_apply
                                                expression (lib/AtomicBitSet.ml[150,4318+15]..lib/AtomicBitSet.ml[150,4318+18])
                                                  Texp_ident "tib/1268"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/AtomicBitSet.ml[150,4318+19]..lib/AtomicBitSet.ml[150,4318+20])
                                                      Texp_ident "x/1314"
                                                ]
                                          ]
                                    ]
                                  expression (lib/AtomicBitSet.ml[151,4341+4]..lib/AtomicBitSet.ml[151,4341+24])
                                    Texp_apply
                                    expression (lib/AtomicBitSet.ml[151,4341+4]..lib/AtomicBitSet.ml[151,4341+14])
                                      Texp_ident "iter_delta/1310"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/AtomicBitSet.ml[151,4341+15]..lib/AtomicBitSet.ml[151,4341+20])
                                          Texp_ident "delta/1311"
                                      <arg>
                                        Nolabel
                                        expression (lib/AtomicBitSet.ml[151,4341+21]..lib/AtomicBitSet.ml[151,4341+22])
                                          Texp_ident "f/1312"
                                      <arg>
                                        Nolabel
                                        expression (lib/AtomicBitSet.ml[151,4341+23]..lib/AtomicBitSet.ml[151,4341+24])
                                          Texp_ident "s/1315"
                                    ]
                            None
                      ]
                ]
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[153,4367+0]..lib/AtomicBitSet.ml[160,4523+17])
    Tstr_value Rec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[153,4367+8]..lib/AtomicBitSet.ml[153,4367+12])
          Tpat_var "fold/1316"
        expression (lib/AtomicBitSet.ml[153,4367+13]..lib/AtomicBitSet.ml[160,4523+17]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/AtomicBitSet.ml[153,4367+13]..lib/AtomicBitSet.ml[153,4367+14])
                Tpat_var "f/1317"
              expression (lib/AtomicBitSet.ml[153,4367+15]..lib/AtomicBitSet.ml[160,4523+17]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/AtomicBitSet.ml[153,4367+15]..lib/AtomicBitSet.ml[153,4367+16])
                      Tpat_var "s/1318"
                    expression (lib/AtomicBitSet.ml[153,4367+17]..lib/AtomicBitSet.ml[160,4523+17]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/AtomicBitSet.ml[153,4367+17]..lib/AtomicBitSet.ml[153,4367+21])
                            Tpat_var "accu/1319"
                          expression (lib/AtomicBitSet.ml[154,4391+2]..lib/AtomicBitSet.ml[160,4523+17])
                            Texp_ifthenelse
                            expression (lib/AtomicBitSet.ml[154,4391+5]..lib/AtomicBitSet.ml[154,4391+10])
                              Texp_apply
                              expression (lib/AtomicBitSet.ml[154,4391+7]..lib/AtomicBitSet.ml[154,4391+8])
                                Texp_ident "Stdlib!.="
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/AtomicBitSet.ml[154,4391+5]..lib/AtomicBitSet.ml[154,4391+6])
                                    Texp_ident "s/1318"
                                <arg>
                                  Nolabel
                                  expression (lib/AtomicBitSet.ml[154,4391+9]..lib/AtomicBitSet.ml[154,4391+10])
                                    Texp_constant Const_int 0
                              ]
                            expression (lib/AtomicBitSet.ml[155,4407+4]..lib/AtomicBitSet.ml[155,4407+8])
                              Texp_ident "accu/1319"
                            Some
                              expression (lib/AtomicBitSet.ml[157,4423+4]..lib/AtomicBitSet.ml[160,4523+17])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/AtomicBitSet.ml[157,4423+8]..lib/AtomicBitSet.ml[157,4423+9])
                                      Tpat_var "x/1320"
                                    expression (lib/AtomicBitSet.ml[157,4423+12]..lib/AtomicBitSet.ml[157,4423+23])
                                      Texp_apply
                                      expression (lib/AtomicBitSet.ml[157,4423+14]..lib/AtomicBitSet.ml[157,4423+18])
                                        Texp_ident "Stdlib!.land"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/AtomicBitSet.ml[157,4423+12]..lib/AtomicBitSet.ml[157,4423+13])
                                            Texp_ident "s/1318"
                                        <arg>
                                          Nolabel
                                          expression (lib/AtomicBitSet.ml[157,4423+19]..lib/AtomicBitSet.ml[157,4423+23])
                                            Texp_apply
                                            expression (lib/AtomicBitSet.ml[157,4423+20]..lib/AtomicBitSet.ml[157,4423+21])
                                              Texp_ident "Stdlib!.~-"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/AtomicBitSet.ml[157,4423+21]..lib/AtomicBitSet.ml[157,4423+22])
                                                  Texp_ident "s/1318"
                                            ]
                                      ]
                                ]
                                expression (lib/AtomicBitSet.ml[158,4450+4]..lib/AtomicBitSet.ml[160,4523+17])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/AtomicBitSet.ml[158,4450+8]..lib/AtomicBitSet.ml[158,4450+9])
                                        Tpat_var "s/1321"
                                      expression (lib/AtomicBitSet.ml[158,4450+12]..lib/AtomicBitSet.ml[158,4450+20])
                                        Texp_apply
                                        expression (lib/AtomicBitSet.ml[158,4450+14]..lib/AtomicBitSet.ml[158,4450+18])
                                          Texp_ident "Stdlib!.lxor"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/AtomicBitSet.ml[158,4450+12]..lib/AtomicBitSet.ml[158,4450+13])
                                              Texp_ident "s/1318"
                                          <arg>
                                            Nolabel
                                            expression (lib/AtomicBitSet.ml[158,4450+19]..lib/AtomicBitSet.ml[158,4450+20])
                                              Texp_ident "x/1320"
                                        ]
                                  ]
                                  expression (lib/AtomicBitSet.ml[159,4490+4]..lib/AtomicBitSet.ml[160,4523+17])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/AtomicBitSet.ml[159,4490+8]..lib/AtomicBitSet.ml[159,4490+12])
                                          Tpat_var "accu/1322"
                                        expression (lib/AtomicBitSet.ml[159,4490+15]..lib/AtomicBitSet.ml[159,4490+29])
                                          Texp_apply
                                          expression (lib/AtomicBitSet.ml[159,4490+15]..lib/AtomicBitSet.ml[159,4490+16])
                                            Texp_ident "f/1317"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/AtomicBitSet.ml[159,4490+17]..lib/AtomicBitSet.ml[159,4490+24])
                                                Texp_apply
                                                expression (lib/AtomicBitSet.ml[159,4490+18]..lib/AtomicBitSet.ml[159,4490+21])
                                                  Texp_ident "tib/1268"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/AtomicBitSet.ml[159,4490+22]..lib/AtomicBitSet.ml[159,4490+23])
                                                      Texp_ident "x/1320"
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (lib/AtomicBitSet.ml[159,4490+25]..lib/AtomicBitSet.ml[159,4490+29])
                                                Texp_ident "accu/1319"
                                          ]
                                    ]
                                    expression (lib/AtomicBitSet.ml[160,4523+4]..lib/AtomicBitSet.ml[160,4523+17])
                                      Texp_apply
                                      expression (lib/AtomicBitSet.ml[160,4523+4]..lib/AtomicBitSet.ml[160,4523+8])
                                        Texp_ident "fold/1316"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/AtomicBitSet.ml[160,4523+9]..lib/AtomicBitSet.ml[160,4523+10])
                                            Texp_ident "f/1317"
                                        <arg>
                                          Nolabel
                                          expression (lib/AtomicBitSet.ml[160,4523+11]..lib/AtomicBitSet.ml[160,4523+12])
                                            Texp_ident "s/1321"
                                        <arg>
                                          Nolabel
                                          expression (lib/AtomicBitSet.ml[160,4523+13]..lib/AtomicBitSet.ml[160,4523+17])
                                            Texp_ident "accu/1322"
                                      ]
                      ]
                ]
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[162,4542+0]..lib/AtomicBitSet.ml[167,4660+12])
    Tstr_value Rec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[162,4542+8]..lib/AtomicBitSet.ml[162,4542+12])
          Tpat_var "iter/1323"
        expression (lib/AtomicBitSet.ml[162,4542+13]..lib/AtomicBitSet.ml[167,4660+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/AtomicBitSet.ml[162,4542+13]..lib/AtomicBitSet.ml[162,4542+14])
                Tpat_var "f/1324"
              expression (lib/AtomicBitSet.ml[162,4542+15]..lib/AtomicBitSet.ml[167,4660+12]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/AtomicBitSet.ml[162,4542+15]..lib/AtomicBitSet.ml[162,4542+16])
                      Tpat_var "s/1325"
                    expression (lib/AtomicBitSet.ml[163,4561+2]..lib/AtomicBitSet.ml[167,4660+12])
                      Texp_ifthenelse
                      expression (lib/AtomicBitSet.ml[163,4561+5]..lib/AtomicBitSet.ml[163,4561+11])
                        Texp_apply
                        expression (lib/AtomicBitSet.ml[163,4561+7]..lib/AtomicBitSet.ml[163,4561+9])
                          Texp_ident "Stdlib!.<>"
                        [
                          <arg>
                            Nolabel
                            expression (lib/AtomicBitSet.ml[163,4561+5]..lib/AtomicBitSet.ml[163,4561+6])
                              Texp_ident "s/1325"
                          <arg>
                            Nolabel
                            expression (lib/AtomicBitSet.ml[163,4561+10]..lib/AtomicBitSet.ml[163,4561+11])
                              Texp_constant Const_int 0
                        ]
                      expression (lib/AtomicBitSet.ml[164,4578+4]..lib/AtomicBitSet.ml[167,4660+12])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (lib/AtomicBitSet.ml[164,4578+8]..lib/AtomicBitSet.ml[164,4578+9])
                              Tpat_var "x/1326"
                            expression (lib/AtomicBitSet.ml[164,4578+12]..lib/AtomicBitSet.ml[164,4578+23])
                              Texp_apply
                              expression (lib/AtomicBitSet.ml[164,4578+14]..lib/AtomicBitSet.ml[164,4578+18])
                                Texp_ident "Stdlib!.land"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/AtomicBitSet.ml[164,4578+12]..lib/AtomicBitSet.ml[164,4578+13])
                                    Texp_ident "s/1325"
                                <arg>
                                  Nolabel
                                  expression (lib/AtomicBitSet.ml[164,4578+19]..lib/AtomicBitSet.ml[164,4578+23])
                                    Texp_apply
                                    expression (lib/AtomicBitSet.ml[164,4578+20]..lib/AtomicBitSet.ml[164,4578+21])
                                      Texp_ident "Stdlib!.~-"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/AtomicBitSet.ml[164,4578+21]..lib/AtomicBitSet.ml[164,4578+22])
                                          Texp_ident "s/1325"
                                    ]
                              ]
                        ]
                        expression (lib/AtomicBitSet.ml[165,4605+4]..lib/AtomicBitSet.ml[167,4660+12])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (lib/AtomicBitSet.ml[165,4605+8]..lib/AtomicBitSet.ml[165,4605+9])
                                Tpat_var "s/1327"
                              expression (lib/AtomicBitSet.ml[165,4605+12]..lib/AtomicBitSet.ml[165,4605+20])
                                Texp_apply
                                expression (lib/AtomicBitSet.ml[165,4605+14]..lib/AtomicBitSet.ml[165,4605+18])
                                  Texp_ident "Stdlib!.lxor"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/AtomicBitSet.ml[165,4605+12]..lib/AtomicBitSet.ml[165,4605+13])
                                      Texp_ident "s/1325"
                                  <arg>
                                    Nolabel
                                    expression (lib/AtomicBitSet.ml[165,4605+19]..lib/AtomicBitSet.ml[165,4605+20])
                                      Texp_ident "x/1326"
                                ]
                          ]
                          expression (lib/AtomicBitSet.ml[166,4645+4]..lib/AtomicBitSet.ml[167,4660+12])
                            Texp_sequence
                            expression (lib/AtomicBitSet.ml[166,4645+4]..lib/AtomicBitSet.ml[166,4645+13])
                              Texp_apply
                              expression (lib/AtomicBitSet.ml[166,4645+4]..lib/AtomicBitSet.ml[166,4645+5])
                                Texp_ident "f/1324"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/AtomicBitSet.ml[166,4645+6]..lib/AtomicBitSet.ml[166,4645+13])
                                    Texp_apply
                                    expression (lib/AtomicBitSet.ml[166,4645+7]..lib/AtomicBitSet.ml[166,4645+10])
                                      Texp_ident "tib/1268"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/AtomicBitSet.ml[166,4645+11]..lib/AtomicBitSet.ml[166,4645+12])
                                          Texp_ident "x/1326"
                                    ]
                              ]
                            expression (lib/AtomicBitSet.ml[167,4660+4]..lib/AtomicBitSet.ml[167,4660+12])
                              Texp_apply
                              expression (lib/AtomicBitSet.ml[167,4660+4]..lib/AtomicBitSet.ml[167,4660+8])
                                Texp_ident "iter/1323"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/AtomicBitSet.ml[167,4660+9]..lib/AtomicBitSet.ml[167,4660+10])
                                    Texp_ident "f/1324"
                                <arg>
                                  Nolabel
                                  expression (lib/AtomicBitSet.ml[167,4660+11]..lib/AtomicBitSet.ml[167,4660+12])
                                    Texp_ident "s/1327"
                              ]
                      None
                ]
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[169,4674+0]..lib/AtomicBitSet.ml[172,4819+20])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[169,4674+4]..lib/AtomicBitSet.ml[169,4674+16])
          Tpat_var "is_singleton/1328"
        expression (lib/AtomicBitSet.ml[169,4674+17]..lib/AtomicBitSet.ml[172,4819+20]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/AtomicBitSet.ml[169,4674+17]..lib/AtomicBitSet.ml[169,4674+18])
                Tpat_var "s/1330"
              expression (lib/AtomicBitSet.ml[172,4819+2]..lib/AtomicBitSet.ml[172,4819+20])
                Texp_apply
                expression (lib/AtomicBitSet.ml[172,4819+17]..lib/AtomicBitSet.ml[172,4819+18])
                  Texp_ident "Stdlib!.="
                [
                  <arg>
                    Nolabel
                    expression (lib/AtomicBitSet.ml[172,4819+2]..lib/AtomicBitSet.ml[172,4819+16])
                      Texp_apply
                      expression (lib/AtomicBitSet.ml[172,4819+4]..lib/AtomicBitSet.ml[172,4819+8])
                        Texp_ident "Stdlib!.land"
                      [
                        <arg>
                          Nolabel
                          expression (lib/AtomicBitSet.ml[172,4819+2]..lib/AtomicBitSet.ml[172,4819+3])
                            Texp_ident "s/1330"
                        <arg>
                          Nolabel
                          expression (lib/AtomicBitSet.ml[172,4819+9]..lib/AtomicBitSet.ml[172,4819+16])
                            Texp_apply
                            expression (lib/AtomicBitSet.ml[172,4819+12]..lib/AtomicBitSet.ml[172,4819+13])
                              Texp_ident "Stdlib!.-"
                            [
                              <arg>
                                Nolabel
                                expression (lib/AtomicBitSet.ml[172,4819+10]..lib/AtomicBitSet.ml[172,4819+11])
                                  Texp_ident "s/1330"
                              <arg>
                                Nolabel
                                expression (lib/AtomicBitSet.ml[172,4819+14]..lib/AtomicBitSet.ml[172,4819+15])
                                  Texp_constant Const_int 1
                            ]
                      ]
                  <arg>
                    Nolabel
                    expression (lib/AtomicBitSet.ml[172,4819+19]..lib/AtomicBitSet.ml[172,4819+20])
                      Texp_constant Const_int 0
                ]
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[174,4841+0]..lib/AtomicBitSet.ml[175,4858+7])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[174,4841+4]..lib/AtomicBitSet.ml[174,4841+12])
          Tpat_var "cardinal/1331"
        expression (lib/AtomicBitSet.ml[174,4841+13]..lib/AtomicBitSet.ml[175,4858+7]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/AtomicBitSet.ml[174,4841+13]..lib/AtomicBitSet.ml[174,4841+14])
                Tpat_var "s/1333"
              expression (lib/AtomicBitSet.ml[175,4858+2]..lib/AtomicBitSet.ml[175,4858+7])
                Texp_apply
                expression (lib/AtomicBitSet.ml[175,4858+2]..lib/AtomicBitSet.ml[175,4858+5])
                  Texp_ident "pop/1286"
                [
                  <arg>
                    Nolabel
                    expression (lib/AtomicBitSet.ml[175,4858+6]..lib/AtomicBitSet.ml[175,4858+7])
                      Texp_ident "s/1333"
                ]
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[178,4907+0]..lib/AtomicBitSet.ml[180,4980+35])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[178,4907+4]..lib/AtomicBitSet.ml[178,4907+12])
          Tpat_var "elements/1334"
        expression (lib/AtomicBitSet.ml[178,4907+13]..lib/AtomicBitSet.ml[180,4980+35]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/AtomicBitSet.ml[178,4907+13]..lib/AtomicBitSet.ml[178,4907+14])
                Tpat_var "s/1336"
              expression (lib/AtomicBitSet.ml[180,4980+2]..lib/AtomicBitSet.ml[180,4980+35])
                Texp_apply
                expression (lib/AtomicBitSet.ml[180,4980+2]..lib/AtomicBitSet.ml[180,4980+6])
                  Texp_ident "fold/1316"
                [
                  <arg>
                    Nolabel
                    expression (lib/AtomicBitSet.ml[180,4980+7]..lib/AtomicBitSet.ml[180,4980+30])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/AtomicBitSet.ml[180,4980+12]..lib/AtomicBitSet.ml[180,4980+14])
                            Tpat_var "tl/1337"
                          expression (lib/AtomicBitSet.ml[180,4980+15]..lib/AtomicBitSet.ml[180,4980+29]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (lib/AtomicBitSet.ml[180,4980+15]..lib/AtomicBitSet.ml[180,4980+17])
                                  Tpat_var "hd/1338"
                                expression (lib/AtomicBitSet.ml[180,4980+21]..lib/AtomicBitSet.ml[180,4980+29])
                                  Texp_construct "::"
                                  [
                                    expression (lib/AtomicBitSet.ml[180,4980+21]..lib/AtomicBitSet.ml[180,4980+23])
                                      Texp_ident "tl/1337"
                                    expression (lib/AtomicBitSet.ml[180,4980+27]..lib/AtomicBitSet.ml[180,4980+29])
                                      Texp_ident "hd/1338"
                                  ]
                            ]
                      ]
                  <arg>
                    Nolabel
                    expression (lib/AtomicBitSet.ml[180,4980+31]..lib/AtomicBitSet.ml[180,4980+32])
                      Texp_ident "s/1336"
                  <arg>
                    Nolabel
                    expression (lib/AtomicBitSet.ml[180,4980+33]..lib/AtomicBitSet.ml[180,4980+35])
                      Texp_construct "[]"
                      []
                ]
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[182,5017+0]..lib/AtomicBitSet.ml[183,5036+17])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[182,5017+4]..lib/AtomicBitSet.ml[182,5017+10])
          Tpat_var "subset/1339"
        expression (lib/AtomicBitSet.ml[182,5017+11]..lib/AtomicBitSet.ml[183,5036+17]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/AtomicBitSet.ml[182,5017+11]..lib/AtomicBitSet.ml[182,5017+13])
                Tpat_var "s1/1341"
              expression (lib/AtomicBitSet.ml[182,5017+14]..lib/AtomicBitSet.ml[183,5036+17]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/AtomicBitSet.ml[182,5017+14]..lib/AtomicBitSet.ml[182,5017+16])
                      Tpat_var "s2/1342"
                    expression (lib/AtomicBitSet.ml[183,5036+2]..lib/AtomicBitSet.ml[183,5036+17])
                      Texp_apply
                      expression (lib/AtomicBitSet.ml[183,5036+13]..lib/AtomicBitSet.ml[183,5036+14])
                        Texp_ident "Stdlib!.="
                      [
                        <arg>
                          Nolabel
                          expression (lib/AtomicBitSet.ml[183,5036+2]..lib/AtomicBitSet.ml[183,5036+12])
                            Texp_apply
                            expression (lib/AtomicBitSet.ml[183,5036+5]..lib/AtomicBitSet.ml[183,5036+9])
                              Texp_ident "Stdlib!.land"
                            [
                              <arg>
                                Nolabel
                                expression (lib/AtomicBitSet.ml[183,5036+2]..lib/AtomicBitSet.ml[183,5036+4])
                                  Texp_ident "s1/1341"
                              <arg>
                                Nolabel
                                expression (lib/AtomicBitSet.ml[183,5036+10]..lib/AtomicBitSet.ml[183,5036+12])
                                  Texp_ident "s2/1342"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/AtomicBitSet.ml[183,5036+15]..lib/AtomicBitSet.ml[183,5036+17])
                            Texp_ident "s1/1341"
                      ]
                ]
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[185,5055+0]..lib/AtomicBitSet.ml[186,5069+24])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[185,5055+4]..lib/AtomicBitSet.ml[185,5055+7])
          Tpat_var "mem/1343"
        expression (lib/AtomicBitSet.ml[185,5055+8]..lib/AtomicBitSet.ml[186,5069+24]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/AtomicBitSet.ml[185,5055+8]..lib/AtomicBitSet.ml[185,5055+9])
                Tpat_var "i/1345"
              expression (lib/AtomicBitSet.ml[185,5055+10]..lib/AtomicBitSet.ml[186,5069+24]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/AtomicBitSet.ml[185,5055+10]..lib/AtomicBitSet.ml[185,5055+11])
                      Tpat_var "s/1346"
                    expression (lib/AtomicBitSet.ml[186,5069+2]..lib/AtomicBitSet.ml[186,5069+24])
                      Texp_apply
                      expression (lib/AtomicBitSet.ml[186,5069+2]..lib/AtomicBitSet.ml[186,5069+8])
                        Texp_ident "subset/1339"
                      [
                        <arg>
                          Nolabel
                          expression (lib/AtomicBitSet.ml[186,5069+9]..lib/AtomicBitSet.ml[186,5069+22])
                            Texp_apply
                            expression (lib/AtomicBitSet.ml[186,5069+10]..lib/AtomicBitSet.ml[186,5069+19])
                              Texp_ident "singleton/1293"
                            [
                              <arg>
                                Nolabel
                                expression (lib/AtomicBitSet.ml[186,5069+20]..lib/AtomicBitSet.ml[186,5069+21])
                                  Texp_ident "i/1345"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/AtomicBitSet.ml[186,5069+23]..lib/AtomicBitSet.ml[186,5069+24])
                            Texp_ident "s/1346"
                      ]
                ]
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[188,5095+0]..lib/AtomicBitSet.ml[189,5113+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[188,5095+4]..lib/AtomicBitSet.ml[188,5095+9])
          Tpat_var "union/1347"
        expression (lib/AtomicBitSet.ml[188,5095+10]..lib/AtomicBitSet.ml[189,5113+11]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/AtomicBitSet.ml[188,5095+10]..lib/AtomicBitSet.ml[188,5095+12])
                Tpat_var "s1/1349"
              expression (lib/AtomicBitSet.ml[188,5095+13]..lib/AtomicBitSet.ml[189,5113+11]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/AtomicBitSet.ml[188,5095+13]..lib/AtomicBitSet.ml[188,5095+15])
                      Tpat_var "s2/1350"
                    expression (lib/AtomicBitSet.ml[189,5113+2]..lib/AtomicBitSet.ml[189,5113+11])
                      Texp_apply
                      expression (lib/AtomicBitSet.ml[189,5113+5]..lib/AtomicBitSet.ml[189,5113+8])
                        Texp_ident "Stdlib!.lor"
                      [
                        <arg>
                          Nolabel
                          expression (lib/AtomicBitSet.ml[189,5113+2]..lib/AtomicBitSet.ml[189,5113+4])
                            Texp_ident "s1/1349"
                        <arg>
                          Nolabel
                          expression (lib/AtomicBitSet.ml[189,5113+9]..lib/AtomicBitSet.ml[189,5113+11])
                            Texp_ident "s2/1350"
                      ]
                ]
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[191,5126+0]..lib/AtomicBitSet.ml[192,5144+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[191,5126+4]..lib/AtomicBitSet.ml[191,5126+9])
          Tpat_var "inter/1351"
        expression (lib/AtomicBitSet.ml[191,5126+10]..lib/AtomicBitSet.ml[192,5144+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/AtomicBitSet.ml[191,5126+10]..lib/AtomicBitSet.ml[191,5126+12])
                Tpat_var "s1/1353"
              expression (lib/AtomicBitSet.ml[191,5126+13]..lib/AtomicBitSet.ml[192,5144+12]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/AtomicBitSet.ml[191,5126+13]..lib/AtomicBitSet.ml[191,5126+15])
                      Tpat_var "s2/1354"
                    expression (lib/AtomicBitSet.ml[192,5144+2]..lib/AtomicBitSet.ml[192,5144+12])
                      Texp_apply
                      expression (lib/AtomicBitSet.ml[192,5144+5]..lib/AtomicBitSet.ml[192,5144+9])
                        Texp_ident "Stdlib!.land"
                      [
                        <arg>
                          Nolabel
                          expression (lib/AtomicBitSet.ml[192,5144+2]..lib/AtomicBitSet.ml[192,5144+4])
                            Texp_ident "s1/1353"
                        <arg>
                          Nolabel
                          expression (lib/AtomicBitSet.ml[192,5144+10]..lib/AtomicBitSet.ml[192,5144+12])
                            Texp_ident "s2/1354"
                      ]
                ]
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[194,5158+0]..lib/AtomicBitSet.ml[199,5244+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[194,5158+4]..lib/AtomicBitSet.ml[194,5158+11])
          Tpat_var "minimum/1355"
        expression (lib/AtomicBitSet.ml[194,5158+12]..lib/AtomicBitSet.ml[199,5244+9]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/AtomicBitSet.ml[194,5158+12]..lib/AtomicBitSet.ml[194,5158+13])
                Tpat_var "s/1357"
              expression (lib/AtomicBitSet.ml[195,5174+2]..lib/AtomicBitSet.ml[199,5244+9])
                Texp_ifthenelse
                expression (lib/AtomicBitSet.ml[195,5174+5]..lib/AtomicBitSet.ml[195,5174+10])
                  Texp_apply
                  expression (lib/AtomicBitSet.ml[195,5174+7]..lib/AtomicBitSet.ml[195,5174+8])
                    Texp_ident "Stdlib!.="
                  [
                    <arg>
                      Nolabel
                      expression (lib/AtomicBitSet.ml[195,5174+5]..lib/AtomicBitSet.ml[195,5174+6])
                        Texp_ident "s/1357"
                    <arg>
                      Nolabel
                      expression (lib/AtomicBitSet.ml[195,5174+9]..lib/AtomicBitSet.ml[195,5174+10])
                        Texp_constant Const_int 0
                  ]
                expression (lib/AtomicBitSet.ml[196,5190+4]..lib/AtomicBitSet.ml[196,5190+19])
                  Texp_apply
                  expression (lib/AtomicBitSet.ml[196,5190+4]..lib/AtomicBitSet.ml[196,5190+9])
                    Texp_ident "Stdlib!.raise"
                  [
                    <arg>
                      Nolabel
                      expression (lib/AtomicBitSet.ml[196,5190+10]..lib/AtomicBitSet.ml[196,5190+19])
                        Texp_construct "Not_found"
                        []
                  ]
                Some
                  expression (lib/AtomicBitSet.ml[198,5217+4]..lib/AtomicBitSet.ml[199,5244+9])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (lib/AtomicBitSet.ml[198,5217+8]..lib/AtomicBitSet.ml[198,5217+9])
                          Tpat_var "x/1358"
                        expression (lib/AtomicBitSet.ml[198,5217+12]..lib/AtomicBitSet.ml[198,5217+23])
                          Texp_apply
                          expression (lib/AtomicBitSet.ml[198,5217+14]..lib/AtomicBitSet.ml[198,5217+18])
                            Texp_ident "Stdlib!.land"
                          [
                            <arg>
                              Nolabel
                              expression (lib/AtomicBitSet.ml[198,5217+12]..lib/AtomicBitSet.ml[198,5217+13])
                                Texp_ident "s/1357"
                            <arg>
                              Nolabel
                              expression (lib/AtomicBitSet.ml[198,5217+19]..lib/AtomicBitSet.ml[198,5217+23])
                                Texp_apply
                                expression (lib/AtomicBitSet.ml[198,5217+20]..lib/AtomicBitSet.ml[198,5217+21])
                                  Texp_ident "Stdlib!.~-"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/AtomicBitSet.ml[198,5217+21]..lib/AtomicBitSet.ml[198,5217+22])
                                      Texp_ident "s/1357"
                                ]
                          ]
                    ]
                    expression (lib/AtomicBitSet.ml[199,5244+4]..lib/AtomicBitSet.ml[199,5244+9])
                      Texp_apply
                      expression (lib/AtomicBitSet.ml[199,5244+4]..lib/AtomicBitSet.ml[199,5244+7])
                        Texp_ident "tib/1268"
                      [
                        <arg>
                          Nolabel
                          expression (lib/AtomicBitSet.ml[199,5244+8]..lib/AtomicBitSet.ml[199,5244+9])
                            Texp_ident "x/1358"
                      ]
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[201,5255+0]..lib/AtomicBitSet.ml[202,5268+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[201,5255+4]..lib/AtomicBitSet.ml[201,5255+10])
          Tpat_var "choose/1359"
        expression (lib/AtomicBitSet.ml[202,5268+2]..lib/AtomicBitSet.ml[202,5268+9])
          Texp_ident "minimum/1355"
    ]
  structure_item (lib/AtomicBitSet.ml[204,5279+0]..lib/AtomicBitSet.ml[205,5309+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[204,5279+4]..lib/AtomicBitSet.ml[204,5279+11])
          extra
            Tpat_extra_constraint
            core_type (lib/AtomicBitSet.ml[204,5279+14]..lib/AtomicBitSet.ml[204,5279+27]) ghost
              Ttyp_poly
              core_type (lib/AtomicBitSet.ml[204,5279+14]..lib/AtomicBitSet.ml[204,5279+27])
                Ttyp_arrow
                Nolabel
                core_type (lib/AtomicBitSet.ml[204,5279+14]..lib/AtomicBitSet.ml[204,5279+15])
                  Ttyp_constr "t/1128"
                  []
                core_type (lib/AtomicBitSet.ml[204,5279+19]..lib/AtomicBitSet.ml[204,5279+27])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/AtomicBitSet.ml[204,5279+19]..lib/AtomicBitSet.ml[204,5279+20])
                    Ttyp_constr "t/1128"
                    []
                  core_type (lib/AtomicBitSet.ml[204,5279+24]..lib/AtomicBitSet.ml[204,5279+27])
                    Ttyp_constr "int/1!"
                    []
          Tpat_var "compare/1360"
        expression (lib/AtomicBitSet.ml[205,5309+2]..lib/AtomicBitSet.ml[205,5309+9])
          extra
            Texp_constraint
            core_type (lib/AtomicBitSet.ml[204,5279+14]..lib/AtomicBitSet.ml[204,5279+27])
              Ttyp_arrow
              Nolabel
              core_type (lib/AtomicBitSet.ml[204,5279+14]..lib/AtomicBitSet.ml[204,5279+15])
                Ttyp_constr "t/1128"
                []
              core_type (lib/AtomicBitSet.ml[204,5279+19]..lib/AtomicBitSet.ml[204,5279+27])
                Ttyp_arrow
                Nolabel
                core_type (lib/AtomicBitSet.ml[204,5279+19]..lib/AtomicBitSet.ml[204,5279+20])
                  Ttyp_constr "t/1128"
                  []
                core_type (lib/AtomicBitSet.ml[204,5279+24]..lib/AtomicBitSet.ml[204,5279+27])
                  Ttyp_constr "int/1!"
                  []
          Texp_ident "Stdlib!.compare"
    ]
  structure_item (lib/AtomicBitSet.ml[207,5352+0]..lib/AtomicBitSet.ml[208,5381+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[207,5352+4]..lib/AtomicBitSet.ml[207,5352+9])
          extra
            Tpat_extra_constraint
            core_type (lib/AtomicBitSet.ml[207,5352+12]..lib/AtomicBitSet.ml[207,5352+26]) ghost
              Ttyp_poly
              core_type (lib/AtomicBitSet.ml[207,5352+12]..lib/AtomicBitSet.ml[207,5352+26])
                Ttyp_arrow
                Nolabel
                core_type (lib/AtomicBitSet.ml[207,5352+12]..lib/AtomicBitSet.ml[207,5352+13])
                  Ttyp_constr "t/1128"
                  []
                core_type (lib/AtomicBitSet.ml[207,5352+17]..lib/AtomicBitSet.ml[207,5352+26])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/AtomicBitSet.ml[207,5352+17]..lib/AtomicBitSet.ml[207,5352+18])
                    Ttyp_constr "t/1128"
                    []
                  core_type (lib/AtomicBitSet.ml[207,5352+22]..lib/AtomicBitSet.ml[207,5352+26])
                    Ttyp_constr "bool/5!"
                    []
          Tpat_var "equal/1361"
        expression (lib/AtomicBitSet.ml[208,5381+2]..lib/AtomicBitSet.ml[208,5381+5])
          extra
            Texp_constraint
            core_type (lib/AtomicBitSet.ml[207,5352+12]..lib/AtomicBitSet.ml[207,5352+26])
              Ttyp_arrow
              Nolabel
              core_type (lib/AtomicBitSet.ml[207,5352+12]..lib/AtomicBitSet.ml[207,5352+13])
                Ttyp_constr "t/1128"
                []
              core_type (lib/AtomicBitSet.ml[207,5352+17]..lib/AtomicBitSet.ml[207,5352+26])
                Ttyp_arrow
                Nolabel
                core_type (lib/AtomicBitSet.ml[207,5352+17]..lib/AtomicBitSet.ml[207,5352+18])
                  Ttyp_constr "t/1128"
                  []
                core_type (lib/AtomicBitSet.ml[207,5352+22]..lib/AtomicBitSet.ml[207,5352+26])
                  Ttyp_constr "bool/5!"
                  []
          Texp_ident "Stdlib!.="
    ]
  structure_item (lib/AtomicBitSet.ml[210,5388+0]..lib/AtomicBitSet.ml[211,5409+24])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[210,5388+4]..lib/AtomicBitSet.ml[210,5388+12])
          Tpat_var "disjoint/1362"
        expression (lib/AtomicBitSet.ml[210,5388+13]..lib/AtomicBitSet.ml[211,5409+24]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/AtomicBitSet.ml[210,5388+13]..lib/AtomicBitSet.ml[210,5388+15])
                Tpat_var "s1/1364"
              expression (lib/AtomicBitSet.ml[210,5388+16]..lib/AtomicBitSet.ml[211,5409+24]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/AtomicBitSet.ml[210,5388+16]..lib/AtomicBitSet.ml[210,5388+18])
                      Tpat_var "s2/1365"
                    expression (lib/AtomicBitSet.ml[211,5409+2]..lib/AtomicBitSet.ml[211,5409+24])
                      Texp_apply
                      expression (lib/AtomicBitSet.ml[211,5409+2]..lib/AtomicBitSet.ml[211,5409+10])
                        Texp_ident "is_empty/1290"
                      [
                        <arg>
                          Nolabel
                          expression (lib/AtomicBitSet.ml[211,5409+11]..lib/AtomicBitSet.ml[211,5409+24])
                            Texp_apply
                            expression (lib/AtomicBitSet.ml[211,5409+12]..lib/AtomicBitSet.ml[211,5409+17])
                              Texp_ident "inter/1351"
                            [
                              <arg>
                                Nolabel
                                expression (lib/AtomicBitSet.ml[211,5409+18]..lib/AtomicBitSet.ml[211,5409+20])
                                  Texp_ident "s1/1364"
                              <arg>
                                Nolabel
                                expression (lib/AtomicBitSet.ml[211,5409+21]..lib/AtomicBitSet.ml[211,5409+23])
                                  Texp_ident "s2/1365"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[211,5409+24]..lib/AtomicBitSet.ml[211,5409+24]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[211,5409+24]..lib/AtomicBitSet.ml[211,5409+24]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/AtomicBitSet.ml[211,5409+24]..lib/AtomicBitSet.ml[211,5409+24]) ghost
          Texp_apply
          expression (lib/AtomicBitSet.ml[211,5409+24]..lib/AtomicBitSet.ml[211,5409+24]) ghost
            Texp_ident "Ppx_inline_test_lib!.unset_lib"
          [
            <arg>
              Nolabel
              expression (lib/AtomicBitSet.ml[211,5409+24]..lib/AtomicBitSet.ml[211,5409+24]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/AtomicBitSet.ml[211,5409+24]..lib/AtomicBitSet.ml[211,5409+24]) ghost,None)
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[211,5409+24]..lib/AtomicBitSet.ml[211,5409+24]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[211,5409+24]..lib/AtomicBitSet.ml[211,5409+24]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/AtomicBitSet.ml[211,5409+24]..lib/AtomicBitSet.ml[211,5409+24]) ghost
          Texp_apply
          expression (lib/AtomicBitSet.ml[211,5409+24]..lib/AtomicBitSet.ml[211,5409+24]) ghost
            Texp_ident "Expect_test_collector!.Current_file.unset"
          [
            <arg>
              Nolabel
              expression (lib/AtomicBitSet.ml[211,5409+24]..lib/AtomicBitSet.ml[211,5409+24]) ghost
                Texp_construct "()"
                []
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[211,5409+24]..lib/AtomicBitSet.ml[211,5409+24]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[211,5409+24]..lib/AtomicBitSet.ml[211,5409+24]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/AtomicBitSet.ml[211,5409+24]..lib/AtomicBitSet.ml[211,5409+24]) ghost
          Texp_apply
          expression (lib/AtomicBitSet.ml[211,5409+24]..lib/AtomicBitSet.ml[211,5409+24]) ghost
            Texp_ident "Ppx_bench_lib!.Benchmark_accumulator.Current_libname.unset"
          [
            <arg>
              Nolabel
              expression (lib/AtomicBitSet.ml[211,5409+24]..lib/AtomicBitSet.ml[211,5409+24]) ghost
                Texp_construct "()"
                []
          ]
    ]
  structure_item (lib/AtomicBitSet.ml[211,5409+24]..lib/AtomicBitSet.ml[211,5409+24]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/AtomicBitSet.ml[211,5409+24]..lib/AtomicBitSet.ml[211,5409+24]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/AtomicBitSet.ml[211,5409+24]..lib/AtomicBitSet.ml[211,5409+24]) ghost
          Texp_apply
          expression (lib/AtomicBitSet.ml[211,5409+24]..lib/AtomicBitSet.ml[211,5409+24]) ghost
            Texp_ident "Ppx_module_timer_runtime!.record_until"
          [
            <arg>
              Nolabel
              expression (lib/AtomicBitSet.ml[211,5409+24]..lib/AtomicBitSet.ml[211,5409+24]) ghost
                Texp_ident "Ppx_module_timer_runtime!.__MODULE__"
          ]
    ]
]

{<Gbnf_parser__AtomicBitSet>
 "add"[value] -> <Gbnf_parser__AtomicBitSet.37>;
 "b0"[value] -> <Gbnf_parser__AtomicBitSet.19>;
 "b1"[value] -> <Gbnf_parser__AtomicBitSet.20>;
 "b2"[value] -> <Gbnf_parser__AtomicBitSet.21>;
 "bit"[value] -> <Gbnf_parser__AtomicBitSet.3>;
 "bound"[value] -> <Gbnf_parser__AtomicBitSet.2>;
 "cardinal"[value] -> <Gbnf_parser__AtomicBitSet.71>;
 "choose"[value] -> <Gbnf_parser__AtomicBitSet.92>;
 "compare"[value] -> <Gbnf_parser__AtomicBitSet.93>;
 "disjoint"[value] -> <Gbnf_parser__AtomicBitSet.95>;
 "element"[type] -> <Gbnf_parser__AtomicBitSet.1>;
 "elements"[value] -> <Gbnf_parser__AtomicBitSet.73>;
 "empty"[value] -> <Gbnf_parser__AtomicBitSet.33>;
 "equal"[value] -> <Gbnf_parser__AtomicBitSet.94>;
 "ffffffff"[value] -> <Gbnf_parser__AtomicBitSet.13>;
 "fold"[value] -> <Gbnf_parser__AtomicBitSet.57>;
 "fold_delta"[value] -> <Gbnf_parser__AtomicBitSet.43>;
 "inter"[value] -> <Gbnf_parser__AtomicBitSet.86>;
 "is_empty"[value] -> <Gbnf_parser__AtomicBitSet.34>;
 "is_singleton"[value] -> <Gbnf_parser__AtomicBitSet.69>;
 "iter"[value] -> <Gbnf_parser__AtomicBitSet.64>;
 "iter_delta"[value] -> <Gbnf_parser__AtomicBitSet.51>;
 "log2"[value] -> <Gbnf_parser__AtomicBitSet.5>;
 "mem"[value] -> <Gbnf_parser__AtomicBitSet.80>;
 "minimum"[value] -> <Gbnf_parser__AtomicBitSet.89>;
 "pop"[value] -> <Gbnf_parser__AtomicBitSet.31>;
 "pop32"[value] -> <Gbnf_parser__AtomicBitSet.22>;
 "pop64"[value] -> <Gbnf_parser__AtomicBitSet.29>;
 "remove"[value] -> <Gbnf_parser__AtomicBitSet.40>;
 "singleton"[value] -> <Gbnf_parser__AtomicBitSet.36>;
 "subset"[value] -> <Gbnf_parser__AtomicBitSet.77>;
 "t"[type] -> <Gbnf_parser__AtomicBitSet.0>;
 "tib"[value] -> <Gbnf_parser__AtomicBitSet.16>;
 "tib16"[value] -> <Gbnf_parser__AtomicBitSet.7>;
 "tib32"[value] -> <Gbnf_parser__AtomicBitSet.10>;
 "tib64"[value] -> <Gbnf_parser__AtomicBitSet.14>;
 "union"[value] -> <Gbnf_parser__AtomicBitSet.83>;
 }

(setglobal Gbnf_parser__AtomicBitSet!
  (let
    (*match*/1703 =
       (after Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(18)<ghost>:1194-1194
         (apply (field 3 (global Ppx_module_timer_runtime!))
           #"Gbnf_parser__AtomicBitSet"))
     *match*/1701 =
       (after Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(18)<ghost>:1194-1194
         (apply
           (field 0 (field 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
           "gbnf_parser"))
     *match*/1699 =
       (after Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(18)<ghost>:1194-1194
         (apply (field 0 (field 5 (global Expect_test_collector!)))
           "lib/AtomicBitSet.ml"))
     *match*/1697 =
       (after Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(18)<ghost>:1194-1194
         (apply (field 4 (global Ppx_inline_test_lib!)) "gbnf_parser"
           "AtomicBitSet.ml"))
     bound/1130 =[int] (- (field 8 (global Stdlib__Sys!)) 1)
     bit/1204 =
       (function i/1206[int] : int
         (funct-body Gbnf_parser__AtomicBitSet.bit lib/AtomicBitSet.ml(31)<ghost>:1380-1425
           (before Gbnf_parser__AtomicBitSet.bit lib/AtomicBitSet.ml(32):1386-1425
             (seq
               (if (&& (<= 0 i/1206) (< i/1206 bound/1130)) 0
                 (raise
                   (after Gbnf_parser__AtomicBitSet.bit lib/AtomicBitSet.ml(32):1386-1414
                     (makeblock 0 (global Assert_failure/28!)
                       [0: "lib/AtomicBitSet.ml" 32 2]))))
               (before Gbnf_parser__AtomicBitSet.bit lib/AtomicBitSet.ml(33):1418-1425
                 (lsl 1 i/1206))))))
     log2/1207 =
       (after Gbnf_parser__AtomicBitSet.log2 lib/AtomicBitSet.ml(47):1919-1935
         (caml_make_vect 255 0))
     *match*/1695 =
       (for i/1255 0 to 7
         (before Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(49):1965-1982
           (after Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(49):1965-1982
             (array.set[int] log2/1207
               (after Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(49):1971-1976
                 (apply bit/1204 i/1255))
               i/1255))))
     tib16/1256 =
       (function accu/1258[int] x/1259[int] : int
         (funct-body Gbnf_parser__AtomicBitSet.tib16 lib/AtomicBitSet.ml(51)<ghost>:1999-2090
           (before Gbnf_parser__AtomicBitSet.tib16 lib/AtomicBitSet.ml(52):2010-2090
             (if (== (and x/1259 255) 0)
               (before Gbnf_parser__AtomicBitSet.tib16 lib/AtomicBitSet.ml(53):2038-2063
                 (+ (+ accu/1258 8)
                   (after Gbnf_parser__AtomicBitSet.tib16 lib/AtomicBitSet.ml(53):2049-2063
                     (array.get[int] log2/1207 (lsr x/1259 8)))))
               (before Gbnf_parser__AtomicBitSet.tib16 lib/AtomicBitSet.ml(55):2075-2090
                 (+ accu/1258
                   (after Gbnf_parser__AtomicBitSet.tib16 lib/AtomicBitSet.ml(55):2082-2090
                     (array.get[int] log2/1207 x/1259))))))))
     tib32/1260 =
       (function accu/1262[int] x/1263[int] : int
         (funct-body Gbnf_parser__AtomicBitSet.tib32 lib/AtomicBitSet.ml(57)<ghost>:2102-2195
           (before Gbnf_parser__AtomicBitSet.tib32 lib/AtomicBitSet.ml(58):2113-2195
             (if (== (and x/1263 65535) 0)
               (before Gbnf_parser__AtomicBitSet.tib32 lib/AtomicBitSet.ml(59):2143-2171
                 (after Gbnf_parser__AtomicBitSet.tib32 lib/AtomicBitSet.ml(59):2143-2171
                   (apply tib16/1256 (+ accu/1262 16) (lsr x/1263 16))))
               (before Gbnf_parser__AtomicBitSet.tib32 lib/AtomicBitSet.ml(61):2183-2195
                 (after Gbnf_parser__AtomicBitSet.tib32 lib/AtomicBitSet.ml(61):2183-2195
                   (apply tib16/1256 accu/1262 x/1263)))))))
     ffffffff/1264 =[int] (or (lsl 65535 16) 65535)
     tib64/1265 =
       (function x/1267[int] : int
         (funct-body Gbnf_parser__AtomicBitSet.tib64 lib/AtomicBitSet.ml(68)<ghost>:2381-2459
           (before Gbnf_parser__AtomicBitSet.tib64 lib/AtomicBitSet.ml(69):2387-2459
             (if (== (and x/1267 ffffffff/1264) 0)
               (before Gbnf_parser__AtomicBitSet.tib64 lib/AtomicBitSet.ml(70):2419-2438
                 (after Gbnf_parser__AtomicBitSet.tib64 lib/AtomicBitSet.ml(70):2419-2438
                   (apply tib32/1260 32 (lsr x/1267 32))))
               (before Gbnf_parser__AtomicBitSet.tib64 lib/AtomicBitSet.ml(72):2450-2459
                 (after Gbnf_parser__AtomicBitSet.tib64 lib/AtomicBitSet.ml(72):2450-2459
                   (apply tib32/1260 0 x/1267)))))))
     tib/1268 =
       (function x/1270[int] : int
         (funct-body Gbnf_parser__AtomicBitSet.tib lib/AtomicBitSet.ml(74)<ghost>:2469-2559
           (before Gbnf_parser__AtomicBitSet.tib lib/AtomicBitSet.ml(75):2475-2559
             (let (*match*/1678 = (field 8 (global Stdlib__Sys!)))
               (catch
                 (if (!= *match*/1678 32)
                   (if (!= *match*/1678 64) (exit 1)
                     (before Gbnf_parser__AtomicBitSet.tib lib/AtomicBitSet.ml(77):2530-2537
                       (after Gbnf_parser__AtomicBitSet.tib lib/AtomicBitSet.ml(77):2530-2537
                         (apply tib64/1265 x/1270))))
                   (before Gbnf_parser__AtomicBitSet.tib lib/AtomicBitSet.ml(76):2510-2519
                     (after Gbnf_parser__AtomicBitSet.tib lib/AtomicBitSet.ml(76):2510-2519
                       (apply tib32/1260 0 x/1270))))
                with (1)
                 (before Gbnf_parser__AtomicBitSet.tib lib/AtomicBitSet.ml(78):2547-2559
                   (raise
                     (after Gbnf_parser__AtomicBitSet.tib lib/AtomicBitSet.ml(78):2547-2559
                       (makeblock 0 (global Assert_failure/28!)
                         [0: "lib/AtomicBitSet.ml" 78 9])))))))))
     *match*/1693 =
       (for i/1271 0 to (- bound/1130 1)
         (before Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(82):2653-2677
           (if
             (==
               (after Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(82):2661-2672
                 (apply tib/1268
                   (after Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(82):2665-2672
                     (apply bit/1204 i/1271))))
               i/1271)
             0
             (raise
               (after Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(82):2653-2677
                 (makeblock 0 (global Assert_failure/28!)
                   [0: "lib/AtomicBitSet.ml" 82 28]))))))
     b0/1272 =[int] 1431655765
     b1/1273 =[int] 858993459
     b2/1274 =[int] 252645135
     pop32/1275 =
       (function x/1277[int] : int
         (funct-body Gbnf_parser__AtomicBitSet.pop32 lib/AtomicBitSet.ml(95)<ghost>:3001-3476
           (before Gbnf_parser__AtomicBitSet.pop32 lib/AtomicBitSet.ml(98):3143-3476
             (let (x/1278 =[int] (- x/1277 (and (lsr x/1277 1) b0/1272)))
               (before Gbnf_parser__AtomicBitSet.pop32 lib/AtomicBitSet.ml(99):3186-3476
                 (let
                   (x/1279 =[int]
                      (+ (and x/1278 b1/1273) (and (lsr x/1278 2) b1/1273)))
                   (before Gbnf_parser__AtomicBitSet.pop32 lib/AtomicBitSet.ml(100):3229-3476
                     (let
                       (x/1280 =[int]
                          (+ (and x/1279 b2/1274)
                            (and (lsr x/1279 4) b2/1274)))
                       (before Gbnf_parser__AtomicBitSet.pop32 lib/AtomicBitSet.ml(103):3414-3476
                         (let (x/1281 =[int] (+ x/1280 (lsr x/1280 8)))
                           (before Gbnf_parser__AtomicBitSet.pop32 lib/AtomicBitSet.ml(104):3439-3476
                             (let (x/1282 =[int] (+ x/1281 (lsr x/1281 16)))
                               (before Gbnf_parser__AtomicBitSet.pop32 lib/AtomicBitSet.ml(105):3465-3476
                                 (and x/1282 255))))))))))))))
     pop64/1283 =
       (function x/1285[int] : int
         (funct-body Gbnf_parser__AtomicBitSet.pop64 lib/AtomicBitSet.ml(107)<ghost>:3488-3520
           (before Gbnf_parser__AtomicBitSet.pop64 lib/AtomicBitSet.ml(108):3494-3520
             (+
               (after Gbnf_parser__AtomicBitSet.pop64 lib/AtomicBitSet.ml(108):3494-3501
                 (apply pop32/1275 x/1285))
               (after Gbnf_parser__AtomicBitSet.pop64 lib/AtomicBitSet.ml(108):3504-3520
                 (apply pop32/1275 (lsr x/1285 32)))))))
     pop/1286 =
       (function x/1288[int] : int
         (funct-body Gbnf_parser__AtomicBitSet.pop lib/AtomicBitSet.ml(112)<ghost>:3666-3754
           (before Gbnf_parser__AtomicBitSet.pop lib/AtomicBitSet.ml(113):3672-3754
             (let (*match*/1679 = (field 8 (global Stdlib__Sys!)))
               (catch
                 (if (!= *match*/1679 32)
                   (if (!= *match*/1679 64) (exit 2)
                     (before Gbnf_parser__AtomicBitSet.pop lib/AtomicBitSet.ml(115):3725-3732
                       (after Gbnf_parser__AtomicBitSet.pop lib/AtomicBitSet.ml(115):3725-3732
                         (apply pop64/1283 x/1288))))
                   (before Gbnf_parser__AtomicBitSet.pop lib/AtomicBitSet.ml(114):3707-3714
                     (after Gbnf_parser__AtomicBitSet.pop lib/AtomicBitSet.ml(114):3707-3714
                       (apply pop32/1275 x/1288))))
                with (2)
                 (before Gbnf_parser__AtomicBitSet.pop lib/AtomicBitSet.ml(116):3742-3754
                   (raise
                     (after Gbnf_parser__AtomicBitSet.pop lib/AtomicBitSet.ml(116):3742-3754
                       (makeblock 0 (global Assert_failure/28!)
                         [0: "lib/AtomicBitSet.ml" 116 9])))))))))
     empty/1289 =[int] 0
     is_empty/1290 =
       (function s/1292[int] : int
         (funct-body Gbnf_parser__AtomicBitSet.is_empty lib/AtomicBitSet.ml(125)<ghost>:3887-3898
           (before Gbnf_parser__AtomicBitSet.is_empty lib/AtomicBitSet.ml(126):3893-3898
             (== s/1292 0))))
     singleton/1293 = bit/1204
     add/1294 =
       (function i/1296[int] s/1297[int] : int
         (funct-body Gbnf_parser__AtomicBitSet.add lib/AtomicBitSet.ml(131)<ghost>:3931-3952
           (before Gbnf_parser__AtomicBitSet.add lib/AtomicBitSet.ml(132):3939-3952
             (or
               (after Gbnf_parser__AtomicBitSet.add lib/AtomicBitSet.ml(132):3939-3946
                 (apply bit/1204 i/1296))
               s/1297))))
     remove/1298 =
       (function i/1300[int] s/1301[int] : int
         (funct-body Gbnf_parser__AtomicBitSet.remove lib/AtomicBitSet.ml(134)<ghost>:3965-3994
           (before Gbnf_parser__AtomicBitSet.remove lib/AtomicBitSet.ml(135):3973-3994
             (and
               (after Gbnf_parser__AtomicBitSet.remove lib/AtomicBitSet.ml(135):3973-3987
                 (apply (field 20 (global Stdlib!))
                   (after Gbnf_parser__AtomicBitSet.remove lib/AtomicBitSet.ml(135):3979-3986
                     (apply bit/1204 i/1300))))
               s/1301)))))
    (letrec
      (fold_delta/1302
         (function delta/1303[int] f/1304 s/1305[int] accu/1306
           (funct-body Gbnf_parser__AtomicBitSet.fold_delta lib/AtomicBitSet.ml(137)<ghost>:4015-4201
             (before Gbnf_parser__AtomicBitSet.fold_delta lib/AtomicBitSet.ml(138):4034-4201
               (if (== s/1305 0)
                 (before Gbnf_parser__AtomicBitSet.fold_delta lib/AtomicBitSet.ml(139):4052-4056
                   accu/1306)
                 (before Gbnf_parser__AtomicBitSet.fold_delta lib/AtomicBitSet.ml(141):4068-4201
                   (let (x/1307 =[int] (and s/1305 (~ s/1305)))
                     (before Gbnf_parser__AtomicBitSet.fold_delta lib/AtomicBitSet.ml(142):4095-4201
                       (let (s/1308 =[int] (xor s/1305 x/1307))
                         (before Gbnf_parser__AtomicBitSet.fold_delta lib/AtomicBitSet.ml(143):4135-4201
                           (let
                             (accu/1309 =
                                (after Gbnf_parser__AtomicBitSet.fold_delta lib/AtomicBitSet.ml(143):4146-4168
                                  (apply f/1304
                                    (+ delta/1303
                                      (after Gbnf_parser__AtomicBitSet.fold_delta lib/AtomicBitSet.ml(143):4157-4162
                                        (apply tib/1268 x/1307)))
                                    accu/1306)))
                             (before Gbnf_parser__AtomicBitSet.fold_delta lib/AtomicBitSet.ml(144):4176-4201
                               (after Gbnf_parser__AtomicBitSet.fold_delta lib/AtomicBitSet.ml(144):4176-4201
                                 (apply fold_delta/1302 delta/1303 f/1304
                                   s/1308 accu/1309))))))))))))))
      (letrec
        (iter_delta/1310
           (function delta/1311[int] f/1312 s/1313[int] : int
             (funct-body Gbnf_parser__AtomicBitSet.iter_delta lib/AtomicBitSet.ml(146)<ghost>:4222-4365
               (before Gbnf_parser__AtomicBitSet.iter_delta lib/AtomicBitSet.ml(147):4236-4365
                 (if (!= s/1313 0)
                   (before Gbnf_parser__AtomicBitSet.iter_delta lib/AtomicBitSet.ml(148):4255-4365
                     (let (x/1314 =[int] (and s/1313 (~ s/1313)))
                       (before Gbnf_parser__AtomicBitSet.iter_delta lib/AtomicBitSet.ml(149):4282-4365
                         (let (s/1315 =[int] (xor s/1313 x/1314))
                           (before Gbnf_parser__AtomicBitSet.iter_delta lib/AtomicBitSet.ml(150):4322-4365
                             (seq
                               (after Gbnf_parser__AtomicBitSet.iter_delta lib/AtomicBitSet.ml(150):4322-4339
                                 (apply f/1312
                                   (+ delta/1311
                                     (after Gbnf_parser__AtomicBitSet.iter_delta lib/AtomicBitSet.ml(150):4333-4338
                                       (apply tib/1268 x/1314)))))
                               (before Gbnf_parser__AtomicBitSet.iter_delta lib/AtomicBitSet.ml(151):4345-4365
                                 (after Gbnf_parser__AtomicBitSet.iter_delta lib/AtomicBitSet.ml(151):4345-4365
                                   (apply iter_delta/1310 delta/1311 f/1312
                                     s/1315)))))))))
                   0)))))
        (letrec
          (fold/1316
             (function f/1317 s/1318[int] accu/1319
               (funct-body Gbnf_parser__AtomicBitSet.fold lib/AtomicBitSet.ml(153)<ghost>:4380-4540
                 (before Gbnf_parser__AtomicBitSet.fold lib/AtomicBitSet.ml(154):4393-4540
                   (if (== s/1318 0)
                     (before Gbnf_parser__AtomicBitSet.fold lib/AtomicBitSet.ml(155):4411-4415
                       accu/1319)
                     (before Gbnf_parser__AtomicBitSet.fold lib/AtomicBitSet.ml(157):4427-4540
                       (let (x/1320 =[int] (and s/1318 (~ s/1318)))
                         (before Gbnf_parser__AtomicBitSet.fold lib/AtomicBitSet.ml(158):4454-4540
                           (let (s/1321 =[int] (xor s/1318 x/1320))
                             (before Gbnf_parser__AtomicBitSet.fold lib/AtomicBitSet.ml(159):4494-4540
                               (let
                                 (accu/1322 =
                                    (after Gbnf_parser__AtomicBitSet.fold lib/AtomicBitSet.ml(159):4505-4519
                                      (apply f/1317
                                        (after Gbnf_parser__AtomicBitSet.fold lib/AtomicBitSet.ml(159):4507-4514
                                          (apply tib/1268 x/1320))
                                        accu/1319)))
                                 (before Gbnf_parser__AtomicBitSet.fold lib/AtomicBitSet.ml(160):4527-4540
                                   (after Gbnf_parser__AtomicBitSet.fold lib/AtomicBitSet.ml(160):4527-4540
                                     (apply fold/1316 f/1317 s/1321
                                       accu/1322))))))))))))))
          (letrec
            (iter/1323
               (function f/1324 s/1325[int] : int
                 (funct-body Gbnf_parser__AtomicBitSet.iter lib/AtomicBitSet.ml(162)<ghost>:4555-4672
                   (before Gbnf_parser__AtomicBitSet.iter lib/AtomicBitSet.ml(163):4563-4672
                     (if (!= s/1325 0)
                       (before Gbnf_parser__AtomicBitSet.iter lib/AtomicBitSet.ml(164):4582-4672
                         (let (x/1326 =[int] (and s/1325 (~ s/1325)))
                           (before Gbnf_parser__AtomicBitSet.iter lib/AtomicBitSet.ml(165):4609-4672
                             (let (s/1327 =[int] (xor s/1325 x/1326))
                               (before Gbnf_parser__AtomicBitSet.iter lib/AtomicBitSet.ml(166):4649-4672
                                 (seq
                                   (after Gbnf_parser__AtomicBitSet.iter lib/AtomicBitSet.ml(166):4649-4658
                                     (apply f/1324
                                       (after Gbnf_parser__AtomicBitSet.iter lib/AtomicBitSet.ml(166):4651-4658
                                         (apply tib/1268 x/1326))))
                                   (before Gbnf_parser__AtomicBitSet.iter lib/AtomicBitSet.ml(167):4664-4672
                                     (after Gbnf_parser__AtomicBitSet.iter lib/AtomicBitSet.ml(167):4664-4672
                                       (apply iter/1323 f/1324 s/1327)))))))))
                       0)))))
            (let
              (is_singleton/1328 =
                 (function s/1330[int] : int
                   (funct-body Gbnf_parser__AtomicBitSet.is_singleton lib/AtomicBitSet.ml(169)<ghost>:4691-4839
                     (before Gbnf_parser__AtomicBitSet.is_singleton lib/AtomicBitSet.ml(172):4821-4839
                       (== (and s/1330 (- s/1330 1)) 0))))
               cardinal/1331 =
                 (function s/1333[int] : int
                   (funct-body Gbnf_parser__AtomicBitSet.cardinal lib/AtomicBitSet.ml(174)<ghost>:4854-4865
                     (before Gbnf_parser__AtomicBitSet.cardinal lib/AtomicBitSet.ml(175):4860-4865
                       (after Gbnf_parser__AtomicBitSet.cardinal lib/AtomicBitSet.ml(175):4860-4865
                         (apply pop/1286 s/1333)))))
               elements/1334 =
                 (function s/1336[int]
                   (funct-body Gbnf_parser__AtomicBitSet.elements lib/AtomicBitSet.ml(178)<ghost>:4920-5015
                     (before Gbnf_parser__AtomicBitSet.elements lib/AtomicBitSet.ml(180):4982-5015
                       (after Gbnf_parser__AtomicBitSet.elements lib/AtomicBitSet.ml(180):4982-5015
                         (apply fold/1316
                           (function tl/1337[int] hd/1338
                             (funct-body Gbnf_parser__AtomicBitSet.elements.(fun) lib/AtomicBitSet.ml(180):4987-5010
                               (before Gbnf_parser__AtomicBitSet.elements.(fun) lib/AtomicBitSet.ml(180):5001-5009
                                 (makeblock 0 (int,*) tl/1337 hd/1338))))
                           s/1336 0)))))
               subset/1339 =
                 (function s1/1341[int] s2/1342[int] : int
                   (funct-body Gbnf_parser__AtomicBitSet.subset lib/AtomicBitSet.ml(182)<ghost>:5028-5053
                     (before Gbnf_parser__AtomicBitSet.subset lib/AtomicBitSet.ml(183):5038-5053
                       (== (and s1/1341 s2/1342) s1/1341))))
               mem/1343 =
                 (function i/1345[int] s/1346[int] : int
                   (funct-body Gbnf_parser__AtomicBitSet.mem lib/AtomicBitSet.ml(185)<ghost>:5063-5093
                     (before Gbnf_parser__AtomicBitSet.mem lib/AtomicBitSet.ml(186):5071-5093
                       (after Gbnf_parser__AtomicBitSet.mem lib/AtomicBitSet.ml(186):5071-5093
                         (apply subset/1339
                           (after Gbnf_parser__AtomicBitSet.mem lib/AtomicBitSet.ml(186):5078-5091
                             (apply singleton/1293 i/1345))
                           s/1346)))))
               union/1347 =
                 (function s1/1349[int] s2/1350[int] : int
                   (funct-body Gbnf_parser__AtomicBitSet.union lib/AtomicBitSet.ml(188)<ghost>:5105-5124
                     (before Gbnf_parser__AtomicBitSet.union lib/AtomicBitSet.ml(189):5115-5124
                       (or s1/1349 s2/1350))))
               inter/1351 =
                 (function s1/1353[int] s2/1354[int] : int
                   (funct-body Gbnf_parser__AtomicBitSet.inter lib/AtomicBitSet.ml(191)<ghost>:5136-5156
                     (before Gbnf_parser__AtomicBitSet.inter lib/AtomicBitSet.ml(192):5146-5156
                       (and s1/1353 s2/1354))))
               minimum/1355 =
                 (function s/1357[int] : int
                   (funct-body Gbnf_parser__AtomicBitSet.minimum lib/AtomicBitSet.ml(194)<ghost>:5170-5253
                     (before Gbnf_parser__AtomicBitSet.minimum lib/AtomicBitSet.ml(195):5176-5253
                       (if (== s/1357 0)
                         (before Gbnf_parser__AtomicBitSet.minimum lib/AtomicBitSet.ml(196):5194-5209
                           (raise
                             (after Gbnf_parser__AtomicBitSet.minimum lib/AtomicBitSet.ml(196):5194-5209
                               (field 7 (global Stdlib!)))))
                         (before Gbnf_parser__AtomicBitSet.minimum lib/AtomicBitSet.ml(198):5221-5253
                           (let (x/1358 =[int] (and s/1357 (~ s/1357)))
                             (before Gbnf_parser__AtomicBitSet.minimum lib/AtomicBitSet.ml(199):5248-5253
                               (after Gbnf_parser__AtomicBitSet.minimum lib/AtomicBitSet.ml(199):5248-5253
                                 (apply tib/1268 x/1358)))))))))
               choose/1359 = minimum/1355
               compare/1360 =
                 (function prim/1681 prim/1680 stub
                   (compare_ints prim/1681 prim/1680))
               equal/1361 =
                 (function prim/1683 prim/1682 stub (== prim/1683 prim/1682))
               disjoint/1362 =
                 (function s1/1364[int] s2/1365[int] : int
                   (funct-body Gbnf_parser__AtomicBitSet.disjoint lib/AtomicBitSet.ml(210)<ghost>:5401-5433
                     (before Gbnf_parser__AtomicBitSet.disjoint lib/AtomicBitSet.ml(211):5411-5433
                       (after Gbnf_parser__AtomicBitSet.disjoint lib/AtomicBitSet.ml(211):5411-5433
                         (apply is_empty/1290
                           (after Gbnf_parser__AtomicBitSet.disjoint lib/AtomicBitSet.ml(211):5420-5433
                             (apply inter/1351 s1/1364 s2/1365)))))))
               *match*/1691 =
                 (after Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(211)<ghost>:5433-5433
                   (apply (field 5 (global Ppx_inline_test_lib!))
                     "gbnf_parser"))
               *match*/1689 =
                 (after Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(211)<ghost>:5433-5433
                   (apply (field 1 (field 5 (global Expect_test_collector!)))
                     0))
               *match*/1687 =
                 (after Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(211)<ghost>:5433-5433
                   (apply
                     (field 1
                       (field 0
                         (global Ppx_bench_lib__Benchmark_accumulator!)))
                     0))
               *match*/1685 =
                 (after Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(211)<ghost>:5433-5433
                   (apply (field 4 (global Ppx_module_timer_runtime!))
                     #"Gbnf_parser__AtomicBitSet")))
              (pseudo <unknown location>
                (makeblock 0 bound/1130 bit/1204 log2/1207 tib16/1256
                  tib32/1260 ffffffff/1264 tib64/1265 tib/1268 b0/1272
                  b1/1273 b2/1274 pop32/1275 pop64/1283 pop/1286 empty/1289
                  is_empty/1290 singleton/1293 add/1294 remove/1298
                  fold_delta/1302 iter_delta/1310 fold/1316 iter/1323
                  is_singleton/1328 cardinal/1331 elements/1334 subset/1339
                  mem/1343 union/1347 inter/1351 minimum/1355 choose/1359
                  compare/1360 equal/1361 disjoint/1362)))))))))
(setglobal Gbnf_parser__AtomicBitSet!
  (let
    (*match*/1703 =
       (after Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(18)<ghost>:1194-1194
         (apply (field 3 (global Ppx_module_timer_runtime!))
           #"Gbnf_parser__AtomicBitSet"))
     *match*/1701 =
       (after Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(18)<ghost>:1194-1194
         (apply
           (field 0 (field 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
           "gbnf_parser"))
     *match*/1699 =
       (after Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(18)<ghost>:1194-1194
         (apply (field 0 (field 5 (global Expect_test_collector!)))
           "lib/AtomicBitSet.ml"))
     *match*/1697 =
       (after Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(18)<ghost>:1194-1194
         (apply (field 4 (global Ppx_inline_test_lib!)) "gbnf_parser"
           "AtomicBitSet.ml"))
     bound/1130 =[int] (- (field 8 (global Stdlib__Sys!)) 1)
     bit/1204 =
       (function i/1206[int] : int
         (funct-body Gbnf_parser__AtomicBitSet.bit lib/AtomicBitSet.ml(31)<ghost>:1380-1425
           (before Gbnf_parser__AtomicBitSet.bit lib/AtomicBitSet.ml(32):1386-1425
             (seq
               (if (&& (<= 0 i/1206) (< i/1206 bound/1130)) 0
                 (raise
                   (after Gbnf_parser__AtomicBitSet.bit lib/AtomicBitSet.ml(32):1386-1414
                     (makeblock 0 (global Assert_failure/28!)
                       [0: "lib/AtomicBitSet.ml" 32 2]))))
               (before Gbnf_parser__AtomicBitSet.bit lib/AtomicBitSet.ml(33):1418-1425
                 (lsl 1 i/1206))))))
     log2/1207 =
       (after Gbnf_parser__AtomicBitSet.log2 lib/AtomicBitSet.ml(47):1919-1935
         (caml_make_vect 255 0))
     *match*/1695 =
       (for i/1255 0 to 7
         (before Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(49):1965-1982
           (after Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(49):1965-1982
             (array.set[int] log2/1207
               (after Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(49):1971-1976
                 (apply bit/1204 i/1255))
               i/1255))))
     tib16/1256 =
       (function accu/1258[int] x/1259[int] : int
         (funct-body Gbnf_parser__AtomicBitSet.tib16 lib/AtomicBitSet.ml(51)<ghost>:1999-2090
           (before Gbnf_parser__AtomicBitSet.tib16 lib/AtomicBitSet.ml(52):2010-2090
             (if (== (and x/1259 255) 0)
               (before Gbnf_parser__AtomicBitSet.tib16 lib/AtomicBitSet.ml(53):2038-2063
                 (+ (+ accu/1258 8)
                   (after Gbnf_parser__AtomicBitSet.tib16 lib/AtomicBitSet.ml(53):2049-2063
                     (array.get[int] log2/1207 (lsr x/1259 8)))))
               (before Gbnf_parser__AtomicBitSet.tib16 lib/AtomicBitSet.ml(55):2075-2090
                 (+ accu/1258
                   (after Gbnf_parser__AtomicBitSet.tib16 lib/AtomicBitSet.ml(55):2082-2090
                     (array.get[int] log2/1207 x/1259))))))))
     tib32/1260 =
       (function accu/1262[int] x/1263[int] : int
         (funct-body Gbnf_parser__AtomicBitSet.tib32 lib/AtomicBitSet.ml(57)<ghost>:2102-2195
           (before Gbnf_parser__AtomicBitSet.tib32 lib/AtomicBitSet.ml(58):2113-2195
             (if (== (and x/1263 65535) 0)
               (before Gbnf_parser__AtomicBitSet.tib32 lib/AtomicBitSet.ml(59):2143-2171
                 (after Gbnf_parser__AtomicBitSet.tib32 lib/AtomicBitSet.ml(59):2143-2171
                   (apply tib16/1256 (+ accu/1262 16) (lsr x/1263 16))))
               (before Gbnf_parser__AtomicBitSet.tib32 lib/AtomicBitSet.ml(61):2183-2195
                 (after Gbnf_parser__AtomicBitSet.tib32 lib/AtomicBitSet.ml(61):2183-2195
                   (apply tib16/1256 accu/1262 x/1263)))))))
     ffffffff/1264 =[int] (or (lsl 65535 16) 65535)
     tib64/1265 =
       (function x/1267[int] : int
         (funct-body Gbnf_parser__AtomicBitSet.tib64 lib/AtomicBitSet.ml(68)<ghost>:2381-2459
           (before Gbnf_parser__AtomicBitSet.tib64 lib/AtomicBitSet.ml(69):2387-2459
             (if (== (and x/1267 ffffffff/1264) 0)
               (before Gbnf_parser__AtomicBitSet.tib64 lib/AtomicBitSet.ml(70):2419-2438
                 (after Gbnf_parser__AtomicBitSet.tib64 lib/AtomicBitSet.ml(70):2419-2438
                   (apply tib32/1260 32 (lsr x/1267 32))))
               (before Gbnf_parser__AtomicBitSet.tib64 lib/AtomicBitSet.ml(72):2450-2459
                 (after Gbnf_parser__AtomicBitSet.tib64 lib/AtomicBitSet.ml(72):2450-2459
                   (apply tib32/1260 0 x/1267)))))))
     tib/1268 =
       (function x/1270[int] : int
         (funct-body Gbnf_parser__AtomicBitSet.tib lib/AtomicBitSet.ml(74)<ghost>:2469-2559
           (before Gbnf_parser__AtomicBitSet.tib lib/AtomicBitSet.ml(75):2475-2559
             (let (*match*/1678 = (field 8 (global Stdlib__Sys!)))
               (if (!= *match*/1678 32)
                 (if (!= *match*/1678 64)
                   (before Gbnf_parser__AtomicBitSet.tib lib/AtomicBitSet.ml(78):2547-2559
                     (raise
                       (after Gbnf_parser__AtomicBitSet.tib lib/AtomicBitSet.ml(78):2547-2559
                         (makeblock 0 (global Assert_failure/28!)
                           [0: "lib/AtomicBitSet.ml" 78 9]))))
                   (before Gbnf_parser__AtomicBitSet.tib lib/AtomicBitSet.ml(77):2530-2537
                     (after Gbnf_parser__AtomicBitSet.tib lib/AtomicBitSet.ml(77):2530-2537
                       (apply tib64/1265 x/1270))))
                 (before Gbnf_parser__AtomicBitSet.tib lib/AtomicBitSet.ml(76):2510-2519
                   (after Gbnf_parser__AtomicBitSet.tib lib/AtomicBitSet.ml(76):2510-2519
                     (apply tib32/1260 0 x/1270))))))))
     *match*/1693 =
       (for i/1271 0 to (- bound/1130 1)
         (before Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(82):2653-2677
           (if
             (==
               (after Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(82):2661-2672
                 (apply tib/1268
                   (after Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(82):2665-2672
                     (apply bit/1204 i/1271))))
               i/1271)
             0
             (raise
               (after Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(82):2653-2677
                 (makeblock 0 (global Assert_failure/28!)
                   [0: "lib/AtomicBitSet.ml" 82 28]))))))
     b0/1272 =[int] 1431655765
     b1/1273 =[int] 858993459
     b2/1274 =[int] 252645135
     pop32/1275 =
       (function x/1277[int] : int
         (funct-body Gbnf_parser__AtomicBitSet.pop32 lib/AtomicBitSet.ml(95)<ghost>:3001-3476
           (before Gbnf_parser__AtomicBitSet.pop32 lib/AtomicBitSet.ml(98):3143-3476
             (let (x/1278 =[int] (- x/1277 (and (lsr x/1277 1) b0/1272)))
               (before Gbnf_parser__AtomicBitSet.pop32 lib/AtomicBitSet.ml(99):3186-3476
                 (let
                   (x/1279 =[int]
                      (+ (and x/1278 b1/1273) (and (lsr x/1278 2) b1/1273)))
                   (before Gbnf_parser__AtomicBitSet.pop32 lib/AtomicBitSet.ml(100):3229-3476
                     (let
                       (x/1280 =[int]
                          (+ (and x/1279 b2/1274)
                            (and (lsr x/1279 4) b2/1274)))
                       (before Gbnf_parser__AtomicBitSet.pop32 lib/AtomicBitSet.ml(103):3414-3476
                         (let (x/1281 =[int] (+ x/1280 (lsr x/1280 8)))
                           (before Gbnf_parser__AtomicBitSet.pop32 lib/AtomicBitSet.ml(104):3439-3476
                             (let (x/1282 =[int] (+ x/1281 (lsr x/1281 16)))
                               (before Gbnf_parser__AtomicBitSet.pop32 lib/AtomicBitSet.ml(105):3465-3476
                                 (and x/1282 255))))))))))))))
     pop64/1283 =
       (function x/1285[int] : int
         (funct-body Gbnf_parser__AtomicBitSet.pop64 lib/AtomicBitSet.ml(107)<ghost>:3488-3520
           (before Gbnf_parser__AtomicBitSet.pop64 lib/AtomicBitSet.ml(108):3494-3520
             (+
               (after Gbnf_parser__AtomicBitSet.pop64 lib/AtomicBitSet.ml(108):3494-3501
                 (apply pop32/1275 x/1285))
               (after Gbnf_parser__AtomicBitSet.pop64 lib/AtomicBitSet.ml(108):3504-3520
                 (apply pop32/1275 (lsr x/1285 32)))))))
     pop/1286 =
       (function x/1288[int] : int
         (funct-body Gbnf_parser__AtomicBitSet.pop lib/AtomicBitSet.ml(112)<ghost>:3666-3754
           (before Gbnf_parser__AtomicBitSet.pop lib/AtomicBitSet.ml(113):3672-3754
             (let (*match*/1679 = (field 8 (global Stdlib__Sys!)))
               (if (!= *match*/1679 32)
                 (if (!= *match*/1679 64)
                   (before Gbnf_parser__AtomicBitSet.pop lib/AtomicBitSet.ml(116):3742-3754
                     (raise
                       (after Gbnf_parser__AtomicBitSet.pop lib/AtomicBitSet.ml(116):3742-3754
                         (makeblock 0 (global Assert_failure/28!)
                           [0: "lib/AtomicBitSet.ml" 116 9]))))
                   (before Gbnf_parser__AtomicBitSet.pop lib/AtomicBitSet.ml(115):3725-3732
                     (after Gbnf_parser__AtomicBitSet.pop lib/AtomicBitSet.ml(115):3725-3732
                       (apply pop64/1283 x/1288))))
                 (before Gbnf_parser__AtomicBitSet.pop lib/AtomicBitSet.ml(114):3707-3714
                   (after Gbnf_parser__AtomicBitSet.pop lib/AtomicBitSet.ml(114):3707-3714
                     (apply pop32/1275 x/1288))))))))
     empty/1289 =[int] 0
     is_empty/1290 =
       (function s/1292[int] : int
         (funct-body Gbnf_parser__AtomicBitSet.is_empty lib/AtomicBitSet.ml(125)<ghost>:3887-3898
           (before Gbnf_parser__AtomicBitSet.is_empty lib/AtomicBitSet.ml(126):3893-3898
             (== s/1292 0))))
     singleton/1293 = bit/1204
     add/1294 =
       (function i/1296[int] s/1297[int] : int
         (funct-body Gbnf_parser__AtomicBitSet.add lib/AtomicBitSet.ml(131)<ghost>:3931-3952
           (before Gbnf_parser__AtomicBitSet.add lib/AtomicBitSet.ml(132):3939-3952
             (or
               (after Gbnf_parser__AtomicBitSet.add lib/AtomicBitSet.ml(132):3939-3946
                 (apply bit/1204 i/1296))
               s/1297))))
     remove/1298 =
       (function i/1300[int] s/1301[int] : int
         (funct-body Gbnf_parser__AtomicBitSet.remove lib/AtomicBitSet.ml(134)<ghost>:3965-3994
           (before Gbnf_parser__AtomicBitSet.remove lib/AtomicBitSet.ml(135):3973-3994
             (and
               (after Gbnf_parser__AtomicBitSet.remove lib/AtomicBitSet.ml(135):3973-3987
                 (apply (field 20 (global Stdlib!))
                   (after Gbnf_parser__AtomicBitSet.remove lib/AtomicBitSet.ml(135):3979-3986
                     (apply bit/1204 i/1300))))
               s/1301)))))
    (letrec
      (fold_delta/1302
         (function delta/1303[int] f/1304 s/1305[int] accu/1306
           (funct-body Gbnf_parser__AtomicBitSet.fold_delta lib/AtomicBitSet.ml(137)<ghost>:4015-4201
             (before Gbnf_parser__AtomicBitSet.fold_delta lib/AtomicBitSet.ml(138):4034-4201
               (if (== s/1305 0)
                 (before Gbnf_parser__AtomicBitSet.fold_delta lib/AtomicBitSet.ml(139):4052-4056
                   accu/1306)
                 (before Gbnf_parser__AtomicBitSet.fold_delta lib/AtomicBitSet.ml(141):4068-4201
                   (let (x/1307 =[int] (and s/1305 (~ s/1305)))
                     (before Gbnf_parser__AtomicBitSet.fold_delta lib/AtomicBitSet.ml(142):4095-4201
                       (let (s/1308 =[int] (xor s/1305 x/1307))
                         (before Gbnf_parser__AtomicBitSet.fold_delta lib/AtomicBitSet.ml(143):4135-4201
                           (let
                             (accu/1309 =
                                (after Gbnf_parser__AtomicBitSet.fold_delta lib/AtomicBitSet.ml(143):4146-4168
                                  (apply f/1304
                                    (+ delta/1303
                                      (after Gbnf_parser__AtomicBitSet.fold_delta lib/AtomicBitSet.ml(143):4157-4162
                                        (apply tib/1268 x/1307)))
                                    accu/1306)))
                             (before Gbnf_parser__AtomicBitSet.fold_delta lib/AtomicBitSet.ml(144):4176-4201
                               (after Gbnf_parser__AtomicBitSet.fold_delta lib/AtomicBitSet.ml(144):4176-4201
                                 (apply fold_delta/1302 delta/1303 f/1304
                                   s/1308 accu/1309))))))))))))))
      (letrec
        (iter_delta/1310
           (function delta/1311[int] f/1312 s/1313[int] : int
             (funct-body Gbnf_parser__AtomicBitSet.iter_delta lib/AtomicBitSet.ml(146)<ghost>:4222-4365
               (before Gbnf_parser__AtomicBitSet.iter_delta lib/AtomicBitSet.ml(147):4236-4365
                 (if (!= s/1313 0)
                   (before Gbnf_parser__AtomicBitSet.iter_delta lib/AtomicBitSet.ml(148):4255-4365
                     (let (x/1314 =[int] (and s/1313 (~ s/1313)))
                       (before Gbnf_parser__AtomicBitSet.iter_delta lib/AtomicBitSet.ml(149):4282-4365
                         (let (s/1315 =[int] (xor s/1313 x/1314))
                           (before Gbnf_parser__AtomicBitSet.iter_delta lib/AtomicBitSet.ml(150):4322-4365
                             (seq
                               (after Gbnf_parser__AtomicBitSet.iter_delta lib/AtomicBitSet.ml(150):4322-4339
                                 (apply f/1312
                                   (+ delta/1311
                                     (after Gbnf_parser__AtomicBitSet.iter_delta lib/AtomicBitSet.ml(150):4333-4338
                                       (apply tib/1268 x/1314)))))
                               (before Gbnf_parser__AtomicBitSet.iter_delta lib/AtomicBitSet.ml(151):4345-4365
                                 (after Gbnf_parser__AtomicBitSet.iter_delta lib/AtomicBitSet.ml(151):4345-4365
                                   (apply iter_delta/1310 delta/1311 f/1312
                                     s/1315)))))))))
                   0)))))
        (letrec
          (fold/1316
             (function f/1317 s/1318[int] accu/1319
               (funct-body Gbnf_parser__AtomicBitSet.fold lib/AtomicBitSet.ml(153)<ghost>:4380-4540
                 (before Gbnf_parser__AtomicBitSet.fold lib/AtomicBitSet.ml(154):4393-4540
                   (if (== s/1318 0)
                     (before Gbnf_parser__AtomicBitSet.fold lib/AtomicBitSet.ml(155):4411-4415
                       accu/1319)
                     (before Gbnf_parser__AtomicBitSet.fold lib/AtomicBitSet.ml(157):4427-4540
                       (let (x/1320 =[int] (and s/1318 (~ s/1318)))
                         (before Gbnf_parser__AtomicBitSet.fold lib/AtomicBitSet.ml(158):4454-4540
                           (let (s/1321 =[int] (xor s/1318 x/1320))
                             (before Gbnf_parser__AtomicBitSet.fold lib/AtomicBitSet.ml(159):4494-4540
                               (let
                                 (accu/1322 =
                                    (after Gbnf_parser__AtomicBitSet.fold lib/AtomicBitSet.ml(159):4505-4519
                                      (apply f/1317
                                        (after Gbnf_parser__AtomicBitSet.fold lib/AtomicBitSet.ml(159):4507-4514
                                          (apply tib/1268 x/1320))
                                        accu/1319)))
                                 (before Gbnf_parser__AtomicBitSet.fold lib/AtomicBitSet.ml(160):4527-4540
                                   (after Gbnf_parser__AtomicBitSet.fold lib/AtomicBitSet.ml(160):4527-4540
                                     (apply fold/1316 f/1317 s/1321
                                       accu/1322))))))))))))))
          (letrec
            (iter/1323
               (function f/1324 s/1325[int] : int
                 (funct-body Gbnf_parser__AtomicBitSet.iter lib/AtomicBitSet.ml(162)<ghost>:4555-4672
                   (before Gbnf_parser__AtomicBitSet.iter lib/AtomicBitSet.ml(163):4563-4672
                     (if (!= s/1325 0)
                       (before Gbnf_parser__AtomicBitSet.iter lib/AtomicBitSet.ml(164):4582-4672
                         (let (x/1326 =[int] (and s/1325 (~ s/1325)))
                           (before Gbnf_parser__AtomicBitSet.iter lib/AtomicBitSet.ml(165):4609-4672
                             (let (s/1327 =[int] (xor s/1325 x/1326))
                               (before Gbnf_parser__AtomicBitSet.iter lib/AtomicBitSet.ml(166):4649-4672
                                 (seq
                                   (after Gbnf_parser__AtomicBitSet.iter lib/AtomicBitSet.ml(166):4649-4658
                                     (apply f/1324
                                       (after Gbnf_parser__AtomicBitSet.iter lib/AtomicBitSet.ml(166):4651-4658
                                         (apply tib/1268 x/1326))))
                                   (before Gbnf_parser__AtomicBitSet.iter lib/AtomicBitSet.ml(167):4664-4672
                                     (after Gbnf_parser__AtomicBitSet.iter lib/AtomicBitSet.ml(167):4664-4672
                                       (apply iter/1323 f/1324 s/1327)))))))))
                       0)))))
            (let
              (is_singleton/1328 =
                 (function s/1330[int] : int
                   (funct-body Gbnf_parser__AtomicBitSet.is_singleton lib/AtomicBitSet.ml(169)<ghost>:4691-4839
                     (before Gbnf_parser__AtomicBitSet.is_singleton lib/AtomicBitSet.ml(172):4821-4839
                       (== (and s/1330 (- s/1330 1)) 0))))
               cardinal/1331 =
                 (function s/1333[int] : int
                   (funct-body Gbnf_parser__AtomicBitSet.cardinal lib/AtomicBitSet.ml(174)<ghost>:4854-4865
                     (before Gbnf_parser__AtomicBitSet.cardinal lib/AtomicBitSet.ml(175):4860-4865
                       (after Gbnf_parser__AtomicBitSet.cardinal lib/AtomicBitSet.ml(175):4860-4865
                         (apply pop/1286 s/1333)))))
               elements/1334 =
                 (function s/1336[int]
                   (funct-body Gbnf_parser__AtomicBitSet.elements lib/AtomicBitSet.ml(178)<ghost>:4920-5015
                     (before Gbnf_parser__AtomicBitSet.elements lib/AtomicBitSet.ml(180):4982-5015
                       (after Gbnf_parser__AtomicBitSet.elements lib/AtomicBitSet.ml(180):4982-5015
                         (apply fold/1316
                           (function tl/1337[int] hd/1338
                             (funct-body Gbnf_parser__AtomicBitSet.elements.(fun) lib/AtomicBitSet.ml(180):4987-5010
                               (before Gbnf_parser__AtomicBitSet.elements.(fun) lib/AtomicBitSet.ml(180):5001-5009
                                 (makeblock 0 (int,*) tl/1337 hd/1338))))
                           s/1336 0)))))
               subset/1339 =
                 (function s1/1341[int] s2/1342[int] : int
                   (funct-body Gbnf_parser__AtomicBitSet.subset lib/AtomicBitSet.ml(182)<ghost>:5028-5053
                     (before Gbnf_parser__AtomicBitSet.subset lib/AtomicBitSet.ml(183):5038-5053
                       (== (and s1/1341 s2/1342) s1/1341))))
               mem/1343 =
                 (function i/1345[int] s/1346[int] : int
                   (funct-body Gbnf_parser__AtomicBitSet.mem lib/AtomicBitSet.ml(185)<ghost>:5063-5093
                     (before Gbnf_parser__AtomicBitSet.mem lib/AtomicBitSet.ml(186):5071-5093
                       (after Gbnf_parser__AtomicBitSet.mem lib/AtomicBitSet.ml(186):5071-5093
                         (apply subset/1339
                           (after Gbnf_parser__AtomicBitSet.mem lib/AtomicBitSet.ml(186):5078-5091
                             (apply singleton/1293 i/1345))
                           s/1346)))))
               union/1347 =
                 (function s1/1349[int] s2/1350[int] : int
                   (funct-body Gbnf_parser__AtomicBitSet.union lib/AtomicBitSet.ml(188)<ghost>:5105-5124
                     (before Gbnf_parser__AtomicBitSet.union lib/AtomicBitSet.ml(189):5115-5124
                       (or s1/1349 s2/1350))))
               inter/1351 =
                 (function s1/1353[int] s2/1354[int] : int
                   (funct-body Gbnf_parser__AtomicBitSet.inter lib/AtomicBitSet.ml(191)<ghost>:5136-5156
                     (before Gbnf_parser__AtomicBitSet.inter lib/AtomicBitSet.ml(192):5146-5156
                       (and s1/1353 s2/1354))))
               minimum/1355 =
                 (function s/1357[int] : int
                   (funct-body Gbnf_parser__AtomicBitSet.minimum lib/AtomicBitSet.ml(194)<ghost>:5170-5253
                     (before Gbnf_parser__AtomicBitSet.minimum lib/AtomicBitSet.ml(195):5176-5253
                       (if (== s/1357 0)
                         (before Gbnf_parser__AtomicBitSet.minimum lib/AtomicBitSet.ml(196):5194-5209
                           (raise
                             (after Gbnf_parser__AtomicBitSet.minimum lib/AtomicBitSet.ml(196):5194-5209
                               (field 7 (global Stdlib!)))))
                         (before Gbnf_parser__AtomicBitSet.minimum lib/AtomicBitSet.ml(198):5221-5253
                           (let (x/1358 =[int] (and s/1357 (~ s/1357)))
                             (before Gbnf_parser__AtomicBitSet.minimum lib/AtomicBitSet.ml(199):5248-5253
                               (after Gbnf_parser__AtomicBitSet.minimum lib/AtomicBitSet.ml(199):5248-5253
                                 (apply tib/1268 x/1358)))))))))
               choose/1359 = minimum/1355
               compare/1360 =
                 (function prim/1681 prim/1680 stub
                   (compare_ints prim/1681 prim/1680))
               equal/1361 =
                 (function prim/1683 prim/1682 stub (== prim/1683 prim/1682))
               disjoint/1362 =
                 (function s1/1364[int] s2/1365[int] : int
                   (funct-body Gbnf_parser__AtomicBitSet.disjoint lib/AtomicBitSet.ml(210)<ghost>:5401-5433
                     (before Gbnf_parser__AtomicBitSet.disjoint lib/AtomicBitSet.ml(211):5411-5433
                       (after Gbnf_parser__AtomicBitSet.disjoint lib/AtomicBitSet.ml(211):5411-5433
                         (apply is_empty/1290
                           (after Gbnf_parser__AtomicBitSet.disjoint lib/AtomicBitSet.ml(211):5420-5433
                             (apply inter/1351 s1/1364 s2/1365)))))))
               *match*/1691 =
                 (after Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(211)<ghost>:5433-5433
                   (apply (field 5 (global Ppx_inline_test_lib!))
                     "gbnf_parser"))
               *match*/1689 =
                 (after Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(211)<ghost>:5433-5433
                   (apply (field 1 (field 5 (global Expect_test_collector!)))
                     0))
               *match*/1687 =
                 (after Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(211)<ghost>:5433-5433
                   (apply
                     (field 1
                       (field 0
                         (global Ppx_bench_lib__Benchmark_accumulator!)))
                     0))
               *match*/1685 =
                 (after Gbnf_parser__AtomicBitSet lib/AtomicBitSet.ml(211)<ghost>:5433-5433
                   (apply (field 4 (global Ppx_module_timer_runtime!))
                     #"Gbnf_parser__AtomicBitSet")))
              (pseudo <unknown location>
                (makeblock 0 bound/1130 bit/1204 log2/1207 tib16/1256
                  tib32/1260 ffffffff/1264 tib64/1265 tib/1268 b0/1272
                  b1/1273 b2/1274 pop32/1275 pop64/1283 pop/1286 empty/1289
                  is_empty/1290 singleton/1293 add/1294 remove/1298
                  fold_delta/1302 iter_delta/1310 fold/1316 iter/1323
                  is_singleton/1328 cardinal/1331 elements/1334 subset/1339
                  mem/1343 union/1347 inter/1351 minimum/1355 choose/1359
                  compare/1360 equal/1361 disjoint/1362)))))))))
