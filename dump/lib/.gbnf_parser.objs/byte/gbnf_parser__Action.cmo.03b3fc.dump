[
  structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
    Pstr_attribute "ocaml.ppx.context"
    [
      structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
        Pstr_eval
        expression (_none_[0,0+-1]..[0,0+-1]) ghost
          Pexp_record
          [
            "tool_name" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_constant PConst_string("ppx_driver",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
            "include_dirs" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "load_path" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "open_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "for_package" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "None" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "debug" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_threads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_vmthreads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "recursive_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "principal" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "transparent_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unboxed_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unsafe_string" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "cookies" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                Some
                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                    Pexp_tuple
                    [
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_tuple
                        [
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_constant PConst_string("inline_tests",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                          expression (<command-line>[1,0+0]..[1,0+9])
                            Pexp_constant PConst_string("enabled",(<command-line>[1,0+1]..[1,0+8]),None)
                        ]
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                        Some
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_tuple
                            [
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_tuple
                                [
                                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                    Pexp_constant PConst_string("library-name",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                                  expression (<command-line>[1,0+0]..[1,0+13])
                                    Pexp_constant PConst_string("gbnf_parser",(<command-line>[1,0+1]..[1,0+12]),None)
                                ]
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                                None
                            ]
                    ]
          ]
          None
    ]
  structure_item (lib/action.ml[14,976+0]..[14,976+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[14,976+0]..[14,976+0]) ghost
          Ppat_construct "()" (lib/action.ml[14,976+0]..[14,976+0]) ghost
          None
        expression (lib/action.ml[14,976+0]..[14,976+0]) ghost
          Pexp_apply
          expression (lib/action.ml[14,976+0]..[14,976+0]) ghost
            Pexp_ident "Ppx_module_timer_runtime.record_start" (lib/action.ml[14,976+0]..[14,976+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/action.ml[14,976+0]..[14,976+0]) ghost
                Pexp_ident "Ppx_module_timer_runtime.__MODULE__" (lib/action.ml[14,976+0]..[14,976+0]) ghost
          ]
    ]
  structure_item (lib/action.ml[14,976+0]..[14,976+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[14,976+0]..[14,976+0]) ghost
          Ppat_construct "()" (lib/action.ml[14,976+0]..[14,976+0]) ghost
          None
        expression (lib/action.ml[14,976+0]..[14,976+0]) ghost
          Pexp_apply
          expression (lib/action.ml[14,976+0]..[14,976+0]) ghost
            Pexp_ident "Ppx_bench_lib.Benchmark_accumulator.Current_libname.set" (lib/action.ml[14,976+0]..[14,976+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/action.ml[14,976+0]..[14,976+0]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/action.ml[14,976+0]..[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/action.ml[14,976+0]..[14,976+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[14,976+0]..[14,976+0]) ghost
          Ppat_construct "()" (lib/action.ml[14,976+0]..[14,976+0]) ghost
          None
        expression (lib/action.ml[14,976+0]..[14,976+0]) ghost
          Pexp_apply
          expression (lib/action.ml[14,976+0]..[14,976+0]) ghost
            Pexp_ident "Expect_test_collector.Current_file.set" (lib/action.ml[14,976+0]..[14,976+0]) ghost
          [
            <arg>
            Labelled "absolute_filename"
              expression (lib/action.ml[14,976+0]..[14,976+0]) ghost
                Pexp_constant PConst_string("lib/action.ml",(lib/action.ml[14,976+0]..[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/action.ml[14,976+0]..[14,976+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[14,976+0]..[14,976+0]) ghost
          Ppat_construct "()" (lib/action.ml[14,976+0]..[14,976+0]) ghost
          None
        expression (lib/action.ml[14,976+0]..[14,976+0]) ghost
          Pexp_apply
          expression (lib/action.ml[14,976+0]..[14,976+0]) ghost
            Pexp_ident "Ppx_inline_test_lib.set_lib_and_partition" (lib/action.ml[14,976+0]..[14,976+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/action.ml[14,976+0]..[14,976+0]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/action.ml[14,976+0]..[14,976+0]) ghost,None)
            <arg>
            Nolabel
              expression (lib/action.ml[14,976+0]..[14,976+0]) ghost
                Pexp_constant PConst_string("action.ml",(lib/action.ml[14,976+0]..[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/action.ml[14,976+0]..[14,976+12])
    Pstr_open Fresh
    module_expr (lib/action.ml[14,976+5]..[14,976+12])
      Pmod_ident "Keyword" (lib/action.ml[14,976+5]..[14,976+12])
  structure_item (lib/action.ml[16,990+0]..[35,1655+1])
    Pstr_type Rec
    [
      type_declaration "t" (lib/action.ml[16,990+5]..[16,990+6]) (lib/action.ml[16,990+0]..[35,1655+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/action.ml[19,1045+2]..[19,1045+16])
                Immutable
                "expr" (lib/action.ml[19,1045+2]..[19,1045+6])                core_type (lib/action.ml[19,1045+8]..[19,1045+15])
                  Ptyp_constr "IL.expr" (lib/action.ml[19,1045+8]..[19,1045+15])
                  []
              (lib/action.ml[24,1284+2]..[24,1284+17])
                Immutable
                "standard" (lib/action.ml[24,1284+2]..[24,1284+10])                core_type (lib/action.ml[24,1284+12]..[24,1284+16])
                  Ptyp_constr "bool" (lib/action.ml[24,1284+12]..[24,1284+16])
                  []
              (lib/action.ml[28,1422+2]..[28,1422+23])
                Immutable
                "semvars" (lib/action.ml[28,1422+2]..[28,1422+9])                core_type (lib/action.ml[28,1422+11]..[28,1422+22])
                  Ptyp_constr "StringSet.t" (lib/action.ml[28,1422+11]..[28,1422+22])
                  []
              (lib/action.ml[33,1626+2]..[33,1626+27])
                Immutable
                "keywords" (lib/action.ml[33,1626+2]..[33,1626+10])                core_type (lib/action.ml[33,1626+14]..[33,1626+26])
                  Ptyp_constr "KeywordSet.t" (lib/action.ml[33,1626+14]..[33,1626+26])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/action.ml[41,1761+0]..[49,1958+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[41,1761+4]..[41,1761+16])
          Ppat_var "from_stretch" (lib/action.ml[41,1761+4]..[41,1761+16])
        expression (lib/action.ml[41,1761+17]..[49,1958+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/action.ml[41,1761+17]..[41,1761+19])
            Ppat_var "xs" (lib/action.ml[41,1761+17]..[41,1761+19])
          expression (lib/action.ml[41,1761+20]..[49,1958+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/action.ml[41,1761+20]..[41,1761+21])
              Ppat_var "s" (lib/action.ml[41,1761+20]..[41,1761+21])
            expression (lib/action.ml[42,1785+2]..[49,1958+3])
              Pexp_record
              [
                "expr" (lib/action.ml[43,1789+4]..[43,1789+8])
                  expression (lib/action.ml[43,1789+16]..[43,1789+29])
                    Pexp_construct "IL.ETextual" (lib/action.ml[43,1789+16]..[43,1789+27])
                    Some
                      expression (lib/action.ml[43,1789+28]..[43,1789+29])
                        Pexp_ident "s" (lib/action.ml[43,1789+28]..[43,1789+29])
                "standard" (lib/action.ml[45,1821+4]..[45,1821+12])
                  expression (lib/action.ml[45,1821+16]..[45,1821+52])
                    Pexp_apply
                    expression (lib/action.ml[45,1821+43]..[45,1821+44])
                      Pexp_ident "=" (lib/action.ml[45,1821+43]..[45,1821+44])
                    [
                      <arg>
                      Nolabel
                        expression (lib/action.ml[45,1821+16]..[45,1821+42])
                          Pexp_field
                          expression (lib/action.ml[45,1821+16]..[45,1821+17])
                            Pexp_ident "s" (lib/action.ml[45,1821+16]..[45,1821+17])
                          "Stretch.stretch_filename" (lib/action.ml[45,1821+18]..[45,1821+42])
                      <arg>
                      Nolabel
                        expression (lib/action.ml[45,1821+45]..[45,1821+52])
                          Pexp_constant PConst_string("fixme",(lib/action.ml[45,1821+46]..[45,1821+51]),None)
                    ]
                "semvars" (lib/action.ml[47,1876+4]..[47,1876+11])
                  expression (lib/action.ml[47,1876+16]..[47,1876+18])
                    Pexp_ident "xs" (lib/action.ml[47,1876+16]..[47,1876+18])
                "keywords" (lib/action.ml[48,1896+4]..[48,1896+12])
                  expression (lib/action.ml[48,1896+16]..[48,1896+61])
                    Pexp_apply
                    expression (lib/action.ml[48,1896+16]..[48,1896+34])
                      Pexp_ident "KeywordSet.of_list" (lib/action.ml[48,1896+16]..[48,1896+34])
                    [
                      <arg>
                      Nolabel
                        expression (lib/action.ml[48,1896+35]..[48,1896+61])
                          Pexp_field
                          expression (lib/action.ml[48,1896+35]..[48,1896+36])
                            Pexp_ident "s" (lib/action.ml[48,1896+35]..[48,1896+36])
                          "Stretch.stretch_keywords" (lib/action.ml[48,1896+37]..[48,1896+61])
                    ]
              ]
              None
    ]
  structure_item (lib/action.ml[51,1963+0]..[80,2772+37])
    Pstr_value Rec
    [
      <def>
        pattern (lib/action.ml[51,1963+8]..[51,1963+20])
          Ppat_var "from_il_expr" (lib/action.ml[51,1963+8]..[51,1963+20])
        expression (lib/action.ml[51,1963+21]..[57,2089+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/action.ml[51,1963+21]..[51,1963+22])
            Ppat_var "e" (lib/action.ml[51,1963+21]..[51,1963+22])
          expression (lib/action.ml[52,1988+2]..[57,2089+3])
            Pexp_record
            [
              "expr" (lib/action.ml[53,1992+4]..[53,1992+8])
                expression (lib/action.ml[53,1992+16]..[53,1992+17])
                  Pexp_ident "e" (lib/action.ml[53,1992+16]..[53,1992+17])
              "standard" (lib/action.ml[54,2011+4]..[54,2011+12])
                expression (lib/action.ml[54,2011+16]..[54,2011+20])
                  Pexp_construct "true" (lib/action.ml[54,2011+16]..[54,2011+20])
                  None
              "semvars" (lib/action.ml[55,2033+4]..[55,2033+11])
                expression (lib/action.ml[55,2033+16]..[55,2033+20])
                  Pexp_apply
                  expression (lib/action.ml[55,2033+16]..[55,2033+18])
                    Pexp_ident "fv" (lib/action.ml[55,2033+16]..[55,2033+18])
                  [
                    <arg>
                    Nolabel
                      expression (lib/action.ml[55,2033+19]..[55,2033+20])
                        Pexp_ident "e" (lib/action.ml[55,2033+19]..[55,2033+20])
                  ]
              "keywords" (lib/action.ml[56,2055+4]..[56,2055+12])
                expression (lib/action.ml[56,2055+16]..[56,2055+32])
                  Pexp_ident "KeywordSet.empty" (lib/action.ml[56,2055+16]..[56,2055+32])
            ]
            None
      <def>
        pattern (lib/action.ml[62,2194+4]..[62,2194+6])
          Ppat_var "fv" (lib/action.ml[62,2194+4]..[62,2194+6])
        expression (lib/action.ml[62,2194+7]..[63,2205+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/action.ml[62,2194+7]..[62,2194+8])
            Ppat_var "e" (lib/action.ml[62,2194+7]..[62,2194+8])
          expression (lib/action.ml[63,2205+2]..[63,2205+26])
            Pexp_apply
            expression (lib/action.ml[63,2205+2]..[63,2205+8])
              Pexp_ident "fv_aux" (lib/action.ml[63,2205+2]..[63,2205+8])
            [
              <arg>
              Nolabel
                expression (lib/action.ml[63,2205+9]..[63,2205+24])
                  Pexp_ident "StringSet.empty" (lib/action.ml[63,2205+9]..[63,2205+24])
              <arg>
              Nolabel
                expression (lib/action.ml[63,2205+25]..[63,2205+26])
                  Pexp_ident "e" (lib/action.ml[63,2205+25]..[63,2205+26])
            ]
      <def>
        pattern (lib/action.ml[65,2233+4]..[65,2233+10])
          Ppat_var "fv_aux" (lib/action.ml[65,2233+4]..[65,2233+10])
        expression (lib/action.ml[65,2233+11]..[80,2772+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/action.ml[65,2233+11]..[65,2233+15])
            Ppat_var "accu" (lib/action.ml[65,2233+11]..[65,2233+15])
          expression (lib/action.ml[65,2233+16]..[80,2772+37]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/action.ml[65,2233+16]..[65,2233+17])
              Ppat_var "e" (lib/action.ml[65,2233+16]..[65,2233+17])
            expression (lib/action.ml[66,2253+2]..[80,2772+37])
              Pexp_open Fresh
              module_expr (lib/action.ml[66,2253+2]..[66,2253+4])
                Pmod_ident "IL" (lib/action.ml[66,2253+2]..[66,2253+4])
              expression (lib/action.ml[66,2253+6]..[80,2772+18])
                Pexp_match
                expression (lib/action.ml[66,2253+12]..[66,2253+13])
                  Pexp_ident "e" (lib/action.ml[66,2253+12]..[66,2253+13])
                [
                  <case>
                    pattern (lib/action.ml[67,2272+4]..[67,2272+10])
                      Ppat_construct "EVar" (lib/action.ml[67,2272+4]..[67,2272+8])
                      Some
                        []
                        pattern (lib/action.ml[67,2272+9]..[67,2272+10])
                          Ppat_var "x" (lib/action.ml[67,2272+9]..[67,2272+10])
                    expression (lib/action.ml[68,2286+6]..[68,2286+26])
                      Pexp_apply
                      expression (lib/action.ml[68,2286+6]..[68,2286+19])
                        Pexp_ident "StringSet.add" (lib/action.ml[68,2286+6]..[68,2286+19])
                      [
                        <arg>
                        Nolabel
                          expression (lib/action.ml[68,2286+20]..[68,2286+21])
                            Pexp_ident "x" (lib/action.ml[68,2286+20]..[68,2286+21])
                        <arg>
                        Nolabel
                          expression (lib/action.ml[68,2286+22]..[68,2286+26])
                            Pexp_ident "accu" (lib/action.ml[68,2286+22]..[68,2286+26])
                      ]
                  <case>
                    pattern (lib/action.ml[69,2313+4]..[69,2313+14])
                      Ppat_construct "ETextual" (lib/action.ml[69,2313+4]..[69,2313+12])
                      Some
                        []
                        pattern (lib/action.ml[69,2313+13]..[69,2313+14])
                          Ppat_any
                    expression (lib/action.ml[74,2636+6]..[74,2636+10])
                      Pexp_ident "accu" (lib/action.ml[74,2636+6]..[74,2636+10])
                  <case>
                    pattern (lib/action.ml[75,2647+4]..[75,2647+13])
                      Ppat_construct "ETuple" (lib/action.ml[75,2647+4]..[75,2647+10])
                      Some
                        []
                        pattern (lib/action.ml[75,2647+11]..[75,2647+13])
                          Ppat_var "es" (lib/action.ml[75,2647+11]..[75,2647+13])
                    expression (lib/action.ml[76,2664+6]..[76,2664+35])
                      Pexp_apply
                      expression (lib/action.ml[76,2664+6]..[76,2664+20])
                        Pexp_ident "List.fold_left" (lib/action.ml[76,2664+6]..[76,2664+20])
                      [
                        <arg>
                        Nolabel
                          expression (lib/action.ml[76,2664+21]..[76,2664+27])
                            Pexp_ident "fv_aux" (lib/action.ml[76,2664+21]..[76,2664+27])
                        <arg>
                        Nolabel
                          expression (lib/action.ml[76,2664+28]..[76,2664+32])
                            Pexp_ident "accu" (lib/action.ml[76,2664+28]..[76,2664+32])
                        <arg>
                        Nolabel
                          expression (lib/action.ml[76,2664+33]..[76,2664+35])
                            Pexp_ident "es" (lib/action.ml[76,2664+33]..[76,2664+35])
                      ]
                  <case>
                    pattern (lib/action.ml[77,2700+4]..[77,2700+16])
                      Ppat_construct "EApp" (lib/action.ml[77,2700+4]..[77,2700+8])
                      Some
                        []
                        pattern (lib/action.ml[77,2700+9]..[77,2700+16])
                          Ppat_tuple
                          [
                            pattern (lib/action.ml[77,2700+10]..[77,2700+11])
                              Ppat_var "e" (lib/action.ml[77,2700+10]..[77,2700+11])
                            pattern (lib/action.ml[77,2700+13]..[77,2700+15])
                              Ppat_var "es" (lib/action.ml[77,2700+13]..[77,2700+15])
                          ]
                    expression (lib/action.ml[78,2720+6]..[78,2720+42])
                      Pexp_apply
                      expression (lib/action.ml[78,2720+6]..[78,2720+20])
                        Pexp_ident "List.fold_left" (lib/action.ml[78,2720+6]..[78,2720+20])
                      [
                        <arg>
                        Nolabel
                          expression (lib/action.ml[78,2720+21]..[78,2720+27])
                            Pexp_ident "fv_aux" (lib/action.ml[78,2720+21]..[78,2720+27])
                        <arg>
                        Nolabel
                          expression (lib/action.ml[78,2720+28]..[78,2720+32])
                            Pexp_ident "accu" (lib/action.ml[78,2720+28]..[78,2720+32])
                        <arg>
                        Nolabel
                          expression (lib/action.ml[78,2720+33]..[78,2720+42])
                            Pexp_construct "::" (lib/action.ml[78,2720+36]..[78,2720+38])
                            Some
                              expression (lib/action.ml[78,2720+34]..[78,2720+41]) ghost
                                Pexp_tuple
                                [
                                  expression (lib/action.ml[78,2720+34]..[78,2720+35])
                                    Pexp_ident "e" (lib/action.ml[78,2720+34]..[78,2720+35])
                                  expression (lib/action.ml[78,2720+39]..[78,2720+41])
                                    Pexp_ident "es" (lib/action.ml[78,2720+39]..[78,2720+41])
                                ]
                      ]
                  <case>
                    pattern (lib/action.ml[79,2763+4]..[79,2763+5])
                      Ppat_any
                    expression (lib/action.ml[80,2772+6]..[80,2772+18])
                      Pexp_assert
                      expression (lib/action.ml[80,2772+13]..[80,2772+18])
                        Pexp_construct "false" (lib/action.ml[80,2772+13]..[80,2772+18])
                        None
                ]
    ]
  structure_item (lib/action.ml[86,2929+0]..[96,3487+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[86,2929+4]..[86,2929+11])
          Ppat_var "compose" (lib/action.ml[86,2929+4]..[86,2929+11])
        expression (lib/action.ml[86,2929+12]..[96,3487+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/action.ml[86,2929+12]..[86,2929+13])
            Ppat_var "x" (lib/action.ml[86,2929+12]..[86,2929+13])
          expression (lib/action.ml[86,2929+14]..[96,3487+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/action.ml[86,2929+14]..[86,2929+16])
              Ppat_var "a1" (lib/action.ml[86,2929+14]..[86,2929+16])
            expression (lib/action.ml[86,2929+17]..[96,3487+3]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/action.ml[86,2929+17]..[86,2929+19])
                Ppat_var "a2" (lib/action.ml[86,2929+17]..[86,2929+19])
              expression (lib/action.ml[91,3240+2]..[96,3487+3])
                Pexp_record
                [
                  "expr" (lib/action.ml[92,3244+4]..[92,3244+8])
                    expression (lib/action.ml[92,3244+16]..[92,3244+63])
                      Pexp_apply
                      expression (lib/action.ml[92,3244+16]..[92,3244+29])
                        Pexp_ident "CodeBits.blet" (lib/action.ml[92,3244+16]..[92,3244+29])
                      [
                        <arg>
                        Nolabel
                          expression (lib/action.ml[92,3244+30]..[92,3244+63])
                            Pexp_tuple
                            [
                              expression (lib/action.ml[92,3244+31]..[92,3244+53])
                                Pexp_construct "::" (lib/action.ml[92,3244+33]..[92,3244+53]) ghost
                                Some
                                  expression (lib/action.ml[92,3244+33]..[92,3244+53]) ghost
                                    Pexp_tuple
                                    [
                                      expression (lib/action.ml[92,3244+33]..[92,3244+51])
                                        Pexp_tuple
                                        [
                                          expression (lib/action.ml[92,3244+33]..[92,3244+42])
                                            Pexp_construct "IL.PVar" (lib/action.ml[92,3244+33]..[92,3244+40])
                                            Some
                                              expression (lib/action.ml[92,3244+41]..[92,3244+42])
                                                Pexp_ident "x" (lib/action.ml[92,3244+41]..[92,3244+42])
                                          expression (lib/action.ml[92,3244+44]..[92,3244+51])
                                            Pexp_field
                                            expression (lib/action.ml[92,3244+44]..[92,3244+46])
                                              Pexp_ident "a1" (lib/action.ml[92,3244+44]..[92,3244+46])
                                            "expr" (lib/action.ml[92,3244+47]..[92,3244+51])
                                        ]
                                      expression (lib/action.ml[92,3244+52]..[92,3244+53]) ghost
                                        Pexp_construct "[]" (lib/action.ml[92,3244+52]..[92,3244+53]) ghost
                                        None
                                    ]
                              expression (lib/action.ml[92,3244+55]..[92,3244+62])
                                Pexp_field
                                expression (lib/action.ml[92,3244+55]..[92,3244+57])
                                  Pexp_ident "a2" (lib/action.ml[92,3244+55]..[92,3244+57])
                                "expr" (lib/action.ml[92,3244+58]..[92,3244+62])
                            ]
                      ]
                  "semvars" (lib/action.ml[93,3309+4]..[93,3309+11])
                    expression (lib/action.ml[93,3309+16]..[93,3309+74])
                      Pexp_apply
                      expression (lib/action.ml[93,3309+16]..[93,3309+31])
                        Pexp_ident "StringSet.union" (lib/action.ml[93,3309+16]..[93,3309+31])
                      [
                        <arg>
                        Nolabel
                          expression (lib/action.ml[93,3309+32]..[93,3309+42])
                            Pexp_field
                            expression (lib/action.ml[93,3309+32]..[93,3309+34])
                              Pexp_ident "a1" (lib/action.ml[93,3309+32]..[93,3309+34])
                            "semvars" (lib/action.ml[93,3309+35]..[93,3309+42])
                        <arg>
                        Nolabel
                          expression (lib/action.ml[93,3309+43]..[93,3309+74])
                            Pexp_apply
                            expression (lib/action.ml[93,3309+44]..[93,3309+60])
                              Pexp_ident "StringSet.remove" (lib/action.ml[93,3309+44]..[93,3309+60])
                            [
                              <arg>
                              Nolabel
                                expression (lib/action.ml[93,3309+61]..[93,3309+62])
                                  Pexp_ident "x" (lib/action.ml[93,3309+61]..[93,3309+62])
                              <arg>
                              Nolabel
                                expression (lib/action.ml[93,3309+63]..[93,3309+73])
                                  Pexp_field
                                  expression (lib/action.ml[93,3309+63]..[93,3309+65])
                                    Pexp_ident "a2" (lib/action.ml[93,3309+63]..[93,3309+65])
                                  "semvars" (lib/action.ml[93,3309+66]..[93,3309+73])
                            ]
                      ]
                  "keywords" (lib/action.ml[94,3385+4]..[94,3385+12])
                    expression (lib/action.ml[94,3385+16]..[94,3385+56])
                      Pexp_apply
                      expression (lib/action.ml[94,3385+16]..[94,3385+32])
                        Pexp_ident "KeywordSet.union" (lib/action.ml[94,3385+16]..[94,3385+32])
                      [
                        <arg>
                        Nolabel
                          expression (lib/action.ml[94,3385+33]..[94,3385+44])
                            Pexp_field
                            expression (lib/action.ml[94,3385+33]..[94,3385+35])
                              Pexp_ident "a1" (lib/action.ml[94,3385+33]..[94,3385+35])
                            "keywords" (lib/action.ml[94,3385+36]..[94,3385+44])
                        <arg>
                        Nolabel
                          expression (lib/action.ml[94,3385+45]..[94,3385+56])
                            Pexp_field
                            expression (lib/action.ml[94,3385+45]..[94,3385+47])
                              Pexp_ident "a2" (lib/action.ml[94,3385+45]..[94,3385+47])
                            "keywords" (lib/action.ml[94,3385+48]..[94,3385+56])
                      ]
                  "standard" (lib/action.ml[95,3443+4]..[95,3443+12])
                    expression (lib/action.ml[95,3443+16]..[95,3443+42])
                      Pexp_apply
                      expression (lib/action.ml[95,3443+28]..[95,3443+30])
                        Pexp_ident "&&" (lib/action.ml[95,3443+28]..[95,3443+30])
                      [
                        <arg>
                        Nolabel
                          expression (lib/action.ml[95,3443+16]..[95,3443+27])
                            Pexp_field
                            expression (lib/action.ml[95,3443+16]..[95,3443+18])
                              Pexp_ident "a1" (lib/action.ml[95,3443+16]..[95,3443+18])
                            "standard" (lib/action.ml[95,3443+19]..[95,3443+27])
                        <arg>
                        Nolabel
                          expression (lib/action.ml[95,3443+31]..[95,3443+42])
                            Pexp_field
                            expression (lib/action.ml[95,3443+31]..[95,3443+33])
                              Pexp_ident "a2" (lib/action.ml[95,3443+31]..[95,3443+33])
                            "standard" (lib/action.ml[95,3443+34]..[95,3443+42])
                      ]
                ]
                None
    ]
  structure_item (lib/action.ml[100,3526+0]..[124,4082+37])
    Pstr_value Rec
    [
      <def>
        pattern (lib/action.ml[100,3526+8]..[100,3526+12])
          Ppat_var "bind" (lib/action.ml[100,3526+8]..[100,3526+12])
        expression (lib/action.ml[100,3526+13]..[106,3732+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/action.ml[100,3526+13]..[100,3526+14])
            Ppat_var "p" (lib/action.ml[100,3526+13]..[100,3526+14])
          expression (lib/action.ml[100,3526+15]..[106,3732+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/action.ml[100,3526+15]..[100,3526+16])
              Ppat_var "x" (lib/action.ml[100,3526+15]..[100,3526+16])
            expression (lib/action.ml[100,3526+17]..[106,3732+3]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/action.ml[100,3526+17]..[100,3526+18])
                Ppat_var "a" (lib/action.ml[100,3526+17]..[100,3526+18])
              expression (lib/action.ml[101,3547+2]..[106,3732+3])
                Pexp_record
                [
                  "expr" (lib/action.ml[102,3551+4]..[102,3551+8])
                    expression (lib/action.ml[102,3551+16]..[102,3551+56])
                      Pexp_apply
                      expression (lib/action.ml[102,3551+16]..[102,3551+29])
                        Pexp_ident "CodeBits.blet" (lib/action.ml[102,3551+16]..[102,3551+29])
                      [
                        <arg>
                        Nolabel
                          expression (lib/action.ml[102,3551+30]..[102,3551+56])
                            Pexp_tuple
                            [
                              expression (lib/action.ml[102,3551+31]..[102,3551+47])
                                Pexp_construct "::" (lib/action.ml[102,3551+33]..[102,3551+47]) ghost
                                Some
                                  expression (lib/action.ml[102,3551+33]..[102,3551+47]) ghost
                                    Pexp_tuple
                                    [
                                      expression (lib/action.ml[102,3551+33]..[102,3551+45])
                                        Pexp_tuple
                                        [
                                          expression (lib/action.ml[102,3551+33]..[102,3551+34])
                                            Pexp_ident "p" (lib/action.ml[102,3551+33]..[102,3551+34])
                                          expression (lib/action.ml[102,3551+36]..[102,3551+45])
                                            Pexp_construct "IL.EVar" (lib/action.ml[102,3551+36]..[102,3551+43])
                                            Some
                                              expression (lib/action.ml[102,3551+44]..[102,3551+45])
                                                Pexp_ident "x" (lib/action.ml[102,3551+44]..[102,3551+45])
                                        ]
                                      expression (lib/action.ml[102,3551+46]..[102,3551+47]) ghost
                                        Pexp_construct "[]" (lib/action.ml[102,3551+46]..[102,3551+47]) ghost
                                        None
                                    ]
                              expression (lib/action.ml[102,3551+49]..[102,3551+55])
                                Pexp_field
                                expression (lib/action.ml[102,3551+49]..[102,3551+50])
                                  Pexp_ident "a" (lib/action.ml[102,3551+49]..[102,3551+50])
                                "expr" (lib/action.ml[102,3551+51]..[102,3551+55])
                            ]
                      ]
                  "semvars" (lib/action.ml[103,3609+4]..[103,3609+11])
                    expression (lib/action.ml[103,3609+16]..[103,3609+65])
                      Pexp_apply
                      expression (lib/action.ml[103,3609+16]..[103,3609+29])
                        Pexp_ident "StringSet.add" (lib/action.ml[103,3609+16]..[103,3609+29])
                      [
                        <arg>
                        Nolabel
                          expression (lib/action.ml[103,3609+30]..[103,3609+31])
                            Pexp_ident "x" (lib/action.ml[103,3609+30]..[103,3609+31])
                        <arg>
                        Nolabel
                          expression (lib/action.ml[103,3609+32]..[103,3609+65])
                            Pexp_apply
                            expression (lib/action.ml[103,3609+33]..[103,3609+47])
                              Pexp_ident "StringSet.diff" (lib/action.ml[103,3609+33]..[103,3609+47])
                            [
                              <arg>
                              Nolabel
                                expression (lib/action.ml[103,3609+48]..[103,3609+57])
                                  Pexp_field
                                  expression (lib/action.ml[103,3609+48]..[103,3609+49])
                                    Pexp_ident "a" (lib/action.ml[103,3609+48]..[103,3609+49])
                                  "semvars" (lib/action.ml[103,3609+50]..[103,3609+57])
                              <arg>
                              Nolabel
                                expression (lib/action.ml[103,3609+58]..[103,3609+64])
                                  Pexp_apply
                                  expression (lib/action.ml[103,3609+59]..[103,3609+61])
                                    Pexp_ident "bv" (lib/action.ml[103,3609+59]..[103,3609+61])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/action.ml[103,3609+62]..[103,3609+63])
                                        Pexp_ident "p" (lib/action.ml[103,3609+62]..[103,3609+63])
                                  ]
                            ]
                      ]
                  "keywords" (lib/action.ml[104,3676+4]..[104,3676+12])
                    expression (lib/action.ml[104,3676+16]..[104,3676+26])
                      Pexp_field
                      expression (lib/action.ml[104,3676+16]..[104,3676+17])
                        Pexp_ident "a" (lib/action.ml[104,3676+16]..[104,3676+17])
                      "keywords" (lib/action.ml[104,3676+18]..[104,3676+26])
                  "standard" (lib/action.ml[105,3704+4]..[105,3704+12])
                    expression (lib/action.ml[105,3704+16]..[105,3704+26])
                      Pexp_field
                      expression (lib/action.ml[105,3704+16]..[105,3704+17])
                        Pexp_ident "a" (lib/action.ml[105,3704+16]..[105,3704+17])
                      "standard" (lib/action.ml[105,3704+18]..[105,3704+26])
                ]
                None
      <def>
        pattern (lib/action.ml[111,3863+4]..[111,3863+6])
          Ppat_var "bv" (lib/action.ml[111,3863+4]..[111,3863+6])
        expression (lib/action.ml[111,3863+7]..[112,3874+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/action.ml[111,3863+7]..[111,3863+8])
            Ppat_var "p" (lib/action.ml[111,3863+7]..[111,3863+8])
          expression (lib/action.ml[112,3874+2]..[112,3874+26])
            Pexp_apply
            expression (lib/action.ml[112,3874+2]..[112,3874+8])
              Pexp_ident "bv_aux" (lib/action.ml[112,3874+2]..[112,3874+8])
            [
              <arg>
              Nolabel
                expression (lib/action.ml[112,3874+9]..[112,3874+24])
                  Pexp_ident "StringSet.empty" (lib/action.ml[112,3874+9]..[112,3874+24])
              <arg>
              Nolabel
                expression (lib/action.ml[112,3874+25]..[112,3874+26])
                  Pexp_ident "p" (lib/action.ml[112,3874+25]..[112,3874+26])
            ]
      <def>
        pattern (lib/action.ml[114,3902+4]..[114,3902+10])
          Ppat_var "bv_aux" (lib/action.ml[114,3902+4]..[114,3902+10])
        expression (lib/action.ml[114,3902+11]..[124,4082+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/action.ml[114,3902+11]..[114,3902+15])
            Ppat_var "accu" (lib/action.ml[114,3902+11]..[114,3902+15])
          expression (lib/action.ml[114,3902+16]..[124,4082+37]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/action.ml[114,3902+16]..[114,3902+17])
              Ppat_var "p" (lib/action.ml[114,3902+16]..[114,3902+17])
            expression (lib/action.ml[115,3922+2]..[124,4082+37])
              Pexp_open Fresh
              module_expr (lib/action.ml[115,3922+2]..[115,3922+4])
                Pmod_ident "IL" (lib/action.ml[115,3922+2]..[115,3922+4])
              expression (lib/action.ml[115,3922+6]..[124,4082+18])
                Pexp_match
                expression (lib/action.ml[115,3922+12]..[115,3922+13])
                  Pexp_ident "p" (lib/action.ml[115,3922+12]..[115,3922+13])
                [
                  <case>
                    pattern (lib/action.ml[116,3941+4]..[117,3955+9])
                      Ppat_or
                      pattern (lib/action.ml[116,3941+4]..[116,3941+13])
                        Ppat_construct "PWildcard" (lib/action.ml[116,3941+4]..[116,3941+13])
                        None
                      pattern (lib/action.ml[117,3955+4]..[117,3955+9])
                        Ppat_construct "PUnit" (lib/action.ml[117,3955+4]..[117,3955+9])
                        None
                    expression (lib/action.ml[118,3968+6]..[118,3968+10])
                      Pexp_ident "accu" (lib/action.ml[118,3968+6]..[118,3968+10])
                  <case>
                    pattern (lib/action.ml[119,3979+4]..[119,3979+10])
                      Ppat_construct "PVar" (lib/action.ml[119,3979+4]..[119,3979+8])
                      Some
                        []
                        pattern (lib/action.ml[119,3979+9]..[119,3979+10])
                          Ppat_var "x" (lib/action.ml[119,3979+9]..[119,3979+10])
                    expression (lib/action.ml[120,3993+6]..[120,3993+26])
                      Pexp_apply
                      expression (lib/action.ml[120,3993+6]..[120,3993+19])
                        Pexp_ident "StringSet.add" (lib/action.ml[120,3993+6]..[120,3993+19])
                      [
                        <arg>
                        Nolabel
                          expression (lib/action.ml[120,3993+20]..[120,3993+21])
                            Pexp_ident "x" (lib/action.ml[120,3993+20]..[120,3993+21])
                        <arg>
                        Nolabel
                          expression (lib/action.ml[120,3993+22]..[120,3993+26])
                            Pexp_ident "accu" (lib/action.ml[120,3993+22]..[120,3993+26])
                      ]
                  <case>
                    pattern (lib/action.ml[121,4020+4]..[121,4020+13])
                      Ppat_construct "PTuple" (lib/action.ml[121,4020+4]..[121,4020+10])
                      Some
                        []
                        pattern (lib/action.ml[121,4020+11]..[121,4020+13])
                          Ppat_var "ps" (lib/action.ml[121,4020+11]..[121,4020+13])
                    expression (lib/action.ml[122,4037+6]..[122,4037+35])
                      Pexp_apply
                      expression (lib/action.ml[122,4037+6]..[122,4037+20])
                        Pexp_ident "List.fold_left" (lib/action.ml[122,4037+6]..[122,4037+20])
                      [
                        <arg>
                        Nolabel
                          expression (lib/action.ml[122,4037+21]..[122,4037+27])
                            Pexp_ident "bv_aux" (lib/action.ml[122,4037+21]..[122,4037+27])
                        <arg>
                        Nolabel
                          expression (lib/action.ml[122,4037+28]..[122,4037+32])
                            Pexp_ident "accu" (lib/action.ml[122,4037+28]..[122,4037+32])
                        <arg>
                        Nolabel
                          expression (lib/action.ml[122,4037+33]..[122,4037+35])
                            Pexp_ident "ps" (lib/action.ml[122,4037+33]..[122,4037+35])
                      ]
                  <case>
                    pattern (lib/action.ml[123,4073+4]..[123,4073+5])
                      Ppat_any
                    expression (lib/action.ml[124,4082+6]..[124,4082+18])
                      Pexp_assert
                      expression (lib/action.ml[124,4082+13]..[124,4082+18])
                        Pexp_construct "false" (lib/action.ml[124,4082+13]..[124,4082+18])
                        None
                ]
    ]
  structure_item (lib/action.ml[130,4221+0]..[131,4245+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[130,4221+4]..[130,4221+14])
          Ppat_var "to_il_expr" (lib/action.ml[130,4221+4]..[130,4221+14])
        expression (lib/action.ml[130,4221+15]..[131,4245+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/action.ml[130,4221+15]..[130,4221+21])
            Ppat_var "action" (lib/action.ml[130,4221+15]..[130,4221+21])
          expression (lib/action.ml[131,4245+2]..[131,4245+13])
            Pexp_field
            expression (lib/action.ml[131,4245+2]..[131,4245+8])
              Pexp_ident "action" (lib/action.ml[131,4245+2]..[131,4245+8])
            "expr" (lib/action.ml[131,4245+9]..[131,4245+13])
    ]
  structure_item (lib/action.ml[133,4260+0]..[134,4285+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[133,4260+4]..[133,4260+15])
          Ppat_var "is_standard" (lib/action.ml[133,4260+4]..[133,4260+15])
        expression (lib/action.ml[133,4260+16]..[134,4285+17]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/action.ml[133,4260+16]..[133,4260+22])
            Ppat_var "action" (lib/action.ml[133,4260+16]..[133,4260+22])
          expression (lib/action.ml[134,4285+2]..[134,4285+17])
            Pexp_field
            expression (lib/action.ml[134,4285+2]..[134,4285+8])
              Pexp_ident "action" (lib/action.ml[134,4285+2]..[134,4285+8])
            "standard" (lib/action.ml[134,4285+9]..[134,4285+17])
    ]
  structure_item (lib/action.ml[136,4304+0]..[137,4325+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[136,4304+4]..[136,4304+11])
          Ppat_var "semvars" (lib/action.ml[136,4304+4]..[136,4304+11])
        expression (lib/action.ml[136,4304+12]..[137,4325+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/action.ml[136,4304+12]..[136,4304+18])
            Ppat_var "action" (lib/action.ml[136,4304+12]..[136,4304+18])
          expression (lib/action.ml[137,4325+2]..[137,4325+16])
            Pexp_field
            expression (lib/action.ml[137,4325+2]..[137,4325+8])
              Pexp_ident "action" (lib/action.ml[137,4325+2]..[137,4325+8])
            "semvars" (lib/action.ml[137,4325+9]..[137,4325+16])
    ]
  structure_item (lib/action.ml[139,4343+0]..[140,4365+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[139,4343+4]..[139,4343+12])
          Ppat_var "keywords" (lib/action.ml[139,4343+4]..[139,4343+12])
        expression (lib/action.ml[139,4343+13]..[140,4365+17]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/action.ml[139,4343+13]..[139,4343+19])
            Ppat_var "action" (lib/action.ml[139,4343+13]..[139,4343+19])
          expression (lib/action.ml[140,4365+2]..[140,4365+17])
            Pexp_field
            expression (lib/action.ml[140,4365+2]..[140,4365+8])
              Pexp_ident "action" (lib/action.ml[140,4365+2]..[140,4365+8])
            "keywords" (lib/action.ml[140,4365+9]..[140,4365+17])
    ]
  structure_item (lib/action.ml[142,4384+0]..[143,4413+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[142,4384+4]..[142,4384+19])
          Ppat_var "has_syntaxerror" (lib/action.ml[142,4384+4]..[142,4384+19])
        expression (lib/action.ml[142,4384+20]..[143,4413+44]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/action.ml[142,4384+20]..[142,4384+26])
            Ppat_var "action" (lib/action.ml[142,4384+20]..[142,4384+26])
          expression (lib/action.ml[143,4413+2]..[143,4413+44])
            Pexp_apply
            expression (lib/action.ml[143,4413+2]..[143,4413+16])
              Pexp_ident "KeywordSet.mem" (lib/action.ml[143,4413+2]..[143,4413+16])
            [
              <arg>
              Nolabel
                expression (lib/action.ml[143,4413+17]..[143,4413+28])
                  Pexp_construct "SyntaxError" (lib/action.ml[143,4413+17]..[143,4413+28])
                  None
              <arg>
              Nolabel
                expression (lib/action.ml[143,4413+29]..[143,4413+44])
                  Pexp_field
                  expression (lib/action.ml[143,4413+29]..[143,4413+35])
                    Pexp_ident "action" (lib/action.ml[143,4413+29]..[143,4413+35])
                  "keywords" (lib/action.ml[143,4413+36]..[143,4413+44])
            ]
    ]
  structure_item (lib/action.ml[145,4459+0]..[146,4486+78])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[145,4459+4]..[145,4459+17])
          Ppat_var "has_beforeend" (lib/action.ml[145,4459+4]..[145,4459+17])
        expression (lib/action.ml[145,4459+18]..[146,4486+78]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/action.ml[145,4459+18]..[145,4459+24])
            Ppat_var "action" (lib/action.ml[145,4459+18]..[145,4459+24])
          expression (lib/action.ml[146,4486+2]..[146,4486+78])
            Pexp_apply
            expression (lib/action.ml[146,4486+2]..[146,4486+16])
              Pexp_ident "KeywordSet.mem" (lib/action.ml[146,4486+2]..[146,4486+16])
            [
              <arg>
              Nolabel
                expression (lib/action.ml[146,4486+17]..[146,4486+62])
                  Pexp_construct "Position" (lib/action.ml[146,4486+18]..[146,4486+26])
                  Some
                    expression (lib/action.ml[146,4486+27]..[146,4486+61])
                      Pexp_tuple
                      [
                        expression (lib/action.ml[146,4486+28]..[146,4486+34])
                          Pexp_construct "Before" (lib/action.ml[146,4486+28]..[146,4486+34])
                          None
                        expression (lib/action.ml[146,4486+36]..[146,4486+44])
                          Pexp_construct "WhereEnd" (lib/action.ml[146,4486+36]..[146,4486+44])
                          None
                        expression (lib/action.ml[146,4486+46]..[146,4486+60])
                          Pexp_construct "FlavorPosition" (lib/action.ml[146,4486+46]..[146,4486+60])
                          None
                      ]
              <arg>
              Nolabel
                expression (lib/action.ml[146,4486+63]..[146,4486+78])
                  Pexp_field
                  expression (lib/action.ml[146,4486+63]..[146,4486+69])
                    Pexp_ident "action" (lib/action.ml[146,4486+63]..[146,4486+69])
                  "keywords" (lib/action.ml[146,4486+70]..[146,4486+78])
            ]
    ]
  structure_item (lib/action.ml[148,4566+0]..[156,4780+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[148,4566+4]..[148,4566+11])
          Ppat_var "posvars" (lib/action.ml[148,4566+4]..[148,4566+11])
        expression (lib/action.ml[148,4566+12]..[156,4780+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/action.ml[148,4566+12]..[148,4566+18])
            Ppat_var "action" (lib/action.ml[148,4566+12]..[148,4566+18])
          expression (lib/action.ml[149,4587+2]..[156,4780+37])
            Pexp_apply
            expression (lib/action.ml[149,4587+2]..[149,4587+17])
              Pexp_ident "KeywordSet.fold" (lib/action.ml[149,4587+2]..[149,4587+17])
            [
              <arg>
              Nolabel
                expression (lib/action.ml[149,4587+18]..[156,4780+3])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lib/action.ml[149,4587+23]..[149,4587+30])
                    Ppat_var "keyword" (lib/action.ml[149,4587+23]..[149,4587+30])
                  expression (lib/action.ml[149,4587+31]..[155,4751+28]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lib/action.ml[149,4587+31]..[149,4587+35])
                      Ppat_var "accu" (lib/action.ml[149,4587+31]..[149,4587+35])
                    expression (lib/action.ml[150,4626+4]..[155,4751+28])
                      Pexp_match
                      expression (lib/action.ml[150,4626+10]..[150,4626+17])
                        Pexp_ident "keyword" (lib/action.ml[150,4626+10]..[150,4626+17])
                      [
                        <case>
                          pattern (lib/action.ml[151,4649+6]..[151,4649+17])
                            Ppat_construct "SyntaxError" (lib/action.ml[151,4649+6]..[151,4649+17])
                            None
                          expression (lib/action.ml[152,4670+8]..[152,4670+12])
                            Pexp_ident "accu" (lib/action.ml[152,4670+8]..[152,4670+12])
                        <case>
                          pattern (lib/action.ml[153,4683+6]..[153,4683+24])
                            Ppat_construct "Position" (lib/action.ml[153,4683+6]..[153,4683+14])
                            Some
                              []
                              pattern (lib/action.ml[153,4683+15]..[153,4683+24])
                                Ppat_tuple
                                [
                                  pattern (lib/action.ml[153,4683+16]..[153,4683+17])
                                    Ppat_var "s" (lib/action.ml[153,4683+16]..[153,4683+17])
                                  pattern (lib/action.ml[153,4683+19]..[153,4683+20])
                                    Ppat_var "w" (lib/action.ml[153,4683+19]..[153,4683+20])
                                  pattern (lib/action.ml[153,4683+22]..[153,4683+23])
                                    Ppat_var "f" (lib/action.ml[153,4683+22]..[153,4683+23])
                                ]
                          expression (lib/action.ml[154,4711+8]..[155,4751+28])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/action.ml[154,4711+12]..[154,4711+13])
                                  Ppat_var "x" (lib/action.ml[154,4711+12]..[154,4711+13])
                                expression (lib/action.ml[154,4711+16]..[154,4711+36])
                                  Pexp_apply
                                  expression (lib/action.ml[154,4711+16]..[154,4711+30])
                                    Pexp_ident "Keyword.posvar" (lib/action.ml[154,4711+16]..[154,4711+30])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/action.ml[154,4711+31]..[154,4711+32])
                                        Pexp_ident "s" (lib/action.ml[154,4711+31]..[154,4711+32])
                                    <arg>
                                    Nolabel
                                      expression (lib/action.ml[154,4711+33]..[154,4711+34])
                                        Pexp_ident "w" (lib/action.ml[154,4711+33]..[154,4711+34])
                                    <arg>
                                    Nolabel
                                      expression (lib/action.ml[154,4711+35]..[154,4711+36])
                                        Pexp_ident "f" (lib/action.ml[154,4711+35]..[154,4711+36])
                                  ]
                            ]
                            expression (lib/action.ml[155,4751+8]..[155,4751+28])
                              Pexp_apply
                              expression (lib/action.ml[155,4751+8]..[155,4751+21])
                                Pexp_ident "StringSet.add" (lib/action.ml[155,4751+8]..[155,4751+21])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/action.ml[155,4751+22]..[155,4751+23])
                                    Pexp_ident "x" (lib/action.ml[155,4751+22]..[155,4751+23])
                                <arg>
                                Nolabel
                                  expression (lib/action.ml[155,4751+24]..[155,4751+28])
                                    Pexp_ident "accu" (lib/action.ml[155,4751+24]..[155,4751+28])
                              ]
                      ]
              <arg>
              Nolabel
                expression (lib/action.ml[156,4780+4]..[156,4780+21])
                  Pexp_apply
                  expression (lib/action.ml[156,4780+5]..[156,4780+13])
                    Pexp_ident "keywords" (lib/action.ml[156,4780+5]..[156,4780+13])
                  [
                    <arg>
                    Nolabel
                      expression (lib/action.ml[156,4780+14]..[156,4780+20])
                        Pexp_ident "action" (lib/action.ml[156,4780+14]..[156,4780+20])
                  ]
              <arg>
              Nolabel
                expression (lib/action.ml[156,4780+22]..[156,4780+37])
                  Pexp_ident "StringSet.empty" (lib/action.ml[156,4780+22]..[156,4780+37])
            ]
    ]
  structure_item (lib/action.ml[158,4819+0]..[159,4837+51])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[158,4819+4]..[158,4819+8])
          Ppat_var "vars" (lib/action.ml[158,4819+4]..[158,4819+8])
        expression (lib/action.ml[158,4819+9]..[159,4837+51]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/action.ml[158,4819+9]..[158,4819+15])
            Ppat_var "action" (lib/action.ml[158,4819+9]..[158,4819+15])
          expression (lib/action.ml[159,4837+2]..[159,4837+51])
            Pexp_apply
            expression (lib/action.ml[159,4837+2]..[159,4837+17])
              Pexp_ident "StringSet.union" (lib/action.ml[159,4837+2]..[159,4837+17])
            [
              <arg>
              Nolabel
                expression (lib/action.ml[159,4837+18]..[159,4837+34])
                  Pexp_apply
                  expression (lib/action.ml[159,4837+19]..[159,4837+26])
                    Pexp_ident "semvars" (lib/action.ml[159,4837+19]..[159,4837+26])
                  [
                    <arg>
                    Nolabel
                      expression (lib/action.ml[159,4837+27]..[159,4837+33])
                        Pexp_ident "action" (lib/action.ml[159,4837+27]..[159,4837+33])
                  ]
              <arg>
              Nolabel
                expression (lib/action.ml[159,4837+35]..[159,4837+51])
                  Pexp_apply
                  expression (lib/action.ml[159,4837+36]..[159,4837+43])
                    Pexp_ident "posvars" (lib/action.ml[159,4837+36]..[159,4837+43])
                  [
                    <arg>
                    Nolabel
                      expression (lib/action.ml[159,4837+44]..[159,4837+50])
                        Pexp_ident "action" (lib/action.ml[159,4837+44]..[159,4837+50])
                  ]
            ]
    ]
  structure_item (lib/action.ml[165,5026+0]..[173,5320+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[165,5026+4]..[165,5026+10])
          Ppat_var "define" (lib/action.ml[165,5026+4]..[165,5026+10])
        expression (lib/action.ml[165,5026+11]..[173,5320+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/action.ml[165,5026+11]..[165,5026+18])
            Ppat_var "keyword" (lib/action.ml[165,5026+11]..[165,5026+18])
          expression (lib/action.ml[165,5026+19]..[173,5320+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/action.ml[165,5026+19]..[165,5026+27])
              Ppat_var "keywords" (lib/action.ml[165,5026+19]..[165,5026+27])
            expression (lib/action.ml[165,5026+28]..[173,5320+3]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/action.ml[165,5026+28]..[165,5026+29])
                Ppat_var "f" (lib/action.ml[165,5026+28]..[165,5026+29])
              expression (lib/action.ml[165,5026+30]..[173,5320+3]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lib/action.ml[165,5026+30]..[165,5026+36])
                  Ppat_var "action" (lib/action.ml[165,5026+30]..[165,5026+36])
                expression (lib/action.ml[166,5065+2]..[173,5320+3])
                  Pexp_sequence
                  expression (lib/action.ml[166,5065+2]..[166,5065+49])
                    Pexp_assert
                    expression (lib/action.ml[166,5065+9]..[166,5065+49])
                      Pexp_apply
                      expression (lib/action.ml[166,5065+10]..[166,5065+24])
                        Pexp_ident "KeywordSet.mem" (lib/action.ml[166,5065+10]..[166,5065+24])
                      [
                        <arg>
                        Nolabel
                          expression (lib/action.ml[166,5065+25]..[166,5065+32])
                            Pexp_ident "keyword" (lib/action.ml[166,5065+25]..[166,5065+32])
                        <arg>
                        Nolabel
                          expression (lib/action.ml[166,5065+33]..[166,5065+48])
                            Pexp_field
                            expression (lib/action.ml[166,5065+33]..[166,5065+39])
                              Pexp_ident "action" (lib/action.ml[166,5065+33]..[166,5065+39])
                            "keywords" (lib/action.ml[166,5065+40]..[166,5065+48])
                      ]
                  expression (lib/action.ml[167,5116+2]..[173,5320+3])
                    Pexp_record
                    [
                      "expr" (lib/action.ml[168,5120+4]..[168,5120+8])
                        expression (lib/action.ml[168,5120+16]..[168,5120+29])
                          Pexp_apply
                          expression (lib/action.ml[168,5120+16]..[168,5120+17])
                            Pexp_ident "f" (lib/action.ml[168,5120+16]..[168,5120+17])
                          [
                            <arg>
                            Nolabel
                              expression (lib/action.ml[168,5120+18]..[168,5120+29])
                                Pexp_field
                                expression (lib/action.ml[168,5120+18]..[168,5120+24])
                                  Pexp_ident "action" (lib/action.ml[168,5120+18]..[168,5120+24])
                                "expr" (lib/action.ml[168,5120+25]..[168,5120+29])
                          ]
                      "standard" (lib/action.ml[169,5151+4]..[169,5151+12])
                        expression (lib/action.ml[169,5151+16]..[169,5151+31])
                          Pexp_field
                          expression (lib/action.ml[169,5151+16]..[169,5151+22])
                            Pexp_ident "action" (lib/action.ml[169,5151+16]..[169,5151+22])
                          "standard" (lib/action.ml[169,5151+23]..[169,5151+31])
                      "semvars" (lib/action.ml[170,5184+4]..[170,5184+11])
                        expression (lib/action.ml[170,5184+16]..[170,5184+30])
                          Pexp_field
                          expression (lib/action.ml[170,5184+16]..[170,5184+22])
                            Pexp_ident "action" (lib/action.ml[170,5184+16]..[170,5184+22])
                          "semvars" (lib/action.ml[170,5184+23]..[170,5184+30])
                      "keywords" (lib/action.ml[171,5216+4]..[171,5216+12])
                        expression (lib/action.ml[171,5216+16]..[172,5249+70])
                          Pexp_apply
                          expression (lib/action.ml[171,5216+16]..[171,5216+32])
                            Pexp_ident "KeywordSet.union" (lib/action.ml[171,5216+16]..[171,5216+32])
                          [
                            <arg>
                            Nolabel
                              expression (lib/action.ml[172,5249+18]..[172,5249+26])
                                Pexp_ident "keywords" (lib/action.ml[172,5249+18]..[172,5249+26])
                            <arg>
                            Nolabel
                              expression (lib/action.ml[172,5249+27]..[172,5249+70])
                                Pexp_apply
                                expression (lib/action.ml[172,5249+28]..[172,5249+45])
                                  Pexp_ident "KeywordSet.remove" (lib/action.ml[172,5249+28]..[172,5249+45])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/action.ml[172,5249+46]..[172,5249+53])
                                      Pexp_ident "keyword" (lib/action.ml[172,5249+46]..[172,5249+53])
                                  <arg>
                                  Nolabel
                                    expression (lib/action.ml[172,5249+54]..[172,5249+69])
                                      Pexp_field
                                      expression (lib/action.ml[172,5249+54]..[172,5249+60])
                                        Pexp_ident "action" (lib/action.ml[172,5249+54]..[172,5249+60])
                                      "keywords" (lib/action.ml[172,5249+61]..[172,5249+69])
                                ]
                          ]
                    ]
                    None
    ]
  structure_item (lib/action.ml[184,5798+0]..[188,5887+3])
    Pstr_type Rec
    [
      type_declaration "subst" (lib/action.ml[184,5798+5]..[184,5798+10]) (lib/action.ml[184,5798+0]..[188,5887+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/action.ml[186,5815+4]..[186,5815+35])
                Immutable
                "semvar" (lib/action.ml[186,5815+4]..[186,5815+10])                core_type (lib/action.ml[186,5815+12]..[186,5815+34])
                  Ptyp_constr "list" (lib/action.ml[186,5815+30]..[186,5815+34])
                  [
                    core_type (lib/action.ml[186,5815+13]..[186,5815+28])
                      Ptyp_tuple
                      [
                        core_type (lib/action.ml[186,5815+13]..[186,5815+19])
                          Ptyp_constr "string" (lib/action.ml[186,5815+13]..[186,5815+19])
                          []
                        core_type (lib/action.ml[186,5815+22]..[186,5815+28])
                          Ptyp_constr "string" (lib/action.ml[186,5815+22]..[186,5815+28])
                          []
                      ]
                  ]
              (lib/action.ml[187,5851+4]..[187,5851+35])
                Immutable
                "posvar" (lib/action.ml[187,5851+4]..[187,5851+10])                core_type (lib/action.ml[187,5851+12]..[187,5851+34])
                  Ptyp_constr "list" (lib/action.ml[187,5851+30]..[187,5851+34])
                  [
                    core_type (lib/action.ml[187,5851+13]..[187,5851+28])
                      Ptyp_tuple
                      [
                        core_type (lib/action.ml[187,5851+13]..[187,5851+19])
                          Ptyp_constr "string" (lib/action.ml[187,5851+13]..[187,5851+19])
                          []
                        core_type (lib/action.ml[187,5851+22]..[187,5851+28])
                          Ptyp_constr "string" (lib/action.ml[187,5851+22]..[187,5851+28])
                          []
                      ]
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/action.ml[190,5892+0]..[191,5904+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[190,5892+4]..[190,5892+9])
          Ppat_var "empty" (lib/action.ml[190,5892+4]..[190,5892+9])
        expression (lib/action.ml[191,5904+2]..[191,5904+30])
          Pexp_record
          [
            "semvar" (lib/action.ml[191,5904+4]..[191,5904+10])
              expression (lib/action.ml[191,5904+13]..[191,5904+15])
                Pexp_construct "[]" (lib/action.ml[191,5904+13]..[191,5904+15])
                None
            "posvar" (lib/action.ml[191,5904+17]..[191,5904+23])
              expression (lib/action.ml[191,5904+26]..[191,5904+28])
                Pexp_construct "[]" (lib/action.ml[191,5904+26]..[191,5904+28])
                None
          ]
          None
    ]
  structure_item (lib/action.ml[193,5936+0]..[195,5997+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[193,5936+4]..[193,5936+11])
          Ppat_var "extend1" (lib/action.ml[193,5936+4]..[193,5936+11])
        expression (lib/action.ml[193,5936+12]..[195,5997+39]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/action.ml[193,5936+12]..[193,5936+13])
            Ppat_var "x" (lib/action.ml[193,5936+12]..[193,5936+13])
          expression (lib/action.ml[193,5936+14]..[195,5997+39]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/action.ml[193,5936+14]..[193,5936+15])
              Ppat_var "y" (lib/action.ml[193,5936+14]..[193,5936+15])
            expression (lib/action.ml[193,5936+16]..[195,5997+39]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/action.ml[193,5936+16]..[193,5936+19])
                Ppat_var "var" (lib/action.ml[193,5936+16]..[193,5936+19])
              expression (lib/action.ml[194,5958+2]..[195,5997+39])
                Pexp_sequence
                expression (lib/action.ml[194,5958+2]..[194,5958+37])
                  Pexp_assert
                  expression (lib/action.ml[194,5958+9]..[194,5958+37])
                    Pexp_apply
                    expression (lib/action.ml[194,5958+10]..[194,5958+13])
                      Pexp_ident "not" (lib/action.ml[194,5958+10]..[194,5958+13])
                    [
                      <arg>
                      Nolabel
                        expression (lib/action.ml[194,5958+14]..[194,5958+36])
                          Pexp_apply
                          expression (lib/action.ml[194,5958+15]..[194,5958+29])
                            Pexp_ident "List.mem_assoc" (lib/action.ml[194,5958+15]..[194,5958+29])
                          [
                            <arg>
                            Nolabel
                              expression (lib/action.ml[194,5958+30]..[194,5958+31])
                                Pexp_ident "x" (lib/action.ml[194,5958+30]..[194,5958+31])
                            <arg>
                            Nolabel
                              expression (lib/action.ml[194,5958+32]..[194,5958+35])
                                Pexp_ident "var" (lib/action.ml[194,5958+32]..[194,5958+35])
                          ]
                    ]
                expression (lib/action.ml[195,5997+2]..[195,5997+39])
                  Pexp_ifthenelse
                  expression (lib/action.ml[195,5997+5]..[195,5997+11])
                    Pexp_apply
                    expression (lib/action.ml[195,5997+7]..[195,5997+9])
                      Pexp_ident "<>" (lib/action.ml[195,5997+7]..[195,5997+9])
                    [
                      <arg>
                      Nolabel
                        expression (lib/action.ml[195,5997+5]..[195,5997+6])
                          Pexp_ident "x" (lib/action.ml[195,5997+5]..[195,5997+6])
                      <arg>
                      Nolabel
                        expression (lib/action.ml[195,5997+10]..[195,5997+11])
                          Pexp_ident "y" (lib/action.ml[195,5997+10]..[195,5997+11])
                    ]
                  expression (lib/action.ml[195,5997+17]..[195,5997+30])
                    Pexp_construct "::" (lib/action.ml[195,5997+24]..[195,5997+26])
                    Some
                      expression (lib/action.ml[195,5997+17]..[195,5997+30]) ghost
                        Pexp_tuple
                        [
                          expression (lib/action.ml[195,5997+17]..[195,5997+23])
                            Pexp_tuple
                            [
                              expression (lib/action.ml[195,5997+18]..[195,5997+19])
                                Pexp_ident "x" (lib/action.ml[195,5997+18]..[195,5997+19])
                              expression (lib/action.ml[195,5997+21]..[195,5997+22])
                                Pexp_ident "y" (lib/action.ml[195,5997+21]..[195,5997+22])
                            ]
                          expression (lib/action.ml[195,5997+27]..[195,5997+30])
                            Pexp_ident "var" (lib/action.ml[195,5997+27]..[195,5997+30])
                        ]
                  Some
                    expression (lib/action.ml[195,5997+36]..[195,5997+39])
                      Pexp_ident "var" (lib/action.ml[195,5997+36]..[195,5997+39])
    ]
  structure_item (lib/action.ml[197,6038+0]..[198,6081+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[197,6038+4]..[197,6038+17])
          Ppat_var "extend_semvar" (lib/action.ml[197,6038+4]..[197,6038+17])
        expression (lib/action.ml[197,6038+18]..[198,6081+41]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/action.ml[197,6038+18]..[197,6038+19])
            Ppat_var "x" (lib/action.ml[197,6038+18]..[197,6038+19])
          expression (lib/action.ml[197,6038+20]..[198,6081+41]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/action.ml[197,6038+20]..[197,6038+21])
              Ppat_var "y" (lib/action.ml[197,6038+20]..[197,6038+21])
            expression (lib/action.ml[197,6038+22]..[198,6081+41]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/action.ml[197,6038+22]..[197,6038+40])
                Ppat_record Closed
                [
                  "semvar" (lib/action.ml[197,6038+24]..[197,6038+30]) ghost
                    pattern (lib/action.ml[197,6038+24]..[197,6038+30])
                      Ppat_var "semvar" (lib/action.ml[197,6038+24]..[197,6038+30])
                  "posvar" (lib/action.ml[197,6038+32]..[197,6038+38]) ghost
                    pattern (lib/action.ml[197,6038+32]..[197,6038+38])
                      Ppat_var "posvar" (lib/action.ml[197,6038+32]..[197,6038+38])
                ]
              expression (lib/action.ml[198,6081+2]..[198,6081+41])
                Pexp_record
                [
                  "semvar" (lib/action.ml[198,6081+4]..[198,6081+10])
                    expression (lib/action.ml[198,6081+13]..[198,6081+31])
                      Pexp_apply
                      expression (lib/action.ml[198,6081+13]..[198,6081+20])
                        Pexp_ident "extend1" (lib/action.ml[198,6081+13]..[198,6081+20])
                      [
                        <arg>
                        Nolabel
                          expression (lib/action.ml[198,6081+21]..[198,6081+22])
                            Pexp_ident "x" (lib/action.ml[198,6081+21]..[198,6081+22])
                        <arg>
                        Nolabel
                          expression (lib/action.ml[198,6081+23]..[198,6081+24])
                            Pexp_ident "y" (lib/action.ml[198,6081+23]..[198,6081+24])
                        <arg>
                        Nolabel
                          expression (lib/action.ml[198,6081+25]..[198,6081+31])
                            Pexp_ident "semvar" (lib/action.ml[198,6081+25]..[198,6081+31])
                      ]
                  "posvar" (lib/action.ml[198,6081+33]..[198,6081+39]) ghost
                    expression (lib/action.ml[198,6081+33]..[198,6081+39])
                      Pexp_ident "posvar" (lib/action.ml[198,6081+33]..[198,6081+39])
                ]
                None
    ]
  structure_item (lib/action.ml[200,6124+0]..[201,6167+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[200,6124+4]..[200,6124+17])
          Ppat_var "extend_posvar" (lib/action.ml[200,6124+4]..[200,6124+17])
        expression (lib/action.ml[200,6124+18]..[201,6167+41]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/action.ml[200,6124+18]..[200,6124+19])
            Ppat_var "x" (lib/action.ml[200,6124+18]..[200,6124+19])
          expression (lib/action.ml[200,6124+20]..[201,6167+41]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/action.ml[200,6124+20]..[200,6124+21])
              Ppat_var "y" (lib/action.ml[200,6124+20]..[200,6124+21])
            expression (lib/action.ml[200,6124+22]..[201,6167+41]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/action.ml[200,6124+22]..[200,6124+40])
                Ppat_record Closed
                [
                  "semvar" (lib/action.ml[200,6124+24]..[200,6124+30]) ghost
                    pattern (lib/action.ml[200,6124+24]..[200,6124+30])
                      Ppat_var "semvar" (lib/action.ml[200,6124+24]..[200,6124+30])
                  "posvar" (lib/action.ml[200,6124+32]..[200,6124+38]) ghost
                    pattern (lib/action.ml[200,6124+32]..[200,6124+38])
                      Ppat_var "posvar" (lib/action.ml[200,6124+32]..[200,6124+38])
                ]
              expression (lib/action.ml[201,6167+2]..[201,6167+41])
                Pexp_record
                [
                  "semvar" (lib/action.ml[201,6167+4]..[201,6167+10]) ghost
                    expression (lib/action.ml[201,6167+4]..[201,6167+10])
                      Pexp_ident "semvar" (lib/action.ml[201,6167+4]..[201,6167+10])
                  "posvar" (lib/action.ml[201,6167+12]..[201,6167+18])
                    expression (lib/action.ml[201,6167+21]..[201,6167+39])
                      Pexp_apply
                      expression (lib/action.ml[201,6167+21]..[201,6167+28])
                        Pexp_ident "extend1" (lib/action.ml[201,6167+21]..[201,6167+28])
                      [
                        <arg>
                        Nolabel
                          expression (lib/action.ml[201,6167+29]..[201,6167+30])
                            Pexp_ident "x" (lib/action.ml[201,6167+29]..[201,6167+30])
                        <arg>
                        Nolabel
                          expression (lib/action.ml[201,6167+31]..[201,6167+32])
                            Pexp_ident "y" (lib/action.ml[201,6167+31]..[201,6167+32])
                        <arg>
                        Nolabel
                          expression (lib/action.ml[201,6167+33]..[201,6167+39])
                            Pexp_ident "posvar" (lib/action.ml[201,6167+33]..[201,6167+39])
                      ]
                ]
                None
    ]
  structure_item (lib/action.ml[203,6210+0]..[203,6210+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[203,6210+4]..[203,6210+10])
          Ppat_var "extend" (lib/action.ml[203,6210+4]..[203,6210+10])
        expression (lib/action.ml[203,6210+13]..[203,6210+26])
          Pexp_ident "extend_semvar" (lib/action.ml[203,6210+13]..[203,6210+26])
    ]
  structure_item (lib/action.ml[205,6238+0]..[206,6257+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[205,6238+4]..[205,6238+10])
          Ppat_var "apply1" (lib/action.ml[205,6238+4]..[205,6238+10])
        expression (lib/action.ml[205,6238+11]..[206,6257+42]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/action.ml[205,6238+11]..[205,6238+14])
            Ppat_var "var" (lib/action.ml[205,6238+11]..[205,6238+14])
          expression (lib/action.ml[205,6238+15]..[206,6257+42]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/action.ml[205,6238+15]..[205,6238+16])
              Ppat_var "x" (lib/action.ml[205,6238+15]..[205,6238+16])
            expression (lib/action.ml[206,6257+2]..[206,6257+42])
              Pexp_try
              expression (lib/action.ml[206,6257+6]..[206,6257+22])
                Pexp_apply
                expression (lib/action.ml[206,6257+6]..[206,6257+16])
                  Pexp_ident "List.assoc" (lib/action.ml[206,6257+6]..[206,6257+16])
                [
                  <arg>
                  Nolabel
                    expression (lib/action.ml[206,6257+17]..[206,6257+18])
                      Pexp_ident "x" (lib/action.ml[206,6257+17]..[206,6257+18])
                  <arg>
                  Nolabel
                    expression (lib/action.ml[206,6257+19]..[206,6257+22])
                      Pexp_ident "var" (lib/action.ml[206,6257+19]..[206,6257+22])
                ]
              [
                <case>
                  pattern (lib/action.ml[206,6257+28]..[206,6257+37])
                    Ppat_construct "Not_found" (lib/action.ml[206,6257+28]..[206,6257+37])
                    None
                  expression (lib/action.ml[206,6257+41]..[206,6257+42])
                    Pexp_ident "x" (lib/action.ml[206,6257+41]..[206,6257+42])
              ]
    ]
  structure_item (lib/action.ml[208,6301+0]..[209,6326+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[208,6301+4]..[208,6301+16])
          Ppat_var "apply_semvar" (lib/action.ml[208,6301+4]..[208,6301+16])
        expression (lib/action.ml[208,6301+17]..[209,6326+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/action.ml[208,6301+17]..[208,6301+20])
            Ppat_var "phi" (lib/action.ml[208,6301+17]..[208,6301+20])
          expression (lib/action.ml[208,6301+21]..[209,6326+21]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/action.ml[208,6301+21]..[208,6301+22])
              Ppat_var "x" (lib/action.ml[208,6301+21]..[208,6301+22])
            expression (lib/action.ml[209,6326+2]..[209,6326+21])
              Pexp_apply
              expression (lib/action.ml[209,6326+2]..[209,6326+8])
                Pexp_ident "apply1" (lib/action.ml[209,6326+2]..[209,6326+8])
              [
                <arg>
                Nolabel
                  expression (lib/action.ml[209,6326+9]..[209,6326+19])
                    Pexp_field
                    expression (lib/action.ml[209,6326+9]..[209,6326+12])
                      Pexp_ident "phi" (lib/action.ml[209,6326+9]..[209,6326+12])
                    "semvar" (lib/action.ml[209,6326+13]..[209,6326+19])
                <arg>
                Nolabel
                  expression (lib/action.ml[209,6326+20]..[209,6326+21])
                    Pexp_ident "x" (lib/action.ml[209,6326+20]..[209,6326+21])
              ]
    ]
  structure_item (lib/action.ml[211,6349+0]..[217,6459+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[211,6349+4]..[211,6349+17])
          Ppat_var "apply_subject" (lib/action.ml[211,6349+4]..[211,6349+17])
        expression (lib/action.ml[211,6349+18]..[217,6459+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/action.ml[211,6349+18]..[211,6349+21])
            Ppat_var "phi" (lib/action.ml[211,6349+18]..[211,6349+21])
          expression (lib/action.ml[211,6349+22]..[217,6459+37]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/action.ml[211,6349+22]..[211,6349+29])
              Ppat_var "subject" (lib/action.ml[211,6349+22]..[211,6349+29])
            expression (lib/action.ml[212,6381+2]..[217,6459+37])
              Pexp_match
              expression (lib/action.ml[212,6381+8]..[212,6381+15])
                Pexp_ident "subject" (lib/action.ml[212,6381+8]..[212,6381+15])
              [
                <case>
                  pattern (lib/action.ml[213,6402+4]..[214,6413+8])
                    Ppat_or
                    pattern (lib/action.ml[213,6402+4]..[213,6402+10])
                      Ppat_construct "Before" (lib/action.ml[213,6402+4]..[213,6402+10])
                      None
                    pattern (lib/action.ml[214,6413+4]..[214,6413+8])
                      Ppat_construct "Left" (lib/action.ml[214,6413+4]..[214,6413+8])
                      None
                  expression (lib/action.ml[215,6425+6]..[215,6425+13])
                    Pexp_ident "subject" (lib/action.ml[215,6425+6]..[215,6425+13])
                <case>
                  pattern (lib/action.ml[216,6439+4]..[216,6439+16])
                    Ppat_construct "RightNamed" (lib/action.ml[216,6439+4]..[216,6439+14])
                    Some
                      []
                      pattern (lib/action.ml[216,6439+15]..[216,6439+16])
                        Ppat_var "x" (lib/action.ml[216,6439+15]..[216,6439+16])
                  expression (lib/action.ml[217,6459+6]..[217,6459+37])
                    Pexp_construct "RightNamed" (lib/action.ml[217,6459+6]..[217,6459+16])
                    Some
                      expression (lib/action.ml[217,6459+17]..[217,6459+37])
                        Pexp_apply
                        expression (lib/action.ml[217,6459+18]..[217,6459+30])
                          Pexp_ident "apply_semvar" (lib/action.ml[217,6459+18]..[217,6459+30])
                        [
                          <arg>
                          Nolabel
                            expression (lib/action.ml[217,6459+31]..[217,6459+34])
                              Pexp_ident "phi" (lib/action.ml[217,6459+31]..[217,6459+34])
                          <arg>
                          Nolabel
                            expression (lib/action.ml[217,6459+35]..[217,6459+36])
                              Pexp_ident "x" (lib/action.ml[217,6459+35]..[217,6459+36])
                        ]
              ]
    ]
  structure_item (lib/action.ml[219,6498+0]..[220,6517+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[219,6498+4]..[219,6498+12])
          Ppat_var "bindings" (lib/action.ml[219,6498+4]..[219,6498+12])
        expression (lib/action.ml[219,6498+13]..[220,6517+25]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/action.ml[219,6498+13]..[219,6498+16])
            Ppat_var "phi" (lib/action.ml[219,6498+13]..[219,6498+16])
          expression (lib/action.ml[220,6517+2]..[220,6517+25])
            Pexp_apply
            expression (lib/action.ml[220,6517+13]..[220,6517+14])
              Pexp_ident "@" (lib/action.ml[220,6517+13]..[220,6517+14])
            [
              <arg>
              Nolabel
                expression (lib/action.ml[220,6517+2]..[220,6517+12])
                  Pexp_field
                  expression (lib/action.ml[220,6517+2]..[220,6517+5])
                    Pexp_ident "phi" (lib/action.ml[220,6517+2]..[220,6517+5])
                  "posvar" (lib/action.ml[220,6517+6]..[220,6517+12])
              <arg>
              Nolabel
                expression (lib/action.ml[220,6517+15]..[220,6517+25])
                  Pexp_field
                  expression (lib/action.ml[220,6517+15]..[220,6517+18])
                    Pexp_ident "phi" (lib/action.ml[220,6517+15]..[220,6517+18])
                  "semvar" (lib/action.ml[220,6517+19]..[220,6517+25])
            ]
    ]
  structure_item (lib/action.ml[222,6544+0]..[223,6567+53])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[222,6544+4]..[222,6544+13])
          Ppat_var "restrict1" (lib/action.ml[222,6544+4]..[222,6544+13])
        expression (lib/action.ml[222,6544+14]..[223,6567+53]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/action.ml[222,6544+14]..[222,6544+16])
            Ppat_var "xs" (lib/action.ml[222,6544+14]..[222,6544+16])
          expression (lib/action.ml[222,6544+17]..[223,6567+53]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/action.ml[222,6544+17]..[222,6544+20])
              Ppat_var "var" (lib/action.ml[222,6544+17]..[222,6544+20])
            expression (lib/action.ml[223,6567+2]..[223,6567+53])
              Pexp_apply
              expression (lib/action.ml[223,6567+2]..[223,6567+13])
                Pexp_ident "List.filter" (lib/action.ml[223,6567+2]..[223,6567+13])
              [
                <arg>
                Nolabel
                  expression (lib/action.ml[223,6567+14]..[223,6567+49])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lib/action.ml[223,6567+19]..[223,6567+26])
                      Ppat_tuple
                      [
                        pattern (lib/action.ml[223,6567+20]..[223,6567+21])
                          Ppat_var "x" (lib/action.ml[223,6567+20]..[223,6567+21])
                        pattern (lib/action.ml[223,6567+23]..[223,6567+25])
                          Ppat_var "_y" (lib/action.ml[223,6567+23]..[223,6567+25])
                      ]
                    expression (lib/action.ml[223,6567+30]..[223,6567+48])
                      Pexp_apply
                      expression (lib/action.ml[223,6567+30]..[223,6567+43])
                        Pexp_ident "StringSet.mem" (lib/action.ml[223,6567+30]..[223,6567+43])
                      [
                        <arg>
                        Nolabel
                          expression (lib/action.ml[223,6567+44]..[223,6567+45])
                            Pexp_ident "x" (lib/action.ml[223,6567+44]..[223,6567+45])
                        <arg>
                        Nolabel
                          expression (lib/action.ml[223,6567+46]..[223,6567+48])
                            Pexp_ident "xs" (lib/action.ml[223,6567+46]..[223,6567+48])
                      ]
                <arg>
                Nolabel
                  expression (lib/action.ml[223,6567+50]..[223,6567+53])
                    Pexp_ident "var" (lib/action.ml[223,6567+50]..[223,6567+53])
              ]
    ]
  structure_item (lib/action.ml[225,6622+0]..[226,6666+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[225,6622+4]..[225,6622+19])
          Ppat_var "restrict_semvar" (lib/action.ml[225,6622+4]..[225,6622+19])
        expression (lib/action.ml[225,6622+20]..[226,6666+42]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/action.ml[225,6622+20]..[225,6622+22])
            Ppat_var "xs" (lib/action.ml[225,6622+20]..[225,6622+22])
          expression (lib/action.ml[225,6622+23]..[226,6666+42]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/action.ml[225,6622+23]..[225,6622+41])
              Ppat_record Closed
              [
                "semvar" (lib/action.ml[225,6622+25]..[225,6622+31]) ghost
                  pattern (lib/action.ml[225,6622+25]..[225,6622+31])
                    Ppat_var "semvar" (lib/action.ml[225,6622+25]..[225,6622+31])
                "posvar" (lib/action.ml[225,6622+33]..[225,6622+39]) ghost
                  pattern (lib/action.ml[225,6622+33]..[225,6622+39])
                    Ppat_var "posvar" (lib/action.ml[225,6622+33]..[225,6622+39])
              ]
            expression (lib/action.ml[226,6666+2]..[226,6666+42])
              Pexp_record
              [
                "semvar" (lib/action.ml[226,6666+4]..[226,6666+10])
                  expression (lib/action.ml[226,6666+13]..[226,6666+32])
                    Pexp_apply
                    expression (lib/action.ml[226,6666+13]..[226,6666+22])
                      Pexp_ident "restrict1" (lib/action.ml[226,6666+13]..[226,6666+22])
                    [
                      <arg>
                      Nolabel
                        expression (lib/action.ml[226,6666+23]..[226,6666+25])
                          Pexp_ident "xs" (lib/action.ml[226,6666+23]..[226,6666+25])
                      <arg>
                      Nolabel
                        expression (lib/action.ml[226,6666+26]..[226,6666+32])
                          Pexp_ident "semvar" (lib/action.ml[226,6666+26]..[226,6666+32])
                    ]
                "posvar" (lib/action.ml[226,6666+34]..[226,6666+40]) ghost
                  expression (lib/action.ml[226,6666+34]..[226,6666+40])
                    Pexp_ident "posvar" (lib/action.ml[226,6666+34]..[226,6666+40])
              ]
              None
    ]
  structure_item (lib/action.ml[236,7112+0]..[253,7625+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[236,7112+4]..[236,7112+18])
          Ppat_var "rename_keyword" (lib/action.ml[236,7112+4]..[236,7112+18])
        expression (lib/action.ml[236,7112+19]..[253,7625+41]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/action.ml[236,7112+19]..[236,7112+20])
            Ppat_var "f" (lib/action.ml[236,7112+19]..[236,7112+20])
          expression (lib/action.ml[236,7112+21]..[253,7625+41]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/action.ml[236,7112+21]..[236,7112+38])
              Ppat_constraint
              pattern (lib/action.ml[236,7112+22]..[236,7112+25])
                Ppat_var "phi" (lib/action.ml[236,7112+22]..[236,7112+25])
              core_type (lib/action.ml[236,7112+28]..[236,7112+37])
                Ptyp_constr "ref" (lib/action.ml[236,7112+34]..[236,7112+37])
                [
                  core_type (lib/action.ml[236,7112+28]..[236,7112+33])
                    Ptyp_constr "subst" (lib/action.ml[236,7112+28]..[236,7112+33])
                    []
                ]
            expression (lib/action.ml[236,7112+39]..[253,7625+41]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/action.ml[236,7112+39]..[236,7112+46])
                Ppat_var "keyword" (lib/action.ml[236,7112+39]..[236,7112+46])
              expression (lib/action.ml[236,7112+47]..[253,7625+41])
                Pexp_constraint
                expression (lib/action.ml[237,7171+2]..[253,7625+41])
                  Pexp_match
                  expression (lib/action.ml[237,7171+8]..[237,7171+15])
                    Pexp_ident "keyword" (lib/action.ml[237,7171+8]..[237,7171+15])
                  [
                    <case>
                      pattern (lib/action.ml[238,7192+4]..[238,7192+15])
                        Ppat_construct "SyntaxError" (lib/action.ml[238,7192+4]..[238,7192+15])
                        None
                      expression (lib/action.ml[239,7211+6]..[239,7211+17])
                        Pexp_construct "SyntaxError" (lib/action.ml[239,7211+6]..[239,7211+17])
                        None
                    <case>
                      pattern (lib/action.ml[240,7229+4]..[240,7229+37])
                        Ppat_construct "Position" (lib/action.ml[240,7229+4]..[240,7229+12])
                        Some
                          []
                          pattern (lib/action.ml[240,7229+13]..[240,7229+37])
                            Ppat_tuple
                            [
                              pattern (lib/action.ml[240,7229+14]..[240,7229+21])
                                Ppat_var "subject" (lib/action.ml[240,7229+14]..[240,7229+21])
                              pattern (lib/action.ml[240,7229+23]..[240,7229+28])
                                Ppat_var "where" (lib/action.ml[240,7229+23]..[240,7229+28])
                              pattern (lib/action.ml[240,7229+30]..[240,7229+36])
                                Ppat_var "flavor" (lib/action.ml[240,7229+30]..[240,7229+36])
                            ]
                      expression (lib/action.ml[241,7270+6]..[253,7625+41])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/action.ml[241,7270+10]..[241,7270+26])
                              Ppat_tuple
                              [
                                pattern (lib/action.ml[241,7270+10]..[241,7270+18])
                                  Ppat_var "subject'" (lib/action.ml[241,7270+10]..[241,7270+18])
                                pattern (lib/action.ml[241,7270+20]..[241,7270+26])
                                  Ppat_var "where'" (lib/action.ml[241,7270+20]..[241,7270+26])
                              ]
                            expression (lib/action.ml[242,7299+8]..[246,7421+45])
                              Pexp_match
                              expression (lib/action.ml[242,7299+14]..[242,7299+32])
                                Pexp_apply
                                expression (lib/action.ml[242,7299+14]..[242,7299+15])
                                  Pexp_ident "f" (lib/action.ml[242,7299+14]..[242,7299+15])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/action.ml[242,7299+16]..[242,7299+32])
                                      Pexp_tuple
                                      [
                                        expression (lib/action.ml[242,7299+17]..[242,7299+24])
                                          Pexp_ident "subject" (lib/action.ml[242,7299+17]..[242,7299+24])
                                        expression (lib/action.ml[242,7299+26]..[242,7299+31])
                                          Pexp_ident "where" (lib/action.ml[242,7299+26]..[242,7299+31])
                                      ]
                                ]
                              [
                                <case>
                                  pattern (lib/action.ml[243,7337+10]..[243,7337+33])
                                    Ppat_construct "Some" (lib/action.ml[243,7337+10]..[243,7337+14])
                                    Some
                                      []
                                      pattern (lib/action.ml[243,7337+15]..[243,7337+33])
                                        Ppat_tuple
                                        [
                                          pattern (lib/action.ml[243,7337+16]..[243,7337+24])
                                            Ppat_var "subject'" (lib/action.ml[243,7337+16]..[243,7337+24])
                                          pattern (lib/action.ml[243,7337+26]..[243,7337+32])
                                            Ppat_var "where'" (lib/action.ml[243,7337+26]..[243,7337+32])
                                        ]
                                  expression (lib/action.ml[244,7374+12]..[244,7374+28])
                                    Pexp_tuple
                                    [
                                      expression (lib/action.ml[244,7374+12]..[244,7374+20])
                                        Pexp_ident "subject'" (lib/action.ml[244,7374+12]..[244,7374+20])
                                      expression (lib/action.ml[244,7374+22]..[244,7374+28])
                                        Pexp_ident "where'" (lib/action.ml[244,7374+22]..[244,7374+28])
                                    ]
                                <case>
                                  pattern (lib/action.ml[245,7403+10]..[245,7403+14])
                                    Ppat_construct "None" (lib/action.ml[245,7403+10]..[245,7403+14])
                                    None
                                  expression (lib/action.ml[246,7421+12]..[246,7421+45])
                                    Pexp_tuple
                                    [
                                      expression (lib/action.ml[246,7421+12]..[246,7421+38])
                                        Pexp_apply
                                        expression (lib/action.ml[246,7421+12]..[246,7421+25])
                                          Pexp_ident "apply_subject" (lib/action.ml[246,7421+12]..[246,7421+25])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/action.ml[246,7421+26]..[246,7421+30])
                                              Pexp_apply
                                              expression (lib/action.ml[246,7421+26]..[246,7421+27])
                                                Pexp_ident "!" (lib/action.ml[246,7421+26]..[246,7421+27])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/action.ml[246,7421+27]..[246,7421+30])
                                                    Pexp_ident "phi" (lib/action.ml[246,7421+27]..[246,7421+30])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (lib/action.ml[246,7421+31]..[246,7421+38])
                                              Pexp_ident "subject" (lib/action.ml[246,7421+31]..[246,7421+38])
                                        ]
                                      expression (lib/action.ml[246,7421+40]..[246,7421+45])
                                        Pexp_ident "where" (lib/action.ml[246,7421+40]..[246,7421+45])
                                    ]
                              ]
                        ]
                        expression (lib/action.ml[248,7476+6]..[253,7625+41])
                          Pexp_sequence
                          expression (lib/action.ml[248,7476+6]..[252,7609+14])
                            Pexp_apply
                            expression (lib/action.ml[248,7476+10]..[248,7476+12])
                              Pexp_ident ":=" (lib/action.ml[248,7476+10]..[248,7476+12])
                            [
                              <arg>
                              Nolabel
                                expression (lib/action.ml[248,7476+6]..[248,7476+9])
                                  Pexp_ident "phi" (lib/action.ml[248,7476+6]..[248,7476+9])
                              <arg>
                              Nolabel
                                expression (lib/action.ml[249,7489+8]..[252,7609+14])
                                  Pexp_apply
                                  expression (lib/action.ml[249,7489+8]..[249,7489+21])
                                    Pexp_ident "extend_posvar" (lib/action.ml[249,7489+8]..[249,7489+21])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/action.ml[250,7511+10]..[250,7511+47])
                                        Pexp_apply
                                        expression (lib/action.ml[250,7511+11]..[250,7511+25])
                                          Pexp_ident "Keyword.posvar" (lib/action.ml[250,7511+11]..[250,7511+25])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/action.ml[250,7511+26]..[250,7511+33])
                                              Pexp_ident "subject" (lib/action.ml[250,7511+26]..[250,7511+33])
                                          <arg>
                                          Nolabel
                                            expression (lib/action.ml[250,7511+34]..[250,7511+39])
                                              Pexp_ident "where" (lib/action.ml[250,7511+34]..[250,7511+39])
                                          <arg>
                                          Nolabel
                                            expression (lib/action.ml[250,7511+40]..[250,7511+46])
                                              Pexp_ident "flavor" (lib/action.ml[250,7511+40]..[250,7511+46])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (lib/action.ml[251,7559+10]..[251,7559+49])
                                        Pexp_apply
                                        expression (lib/action.ml[251,7559+11]..[251,7559+25])
                                          Pexp_ident "Keyword.posvar" (lib/action.ml[251,7559+11]..[251,7559+25])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/action.ml[251,7559+26]..[251,7559+34])
                                              Pexp_ident "subject'" (lib/action.ml[251,7559+26]..[251,7559+34])
                                          <arg>
                                          Nolabel
                                            expression (lib/action.ml[251,7559+35]..[251,7559+41])
                                              Pexp_ident "where'" (lib/action.ml[251,7559+35]..[251,7559+41])
                                          <arg>
                                          Nolabel
                                            expression (lib/action.ml[251,7559+42]..[251,7559+48])
                                              Pexp_ident "flavor" (lib/action.ml[251,7559+42]..[251,7559+48])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (lib/action.ml[252,7609+10]..[252,7609+14])
                                        Pexp_apply
                                        expression (lib/action.ml[252,7609+10]..[252,7609+11])
                                          Pexp_ident "!" (lib/action.ml[252,7609+10]..[252,7609+11])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/action.ml[252,7609+11]..[252,7609+14])
                                              Pexp_ident "phi" (lib/action.ml[252,7609+11]..[252,7609+14])
                                        ]
                                  ]
                            ]
                          expression (lib/action.ml[253,7625+6]..[253,7625+41])
                            Pexp_construct "Position" (lib/action.ml[253,7625+6]..[253,7625+14])
                            Some
                              expression (lib/action.ml[253,7625+15]..[253,7625+41])
                                Pexp_tuple
                                [
                                  expression (lib/action.ml[253,7625+16]..[253,7625+24])
                                    Pexp_ident "subject'" (lib/action.ml[253,7625+16]..[253,7625+24])
                                  expression (lib/action.ml[253,7625+26]..[253,7625+32])
                                    Pexp_ident "where'" (lib/action.ml[253,7625+26]..[253,7625+32])
                                  expression (lib/action.ml[253,7625+34]..[253,7625+40])
                                    Pexp_ident "flavor" (lib/action.ml[253,7625+34]..[253,7625+40])
                                ]
                  ]
                core_type (lib/action.ml[236,7112+49]..[236,7112+56])
                  Ptyp_constr "keyword" (lib/action.ml[236,7112+49]..[236,7112+56])
                  []
    ]
  structure_item (lib/action.ml[255,7668+0]..[282,8772+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[255,7668+4]..[255,7668+10])
          Ppat_var "rename" (lib/action.ml[255,7668+4]..[255,7668+10])
        expression (lib/action.ml[255,7668+11]..[282,8772+39]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/action.ml[255,7668+11]..[255,7668+12])
            Ppat_var "f" (lib/action.ml[255,7668+11]..[255,7668+12])
          expression (lib/action.ml[255,7668+13]..[282,8772+39]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/action.ml[255,7668+13]..[255,7668+16])
              Ppat_var "phi" (lib/action.ml[255,7668+13]..[255,7668+16])
            expression (lib/action.ml[255,7668+17]..[282,8772+39]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/action.ml[255,7668+17]..[255,7668+18])
                Ppat_var "a" (lib/action.ml[255,7668+17]..[255,7668+18])
              expression (lib/action.ml[258,7743+2]..[282,8772+39])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lib/action.ml[258,7743+6]..[258,7743+14])
                      Ppat_var "keywords" (lib/action.ml[258,7743+6]..[258,7743+14])
                    expression (lib/action.ml[258,7743+17]..[258,7743+27])
                      Pexp_field
                      expression (lib/action.ml[258,7743+17]..[258,7743+18])
                        Pexp_ident "a" (lib/action.ml[258,7743+17]..[258,7743+18])
                      "keywords" (lib/action.ml[258,7743+19]..[258,7743+27])
                ]
                expression (lib/action.ml[259,7774+2]..[282,8772+39])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/action.ml[259,7774+6]..[259,7774+9])
                        Ppat_var "phi" (lib/action.ml[259,7774+6]..[259,7774+9])
                      expression (lib/action.ml[259,7774+12]..[259,7774+19])
                        Pexp_apply
                        expression (lib/action.ml[259,7774+12]..[259,7774+15])
                          Pexp_ident "ref" (lib/action.ml[259,7774+12]..[259,7774+15])
                        [
                          <arg>
                          Nolabel
                            expression (lib/action.ml[259,7774+16]..[259,7774+19])
                              Pexp_ident "phi" (lib/action.ml[259,7774+16]..[259,7774+19])
                        ]
                  ]
                  expression (lib/action.ml[260,7797+2]..[282,8772+39])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/action.ml[260,7797+6]..[260,7797+14])
                          Ppat_var "keywords" (lib/action.ml[260,7797+6]..[260,7797+14])
                        expression (lib/action.ml[260,7797+17]..[260,7797+63])
                          Pexp_apply
                          expression (lib/action.ml[260,7797+17]..[260,7797+31])
                            Pexp_ident "KeywordSet.map" (lib/action.ml[260,7797+17]..[260,7797+31])
                          [
                            <arg>
                            Nolabel
                              expression (lib/action.ml[260,7797+32]..[260,7797+54])
                                Pexp_apply
                                expression (lib/action.ml[260,7797+33]..[260,7797+47])
                                  Pexp_ident "rename_keyword" (lib/action.ml[260,7797+33]..[260,7797+47])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/action.ml[260,7797+48]..[260,7797+49])
                                      Pexp_ident "f" (lib/action.ml[260,7797+48]..[260,7797+49])
                                  <arg>
                                  Nolabel
                                    expression (lib/action.ml[260,7797+50]..[260,7797+53])
                                      Pexp_ident "phi" (lib/action.ml[260,7797+50]..[260,7797+53])
                                ]
                            <arg>
                            Nolabel
                              expression (lib/action.ml[260,7797+55]..[260,7797+63])
                                Pexp_ident "keywords" (lib/action.ml[260,7797+55]..[260,7797+63])
                          ]
                    ]
                    expression (lib/action.ml[261,7864+2]..[282,8772+39])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/action.ml[261,7864+6]..[261,7864+9])
                            Ppat_var "phi" (lib/action.ml[261,7864+6]..[261,7864+9])
                          expression (lib/action.ml[261,7864+12]..[261,7864+16])
                            Pexp_apply
                            expression (lib/action.ml[261,7864+12]..[261,7864+13])
                              Pexp_ident "!" (lib/action.ml[261,7864+12]..[261,7864+13])
                            [
                              <arg>
                              Nolabel
                                expression (lib/action.ml[261,7864+13]..[261,7864+16])
                                  Pexp_ident "phi" (lib/action.ml[261,7864+13]..[261,7864+16])
                            ]
                      ]
                      expression (lib/action.ml[263,7885+2]..[282,8772+39])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/action.ml[263,7885+6]..[263,7885+14])
                              Ppat_var "standard" (lib/action.ml[263,7885+6]..[263,7885+14])
                            expression (lib/action.ml[263,7885+17]..[263,7885+27])
                              Pexp_field
                              expression (lib/action.ml[263,7885+17]..[263,7885+18])
                                Pexp_ident "a" (lib/action.ml[263,7885+17]..[263,7885+18])
                              "standard" (lib/action.ml[263,7885+19]..[263,7885+27])
                        ]
                        expression (lib/action.ml[270,8208+2]..[282,8772+39])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lib/action.ml[270,8208+6]..[270,8208+9])
                                Ppat_var "phi" (lib/action.ml[270,8208+6]..[270,8208+9])
                              expression (lib/action.ml[270,8208+12]..[270,8208+41])
                                Pexp_apply
                                expression (lib/action.ml[270,8208+12]..[270,8208+27])
                                  Pexp_ident "restrict_semvar" (lib/action.ml[270,8208+12]..[270,8208+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/action.ml[270,8208+28]..[270,8208+37])
                                      Pexp_field
                                      expression (lib/action.ml[270,8208+28]..[270,8208+29])
                                        Pexp_ident "a" (lib/action.ml[270,8208+28]..[270,8208+29])
                                      "semvars" (lib/action.ml[270,8208+30]..[270,8208+37])
                                  <arg>
                                  Nolabel
                                    expression (lib/action.ml[270,8208+38]..[270,8208+41])
                                      Pexp_ident "phi" (lib/action.ml[270,8208+38]..[270,8208+41])
                                ]
                          ]
                          expression (lib/action.ml[273,8311+2]..[282,8772+39])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/action.ml[273,8311+6]..[273,8311+13])
                                  Ppat_var "semvars" (lib/action.ml[273,8311+6]..[273,8311+13])
                                expression (lib/action.ml[273,8311+16]..[273,8311+58])
                                  Pexp_apply
                                  expression (lib/action.ml[273,8311+16]..[273,8311+29])
                                    Pexp_ident "StringSet.map" (lib/action.ml[273,8311+16]..[273,8311+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/action.ml[273,8311+30]..[273,8311+48])
                                        Pexp_apply
                                        expression (lib/action.ml[273,8311+31]..[273,8311+43])
                                          Pexp_ident "apply_semvar" (lib/action.ml[273,8311+31]..[273,8311+43])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/action.ml[273,8311+44]..[273,8311+47])
                                              Pexp_ident "phi" (lib/action.ml[273,8311+44]..[273,8311+47])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (lib/action.ml[273,8311+49]..[273,8311+58])
                                        Pexp_field
                                        expression (lib/action.ml[273,8311+49]..[273,8311+50])
                                          Pexp_ident "a" (lib/action.ml[273,8311+49]..[273,8311+50])
                                        "semvars" (lib/action.ml[273,8311+51]..[273,8311+58])
                                  ]
                            ]
                            expression (lib/action.ml[279,8648+2]..[282,8772+39])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/action.ml[279,8648+6]..[279,8648+9])
                                    Ppat_var "phi" (lib/action.ml[279,8648+6]..[279,8648+9])
                                  expression (lib/action.ml[279,8648+12]..[279,8648+72])
                                    Pexp_apply
                                    expression (lib/action.ml[279,8648+12]..[279,8648+20])
                                      Pexp_ident "List.map" (lib/action.ml[279,8648+12]..[279,8648+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/action.ml[279,8648+21]..[279,8648+57])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (lib/action.ml[279,8648+26]..[279,8648+32])
                                            Ppat_tuple
                                            [
                                              pattern (lib/action.ml[279,8648+27]..[279,8648+28])
                                                Ppat_var "x" (lib/action.ml[279,8648+27]..[279,8648+28])
                                              pattern (lib/action.ml[279,8648+30]..[279,8648+31])
                                                Ppat_var "y" (lib/action.ml[279,8648+30]..[279,8648+31])
                                            ]
                                          expression (lib/action.ml[279,8648+36]..[279,8648+56])
                                            Pexp_tuple
                                            [
                                              expression (lib/action.ml[279,8648+36]..[279,8648+45])
                                                Pexp_construct "IL.PVar" (lib/action.ml[279,8648+36]..[279,8648+43])
                                                Some
                                                  expression (lib/action.ml[279,8648+44]..[279,8648+45])
                                                    Pexp_ident "x" (lib/action.ml[279,8648+44]..[279,8648+45])
                                              expression (lib/action.ml[279,8648+47]..[279,8648+56])
                                                Pexp_construct "IL.EVar" (lib/action.ml[279,8648+47]..[279,8648+54])
                                                Some
                                                  expression (lib/action.ml[279,8648+55]..[279,8648+56])
                                                    Pexp_ident "y" (lib/action.ml[279,8648+55]..[279,8648+56])
                                            ]
                                      <arg>
                                      Nolabel
                                        expression (lib/action.ml[279,8648+58]..[279,8648+72])
                                          Pexp_apply
                                          expression (lib/action.ml[279,8648+59]..[279,8648+67])
                                            Pexp_ident "bindings" (lib/action.ml[279,8648+59]..[279,8648+67])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/action.ml[279,8648+68]..[279,8648+71])
                                                Pexp_ident "phi" (lib/action.ml[279,8648+68]..[279,8648+71])
                                          ]
                                    ]
                              ]
                              expression (lib/action.ml[280,8724+2]..[282,8772+39])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/action.ml[280,8724+6]..[280,8724+10])
                                      Ppat_var "expr" (lib/action.ml[280,8724+6]..[280,8724+10])
                                    expression (lib/action.ml[280,8724+13]..[280,8724+43])
                                      Pexp_apply
                                      expression (lib/action.ml[280,8724+13]..[280,8724+29])
                                        Pexp_ident "CodeBits.eletand" (lib/action.ml[280,8724+13]..[280,8724+29])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/action.ml[280,8724+30]..[280,8724+43])
                                            Pexp_tuple
                                            [
                                              expression (lib/action.ml[280,8724+31]..[280,8724+34])
                                                Pexp_ident "phi" (lib/action.ml[280,8724+31]..[280,8724+34])
                                              expression (lib/action.ml[280,8724+36]..[280,8724+42])
                                                Pexp_field
                                                expression (lib/action.ml[280,8724+36]..[280,8724+37])
                                                  Pexp_ident "a" (lib/action.ml[280,8724+36]..[280,8724+37])
                                                "expr" (lib/action.ml[280,8724+38]..[280,8724+42])
                                            ]
                                      ]
                                ]
                                expression (lib/action.ml[282,8772+2]..[282,8772+39])
                                  Pexp_record
                                  [
                                    "expr" (lib/action.ml[282,8772+4]..[282,8772+8]) ghost
                                      expression (lib/action.ml[282,8772+4]..[282,8772+8])
                                        Pexp_ident "expr" (lib/action.ml[282,8772+4]..[282,8772+8])
                                    "standard" (lib/action.ml[282,8772+10]..[282,8772+18]) ghost
                                      expression (lib/action.ml[282,8772+10]..[282,8772+18])
                                        Pexp_ident "standard" (lib/action.ml[282,8772+10]..[282,8772+18])
                                    "semvars" (lib/action.ml[282,8772+20]..[282,8772+27]) ghost
                                      expression (lib/action.ml[282,8772+20]..[282,8772+27])
                                        Pexp_ident "semvars" (lib/action.ml[282,8772+20]..[282,8772+27])
                                    "keywords" (lib/action.ml[282,8772+29]..[282,8772+37]) ghost
                                      expression (lib/action.ml[282,8772+29]..[282,8772+37])
                                        Pexp_ident "keywords" (lib/action.ml[282,8772+29]..[282,8772+37])
                                  ]
                                  None
    ]
  structure_item (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
          Ppat_construct "()" (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
          None
        expression (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
          Pexp_apply
          expression (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
            Pexp_ident "Ppx_inline_test_lib.unset_lib" (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
          [
            <arg>
            Nolabel
              expression (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/action.ml[282,8772+39]..[282,8772+39]) ghost,None)
          ]
    ]
  structure_item (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
          Ppat_construct "()" (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
          None
        expression (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
          Pexp_apply
          expression (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
            Pexp_ident "Expect_test_collector.Current_file.unset" (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
          [
            <arg>
            Nolabel
              expression (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
                Pexp_construct "()" (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
                None
          ]
    ]
  structure_item (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
          Ppat_construct "()" (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
          None
        expression (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
          Pexp_apply
          expression (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
            Pexp_ident "Ppx_bench_lib.Benchmark_accumulator.Current_libname.unset" (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
          [
            <arg>
            Nolabel
              expression (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
                Pexp_construct "()" (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
                None
          ]
    ]
  structure_item (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
          Ppat_construct "()" (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
          None
        expression (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
          Pexp_apply
          expression (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
            Pexp_ident "Ppx_module_timer_runtime.record_until" (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
          [
            <arg>
            Nolabel
              expression (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
                Pexp_ident "Ppx_module_timer_runtime.__MODULE__" (lib/action.ml[282,8772+39]..[282,8772+39]) ghost
          ]
    ]
]

[@@@ocaml.ppx.context
  {
    tool_name = "ppx_driver";
    include_dirs = [];
    load_path = [];
    open_modules = [];
    for_package = None;
    debug = false;
    use_threads = false;
    use_vmthreads = false;
    recursive_types = false;
    principal = false;
    transparent_modules = false;
    unboxed_types = false;
    unsafe_string = false;
    cookies = [("inline_tests", "enabled"); ("library-name", "gbnf_parser")]
  }]
let () =
  Ppx_module_timer_runtime.record_start Ppx_module_timer_runtime.__MODULE__
let () =
  Ppx_bench_lib.Benchmark_accumulator.Current_libname.set "gbnf_parser"
let () =
  Expect_test_collector.Current_file.set ~absolute_filename:"lib/action.ml"
let () = Ppx_inline_test_lib.set_lib_and_partition "gbnf_parser" "action.ml"
open Keyword
type t =
  {
  expr: IL.expr ;
  standard: bool ;
  semvars: StringSet.t ;
  keywords: KeywordSet.t }
let from_stretch xs s =
  {
    expr = (IL.ETextual s);
    standard = (s.Stretch.stretch_filename = "fixme");
    semvars = xs;
    keywords = (KeywordSet.of_list s.Stretch.stretch_keywords)
  }
let rec from_il_expr e =
  { expr = e; standard = true; semvars = (fv e); keywords = KeywordSet.empty
  }
and fv e = fv_aux StringSet.empty e
and fv_aux accu e =
  let open IL in
    match e with
    | EVar x -> StringSet.add x accu
    | ETextual _ -> accu
    | ETuple es -> List.fold_left fv_aux accu es
    | EApp (e, es) -> List.fold_left fv_aux accu (e :: es)
    | _ -> assert false
let compose x a1 a2 =
  {
    expr = (CodeBits.blet ([((IL.PVar x), (a1.expr))], (a2.expr)));
    semvars = (StringSet.union a1.semvars (StringSet.remove x a2.semvars));
    keywords = (KeywordSet.union a1.keywords a2.keywords);
    standard = (a1.standard && a2.standard)
  }
let rec bind p x a =
  {
    expr = (CodeBits.blet ([(p, (IL.EVar x))], (a.expr)));
    semvars = (StringSet.add x (StringSet.diff a.semvars (bv p)));
    keywords = (a.keywords);
    standard = (a.standard)
  }
and bv p = bv_aux StringSet.empty p
and bv_aux accu p =
  let open IL in
    match p with
    | PWildcard | PUnit -> accu
    | PVar x -> StringSet.add x accu
    | PTuple ps -> List.fold_left bv_aux accu ps
    | _ -> assert false
let to_il_expr action = action.expr
let is_standard action = action.standard
let semvars action = action.semvars
let keywords action = action.keywords
let has_syntaxerror action = KeywordSet.mem SyntaxError action.keywords
let has_beforeend action =
  KeywordSet.mem (Position (Before, WhereEnd, FlavorPosition))
    action.keywords
let posvars action =
  KeywordSet.fold
    (fun keyword ->
       fun accu ->
         match keyword with
         | SyntaxError -> accu
         | Position (s, w, f) ->
             let x = Keyword.posvar s w f in StringSet.add x accu)
    (keywords action) StringSet.empty
let vars action = StringSet.union (semvars action) (posvars action)
let define keyword keywords f action =
  assert (KeywordSet.mem keyword action.keywords);
  {
    expr = (f action.expr);
    standard = (action.standard);
    semvars = (action.semvars);
    keywords =
      (KeywordSet.union keywords (KeywordSet.remove keyword action.keywords))
  }
type subst =
  {
  semvar: (string * string) list ;
  posvar: (string * string) list }
let empty = { semvar = []; posvar = [] }
let extend1 x y var =
  assert (not (List.mem_assoc x var)); if x <> y then (x, y) :: var else var
let extend_semvar x y { semvar; posvar } =
  { semvar = (extend1 x y semvar); posvar }
let extend_posvar x y { semvar; posvar } =
  { semvar; posvar = (extend1 x y posvar) }
let extend = extend_semvar
let apply1 var x = try List.assoc x var with | Not_found -> x
let apply_semvar phi x = apply1 phi.semvar x
let apply_subject phi subject =
  match subject with
  | Before | Left -> subject
  | RightNamed x -> RightNamed (apply_semvar phi x)
let bindings phi = phi.posvar @ phi.semvar
let restrict1 xs var = List.filter (fun (x, _y) -> StringSet.mem x xs) var
let restrict_semvar xs { semvar; posvar } =
  { semvar = (restrict1 xs semvar); posvar }
let rename_keyword f (phi : subst ref) keyword =
  (match keyword with
   | SyntaxError -> SyntaxError
   | Position (subject, where, flavor) ->
       let (subject', where') =
         match f (subject, where) with
         | Some (subject', where') -> (subject', where')
         | None -> ((apply_subject (!phi) subject), where) in
       (phi :=
          (extend_posvar (Keyword.posvar subject where flavor)
             (Keyword.posvar subject' where' flavor) (!phi));
        Position (subject', where', flavor)) : keyword)
let rename f phi a =
  let keywords = a.keywords in
  let phi = ref phi in
  let keywords = KeywordSet.map (rename_keyword f phi) keywords in
  let phi = !phi in
  let standard = a.standard in
  let phi = restrict_semvar a.semvars phi in
  let semvars = StringSet.map (apply_semvar phi) a.semvars in
  let phi =
    List.map (fun (x, y) -> ((IL.PVar x), (IL.EVar y))) (bindings phi) in
  let expr = CodeBits.eletand (phi, (a.expr)) in
  { expr; standard; semvars; keywords }
let () = Ppx_inline_test_lib.unset_lib "gbnf_parser"
let () = Expect_test_collector.Current_file.unset ()
let () = Ppx_bench_lib.Benchmark_accumulator.Current_libname.unset ()
let () =
  Ppx_module_timer_runtime.record_until Ppx_module_timer_runtime.__MODULE__
[
  structure_item (_none_[0,0+-1].._none_[0,0+-1]) ghost
    Tstr_attribute "ocaml.ppx.context"
    [
      structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
        Pstr_eval
        expression (_none_[0,0+-1]..[0,0+-1]) ghost
          Pexp_record
          [
            "tool_name" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_constant PConst_string("ppx_driver",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
            "include_dirs" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "load_path" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "open_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "for_package" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "None" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "debug" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_threads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_vmthreads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "recursive_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "principal" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "transparent_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unboxed_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unsafe_string" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "cookies" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                Some
                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                    Pexp_tuple
                    [
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_tuple
                        [
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_constant PConst_string("inline_tests",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                          expression (<command-line>[1,0+0]..[1,0+9])
                            Pexp_constant PConst_string("enabled",(<command-line>[1,0+1]..[1,0+8]),None)
                        ]
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                        Some
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_tuple
                            [
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_tuple
                                [
                                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                    Pexp_constant PConst_string("library-name",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                                  expression (<command-line>[1,0+0]..[1,0+13])
                                    Pexp_constant PConst_string("gbnf_parser",(<command-line>[1,0+1]..[1,0+12]),None)
                                ]
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                                None
                            ]
                    ]
          ]
          None
    ]
  structure_item (lib/action.ml[14,976+0]..lib/action.ml[14,976+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[14,976+0]..lib/action.ml[14,976+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/action.ml[14,976+0]..lib/action.ml[14,976+0]) ghost
          Texp_apply
          expression (lib/action.ml[14,976+0]..lib/action.ml[14,976+0]) ghost
            Texp_ident "Ppx_module_timer_runtime!.record_start"
          [
            <arg>
              Nolabel
              expression (lib/action.ml[14,976+0]..lib/action.ml[14,976+0]) ghost
                Texp_ident "Ppx_module_timer_runtime!.__MODULE__"
          ]
    ]
  structure_item (lib/action.ml[14,976+0]..lib/action.ml[14,976+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[14,976+0]..lib/action.ml[14,976+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/action.ml[14,976+0]..lib/action.ml[14,976+0]) ghost
          Texp_apply
          expression (lib/action.ml[14,976+0]..lib/action.ml[14,976+0]) ghost
            Texp_ident "Ppx_bench_lib!.Benchmark_accumulator.Current_libname.set"
          [
            <arg>
              Nolabel
              expression (lib/action.ml[14,976+0]..lib/action.ml[14,976+0]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/action.ml[14,976+0]..lib/action.ml[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/action.ml[14,976+0]..lib/action.ml[14,976+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[14,976+0]..lib/action.ml[14,976+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/action.ml[14,976+0]..lib/action.ml[14,976+0]) ghost
          Texp_apply
          expression (lib/action.ml[14,976+0]..lib/action.ml[14,976+0]) ghost
            Texp_ident "Expect_test_collector!.Current_file.set"
          [
            <arg>
              Labelled "absolute_filename"
              expression (lib/action.ml[14,976+0]..lib/action.ml[14,976+0]) ghost
                Texp_constant Const_string("lib/action.ml",(lib/action.ml[14,976+0]..lib/action.ml[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/action.ml[14,976+0]..lib/action.ml[14,976+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[14,976+0]..lib/action.ml[14,976+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/action.ml[14,976+0]..lib/action.ml[14,976+0]) ghost
          Texp_apply
          expression (lib/action.ml[14,976+0]..lib/action.ml[14,976+0]) ghost
            Texp_ident "Ppx_inline_test_lib!.set_lib_and_partition"
          [
            <arg>
              Nolabel
              expression (lib/action.ml[14,976+0]..lib/action.ml[14,976+0]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/action.ml[14,976+0]..lib/action.ml[14,976+0]) ghost,None)
            <arg>
              Nolabel
              expression (lib/action.ml[14,976+0]..lib/action.ml[14,976+0]) ghost
                Texp_constant Const_string("action.ml",(lib/action.ml[14,976+0]..lib/action.ml[14,976+0]) ghost,None)
          ]
    ]
  structure_item (lib/action.ml[14,976+0]..lib/action.ml[14,976+12])
    Tstr_open Fresh
    module_expr (lib/action.ml[14,976+5]..lib/action.ml[14,976+12])
      Tmod_ident "Gbnf_parser!.Keyword"
  structure_item (lib/action.ml[16,990+0]..lib/action.ml[35,1655+1])
    Tstr_type Rec
    [
      type_declaration t/1141 (lib/action.ml[16,990+0]..lib/action.ml[35,1655+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/action.ml[19,1045+2]..lib/action.ml[19,1045+16])
                Immutable
                expr/1169                core_type (lib/action.ml[19,1045+8]..lib/action.ml[19,1045+15])
                  Ttyp_poly
                  core_type (lib/action.ml[19,1045+8]..lib/action.ml[19,1045+15])
                    Ttyp_constr "Gbnf_parser!.IL.expr"
                    []
              (lib/action.ml[24,1284+2]..lib/action.ml[24,1284+17])
                Immutable
                standard/1170                core_type (lib/action.ml[24,1284+12]..lib/action.ml[24,1284+16])
                  Ttyp_poly
                  core_type (lib/action.ml[24,1284+12]..lib/action.ml[24,1284+16])
                    Ttyp_constr "bool/5!"
                    []
              (lib/action.ml[28,1422+2]..lib/action.ml[28,1422+23])
                Immutable
                semvars/1217                core_type (lib/action.ml[28,1422+11]..lib/action.ml[28,1422+22])
                  Ttyp_poly
                  core_type (lib/action.ml[28,1422+11]..lib/action.ml[28,1422+22])
                    Ttyp_constr "Gbnf_parser!.StringSet.t"
                    []
              (lib/action.ml[33,1626+2]..lib/action.ml[33,1626+27])
                Immutable
                keywords/1272                core_type (lib/action.ml[33,1626+14]..lib/action.ml[33,1626+26])
                  Ttyp_poly
                  core_type (lib/action.ml[33,1626+14]..lib/action.ml[33,1626+26])
                    Ttyp_constr "Gbnf_parser!.Keyword.KeywordSet.t"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/action.ml[41,1761+0]..lib/action.ml[49,1958+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[41,1761+4]..lib/action.ml[41,1761+16])
          Tpat_var "from_stretch/1485"
        expression (lib/action.ml[41,1761+17]..lib/action.ml[49,1958+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/action.ml[41,1761+17]..lib/action.ml[41,1761+19])
                Tpat_var "xs/1487"
              expression (lib/action.ml[41,1761+20]..lib/action.ml[49,1958+3]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/action.ml[41,1761+20]..lib/action.ml[41,1761+21])
                      Tpat_var "s/1488"
                    expression (lib/action.ml[42,1785+2]..lib/action.ml[49,1958+3])
                      Texp_record
                        fields =
                          [
                            "expr"
                              expression (lib/action.ml[43,1789+16]..lib/action.ml[43,1789+29])
                                Texp_construct "IL.ETextual"
                                [
                                  expression (lib/action.ml[43,1789+28]..lib/action.ml[43,1789+29])
                                    Texp_ident "s/1488"
                                ]
                            "standard"
                              expression (lib/action.ml[45,1821+16]..lib/action.ml[45,1821+52])
                                Texp_apply
                                expression (lib/action.ml[45,1821+43]..lib/action.ml[45,1821+44])
                                  Texp_ident "Stdlib!.="
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/action.ml[45,1821+16]..lib/action.ml[45,1821+42])
                                      Texp_field
                                      expression (lib/action.ml[45,1821+16]..lib/action.ml[45,1821+17])
                                        Texp_ident "s/1488"
                                      "Stretch.stretch_filename"
                                  <arg>
                                    Nolabel
                                    expression (lib/action.ml[45,1821+45]..lib/action.ml[45,1821+52])
                                      Texp_constant Const_string("fixme",(lib/action.ml[45,1821+46]..lib/action.ml[45,1821+51]),None)
                                ]
                            "semvars"
                              expression (lib/action.ml[47,1876+16]..lib/action.ml[47,1876+18])
                                Texp_ident "xs/1487"
                            "keywords"
                              expression (lib/action.ml[48,1896+16]..lib/action.ml[48,1896+61])
                                Texp_apply
                                expression (lib/action.ml[48,1896+16]..lib/action.ml[48,1896+34])
                                  Texp_ident "Gbnf_parser!.Keyword.KeywordSet.of_list"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/action.ml[48,1896+35]..lib/action.ml[48,1896+61])
                                      Texp_field
                                      expression (lib/action.ml[48,1896+35]..lib/action.ml[48,1896+36])
                                        Texp_ident "s/1488"
                                      "Stretch.stretch_keywords"
                                ]
                          ]
                        representation =
                          Record_regular
                        extended_expression =
                          None
                ]
          ]
    ]
  structure_item (lib/action.ml[51,1963+0]..lib/action.ml[80,2772+37])
    Tstr_value Rec
    [
      <def>
        pattern (lib/action.ml[51,1963+8]..lib/action.ml[51,1963+20])
          Tpat_var "from_il_expr/1493"
        expression (lib/action.ml[51,1963+21]..lib/action.ml[57,2089+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/action.ml[51,1963+21]..lib/action.ml[51,1963+22])
                Tpat_var "e/1496"
              expression (lib/action.ml[52,1988+2]..lib/action.ml[57,2089+3])
                Texp_record
                  fields =
                    [
                      "expr"
                        expression (lib/action.ml[53,1992+16]..lib/action.ml[53,1992+17])
                          Texp_ident "e/1496"
                      "standard"
                        expression (lib/action.ml[54,2011+16]..lib/action.ml[54,2011+20])
                          Texp_construct "true"
                          []
                      "semvars"
                        expression (lib/action.ml[55,2033+16]..lib/action.ml[55,2033+20])
                          Texp_apply
                          expression (lib/action.ml[55,2033+16]..lib/action.ml[55,2033+18])
                            Texp_ident "fv/1494"
                          [
                            <arg>
                              Nolabel
                              expression (lib/action.ml[55,2033+19]..lib/action.ml[55,2033+20])
                                Texp_ident "e/1496"
                          ]
                      "keywords"
                        expression (lib/action.ml[56,2055+16]..lib/action.ml[56,2055+32])
                          Texp_ident "Gbnf_parser!.Keyword.KeywordSet.empty"
                    ]
                  representation =
                    Record_regular
                  extended_expression =
                    None
          ]
      <def>
        pattern (lib/action.ml[62,2194+4]..lib/action.ml[62,2194+6])
          Tpat_var "fv/1494"
        expression (lib/action.ml[62,2194+7]..lib/action.ml[63,2205+26]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/action.ml[62,2194+7]..lib/action.ml[62,2194+8])
                Tpat_var "e/1497"
              expression (lib/action.ml[63,2205+2]..lib/action.ml[63,2205+26])
                Texp_apply
                expression (lib/action.ml[63,2205+2]..lib/action.ml[63,2205+8])
                  Texp_ident "fv_aux/1495"
                [
                  <arg>
                    Nolabel
                    expression (lib/action.ml[63,2205+9]..lib/action.ml[63,2205+24])
                      Texp_ident "Gbnf_parser!.StringSet.empty"
                  <arg>
                    Nolabel
                    expression (lib/action.ml[63,2205+25]..lib/action.ml[63,2205+26])
                      Texp_ident "e/1497"
                ]
          ]
      <def>
        pattern (lib/action.ml[65,2233+4]..lib/action.ml[65,2233+10])
          Tpat_var "fv_aux/1495"
        expression (lib/action.ml[65,2233+11]..lib/action.ml[80,2772+37]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/action.ml[65,2233+11]..lib/action.ml[65,2233+15])
                Tpat_var "accu/1498"
              expression (lib/action.ml[65,2233+16]..lib/action.ml[80,2772+37]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/action.ml[65,2233+16]..lib/action.ml[65,2233+17])
                      Tpat_var "e/1499"
                    expression (lib/action.ml[66,2253+2]..lib/action.ml[80,2772+37])
                      Texp_open Fresh
                      module_expr (lib/action.ml[66,2253+2]..lib/action.ml[66,2253+4])
                        Tmod_ident "Gbnf_parser!.IL"
                      expression (lib/action.ml[66,2253+6]..lib/action.ml[80,2772+18])
                        Texp_match
                        expression (lib/action.ml[66,2253+12]..lib/action.ml[66,2253+13])
                          Texp_ident "e/1499"
                        [
                          <case>
                            pattern (lib/action.ml[67,2272+4]..lib/action.ml[67,2272+10])
                              Tpat_value
                              pattern (lib/action.ml[67,2272+4]..lib/action.ml[67,2272+10])
                                Tpat_construct "EVar"
                                [
                                  pattern (lib/action.ml[67,2272+9]..lib/action.ml[67,2272+10])
                                    Tpat_var "x/1500"
                                ]
                                None
                            expression (lib/action.ml[68,2286+6]..lib/action.ml[68,2286+26])
                              Texp_apply
                              expression (lib/action.ml[68,2286+6]..lib/action.ml[68,2286+19])
                                Texp_ident "Gbnf_parser!.StringSet.add"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/action.ml[68,2286+20]..lib/action.ml[68,2286+21])
                                    Texp_ident "x/1500"
                                <arg>
                                  Nolabel
                                  expression (lib/action.ml[68,2286+22]..lib/action.ml[68,2286+26])
                                    Texp_ident "accu/1498"
                              ]
                          <case>
                            pattern (lib/action.ml[69,2313+4]..lib/action.ml[69,2313+14])
                              Tpat_value
                              pattern (lib/action.ml[69,2313+4]..lib/action.ml[69,2313+14])
                                Tpat_construct "ETextual"
                                [
                                  pattern (lib/action.ml[69,2313+13]..lib/action.ml[69,2313+14])
                                    Tpat_any
                                ]
                                None
                            expression (lib/action.ml[74,2636+6]..lib/action.ml[74,2636+10])
                              Texp_ident "accu/1498"
                          <case>
                            pattern (lib/action.ml[75,2647+4]..lib/action.ml[75,2647+13])
                              Tpat_value
                              pattern (lib/action.ml[75,2647+4]..lib/action.ml[75,2647+13])
                                Tpat_construct "ETuple"
                                [
                                  pattern (lib/action.ml[75,2647+11]..lib/action.ml[75,2647+13])
                                    Tpat_var "es/1501"
                                ]
                                None
                            expression (lib/action.ml[76,2664+6]..lib/action.ml[76,2664+35])
                              Texp_apply
                              expression (lib/action.ml[76,2664+6]..lib/action.ml[76,2664+20])
                                Texp_ident "Stdlib!.List.fold_left"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/action.ml[76,2664+21]..lib/action.ml[76,2664+27])
                                    Texp_ident "fv_aux/1495"
                                <arg>
                                  Nolabel
                                  expression (lib/action.ml[76,2664+28]..lib/action.ml[76,2664+32])
                                    Texp_ident "accu/1498"
                                <arg>
                                  Nolabel
                                  expression (lib/action.ml[76,2664+33]..lib/action.ml[76,2664+35])
                                    Texp_ident "es/1501"
                              ]
                          <case>
                            pattern (lib/action.ml[77,2700+4]..lib/action.ml[77,2700+16])
                              Tpat_value
                              pattern (lib/action.ml[77,2700+4]..lib/action.ml[77,2700+16])
                                Tpat_construct "EApp"
                                [
                                  pattern (lib/action.ml[77,2700+10]..lib/action.ml[77,2700+11])
                                    Tpat_var "e/1502"
                                  pattern (lib/action.ml[77,2700+13]..lib/action.ml[77,2700+15])
                                    Tpat_var "es/1503"
                                ]
                                None
                            expression (lib/action.ml[78,2720+6]..lib/action.ml[78,2720+42])
                              Texp_apply
                              expression (lib/action.ml[78,2720+6]..lib/action.ml[78,2720+20])
                                Texp_ident "Stdlib!.List.fold_left"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/action.ml[78,2720+21]..lib/action.ml[78,2720+27])
                                    Texp_ident "fv_aux/1495"
                                <arg>
                                  Nolabel
                                  expression (lib/action.ml[78,2720+28]..lib/action.ml[78,2720+32])
                                    Texp_ident "accu/1498"
                                <arg>
                                  Nolabel
                                  expression (lib/action.ml[78,2720+33]..lib/action.ml[78,2720+42])
                                    Texp_construct "::"
                                    [
                                      expression (lib/action.ml[78,2720+34]..lib/action.ml[78,2720+35])
                                        Texp_ident "e/1502"
                                      expression (lib/action.ml[78,2720+39]..lib/action.ml[78,2720+41])
                                        Texp_ident "es/1503"
                                    ]
                              ]
                          <case>
                            pattern (lib/action.ml[79,2763+4]..lib/action.ml[79,2763+5])
                              Tpat_value
                              pattern (lib/action.ml[79,2763+4]..lib/action.ml[79,2763+5])
                                Tpat_any
                            expression (lib/action.ml[80,2772+6]..lib/action.ml[80,2772+18])
                              Texp_assert                              expression (lib/action.ml[80,2772+13]..lib/action.ml[80,2772+18])
                                Texp_construct "false"
                                []
                        ]
                ]
          ]
    ]
  structure_item (lib/action.ml[86,2929+0]..lib/action.ml[96,3487+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[86,2929+4]..lib/action.ml[86,2929+11])
          Tpat_var "compose/1639"
        expression (lib/action.ml[86,2929+12]..lib/action.ml[96,3487+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/action.ml[86,2929+12]..lib/action.ml[86,2929+13])
                Tpat_var "x/1641"
              expression (lib/action.ml[86,2929+14]..lib/action.ml[96,3487+3]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/action.ml[86,2929+14]..lib/action.ml[86,2929+16])
                      Tpat_var "a1/1642"
                    expression (lib/action.ml[86,2929+17]..lib/action.ml[96,3487+3]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/action.ml[86,2929+17]..lib/action.ml[86,2929+19])
                            Tpat_var "a2/1643"
                          expression (lib/action.ml[91,3240+2]..lib/action.ml[96,3487+3])
                            Texp_record
                              fields =
                                [
                                  "expr"
                                    expression (lib/action.ml[92,3244+16]..lib/action.ml[92,3244+63])
                                      Texp_apply
                                      expression (lib/action.ml[92,3244+16]..lib/action.ml[92,3244+29])
                                        Texp_ident "Gbnf_parser!.CodeBits.blet"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/action.ml[92,3244+30]..lib/action.ml[92,3244+63])
                                            Texp_tuple
                                            [
                                              expression (lib/action.ml[92,3244+31]..lib/action.ml[92,3244+53])
                                                Texp_construct "::"
                                                [
                                                  expression (lib/action.ml[92,3244+33]..lib/action.ml[92,3244+51])
                                                    Texp_tuple
                                                    [
                                                      expression (lib/action.ml[92,3244+33]..lib/action.ml[92,3244+42])
                                                        Texp_construct "IL.PVar"
                                                        [
                                                          expression (lib/action.ml[92,3244+41]..lib/action.ml[92,3244+42])
                                                            Texp_ident "x/1641"
                                                        ]
                                                      expression (lib/action.ml[92,3244+44]..lib/action.ml[92,3244+51])
                                                        Texp_field
                                                        expression (lib/action.ml[92,3244+44]..lib/action.ml[92,3244+46])
                                                          Texp_ident "a1/1642"
                                                        "expr"
                                                    ]
                                                  expression (lib/action.ml[92,3244+52]..lib/action.ml[92,3244+53]) ghost
                                                    Texp_construct "[]"
                                                    []
                                                ]
                                              expression (lib/action.ml[92,3244+55]..lib/action.ml[92,3244+62])
                                                Texp_field
                                                expression (lib/action.ml[92,3244+55]..lib/action.ml[92,3244+57])
                                                  Texp_ident "a2/1643"
                                                "expr"
                                            ]
                                      ]
                                  "standard"
                                    expression (lib/action.ml[95,3443+16]..lib/action.ml[95,3443+42])
                                      Texp_apply
                                      expression (lib/action.ml[95,3443+28]..lib/action.ml[95,3443+30])
                                        Texp_ident "Stdlib!.&&"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/action.ml[95,3443+16]..lib/action.ml[95,3443+27])
                                            Texp_field
                                            expression (lib/action.ml[95,3443+16]..lib/action.ml[95,3443+18])
                                              Texp_ident "a1/1642"
                                            "standard"
                                        <arg>
                                          Nolabel
                                          expression (lib/action.ml[95,3443+31]..lib/action.ml[95,3443+42])
                                            Texp_field
                                            expression (lib/action.ml[95,3443+31]..lib/action.ml[95,3443+33])
                                              Texp_ident "a2/1643"
                                            "standard"
                                      ]
                                  "semvars"
                                    expression (lib/action.ml[93,3309+16]..lib/action.ml[93,3309+74])
                                      Texp_apply
                                      expression (lib/action.ml[93,3309+16]..lib/action.ml[93,3309+31])
                                        Texp_ident "Gbnf_parser!.StringSet.union"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/action.ml[93,3309+32]..lib/action.ml[93,3309+42])
                                            Texp_field
                                            expression (lib/action.ml[93,3309+32]..lib/action.ml[93,3309+34])
                                              Texp_ident "a1/1642"
                                            "semvars"
                                        <arg>
                                          Nolabel
                                          expression (lib/action.ml[93,3309+43]..lib/action.ml[93,3309+74])
                                            Texp_apply
                                            expression (lib/action.ml[93,3309+44]..lib/action.ml[93,3309+60])
                                              Texp_ident "Gbnf_parser!.StringSet.remove"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/action.ml[93,3309+61]..lib/action.ml[93,3309+62])
                                                  Texp_ident "x/1641"
                                              <arg>
                                                Nolabel
                                                expression (lib/action.ml[93,3309+63]..lib/action.ml[93,3309+73])
                                                  Texp_field
                                                  expression (lib/action.ml[93,3309+63]..lib/action.ml[93,3309+65])
                                                    Texp_ident "a2/1643"
                                                  "semvars"
                                            ]
                                      ]
                                  "keywords"
                                    expression (lib/action.ml[94,3385+16]..lib/action.ml[94,3385+56])
                                      Texp_apply
                                      expression (lib/action.ml[94,3385+16]..lib/action.ml[94,3385+32])
                                        Texp_ident "Gbnf_parser!.Keyword.KeywordSet.union"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/action.ml[94,3385+33]..lib/action.ml[94,3385+44])
                                            Texp_field
                                            expression (lib/action.ml[94,3385+33]..lib/action.ml[94,3385+35])
                                              Texp_ident "a1/1642"
                                            "keywords"
                                        <arg>
                                          Nolabel
                                          expression (lib/action.ml[94,3385+45]..lib/action.ml[94,3385+56])
                                            Texp_field
                                            expression (lib/action.ml[94,3385+45]..lib/action.ml[94,3385+47])
                                              Texp_ident "a2/1643"
                                            "keywords"
                                      ]
                                ]
                              representation =
                                Record_regular
                              extended_expression =
                                None
                      ]
                ]
          ]
    ]
  structure_item (lib/action.ml[100,3526+0]..lib/action.ml[124,4082+37])
    Tstr_value Rec
    [
      <def>
        pattern (lib/action.ml[100,3526+8]..lib/action.ml[100,3526+12])
          Tpat_var "bind/1694"
        expression (lib/action.ml[100,3526+13]..lib/action.ml[106,3732+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/action.ml[100,3526+13]..lib/action.ml[100,3526+14])
                Tpat_var "p/1697"
              expression (lib/action.ml[100,3526+15]..lib/action.ml[106,3732+3]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/action.ml[100,3526+15]..lib/action.ml[100,3526+16])
                      Tpat_var "x/1698"
                    expression (lib/action.ml[100,3526+17]..lib/action.ml[106,3732+3]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/action.ml[100,3526+17]..lib/action.ml[100,3526+18])
                            Tpat_var "a/1699"
                          expression (lib/action.ml[101,3547+2]..lib/action.ml[106,3732+3])
                            Texp_record
                              fields =
                                [
                                  "expr"
                                    expression (lib/action.ml[102,3551+16]..lib/action.ml[102,3551+56])
                                      Texp_apply
                                      expression (lib/action.ml[102,3551+16]..lib/action.ml[102,3551+29])
                                        Texp_ident "Gbnf_parser!.CodeBits.blet"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/action.ml[102,3551+30]..lib/action.ml[102,3551+56])
                                            Texp_tuple
                                            [
                                              expression (lib/action.ml[102,3551+31]..lib/action.ml[102,3551+47])
                                                Texp_construct "::"
                                                [
                                                  expression (lib/action.ml[102,3551+33]..lib/action.ml[102,3551+45])
                                                    Texp_tuple
                                                    [
                                                      expression (lib/action.ml[102,3551+33]..lib/action.ml[102,3551+34])
                                                        Texp_ident "p/1697"
                                                      expression (lib/action.ml[102,3551+36]..lib/action.ml[102,3551+45])
                                                        Texp_construct "IL.EVar"
                                                        [
                                                          expression (lib/action.ml[102,3551+44]..lib/action.ml[102,3551+45])
                                                            Texp_ident "x/1698"
                                                        ]
                                                    ]
                                                  expression (lib/action.ml[102,3551+46]..lib/action.ml[102,3551+47]) ghost
                                                    Texp_construct "[]"
                                                    []
                                                ]
                                              expression (lib/action.ml[102,3551+49]..lib/action.ml[102,3551+55])
                                                Texp_field
                                                expression (lib/action.ml[102,3551+49]..lib/action.ml[102,3551+50])
                                                  Texp_ident "a/1699"
                                                "expr"
                                            ]
                                      ]
                                  "standard"
                                    expression (lib/action.ml[105,3704+16]..lib/action.ml[105,3704+26])
                                      Texp_field
                                      expression (lib/action.ml[105,3704+16]..lib/action.ml[105,3704+17])
                                        Texp_ident "a/1699"
                                      "standard"
                                  "semvars"
                                    expression (lib/action.ml[103,3609+16]..lib/action.ml[103,3609+65])
                                      Texp_apply
                                      expression (lib/action.ml[103,3609+16]..lib/action.ml[103,3609+29])
                                        Texp_ident "Gbnf_parser!.StringSet.add"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/action.ml[103,3609+30]..lib/action.ml[103,3609+31])
                                            Texp_ident "x/1698"
                                        <arg>
                                          Nolabel
                                          expression (lib/action.ml[103,3609+32]..lib/action.ml[103,3609+65])
                                            Texp_apply
                                            expression (lib/action.ml[103,3609+33]..lib/action.ml[103,3609+47])
                                              Texp_ident "Gbnf_parser!.StringSet.diff"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/action.ml[103,3609+48]..lib/action.ml[103,3609+57])
                                                  Texp_field
                                                  expression (lib/action.ml[103,3609+48]..lib/action.ml[103,3609+49])
                                                    Texp_ident "a/1699"
                                                  "semvars"
                                              <arg>
                                                Nolabel
                                                expression (lib/action.ml[103,3609+58]..lib/action.ml[103,3609+64])
                                                  Texp_apply
                                                  expression (lib/action.ml[103,3609+59]..lib/action.ml[103,3609+61])
                                                    Texp_ident "bv/1695"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/action.ml[103,3609+62]..lib/action.ml[103,3609+63])
                                                        Texp_ident "p/1697"
                                                  ]
                                            ]
                                      ]
                                  "keywords"
                                    expression (lib/action.ml[104,3676+16]..lib/action.ml[104,3676+26])
                                      Texp_field
                                      expression (lib/action.ml[104,3676+16]..lib/action.ml[104,3676+17])
                                        Texp_ident "a/1699"
                                      "keywords"
                                ]
                              representation =
                                Record_regular
                              extended_expression =
                                None
                      ]
                ]
          ]
      <def>
        pattern (lib/action.ml[111,3863+4]..lib/action.ml[111,3863+6])
          Tpat_var "bv/1695"
        expression (lib/action.ml[111,3863+7]..lib/action.ml[112,3874+26]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/action.ml[111,3863+7]..lib/action.ml[111,3863+8])
                Tpat_var "p/1700"
              expression (lib/action.ml[112,3874+2]..lib/action.ml[112,3874+26])
                Texp_apply
                expression (lib/action.ml[112,3874+2]..lib/action.ml[112,3874+8])
                  Texp_ident "bv_aux/1696"
                [
                  <arg>
                    Nolabel
                    expression (lib/action.ml[112,3874+9]..lib/action.ml[112,3874+24])
                      Texp_ident "Gbnf_parser!.StringSet.empty"
                  <arg>
                    Nolabel
                    expression (lib/action.ml[112,3874+25]..lib/action.ml[112,3874+26])
                      Texp_ident "p/1700"
                ]
          ]
      <def>
        pattern (lib/action.ml[114,3902+4]..lib/action.ml[114,3902+10])
          Tpat_var "bv_aux/1696"
        expression (lib/action.ml[114,3902+11]..lib/action.ml[124,4082+37]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/action.ml[114,3902+11]..lib/action.ml[114,3902+15])
                Tpat_var "accu/1701"
              expression (lib/action.ml[114,3902+16]..lib/action.ml[124,4082+37]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/action.ml[114,3902+16]..lib/action.ml[114,3902+17])
                      Tpat_var "p/1702"
                    expression (lib/action.ml[115,3922+2]..lib/action.ml[124,4082+37])
                      Texp_open Fresh
                      module_expr (lib/action.ml[115,3922+2]..lib/action.ml[115,3922+4])
                        Tmod_ident "Gbnf_parser!.IL"
                      expression (lib/action.ml[115,3922+6]..lib/action.ml[124,4082+18])
                        Texp_match
                        expression (lib/action.ml[115,3922+12]..lib/action.ml[115,3922+13])
                          Texp_ident "p/1702"
                        [
                          <case>
                            pattern (lib/action.ml[116,3941+4]..lib/action.ml[117,3955+9])
                              Tpat_or
                              pattern (lib/action.ml[116,3941+4]..lib/action.ml[116,3941+13])
                                Tpat_value
                                pattern (lib/action.ml[116,3941+4]..lib/action.ml[116,3941+13])
                                  Tpat_construct "PWildcard"
                                  []
                                  None
                              pattern (lib/action.ml[117,3955+4]..lib/action.ml[117,3955+9])
                                Tpat_value
                                pattern (lib/action.ml[117,3955+4]..lib/action.ml[117,3955+9])
                                  Tpat_construct "PUnit"
                                  []
                                  None
                            expression (lib/action.ml[118,3968+6]..lib/action.ml[118,3968+10])
                              Texp_ident "accu/1701"
                          <case>
                            pattern (lib/action.ml[119,3979+4]..lib/action.ml[119,3979+10])
                              Tpat_value
                              pattern (lib/action.ml[119,3979+4]..lib/action.ml[119,3979+10])
                                Tpat_construct "PVar"
                                [
                                  pattern (lib/action.ml[119,3979+9]..lib/action.ml[119,3979+10])
                                    Tpat_var "x/1703"
                                ]
                                None
                            expression (lib/action.ml[120,3993+6]..lib/action.ml[120,3993+26])
                              Texp_apply
                              expression (lib/action.ml[120,3993+6]..lib/action.ml[120,3993+19])
                                Texp_ident "Gbnf_parser!.StringSet.add"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/action.ml[120,3993+20]..lib/action.ml[120,3993+21])
                                    Texp_ident "x/1703"
                                <arg>
                                  Nolabel
                                  expression (lib/action.ml[120,3993+22]..lib/action.ml[120,3993+26])
                                    Texp_ident "accu/1701"
                              ]
                          <case>
                            pattern (lib/action.ml[121,4020+4]..lib/action.ml[121,4020+13])
                              Tpat_value
                              pattern (lib/action.ml[121,4020+4]..lib/action.ml[121,4020+13])
                                Tpat_construct "PTuple"
                                [
                                  pattern (lib/action.ml[121,4020+11]..lib/action.ml[121,4020+13])
                                    Tpat_var "ps/1704"
                                ]
                                None
                            expression (lib/action.ml[122,4037+6]..lib/action.ml[122,4037+35])
                              Texp_apply
                              expression (lib/action.ml[122,4037+6]..lib/action.ml[122,4037+20])
                                Texp_ident "Stdlib!.List.fold_left"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/action.ml[122,4037+21]..lib/action.ml[122,4037+27])
                                    Texp_ident "bv_aux/1696"
                                <arg>
                                  Nolabel
                                  expression (lib/action.ml[122,4037+28]..lib/action.ml[122,4037+32])
                                    Texp_ident "accu/1701"
                                <arg>
                                  Nolabel
                                  expression (lib/action.ml[122,4037+33]..lib/action.ml[122,4037+35])
                                    Texp_ident "ps/1704"
                              ]
                          <case>
                            pattern (lib/action.ml[123,4073+4]..lib/action.ml[123,4073+5])
                              Tpat_value
                              pattern (lib/action.ml[123,4073+4]..lib/action.ml[123,4073+5])
                                Tpat_any
                            expression (lib/action.ml[124,4082+6]..lib/action.ml[124,4082+18])
                              Texp_assert                              expression (lib/action.ml[124,4082+13]..lib/action.ml[124,4082+18])
                                Texp_construct "false"
                                []
                        ]
                ]
          ]
    ]
  structure_item (lib/action.ml[130,4221+0]..lib/action.ml[131,4245+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[130,4221+4]..lib/action.ml[130,4221+14])
          Tpat_var "to_il_expr/1799"
        expression (lib/action.ml[130,4221+15]..lib/action.ml[131,4245+13]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/action.ml[130,4221+15]..lib/action.ml[130,4221+21])
                Tpat_var "action/1801"
              expression (lib/action.ml[131,4245+2]..lib/action.ml[131,4245+13])
                Texp_field
                expression (lib/action.ml[131,4245+2]..lib/action.ml[131,4245+8])
                  Texp_ident "action/1801"
                "expr"
          ]
    ]
  structure_item (lib/action.ml[133,4260+0]..lib/action.ml[134,4285+17])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[133,4260+4]..lib/action.ml[133,4260+15])
          Tpat_var "is_standard/1802"
        expression (lib/action.ml[133,4260+16]..lib/action.ml[134,4285+17]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/action.ml[133,4260+16]..lib/action.ml[133,4260+22])
                Tpat_var "action/1804"
              expression (lib/action.ml[134,4285+2]..lib/action.ml[134,4285+17])
                Texp_field
                expression (lib/action.ml[134,4285+2]..lib/action.ml[134,4285+8])
                  Texp_ident "action/1804"
                "standard"
          ]
    ]
  structure_item (lib/action.ml[136,4304+0]..lib/action.ml[137,4325+16])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[136,4304+4]..lib/action.ml[136,4304+11])
          Tpat_var "semvars/1805"
        expression (lib/action.ml[136,4304+12]..lib/action.ml[137,4325+16]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/action.ml[136,4304+12]..lib/action.ml[136,4304+18])
                Tpat_var "action/1807"
              expression (lib/action.ml[137,4325+2]..lib/action.ml[137,4325+16])
                Texp_field
                expression (lib/action.ml[137,4325+2]..lib/action.ml[137,4325+8])
                  Texp_ident "action/1807"
                "semvars"
          ]
    ]
  structure_item (lib/action.ml[139,4343+0]..lib/action.ml[140,4365+17])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[139,4343+4]..lib/action.ml[139,4343+12])
          Tpat_var "keywords/1808"
        expression (lib/action.ml[139,4343+13]..lib/action.ml[140,4365+17]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/action.ml[139,4343+13]..lib/action.ml[139,4343+19])
                Tpat_var "action/1810"
              expression (lib/action.ml[140,4365+2]..lib/action.ml[140,4365+17])
                Texp_field
                expression (lib/action.ml[140,4365+2]..lib/action.ml[140,4365+8])
                  Texp_ident "action/1810"
                "keywords"
          ]
    ]
  structure_item (lib/action.ml[142,4384+0]..lib/action.ml[143,4413+44])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[142,4384+4]..lib/action.ml[142,4384+19])
          Tpat_var "has_syntaxerror/1811"
        expression (lib/action.ml[142,4384+20]..lib/action.ml[143,4413+44]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/action.ml[142,4384+20]..lib/action.ml[142,4384+26])
                Tpat_var "action/1813"
              expression (lib/action.ml[143,4413+2]..lib/action.ml[143,4413+44])
                Texp_apply
                expression (lib/action.ml[143,4413+2]..lib/action.ml[143,4413+16])
                  Texp_ident "Gbnf_parser!.Keyword.KeywordSet.mem"
                [
                  <arg>
                    Nolabel
                    expression (lib/action.ml[143,4413+17]..lib/action.ml[143,4413+28])
                      Texp_construct "SyntaxError"
                      []
                  <arg>
                    Nolabel
                    expression (lib/action.ml[143,4413+29]..lib/action.ml[143,4413+44])
                      Texp_field
                      expression (lib/action.ml[143,4413+29]..lib/action.ml[143,4413+35])
                        Texp_ident "action/1813"
                      "keywords"
                ]
          ]
    ]
  structure_item (lib/action.ml[145,4459+0]..lib/action.ml[146,4486+78])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[145,4459+4]..lib/action.ml[145,4459+17])
          Tpat_var "has_beforeend/1814"
        expression (lib/action.ml[145,4459+18]..lib/action.ml[146,4486+78]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/action.ml[145,4459+18]..lib/action.ml[145,4459+24])
                Tpat_var "action/1816"
              expression (lib/action.ml[146,4486+2]..lib/action.ml[146,4486+78])
                Texp_apply
                expression (lib/action.ml[146,4486+2]..lib/action.ml[146,4486+16])
                  Texp_ident "Gbnf_parser!.Keyword.KeywordSet.mem"
                [
                  <arg>
                    Nolabel
                    expression (lib/action.ml[146,4486+17]..lib/action.ml[146,4486+62])
                      Texp_construct "Position"
                      [
                        expression (lib/action.ml[146,4486+28]..lib/action.ml[146,4486+34])
                          Texp_construct "Before"
                          []
                        expression (lib/action.ml[146,4486+36]..lib/action.ml[146,4486+44])
                          Texp_construct "WhereEnd"
                          []
                        expression (lib/action.ml[146,4486+46]..lib/action.ml[146,4486+60])
                          Texp_construct "FlavorPosition"
                          []
                      ]
                  <arg>
                    Nolabel
                    expression (lib/action.ml[146,4486+63]..lib/action.ml[146,4486+78])
                      Texp_field
                      expression (lib/action.ml[146,4486+63]..lib/action.ml[146,4486+69])
                        Texp_ident "action/1816"
                      "keywords"
                ]
          ]
    ]
  structure_item (lib/action.ml[148,4566+0]..lib/action.ml[156,4780+37])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[148,4566+4]..lib/action.ml[148,4566+11])
          Tpat_var "posvars/1817"
        expression (lib/action.ml[148,4566+12]..lib/action.ml[156,4780+37]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/action.ml[148,4566+12]..lib/action.ml[148,4566+18])
                Tpat_var "action/1819"
              expression (lib/action.ml[149,4587+2]..lib/action.ml[156,4780+37])
                Texp_apply
                expression (lib/action.ml[149,4587+2]..lib/action.ml[149,4587+17])
                  Texp_ident "Gbnf_parser!.Keyword.KeywordSet.fold"
                [
                  <arg>
                    Nolabel
                    expression (lib/action.ml[149,4587+18]..lib/action.ml[156,4780+3])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/action.ml[149,4587+23]..lib/action.ml[149,4587+30])
                            Tpat_var "keyword/1820"
                          expression (lib/action.ml[149,4587+31]..lib/action.ml[155,4751+28]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (lib/action.ml[149,4587+31]..lib/action.ml[149,4587+35])
                                  Tpat_var "accu/1821"
                                expression (lib/action.ml[150,4626+4]..lib/action.ml[155,4751+28])
                                  Texp_match
                                  expression (lib/action.ml[150,4626+10]..lib/action.ml[150,4626+17])
                                    Texp_ident "keyword/1820"
                                  [
                                    <case>
                                      pattern (lib/action.ml[151,4649+6]..lib/action.ml[151,4649+17])
                                        Tpat_value
                                        pattern (lib/action.ml[151,4649+6]..lib/action.ml[151,4649+17])
                                          Tpat_construct "SyntaxError"
                                          []
                                          None
                                      expression (lib/action.ml[152,4670+8]..lib/action.ml[152,4670+12])
                                        Texp_ident "accu/1821"
                                    <case>
                                      pattern (lib/action.ml[153,4683+6]..lib/action.ml[153,4683+24])
                                        Tpat_value
                                        pattern (lib/action.ml[153,4683+6]..lib/action.ml[153,4683+24])
                                          Tpat_construct "Position"
                                          [
                                            pattern (lib/action.ml[153,4683+16]..lib/action.ml[153,4683+17])
                                              Tpat_var "s/1822"
                                            pattern (lib/action.ml[153,4683+19]..lib/action.ml[153,4683+20])
                                              Tpat_var "w/1823"
                                            pattern (lib/action.ml[153,4683+22]..lib/action.ml[153,4683+23])
                                              Tpat_var "f/1824"
                                          ]
                                          None
                                      expression (lib/action.ml[154,4711+8]..lib/action.ml[155,4751+28])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/action.ml[154,4711+12]..lib/action.ml[154,4711+13])
                                              Tpat_var "x/1825"
                                            expression (lib/action.ml[154,4711+16]..lib/action.ml[154,4711+36])
                                              Texp_apply
                                              expression (lib/action.ml[154,4711+16]..lib/action.ml[154,4711+30])
                                                Texp_ident "Gbnf_parser!.Keyword.posvar"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/action.ml[154,4711+31]..lib/action.ml[154,4711+32])
                                                    Texp_ident "s/1822"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/action.ml[154,4711+33]..lib/action.ml[154,4711+34])
                                                    Texp_ident "w/1823"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/action.ml[154,4711+35]..lib/action.ml[154,4711+36])
                                                    Texp_ident "f/1824"
                                              ]
                                        ]
                                        expression (lib/action.ml[155,4751+8]..lib/action.ml[155,4751+28])
                                          Texp_apply
                                          expression (lib/action.ml[155,4751+8]..lib/action.ml[155,4751+21])
                                            Texp_ident "Gbnf_parser!.StringSet.add"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/action.ml[155,4751+22]..lib/action.ml[155,4751+23])
                                                Texp_ident "x/1825"
                                            <arg>
                                              Nolabel
                                              expression (lib/action.ml[155,4751+24]..lib/action.ml[155,4751+28])
                                                Texp_ident "accu/1821"
                                          ]
                                  ]
                            ]
                      ]
                  <arg>
                    Nolabel
                    expression (lib/action.ml[156,4780+4]..lib/action.ml[156,4780+21])
                      Texp_apply
                      expression (lib/action.ml[156,4780+5]..lib/action.ml[156,4780+13])
                        Texp_ident "keywords/1808"
                      [
                        <arg>
                          Nolabel
                          expression (lib/action.ml[156,4780+14]..lib/action.ml[156,4780+20])
                            Texp_ident "action/1819"
                      ]
                  <arg>
                    Nolabel
                    expression (lib/action.ml[156,4780+22]..lib/action.ml[156,4780+37])
                      Texp_ident "Gbnf_parser!.StringSet.empty"
                ]
          ]
    ]
  structure_item (lib/action.ml[158,4819+0]..lib/action.ml[159,4837+51])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[158,4819+4]..lib/action.ml[158,4819+8])
          Tpat_var "vars/1826"
        expression (lib/action.ml[158,4819+9]..lib/action.ml[159,4837+51]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/action.ml[158,4819+9]..lib/action.ml[158,4819+15])
                Tpat_var "action/1828"
              expression (lib/action.ml[159,4837+2]..lib/action.ml[159,4837+51])
                Texp_apply
                expression (lib/action.ml[159,4837+2]..lib/action.ml[159,4837+17])
                  Texp_ident "Gbnf_parser!.StringSet.union"
                [
                  <arg>
                    Nolabel
                    expression (lib/action.ml[159,4837+18]..lib/action.ml[159,4837+34])
                      Texp_apply
                      expression (lib/action.ml[159,4837+19]..lib/action.ml[159,4837+26])
                        Texp_ident "semvars/1805"
                      [
                        <arg>
                          Nolabel
                          expression (lib/action.ml[159,4837+27]..lib/action.ml[159,4837+33])
                            Texp_ident "action/1828"
                      ]
                  <arg>
                    Nolabel
                    expression (lib/action.ml[159,4837+35]..lib/action.ml[159,4837+51])
                      Texp_apply
                      expression (lib/action.ml[159,4837+36]..lib/action.ml[159,4837+43])
                        Texp_ident "posvars/1817"
                      [
                        <arg>
                          Nolabel
                          expression (lib/action.ml[159,4837+44]..lib/action.ml[159,4837+50])
                            Texp_ident "action/1828"
                      ]
                ]
          ]
    ]
  structure_item (lib/action.ml[165,5026+0]..lib/action.ml[173,5320+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[165,5026+4]..lib/action.ml[165,5026+10])
          Tpat_var "define/1829"
        expression (lib/action.ml[165,5026+11]..lib/action.ml[173,5320+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/action.ml[165,5026+11]..lib/action.ml[165,5026+18])
                Tpat_var "keyword/1831"
              expression (lib/action.ml[165,5026+19]..lib/action.ml[173,5320+3]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/action.ml[165,5026+19]..lib/action.ml[165,5026+27])
                      Tpat_var "keywords/1832"
                    expression (lib/action.ml[165,5026+28]..lib/action.ml[173,5320+3]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/action.ml[165,5026+28]..lib/action.ml[165,5026+29])
                            Tpat_var "f/1833"
                          expression (lib/action.ml[165,5026+30]..lib/action.ml[173,5320+3]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (lib/action.ml[165,5026+30]..lib/action.ml[165,5026+36])
                                  Tpat_var "action/1834"
                                expression (lib/action.ml[166,5065+2]..lib/action.ml[173,5320+3])
                                  Texp_sequence
                                  expression (lib/action.ml[166,5065+2]..lib/action.ml[166,5065+49])
                                    Texp_assert                                    expression (lib/action.ml[166,5065+9]..lib/action.ml[166,5065+49])
                                      Texp_apply
                                      expression (lib/action.ml[166,5065+10]..lib/action.ml[166,5065+24])
                                        Texp_ident "Gbnf_parser!.Keyword.KeywordSet.mem"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/action.ml[166,5065+25]..lib/action.ml[166,5065+32])
                                            Texp_ident "keyword/1831"
                                        <arg>
                                          Nolabel
                                          expression (lib/action.ml[166,5065+33]..lib/action.ml[166,5065+48])
                                            Texp_field
                                            expression (lib/action.ml[166,5065+33]..lib/action.ml[166,5065+39])
                                              Texp_ident "action/1834"
                                            "keywords"
                                      ]
                                  expression (lib/action.ml[167,5116+2]..lib/action.ml[173,5320+3])
                                    Texp_record
                                      fields =
                                        [
                                          "expr"
                                            expression (lib/action.ml[168,5120+16]..lib/action.ml[168,5120+29])
                                              Texp_apply
                                              expression (lib/action.ml[168,5120+16]..lib/action.ml[168,5120+17])
                                                Texp_ident "f/1833"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/action.ml[168,5120+18]..lib/action.ml[168,5120+29])
                                                    Texp_field
                                                    expression (lib/action.ml[168,5120+18]..lib/action.ml[168,5120+24])
                                                      Texp_ident "action/1834"
                                                    "expr"
                                              ]
                                          "standard"
                                            expression (lib/action.ml[169,5151+16]..lib/action.ml[169,5151+31])
                                              Texp_field
                                              expression (lib/action.ml[169,5151+16]..lib/action.ml[169,5151+22])
                                                Texp_ident "action/1834"
                                              "standard"
                                          "semvars"
                                            expression (lib/action.ml[170,5184+16]..lib/action.ml[170,5184+30])
                                              Texp_field
                                              expression (lib/action.ml[170,5184+16]..lib/action.ml[170,5184+22])
                                                Texp_ident "action/1834"
                                              "semvars"
                                          "keywords"
                                            expression (lib/action.ml[171,5216+16]..lib/action.ml[172,5249+70])
                                              Texp_apply
                                              expression (lib/action.ml[171,5216+16]..lib/action.ml[171,5216+32])
                                                Texp_ident "Gbnf_parser!.Keyword.KeywordSet.union"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/action.ml[172,5249+18]..lib/action.ml[172,5249+26])
                                                    Texp_ident "keywords/1832"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/action.ml[172,5249+27]..lib/action.ml[172,5249+70])
                                                    Texp_apply
                                                    expression (lib/action.ml[172,5249+28]..lib/action.ml[172,5249+45])
                                                      Texp_ident "Gbnf_parser!.Keyword.KeywordSet.remove"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/action.ml[172,5249+46]..lib/action.ml[172,5249+53])
                                                          Texp_ident "keyword/1831"
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/action.ml[172,5249+54]..lib/action.ml[172,5249+69])
                                                          Texp_field
                                                          expression (lib/action.ml[172,5249+54]..lib/action.ml[172,5249+60])
                                                            Texp_ident "action/1834"
                                                          "keywords"
                                                    ]
                                              ]
                                        ]
                                      representation =
                                        Record_regular
                                      extended_expression =
                                        None
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/action.ml[184,5798+0]..lib/action.ml[188,5887+3])
    Tstr_type Rec
    [
      type_declaration subst/1835 (lib/action.ml[184,5798+0]..lib/action.ml[188,5887+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/action.ml[186,5815+4]..lib/action.ml[186,5815+35])
                Immutable
                semvar/1836                core_type (lib/action.ml[186,5815+12]..lib/action.ml[186,5815+34])
                  Ttyp_poly
                  core_type (lib/action.ml[186,5815+12]..lib/action.ml[186,5815+34])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/action.ml[186,5815+13]..lib/action.ml[186,5815+28])
                        Ttyp_tuple
                        [
                          core_type (lib/action.ml[186,5815+13]..lib/action.ml[186,5815+19])
                            Ttyp_constr "string/15!"
                            []
                          core_type (lib/action.ml[186,5815+22]..lib/action.ml[186,5815+28])
                            Ttyp_constr "string/15!"
                            []
                        ]
                    ]
              (lib/action.ml[187,5851+4]..lib/action.ml[187,5851+35])
                Immutable
                posvar/1837                core_type (lib/action.ml[187,5851+12]..lib/action.ml[187,5851+34])
                  Ttyp_poly
                  core_type (lib/action.ml[187,5851+12]..lib/action.ml[187,5851+34])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/action.ml[187,5851+13]..lib/action.ml[187,5851+28])
                        Ttyp_tuple
                        [
                          core_type (lib/action.ml[187,5851+13]..lib/action.ml[187,5851+19])
                            Ttyp_constr "string/15!"
                            []
                          core_type (lib/action.ml[187,5851+22]..lib/action.ml[187,5851+28])
                            Ttyp_constr "string/15!"
                            []
                        ]
                    ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/action.ml[190,5892+0]..lib/action.ml[191,5904+30])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[190,5892+4]..lib/action.ml[190,5892+9])
          Tpat_var "empty/1838"
        expression (lib/action.ml[191,5904+2]..lib/action.ml[191,5904+30])
          Texp_record
            fields =
              [
                "semvar"
                  expression (lib/action.ml[191,5904+13]..lib/action.ml[191,5904+15])
                    Texp_construct "[]"
                    []
                "posvar"
                  expression (lib/action.ml[191,5904+26]..lib/action.ml[191,5904+28])
                    Texp_construct "[]"
                    []
              ]
            representation =
              Record_regular
            extended_expression =
              None
    ]
  structure_item (lib/action.ml[193,5936+0]..lib/action.ml[195,5997+39])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[193,5936+4]..lib/action.ml[193,5936+11])
          Tpat_var "extend1/1839"
        expression (lib/action.ml[193,5936+12]..lib/action.ml[195,5997+39]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/action.ml[193,5936+12]..lib/action.ml[193,5936+13])
                Tpat_var "x/1841"
              expression (lib/action.ml[193,5936+14]..lib/action.ml[195,5997+39]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/action.ml[193,5936+14]..lib/action.ml[193,5936+15])
                      Tpat_var "y/1842"
                    expression (lib/action.ml[193,5936+16]..lib/action.ml[195,5997+39]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/action.ml[193,5936+16]..lib/action.ml[193,5936+19])
                            Tpat_var "var/1843"
                          expression (lib/action.ml[194,5958+2]..lib/action.ml[195,5997+39])
                            Texp_sequence
                            expression (lib/action.ml[194,5958+2]..lib/action.ml[194,5958+37])
                              Texp_assert                              expression (lib/action.ml[194,5958+9]..lib/action.ml[194,5958+37])
                                Texp_apply
                                expression (lib/action.ml[194,5958+10]..lib/action.ml[194,5958+13])
                                  Texp_ident "Stdlib!.not"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/action.ml[194,5958+14]..lib/action.ml[194,5958+36])
                                      Texp_apply
                                      expression (lib/action.ml[194,5958+15]..lib/action.ml[194,5958+29])
                                        Texp_ident "Stdlib!.List.mem_assoc"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/action.ml[194,5958+30]..lib/action.ml[194,5958+31])
                                            Texp_ident "x/1841"
                                        <arg>
                                          Nolabel
                                          expression (lib/action.ml[194,5958+32]..lib/action.ml[194,5958+35])
                                            Texp_ident "var/1843"
                                      ]
                                ]
                            expression (lib/action.ml[195,5997+2]..lib/action.ml[195,5997+39])
                              Texp_ifthenelse
                              expression (lib/action.ml[195,5997+5]..lib/action.ml[195,5997+11])
                                Texp_apply
                                expression (lib/action.ml[195,5997+7]..lib/action.ml[195,5997+9])
                                  Texp_ident "Stdlib!.<>"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/action.ml[195,5997+5]..lib/action.ml[195,5997+6])
                                      Texp_ident "x/1841"
                                  <arg>
                                    Nolabel
                                    expression (lib/action.ml[195,5997+10]..lib/action.ml[195,5997+11])
                                      Texp_ident "y/1842"
                                ]
                              expression (lib/action.ml[195,5997+17]..lib/action.ml[195,5997+30])
                                Texp_construct "::"
                                [
                                  expression (lib/action.ml[195,5997+17]..lib/action.ml[195,5997+23])
                                    Texp_tuple
                                    [
                                      expression (lib/action.ml[195,5997+18]..lib/action.ml[195,5997+19])
                                        Texp_ident "x/1841"
                                      expression (lib/action.ml[195,5997+21]..lib/action.ml[195,5997+22])
                                        Texp_ident "y/1842"
                                    ]
                                  expression (lib/action.ml[195,5997+27]..lib/action.ml[195,5997+30])
                                    Texp_ident "var/1843"
                                ]
                              Some
                                expression (lib/action.ml[195,5997+36]..lib/action.ml[195,5997+39])
                                  Texp_ident "var/1843"
                      ]
                ]
          ]
    ]
  structure_item (lib/action.ml[197,6038+0]..lib/action.ml[198,6081+41])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[197,6038+4]..lib/action.ml[197,6038+17])
          Tpat_var "extend_semvar/1844"
        expression (lib/action.ml[197,6038+18]..lib/action.ml[198,6081+41]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/action.ml[197,6038+18]..lib/action.ml[197,6038+19])
                Tpat_var "x/1846"
              expression (lib/action.ml[197,6038+20]..lib/action.ml[198,6081+41]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/action.ml[197,6038+20]..lib/action.ml[197,6038+21])
                      Tpat_var "y/1847"
                    expression (lib/action.ml[197,6038+22]..lib/action.ml[198,6081+41]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/action.ml[197,6038+22]..lib/action.ml[197,6038+40])
                            Tpat_record
                            [
                              "semvar"
                                pattern (lib/action.ml[197,6038+24]..lib/action.ml[197,6038+30])
                                  Tpat_var "semvar/1848"
                              "posvar"
                                pattern (lib/action.ml[197,6038+32]..lib/action.ml[197,6038+38])
                                  Tpat_var "posvar/1849"
                            ]
                          expression (lib/action.ml[198,6081+2]..lib/action.ml[198,6081+41])
                            Texp_record
                              fields =
                                [
                                  "semvar"
                                    expression (lib/action.ml[198,6081+13]..lib/action.ml[198,6081+31])
                                      Texp_apply
                                      expression (lib/action.ml[198,6081+13]..lib/action.ml[198,6081+20])
                                        Texp_ident "extend1/1839"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/action.ml[198,6081+21]..lib/action.ml[198,6081+22])
                                            Texp_ident "x/1846"
                                        <arg>
                                          Nolabel
                                          expression (lib/action.ml[198,6081+23]..lib/action.ml[198,6081+24])
                                            Texp_ident "y/1847"
                                        <arg>
                                          Nolabel
                                          expression (lib/action.ml[198,6081+25]..lib/action.ml[198,6081+31])
                                            Texp_ident "semvar/1848"
                                      ]
                                  "posvar"
                                    expression (lib/action.ml[198,6081+33]..lib/action.ml[198,6081+39])
                                      Texp_ident "posvar/1849"
                                ]
                              representation =
                                Record_regular
                              extended_expression =
                                None
                      ]
                ]
          ]
    ]
  structure_item (lib/action.ml[200,6124+0]..lib/action.ml[201,6167+41])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[200,6124+4]..lib/action.ml[200,6124+17])
          Tpat_var "extend_posvar/1851"
        expression (lib/action.ml[200,6124+18]..lib/action.ml[201,6167+41]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/action.ml[200,6124+18]..lib/action.ml[200,6124+19])
                Tpat_var "x/1853"
              expression (lib/action.ml[200,6124+20]..lib/action.ml[201,6167+41]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/action.ml[200,6124+20]..lib/action.ml[200,6124+21])
                      Tpat_var "y/1854"
                    expression (lib/action.ml[200,6124+22]..lib/action.ml[201,6167+41]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/action.ml[200,6124+22]..lib/action.ml[200,6124+40])
                            Tpat_record
                            [
                              "semvar"
                                pattern (lib/action.ml[200,6124+24]..lib/action.ml[200,6124+30])
                                  Tpat_var "semvar/1855"
                              "posvar"
                                pattern (lib/action.ml[200,6124+32]..lib/action.ml[200,6124+38])
                                  Tpat_var "posvar/1856"
                            ]
                          expression (lib/action.ml[201,6167+2]..lib/action.ml[201,6167+41])
                            Texp_record
                              fields =
                                [
                                  "semvar"
                                    expression (lib/action.ml[201,6167+4]..lib/action.ml[201,6167+10])
                                      Texp_ident "semvar/1855"
                                  "posvar"
                                    expression (lib/action.ml[201,6167+21]..lib/action.ml[201,6167+39])
                                      Texp_apply
                                      expression (lib/action.ml[201,6167+21]..lib/action.ml[201,6167+28])
                                        Texp_ident "extend1/1839"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/action.ml[201,6167+29]..lib/action.ml[201,6167+30])
                                            Texp_ident "x/1853"
                                        <arg>
                                          Nolabel
                                          expression (lib/action.ml[201,6167+31]..lib/action.ml[201,6167+32])
                                            Texp_ident "y/1854"
                                        <arg>
                                          Nolabel
                                          expression (lib/action.ml[201,6167+33]..lib/action.ml[201,6167+39])
                                            Texp_ident "posvar/1856"
                                      ]
                                ]
                              representation =
                                Record_regular
                              extended_expression =
                                None
                      ]
                ]
          ]
    ]
  structure_item (lib/action.ml[203,6210+0]..lib/action.ml[203,6210+26])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[203,6210+4]..lib/action.ml[203,6210+10])
          Tpat_var "extend/1858"
        expression (lib/action.ml[203,6210+13]..lib/action.ml[203,6210+26])
          Texp_ident "extend_semvar/1844"
    ]
  structure_item (lib/action.ml[205,6238+0]..lib/action.ml[206,6257+42])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[205,6238+4]..lib/action.ml[205,6238+10])
          Tpat_var "apply1/1859"
        expression (lib/action.ml[205,6238+11]..lib/action.ml[206,6257+42]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/action.ml[205,6238+11]..lib/action.ml[205,6238+14])
                Tpat_var "var/1861"
              expression (lib/action.ml[205,6238+15]..lib/action.ml[206,6257+42]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/action.ml[205,6238+15]..lib/action.ml[205,6238+16])
                      Tpat_var "x/1862"
                    expression (lib/action.ml[206,6257+2]..lib/action.ml[206,6257+42])
                      Texp_try
                      expression (lib/action.ml[206,6257+6]..lib/action.ml[206,6257+22])
                        Texp_apply
                        expression (lib/action.ml[206,6257+6]..lib/action.ml[206,6257+16])
                          Texp_ident "Stdlib!.List.assoc"
                        [
                          <arg>
                            Nolabel
                            expression (lib/action.ml[206,6257+17]..lib/action.ml[206,6257+18])
                              Texp_ident "x/1862"
                          <arg>
                            Nolabel
                            expression (lib/action.ml[206,6257+19]..lib/action.ml[206,6257+22])
                              Texp_ident "var/1861"
                        ]
                      [
                        <case>
                          pattern (lib/action.ml[206,6257+28]..lib/action.ml[206,6257+37])
                            Tpat_construct "Not_found"
                            []
                            None
                          expression (lib/action.ml[206,6257+41]..lib/action.ml[206,6257+42])
                            Texp_ident "x/1862"
                      ]
                ]
          ]
    ]
  structure_item (lib/action.ml[208,6301+0]..lib/action.ml[209,6326+21])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[208,6301+4]..lib/action.ml[208,6301+16])
          Tpat_var "apply_semvar/1863"
        expression (lib/action.ml[208,6301+17]..lib/action.ml[209,6326+21]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/action.ml[208,6301+17]..lib/action.ml[208,6301+20])
                Tpat_var "phi/1865"
              expression (lib/action.ml[208,6301+21]..lib/action.ml[209,6326+21]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/action.ml[208,6301+21]..lib/action.ml[208,6301+22])
                      Tpat_var "x/1866"
                    expression (lib/action.ml[209,6326+2]..lib/action.ml[209,6326+21])
                      Texp_apply
                      expression (lib/action.ml[209,6326+2]..lib/action.ml[209,6326+8])
                        Texp_ident "apply1/1859"
                      [
                        <arg>
                          Nolabel
                          expression (lib/action.ml[209,6326+9]..lib/action.ml[209,6326+19])
                            Texp_field
                            expression (lib/action.ml[209,6326+9]..lib/action.ml[209,6326+12])
                              Texp_ident "phi/1865"
                            "semvar"
                        <arg>
                          Nolabel
                          expression (lib/action.ml[209,6326+20]..lib/action.ml[209,6326+21])
                            Texp_ident "x/1866"
                      ]
                ]
          ]
    ]
  structure_item (lib/action.ml[211,6349+0]..lib/action.ml[217,6459+37])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[211,6349+4]..lib/action.ml[211,6349+17])
          Tpat_var "apply_subject/1867"
        expression (lib/action.ml[211,6349+18]..lib/action.ml[217,6459+37]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/action.ml[211,6349+18]..lib/action.ml[211,6349+21])
                Tpat_var "phi/1869"
              expression (lib/action.ml[211,6349+22]..lib/action.ml[217,6459+37]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/action.ml[211,6349+22]..lib/action.ml[211,6349+29])
                      Tpat_var "subject/1870"
                    expression (lib/action.ml[212,6381+2]..lib/action.ml[217,6459+37])
                      Texp_match
                      expression (lib/action.ml[212,6381+8]..lib/action.ml[212,6381+15])
                        Texp_ident "subject/1870"
                      [
                        <case>
                          pattern (lib/action.ml[213,6402+4]..lib/action.ml[214,6413+8])
                            Tpat_or
                            pattern (lib/action.ml[213,6402+4]..lib/action.ml[213,6402+10])
                              Tpat_value
                              pattern (lib/action.ml[213,6402+4]..lib/action.ml[213,6402+10])
                                Tpat_construct "Before"
                                []
                                None
                            pattern (lib/action.ml[214,6413+4]..lib/action.ml[214,6413+8])
                              Tpat_value
                              pattern (lib/action.ml[214,6413+4]..lib/action.ml[214,6413+8])
                                Tpat_construct "Left"
                                []
                                None
                          expression (lib/action.ml[215,6425+6]..lib/action.ml[215,6425+13])
                            Texp_ident "subject/1870"
                        <case>
                          pattern (lib/action.ml[216,6439+4]..lib/action.ml[216,6439+16])
                            Tpat_value
                            pattern (lib/action.ml[216,6439+4]..lib/action.ml[216,6439+16])
                              Tpat_construct "RightNamed"
                              [
                                pattern (lib/action.ml[216,6439+15]..lib/action.ml[216,6439+16])
                                  Tpat_var "x/1871"
                              ]
                              None
                          expression (lib/action.ml[217,6459+6]..lib/action.ml[217,6459+37])
                            Texp_construct "RightNamed"
                            [
                              expression (lib/action.ml[217,6459+17]..lib/action.ml[217,6459+37])
                                Texp_apply
                                expression (lib/action.ml[217,6459+18]..lib/action.ml[217,6459+30])
                                  Texp_ident "apply_semvar/1863"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/action.ml[217,6459+31]..lib/action.ml[217,6459+34])
                                      Texp_ident "phi/1869"
                                  <arg>
                                    Nolabel
                                    expression (lib/action.ml[217,6459+35]..lib/action.ml[217,6459+36])
                                      Texp_ident "x/1871"
                                ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/action.ml[219,6498+0]..lib/action.ml[220,6517+25])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[219,6498+4]..lib/action.ml[219,6498+12])
          Tpat_var "bindings/1872"
        expression (lib/action.ml[219,6498+13]..lib/action.ml[220,6517+25]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/action.ml[219,6498+13]..lib/action.ml[219,6498+16])
                Tpat_var "phi/1874"
              expression (lib/action.ml[220,6517+2]..lib/action.ml[220,6517+25])
                Texp_apply
                expression (lib/action.ml[220,6517+13]..lib/action.ml[220,6517+14])
                  Texp_ident "Stdlib!.@"
                [
                  <arg>
                    Nolabel
                    expression (lib/action.ml[220,6517+2]..lib/action.ml[220,6517+12])
                      Texp_field
                      expression (lib/action.ml[220,6517+2]..lib/action.ml[220,6517+5])
                        Texp_ident "phi/1874"
                      "posvar"
                  <arg>
                    Nolabel
                    expression (lib/action.ml[220,6517+15]..lib/action.ml[220,6517+25])
                      Texp_field
                      expression (lib/action.ml[220,6517+15]..lib/action.ml[220,6517+18])
                        Texp_ident "phi/1874"
                      "semvar"
                ]
          ]
    ]
  structure_item (lib/action.ml[222,6544+0]..lib/action.ml[223,6567+53])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[222,6544+4]..lib/action.ml[222,6544+13])
          Tpat_var "restrict1/1875"
        expression (lib/action.ml[222,6544+14]..lib/action.ml[223,6567+53]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/action.ml[222,6544+14]..lib/action.ml[222,6544+16])
                Tpat_var "xs/1877"
              expression (lib/action.ml[222,6544+17]..lib/action.ml[223,6567+53]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/action.ml[222,6544+17]..lib/action.ml[222,6544+20])
                      Tpat_var "var/1878"
                    expression (lib/action.ml[223,6567+2]..lib/action.ml[223,6567+53])
                      Texp_apply
                      expression (lib/action.ml[223,6567+2]..lib/action.ml[223,6567+13])
                        Texp_ident "Stdlib!.List.filter"
                      [
                        <arg>
                          Nolabel
                          expression (lib/action.ml[223,6567+14]..lib/action.ml[223,6567+49])
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (lib/action.ml[223,6567+19]..lib/action.ml[223,6567+26])
                                  Tpat_tuple
                                  [
                                    pattern (lib/action.ml[223,6567+20]..lib/action.ml[223,6567+21])
                                      Tpat_var "x/1879"
                                    pattern (lib/action.ml[223,6567+23]..lib/action.ml[223,6567+25])
                                      Tpat_var "_y/1880"
                                  ]
                                expression (lib/action.ml[223,6567+30]..lib/action.ml[223,6567+48])
                                  Texp_apply
                                  expression (lib/action.ml[223,6567+30]..lib/action.ml[223,6567+43])
                                    Texp_ident "Gbnf_parser!.StringSet.mem"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/action.ml[223,6567+44]..lib/action.ml[223,6567+45])
                                        Texp_ident "x/1879"
                                    <arg>
                                      Nolabel
                                      expression (lib/action.ml[223,6567+46]..lib/action.ml[223,6567+48])
                                        Texp_ident "xs/1877"
                                  ]
                            ]
                        <arg>
                          Nolabel
                          expression (lib/action.ml[223,6567+50]..lib/action.ml[223,6567+53])
                            Texp_ident "var/1878"
                      ]
                ]
          ]
    ]
  structure_item (lib/action.ml[225,6622+0]..lib/action.ml[226,6666+42])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[225,6622+4]..lib/action.ml[225,6622+19])
          Tpat_var "restrict_semvar/1882"
        expression (lib/action.ml[225,6622+20]..lib/action.ml[226,6666+42]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/action.ml[225,6622+20]..lib/action.ml[225,6622+22])
                Tpat_var "xs/1884"
              expression (lib/action.ml[225,6622+23]..lib/action.ml[226,6666+42]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/action.ml[225,6622+23]..lib/action.ml[225,6622+41])
                      Tpat_record
                      [
                        "semvar"
                          pattern (lib/action.ml[225,6622+25]..lib/action.ml[225,6622+31])
                            Tpat_var "semvar/1885"
                        "posvar"
                          pattern (lib/action.ml[225,6622+33]..lib/action.ml[225,6622+39])
                            Tpat_var "posvar/1886"
                      ]
                    expression (lib/action.ml[226,6666+2]..lib/action.ml[226,6666+42])
                      Texp_record
                        fields =
                          [
                            "semvar"
                              expression (lib/action.ml[226,6666+13]..lib/action.ml[226,6666+32])
                                Texp_apply
                                expression (lib/action.ml[226,6666+13]..lib/action.ml[226,6666+22])
                                  Texp_ident "restrict1/1875"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/action.ml[226,6666+23]..lib/action.ml[226,6666+25])
                                      Texp_ident "xs/1884"
                                  <arg>
                                    Nolabel
                                    expression (lib/action.ml[226,6666+26]..lib/action.ml[226,6666+32])
                                      Texp_ident "semvar/1885"
                                ]
                            "posvar"
                              expression (lib/action.ml[226,6666+34]..lib/action.ml[226,6666+40])
                                Texp_ident "posvar/1886"
                          ]
                        representation =
                          Record_regular
                        extended_expression =
                          None
                ]
          ]
    ]
  structure_item (lib/action.ml[236,7112+0]..lib/action.ml[253,7625+41])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[236,7112+4]..lib/action.ml[236,7112+18])
          Tpat_var "rename_keyword/1888"
        expression (lib/action.ml[236,7112+19]..lib/action.ml[253,7625+41]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/action.ml[236,7112+19]..lib/action.ml[236,7112+20])
                Tpat_var "f/1890"
              expression (lib/action.ml[236,7112+21]..lib/action.ml[253,7625+41]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/action.ml[236,7112+22]..lib/action.ml[236,7112+25])
                      extra
                        Tpat_extra_constraint
                        core_type (lib/action.ml[236,7112+28]..lib/action.ml[236,7112+37])
                          Ttyp_constr "Stdlib!.ref"
                          [
                            core_type (lib/action.ml[236,7112+28]..lib/action.ml[236,7112+33])
                              Ttyp_constr "subst/1835"
                              []
                          ]
                      Tpat_alias "phi/1891"
                      pattern (lib/action.ml[236,7112+22]..lib/action.ml[236,7112+25])
                        Tpat_any
                    expression (lib/action.ml[236,7112+39]..lib/action.ml[253,7625+41]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/action.ml[236,7112+39]..lib/action.ml[236,7112+46])
                            Tpat_var "keyword/1892"
                          expression (lib/action.ml[237,7171+2]..lib/action.ml[253,7625+41])
                            extra
                              Texp_constraint
                              core_type (lib/action.ml[236,7112+49]..lib/action.ml[236,7112+56])
                                Ttyp_constr "Gbnf_parser!.Keyword.keyword"
                                []
                            Texp_match
                            expression (lib/action.ml[237,7171+8]..lib/action.ml[237,7171+15])
                              Texp_ident "keyword/1892"
                            [
                              <case>
                                pattern (lib/action.ml[238,7192+4]..lib/action.ml[238,7192+15])
                                  Tpat_value
                                  pattern (lib/action.ml[238,7192+4]..lib/action.ml[238,7192+15])
                                    Tpat_construct "SyntaxError"
                                    []
                                    None
                                expression (lib/action.ml[239,7211+6]..lib/action.ml[239,7211+17])
                                  Texp_construct "SyntaxError"
                                  []
                              <case>
                                pattern (lib/action.ml[240,7229+4]..lib/action.ml[240,7229+37])
                                  Tpat_value
                                  pattern (lib/action.ml[240,7229+4]..lib/action.ml[240,7229+37])
                                    Tpat_construct "Position"
                                    [
                                      pattern (lib/action.ml[240,7229+14]..lib/action.ml[240,7229+21])
                                        Tpat_var "subject/1893"
                                      pattern (lib/action.ml[240,7229+23]..lib/action.ml[240,7229+28])
                                        Tpat_var "where/1894"
                                      pattern (lib/action.ml[240,7229+30]..lib/action.ml[240,7229+36])
                                        Tpat_var "flavor/1895"
                                    ]
                                    None
                                expression (lib/action.ml[241,7270+6]..lib/action.ml[253,7625+41])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/action.ml[241,7270+10]..lib/action.ml[241,7270+26])
                                        Tpat_tuple
                                        [
                                          pattern (lib/action.ml[241,7270+10]..lib/action.ml[241,7270+18])
                                            Tpat_var "subject'/1896"
                                          pattern (lib/action.ml[241,7270+20]..lib/action.ml[241,7270+26])
                                            Tpat_var "where'/1897"
                                        ]
                                      expression (lib/action.ml[242,7299+8]..lib/action.ml[246,7421+45])
                                        Texp_match
                                        expression (lib/action.ml[242,7299+14]..lib/action.ml[242,7299+32])
                                          Texp_apply
                                          expression (lib/action.ml[242,7299+14]..lib/action.ml[242,7299+15])
                                            Texp_ident "f/1890"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/action.ml[242,7299+16]..lib/action.ml[242,7299+32])
                                                Texp_tuple
                                                [
                                                  expression (lib/action.ml[242,7299+17]..lib/action.ml[242,7299+24])
                                                    Texp_ident "subject/1893"
                                                  expression (lib/action.ml[242,7299+26]..lib/action.ml[242,7299+31])
                                                    Texp_ident "where/1894"
                                                ]
                                          ]
                                        [
                                          <case>
                                            pattern (lib/action.ml[243,7337+10]..lib/action.ml[243,7337+33])
                                              Tpat_value
                                              pattern (lib/action.ml[243,7337+10]..lib/action.ml[243,7337+33])
                                                Tpat_construct "Some"
                                                [
                                                  pattern (lib/action.ml[243,7337+15]..lib/action.ml[243,7337+33])
                                                    Tpat_tuple
                                                    [
                                                      pattern (lib/action.ml[243,7337+16]..lib/action.ml[243,7337+24])
                                                        Tpat_var "subject'/1898"
                                                      pattern (lib/action.ml[243,7337+26]..lib/action.ml[243,7337+32])
                                                        Tpat_var "where'/1899"
                                                    ]
                                                ]
                                                None
                                            expression (lib/action.ml[244,7374+12]..lib/action.ml[244,7374+28])
                                              Texp_tuple
                                              [
                                                expression (lib/action.ml[244,7374+12]..lib/action.ml[244,7374+20])
                                                  Texp_ident "subject'/1898"
                                                expression (lib/action.ml[244,7374+22]..lib/action.ml[244,7374+28])
                                                  Texp_ident "where'/1899"
                                              ]
                                          <case>
                                            pattern (lib/action.ml[245,7403+10]..lib/action.ml[245,7403+14])
                                              Tpat_value
                                              pattern (lib/action.ml[245,7403+10]..lib/action.ml[245,7403+14])
                                                Tpat_construct "None"
                                                []
                                                None
                                            expression (lib/action.ml[246,7421+12]..lib/action.ml[246,7421+45])
                                              Texp_tuple
                                              [
                                                expression (lib/action.ml[246,7421+12]..lib/action.ml[246,7421+38])
                                                  Texp_apply
                                                  expression (lib/action.ml[246,7421+12]..lib/action.ml[246,7421+25])
                                                    Texp_ident "apply_subject/1867"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/action.ml[246,7421+26]..lib/action.ml[246,7421+30])
                                                        Texp_apply
                                                        expression (lib/action.ml[246,7421+26]..lib/action.ml[246,7421+27])
                                                          Texp_ident "Stdlib!.!"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/action.ml[246,7421+27]..lib/action.ml[246,7421+30])
                                                              Texp_ident "phi/1891"
                                                        ]
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/action.ml[246,7421+31]..lib/action.ml[246,7421+38])
                                                        Texp_ident "subject/1893"
                                                  ]
                                                expression (lib/action.ml[246,7421+40]..lib/action.ml[246,7421+45])
                                                  Texp_ident "where/1894"
                                              ]
                                        ]
                                  ]
                                  expression (lib/action.ml[248,7476+6]..lib/action.ml[253,7625+41])
                                    Texp_sequence
                                    expression (lib/action.ml[248,7476+6]..lib/action.ml[252,7609+14])
                                      Texp_apply
                                      expression (lib/action.ml[248,7476+10]..lib/action.ml[248,7476+12])
                                        Texp_ident "Stdlib!.:="
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/action.ml[248,7476+6]..lib/action.ml[248,7476+9])
                                            Texp_ident "phi/1891"
                                        <arg>
                                          Nolabel
                                          expression (lib/action.ml[249,7489+8]..lib/action.ml[252,7609+14])
                                            Texp_apply
                                            expression (lib/action.ml[249,7489+8]..lib/action.ml[249,7489+21])
                                              Texp_ident "extend_posvar/1851"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/action.ml[250,7511+10]..lib/action.ml[250,7511+47])
                                                  Texp_apply
                                                  expression (lib/action.ml[250,7511+11]..lib/action.ml[250,7511+25])
                                                    Texp_ident "Gbnf_parser!.Keyword.posvar"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/action.ml[250,7511+26]..lib/action.ml[250,7511+33])
                                                        Texp_ident "subject/1893"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/action.ml[250,7511+34]..lib/action.ml[250,7511+39])
                                                        Texp_ident "where/1894"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/action.ml[250,7511+40]..lib/action.ml[250,7511+46])
                                                        Texp_ident "flavor/1895"
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (lib/action.ml[251,7559+10]..lib/action.ml[251,7559+49])
                                                  Texp_apply
                                                  expression (lib/action.ml[251,7559+11]..lib/action.ml[251,7559+25])
                                                    Texp_ident "Gbnf_parser!.Keyword.posvar"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/action.ml[251,7559+26]..lib/action.ml[251,7559+34])
                                                        Texp_ident "subject'/1896"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/action.ml[251,7559+35]..lib/action.ml[251,7559+41])
                                                        Texp_ident "where'/1897"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/action.ml[251,7559+42]..lib/action.ml[251,7559+48])
                                                        Texp_ident "flavor/1895"
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (lib/action.ml[252,7609+10]..lib/action.ml[252,7609+14])
                                                  Texp_apply
                                                  expression (lib/action.ml[252,7609+10]..lib/action.ml[252,7609+11])
                                                    Texp_ident "Stdlib!.!"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/action.ml[252,7609+11]..lib/action.ml[252,7609+14])
                                                        Texp_ident "phi/1891"
                                                  ]
                                            ]
                                      ]
                                    expression (lib/action.ml[253,7625+6]..lib/action.ml[253,7625+41])
                                      Texp_construct "Position"
                                      [
                                        expression (lib/action.ml[253,7625+16]..lib/action.ml[253,7625+24])
                                          Texp_ident "subject'/1896"
                                        expression (lib/action.ml[253,7625+26]..lib/action.ml[253,7625+32])
                                          Texp_ident "where'/1897"
                                        expression (lib/action.ml[253,7625+34]..lib/action.ml[253,7625+40])
                                          Texp_ident "flavor/1895"
                                      ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/action.ml[255,7668+0]..lib/action.ml[282,8772+39])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[255,7668+4]..lib/action.ml[255,7668+10])
          Tpat_var "rename/1900"
        expression (lib/action.ml[255,7668+11]..lib/action.ml[282,8772+39]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/action.ml[255,7668+11]..lib/action.ml[255,7668+12])
                Tpat_var "f/1902"
              expression (lib/action.ml[255,7668+13]..lib/action.ml[282,8772+39]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/action.ml[255,7668+13]..lib/action.ml[255,7668+16])
                      Tpat_var "phi/1903"
                    expression (lib/action.ml[255,7668+17]..lib/action.ml[282,8772+39]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/action.ml[255,7668+17]..lib/action.ml[255,7668+18])
                            Tpat_var "a/1904"
                          expression (lib/action.ml[258,7743+2]..lib/action.ml[282,8772+39])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (lib/action.ml[258,7743+6]..lib/action.ml[258,7743+14])
                                  Tpat_var "keywords/1905"
                                expression (lib/action.ml[258,7743+17]..lib/action.ml[258,7743+27])
                                  Texp_field
                                  expression (lib/action.ml[258,7743+17]..lib/action.ml[258,7743+18])
                                    Texp_ident "a/1904"
                                  "keywords"
                            ]
                            expression (lib/action.ml[259,7774+2]..lib/action.ml[282,8772+39])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (lib/action.ml[259,7774+6]..lib/action.ml[259,7774+9])
                                    Tpat_var "phi/1906"
                                  expression (lib/action.ml[259,7774+12]..lib/action.ml[259,7774+19])
                                    Texp_apply
                                    expression (lib/action.ml[259,7774+12]..lib/action.ml[259,7774+15])
                                      Texp_ident "Stdlib!.ref"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/action.ml[259,7774+16]..lib/action.ml[259,7774+19])
                                          Texp_ident "phi/1903"
                                    ]
                              ]
                              expression (lib/action.ml[260,7797+2]..lib/action.ml[282,8772+39])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/action.ml[260,7797+6]..lib/action.ml[260,7797+14])
                                      Tpat_var "keywords/1907"
                                    expression (lib/action.ml[260,7797+17]..lib/action.ml[260,7797+63])
                                      Texp_apply
                                      expression (lib/action.ml[260,7797+17]..lib/action.ml[260,7797+31])
                                        Texp_ident "Gbnf_parser!.Keyword.KeywordSet.map"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/action.ml[260,7797+32]..lib/action.ml[260,7797+54])
                                            Texp_apply
                                            expression (lib/action.ml[260,7797+33]..lib/action.ml[260,7797+47])
                                              Texp_ident "rename_keyword/1888"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/action.ml[260,7797+48]..lib/action.ml[260,7797+49])
                                                  Texp_ident "f/1902"
                                              <arg>
                                                Nolabel
                                                expression (lib/action.ml[260,7797+50]..lib/action.ml[260,7797+53])
                                                  Texp_ident "phi/1906"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/action.ml[260,7797+55]..lib/action.ml[260,7797+63])
                                            Texp_ident "keywords/1905"
                                      ]
                                ]
                                expression (lib/action.ml[261,7864+2]..lib/action.ml[282,8772+39])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/action.ml[261,7864+6]..lib/action.ml[261,7864+9])
                                        Tpat_var "phi/1908"
                                      expression (lib/action.ml[261,7864+12]..lib/action.ml[261,7864+16])
                                        Texp_apply
                                        expression (lib/action.ml[261,7864+12]..lib/action.ml[261,7864+13])
                                          Texp_ident "Stdlib!.!"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/action.ml[261,7864+13]..lib/action.ml[261,7864+16])
                                              Texp_ident "phi/1906"
                                        ]
                                  ]
                                  expression (lib/action.ml[263,7885+2]..lib/action.ml[282,8772+39])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/action.ml[263,7885+6]..lib/action.ml[263,7885+14])
                                          Tpat_var "standard/1909"
                                        expression (lib/action.ml[263,7885+17]..lib/action.ml[263,7885+27])
                                          Texp_field
                                          expression (lib/action.ml[263,7885+17]..lib/action.ml[263,7885+18])
                                            Texp_ident "a/1904"
                                          "standard"
                                    ]
                                    expression (lib/action.ml[270,8208+2]..lib/action.ml[282,8772+39])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (lib/action.ml[270,8208+6]..lib/action.ml[270,8208+9])
                                            Tpat_var "phi/1910"
                                          expression (lib/action.ml[270,8208+12]..lib/action.ml[270,8208+41])
                                            Texp_apply
                                            expression (lib/action.ml[270,8208+12]..lib/action.ml[270,8208+27])
                                              Texp_ident "restrict_semvar/1882"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/action.ml[270,8208+28]..lib/action.ml[270,8208+37])
                                                  Texp_field
                                                  expression (lib/action.ml[270,8208+28]..lib/action.ml[270,8208+29])
                                                    Texp_ident "a/1904"
                                                  "semvars"
                                              <arg>
                                                Nolabel
                                                expression (lib/action.ml[270,8208+38]..lib/action.ml[270,8208+41])
                                                  Texp_ident "phi/1908"
                                            ]
                                      ]
                                      expression (lib/action.ml[273,8311+2]..lib/action.ml[282,8772+39])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/action.ml[273,8311+6]..lib/action.ml[273,8311+13])
                                              Tpat_var "semvars/1911"
                                            expression (lib/action.ml[273,8311+16]..lib/action.ml[273,8311+58])
                                              Texp_apply
                                              expression (lib/action.ml[273,8311+16]..lib/action.ml[273,8311+29])
                                                Texp_ident "Gbnf_parser!.StringSet.map"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/action.ml[273,8311+30]..lib/action.ml[273,8311+48])
                                                    Texp_apply
                                                    expression (lib/action.ml[273,8311+31]..lib/action.ml[273,8311+43])
                                                      Texp_ident "apply_semvar/1863"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/action.ml[273,8311+44]..lib/action.ml[273,8311+47])
                                                          Texp_ident "phi/1910"
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (lib/action.ml[273,8311+49]..lib/action.ml[273,8311+58])
                                                    Texp_field
                                                    expression (lib/action.ml[273,8311+49]..lib/action.ml[273,8311+50])
                                                      Texp_ident "a/1904"
                                                    "semvars"
                                              ]
                                        ]
                                        expression (lib/action.ml[279,8648+2]..lib/action.ml[282,8772+39])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/action.ml[279,8648+6]..lib/action.ml[279,8648+9])
                                                Tpat_var "phi/1912"
                                              expression (lib/action.ml[279,8648+12]..lib/action.ml[279,8648+72])
                                                Texp_apply
                                                expression (lib/action.ml[279,8648+12]..lib/action.ml[279,8648+20])
                                                  Texp_ident "Stdlib!.List.map"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/action.ml[279,8648+21]..lib/action.ml[279,8648+57])
                                                      Texp_function
                                                      Nolabel
                                                      [
                                                        <case>
                                                          pattern (lib/action.ml[279,8648+26]..lib/action.ml[279,8648+32])
                                                            Tpat_tuple
                                                            [
                                                              pattern (lib/action.ml[279,8648+27]..lib/action.ml[279,8648+28])
                                                                Tpat_var "x/1913"
                                                              pattern (lib/action.ml[279,8648+30]..lib/action.ml[279,8648+31])
                                                                Tpat_var "y/1914"
                                                            ]
                                                          expression (lib/action.ml[279,8648+36]..lib/action.ml[279,8648+56])
                                                            Texp_tuple
                                                            [
                                                              expression (lib/action.ml[279,8648+36]..lib/action.ml[279,8648+45])
                                                                Texp_construct "IL.PVar"
                                                                [
                                                                  expression (lib/action.ml[279,8648+44]..lib/action.ml[279,8648+45])
                                                                    Texp_ident "x/1913"
                                                                ]
                                                              expression (lib/action.ml[279,8648+47]..lib/action.ml[279,8648+56])
                                                                Texp_construct "IL.EVar"
                                                                [
                                                                  expression (lib/action.ml[279,8648+55]..lib/action.ml[279,8648+56])
                                                                    Texp_ident "y/1914"
                                                                ]
                                                            ]
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/action.ml[279,8648+58]..lib/action.ml[279,8648+72])
                                                      Texp_apply
                                                      expression (lib/action.ml[279,8648+59]..lib/action.ml[279,8648+67])
                                                        Texp_ident "bindings/1872"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/action.ml[279,8648+68]..lib/action.ml[279,8648+71])
                                                            Texp_ident "phi/1910"
                                                      ]
                                                ]
                                          ]
                                          expression (lib/action.ml[280,8724+2]..lib/action.ml[282,8772+39])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (lib/action.ml[280,8724+6]..lib/action.ml[280,8724+10])
                                                  Tpat_var "expr/1916"
                                                expression (lib/action.ml[280,8724+13]..lib/action.ml[280,8724+43])
                                                  Texp_apply
                                                  expression (lib/action.ml[280,8724+13]..lib/action.ml[280,8724+29])
                                                    Texp_ident "Gbnf_parser!.CodeBits.eletand"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/action.ml[280,8724+30]..lib/action.ml[280,8724+43])
                                                        Texp_tuple
                                                        [
                                                          expression (lib/action.ml[280,8724+31]..lib/action.ml[280,8724+34])
                                                            Texp_ident "phi/1912"
                                                          expression (lib/action.ml[280,8724+36]..lib/action.ml[280,8724+42])
                                                            Texp_field
                                                            expression (lib/action.ml[280,8724+36]..lib/action.ml[280,8724+37])
                                                              Texp_ident "a/1904"
                                                            "expr"
                                                        ]
                                                  ]
                                            ]
                                            expression (lib/action.ml[282,8772+2]..lib/action.ml[282,8772+39])
                                              Texp_record
                                                fields =
                                                  [
                                                    "expr"
                                                      expression (lib/action.ml[282,8772+4]..lib/action.ml[282,8772+8])
                                                        Texp_ident "expr/1916"
                                                    "standard"
                                                      expression (lib/action.ml[282,8772+10]..lib/action.ml[282,8772+18])
                                                        Texp_ident "standard/1909"
                                                    "semvars"
                                                      expression (lib/action.ml[282,8772+20]..lib/action.ml[282,8772+27])
                                                        Texp_ident "semvars/1911"
                                                    "keywords"
                                                      expression (lib/action.ml[282,8772+29]..lib/action.ml[282,8772+37])
                                                        Texp_ident "keywords/1907"
                                                  ]
                                                representation =
                                                  Record_regular
                                                extended_expression =
                                                  None
                      ]
                ]
          ]
    ]
  structure_item (lib/action.ml[282,8772+39]..lib/action.ml[282,8772+39]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[282,8772+39]..lib/action.ml[282,8772+39]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/action.ml[282,8772+39]..lib/action.ml[282,8772+39]) ghost
          Texp_apply
          expression (lib/action.ml[282,8772+39]..lib/action.ml[282,8772+39]) ghost
            Texp_ident "Ppx_inline_test_lib!.unset_lib"
          [
            <arg>
              Nolabel
              expression (lib/action.ml[282,8772+39]..lib/action.ml[282,8772+39]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/action.ml[282,8772+39]..lib/action.ml[282,8772+39]) ghost,None)
          ]
    ]
  structure_item (lib/action.ml[282,8772+39]..lib/action.ml[282,8772+39]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[282,8772+39]..lib/action.ml[282,8772+39]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/action.ml[282,8772+39]..lib/action.ml[282,8772+39]) ghost
          Texp_apply
          expression (lib/action.ml[282,8772+39]..lib/action.ml[282,8772+39]) ghost
            Texp_ident "Expect_test_collector!.Current_file.unset"
          [
            <arg>
              Nolabel
              expression (lib/action.ml[282,8772+39]..lib/action.ml[282,8772+39]) ghost
                Texp_construct "()"
                []
          ]
    ]
  structure_item (lib/action.ml[282,8772+39]..lib/action.ml[282,8772+39]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[282,8772+39]..lib/action.ml[282,8772+39]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/action.ml[282,8772+39]..lib/action.ml[282,8772+39]) ghost
          Texp_apply
          expression (lib/action.ml[282,8772+39]..lib/action.ml[282,8772+39]) ghost
            Texp_ident "Ppx_bench_lib!.Benchmark_accumulator.Current_libname.unset"
          [
            <arg>
              Nolabel
              expression (lib/action.ml[282,8772+39]..lib/action.ml[282,8772+39]) ghost
                Texp_construct "()"
                []
          ]
    ]
  structure_item (lib/action.ml[282,8772+39]..lib/action.ml[282,8772+39]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/action.ml[282,8772+39]..lib/action.ml[282,8772+39]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/action.ml[282,8772+39]..lib/action.ml[282,8772+39]) ghost
          Texp_apply
          expression (lib/action.ml[282,8772+39]..lib/action.ml[282,8772+39]) ghost
            Texp_ident "Ppx_module_timer_runtime!.record_until"
          [
            <arg>
              Nolabel
              expression (lib/action.ml[282,8772+39]..lib/action.ml[282,8772+39]) ghost
                Texp_ident "Ppx_module_timer_runtime!.__MODULE__"
          ]
    ]
]

{<Gbnf_parser__Action>
 "apply1"[value] -> <Gbnf_parser__Action.80>;
 "apply_semvar"[value] -> <Gbnf_parser__Action.83>;
 "apply_subject"[value] -> <Gbnf_parser__Action.86>;
 "bind"[value] -> <Gbnf_parser__Action.23>;
 "bindings"[value] -> <Gbnf_parser__Action.90>;
 "bv"[value] -> <Gbnf_parser__Action.24>;
 "bv_aux"[value] -> <Gbnf_parser__Action.25>;
 "compose"[value] -> <Gbnf_parser__Action.19>;
 "define"[value] -> <Gbnf_parser__Action.56>;
 "empty"[value] -> <Gbnf_parser__Action.64>;
 "extend"[value] -> <Gbnf_parser__Action.79>;
 "extend1"[value] -> <Gbnf_parser__Action.65>;
 "extend_posvar"[value] -> <Gbnf_parser__Action.74>;
 "extend_semvar"[value] -> <Gbnf_parser__Action.69>;
 "from_il_expr"[value] -> <Gbnf_parser__Action.8>;
 "from_stretch"[value] -> <Gbnf_parser__Action.5>;
 "fv"[value] -> <Gbnf_parser__Action.9>;
 "fv_aux"[value] -> <Gbnf_parser__Action.10>;
 "has_beforeend"[value] -> <Gbnf_parser__Action.44>;
 "has_syntaxerror"[value] -> <Gbnf_parser__Action.42>;
 "is_standard"[value] -> <Gbnf_parser__Action.36>;
 "keywords"[value] -> <Gbnf_parser__Action.40>;
 "posvars"[value] -> <Gbnf_parser__Action.46>;
 "rename"[value] -> <Gbnf_parser__Action.112>;
 "rename_keyword"[value] -> <Gbnf_parser__Action.101>;
 "restrict1"[value] -> <Gbnf_parser__Action.92>;
 "restrict_semvar"[value] -> <Gbnf_parser__Action.97>;
 "semvars"[value] -> <Gbnf_parser__Action.38>;
 "subst"[type] -> <Gbnf_parser__Action.61>;
 "t"[type] -> <Gbnf_parser__Action.0>;
 "to_il_expr"[value] -> <Gbnf_parser__Action.34>;
 "vars"[value] -> <Gbnf_parser__Action.54>;
 }

(setglobal Gbnf_parser__Action!
  (let
    (*match*/3019 =
       (after Gbnf_parser__Action lib/action.ml(14)<ghost>:976-976
         (apply (field_imm 3 (global Ppx_module_timer_runtime!))
           #"Gbnf_parser__Action"))
     *match*/3017 =
       (after Gbnf_parser__Action lib/action.ml(14)<ghost>:976-976
         (apply
           (field_imm 0
             (field_imm 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
           "gbnf_parser"))
     *match*/3015 =
       (after Gbnf_parser__Action lib/action.ml(14)<ghost>:976-976
         (apply (field_imm 0 (field_imm 5 (global Expect_test_collector!)))
           "lib/action.ml"))
     *match*/3013 =
       (after Gbnf_parser__Action lib/action.ml(14)<ghost>:976-976
         (apply (field_imm 4 (global Ppx_inline_test_lib!)) "gbnf_parser"
           "action.ml"))
     from_stretch/1485 =
       (function xs/1487 s/1488
         (funct-body Gbnf_parser__Action.from_stretch lib/action.ml(41)<ghost>:1778-1961
           (before Gbnf_parser__Action.from_stretch lib/action.ml(42):1787-1961
             (makeblock 0 (*,int,*,*) (makeblock 19 s/1488)
               (after Gbnf_parser__Action.from_stretch lib/action.ml(45):1837-1873
                 (caml_string_equal (field_imm 0 s/1488) "fixme"))
               xs/1487
               (after Gbnf_parser__Action.from_stretch lib/action.ml(48):1912-1957
                 (apply
                   (field_imm 36
                     (field_imm 4 (global Gbnf_parser__Keyword!)))
                   (field_imm 5 s/1488))))))))
    (letrec
      (from_il_expr/1493
         (function e/1496
           (funct-body Gbnf_parser__Action.from_il_expr lib/action.ml(51)<ghost>:1984-2092
             (before Gbnf_parser__Action.from_il_expr lib/action.ml(52):1990-2092
               (makeblock 0 (*,int,*,*) e/1496 1
                 (after Gbnf_parser__Action.from_il_expr lib/action.ml(55):2049-2053
                   (apply fv/1494 e/1496))
                 (field_imm 0 (field_imm 4 (global Gbnf_parser__Keyword!)))))))
        fv/1494
          (function e/1497
            (funct-body Gbnf_parser__Action.fv lib/action.ml(62)<ghost>:2201-2231
              (before Gbnf_parser__Action.fv lib/action.ml(63):2207-2231
                (after Gbnf_parser__Action.fv lib/action.ml(63):2207-2231
                  (apply fv_aux/1495
                    (field_imm 0 (global Gbnf_parser__StringSet!)) e/1497)))))
        fv_aux/1495
          (function accu/1498 e/1499
            (funct-body Gbnf_parser__Action.fv_aux lib/action.ml(65)<ghost>:2244-2809
              (before Gbnf_parser__Action.fv_aux lib/action.ml(66):2255-2809
                (catch
                  (switch e/1499
                   case tag 0:
                    (let (x/1500 =a (field_imm 0 e/1499))
                      (before Gbnf_parser__Action.fv_aux lib/action.ml(68):2292-2312
                        (after Gbnf_parser__Action.fv_aux lib/action.ml(68):2292-2312
                          (apply
                            (field_imm 1 (global Gbnf_parser__StringSet!))
                            x/1500 accu/1498))))
                   case tag 2:
                    (let
                      (es/1503 =a (field_imm 1 e/1499)
                       e/1502 =a (field_imm 0 e/1499))
                      (before Gbnf_parser__Action.fv_aux lib/action.ml(78):2726-2762
                        (after Gbnf_parser__Action.fv_aux lib/action.ml(78):2726-2762
                          (apply (field_imm 25 (global Stdlib__List!))
                            fv_aux/1495 accu/1498
                            (makeblock 0 e/1502 es/1503)))))
                   case tag 12:
                    (let (es/1501 =a (field_imm 0 e/1499))
                      (before Gbnf_parser__Action.fv_aux lib/action.ml(76):2670-2699
                        (after Gbnf_parser__Action.fv_aux lib/action.ml(76):2670-2699
                          (apply (field_imm 25 (global Stdlib__List!))
                            fv_aux/1495 accu/1498 es/1501))))
                   case tag 19:
                    (let (*match*/2988 =a (field_imm 0 e/1499))
                      (before Gbnf_parser__Action.fv_aux lib/action.ml(74):2642-2646
                        accu/1498))
                   default: (exit 1))
                 with (1)
                  (before Gbnf_parser__Action.fv_aux lib/action.ml(80):2778-2790
                    (raise
                      (after Gbnf_parser__Action.fv_aux lib/action.ml(80):2778-2790
                        (makeblock 0 (global Assert_failure/28!)
                          [0: "lib/action.ml" 80 6])))))))))
      (let
        (compose/1639 =
           (function x/1641 a1/1642 a2/1643
             (funct-body Gbnf_parser__Action.compose lib/action.ml(86)<ghost>:2941-3490
               (before Gbnf_parser__Action.compose lib/action.ml(91):3242-3490
                 (makeblock 0 (*,int,*,*)
                   (after Gbnf_parser__Action.compose lib/action.ml(92):3260-3307
                     (apply (field_imm 22 (global Gbnf_parser__CodeBits!))
                       (makeblock 0
                         (makeblock 0
                           (makeblock 0 (makeblock 0 x/1641)
                             (field_imm 0 a1/1642))
                           0)
                         (field_imm 0 a2/1643))))
                   (&& (field_int 1 a1/1642) (field_int 1 a2/1643))
                   (after Gbnf_parser__Action.compose lib/action.ml(93):3325-3383
                     (apply (field_imm 4 (global Gbnf_parser__StringSet!))
                       (field_imm 2 a1/1642)
                       (after Gbnf_parser__Action.compose lib/action.ml(93):3352-3383
                         (apply
                           (field_imm 3 (global Gbnf_parser__StringSet!))
                           x/1641 (field_imm 2 a2/1643)))))
                   (after Gbnf_parser__Action.compose lib/action.ml(94):3401-3441
                     (apply
                       (field_imm 4
                         (field_imm 4 (global Gbnf_parser__Keyword!)))
                       (field_imm 3 a1/1642) (field_imm 3 a2/1643))))))))
        (letrec
          (bind/1694
             (function p/1697 x/1698 a/1699
               (funct-body Gbnf_parser__Action.bind lib/action.ml(100)<ghost>:3539-3735
                 (before Gbnf_parser__Action.bind lib/action.ml(101):3549-3735
                   (makeblock 0 (*,int,*,*)
                     (after Gbnf_parser__Action.bind lib/action.ml(102):3567-3607
                       (apply (field_imm 22 (global Gbnf_parser__CodeBits!))
                         (makeblock 0
                           (makeblock 0
                             (makeblock 0 p/1697 (makeblock 0 x/1698)) 0)
                           (field_imm 0 a/1699))))
                     (field_int 1 a/1699)
                     (after Gbnf_parser__Action.bind lib/action.ml(103):3625-3674
                       (apply (field_imm 1 (global Gbnf_parser__StringSet!))
                         x/1698
                         (after Gbnf_parser__Action.bind lib/action.ml(103):3641-3674
                           (apply
                             (field_imm 7 (global Gbnf_parser__StringSet!))
                             (field_imm 2 a/1699)
                             (after Gbnf_parser__Action.bind lib/action.ml(103):3667-3673
                               (apply bv/1695 p/1697))))))
                     (field_imm 3 a/1699)))))
            bv/1695
              (function p/1700
                (funct-body Gbnf_parser__Action.bv lib/action.ml(111)<ghost>:3870-3900
                  (before Gbnf_parser__Action.bv lib/action.ml(112):3876-3900
                    (after Gbnf_parser__Action.bv lib/action.ml(112):3876-3900
                      (apply bv_aux/1696
                        (field_imm 0 (global Gbnf_parser__StringSet!))
                        p/1700)))))
            bv_aux/1696
              (function accu/1701 p/1702
                (funct-body Gbnf_parser__Action.bv_aux lib/action.ml(114)<ghost>:3913-4119
                  (before Gbnf_parser__Action.bv_aux lib/action.ml(115):3924-4119
                    (catch
                      (catch
                        (switch p/1702
                         case int 0: (exit 2)
                         case int 1: (exit 2)
                         case tag 0:
                          (let (x/1703 =a (field_imm 0 p/1702))
                            (before Gbnf_parser__Action.bv_aux lib/action.ml(120):3999-4019
                              (after Gbnf_parser__Action.bv_aux lib/action.ml(120):3999-4019
                                (apply
                                  (field_imm 1
                                    (global Gbnf_parser__StringSet!))
                                  x/1703 accu/1701))))
                         case tag 3:
                          (let (ps/1704 =a (field_imm 0 p/1702))
                            (before Gbnf_parser__Action.bv_aux lib/action.ml(122):4043-4072
                              (after Gbnf_parser__Action.bv_aux lib/action.ml(122):4043-4072
                                (apply (field_imm 25 (global Stdlib__List!))
                                  bv_aux/1696 accu/1701 ps/1704))))
                         default: (exit 3))
                       with (3)
                        (before Gbnf_parser__Action.bv_aux lib/action.ml(124):4088-4100
                          (raise
                            (after Gbnf_parser__Action.bv_aux lib/action.ml(124):4088-4100
                              (makeblock 0 (global Assert_failure/28!)
                                [0: "lib/action.ml" 124 6])))))
                     with (2)
                      (before Gbnf_parser__Action.bv_aux lib/action.ml(118):3974-3978
                        accu/1701))))))
          (let
            (to_il_expr/1799 =
               (function action/1801
                 (funct-body Gbnf_parser__Action.to_il_expr lib/action.ml(130)<ghost>:4236-4258
                   (before Gbnf_parser__Action.to_il_expr lib/action.ml(131):4247-4258
                     (field_imm 0 action/1801))))
             is_standard/1802 =
               (function action/1804 : int
                 (funct-body Gbnf_parser__Action.is_standard lib/action.ml(133)<ghost>:4276-4302
                   (before Gbnf_parser__Action.is_standard lib/action.ml(134):4287-4302
                     (field_int 1 action/1804))))
             semvars/1805 =
               (function action/1807
                 (funct-body Gbnf_parser__Action.semvars lib/action.ml(136)<ghost>:4316-4341
                   (before Gbnf_parser__Action.semvars lib/action.ml(137):4327-4341
                     (field_imm 2 action/1807))))
             keywords/1808 =
               (function action/1810
                 (funct-body Gbnf_parser__Action.keywords lib/action.ml(139)<ghost>:4356-4382
                   (before Gbnf_parser__Action.keywords lib/action.ml(140):4367-4382
                     (field_imm 3 action/1810))))
             has_syntaxerror/1811 =
               (function action/1813 : int
                 (funct-body Gbnf_parser__Action.has_syntaxerror lib/action.ml(142)<ghost>:4404-4457
                   (before Gbnf_parser__Action.has_syntaxerror lib/action.ml(143):4415-4457
                     (after Gbnf_parser__Action.has_syntaxerror lib/action.ml(143):4415-4457
                       (apply
                         (field_imm 29
                           (field_imm 4 (global Gbnf_parser__Keyword!)))
                         0 (field_imm 3 action/1813))))))
             has_beforeend/1814 =
               (function action/1816 : int
                 (funct-body Gbnf_parser__Action.has_beforeend lib/action.ml(145)<ghost>:4477-4564
                   (before Gbnf_parser__Action.has_beforeend lib/action.ml(146):4488-4564
                     (after Gbnf_parser__Action.has_beforeend lib/action.ml(146):4488-4564
                       (apply
                         (field_imm 29
                           (field_imm 4 (global Gbnf_parser__Keyword!)))
                         [0: 0 2 1] (field_imm 3 action/1816))))))
             posvars/1817 =
               (function action/1819
                 (funct-body Gbnf_parser__Action.posvars lib/action.ml(148)<ghost>:4578-4817
                   (before Gbnf_parser__Action.posvars lib/action.ml(149):4589-4817
                     (after Gbnf_parser__Action.posvars lib/action.ml(149):4589-4817
                       (apply
                         (field_imm 23
                           (field_imm 4 (global Gbnf_parser__Keyword!)))
                         (function keyword/1820 accu/1821
                           (funct-body Gbnf_parser__Action.posvars.(fun) lib/action.ml(149):4605-4783
                             (before Gbnf_parser__Action.posvars.(fun) lib/action.ml(150):4630-4779
                               (if keyword/1820
                                 (let
                                   (f/1824 =a (field_imm 2 keyword/1820)
                                    w/1823 =a (field_imm 1 keyword/1820)
                                    s/1822 =a (field_imm 0 keyword/1820))
                                   (before Gbnf_parser__Action.posvars.(fun) lib/action.ml(154):4719-4779
                                     (let
                                       (x/1825 =
                                          (after Gbnf_parser__Action.posvars.(fun) lib/action.ml(154):4727-4747
                                            (apply
                                              (field_imm 3
                                                (global Gbnf_parser__Keyword!))
                                              s/1822 w/1823 f/1824)))
                                       (before Gbnf_parser__Action.posvars.(fun) lib/action.ml(155):4759-4779
                                         (after Gbnf_parser__Action.posvars.(fun) lib/action.ml(155):4759-4779
                                           (apply
                                             (field_imm 1
                                               (global Gbnf_parser__StringSet!))
                                             x/1825 accu/1821))))))
                                 (before Gbnf_parser__Action.posvars.(fun) lib/action.ml(152):4678-4682
                                   accu/1821)))))
                         (after Gbnf_parser__Action.posvars lib/action.ml(156):4784-4801
                           (apply keywords/1808 action/1819))
                         (field_imm 0 (global Gbnf_parser__StringSet!)))))))
             vars/1826 =
               (function action/1828
                 (funct-body Gbnf_parser__Action.vars lib/action.ml(158)<ghost>:4828-4888
                   (before Gbnf_parser__Action.vars lib/action.ml(159):4839-4888
                     (after Gbnf_parser__Action.vars lib/action.ml(159):4839-4888
                       (apply (field_imm 4 (global Gbnf_parser__StringSet!))
                         (after Gbnf_parser__Action.vars lib/action.ml(159):4855-4871
                           (apply semvars/1805 action/1828))
                         (after Gbnf_parser__Action.vars lib/action.ml(159):4872-4888
                           (apply posvars/1817 action/1828)))))))
             define/1829 =
               (function keyword/1831 keywords/1832 f/1833 action/1834
                 (funct-body Gbnf_parser__Action.define lib/action.ml(165)<ghost>:5037-5323
                   (before Gbnf_parser__Action.define lib/action.ml(166):5067-5323
                     (seq
                       (if
                         (after Gbnf_parser__Action.define lib/action.ml(166):5074-5114
                           (apply
                             (field_imm 29
                               (field_imm 4 (global Gbnf_parser__Keyword!)))
                             keyword/1831 (field_imm 3 action/1834)))
                         0
                         (raise
                           (after Gbnf_parser__Action.define lib/action.ml(166):5067-5114
                             (makeblock 0 (global Assert_failure/28!)
                               [0: "lib/action.ml" 166 2]))))
                       (before Gbnf_parser__Action.define lib/action.ml(167):5118-5323
                         (makeblock 0 (*,int,*,*)
                           (after Gbnf_parser__Action.define lib/action.ml(168):5136-5149
                             (apply f/1833 (field_imm 0 action/1834)))
                           (field_int 1 action/1834)
                           (field_imm 2 action/1834)
                           (after Gbnf_parser__Action.define lib/action.ml(171):5232-5319
                             (apply
                               (field_imm 4
                                 (field_imm 4 (global Gbnf_parser__Keyword!)))
                               keywords/1832
                               (after Gbnf_parser__Action.define lib/action.ml(172):5276-5319
                                 (apply
                                   (field_imm 3
                                     (field_imm 4
                                       (global Gbnf_parser__Keyword!)))
                                   keyword/1831 (field_imm 3 action/1834)))))))))))
             empty/1838 = [0: 0 0]
             extend1/1839 =
               (function x/1841 y/1842 var/1843
                 (funct-body Gbnf_parser__Action.extend1 lib/action.ml(193)<ghost>:5948-6036
                   (before Gbnf_parser__Action.extend1 lib/action.ml(194):5960-6036
                     (seq
                       (if
                         (not
                           (after Gbnf_parser__Action.extend1 lib/action.ml(194):5972-5994
                             (apply (field_imm 52 (global Stdlib__List!))
                               x/1841 var/1843)))
                         0
                         (raise
                           (after Gbnf_parser__Action.extend1 lib/action.ml(194):5960-5995
                             (makeblock 0 (global Assert_failure/28!)
                               [0: "lib/action.ml" 194 2]))))
                       (before Gbnf_parser__Action.extend1 lib/action.ml(195):5999-6036
                         (if
                           (after Gbnf_parser__Action.extend1 lib/action.ml(195):6002-6008
                             (caml_notequal x/1841 y/1842))
                           (before Gbnf_parser__Action.extend1 lib/action.ml(195):6014-6027
                             (makeblock 0 (makeblock 0 x/1841 y/1842)
                               var/1843))
                           (before Gbnf_parser__Action.extend1 lib/action.ml(195):6033-6036
                             var/1843)))))))
             extend_semvar/1844 =
               (function x/1846 y/1847 param/1850
                 (funct-body Gbnf_parser__Action.extend_semvar lib/action.ml(197)<ghost>:6056-6122
                   (let
                     (posvar/1849 =a (field_imm 1 param/1850)
                      semvar/1848 =a (field_imm 0 param/1850))
                     (before Gbnf_parser__Action.extend_semvar lib/action.ml(198):6083-6122
                       (makeblock 0
                         (after Gbnf_parser__Action.extend_semvar lib/action.ml(198):6094-6112
                           (apply extend1/1839 x/1846 y/1847 semvar/1848))
                         posvar/1849)))))
             extend_posvar/1851 =
               (function x/1853 y/1854 param/1857
                 (funct-body Gbnf_parser__Action.extend_posvar lib/action.ml(200)<ghost>:6142-6208
                   (let
                     (posvar/1856 =a (field_imm 1 param/1857)
                      semvar/1855 =a (field_imm 0 param/1857))
                     (before Gbnf_parser__Action.extend_posvar lib/action.ml(201):6169-6208
                       (makeblock 0 semvar/1855
                         (after Gbnf_parser__Action.extend_posvar lib/action.ml(201):6188-6206
                           (apply extend1/1839 x/1853 y/1854 posvar/1856)))))))
             extend/1858 = extend_semvar/1844
             apply1/1859 =
               (function var/1861 x/1862
                 (funct-body Gbnf_parser__Action.apply1 lib/action.ml(205)<ghost>:6249-6299
                   (before Gbnf_parser__Action.apply1 lib/action.ml(206):6259-6299
                     (try
                       (after Gbnf_parser__Action.apply1 lib/action.ml(206):6263-6279
                         (apply (field_imm 48 (global Stdlib__List!)) x/1862
                           var/1861))
                      with exn/2995
                       (catch
                         (if (== exn/2995 (field_imm 7 (global Stdlib!)))
                           (before Gbnf_parser__Action.apply1 lib/action.ml(206):6298-6299
                             x/1862)
                           (exit 4))
                        with (4) (reraise exn/2995))))))
             apply_semvar/1863 =
               (function phi/1865 x/1866
                 (funct-body Gbnf_parser__Action.apply_semvar lib/action.ml(208)<ghost>:6318-6347
                   (before Gbnf_parser__Action.apply_semvar lib/action.ml(209):6328-6347
                     (after Gbnf_parser__Action.apply_semvar lib/action.ml(209):6328-6347
                       (apply apply1/1859 (field_imm 0 phi/1865) x/1866)))))
             apply_subject/1867 =
               (function phi/1869 subject/1870
                 (funct-body Gbnf_parser__Action.apply_subject lib/action.ml(211)<ghost>:6367-6496
                   (before Gbnf_parser__Action.apply_subject lib/action.ml(212):6383-6496
                     (catch
                       (if (isint subject/1870) (exit 5)
                         (let (x/1871 =a (field_imm 0 subject/1870))
                           (before Gbnf_parser__Action.apply_subject lib/action.ml(217):6465-6496
                             (makeblock 0
                               (after Gbnf_parser__Action.apply_subject lib/action.ml(217):6476-6496
                                 (apply apply_semvar/1863 phi/1869 x/1871))))))
                      with (5)
                       (before Gbnf_parser__Action.apply_subject lib/action.ml(215):6431-6438
                         subject/1870)))))
             bindings/1872 =
               (function phi/1874
                 (funct-body Gbnf_parser__Action.bindings lib/action.ml(219)<ghost>:6511-6542
                   (before Gbnf_parser__Action.bindings lib/action.ml(220):6519-6542
                     (after Gbnf_parser__Action.bindings lib/action.ml(220):6519-6542
                       (apply (field_imm 36 (global Stdlib!))
                         (field_imm 1 phi/1874) (field_imm 0 phi/1874))))))
             restrict1/1875 =
               (function xs/1877 var/1878
                 (funct-body Gbnf_parser__Action.restrict1 lib/action.ml(222)<ghost>:6558-6620
                   (before Gbnf_parser__Action.restrict1 lib/action.ml(223):6569-6620
                     (after Gbnf_parser__Action.restrict1 lib/action.ml(223):6569-6620
                       (apply (field_imm 43 (global Stdlib__List!))
                         (function param/1881 : int
                           (funct-body Gbnf_parser__Action.restrict1.(fun) lib/action.ml(223):6581-6616
                             (let
                               (_y/1880 =a (field_imm 1 param/1881)
                                x/1879 =a (field_imm 0 param/1881))
                               (before Gbnf_parser__Action.restrict1.(fun) lib/action.ml(223):6597-6615
                                 (after Gbnf_parser__Action.restrict1.(fun) lib/action.ml(223):6597-6615
                                   (apply
                                     (field_imm 29
                                       (global Gbnf_parser__StringSet!))
                                     x/1879 xs/1877))))))
                         var/1878)))))
             restrict_semvar/1882 =
               (function xs/1884 param/1887
                 (funct-body Gbnf_parser__Action.restrict_semvar lib/action.ml(225)<ghost>:6642-6708
                   (let
                     (posvar/1886 =a (field_imm 1 param/1887)
                      semvar/1885 =a (field_imm 0 param/1887))
                     (before Gbnf_parser__Action.restrict_semvar lib/action.ml(226):6668-6708
                       (makeblock 0
                         (after Gbnf_parser__Action.restrict_semvar lib/action.ml(226):6679-6698
                           (apply restrict1/1875 xs/1884 semvar/1885))
                         posvar/1886)))))
             rename_keyword/1888 =
               (function f/1890 phi/1891 keyword/1892
                 (funct-body Gbnf_parser__Action.rename_keyword lib/action.ml(236)<ghost>:7131-7666
                   (before Gbnf_parser__Action.rename_keyword lib/action.ml(237):7173-7666
                     (if keyword/1892
                       (let
                         (flavor/1895 =a (field_imm 2 keyword/1892)
                          where/1894 =a (field_imm 1 keyword/1892)
                          subject/1893 =a (field_imm 0 keyword/1892))
                         (before Gbnf_parser__Action.rename_keyword lib/action.ml(241):7276-7666
                           (catch
                             (let
                               (*match*/2997 =
                                  (after Gbnf_parser__Action.rename_keyword lib/action.ml(242):7313-7331
                                    (apply f/1890
                                      (makeblock 0 (*,int) subject/1893
                                        where/1894))))
                               (if *match*/2997
                                 (let
                                   (*match*/2998 =a
                                      (field_imm 0 *match*/2997)
                                    where'/1899 =a (field_imm 1 *match*/2998)
                                    subject'/1898 =a
                                      (field_imm 0 *match*/2998))
                                   (before Gbnf_parser__Action.rename_keyword lib/action.ml(244):7386-7402
                                     (let
                                       (where'/3002 =a where'/1899
                                        subject'/3001 =a subject'/1898)
                                       (exit 6 subject'/3001 where'/3002))))
                                 (before Gbnf_parser__Action.rename_keyword lib/action.ml(246):7433-7466
                                   (let
                                     (where'/3000 =a where/1894
                                      subject'/2999 =
                                        (after Gbnf_parser__Action.rename_keyword lib/action.ml(246):7433-7459
                                          (apply apply_subject/1867
                                            (field_mut 0 phi/1891)
                                            subject/1893)))
                                     (exit 6 subject'/2999 where'/3000)))))
                            with (6 subject'/1896 where'/1897[int])
                             (before Gbnf_parser__Action.rename_keyword lib/action.ml(248):7482-7666
                               (seq
                                 (setfield_ptr 0 phi/1891
                                   (after Gbnf_parser__Action.rename_keyword lib/action.ml(249):7497-7623
                                     (apply extend_posvar/1851
                                       (after Gbnf_parser__Action.rename_keyword lib/action.ml(250):7521-7558
                                         (apply
                                           (field_imm 3
                                             (global Gbnf_parser__Keyword!))
                                           subject/1893 where/1894
                                           flavor/1895))
                                       (after Gbnf_parser__Action.rename_keyword lib/action.ml(251):7569-7608
                                         (apply
                                           (field_imm 3
                                             (global Gbnf_parser__Keyword!))
                                           subject'/1896 where'/1897
                                           flavor/1895))
                                       (field_mut 0 phi/1891))))
                                 (before Gbnf_parser__Action.rename_keyword lib/action.ml(253):7631-7666
                                   (makeblock 0 (*,int,int) subject'/1896
                                     where'/1897 flavor/1895)))))))
                       (before Gbnf_parser__Action.rename_keyword lib/action.ml(239):7217-7228
                         0)))))
             rename/1900 =
               (function f/1902 phi/1903 a/1904
                 (funct-body Gbnf_parser__Action.rename lib/action.ml(255)<ghost>:7679-8811
                   (before Gbnf_parser__Action.rename lib/action.ml(258):7745-8811
                     (let (keywords/1905 = (field_imm 3 a/1904))
                       (before Gbnf_parser__Action.rename lib/action.ml(259):7776-8811
                         (let (phi/1906 = (makemutable 0 phi/1903))
                           (before Gbnf_parser__Action.rename lib/action.ml(260):7799-8811
                             (let
                               (keywords/1907 =
                                  (after Gbnf_parser__Action.rename lib/action.ml(260):7814-7860
                                    (apply
                                      (field_imm 42
                                        (field_imm 4
                                          (global Gbnf_parser__Keyword!)))
                                      (after Gbnf_parser__Action.rename lib/action.ml(260):7829-7851
                                        (apply rename_keyword/1888 f/1902
                                          phi/1906))
                                      keywords/1905)))
                               (before Gbnf_parser__Action.rename lib/action.ml(261):7866-8811
                                 (let (phi/1908 = (field_mut 0 phi/1906))
                                   (before Gbnf_parser__Action.rename lib/action.ml(263):7887-8811
                                     (let
                                       (standard/1909 =[int]
                                          (field_int 1 a/1904))
                                       (before Gbnf_parser__Action.rename lib/action.ml(270):8210-8811
                                         (let
                                           (phi/1910 =
                                              (after Gbnf_parser__Action.rename lib/action.ml(270):8220-8249
                                                (apply restrict_semvar/1882
                                                  (field_imm 2 a/1904)
                                                  phi/1908)))
                                           (before Gbnf_parser__Action.rename lib/action.ml(273):8313-8811
                                             (let
                                               (semvars/1911 =
                                                  (after Gbnf_parser__Action.rename lib/action.ml(273):8327-8369
                                                    (apply
                                                      (field_imm 42
                                                        (global Gbnf_parser__StringSet!))
                                                      (after Gbnf_parser__Action.rename lib/action.ml(273):8341-8359
                                                        (apply
                                                          apply_semvar/1863
                                                          phi/1910))
                                                      (field_imm 2 a/1904))))
                                               (before Gbnf_parser__Action.rename lib/action.ml(279):8650-8811
                                                 (let
                                                   (phi/1912 =
                                                      (after Gbnf_parser__Action.rename lib/action.ml(279):8660-8720
                                                        (apply
                                                          (field_imm 19
                                                            (global Stdlib__List!))
                                                          (function
                                                            param/1915
                                                            (funct-body Gbnf_parser__Action.rename.(fun) lib/action.ml(279):8669-8705
                                                              (let
                                                                (y/1914 =a
                                                                   (field_imm 1
                                                                    param/1915)
                                                                 x/1913 =a
                                                                   (field_imm 0
                                                                    param/1915))
                                                                (before Gbnf_parser__Action.rename.(fun) lib/action.ml(279):8684-8704
                                                                  (makeblock 0
                                                                    (makeblock 0
                                                                    x/1913)
                                                                    (makeblock 0
                                                                    y/1914))))))
                                                          (after Gbnf_parser__Action.rename lib/action.ml(279):8706-8720
                                                            (apply
                                                              bindings/1872
                                                              phi/1910)))))
                                                   (before Gbnf_parser__Action.rename lib/action.ml(280):8726-8811
                                                     (let
                                                       (expr/1916 =
                                                          (after Gbnf_parser__Action.rename lib/action.ml(280):8737-8767
                                                            (apply
                                                              (field_imm 24
                                                                (global Gbnf_parser__CodeBits!))
                                                              (makeblock 0
                                                                phi/1912
                                                                (field_imm 0
                                                                  a/1904)))))
                                                       (before Gbnf_parser__Action.rename lib/action.ml(282):8774-8811
                                                         (makeblock 0 (*,int,*,*)
                                                           expr/1916
                                                           standard/1909
                                                           semvars/1911
                                                           keywords/1907))))))))))))))))))))))
             *match*/3011 =
               (after Gbnf_parser__Action lib/action.ml(282)<ghost>:8811-8811
                 (apply (field_imm 5 (global Ppx_inline_test_lib!))
                   "gbnf_parser"))
             *match*/3009 =
               (after Gbnf_parser__Action lib/action.ml(282)<ghost>:8811-8811
                 (apply
                   (field_imm 1
                     (field_imm 5 (global Expect_test_collector!)))
                   0))
             *match*/3007 =
               (after Gbnf_parser__Action lib/action.ml(282)<ghost>:8811-8811
                 (apply
                   (field_imm 1
                     (field_imm 0
                       (global Ppx_bench_lib__Benchmark_accumulator!)))
                   0))
             *match*/3005 =
               (after Gbnf_parser__Action lib/action.ml(282)<ghost>:8811-8811
                 (apply (field_imm 4 (global Ppx_module_timer_runtime!))
                   #"Gbnf_parser__Action")))
            (pseudo <unknown location>
              (makeblock 0 from_stretch/1485 from_il_expr/1493 fv/1494
                fv_aux/1495 compose/1639 bind/1694 bv/1695 bv_aux/1696
                to_il_expr/1799 is_standard/1802 semvars/1805 keywords/1808
                has_syntaxerror/1811 has_beforeend/1814 posvars/1817
                vars/1826 define/1829 empty/1838 extend1/1839
                extend_semvar/1844 extend_posvar/1851 extend/1858 apply1/1859
                apply_semvar/1863 apply_subject/1867 bindings/1872
                restrict1/1875 restrict_semvar/1882 rename_keyword/1888
                rename/1900))))))))
(setglobal Gbnf_parser__Action!
  (let
    (*match*/3019 =
       (after Gbnf_parser__Action lib/action.ml(14)<ghost>:976-976
         (apply (field_imm 3 (global Ppx_module_timer_runtime!))
           #"Gbnf_parser__Action"))
     *match*/3017 =
       (after Gbnf_parser__Action lib/action.ml(14)<ghost>:976-976
         (apply
           (field_imm 0
             (field_imm 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
           "gbnf_parser"))
     *match*/3015 =
       (after Gbnf_parser__Action lib/action.ml(14)<ghost>:976-976
         (apply (field_imm 0 (field_imm 5 (global Expect_test_collector!)))
           "lib/action.ml"))
     *match*/3013 =
       (after Gbnf_parser__Action lib/action.ml(14)<ghost>:976-976
         (apply (field_imm 4 (global Ppx_inline_test_lib!)) "gbnf_parser"
           "action.ml"))
     from_stretch/1485 =
       (function xs/1487 s/1488
         (funct-body Gbnf_parser__Action.from_stretch lib/action.ml(41)<ghost>:1778-1961
           (before Gbnf_parser__Action.from_stretch lib/action.ml(42):1787-1961
             (makeblock 0 (*,int,*,*) (makeblock 19 s/1488)
               (after Gbnf_parser__Action.from_stretch lib/action.ml(45):1837-1873
                 (caml_string_equal (field_imm 0 s/1488) "fixme"))
               xs/1487
               (after Gbnf_parser__Action.from_stretch lib/action.ml(48):1912-1957
                 (apply
                   (field_imm 36
                     (field_imm 4 (global Gbnf_parser__Keyword!)))
                   (field_imm 5 s/1488))))))))
    (letrec
      (from_il_expr/1493
         (function e/1496
           (funct-body Gbnf_parser__Action.from_il_expr lib/action.ml(51)<ghost>:1984-2092
             (before Gbnf_parser__Action.from_il_expr lib/action.ml(52):1990-2092
               (makeblock 0 (*,int,*,*) e/1496 1
                 (after Gbnf_parser__Action.from_il_expr lib/action.ml(55):2049-2053
                   (apply fv/1494 e/1496))
                 (field_imm 0 (field_imm 4 (global Gbnf_parser__Keyword!)))))))
        fv/1494
          (function e/1497
            (funct-body Gbnf_parser__Action.fv lib/action.ml(62)<ghost>:2201-2231
              (before Gbnf_parser__Action.fv lib/action.ml(63):2207-2231
                (after Gbnf_parser__Action.fv lib/action.ml(63):2207-2231
                  (apply fv_aux/1495
                    (field_imm 0 (global Gbnf_parser__StringSet!)) e/1497)))))
        fv_aux/1495
          (function accu/1498 e/1499
            (funct-body Gbnf_parser__Action.fv_aux lib/action.ml(65)<ghost>:2244-2809
              (before Gbnf_parser__Action.fv_aux lib/action.ml(66):2255-2809
                (catch
                  (switch e/1499
                   case tag 0:
                    (let (x/1500 =a (field_imm 0 e/1499))
                      (before Gbnf_parser__Action.fv_aux lib/action.ml(68):2292-2312
                        (after Gbnf_parser__Action.fv_aux lib/action.ml(68):2292-2312
                          (apply
                            (field_imm 1 (global Gbnf_parser__StringSet!))
                            x/1500 accu/1498))))
                   case tag 2:
                    (let
                      (es/1503 =a (field_imm 1 e/1499)
                       e/1502 =a (field_imm 0 e/1499))
                      (before Gbnf_parser__Action.fv_aux lib/action.ml(78):2726-2762
                        (after Gbnf_parser__Action.fv_aux lib/action.ml(78):2726-2762
                          (apply (field_imm 25 (global Stdlib__List!))
                            fv_aux/1495 accu/1498
                            (makeblock 0 e/1502 es/1503)))))
                   case tag 12:
                    (let (es/1501 =a (field_imm 0 e/1499))
                      (before Gbnf_parser__Action.fv_aux lib/action.ml(76):2670-2699
                        (after Gbnf_parser__Action.fv_aux lib/action.ml(76):2670-2699
                          (apply (field_imm 25 (global Stdlib__List!))
                            fv_aux/1495 accu/1498 es/1501))))
                   case tag 19:
                    (before Gbnf_parser__Action.fv_aux lib/action.ml(74):2642-2646
                      accu/1498)
                   default: (exit 1))
                 with (1)
                  (before Gbnf_parser__Action.fv_aux lib/action.ml(80):2778-2790
                    (raise
                      (after Gbnf_parser__Action.fv_aux lib/action.ml(80):2778-2790
                        (makeblock 0 (global Assert_failure/28!)
                          [0: "lib/action.ml" 80 6])))))))))
      (let
        (compose/1639 =
           (function x/1641 a1/1642 a2/1643
             (funct-body Gbnf_parser__Action.compose lib/action.ml(86)<ghost>:2941-3490
               (before Gbnf_parser__Action.compose lib/action.ml(91):3242-3490
                 (makeblock 0 (*,int,*,*)
                   (after Gbnf_parser__Action.compose lib/action.ml(92):3260-3307
                     (apply (field_imm 22 (global Gbnf_parser__CodeBits!))
                       (makeblock 0
                         (makeblock 0
                           (makeblock 0 (makeblock 0 x/1641)
                             (field_imm 0 a1/1642))
                           0)
                         (field_imm 0 a2/1643))))
                   (&& (field_int 1 a1/1642) (field_int 1 a2/1643))
                   (after Gbnf_parser__Action.compose lib/action.ml(93):3325-3383
                     (apply (field_imm 4 (global Gbnf_parser__StringSet!))
                       (field_imm 2 a1/1642)
                       (after Gbnf_parser__Action.compose lib/action.ml(93):3352-3383
                         (apply
                           (field_imm 3 (global Gbnf_parser__StringSet!))
                           x/1641 (field_imm 2 a2/1643)))))
                   (after Gbnf_parser__Action.compose lib/action.ml(94):3401-3441
                     (apply
                       (field_imm 4
                         (field_imm 4 (global Gbnf_parser__Keyword!)))
                       (field_imm 3 a1/1642) (field_imm 3 a2/1643))))))))
        (letrec
          (bind/1694
             (function p/1697 x/1698 a/1699
               (funct-body Gbnf_parser__Action.bind lib/action.ml(100)<ghost>:3539-3735
                 (before Gbnf_parser__Action.bind lib/action.ml(101):3549-3735
                   (makeblock 0 (*,int,*,*)
                     (after Gbnf_parser__Action.bind lib/action.ml(102):3567-3607
                       (apply (field_imm 22 (global Gbnf_parser__CodeBits!))
                         (makeblock 0
                           (makeblock 0
                             (makeblock 0 p/1697 (makeblock 0 x/1698)) 0)
                           (field_imm 0 a/1699))))
                     (field_int 1 a/1699)
                     (after Gbnf_parser__Action.bind lib/action.ml(103):3625-3674
                       (apply (field_imm 1 (global Gbnf_parser__StringSet!))
                         x/1698
                         (after Gbnf_parser__Action.bind lib/action.ml(103):3641-3674
                           (apply
                             (field_imm 7 (global Gbnf_parser__StringSet!))
                             (field_imm 2 a/1699)
                             (after Gbnf_parser__Action.bind lib/action.ml(103):3667-3673
                               (apply bv/1695 p/1697))))))
                     (field_imm 3 a/1699)))))
            bv/1695
              (function p/1700
                (funct-body Gbnf_parser__Action.bv lib/action.ml(111)<ghost>:3870-3900
                  (before Gbnf_parser__Action.bv lib/action.ml(112):3876-3900
                    (after Gbnf_parser__Action.bv lib/action.ml(112):3876-3900
                      (apply bv_aux/1696
                        (field_imm 0 (global Gbnf_parser__StringSet!))
                        p/1700)))))
            bv_aux/1696
              (function accu/1701 p/1702
                (funct-body Gbnf_parser__Action.bv_aux lib/action.ml(114)<ghost>:3913-4119
                  (before Gbnf_parser__Action.bv_aux lib/action.ml(115):3924-4119
                    (catch
                      (switch p/1702
                       case int 0: (exit 2)
                       case int 1: (exit 2)
                       case tag 0:
                        (let (x/1703 =a (field_imm 0 p/1702))
                          (before Gbnf_parser__Action.bv_aux lib/action.ml(120):3999-4019
                            (after Gbnf_parser__Action.bv_aux lib/action.ml(120):3999-4019
                              (apply
                                (field_imm 1
                                  (global Gbnf_parser__StringSet!))
                                x/1703 accu/1701))))
                       case tag 3:
                        (let (ps/1704 =a (field_imm 0 p/1702))
                          (before Gbnf_parser__Action.bv_aux lib/action.ml(122):4043-4072
                            (after Gbnf_parser__Action.bv_aux lib/action.ml(122):4043-4072
                              (apply (field_imm 25 (global Stdlib__List!))
                                bv_aux/1696 accu/1701 ps/1704))))
                       default:
                        (before Gbnf_parser__Action.bv_aux lib/action.ml(124):4088-4100
                          (raise
                            (after Gbnf_parser__Action.bv_aux lib/action.ml(124):4088-4100
                              (makeblock 0 (global Assert_failure/28!)
                                [0: "lib/action.ml" 124 6])))))
                     with (2)
                      (before Gbnf_parser__Action.bv_aux lib/action.ml(118):3974-3978
                        accu/1701))))))
          (let
            (to_il_expr/1799 =
               (function action/1801
                 (funct-body Gbnf_parser__Action.to_il_expr lib/action.ml(130)<ghost>:4236-4258
                   (before Gbnf_parser__Action.to_il_expr lib/action.ml(131):4247-4258
                     (field_imm 0 action/1801))))
             is_standard/1802 =
               (function action/1804 : int
                 (funct-body Gbnf_parser__Action.is_standard lib/action.ml(133)<ghost>:4276-4302
                   (before Gbnf_parser__Action.is_standard lib/action.ml(134):4287-4302
                     (field_int 1 action/1804))))
             semvars/1805 =
               (function action/1807
                 (funct-body Gbnf_parser__Action.semvars lib/action.ml(136)<ghost>:4316-4341
                   (before Gbnf_parser__Action.semvars lib/action.ml(137):4327-4341
                     (field_imm 2 action/1807))))
             keywords/1808 =
               (function action/1810
                 (funct-body Gbnf_parser__Action.keywords lib/action.ml(139)<ghost>:4356-4382
                   (before Gbnf_parser__Action.keywords lib/action.ml(140):4367-4382
                     (field_imm 3 action/1810))))
             has_syntaxerror/1811 =
               (function action/1813 : int
                 (funct-body Gbnf_parser__Action.has_syntaxerror lib/action.ml(142)<ghost>:4404-4457
                   (before Gbnf_parser__Action.has_syntaxerror lib/action.ml(143):4415-4457
                     (after Gbnf_parser__Action.has_syntaxerror lib/action.ml(143):4415-4457
                       (apply
                         (field_imm 29
                           (field_imm 4 (global Gbnf_parser__Keyword!)))
                         0 (field_imm 3 action/1813))))))
             has_beforeend/1814 =
               (function action/1816 : int
                 (funct-body Gbnf_parser__Action.has_beforeend lib/action.ml(145)<ghost>:4477-4564
                   (before Gbnf_parser__Action.has_beforeend lib/action.ml(146):4488-4564
                     (after Gbnf_parser__Action.has_beforeend lib/action.ml(146):4488-4564
                       (apply
                         (field_imm 29
                           (field_imm 4 (global Gbnf_parser__Keyword!)))
                         [0: 0 2 1] (field_imm 3 action/1816))))))
             posvars/1817 =
               (function action/1819
                 (funct-body Gbnf_parser__Action.posvars lib/action.ml(148)<ghost>:4578-4817
                   (before Gbnf_parser__Action.posvars lib/action.ml(149):4589-4817
                     (after Gbnf_parser__Action.posvars lib/action.ml(149):4589-4817
                       (apply
                         (field_imm 23
                           (field_imm 4 (global Gbnf_parser__Keyword!)))
                         (function keyword/1820 accu/1821
                           (funct-body Gbnf_parser__Action.posvars.(fun) lib/action.ml(149):4605-4783
                             (before Gbnf_parser__Action.posvars.(fun) lib/action.ml(150):4630-4779
                               (if keyword/1820
                                 (let
                                   (f/1824 =a (field_imm 2 keyword/1820)
                                    w/1823 =a (field_imm 1 keyword/1820)
                                    s/1822 =a (field_imm 0 keyword/1820))
                                   (before Gbnf_parser__Action.posvars.(fun) lib/action.ml(154):4719-4779
                                     (let
                                       (x/1825 =
                                          (after Gbnf_parser__Action.posvars.(fun) lib/action.ml(154):4727-4747
                                            (apply
                                              (field_imm 3
                                                (global Gbnf_parser__Keyword!))
                                              s/1822 w/1823 f/1824)))
                                       (before Gbnf_parser__Action.posvars.(fun) lib/action.ml(155):4759-4779
                                         (after Gbnf_parser__Action.posvars.(fun) lib/action.ml(155):4759-4779
                                           (apply
                                             (field_imm 1
                                               (global Gbnf_parser__StringSet!))
                                             x/1825 accu/1821))))))
                                 (before Gbnf_parser__Action.posvars.(fun) lib/action.ml(152):4678-4682
                                   accu/1821)))))
                         (after Gbnf_parser__Action.posvars lib/action.ml(156):4784-4801
                           (apply keywords/1808 action/1819))
                         (field_imm 0 (global Gbnf_parser__StringSet!)))))))
             vars/1826 =
               (function action/1828
                 (funct-body Gbnf_parser__Action.vars lib/action.ml(158)<ghost>:4828-4888
                   (before Gbnf_parser__Action.vars lib/action.ml(159):4839-4888
                     (after Gbnf_parser__Action.vars lib/action.ml(159):4839-4888
                       (apply (field_imm 4 (global Gbnf_parser__StringSet!))
                         (after Gbnf_parser__Action.vars lib/action.ml(159):4855-4871
                           (apply semvars/1805 action/1828))
                         (after Gbnf_parser__Action.vars lib/action.ml(159):4872-4888
                           (apply posvars/1817 action/1828)))))))
             define/1829 =
               (function keyword/1831 keywords/1832 f/1833 action/1834
                 (funct-body Gbnf_parser__Action.define lib/action.ml(165)<ghost>:5037-5323
                   (before Gbnf_parser__Action.define lib/action.ml(166):5067-5323
                     (seq
                       (if
                         (after Gbnf_parser__Action.define lib/action.ml(166):5074-5114
                           (apply
                             (field_imm 29
                               (field_imm 4 (global Gbnf_parser__Keyword!)))
                             keyword/1831 (field_imm 3 action/1834)))
                         0
                         (raise
                           (after Gbnf_parser__Action.define lib/action.ml(166):5067-5114
                             (makeblock 0 (global Assert_failure/28!)
                               [0: "lib/action.ml" 166 2]))))
                       (before Gbnf_parser__Action.define lib/action.ml(167):5118-5323
                         (makeblock 0 (*,int,*,*)
                           (after Gbnf_parser__Action.define lib/action.ml(168):5136-5149
                             (apply f/1833 (field_imm 0 action/1834)))
                           (field_int 1 action/1834)
                           (field_imm 2 action/1834)
                           (after Gbnf_parser__Action.define lib/action.ml(171):5232-5319
                             (apply
                               (field_imm 4
                                 (field_imm 4 (global Gbnf_parser__Keyword!)))
                               keywords/1832
                               (after Gbnf_parser__Action.define lib/action.ml(172):5276-5319
                                 (apply
                                   (field_imm 3
                                     (field_imm 4
                                       (global Gbnf_parser__Keyword!)))
                                   keyword/1831 (field_imm 3 action/1834)))))))))))
             empty/1838 = [0: 0 0]
             extend1/1839 =
               (function x/1841 y/1842 var/1843
                 (funct-body Gbnf_parser__Action.extend1 lib/action.ml(193)<ghost>:5948-6036
                   (before Gbnf_parser__Action.extend1 lib/action.ml(194):5960-6036
                     (seq
                       (if
                         (not
                           (after Gbnf_parser__Action.extend1 lib/action.ml(194):5972-5994
                             (apply (field_imm 52 (global Stdlib__List!))
                               x/1841 var/1843)))
                         0
                         (raise
                           (after Gbnf_parser__Action.extend1 lib/action.ml(194):5960-5995
                             (makeblock 0 (global Assert_failure/28!)
                               [0: "lib/action.ml" 194 2]))))
                       (before Gbnf_parser__Action.extend1 lib/action.ml(195):5999-6036
                         (if
                           (after Gbnf_parser__Action.extend1 lib/action.ml(195):6002-6008
                             (caml_notequal x/1841 y/1842))
                           (before Gbnf_parser__Action.extend1 lib/action.ml(195):6014-6027
                             (makeblock 0 (makeblock 0 x/1841 y/1842)
                               var/1843))
                           (before Gbnf_parser__Action.extend1 lib/action.ml(195):6033-6036
                             var/1843)))))))
             extend_semvar/1844 =
               (function x/1846 y/1847 param/1850
                 (funct-body Gbnf_parser__Action.extend_semvar lib/action.ml(197)<ghost>:6056-6122
                   (let
                     (posvar/1849 =a (field_imm 1 param/1850)
                      semvar/1848 =a (field_imm 0 param/1850))
                     (before Gbnf_parser__Action.extend_semvar lib/action.ml(198):6083-6122
                       (makeblock 0
                         (after Gbnf_parser__Action.extend_semvar lib/action.ml(198):6094-6112
                           (apply extend1/1839 x/1846 y/1847 semvar/1848))
                         posvar/1849)))))
             extend_posvar/1851 =
               (function x/1853 y/1854 param/1857
                 (funct-body Gbnf_parser__Action.extend_posvar lib/action.ml(200)<ghost>:6142-6208
                   (let
                     (posvar/1856 =a (field_imm 1 param/1857)
                      semvar/1855 =a (field_imm 0 param/1857))
                     (before Gbnf_parser__Action.extend_posvar lib/action.ml(201):6169-6208
                       (makeblock 0 semvar/1855
                         (after Gbnf_parser__Action.extend_posvar lib/action.ml(201):6188-6206
                           (apply extend1/1839 x/1853 y/1854 posvar/1856)))))))
             extend/1858 = extend_semvar/1844
             apply1/1859 =
               (function var/1861 x/1862
                 (funct-body Gbnf_parser__Action.apply1 lib/action.ml(205)<ghost>:6249-6299
                   (before Gbnf_parser__Action.apply1 lib/action.ml(206):6259-6299
                     (try
                       (after Gbnf_parser__Action.apply1 lib/action.ml(206):6263-6279
                         (apply (field_imm 48 (global Stdlib__List!)) x/1862
                           var/1861))
                      with exn/2995
                       (if (== exn/2995 (field_imm 7 (global Stdlib!)))
                         (before Gbnf_parser__Action.apply1 lib/action.ml(206):6298-6299
                           x/1862)
                         (reraise exn/2995))))))
             apply_semvar/1863 =
               (function phi/1865 x/1866
                 (funct-body Gbnf_parser__Action.apply_semvar lib/action.ml(208)<ghost>:6318-6347
                   (before Gbnf_parser__Action.apply_semvar lib/action.ml(209):6328-6347
                     (after Gbnf_parser__Action.apply_semvar lib/action.ml(209):6328-6347
                       (apply apply1/1859 (field_imm 0 phi/1865) x/1866)))))
             apply_subject/1867 =
               (function phi/1869 subject/1870
                 (funct-body Gbnf_parser__Action.apply_subject lib/action.ml(211)<ghost>:6367-6496
                   (before Gbnf_parser__Action.apply_subject lib/action.ml(212):6383-6496
                     (if (isint subject/1870)
                       (before Gbnf_parser__Action.apply_subject lib/action.ml(215):6431-6438
                         subject/1870)
                       (let (x/1871 =a (field_imm 0 subject/1870))
                         (before Gbnf_parser__Action.apply_subject lib/action.ml(217):6465-6496
                           (makeblock 0
                             (after Gbnf_parser__Action.apply_subject lib/action.ml(217):6476-6496
                               (apply apply_semvar/1863 phi/1869 x/1871)))))))))
             bindings/1872 =
               (function phi/1874
                 (funct-body Gbnf_parser__Action.bindings lib/action.ml(219)<ghost>:6511-6542
                   (before Gbnf_parser__Action.bindings lib/action.ml(220):6519-6542
                     (after Gbnf_parser__Action.bindings lib/action.ml(220):6519-6542
                       (apply (field_imm 36 (global Stdlib!))
                         (field_imm 1 phi/1874) (field_imm 0 phi/1874))))))
             restrict1/1875 =
               (function xs/1877 var/1878
                 (funct-body Gbnf_parser__Action.restrict1 lib/action.ml(222)<ghost>:6558-6620
                   (before Gbnf_parser__Action.restrict1 lib/action.ml(223):6569-6620
                     (after Gbnf_parser__Action.restrict1 lib/action.ml(223):6569-6620
                       (apply (field_imm 43 (global Stdlib__List!))
                         (function param/1881 : int
                           (funct-body Gbnf_parser__Action.restrict1.(fun) lib/action.ml(223):6581-6616
                             (let (x/1879 =a (field_imm 0 param/1881))
                               (before Gbnf_parser__Action.restrict1.(fun) lib/action.ml(223):6597-6615
                                 (after Gbnf_parser__Action.restrict1.(fun) lib/action.ml(223):6597-6615
                                   (apply
                                     (field_imm 29
                                       (global Gbnf_parser__StringSet!))
                                     x/1879 xs/1877))))))
                         var/1878)))))
             restrict_semvar/1882 =
               (function xs/1884 param/1887
                 (funct-body Gbnf_parser__Action.restrict_semvar lib/action.ml(225)<ghost>:6642-6708
                   (let
                     (posvar/1886 =a (field_imm 1 param/1887)
                      semvar/1885 =a (field_imm 0 param/1887))
                     (before Gbnf_parser__Action.restrict_semvar lib/action.ml(226):6668-6708
                       (makeblock 0
                         (after Gbnf_parser__Action.restrict_semvar lib/action.ml(226):6679-6698
                           (apply restrict1/1875 xs/1884 semvar/1885))
                         posvar/1886)))))
             rename_keyword/1888 =
               (function f/1890 phi/1891 keyword/1892
                 (funct-body Gbnf_parser__Action.rename_keyword lib/action.ml(236)<ghost>:7131-7666
                   (before Gbnf_parser__Action.rename_keyword lib/action.ml(237):7173-7666
                     (if keyword/1892
                       (let
                         (flavor/1895 =a (field_imm 2 keyword/1892)
                          where/1894 =a (field_imm 1 keyword/1892)
                          subject/1893 =a (field_imm 0 keyword/1892))
                         (before Gbnf_parser__Action.rename_keyword lib/action.ml(241):7276-7666
                           (catch
                             (let
                               (*match*/2997 =
                                  (after Gbnf_parser__Action.rename_keyword lib/action.ml(242):7313-7331
                                    (apply f/1890
                                      (makeblock 0 (*,int) subject/1893
                                        where/1894))))
                               (if *match*/2997
                                 (let
                                   (*match*/2998 =a
                                      (field_imm 0 *match*/2997)
                                    where'/1899 =a (field_imm 1 *match*/2998)
                                    subject'/1898 =a
                                      (field_imm 0 *match*/2998))
                                   (before Gbnf_parser__Action.rename_keyword lib/action.ml(244):7386-7402
                                     (let
                                       (where'/3002 =a where'/1899
                                        subject'/3001 =a subject'/1898)
                                       (exit 6 subject'/3001 where'/3002))))
                                 (before Gbnf_parser__Action.rename_keyword lib/action.ml(246):7433-7466
                                   (let
                                     (where'/3000 =a where/1894
                                      subject'/2999 =
                                        (after Gbnf_parser__Action.rename_keyword lib/action.ml(246):7433-7459
                                          (apply apply_subject/1867
                                            (field_mut 0 phi/1891)
                                            subject/1893)))
                                     (exit 6 subject'/2999 where'/3000)))))
                            with (6 subject'/1896 where'/1897[int])
                             (before Gbnf_parser__Action.rename_keyword lib/action.ml(248):7482-7666
                               (seq
                                 (setfield_ptr 0 phi/1891
                                   (after Gbnf_parser__Action.rename_keyword lib/action.ml(249):7497-7623
                                     (apply extend_posvar/1851
                                       (after Gbnf_parser__Action.rename_keyword lib/action.ml(250):7521-7558
                                         (apply
                                           (field_imm 3
                                             (global Gbnf_parser__Keyword!))
                                           subject/1893 where/1894
                                           flavor/1895))
                                       (after Gbnf_parser__Action.rename_keyword lib/action.ml(251):7569-7608
                                         (apply
                                           (field_imm 3
                                             (global Gbnf_parser__Keyword!))
                                           subject'/1896 where'/1897
                                           flavor/1895))
                                       (field_mut 0 phi/1891))))
                                 (before Gbnf_parser__Action.rename_keyword lib/action.ml(253):7631-7666
                                   (makeblock 0 (*,int,int) subject'/1896
                                     where'/1897 flavor/1895)))))))
                       (before Gbnf_parser__Action.rename_keyword lib/action.ml(239):7217-7228
                         0)))))
             rename/1900 =
               (function f/1902 phi/1903 a/1904
                 (funct-body Gbnf_parser__Action.rename lib/action.ml(255)<ghost>:7679-8811
                   (before Gbnf_parser__Action.rename lib/action.ml(258):7745-8811
                     (let (keywords/1905 = (field_imm 3 a/1904))
                       (before Gbnf_parser__Action.rename lib/action.ml(259):7776-8811
                         (let (phi/1906 = (makemutable 0 phi/1903))
                           (before Gbnf_parser__Action.rename lib/action.ml(260):7799-8811
                             (let
                               (keywords/1907 =
                                  (after Gbnf_parser__Action.rename lib/action.ml(260):7814-7860
                                    (apply
                                      (field_imm 42
                                        (field_imm 4
                                          (global Gbnf_parser__Keyword!)))
                                      (after Gbnf_parser__Action.rename lib/action.ml(260):7829-7851
                                        (apply rename_keyword/1888 f/1902
                                          phi/1906))
                                      keywords/1905)))
                               (before Gbnf_parser__Action.rename lib/action.ml(261):7866-8811
                                 (let (phi/1908 = (field_mut 0 phi/1906))
                                   (before Gbnf_parser__Action.rename lib/action.ml(263):7887-8811
                                     (let
                                       (standard/1909 =[int]
                                          (field_int 1 a/1904))
                                       (before Gbnf_parser__Action.rename lib/action.ml(270):8210-8811
                                         (let
                                           (phi/1910 =
                                              (after Gbnf_parser__Action.rename lib/action.ml(270):8220-8249
                                                (apply restrict_semvar/1882
                                                  (field_imm 2 a/1904)
                                                  phi/1908)))
                                           (before Gbnf_parser__Action.rename lib/action.ml(273):8313-8811
                                             (let
                                               (semvars/1911 =
                                                  (after Gbnf_parser__Action.rename lib/action.ml(273):8327-8369
                                                    (apply
                                                      (field_imm 42
                                                        (global Gbnf_parser__StringSet!))
                                                      (after Gbnf_parser__Action.rename lib/action.ml(273):8341-8359
                                                        (apply
                                                          apply_semvar/1863
                                                          phi/1910))
                                                      (field_imm 2 a/1904))))
                                               (before Gbnf_parser__Action.rename lib/action.ml(279):8650-8811
                                                 (let
                                                   (phi/1912 =
                                                      (after Gbnf_parser__Action.rename lib/action.ml(279):8660-8720
                                                        (apply
                                                          (field_imm 19
                                                            (global Stdlib__List!))
                                                          (function
                                                            param/1915
                                                            (funct-body Gbnf_parser__Action.rename.(fun) lib/action.ml(279):8669-8705
                                                              (let
                                                                (y/1914 =a
                                                                   (field_imm 1
                                                                    param/1915)
                                                                 x/1913 =a
                                                                   (field_imm 0
                                                                    param/1915))
                                                                (before Gbnf_parser__Action.rename.(fun) lib/action.ml(279):8684-8704
                                                                  (makeblock 0
                                                                    (makeblock 0
                                                                    x/1913)
                                                                    (makeblock 0
                                                                    y/1914))))))
                                                          (after Gbnf_parser__Action.rename lib/action.ml(279):8706-8720
                                                            (apply
                                                              bindings/1872
                                                              phi/1910)))))
                                                   (before Gbnf_parser__Action.rename lib/action.ml(280):8726-8811
                                                     (let
                                                       (expr/1916 =
                                                          (after Gbnf_parser__Action.rename lib/action.ml(280):8737-8767
                                                            (apply
                                                              (field_imm 24
                                                                (global Gbnf_parser__CodeBits!))
                                                              (makeblock 0
                                                                phi/1912
                                                                (field_imm 0
                                                                  a/1904)))))
                                                       (before Gbnf_parser__Action.rename lib/action.ml(282):8774-8811
                                                         (makeblock 0 (*,int,*,*)
                                                           expr/1916
                                                           standard/1909
                                                           semvars/1911
                                                           keywords/1907))))))))))))))))))))))
             *match*/3011 =
               (after Gbnf_parser__Action lib/action.ml(282)<ghost>:8811-8811
                 (apply (field_imm 5 (global Ppx_inline_test_lib!))
                   "gbnf_parser"))
             *match*/3009 =
               (after Gbnf_parser__Action lib/action.ml(282)<ghost>:8811-8811
                 (apply
                   (field_imm 1
                     (field_imm 5 (global Expect_test_collector!)))
                   0))
             *match*/3007 =
               (after Gbnf_parser__Action lib/action.ml(282)<ghost>:8811-8811
                 (apply
                   (field_imm 1
                     (field_imm 0
                       (global Ppx_bench_lib__Benchmark_accumulator!)))
                   0))
             *match*/3005 =
               (after Gbnf_parser__Action lib/action.ml(282)<ghost>:8811-8811
                 (apply (field_imm 4 (global Ppx_module_timer_runtime!))
                   #"Gbnf_parser__Action")))
            (pseudo <unknown location>
              (makeblock 0 from_stretch/1485 from_il_expr/1493 fv/1494
                fv_aux/1495 compose/1639 bind/1694 bv/1695 bv_aux/1696
                to_il_expr/1799 is_standard/1802 semvars/1805 keywords/1808
                has_syntaxerror/1811 has_beforeend/1814 posvars/1817
                vars/1826 define/1829 empty/1838 extend1/1839
                extend_semvar/1844 extend_posvar/1851 extend/1858 apply1/1859
                apply_semvar/1863 apply_subject/1867 bindings/1872
                restrict1/1875 restrict_semvar/1882 rename_keyword/1888
                rename/1900))))))))
