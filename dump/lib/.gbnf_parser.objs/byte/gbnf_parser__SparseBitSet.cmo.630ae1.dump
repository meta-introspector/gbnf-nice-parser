[
  structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
    Pstr_attribute "ocaml.ppx.context"
    [
      structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
        Pstr_eval
        expression (_none_[0,0+-1]..[0,0+-1]) ghost
          Pexp_record
          [
            "tool_name" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_constant PConst_string("ppx_driver",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
            "include_dirs" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "load_path" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "open_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "for_package" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "None" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "debug" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_threads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_vmthreads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "recursive_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "principal" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "transparent_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unboxed_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unsafe_string" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "cookies" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                Some
                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                    Pexp_tuple
                    [
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_tuple
                        [
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_constant PConst_string("inline_tests",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                          expression (<command-line>[1,0+0]..[1,0+9])
                            Pexp_constant PConst_string("enabled",(<command-line>[1,0+1]..[1,0+8]),None)
                        ]
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                        Some
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_tuple
                            [
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_tuple
                                [
                                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                    Pexp_constant PConst_string("library-name",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                                  expression (<command-line>[1,0+0]..[1,0+13])
                                    Pexp_constant PConst_string("gbnf_parser",(<command-line>[1,0+1]..[1,0+12]),None)
                                ]
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                                None
                            ]
                    ]
          ]
          None
    ]
  structure_item (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
          Ppat_construct "()" (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
          None
        expression (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
          Pexp_apply
          expression (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
            Pexp_ident "Ppx_module_timer_runtime.record_start" (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
                Pexp_ident "Ppx_module_timer_runtime.__MODULE__" (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
          ]
    ]
  structure_item (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
          Ppat_construct "()" (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
          None
        expression (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
          Pexp_apply
          expression (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
            Pexp_ident "Ppx_bench_lib.Benchmark_accumulator.Current_libname.set" (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost,None)
          ]
    ]
  structure_item (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
          Ppat_construct "()" (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
          None
        expression (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
          Pexp_apply
          expression (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
            Pexp_ident "Expect_test_collector.Current_file.set" (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
          [
            <arg>
            Labelled "absolute_filename"
              expression (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
                Pexp_constant PConst_string("lib/SparseBitSet.ml",(lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost,None)
          ]
    ]
  structure_item (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
          Ppat_construct "()" (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
          None
        expression (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
          Pexp_apply
          expression (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
            Pexp_ident "Ppx_inline_test_lib.set_lib_and_partition" (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost,None)
            <arg>
            Nolabel
              expression (lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost
                Pexp_constant PConst_string("SparseBitSet.ml",(lib/SparseBitSet.ml[16,1057+0]..[16,1057+0]) ghost,None)
          ]
    ]
  structure_item (lib/SparseBitSet.ml[16,1057+0]..[17,1068+14])
    Pstr_module
    "A" (lib/SparseBitSet.ml[16,1057+7]..[16,1057+8])
      module_expr (lib/SparseBitSet.ml[17,1068+2]..[17,1068+14])
        Pmod_ident "AtomicBitSet" (lib/SparseBitSet.ml[17,1068+2]..[17,1068+14])
  structure_item (lib/SparseBitSet.ml[22,1212+0]..[24,1227+22])
    Pstr_type Rec
    [
      type_declaration "t" (lib/SparseBitSet.ml[22,1212+5]..[22,1212+6]) (lib/SparseBitSet.ml[22,1212+0]..[24,1227+22])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/SparseBitSet.ml[23,1221+2]..[23,1221+5])
                "N" (lib/SparseBitSet.ml[23,1221+4]..[23,1221+5])
                []
                None
              (lib/SparseBitSet.ml[24,1227+2]..[24,1227+22])
                "C" (lib/SparseBitSet.ml[24,1227+4]..[24,1227+5])
                [
                  core_type (lib/SparseBitSet.ml[24,1227+9]..[24,1227+12])
                    Ptyp_constr "int" (lib/SparseBitSet.ml[24,1227+9]..[24,1227+12])
                    []
                  core_type (lib/SparseBitSet.ml[24,1227+15]..[24,1227+18])
                    Ptyp_constr "A.t" (lib/SparseBitSet.ml[24,1227+15]..[24,1227+18])
                    []
                  core_type (lib/SparseBitSet.ml[24,1227+21]..[24,1227+22])
                    Ptyp_constr "t" (lib/SparseBitSet.ml[24,1227+21]..[24,1227+22])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/SparseBitSet.ml[26,1251+0]..[27,1266+5])
    Pstr_type Rec
    [
      type_declaration "element" (lib/SparseBitSet.ml[26,1251+5]..[26,1251+12]) (lib/SparseBitSet.ml[26,1251+0]..[27,1266+5])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/SparseBitSet.ml[27,1266+2]..[27,1266+5])
              Ptyp_constr "int" (lib/SparseBitSet.ml[27,1266+2]..[27,1266+5])
              []
    ]
  structure_item (lib/SparseBitSet.ml[29,1273+0]..[30,1285+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[29,1273+4]..[29,1273+9])
          Ppat_var "empty" (lib/SparseBitSet.ml[29,1273+4]..[29,1273+9])
        expression (lib/SparseBitSet.ml[30,1285+2]..[30,1285+3])
          Pexp_construct "N" (lib/SparseBitSet.ml[30,1285+2]..[30,1285+3])
          None
    ]
  structure_item (lib/SparseBitSet.ml[32,1290+0]..[36,1345+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[32,1290+4]..[32,1290+12])
          Ppat_var "is_empty" (lib/SparseBitSet.ml[32,1290+4]..[32,1290+12])
        expression (lib/SparseBitSet.ml[32,1290+15]..[36,1345+11])
          Pexp_function
          [
            <case>
              pattern (lib/SparseBitSet.ml[33,1314+4]..[33,1314+5])
                Ppat_construct "N" (lib/SparseBitSet.ml[33,1314+4]..[33,1314+5])
                None
              expression (lib/SparseBitSet.ml[34,1323+6]..[34,1323+10])
                Pexp_construct "true" (lib/SparseBitSet.ml[34,1323+6]..[34,1323+10])
                None
            <case>
              pattern (lib/SparseBitSet.ml[35,1334+4]..[35,1334+7])
                Ppat_construct "C" (lib/SparseBitSet.ml[35,1334+4]..[35,1334+5])
                Some
                  []
                  pattern (lib/SparseBitSet.ml[35,1334+6]..[35,1334+7])
                    Ppat_any
              expression (lib/SparseBitSet.ml[36,1345+6]..[36,1345+11])
                Pexp_construct "false" (lib/SparseBitSet.ml[36,1345+6]..[36,1345+11])
                None
          ]
    ]
  structure_item (lib/SparseBitSet.ml[38,1358+0]..[54,1866+50])
    Pstr_value Rec
    [
      <def>
        pattern (lib/SparseBitSet.ml[38,1358+8]..[38,1358+11])
          Ppat_var "add" (lib/SparseBitSet.ml[38,1358+8]..[38,1358+11])
        expression (lib/SparseBitSet.ml[38,1358+12]..[54,1866+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/SparseBitSet.ml[38,1358+12]..[38,1358+16])
            Ppat_var "base" (lib/SparseBitSet.ml[38,1358+12]..[38,1358+16])
          expression (lib/SparseBitSet.ml[38,1358+17]..[54,1866+50]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/SparseBitSet.ml[38,1358+17]..[38,1358+23])
              Ppat_var "offset" (lib/SparseBitSet.ml[38,1358+17]..[38,1358+23])
            expression (lib/SparseBitSet.ml[38,1358+24]..[54,1866+50]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/SparseBitSet.ml[38,1358+24]..[38,1358+25])
                Ppat_var "s" (lib/SparseBitSet.ml[38,1358+24]..[38,1358+25])
              expression (lib/SparseBitSet.ml[39,1386+2]..[54,1866+50])
                Pexp_match
                expression (lib/SparseBitSet.ml[39,1386+8]..[39,1386+9])
                  Pexp_ident "s" (lib/SparseBitSet.ml[39,1386+8]..[39,1386+9])
                [
                  <case>
                    pattern (lib/SparseBitSet.ml[40,1401+4]..[40,1401+5])
                      Ppat_construct "N" (lib/SparseBitSet.ml[40,1401+4]..[40,1401+5])
                      None
                    expression (lib/SparseBitSet.ml[42,1437+6]..[42,1437+37])
                      Pexp_construct "C" (lib/SparseBitSet.ml[42,1437+6]..[42,1437+7])
                      Some
                        expression (lib/SparseBitSet.ml[42,1437+8]..[42,1437+37])
                          Pexp_tuple
                          [
                            expression (lib/SparseBitSet.ml[42,1437+9]..[42,1437+13])
                              Pexp_ident "base" (lib/SparseBitSet.ml[42,1437+9]..[42,1437+13])
                            expression (lib/SparseBitSet.ml[42,1437+15]..[42,1437+33])
                              Pexp_apply
                              expression (lib/SparseBitSet.ml[42,1437+15]..[42,1437+26])
                                Pexp_ident "A.singleton" (lib/SparseBitSet.ml[42,1437+15]..[42,1437+26])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/SparseBitSet.ml[42,1437+27]..[42,1437+33])
                                    Pexp_ident "offset" (lib/SparseBitSet.ml[42,1437+27]..[42,1437+33])
                              ]
                            expression (lib/SparseBitSet.ml[42,1437+35]..[42,1437+36])
                              Pexp_construct "N" (lib/SparseBitSet.ml[42,1437+35]..[42,1437+36])
                              None
                          ]
                  <case>
                    pattern (lib/SparseBitSet.ml[43,1475+4]..[43,1475+20])
                      Ppat_construct "C" (lib/SparseBitSet.ml[43,1475+4]..[43,1475+5])
                      Some
                        []
                        pattern (lib/SparseBitSet.ml[43,1475+6]..[43,1475+20])
                          Ppat_tuple
                          [
                            pattern (lib/SparseBitSet.ml[43,1475+7]..[43,1475+11])
                              Ppat_var "addr" (lib/SparseBitSet.ml[43,1475+7]..[43,1475+11])
                            pattern (lib/SparseBitSet.ml[43,1475+13]..[43,1475+15])
                              Ppat_var "ss" (lib/SparseBitSet.ml[43,1475+13]..[43,1475+15])
                            pattern (lib/SparseBitSet.ml[43,1475+17]..[43,1475+19])
                              Ppat_var "qs" (lib/SparseBitSet.ml[43,1475+17]..[43,1475+19])
                          ]
                    expression (lib/SparseBitSet.ml[44,1499+6]..[54,1866+50])
                      Pexp_ifthenelse
                      expression (lib/SparseBitSet.ml[44,1499+9]..[44,1499+20])
                        Pexp_apply
                        expression (lib/SparseBitSet.ml[44,1499+14]..[44,1499+15])
                          Pexp_ident "<" (lib/SparseBitSet.ml[44,1499+14]..[44,1499+15])
                        [
                          <arg>
                          Nolabel
                            expression (lib/SparseBitSet.ml[44,1499+9]..[44,1499+13])
                              Pexp_ident "base" (lib/SparseBitSet.ml[44,1499+9]..[44,1499+13])
                          <arg>
                          Nolabel
                            expression (lib/SparseBitSet.ml[44,1499+16]..[44,1499+20])
                              Pexp_ident "addr" (lib/SparseBitSet.ml[44,1499+16]..[44,1499+20])
                        ]
                      expression (lib/SparseBitSet.ml[46,1556+8]..[46,1556+39])
                        Pexp_construct "C" (lib/SparseBitSet.ml[46,1556+8]..[46,1556+9])
                        Some
                          expression (lib/SparseBitSet.ml[46,1556+10]..[46,1556+39])
                            Pexp_tuple
                            [
                              expression (lib/SparseBitSet.ml[46,1556+11]..[46,1556+15])
                                Pexp_ident "base" (lib/SparseBitSet.ml[46,1556+11]..[46,1556+15])
                              expression (lib/SparseBitSet.ml[46,1556+17]..[46,1556+35])
                                Pexp_apply
                                expression (lib/SparseBitSet.ml[46,1556+17]..[46,1556+28])
                                  Pexp_ident "A.singleton" (lib/SparseBitSet.ml[46,1556+17]..[46,1556+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/SparseBitSet.ml[46,1556+29]..[46,1556+35])
                                      Pexp_ident "offset" (lib/SparseBitSet.ml[46,1556+29]..[46,1556+35])
                                ]
                              expression (lib/SparseBitSet.ml[46,1556+37]..[46,1556+38])
                                Pexp_ident "s" (lib/SparseBitSet.ml[46,1556+37]..[46,1556+38])
                            ]
                      Some
                        expression (lib/SparseBitSet.ml[47,1596+11]..[54,1866+50])
                          Pexp_ifthenelse
                          expression (lib/SparseBitSet.ml[47,1596+14]..[47,1596+25])
                            Pexp_apply
                            expression (lib/SparseBitSet.ml[47,1596+19]..[47,1596+20])
                              Pexp_ident "=" (lib/SparseBitSet.ml[47,1596+19]..[47,1596+20])
                            [
                              <arg>
                              Nolabel
                                expression (lib/SparseBitSet.ml[47,1596+14]..[47,1596+18])
                                  Pexp_ident "base" (lib/SparseBitSet.ml[47,1596+14]..[47,1596+18])
                              <arg>
                              Nolabel
                                expression (lib/SparseBitSet.ml[47,1596+21]..[47,1596+25])
                                  Pexp_ident "addr" (lib/SparseBitSet.ml[47,1596+21]..[47,1596+25])
                            ]
                          expression (lib/SparseBitSet.ml[49,1683+8]..[50,1720+55])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/SparseBitSet.ml[49,1683+12]..[49,1683+15])
                                  Ppat_var "ss'" (lib/SparseBitSet.ml[49,1683+12]..[49,1683+15])
                                expression (lib/SparseBitSet.ml[49,1683+18]..[49,1683+33])
                                  Pexp_apply
                                  expression (lib/SparseBitSet.ml[49,1683+18]..[49,1683+23])
                                    Pexp_ident "A.add" (lib/SparseBitSet.ml[49,1683+18]..[49,1683+23])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/SparseBitSet.ml[49,1683+24]..[49,1683+30])
                                        Pexp_ident "offset" (lib/SparseBitSet.ml[49,1683+24]..[49,1683+30])
                                    <arg>
                                    Nolabel
                                      expression (lib/SparseBitSet.ml[49,1683+31]..[49,1683+33])
                                        Pexp_ident "ss" (lib/SparseBitSet.ml[49,1683+31]..[49,1683+33])
                                  ]
                            ]
                            expression (lib/SparseBitSet.ml[50,1720+8]..[50,1720+55])
                              Pexp_ifthenelse
                              expression (lib/SparseBitSet.ml[50,1720+11]..[50,1720+25])
                                Pexp_apply
                                expression (lib/SparseBitSet.ml[50,1720+11]..[50,1720+18])
                                  Pexp_ident "A.equal" (lib/SparseBitSet.ml[50,1720+11]..[50,1720+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/SparseBitSet.ml[50,1720+19]..[50,1720+22])
                                      Pexp_ident "ss'" (lib/SparseBitSet.ml[50,1720+19]..[50,1720+22])
                                  <arg>
                                  Nolabel
                                    expression (lib/SparseBitSet.ml[50,1720+23]..[50,1720+25])
                                      Pexp_ident "ss" (lib/SparseBitSet.ml[50,1720+23]..[50,1720+25])
                                ]
                              expression (lib/SparseBitSet.ml[50,1720+31]..[50,1720+32])
                                Pexp_ident "s" (lib/SparseBitSet.ml[50,1720+31]..[50,1720+32])
                              Some
                                expression (lib/SparseBitSet.ml[50,1720+38]..[50,1720+55])
                                  Pexp_construct "C" (lib/SparseBitSet.ml[50,1720+38]..[50,1720+39])
                                  Some
                                    expression (lib/SparseBitSet.ml[50,1720+40]..[50,1720+55])
                                      Pexp_tuple
                                      [
                                        expression (lib/SparseBitSet.ml[50,1720+41]..[50,1720+45])
                                          Pexp_ident "addr" (lib/SparseBitSet.ml[50,1720+41]..[50,1720+45])
                                        expression (lib/SparseBitSet.ml[50,1720+47]..[50,1720+50])
                                          Pexp_ident "ss'" (lib/SparseBitSet.ml[50,1720+47]..[50,1720+50])
                                        expression (lib/SparseBitSet.ml[50,1720+52]..[50,1720+54])
                                          Pexp_ident "qs" (lib/SparseBitSet.ml[50,1720+52]..[50,1720+54])
                                      ]
                          Some
                            expression (lib/SparseBitSet.ml[53,1826+8]..[54,1866+50])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/SparseBitSet.ml[53,1826+12]..[53,1826+15])
                                    Ppat_var "qs'" (lib/SparseBitSet.ml[53,1826+12]..[53,1826+15])
                                  expression (lib/SparseBitSet.ml[53,1826+18]..[53,1826+36])
                                    Pexp_apply
                                    expression (lib/SparseBitSet.ml[53,1826+18]..[53,1826+21])
                                      Pexp_ident "add" (lib/SparseBitSet.ml[53,1826+18]..[53,1826+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/SparseBitSet.ml[53,1826+22]..[53,1826+26])
                                          Pexp_ident "base" (lib/SparseBitSet.ml[53,1826+22]..[53,1826+26])
                                      <arg>
                                      Nolabel
                                        expression (lib/SparseBitSet.ml[53,1826+27]..[53,1826+33])
                                          Pexp_ident "offset" (lib/SparseBitSet.ml[53,1826+27]..[53,1826+33])
                                      <arg>
                                      Nolabel
                                        expression (lib/SparseBitSet.ml[53,1826+34]..[53,1826+36])
                                          Pexp_ident "qs" (lib/SparseBitSet.ml[53,1826+34]..[53,1826+36])
                                    ]
                              ]
                              expression (lib/SparseBitSet.ml[54,1866+8]..[54,1866+50])
                                Pexp_ifthenelse
                                expression (lib/SparseBitSet.ml[54,1866+11]..[54,1866+20])
                                  Pexp_apply
                                  expression (lib/SparseBitSet.ml[54,1866+14]..[54,1866+16])
                                    Pexp_ident "==" (lib/SparseBitSet.ml[54,1866+14]..[54,1866+16])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/SparseBitSet.ml[54,1866+11]..[54,1866+13])
                                        Pexp_ident "qs" (lib/SparseBitSet.ml[54,1866+11]..[54,1866+13])
                                    <arg>
                                    Nolabel
                                      expression (lib/SparseBitSet.ml[54,1866+17]..[54,1866+20])
                                        Pexp_ident "qs'" (lib/SparseBitSet.ml[54,1866+17]..[54,1866+20])
                                  ]
                                expression (lib/SparseBitSet.ml[54,1866+26]..[54,1866+27])
                                  Pexp_ident "s" (lib/SparseBitSet.ml[54,1866+26]..[54,1866+27])
                                Some
                                  expression (lib/SparseBitSet.ml[54,1866+33]..[54,1866+50])
                                    Pexp_construct "C" (lib/SparseBitSet.ml[54,1866+33]..[54,1866+34])
                                    Some
                                      expression (lib/SparseBitSet.ml[54,1866+35]..[54,1866+50])
                                        Pexp_tuple
                                        [
                                          expression (lib/SparseBitSet.ml[54,1866+36]..[54,1866+40])
                                            Pexp_ident "addr" (lib/SparseBitSet.ml[54,1866+36]..[54,1866+40])
                                          expression (lib/SparseBitSet.ml[54,1866+42]..[54,1866+44])
                                            Pexp_ident "ss" (lib/SparseBitSet.ml[54,1866+42]..[54,1866+44])
                                          expression (lib/SparseBitSet.ml[54,1866+46]..[54,1866+49])
                                            Pexp_ident "qs'" (lib/SparseBitSet.ml[54,1866+46]..[54,1866+49])
                                        ]
                ]
    ]
  structure_item (lib/SparseBitSet.ml[56,1918+0]..[59,1991+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[56,1918+4]..[56,1918+7])
          Ppat_var "add" (lib/SparseBitSet.ml[56,1918+4]..[56,1918+7])
        expression (lib/SparseBitSet.ml[56,1918+8]..[59,1991+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/SparseBitSet.ml[56,1918+8]..[56,1918+9])
            Ppat_var "i" (lib/SparseBitSet.ml[56,1918+8]..[56,1918+9])
          expression (lib/SparseBitSet.ml[56,1918+10]..[59,1991+19]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/SparseBitSet.ml[56,1918+10]..[56,1918+11])
              Ppat_var "s" (lib/SparseBitSet.ml[56,1918+10]..[56,1918+11])
            expression (lib/SparseBitSet.ml[57,1932+2]..[59,1991+19])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/SparseBitSet.ml[57,1932+6]..[57,1932+12])
                    Ppat_var "offset" (lib/SparseBitSet.ml[57,1932+6]..[57,1932+12])
                  expression (lib/SparseBitSet.ml[57,1932+15]..[57,1932+28])
                    Pexp_apply
                    expression (lib/SparseBitSet.ml[57,1932+17]..[57,1932+20])
                      Pexp_ident "mod" (lib/SparseBitSet.ml[57,1932+17]..[57,1932+20])
                    [
                      <arg>
                      Nolabel
                        expression (lib/SparseBitSet.ml[57,1932+15]..[57,1932+16])
                          Pexp_ident "i" (lib/SparseBitSet.ml[57,1932+15]..[57,1932+16])
                      <arg>
                      Nolabel
                        expression (lib/SparseBitSet.ml[57,1932+21]..[57,1932+28])
                          Pexp_ident "A.bound" (lib/SparseBitSet.ml[57,1932+21]..[57,1932+28])
                    ]
              ]
              expression (lib/SparseBitSet.ml[58,1964+2]..[59,1991+19])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lib/SparseBitSet.ml[58,1964+6]..[58,1964+10])
                      Ppat_var "base" (lib/SparseBitSet.ml[58,1964+6]..[58,1964+10])
                    expression (lib/SparseBitSet.ml[58,1964+13]..[58,1964+23])
                      Pexp_apply
                      expression (lib/SparseBitSet.ml[58,1964+15]..[58,1964+16])
                        Pexp_ident "-" (lib/SparseBitSet.ml[58,1964+15]..[58,1964+16])
                      [
                        <arg>
                        Nolabel
                          expression (lib/SparseBitSet.ml[58,1964+13]..[58,1964+14])
                            Pexp_ident "i" (lib/SparseBitSet.ml[58,1964+13]..[58,1964+14])
                        <arg>
                        Nolabel
                          expression (lib/SparseBitSet.ml[58,1964+17]..[58,1964+23])
                            Pexp_ident "offset" (lib/SparseBitSet.ml[58,1964+17]..[58,1964+23])
                      ]
                ]
                expression (lib/SparseBitSet.ml[59,1991+2]..[59,1991+19])
                  Pexp_apply
                  expression (lib/SparseBitSet.ml[59,1991+2]..[59,1991+5])
                    Pexp_ident "add" (lib/SparseBitSet.ml[59,1991+2]..[59,1991+5])
                  [
                    <arg>
                    Nolabel
                      expression (lib/SparseBitSet.ml[59,1991+6]..[59,1991+10])
                        Pexp_ident "base" (lib/SparseBitSet.ml[59,1991+6]..[59,1991+10])
                    <arg>
                    Nolabel
                      expression (lib/SparseBitSet.ml[59,1991+11]..[59,1991+17])
                        Pexp_ident "offset" (lib/SparseBitSet.ml[59,1991+11]..[59,1991+17])
                    <arg>
                    Nolabel
                      expression (lib/SparseBitSet.ml[59,1991+18]..[59,1991+19])
                        Pexp_ident "s" (lib/SparseBitSet.ml[59,1991+18]..[59,1991+19])
                  ]
    ]
  structure_item (lib/SparseBitSet.ml[61,2012+0]..[65,2129+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[61,2012+4]..[61,2012+13])
          Ppat_var "singleton" (lib/SparseBitSet.ml[61,2012+4]..[61,2012+13])
        expression (lib/SparseBitSet.ml[61,2012+14]..[65,2129+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/SparseBitSet.ml[61,2012+14]..[61,2012+15])
            Ppat_var "i" (lib/SparseBitSet.ml[61,2012+14]..[61,2012+15])
          expression (lib/SparseBitSet.ml[63,2070+2]..[65,2129+33])
            Pexp_let Nonrec
            [
              <def>
                pattern (lib/SparseBitSet.ml[63,2070+6]..[63,2070+12])
                  Ppat_var "offset" (lib/SparseBitSet.ml[63,2070+6]..[63,2070+12])
                expression (lib/SparseBitSet.ml[63,2070+15]..[63,2070+28])
                  Pexp_apply
                  expression (lib/SparseBitSet.ml[63,2070+17]..[63,2070+20])
                    Pexp_ident "mod" (lib/SparseBitSet.ml[63,2070+17]..[63,2070+20])
                  [
                    <arg>
                    Nolabel
                      expression (lib/SparseBitSet.ml[63,2070+15]..[63,2070+16])
                        Pexp_ident "i" (lib/SparseBitSet.ml[63,2070+15]..[63,2070+16])
                    <arg>
                    Nolabel
                      expression (lib/SparseBitSet.ml[63,2070+21]..[63,2070+28])
                        Pexp_ident "A.bound" (lib/SparseBitSet.ml[63,2070+21]..[63,2070+28])
                  ]
            ]
            expression (lib/SparseBitSet.ml[64,2102+2]..[65,2129+33])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/SparseBitSet.ml[64,2102+6]..[64,2102+10])
                    Ppat_var "base" (lib/SparseBitSet.ml[64,2102+6]..[64,2102+10])
                  expression (lib/SparseBitSet.ml[64,2102+13]..[64,2102+23])
                    Pexp_apply
                    expression (lib/SparseBitSet.ml[64,2102+15]..[64,2102+16])
                      Pexp_ident "-" (lib/SparseBitSet.ml[64,2102+15]..[64,2102+16])
                    [
                      <arg>
                      Nolabel
                        expression (lib/SparseBitSet.ml[64,2102+13]..[64,2102+14])
                          Pexp_ident "i" (lib/SparseBitSet.ml[64,2102+13]..[64,2102+14])
                      <arg>
                      Nolabel
                        expression (lib/SparseBitSet.ml[64,2102+17]..[64,2102+23])
                          Pexp_ident "offset" (lib/SparseBitSet.ml[64,2102+17]..[64,2102+23])
                    ]
              ]
              expression (lib/SparseBitSet.ml[65,2129+2]..[65,2129+33])
                Pexp_construct "C" (lib/SparseBitSet.ml[65,2129+2]..[65,2129+3])
                Some
                  expression (lib/SparseBitSet.ml[65,2129+4]..[65,2129+33])
                    Pexp_tuple
                    [
                      expression (lib/SparseBitSet.ml[65,2129+5]..[65,2129+9])
                        Pexp_ident "base" (lib/SparseBitSet.ml[65,2129+5]..[65,2129+9])
                      expression (lib/SparseBitSet.ml[65,2129+11]..[65,2129+29])
                        Pexp_apply
                        expression (lib/SparseBitSet.ml[65,2129+11]..[65,2129+22])
                          Pexp_ident "A.singleton" (lib/SparseBitSet.ml[65,2129+11]..[65,2129+22])
                        [
                          <arg>
                          Nolabel
                            expression (lib/SparseBitSet.ml[65,2129+23]..[65,2129+29])
                              Pexp_ident "offset" (lib/SparseBitSet.ml[65,2129+23]..[65,2129+29])
                        ]
                      expression (lib/SparseBitSet.ml[65,2129+31]..[65,2129+32])
                        Pexp_construct "N" (lib/SparseBitSet.ml[65,2129+31]..[65,2129+32])
                        None
                    ]
    ]
  structure_item (lib/SparseBitSet.ml[67,2164+0]..[83,2612+50])
    Pstr_value Rec
    [
      <def>
        pattern (lib/SparseBitSet.ml[67,2164+8]..[67,2164+14])
          Ppat_var "remove" (lib/SparseBitSet.ml[67,2164+8]..[67,2164+14])
        expression (lib/SparseBitSet.ml[67,2164+15]..[83,2612+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/SparseBitSet.ml[67,2164+15]..[67,2164+19])
            Ppat_var "base" (lib/SparseBitSet.ml[67,2164+15]..[67,2164+19])
          expression (lib/SparseBitSet.ml[67,2164+20]..[83,2612+50]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/SparseBitSet.ml[67,2164+20]..[67,2164+26])
              Ppat_var "offset" (lib/SparseBitSet.ml[67,2164+20]..[67,2164+26])
            expression (lib/SparseBitSet.ml[67,2164+27]..[83,2612+50]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/SparseBitSet.ml[67,2164+27]..[67,2164+28])
                Ppat_var "s" (lib/SparseBitSet.ml[67,2164+27]..[67,2164+28])
              expression (lib/SparseBitSet.ml[68,2195+2]..[83,2612+50])
                Pexp_match
                expression (lib/SparseBitSet.ml[68,2195+8]..[68,2195+9])
                  Pexp_ident "s" (lib/SparseBitSet.ml[68,2195+8]..[68,2195+9])
                [
                  <case>
                    pattern (lib/SparseBitSet.ml[69,2210+4]..[69,2210+5])
                      Ppat_construct "N" (lib/SparseBitSet.ml[69,2210+4]..[69,2210+5])
                      None
                    expression (lib/SparseBitSet.ml[70,2219+6]..[70,2219+7])
                      Pexp_construct "N" (lib/SparseBitSet.ml[70,2219+6]..[70,2219+7])
                      None
                  <case>
                    pattern (lib/SparseBitSet.ml[71,2227+4]..[71,2227+20])
                      Ppat_construct "C" (lib/SparseBitSet.ml[71,2227+4]..[71,2227+5])
                      Some
                        []
                        pattern (lib/SparseBitSet.ml[71,2227+6]..[71,2227+20])
                          Ppat_tuple
                          [
                            pattern (lib/SparseBitSet.ml[71,2227+7]..[71,2227+11])
                              Ppat_var "addr" (lib/SparseBitSet.ml[71,2227+7]..[71,2227+11])
                            pattern (lib/SparseBitSet.ml[71,2227+13]..[71,2227+15])
                              Ppat_var "ss" (lib/SparseBitSet.ml[71,2227+13]..[71,2227+15])
                            pattern (lib/SparseBitSet.ml[71,2227+17]..[71,2227+19])
                              Ppat_var "qs" (lib/SparseBitSet.ml[71,2227+17]..[71,2227+19])
                          ]
                    expression (lib/SparseBitSet.ml[72,2251+6]..[83,2612+50])
                      Pexp_ifthenelse
                      expression (lib/SparseBitSet.ml[72,2251+9]..[72,2251+20])
                        Pexp_apply
                        expression (lib/SparseBitSet.ml[72,2251+14]..[72,2251+15])
                          Pexp_ident "<" (lib/SparseBitSet.ml[72,2251+14]..[72,2251+15])
                        [
                          <arg>
                          Nolabel
                            expression (lib/SparseBitSet.ml[72,2251+9]..[72,2251+13])
                              Pexp_ident "base" (lib/SparseBitSet.ml[72,2251+9]..[72,2251+13])
                          <arg>
                          Nolabel
                            expression (lib/SparseBitSet.ml[72,2251+16]..[72,2251+20])
                              Pexp_ident "addr" (lib/SparseBitSet.ml[72,2251+16]..[72,2251+20])
                        ]
                      expression (lib/SparseBitSet.ml[73,2277+8]..[73,2277+9])
                        Pexp_ident "s" (lib/SparseBitSet.ml[73,2277+8]..[73,2277+9])
                      Some
                        expression (lib/SparseBitSet.ml[74,2287+11]..[83,2612+50])
                          Pexp_ifthenelse
                          expression (lib/SparseBitSet.ml[74,2287+14]..[74,2287+25])
                            Pexp_apply
                            expression (lib/SparseBitSet.ml[74,2287+19]..[74,2287+20])
                              Pexp_ident "=" (lib/SparseBitSet.ml[74,2287+19]..[74,2287+20])
                            [
                              <arg>
                              Nolabel
                                expression (lib/SparseBitSet.ml[74,2287+14]..[74,2287+18])
                                  Pexp_ident "base" (lib/SparseBitSet.ml[74,2287+14]..[74,2287+18])
                              <arg>
                              Nolabel
                                expression (lib/SparseBitSet.ml[74,2287+21]..[74,2287+25])
                                  Pexp_ident "addr" (lib/SparseBitSet.ml[74,2287+21]..[74,2287+25])
                            ]
                          expression (lib/SparseBitSet.ml[76,2374+8]..[79,2458+60])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/SparseBitSet.ml[76,2374+12]..[76,2374+15])
                                  Ppat_var "ss'" (lib/SparseBitSet.ml[76,2374+12]..[76,2374+15])
                                expression (lib/SparseBitSet.ml[76,2374+18]..[76,2374+36])
                                  Pexp_apply
                                  expression (lib/SparseBitSet.ml[76,2374+18]..[76,2374+26])
                                    Pexp_ident "A.remove" (lib/SparseBitSet.ml[76,2374+18]..[76,2374+26])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/SparseBitSet.ml[76,2374+27]..[76,2374+33])
                                        Pexp_ident "offset" (lib/SparseBitSet.ml[76,2374+27]..[76,2374+33])
                                    <arg>
                                    Nolabel
                                      expression (lib/SparseBitSet.ml[76,2374+34]..[76,2374+36])
                                        Pexp_ident "ss" (lib/SparseBitSet.ml[76,2374+34]..[76,2374+36])
                                  ]
                            ]
                            expression (lib/SparseBitSet.ml[77,2414+8]..[79,2458+60])
                              Pexp_ifthenelse
                              expression (lib/SparseBitSet.ml[77,2414+11]..[77,2414+25])
                                Pexp_apply
                                expression (lib/SparseBitSet.ml[77,2414+11]..[77,2414+21])
                                  Pexp_ident "A.is_empty" (lib/SparseBitSet.ml[77,2414+11]..[77,2414+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/SparseBitSet.ml[77,2414+22]..[77,2414+25])
                                      Pexp_ident "ss'" (lib/SparseBitSet.ml[77,2414+22]..[77,2414+25])
                                ]
                              expression (lib/SparseBitSet.ml[78,2445+10]..[78,2445+12])
                                Pexp_ident "qs" (lib/SparseBitSet.ml[78,2445+10]..[78,2445+12])
                              Some
                                expression (lib/SparseBitSet.ml[79,2458+13]..[79,2458+60])
                                  Pexp_ifthenelse
                                  expression (lib/SparseBitSet.ml[79,2458+16]..[79,2458+30])
                                    Pexp_apply
                                    expression (lib/SparseBitSet.ml[79,2458+16]..[79,2458+23])
                                      Pexp_ident "A.equal" (lib/SparseBitSet.ml[79,2458+16]..[79,2458+23])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/SparseBitSet.ml[79,2458+24]..[79,2458+27])
                                          Pexp_ident "ss'" (lib/SparseBitSet.ml[79,2458+24]..[79,2458+27])
                                      <arg>
                                      Nolabel
                                        expression (lib/SparseBitSet.ml[79,2458+28]..[79,2458+30])
                                          Pexp_ident "ss" (lib/SparseBitSet.ml[79,2458+28]..[79,2458+30])
                                    ]
                                  expression (lib/SparseBitSet.ml[79,2458+36]..[79,2458+37])
                                    Pexp_ident "s" (lib/SparseBitSet.ml[79,2458+36]..[79,2458+37])
                                  Some
                                    expression (lib/SparseBitSet.ml[79,2458+43]..[79,2458+60])
                                      Pexp_construct "C" (lib/SparseBitSet.ml[79,2458+43]..[79,2458+44])
                                      Some
                                        expression (lib/SparseBitSet.ml[79,2458+45]..[79,2458+60])
                                          Pexp_tuple
                                          [
                                            expression (lib/SparseBitSet.ml[79,2458+46]..[79,2458+50])
                                              Pexp_ident "addr" (lib/SparseBitSet.ml[79,2458+46]..[79,2458+50])
                                            expression (lib/SparseBitSet.ml[79,2458+52]..[79,2458+55])
                                              Pexp_ident "ss'" (lib/SparseBitSet.ml[79,2458+52]..[79,2458+55])
                                            expression (lib/SparseBitSet.ml[79,2458+57]..[79,2458+59])
                                              Pexp_ident "qs" (lib/SparseBitSet.ml[79,2458+57]..[79,2458+59])
                                          ]
                          Some
                            expression (lib/SparseBitSet.ml[82,2569+8]..[83,2612+50])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/SparseBitSet.ml[82,2569+12]..[82,2569+15])
                                    Ppat_var "qs'" (lib/SparseBitSet.ml[82,2569+12]..[82,2569+15])
                                  expression (lib/SparseBitSet.ml[82,2569+18]..[82,2569+39])
                                    Pexp_apply
                                    expression (lib/SparseBitSet.ml[82,2569+18]..[82,2569+24])
                                      Pexp_ident "remove" (lib/SparseBitSet.ml[82,2569+18]..[82,2569+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/SparseBitSet.ml[82,2569+25]..[82,2569+29])
                                          Pexp_ident "base" (lib/SparseBitSet.ml[82,2569+25]..[82,2569+29])
                                      <arg>
                                      Nolabel
                                        expression (lib/SparseBitSet.ml[82,2569+30]..[82,2569+36])
                                          Pexp_ident "offset" (lib/SparseBitSet.ml[82,2569+30]..[82,2569+36])
                                      <arg>
                                      Nolabel
                                        expression (lib/SparseBitSet.ml[82,2569+37]..[82,2569+39])
                                          Pexp_ident "qs" (lib/SparseBitSet.ml[82,2569+37]..[82,2569+39])
                                    ]
                              ]
                              expression (lib/SparseBitSet.ml[83,2612+8]..[83,2612+50])
                                Pexp_ifthenelse
                                expression (lib/SparseBitSet.ml[83,2612+11]..[83,2612+20])
                                  Pexp_apply
                                  expression (lib/SparseBitSet.ml[83,2612+14]..[83,2612+16])
                                    Pexp_ident "==" (lib/SparseBitSet.ml[83,2612+14]..[83,2612+16])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/SparseBitSet.ml[83,2612+11]..[83,2612+13])
                                        Pexp_ident "qs" (lib/SparseBitSet.ml[83,2612+11]..[83,2612+13])
                                    <arg>
                                    Nolabel
                                      expression (lib/SparseBitSet.ml[83,2612+17]..[83,2612+20])
                                        Pexp_ident "qs'" (lib/SparseBitSet.ml[83,2612+17]..[83,2612+20])
                                  ]
                                expression (lib/SparseBitSet.ml[83,2612+26]..[83,2612+27])
                                  Pexp_ident "s" (lib/SparseBitSet.ml[83,2612+26]..[83,2612+27])
                                Some
                                  expression (lib/SparseBitSet.ml[83,2612+33]..[83,2612+50])
                                    Pexp_construct "C" (lib/SparseBitSet.ml[83,2612+33]..[83,2612+34])
                                    Some
                                      expression (lib/SparseBitSet.ml[83,2612+35]..[83,2612+50])
                                        Pexp_tuple
                                        [
                                          expression (lib/SparseBitSet.ml[83,2612+36]..[83,2612+40])
                                            Pexp_ident "addr" (lib/SparseBitSet.ml[83,2612+36]..[83,2612+40])
                                          expression (lib/SparseBitSet.ml[83,2612+42]..[83,2612+44])
                                            Pexp_ident "ss" (lib/SparseBitSet.ml[83,2612+42]..[83,2612+44])
                                          expression (lib/SparseBitSet.ml[83,2612+46]..[83,2612+49])
                                            Pexp_ident "qs'" (lib/SparseBitSet.ml[83,2612+46]..[83,2612+49])
                                        ]
                ]
    ]
  structure_item (lib/SparseBitSet.ml[85,2664+0]..[88,2740+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[85,2664+4]..[85,2664+10])
          Ppat_var "remove" (lib/SparseBitSet.ml[85,2664+4]..[85,2664+10])
        expression (lib/SparseBitSet.ml[85,2664+11]..[88,2740+22]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/SparseBitSet.ml[85,2664+11]..[85,2664+12])
            Ppat_var "i" (lib/SparseBitSet.ml[85,2664+11]..[85,2664+12])
          expression (lib/SparseBitSet.ml[85,2664+13]..[88,2740+22]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/SparseBitSet.ml[85,2664+13]..[85,2664+14])
              Ppat_var "s" (lib/SparseBitSet.ml[85,2664+13]..[85,2664+14])
            expression (lib/SparseBitSet.ml[86,2681+2]..[88,2740+22])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/SparseBitSet.ml[86,2681+6]..[86,2681+12])
                    Ppat_var "offset" (lib/SparseBitSet.ml[86,2681+6]..[86,2681+12])
                  expression (lib/SparseBitSet.ml[86,2681+15]..[86,2681+28])
                    Pexp_apply
                    expression (lib/SparseBitSet.ml[86,2681+17]..[86,2681+20])
                      Pexp_ident "mod" (lib/SparseBitSet.ml[86,2681+17]..[86,2681+20])
                    [
                      <arg>
                      Nolabel
                        expression (lib/SparseBitSet.ml[86,2681+15]..[86,2681+16])
                          Pexp_ident "i" (lib/SparseBitSet.ml[86,2681+15]..[86,2681+16])
                      <arg>
                      Nolabel
                        expression (lib/SparseBitSet.ml[86,2681+21]..[86,2681+28])
                          Pexp_ident "A.bound" (lib/SparseBitSet.ml[86,2681+21]..[86,2681+28])
                    ]
              ]
              expression (lib/SparseBitSet.ml[87,2713+2]..[88,2740+22])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lib/SparseBitSet.ml[87,2713+6]..[87,2713+10])
                      Ppat_var "base" (lib/SparseBitSet.ml[87,2713+6]..[87,2713+10])
                    expression (lib/SparseBitSet.ml[87,2713+13]..[87,2713+23])
                      Pexp_apply
                      expression (lib/SparseBitSet.ml[87,2713+15]..[87,2713+16])
                        Pexp_ident "-" (lib/SparseBitSet.ml[87,2713+15]..[87,2713+16])
                      [
                        <arg>
                        Nolabel
                          expression (lib/SparseBitSet.ml[87,2713+13]..[87,2713+14])
                            Pexp_ident "i" (lib/SparseBitSet.ml[87,2713+13]..[87,2713+14])
                        <arg>
                        Nolabel
                          expression (lib/SparseBitSet.ml[87,2713+17]..[87,2713+23])
                            Pexp_ident "offset" (lib/SparseBitSet.ml[87,2713+17]..[87,2713+23])
                      ]
                ]
                expression (lib/SparseBitSet.ml[88,2740+2]..[88,2740+22])
                  Pexp_apply
                  expression (lib/SparseBitSet.ml[88,2740+2]..[88,2740+8])
                    Pexp_ident "remove" (lib/SparseBitSet.ml[88,2740+2]..[88,2740+8])
                  [
                    <arg>
                    Nolabel
                      expression (lib/SparseBitSet.ml[88,2740+9]..[88,2740+13])
                        Pexp_ident "base" (lib/SparseBitSet.ml[88,2740+9]..[88,2740+13])
                    <arg>
                    Nolabel
                      expression (lib/SparseBitSet.ml[88,2740+14]..[88,2740+20])
                        Pexp_ident "offset" (lib/SparseBitSet.ml[88,2740+14]..[88,2740+20])
                    <arg>
                    Nolabel
                      expression (lib/SparseBitSet.ml[88,2740+21]..[88,2740+22])
                        Pexp_ident "s" (lib/SparseBitSet.ml[88,2740+21]..[88,2740+22])
                  ]
    ]
  structure_item (lib/SparseBitSet.ml[90,2764+0]..[100,2958+26])
    Pstr_value Rec
    [
      <def>
        pattern (lib/SparseBitSet.ml[90,2764+8]..[90,2764+11])
          Ppat_var "mem" (lib/SparseBitSet.ml[90,2764+8]..[90,2764+11])
        expression (lib/SparseBitSet.ml[90,2764+12]..[100,2958+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/SparseBitSet.ml[90,2764+12]..[90,2764+16])
            Ppat_var "base" (lib/SparseBitSet.ml[90,2764+12]..[90,2764+16])
          expression (lib/SparseBitSet.ml[90,2764+17]..[100,2958+26]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/SparseBitSet.ml[90,2764+17]..[90,2764+23])
              Ppat_var "offset" (lib/SparseBitSet.ml[90,2764+17]..[90,2764+23])
            expression (lib/SparseBitSet.ml[90,2764+24]..[100,2958+26]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/SparseBitSet.ml[90,2764+24]..[90,2764+25])
                Ppat_var "s" (lib/SparseBitSet.ml[90,2764+24]..[90,2764+25])
              expression (lib/SparseBitSet.ml[91,2792+2]..[100,2958+26])
                Pexp_match
                expression (lib/SparseBitSet.ml[91,2792+8]..[91,2792+9])
                  Pexp_ident "s" (lib/SparseBitSet.ml[91,2792+8]..[91,2792+9])
                [
                  <case>
                    pattern (lib/SparseBitSet.ml[92,2807+4]..[92,2807+5])
                      Ppat_construct "N" (lib/SparseBitSet.ml[92,2807+4]..[92,2807+5])
                      None
                    expression (lib/SparseBitSet.ml[93,2816+6]..[93,2816+11])
                      Pexp_construct "false" (lib/SparseBitSet.ml[93,2816+6]..[93,2816+11])
                      None
                  <case>
                    pattern (lib/SparseBitSet.ml[94,2828+4]..[94,2828+20])
                      Ppat_construct "C" (lib/SparseBitSet.ml[94,2828+4]..[94,2828+5])
                      Some
                        []
                        pattern (lib/SparseBitSet.ml[94,2828+6]..[94,2828+20])
                          Ppat_tuple
                          [
                            pattern (lib/SparseBitSet.ml[94,2828+7]..[94,2828+11])
                              Ppat_var "addr" (lib/SparseBitSet.ml[94,2828+7]..[94,2828+11])
                            pattern (lib/SparseBitSet.ml[94,2828+13]..[94,2828+15])
                              Ppat_var "ss" (lib/SparseBitSet.ml[94,2828+13]..[94,2828+15])
                            pattern (lib/SparseBitSet.ml[94,2828+17]..[94,2828+19])
                              Ppat_var "qs" (lib/SparseBitSet.ml[94,2828+17]..[94,2828+19])
                          ]
                    expression (lib/SparseBitSet.ml[95,2852+6]..[100,2958+26])
                      Pexp_ifthenelse
                      expression (lib/SparseBitSet.ml[95,2852+9]..[95,2852+20])
                        Pexp_apply
                        expression (lib/SparseBitSet.ml[95,2852+14]..[95,2852+15])
                          Pexp_ident "<" (lib/SparseBitSet.ml[95,2852+14]..[95,2852+15])
                        [
                          <arg>
                          Nolabel
                            expression (lib/SparseBitSet.ml[95,2852+9]..[95,2852+13])
                              Pexp_ident "base" (lib/SparseBitSet.ml[95,2852+9]..[95,2852+13])
                          <arg>
                          Nolabel
                            expression (lib/SparseBitSet.ml[95,2852+16]..[95,2852+20])
                              Pexp_ident "addr" (lib/SparseBitSet.ml[95,2852+16]..[95,2852+20])
                        ]
                      expression (lib/SparseBitSet.ml[96,2878+8]..[96,2878+13])
                        Pexp_construct "false" (lib/SparseBitSet.ml[96,2878+8]..[96,2878+13])
                        None
                      Some
                        expression (lib/SparseBitSet.ml[97,2892+11]..[100,2958+26])
                          Pexp_ifthenelse
                          expression (lib/SparseBitSet.ml[97,2892+14]..[97,2892+25])
                            Pexp_apply
                            expression (lib/SparseBitSet.ml[97,2892+19]..[97,2892+20])
                              Pexp_ident "=" (lib/SparseBitSet.ml[97,2892+19]..[97,2892+20])
                            [
                              <arg>
                              Nolabel
                                expression (lib/SparseBitSet.ml[97,2892+14]..[97,2892+18])
                                  Pexp_ident "base" (lib/SparseBitSet.ml[97,2892+14]..[97,2892+18])
                              <arg>
                              Nolabel
                                expression (lib/SparseBitSet.ml[97,2892+21]..[97,2892+25])
                                  Pexp_ident "addr" (lib/SparseBitSet.ml[97,2892+21]..[97,2892+25])
                            ]
                          expression (lib/SparseBitSet.ml[98,2923+8]..[98,2923+23])
                            Pexp_apply
                            expression (lib/SparseBitSet.ml[98,2923+8]..[98,2923+13])
                              Pexp_ident "A.mem" (lib/SparseBitSet.ml[98,2923+8]..[98,2923+13])
                            [
                              <arg>
                              Nolabel
                                expression (lib/SparseBitSet.ml[98,2923+14]..[98,2923+20])
                                  Pexp_ident "offset" (lib/SparseBitSet.ml[98,2923+14]..[98,2923+20])
                              <arg>
                              Nolabel
                                expression (lib/SparseBitSet.ml[98,2923+21]..[98,2923+23])
                                  Pexp_ident "ss" (lib/SparseBitSet.ml[98,2923+21]..[98,2923+23])
                            ]
                          Some
                            expression (lib/SparseBitSet.ml[100,2958+8]..[100,2958+26])
                              Pexp_apply
                              expression (lib/SparseBitSet.ml[100,2958+8]..[100,2958+11])
                                Pexp_ident "mem" (lib/SparseBitSet.ml[100,2958+8]..[100,2958+11])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/SparseBitSet.ml[100,2958+12]..[100,2958+16])
                                    Pexp_ident "base" (lib/SparseBitSet.ml[100,2958+12]..[100,2958+16])
                                <arg>
                                Nolabel
                                  expression (lib/SparseBitSet.ml[100,2958+17]..[100,2958+23])
                                    Pexp_ident "offset" (lib/SparseBitSet.ml[100,2958+17]..[100,2958+23])
                                <arg>
                                Nolabel
                                  expression (lib/SparseBitSet.ml[100,2958+24]..[100,2958+26])
                                    Pexp_ident "qs" (lib/SparseBitSet.ml[100,2958+24]..[100,2958+26])
                              ]
                ]
    ]
  structure_item (lib/SparseBitSet.ml[102,2986+0]..[105,3059+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[102,2986+4]..[102,2986+7])
          Ppat_var "mem" (lib/SparseBitSet.ml[102,2986+4]..[102,2986+7])
        expression (lib/SparseBitSet.ml[102,2986+8]..[105,3059+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/SparseBitSet.ml[102,2986+8]..[102,2986+9])
            Ppat_var "i" (lib/SparseBitSet.ml[102,2986+8]..[102,2986+9])
          expression (lib/SparseBitSet.ml[102,2986+10]..[105,3059+19]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/SparseBitSet.ml[102,2986+10]..[102,2986+11])
              Ppat_var "s" (lib/SparseBitSet.ml[102,2986+10]..[102,2986+11])
            expression (lib/SparseBitSet.ml[103,3000+2]..[105,3059+19])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/SparseBitSet.ml[103,3000+6]..[103,3000+12])
                    Ppat_var "offset" (lib/SparseBitSet.ml[103,3000+6]..[103,3000+12])
                  expression (lib/SparseBitSet.ml[103,3000+15]..[103,3000+28])
                    Pexp_apply
                    expression (lib/SparseBitSet.ml[103,3000+17]..[103,3000+20])
                      Pexp_ident "mod" (lib/SparseBitSet.ml[103,3000+17]..[103,3000+20])
                    [
                      <arg>
                      Nolabel
                        expression (lib/SparseBitSet.ml[103,3000+15]..[103,3000+16])
                          Pexp_ident "i" (lib/SparseBitSet.ml[103,3000+15]..[103,3000+16])
                      <arg>
                      Nolabel
                        expression (lib/SparseBitSet.ml[103,3000+21]..[103,3000+28])
                          Pexp_ident "A.bound" (lib/SparseBitSet.ml[103,3000+21]..[103,3000+28])
                    ]
              ]
              expression (lib/SparseBitSet.ml[104,3032+2]..[105,3059+19])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lib/SparseBitSet.ml[104,3032+6]..[104,3032+10])
                      Ppat_var "base" (lib/SparseBitSet.ml[104,3032+6]..[104,3032+10])
                    expression (lib/SparseBitSet.ml[104,3032+13]..[104,3032+23])
                      Pexp_apply
                      expression (lib/SparseBitSet.ml[104,3032+15]..[104,3032+16])
                        Pexp_ident "-" (lib/SparseBitSet.ml[104,3032+15]..[104,3032+16])
                      [
                        <arg>
                        Nolabel
                          expression (lib/SparseBitSet.ml[104,3032+13]..[104,3032+14])
                            Pexp_ident "i" (lib/SparseBitSet.ml[104,3032+13]..[104,3032+14])
                        <arg>
                        Nolabel
                          expression (lib/SparseBitSet.ml[104,3032+17]..[104,3032+23])
                            Pexp_ident "offset" (lib/SparseBitSet.ml[104,3032+17]..[104,3032+23])
                      ]
                ]
                expression (lib/SparseBitSet.ml[105,3059+2]..[105,3059+19])
                  Pexp_apply
                  expression (lib/SparseBitSet.ml[105,3059+2]..[105,3059+5])
                    Pexp_ident "mem" (lib/SparseBitSet.ml[105,3059+2]..[105,3059+5])
                  [
                    <arg>
                    Nolabel
                      expression (lib/SparseBitSet.ml[105,3059+6]..[105,3059+10])
                        Pexp_ident "base" (lib/SparseBitSet.ml[105,3059+6]..[105,3059+10])
                    <arg>
                    Nolabel
                      expression (lib/SparseBitSet.ml[105,3059+11]..[105,3059+17])
                        Pexp_ident "offset" (lib/SparseBitSet.ml[105,3059+11]..[105,3059+17])
                    <arg>
                    Nolabel
                      expression (lib/SparseBitSet.ml[105,3059+18]..[105,3059+19])
                        Pexp_ident "s" (lib/SparseBitSet.ml[105,3059+18]..[105,3059+19])
                  ]
    ]
  structure_item (lib/SparseBitSet.ml[107,3080+0]..[113,3211+20])
    Pstr_value Rec
    [
      <def>
        pattern (lib/SparseBitSet.ml[107,3080+8]..[107,3080+12])
          Ppat_var "fold" (lib/SparseBitSet.ml[107,3080+8]..[107,3080+12])
        expression (lib/SparseBitSet.ml[107,3080+13]..[113,3211+20]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/SparseBitSet.ml[107,3080+13]..[107,3080+14])
            Ppat_var "f" (lib/SparseBitSet.ml[107,3080+13]..[107,3080+14])
          expression (lib/SparseBitSet.ml[107,3080+15]..[113,3211+20]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/SparseBitSet.ml[107,3080+15]..[107,3080+16])
              Ppat_var "s" (lib/SparseBitSet.ml[107,3080+15]..[107,3080+16])
            expression (lib/SparseBitSet.ml[107,3080+17]..[113,3211+20]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lib/SparseBitSet.ml[107,3080+17]..[107,3080+21])
                Ppat_var "accu" (lib/SparseBitSet.ml[107,3080+17]..[107,3080+21])
              expression (lib/SparseBitSet.ml[108,3104+2]..[113,3211+20])
                Pexp_match
                expression (lib/SparseBitSet.ml[108,3104+8]..[108,3104+9])
                  Pexp_ident "s" (lib/SparseBitSet.ml[108,3104+8]..[108,3104+9])
                [
                  <case>
                    pattern (lib/SparseBitSet.ml[109,3119+4]..[109,3119+5])
                      Ppat_construct "N" (lib/SparseBitSet.ml[109,3119+4]..[109,3119+5])
                      None
                    expression (lib/SparseBitSet.ml[110,3128+6]..[110,3128+10])
                      Pexp_ident "accu" (lib/SparseBitSet.ml[110,3128+6]..[110,3128+10])
                  <case>
                    pattern (lib/SparseBitSet.ml[111,3139+4]..[111,3139+20])
                      Ppat_construct "C" (lib/SparseBitSet.ml[111,3139+4]..[111,3139+5])
                      Some
                        []
                        pattern (lib/SparseBitSet.ml[111,3139+6]..[111,3139+20])
                          Ppat_tuple
                          [
                            pattern (lib/SparseBitSet.ml[111,3139+7]..[111,3139+11])
                              Ppat_var "addr" (lib/SparseBitSet.ml[111,3139+7]..[111,3139+11])
                            pattern (lib/SparseBitSet.ml[111,3139+13]..[111,3139+15])
                              Ppat_var "ss" (lib/SparseBitSet.ml[111,3139+13]..[111,3139+15])
                            pattern (lib/SparseBitSet.ml[111,3139+17]..[111,3139+19])
                              Ppat_var "qs" (lib/SparseBitSet.ml[111,3139+17]..[111,3139+19])
                          ]
                    expression (lib/SparseBitSet.ml[112,3163+6]..[113,3211+20])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/SparseBitSet.ml[112,3163+10]..[112,3163+14])
                            Ppat_var "accu" (lib/SparseBitSet.ml[112,3163+10]..[112,3163+14])
                          expression (lib/SparseBitSet.ml[112,3163+17]..[112,3163+44])
                            Pexp_apply
                            expression (lib/SparseBitSet.ml[112,3163+17]..[112,3163+29])
                              Pexp_ident "A.fold_delta" (lib/SparseBitSet.ml[112,3163+17]..[112,3163+29])
                            [
                              <arg>
                              Nolabel
                                expression (lib/SparseBitSet.ml[112,3163+30]..[112,3163+34])
                                  Pexp_ident "addr" (lib/SparseBitSet.ml[112,3163+30]..[112,3163+34])
                              <arg>
                              Nolabel
                                expression (lib/SparseBitSet.ml[112,3163+35]..[112,3163+36])
                                  Pexp_ident "f" (lib/SparseBitSet.ml[112,3163+35]..[112,3163+36])
                              <arg>
                              Nolabel
                                expression (lib/SparseBitSet.ml[112,3163+37]..[112,3163+39])
                                  Pexp_ident "ss" (lib/SparseBitSet.ml[112,3163+37]..[112,3163+39])
                              <arg>
                              Nolabel
                                expression (lib/SparseBitSet.ml[112,3163+40]..[112,3163+44])
                                  Pexp_ident "accu" (lib/SparseBitSet.ml[112,3163+40]..[112,3163+44])
                            ]
                      ]
                      expression (lib/SparseBitSet.ml[113,3211+6]..[113,3211+20])
                        Pexp_apply
                        expression (lib/SparseBitSet.ml[113,3211+6]..[113,3211+10])
                          Pexp_ident "fold" (lib/SparseBitSet.ml[113,3211+6]..[113,3211+10])
                        [
                          <arg>
                          Nolabel
                            expression (lib/SparseBitSet.ml[113,3211+11]..[113,3211+12])
                              Pexp_ident "f" (lib/SparseBitSet.ml[113,3211+11]..[113,3211+12])
                          <arg>
                          Nolabel
                            expression (lib/SparseBitSet.ml[113,3211+13]..[113,3211+15])
                              Pexp_ident "qs" (lib/SparseBitSet.ml[113,3211+13]..[113,3211+15])
                          <arg>
                          Nolabel
                            expression (lib/SparseBitSet.ml[113,3211+16]..[113,3211+20])
                              Pexp_ident "accu" (lib/SparseBitSet.ml[113,3211+16]..[113,3211+20])
                        ]
                ]
    ]
  structure_item (lib/SparseBitSet.ml[115,3233+0]..[121,3339+15])
    Pstr_value Rec
    [
      <def>
        pattern (lib/SparseBitSet.ml[115,3233+8]..[115,3233+12])
          Ppat_var "iter" (lib/SparseBitSet.ml[115,3233+8]..[115,3233+12])
        expression (lib/SparseBitSet.ml[115,3233+13]..[121,3339+15]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/SparseBitSet.ml[115,3233+13]..[115,3233+14])
            Ppat_var "f" (lib/SparseBitSet.ml[115,3233+13]..[115,3233+14])
          expression (lib/SparseBitSet.ml[115,3233+15]..[121,3339+15]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/SparseBitSet.ml[115,3233+15]..[115,3233+16])
              Ppat_var "s" (lib/SparseBitSet.ml[115,3233+15]..[115,3233+16])
            expression (lib/SparseBitSet.ml[116,3252+2]..[121,3339+15])
              Pexp_match
              expression (lib/SparseBitSet.ml[116,3252+8]..[116,3252+9])
                Pexp_ident "s" (lib/SparseBitSet.ml[116,3252+8]..[116,3252+9])
              [
                <case>
                  pattern (lib/SparseBitSet.ml[117,3267+4]..[117,3267+5])
                    Ppat_construct "N" (lib/SparseBitSet.ml[117,3267+4]..[117,3267+5])
                    None
                  expression (lib/SparseBitSet.ml[118,3276+6]..[118,3276+8])
                    Pexp_construct "()" (lib/SparseBitSet.ml[118,3276+6]..[118,3276+8])
                    None
                <case>
                  pattern (lib/SparseBitSet.ml[119,3285+4]..[119,3285+20])
                    Ppat_construct "C" (lib/SparseBitSet.ml[119,3285+4]..[119,3285+5])
                    Some
                      []
                      pattern (lib/SparseBitSet.ml[119,3285+6]..[119,3285+20])
                        Ppat_tuple
                        [
                          pattern (lib/SparseBitSet.ml[119,3285+7]..[119,3285+11])
                            Ppat_var "addr" (lib/SparseBitSet.ml[119,3285+7]..[119,3285+11])
                          pattern (lib/SparseBitSet.ml[119,3285+13]..[119,3285+15])
                            Ppat_var "ss" (lib/SparseBitSet.ml[119,3285+13]..[119,3285+15])
                          pattern (lib/SparseBitSet.ml[119,3285+17]..[119,3285+19])
                            Ppat_var "qs" (lib/SparseBitSet.ml[119,3285+17]..[119,3285+19])
                        ]
                  expression (lib/SparseBitSet.ml[120,3309+6]..[121,3339+15])
                    Pexp_sequence
                    expression (lib/SparseBitSet.ml[120,3309+6]..[120,3309+28])
                      Pexp_apply
                      expression (lib/SparseBitSet.ml[120,3309+6]..[120,3309+18])
                        Pexp_ident "A.iter_delta" (lib/SparseBitSet.ml[120,3309+6]..[120,3309+18])
                      [
                        <arg>
                        Nolabel
                          expression (lib/SparseBitSet.ml[120,3309+19]..[120,3309+23])
                            Pexp_ident "addr" (lib/SparseBitSet.ml[120,3309+19]..[120,3309+23])
                        <arg>
                        Nolabel
                          expression (lib/SparseBitSet.ml[120,3309+24]..[120,3309+25])
                            Pexp_ident "f" (lib/SparseBitSet.ml[120,3309+24]..[120,3309+25])
                        <arg>
                        Nolabel
                          expression (lib/SparseBitSet.ml[120,3309+26]..[120,3309+28])
                            Pexp_ident "ss" (lib/SparseBitSet.ml[120,3309+26]..[120,3309+28])
                      ]
                    expression (lib/SparseBitSet.ml[121,3339+6]..[121,3339+15])
                      Pexp_apply
                      expression (lib/SparseBitSet.ml[121,3339+6]..[121,3339+10])
                        Pexp_ident "iter" (lib/SparseBitSet.ml[121,3339+6]..[121,3339+10])
                      [
                        <arg>
                        Nolabel
                          expression (lib/SparseBitSet.ml[121,3339+11]..[121,3339+12])
                            Pexp_ident "f" (lib/SparseBitSet.ml[121,3339+11]..[121,3339+12])
                        <arg>
                        Nolabel
                          expression (lib/SparseBitSet.ml[121,3339+13]..[121,3339+15])
                            Pexp_ident "qs" (lib/SparseBitSet.ml[121,3339+13]..[121,3339+15])
                      ]
              ]
    ]
  structure_item (lib/SparseBitSet.ml[123,3356+0]..[129,3463+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[123,3356+4]..[123,3356+16])
          Ppat_var "is_singleton" (lib/SparseBitSet.ml[123,3356+4]..[123,3356+16])
        expression (lib/SparseBitSet.ml[123,3356+17]..[129,3463+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/SparseBitSet.ml[123,3356+17]..[123,3356+18])
            Ppat_var "s" (lib/SparseBitSet.ml[123,3356+17]..[123,3356+18])
          expression (lib/SparseBitSet.ml[124,3377+2]..[129,3463+11])
            Pexp_match
            expression (lib/SparseBitSet.ml[124,3377+8]..[124,3377+9])
              Pexp_ident "s" (lib/SparseBitSet.ml[124,3377+8]..[124,3377+9])
            [
              <case>
                pattern (lib/SparseBitSet.ml[125,3392+4]..[125,3392+16])
                  Ppat_construct "C" (lib/SparseBitSet.ml[125,3392+4]..[125,3392+5])
                  Some
                    []
                    pattern (lib/SparseBitSet.ml[125,3392+6]..[125,3392+16])
                      Ppat_tuple
                      [
                        pattern (lib/SparseBitSet.ml[125,3392+7]..[125,3392+8])
                          Ppat_any
                        pattern (lib/SparseBitSet.ml[125,3392+10]..[125,3392+12])
                          Ppat_var "ss" (lib/SparseBitSet.ml[125,3392+10]..[125,3392+12])
                        pattern (lib/SparseBitSet.ml[125,3392+14]..[125,3392+15])
                          Ppat_construct "N" (lib/SparseBitSet.ml[125,3392+14]..[125,3392+15])
                          None
                      ]
                expression (lib/SparseBitSet.ml[126,3412+6]..[126,3412+23])
                  Pexp_apply
                  expression (lib/SparseBitSet.ml[126,3412+6]..[126,3412+20])
                    Pexp_ident "A.is_singleton" (lib/SparseBitSet.ml[126,3412+6]..[126,3412+20])
                  [
                    <arg>
                    Nolabel
                      expression (lib/SparseBitSet.ml[126,3412+21]..[126,3412+23])
                        Pexp_ident "ss" (lib/SparseBitSet.ml[126,3412+21]..[126,3412+23])
                  ]
              <case>
                pattern (lib/SparseBitSet.ml[127,3436+4]..[128,3454+5])
                  Ppat_or
                  pattern (lib/SparseBitSet.ml[127,3436+4]..[127,3436+17])
                    Ppat_construct "C" (lib/SparseBitSet.ml[127,3436+4]..[127,3436+5])
                    Some
                      []
                      pattern (lib/SparseBitSet.ml[127,3436+6]..[127,3436+17])
                        Ppat_tuple
                        [
                          pattern (lib/SparseBitSet.ml[127,3436+7]..[127,3436+8])
                            Ppat_any
                          pattern (lib/SparseBitSet.ml[127,3436+10]..[127,3436+11])
                            Ppat_any
                          pattern (lib/SparseBitSet.ml[127,3436+13]..[127,3436+16])
                            Ppat_construct "C" (lib/SparseBitSet.ml[127,3436+13]..[127,3436+14])
                            Some
                              []
                              pattern (lib/SparseBitSet.ml[127,3436+15]..[127,3436+16])
                                Ppat_any
                        ]
                  pattern (lib/SparseBitSet.ml[128,3454+4]..[128,3454+5])
                    Ppat_construct "N" (lib/SparseBitSet.ml[128,3454+4]..[128,3454+5])
                    None
                expression (lib/SparseBitSet.ml[129,3463+6]..[129,3463+11])
                  Pexp_construct "false" (lib/SparseBitSet.ml[129,3463+6]..[129,3463+11])
                  None
            ]
    ]
  structure_item (lib/SparseBitSet.ml[131,3476+0]..[137,3611+10])
    Pstr_value Rec
    [
      <def>
        pattern (lib/SparseBitSet.ml[131,3476+8]..[131,3476+16])
          Ppat_var "cardinal" (lib/SparseBitSet.ml[131,3476+8]..[131,3476+16])
        expression (lib/SparseBitSet.ml[131,3476+17]..[137,3611+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/SparseBitSet.ml[131,3476+17]..[131,3476+21])
            Ppat_var "accu" (lib/SparseBitSet.ml[131,3476+17]..[131,3476+21])
          expression (lib/SparseBitSet.ml[131,3476+22]..[137,3611+10]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/SparseBitSet.ml[131,3476+22]..[131,3476+23])
              Ppat_var "s" (lib/SparseBitSet.ml[131,3476+22]..[131,3476+23])
            expression (lib/SparseBitSet.ml[132,3502+2]..[137,3611+10])
              Pexp_match
              expression (lib/SparseBitSet.ml[132,3502+8]..[132,3502+9])
                Pexp_ident "s" (lib/SparseBitSet.ml[132,3502+8]..[132,3502+9])
              [
                <case>
                  pattern (lib/SparseBitSet.ml[133,3517+4]..[133,3517+17])
                    Ppat_construct "C" (lib/SparseBitSet.ml[133,3517+4]..[133,3517+5])
                    Some
                      []
                      pattern (lib/SparseBitSet.ml[133,3517+6]..[133,3517+17])
                        Ppat_tuple
                        [
                          pattern (lib/SparseBitSet.ml[133,3517+7]..[133,3517+8])
                            Ppat_any
                          pattern (lib/SparseBitSet.ml[133,3517+10]..[133,3517+12])
                            Ppat_var "ss" (lib/SparseBitSet.ml[133,3517+10]..[133,3517+12])
                          pattern (lib/SparseBitSet.ml[133,3517+14]..[133,3517+16])
                            Ppat_var "qs" (lib/SparseBitSet.ml[133,3517+14]..[133,3517+16])
                        ]
                  expression (lib/SparseBitSet.ml[134,3538+6]..[135,3579+22])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/SparseBitSet.ml[134,3538+10]..[134,3538+14])
                          Ppat_var "accu" (lib/SparseBitSet.ml[134,3538+10]..[134,3538+14])
                        expression (lib/SparseBitSet.ml[134,3538+17]..[134,3538+37])
                          Pexp_apply
                          expression (lib/SparseBitSet.ml[134,3538+22]..[134,3538+23])
                            Pexp_ident "+" (lib/SparseBitSet.ml[134,3538+22]..[134,3538+23])
                          [
                            <arg>
                            Nolabel
                              expression (lib/SparseBitSet.ml[134,3538+17]..[134,3538+21])
                                Pexp_ident "accu" (lib/SparseBitSet.ml[134,3538+17]..[134,3538+21])
                            <arg>
                            Nolabel
                              expression (lib/SparseBitSet.ml[134,3538+24]..[134,3538+37])
                                Pexp_apply
                                expression (lib/SparseBitSet.ml[134,3538+24]..[134,3538+34])
                                  Pexp_ident "A.cardinal" (lib/SparseBitSet.ml[134,3538+24]..[134,3538+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/SparseBitSet.ml[134,3538+35]..[134,3538+37])
                                      Pexp_ident "ss" (lib/SparseBitSet.ml[134,3538+35]..[134,3538+37])
                                ]
                          ]
                    ]
                    expression (lib/SparseBitSet.ml[135,3579+6]..[135,3579+22])
                      Pexp_apply
                      expression (lib/SparseBitSet.ml[135,3579+6]..[135,3579+14])
                        Pexp_ident "cardinal" (lib/SparseBitSet.ml[135,3579+6]..[135,3579+14])
                      [
                        <arg>
                        Nolabel
                          expression (lib/SparseBitSet.ml[135,3579+15]..[135,3579+19])
                            Pexp_ident "accu" (lib/SparseBitSet.ml[135,3579+15]..[135,3579+19])
                        <arg>
                        Nolabel
                          expression (lib/SparseBitSet.ml[135,3579+20]..[135,3579+22])
                            Pexp_ident "qs" (lib/SparseBitSet.ml[135,3579+20]..[135,3579+22])
                      ]
                <case>
                  pattern (lib/SparseBitSet.ml[136,3602+4]..[136,3602+5])
                    Ppat_construct "N" (lib/SparseBitSet.ml[136,3602+4]..[136,3602+5])
                    None
                  expression (lib/SparseBitSet.ml[137,3611+6]..[137,3611+10])
                    Pexp_ident "accu" (lib/SparseBitSet.ml[137,3611+6]..[137,3611+10])
              ]
    ]
  structure_item (lib/SparseBitSet.ml[139,3623+0]..[140,3640+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[139,3623+4]..[139,3623+12])
          Ppat_var "cardinal" (lib/SparseBitSet.ml[139,3623+4]..[139,3623+12])
        expression (lib/SparseBitSet.ml[139,3623+13]..[140,3640+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/SparseBitSet.ml[139,3623+13]..[139,3623+14])
            Ppat_var "s" (lib/SparseBitSet.ml[139,3623+13]..[139,3623+14])
          expression (lib/SparseBitSet.ml[140,3640+2]..[140,3640+14])
            Pexp_apply
            expression (lib/SparseBitSet.ml[140,3640+2]..[140,3640+10])
              Pexp_ident "cardinal" (lib/SparseBitSet.ml[140,3640+2]..[140,3640+10])
            [
              <arg>
              Nolabel
                expression (lib/SparseBitSet.ml[140,3640+11]..[140,3640+12])
                  Pexp_constant PConst_int (0,None)
              <arg>
              Nolabel
                expression (lib/SparseBitSet.ml[140,3640+13]..[140,3640+14])
                  Pexp_ident "s" (lib/SparseBitSet.ml[140,3640+13]..[140,3640+14])
            ]
    ]
  structure_item (lib/SparseBitSet.ml[142,3656+0]..[143,3673+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[142,3656+4]..[142,3656+12])
          Ppat_var "elements" (lib/SparseBitSet.ml[142,3656+4]..[142,3656+12])
        expression (lib/SparseBitSet.ml[142,3656+13]..[143,3673+35]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/SparseBitSet.ml[142,3656+13]..[142,3656+14])
            Ppat_var "s" (lib/SparseBitSet.ml[142,3656+13]..[142,3656+14])
          expression (lib/SparseBitSet.ml[143,3673+2]..[143,3673+35])
            Pexp_apply
            expression (lib/SparseBitSet.ml[143,3673+2]..[143,3673+6])
              Pexp_ident "fold" (lib/SparseBitSet.ml[143,3673+2]..[143,3673+6])
            [
              <arg>
              Nolabel
                expression (lib/SparseBitSet.ml[143,3673+7]..[143,3673+30])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lib/SparseBitSet.ml[143,3673+12]..[143,3673+14])
                    Ppat_var "tl" (lib/SparseBitSet.ml[143,3673+12]..[143,3673+14])
                  expression (lib/SparseBitSet.ml[143,3673+15]..[143,3673+29]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lib/SparseBitSet.ml[143,3673+15]..[143,3673+17])
                      Ppat_var "hd" (lib/SparseBitSet.ml[143,3673+15]..[143,3673+17])
                    expression (lib/SparseBitSet.ml[143,3673+21]..[143,3673+29])
                      Pexp_construct "::" (lib/SparseBitSet.ml[143,3673+24]..[143,3673+26])
                      Some
                        expression (lib/SparseBitSet.ml[143,3673+21]..[143,3673+29]) ghost
                          Pexp_tuple
                          [
                            expression (lib/SparseBitSet.ml[143,3673+21]..[143,3673+23])
                              Pexp_ident "tl" (lib/SparseBitSet.ml[143,3673+21]..[143,3673+23])
                            expression (lib/SparseBitSet.ml[143,3673+27]..[143,3673+29])
                              Pexp_ident "hd" (lib/SparseBitSet.ml[143,3673+27]..[143,3673+29])
                          ]
              <arg>
              Nolabel
                expression (lib/SparseBitSet.ml[143,3673+31]..[143,3673+32])
                  Pexp_ident "s" (lib/SparseBitSet.ml[143,3673+31]..[143,3673+32])
              <arg>
              Nolabel
                expression (lib/SparseBitSet.ml[143,3673+33]..[143,3673+35])
                  Pexp_construct "[]" (lib/SparseBitSet.ml[143,3673+33]..[143,3673+35])
                  None
            ]
    ]
  structure_item (lib/SparseBitSet.ml[145,3710+0]..[157,3977+21])
    Pstr_value Rec
    [
      <def>
        pattern (lib/SparseBitSet.ml[145,3710+8]..[145,3710+14])
          Ppat_var "subset" (lib/SparseBitSet.ml[145,3710+8]..[145,3710+14])
        expression (lib/SparseBitSet.ml[145,3710+15]..[157,3977+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/SparseBitSet.ml[145,3710+15]..[145,3710+17])
            Ppat_var "s1" (lib/SparseBitSet.ml[145,3710+15]..[145,3710+17])
          expression (lib/SparseBitSet.ml[145,3710+18]..[157,3977+21]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/SparseBitSet.ml[145,3710+18]..[145,3710+20])
              Ppat_var "s2" (lib/SparseBitSet.ml[145,3710+18]..[145,3710+20])
            expression (lib/SparseBitSet.ml[146,3733+2]..[157,3977+21])
              Pexp_match
              expression (lib/SparseBitSet.ml[146,3733+8]..[146,3733+14])
                Pexp_tuple
                [
                  expression (lib/SparseBitSet.ml[146,3733+8]..[146,3733+10])
                    Pexp_ident "s1" (lib/SparseBitSet.ml[146,3733+8]..[146,3733+10])
                  expression (lib/SparseBitSet.ml[146,3733+12]..[146,3733+14])
                    Pexp_ident "s2" (lib/SparseBitSet.ml[146,3733+12]..[146,3733+14])
                ]
              [
                <case>
                  pattern (lib/SparseBitSet.ml[147,3753+4]..[147,3753+8])
                    Ppat_tuple
                    [
                      pattern (lib/SparseBitSet.ml[147,3753+4]..[147,3753+5])
                        Ppat_construct "N" (lib/SparseBitSet.ml[147,3753+4]..[147,3753+5])
                        None
                      pattern (lib/SparseBitSet.ml[147,3753+7]..[147,3753+8])
                        Ppat_any
                    ]
                  expression (lib/SparseBitSet.ml[148,3765+6]..[148,3765+10])
                    Pexp_construct "true" (lib/SparseBitSet.ml[148,3765+6]..[148,3765+10])
                    None
                <case>
                  pattern (lib/SparseBitSet.ml[149,3776+4]..[149,3776+8])
                    Ppat_tuple
                    [
                      pattern (lib/SparseBitSet.ml[149,3776+4]..[149,3776+5])
                        Ppat_any
                      pattern (lib/SparseBitSet.ml[149,3776+7]..[149,3776+8])
                        Ppat_construct "N" (lib/SparseBitSet.ml[149,3776+7]..[149,3776+8])
                        None
                    ]
                  expression (lib/SparseBitSet.ml[150,3788+6]..[150,3788+11])
                    Pexp_construct "false" (lib/SparseBitSet.ml[150,3788+6]..[150,3788+11])
                    None
                <case>
                  pattern (lib/SparseBitSet.ml[151,3800+4]..[151,3800+44])
                    Ppat_tuple
                    [
                      pattern (lib/SparseBitSet.ml[151,3800+4]..[151,3800+23])
                        Ppat_construct "C" (lib/SparseBitSet.ml[151,3800+4]..[151,3800+5])
                        Some
                          []
                          pattern (lib/SparseBitSet.ml[151,3800+6]..[151,3800+23])
                            Ppat_tuple
                            [
                              pattern (lib/SparseBitSet.ml[151,3800+7]..[151,3800+12])
                                Ppat_var "addr1" (lib/SparseBitSet.ml[151,3800+7]..[151,3800+12])
                              pattern (lib/SparseBitSet.ml[151,3800+14]..[151,3800+17])
                                Ppat_var "ss1" (lib/SparseBitSet.ml[151,3800+14]..[151,3800+17])
                              pattern (lib/SparseBitSet.ml[151,3800+19]..[151,3800+22])
                                Ppat_var "qs1" (lib/SparseBitSet.ml[151,3800+19]..[151,3800+22])
                            ]
                      pattern (lib/SparseBitSet.ml[151,3800+25]..[151,3800+44])
                        Ppat_construct "C" (lib/SparseBitSet.ml[151,3800+25]..[151,3800+26])
                        Some
                          []
                          pattern (lib/SparseBitSet.ml[151,3800+27]..[151,3800+44])
                            Ppat_tuple
                            [
                              pattern (lib/SparseBitSet.ml[151,3800+28]..[151,3800+33])
                                Ppat_var "addr2" (lib/SparseBitSet.ml[151,3800+28]..[151,3800+33])
                              pattern (lib/SparseBitSet.ml[151,3800+35]..[151,3800+38])
                                Ppat_var "ss2" (lib/SparseBitSet.ml[151,3800+35]..[151,3800+38])
                              pattern (lib/SparseBitSet.ml[151,3800+40]..[151,3800+43])
                                Ppat_var "qs2" (lib/SparseBitSet.ml[151,3800+40]..[151,3800+43])
                            ]
                    ]
                  expression (lib/SparseBitSet.ml[152,3848+6]..[157,3977+21])
                    Pexp_ifthenelse
                    expression (lib/SparseBitSet.ml[152,3848+9]..[152,3848+22])
                      Pexp_apply
                      expression (lib/SparseBitSet.ml[152,3848+15]..[152,3848+16])
                        Pexp_ident "<" (lib/SparseBitSet.ml[152,3848+15]..[152,3848+16])
                      [
                        <arg>
                        Nolabel
                          expression (lib/SparseBitSet.ml[152,3848+9]..[152,3848+14])
                            Pexp_ident "addr1" (lib/SparseBitSet.ml[152,3848+9]..[152,3848+14])
                        <arg>
                        Nolabel
                          expression (lib/SparseBitSet.ml[152,3848+17]..[152,3848+22])
                            Pexp_ident "addr2" (lib/SparseBitSet.ml[152,3848+17]..[152,3848+22])
                      ]
                    expression (lib/SparseBitSet.ml[153,3876+8]..[153,3876+13])
                      Pexp_construct "false" (lib/SparseBitSet.ml[153,3876+8]..[153,3876+13])
                      None
                    Some
                      expression (lib/SparseBitSet.ml[154,3890+11]..[157,3977+21])
                        Pexp_ifthenelse
                        expression (lib/SparseBitSet.ml[154,3890+14]..[154,3890+27])
                          Pexp_apply
                          expression (lib/SparseBitSet.ml[154,3890+20]..[154,3890+21])
                            Pexp_ident "=" (lib/SparseBitSet.ml[154,3890+20]..[154,3890+21])
                          [
                            <arg>
                            Nolabel
                              expression (lib/SparseBitSet.ml[154,3890+14]..[154,3890+19])
                                Pexp_ident "addr1" (lib/SparseBitSet.ml[154,3890+14]..[154,3890+19])
                            <arg>
                            Nolabel
                              expression (lib/SparseBitSet.ml[154,3890+22]..[154,3890+27])
                                Pexp_ident "addr2" (lib/SparseBitSet.ml[154,3890+22]..[154,3890+27])
                          ]
                        expression (lib/SparseBitSet.ml[155,3923+8]..[155,3923+42])
                          Pexp_apply
                          expression (lib/SparseBitSet.ml[155,3923+25]..[155,3923+27])
                            Pexp_ident "&&" (lib/SparseBitSet.ml[155,3923+25]..[155,3923+27])
                          [
                            <arg>
                            Nolabel
                              expression (lib/SparseBitSet.ml[155,3923+8]..[155,3923+24])
                                Pexp_apply
                                expression (lib/SparseBitSet.ml[155,3923+8]..[155,3923+16])
                                  Pexp_ident "A.subset" (lib/SparseBitSet.ml[155,3923+8]..[155,3923+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/SparseBitSet.ml[155,3923+17]..[155,3923+20])
                                      Pexp_ident "ss1" (lib/SparseBitSet.ml[155,3923+17]..[155,3923+20])
                                  <arg>
                                  Nolabel
                                    expression (lib/SparseBitSet.ml[155,3923+21]..[155,3923+24])
                                      Pexp_ident "ss2" (lib/SparseBitSet.ml[155,3923+21]..[155,3923+24])
                                ]
                            <arg>
                            Nolabel
                              expression (lib/SparseBitSet.ml[155,3923+28]..[155,3923+42])
                                Pexp_apply
                                expression (lib/SparseBitSet.ml[155,3923+28]..[155,3923+34])
                                  Pexp_ident "subset" (lib/SparseBitSet.ml[155,3923+28]..[155,3923+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/SparseBitSet.ml[155,3923+35]..[155,3923+38])
                                      Pexp_ident "qs1" (lib/SparseBitSet.ml[155,3923+35]..[155,3923+38])
                                  <arg>
                                  Nolabel
                                    expression (lib/SparseBitSet.ml[155,3923+39]..[155,3923+42])
                                      Pexp_ident "qs2" (lib/SparseBitSet.ml[155,3923+39]..[155,3923+42])
                                ]
                          ]
                        Some
                          expression (lib/SparseBitSet.ml[157,3977+8]..[157,3977+21])
                            Pexp_apply
                            expression (lib/SparseBitSet.ml[157,3977+8]..[157,3977+14])
                              Pexp_ident "subset" (lib/SparseBitSet.ml[157,3977+8]..[157,3977+14])
                            [
                              <arg>
                              Nolabel
                                expression (lib/SparseBitSet.ml[157,3977+15]..[157,3977+17])
                                  Pexp_ident "s1" (lib/SparseBitSet.ml[157,3977+15]..[157,3977+17])
                              <arg>
                              Nolabel
                                expression (lib/SparseBitSet.ml[157,3977+18]..[157,3977+21])
                                  Pexp_ident "qs2" (lib/SparseBitSet.ml[157,3977+18]..[157,3977+21])
                            ]
              ]
    ]
  structure_item (lib/SparseBitSet.ml[162,4103+0]..[176,4483+67])
    Pstr_value Rec
    [
      <def>
        pattern (lib/SparseBitSet.ml[162,4103+8]..[162,4103+13])
          Ppat_var "union" (lib/SparseBitSet.ml[162,4103+8]..[162,4103+13])
        expression (lib/SparseBitSet.ml[162,4103+14]..[176,4483+67]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/SparseBitSet.ml[162,4103+14]..[162,4103+16])
            Ppat_var "s1" (lib/SparseBitSet.ml[162,4103+14]..[162,4103+16])
          expression (lib/SparseBitSet.ml[162,4103+17]..[176,4483+67]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/SparseBitSet.ml[162,4103+17]..[162,4103+19])
              Ppat_var "s2" (lib/SparseBitSet.ml[162,4103+17]..[162,4103+19])
            expression (lib/SparseBitSet.ml[163,4125+2]..[176,4483+67])
              Pexp_match
              expression (lib/SparseBitSet.ml[163,4125+8]..[163,4125+14])
                Pexp_tuple
                [
                  expression (lib/SparseBitSet.ml[163,4125+8]..[163,4125+10])
                    Pexp_ident "s1" (lib/SparseBitSet.ml[163,4125+8]..[163,4125+10])
                  expression (lib/SparseBitSet.ml[163,4125+12]..[163,4125+14])
                    Pexp_ident "s2" (lib/SparseBitSet.ml[163,4125+12]..[163,4125+14])
                ]
              [
                <case>
                  pattern (lib/SparseBitSet.ml[164,4145+4]..[165,4154+8])
                    Ppat_or
                    pattern (lib/SparseBitSet.ml[164,4145+4]..[164,4145+8])
                      Ppat_tuple
                      [
                        pattern (lib/SparseBitSet.ml[164,4145+4]..[164,4145+5])
                          Ppat_construct "N" (lib/SparseBitSet.ml[164,4145+4]..[164,4145+5])
                          None
                        pattern (lib/SparseBitSet.ml[164,4145+7]..[164,4145+8])
                          Ppat_var "s" (lib/SparseBitSet.ml[164,4145+7]..[164,4145+8])
                      ]
                    pattern (lib/SparseBitSet.ml[165,4154+4]..[165,4154+8])
                      Ppat_tuple
                      [
                        pattern (lib/SparseBitSet.ml[165,4154+4]..[165,4154+5])
                          Ppat_var "s" (lib/SparseBitSet.ml[165,4154+4]..[165,4154+5])
                        pattern (lib/SparseBitSet.ml[165,4154+7]..[165,4154+8])
                          Ppat_construct "N" (lib/SparseBitSet.ml[165,4154+7]..[165,4154+8])
                          None
                      ]
                  expression (lib/SparseBitSet.ml[166,4166+6]..[166,4166+7])
                    Pexp_ident "s" (lib/SparseBitSet.ml[166,4166+6]..[166,4166+7])
                <case>
                  pattern (lib/SparseBitSet.ml[167,4174+4]..[167,4174+44])
                    Ppat_tuple
                    [
                      pattern (lib/SparseBitSet.ml[167,4174+4]..[167,4174+23])
                        Ppat_construct "C" (lib/SparseBitSet.ml[167,4174+4]..[167,4174+5])
                        Some
                          []
                          pattern (lib/SparseBitSet.ml[167,4174+6]..[167,4174+23])
                            Ppat_tuple
                            [
                              pattern (lib/SparseBitSet.ml[167,4174+7]..[167,4174+12])
                                Ppat_var "addr1" (lib/SparseBitSet.ml[167,4174+7]..[167,4174+12])
                              pattern (lib/SparseBitSet.ml[167,4174+14]..[167,4174+17])
                                Ppat_var "ss1" (lib/SparseBitSet.ml[167,4174+14]..[167,4174+17])
                              pattern (lib/SparseBitSet.ml[167,4174+19]..[167,4174+22])
                                Ppat_var "qs1" (lib/SparseBitSet.ml[167,4174+19]..[167,4174+22])
                            ]
                      pattern (lib/SparseBitSet.ml[167,4174+25]..[167,4174+44])
                        Ppat_construct "C" (lib/SparseBitSet.ml[167,4174+25]..[167,4174+26])
                        Some
                          []
                          pattern (lib/SparseBitSet.ml[167,4174+27]..[167,4174+44])
                            Ppat_tuple
                            [
                              pattern (lib/SparseBitSet.ml[167,4174+28]..[167,4174+33])
                                Ppat_var "addr2" (lib/SparseBitSet.ml[167,4174+28]..[167,4174+33])
                              pattern (lib/SparseBitSet.ml[167,4174+35]..[167,4174+38])
                                Ppat_var "ss2" (lib/SparseBitSet.ml[167,4174+35]..[167,4174+38])
                              pattern (lib/SparseBitSet.ml[167,4174+40]..[167,4174+43])
                                Ppat_var "qs2" (lib/SparseBitSet.ml[167,4174+40]..[167,4174+43])
                            ]
                    ]
                  expression (lib/SparseBitSet.ml[168,4222+6]..[176,4483+67])
                    Pexp_ifthenelse
                    expression (lib/SparseBitSet.ml[168,4222+9]..[168,4222+22])
                      Pexp_apply
                      expression (lib/SparseBitSet.ml[168,4222+15]..[168,4222+16])
                        Pexp_ident "<" (lib/SparseBitSet.ml[168,4222+15]..[168,4222+16])
                      [
                        <arg>
                        Nolabel
                          expression (lib/SparseBitSet.ml[168,4222+9]..[168,4222+14])
                            Pexp_ident "addr1" (lib/SparseBitSet.ml[168,4222+9]..[168,4222+14])
                        <arg>
                        Nolabel
                          expression (lib/SparseBitSet.ml[168,4222+17]..[168,4222+22])
                            Pexp_ident "addr2" (lib/SparseBitSet.ml[168,4222+17]..[168,4222+22])
                      ]
                    expression (lib/SparseBitSet.ml[169,4250+8]..[169,4250+36])
                      Pexp_construct "C" (lib/SparseBitSet.ml[169,4250+8]..[169,4250+9])
                      Some
                        expression (lib/SparseBitSet.ml[169,4250+10]..[169,4250+36])
                          Pexp_tuple
                          [
                            expression (lib/SparseBitSet.ml[169,4250+11]..[169,4250+16])
                              Pexp_ident "addr1" (lib/SparseBitSet.ml[169,4250+11]..[169,4250+16])
                            expression (lib/SparseBitSet.ml[169,4250+18]..[169,4250+21])
                              Pexp_ident "ss1" (lib/SparseBitSet.ml[169,4250+18]..[169,4250+21])
                            expression (lib/SparseBitSet.ml[169,4250+23]..[169,4250+35])
                              Pexp_apply
                              expression (lib/SparseBitSet.ml[169,4250+23]..[169,4250+28])
                                Pexp_ident "union" (lib/SparseBitSet.ml[169,4250+23]..[169,4250+28])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/SparseBitSet.ml[169,4250+29]..[169,4250+32])
                                    Pexp_ident "qs1" (lib/SparseBitSet.ml[169,4250+29]..[169,4250+32])
                                <arg>
                                Nolabel
                                  expression (lib/SparseBitSet.ml[169,4250+33]..[169,4250+35])
                                    Pexp_ident "s2" (lib/SparseBitSet.ml[169,4250+33]..[169,4250+35])
                              ]
                          ]
                    Some
                      expression (lib/SparseBitSet.ml[170,4287+11]..[176,4483+67])
                        Pexp_ifthenelse
                        expression (lib/SparseBitSet.ml[170,4287+14]..[170,4287+27])
                          Pexp_apply
                          expression (lib/SparseBitSet.ml[170,4287+20]..[170,4287+21])
                            Pexp_ident ">" (lib/SparseBitSet.ml[170,4287+20]..[170,4287+21])
                          [
                            <arg>
                            Nolabel
                              expression (lib/SparseBitSet.ml[170,4287+14]..[170,4287+19])
                                Pexp_ident "addr1" (lib/SparseBitSet.ml[170,4287+14]..[170,4287+19])
                            <arg>
                            Nolabel
                              expression (lib/SparseBitSet.ml[170,4287+22]..[170,4287+27])
                                Pexp_ident "addr2" (lib/SparseBitSet.ml[170,4287+22]..[170,4287+27])
                          ]
                        expression (lib/SparseBitSet.ml[171,4320+8]..[172,4352+50])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lib/SparseBitSet.ml[171,4320+12]..[171,4320+13])
                                Ppat_var "s" (lib/SparseBitSet.ml[171,4320+12]..[171,4320+13])
                              expression (lib/SparseBitSet.ml[171,4320+16]..[171,4320+28])
                                Pexp_apply
                                expression (lib/SparseBitSet.ml[171,4320+16]..[171,4320+21])
                                  Pexp_ident "union" (lib/SparseBitSet.ml[171,4320+16]..[171,4320+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/SparseBitSet.ml[171,4320+22]..[171,4320+24])
                                      Pexp_ident "s1" (lib/SparseBitSet.ml[171,4320+22]..[171,4320+24])
                                  <arg>
                                  Nolabel
                                    expression (lib/SparseBitSet.ml[171,4320+25]..[171,4320+28])
                                      Pexp_ident "qs2" (lib/SparseBitSet.ml[171,4320+25]..[171,4320+28])
                                ]
                          ]
                          expression (lib/SparseBitSet.ml[172,4352+8]..[172,4352+50])
                            Pexp_ifthenelse
                            expression (lib/SparseBitSet.ml[172,4352+11]..[172,4352+19])
                              Pexp_apply
                              expression (lib/SparseBitSet.ml[172,4352+13]..[172,4352+15])
                                Pexp_ident "==" (lib/SparseBitSet.ml[172,4352+13]..[172,4352+15])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/SparseBitSet.ml[172,4352+11]..[172,4352+12])
                                    Pexp_ident "s" (lib/SparseBitSet.ml[172,4352+11]..[172,4352+12])
                                <arg>
                                Nolabel
                                  expression (lib/SparseBitSet.ml[172,4352+16]..[172,4352+19])
                                    Pexp_ident "qs2" (lib/SparseBitSet.ml[172,4352+16]..[172,4352+19])
                              ]
                            expression (lib/SparseBitSet.ml[172,4352+25]..[172,4352+27])
                              Pexp_ident "s2" (lib/SparseBitSet.ml[172,4352+25]..[172,4352+27])
                            Some
                              expression (lib/SparseBitSet.ml[172,4352+33]..[172,4352+50])
                                Pexp_construct "C" (lib/SparseBitSet.ml[172,4352+33]..[172,4352+34])
                                Some
                                  expression (lib/SparseBitSet.ml[172,4352+35]..[172,4352+50])
                                    Pexp_tuple
                                    [
                                      expression (lib/SparseBitSet.ml[172,4352+36]..[172,4352+41])
                                        Pexp_ident "addr2" (lib/SparseBitSet.ml[172,4352+36]..[172,4352+41])
                                      expression (lib/SparseBitSet.ml[172,4352+43]..[172,4352+46])
                                        Pexp_ident "ss2" (lib/SparseBitSet.ml[172,4352+43]..[172,4352+46])
                                      expression (lib/SparseBitSet.ml[172,4352+48]..[172,4352+49])
                                        Pexp_ident "s" (lib/SparseBitSet.ml[172,4352+48]..[172,4352+49])
                                    ]
                        Some
                          expression (lib/SparseBitSet.ml[174,4414+8]..[176,4483+67])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/SparseBitSet.ml[174,4414+12]..[174,4414+14])
                                  Ppat_var "ss" (lib/SparseBitSet.ml[174,4414+12]..[174,4414+14])
                                expression (lib/SparseBitSet.ml[174,4414+17]..[174,4414+32])
                                  Pexp_apply
                                  expression (lib/SparseBitSet.ml[174,4414+17]..[174,4414+24])
                                    Pexp_ident "A.union" (lib/SparseBitSet.ml[174,4414+17]..[174,4414+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/SparseBitSet.ml[174,4414+25]..[174,4414+28])
                                        Pexp_ident "ss1" (lib/SparseBitSet.ml[174,4414+25]..[174,4414+28])
                                    <arg>
                                    Nolabel
                                      expression (lib/SparseBitSet.ml[174,4414+29]..[174,4414+32])
                                        Pexp_ident "ss2" (lib/SparseBitSet.ml[174,4414+29]..[174,4414+32])
                                  ]
                            ]
                            expression (lib/SparseBitSet.ml[175,4450+8]..[176,4483+67])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/SparseBitSet.ml[175,4450+12]..[175,4450+13])
                                    Ppat_var "s" (lib/SparseBitSet.ml[175,4450+12]..[175,4450+13])
                                  expression (lib/SparseBitSet.ml[175,4450+16]..[175,4450+29])
                                    Pexp_apply
                                    expression (lib/SparseBitSet.ml[175,4450+16]..[175,4450+21])
                                      Pexp_ident "union" (lib/SparseBitSet.ml[175,4450+16]..[175,4450+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/SparseBitSet.ml[175,4450+22]..[175,4450+25])
                                          Pexp_ident "qs1" (lib/SparseBitSet.ml[175,4450+22]..[175,4450+25])
                                      <arg>
                                      Nolabel
                                        expression (lib/SparseBitSet.ml[175,4450+26]..[175,4450+29])
                                          Pexp_ident "qs2" (lib/SparseBitSet.ml[175,4450+26]..[175,4450+29])
                                    ]
                              ]
                              expression (lib/SparseBitSet.ml[176,4483+8]..[176,4483+67])
                                Pexp_ifthenelse
                                expression (lib/SparseBitSet.ml[176,4483+11]..[176,4483+37])
                                  Pexp_apply
                                  expression (lib/SparseBitSet.ml[176,4483+26]..[176,4483+28])
                                    Pexp_ident "&&" (lib/SparseBitSet.ml[176,4483+26]..[176,4483+28])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/SparseBitSet.ml[176,4483+11]..[176,4483+25])
                                        Pexp_apply
                                        expression (lib/SparseBitSet.ml[176,4483+11]..[176,4483+18])
                                          Pexp_ident "A.equal" (lib/SparseBitSet.ml[176,4483+11]..[176,4483+18])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/SparseBitSet.ml[176,4483+19]..[176,4483+21])
                                              Pexp_ident "ss" (lib/SparseBitSet.ml[176,4483+19]..[176,4483+21])
                                          <arg>
                                          Nolabel
                                            expression (lib/SparseBitSet.ml[176,4483+22]..[176,4483+25])
                                              Pexp_ident "ss2" (lib/SparseBitSet.ml[176,4483+22]..[176,4483+25])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (lib/SparseBitSet.ml[176,4483+29]..[176,4483+37])
                                        Pexp_apply
                                        expression (lib/SparseBitSet.ml[176,4483+31]..[176,4483+33])
                                          Pexp_ident "==" (lib/SparseBitSet.ml[176,4483+31]..[176,4483+33])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/SparseBitSet.ml[176,4483+29]..[176,4483+30])
                                              Pexp_ident "s" (lib/SparseBitSet.ml[176,4483+29]..[176,4483+30])
                                          <arg>
                                          Nolabel
                                            expression (lib/SparseBitSet.ml[176,4483+34]..[176,4483+37])
                                              Pexp_ident "qs2" (lib/SparseBitSet.ml[176,4483+34]..[176,4483+37])
                                        ]
                                  ]
                                expression (lib/SparseBitSet.ml[176,4483+43]..[176,4483+45])
                                  Pexp_ident "s2" (lib/SparseBitSet.ml[176,4483+43]..[176,4483+45])
                                Some
                                  expression (lib/SparseBitSet.ml[176,4483+51]..[176,4483+67])
                                    Pexp_construct "C" (lib/SparseBitSet.ml[176,4483+51]..[176,4483+52])
                                    Some
                                      expression (lib/SparseBitSet.ml[176,4483+53]..[176,4483+67])
                                        Pexp_tuple
                                        [
                                          expression (lib/SparseBitSet.ml[176,4483+54]..[176,4483+59])
                                            Pexp_ident "addr1" (lib/SparseBitSet.ml[176,4483+54]..[176,4483+59])
                                          expression (lib/SparseBitSet.ml[176,4483+61]..[176,4483+63])
                                            Pexp_ident "ss" (lib/SparseBitSet.ml[176,4483+61]..[176,4483+63])
                                          expression (lib/SparseBitSet.ml[176,4483+65]..[176,4483+66])
                                            Pexp_ident "s" (lib/SparseBitSet.ml[176,4483+65]..[176,4483+66])
                                        ]
              ]
    ]
  structure_item (lib/SparseBitSet.ml[181,4654+0]..[197,5011+69])
    Pstr_value Rec
    [
      <def>
        pattern (lib/SparseBitSet.ml[181,4654+8]..[181,4654+13])
          Ppat_var "inter" (lib/SparseBitSet.ml[181,4654+8]..[181,4654+13])
        expression (lib/SparseBitSet.ml[181,4654+14]..[197,5011+69]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/SparseBitSet.ml[181,4654+14]..[181,4654+16])
            Ppat_var "s1" (lib/SparseBitSet.ml[181,4654+14]..[181,4654+16])
          expression (lib/SparseBitSet.ml[181,4654+17]..[197,5011+69]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/SparseBitSet.ml[181,4654+17]..[181,4654+19])
              Ppat_var "s2" (lib/SparseBitSet.ml[181,4654+17]..[181,4654+19])
            expression (lib/SparseBitSet.ml[182,4676+2]..[197,5011+69])
              Pexp_match
              expression (lib/SparseBitSet.ml[182,4676+8]..[182,4676+14])
                Pexp_tuple
                [
                  expression (lib/SparseBitSet.ml[182,4676+8]..[182,4676+10])
                    Pexp_ident "s1" (lib/SparseBitSet.ml[182,4676+8]..[182,4676+10])
                  expression (lib/SparseBitSet.ml[182,4676+12]..[182,4676+14])
                    Pexp_ident "s2" (lib/SparseBitSet.ml[182,4676+12]..[182,4676+14])
                ]
              [
                <case>
                  pattern (lib/SparseBitSet.ml[183,4696+4]..[184,4705+8])
                    Ppat_or
                    pattern (lib/SparseBitSet.ml[183,4696+4]..[183,4696+8])
                      Ppat_tuple
                      [
                        pattern (lib/SparseBitSet.ml[183,4696+4]..[183,4696+5])
                          Ppat_construct "N" (lib/SparseBitSet.ml[183,4696+4]..[183,4696+5])
                          None
                        pattern (lib/SparseBitSet.ml[183,4696+7]..[183,4696+8])
                          Ppat_any
                      ]
                    pattern (lib/SparseBitSet.ml[184,4705+4]..[184,4705+8])
                      Ppat_tuple
                      [
                        pattern (lib/SparseBitSet.ml[184,4705+4]..[184,4705+5])
                          Ppat_any
                        pattern (lib/SparseBitSet.ml[184,4705+7]..[184,4705+8])
                          Ppat_construct "N" (lib/SparseBitSet.ml[184,4705+7]..[184,4705+8])
                          None
                      ]
                  expression (lib/SparseBitSet.ml[185,4717+6]..[185,4717+7])
                    Pexp_construct "N" (lib/SparseBitSet.ml[185,4717+6]..[185,4717+7])
                    None
                <case>
                  pattern (lib/SparseBitSet.ml[186,4725+4]..[186,4725+44])
                    Ppat_tuple
                    [
                      pattern (lib/SparseBitSet.ml[186,4725+4]..[186,4725+23])
                        Ppat_construct "C" (lib/SparseBitSet.ml[186,4725+4]..[186,4725+5])
                        Some
                          []
                          pattern (lib/SparseBitSet.ml[186,4725+6]..[186,4725+23])
                            Ppat_tuple
                            [
                              pattern (lib/SparseBitSet.ml[186,4725+7]..[186,4725+12])
                                Ppat_var "addr1" (lib/SparseBitSet.ml[186,4725+7]..[186,4725+12])
                              pattern (lib/SparseBitSet.ml[186,4725+14]..[186,4725+17])
                                Ppat_var "ss1" (lib/SparseBitSet.ml[186,4725+14]..[186,4725+17])
                              pattern (lib/SparseBitSet.ml[186,4725+19]..[186,4725+22])
                                Ppat_var "qs1" (lib/SparseBitSet.ml[186,4725+19]..[186,4725+22])
                            ]
                      pattern (lib/SparseBitSet.ml[186,4725+25]..[186,4725+44])
                        Ppat_construct "C" (lib/SparseBitSet.ml[186,4725+25]..[186,4725+26])
                        Some
                          []
                          pattern (lib/SparseBitSet.ml[186,4725+27]..[186,4725+44])
                            Ppat_tuple
                            [
                              pattern (lib/SparseBitSet.ml[186,4725+28]..[186,4725+33])
                                Ppat_var "addr2" (lib/SparseBitSet.ml[186,4725+28]..[186,4725+33])
                              pattern (lib/SparseBitSet.ml[186,4725+35]..[186,4725+38])
                                Ppat_var "ss2" (lib/SparseBitSet.ml[186,4725+35]..[186,4725+38])
                              pattern (lib/SparseBitSet.ml[186,4725+40]..[186,4725+43])
                                Ppat_var "qs2" (lib/SparseBitSet.ml[186,4725+40]..[186,4725+43])
                            ]
                    ]
                  expression (lib/SparseBitSet.ml[187,4773+6]..[197,5011+69])
                    Pexp_ifthenelse
                    expression (lib/SparseBitSet.ml[187,4773+9]..[187,4773+22])
                      Pexp_apply
                      expression (lib/SparseBitSet.ml[187,4773+15]..[187,4773+16])
                        Pexp_ident "<" (lib/SparseBitSet.ml[187,4773+15]..[187,4773+16])
                      [
                        <arg>
                        Nolabel
                          expression (lib/SparseBitSet.ml[187,4773+9]..[187,4773+14])
                            Pexp_ident "addr1" (lib/SparseBitSet.ml[187,4773+9]..[187,4773+14])
                        <arg>
                        Nolabel
                          expression (lib/SparseBitSet.ml[187,4773+17]..[187,4773+22])
                            Pexp_ident "addr2" (lib/SparseBitSet.ml[187,4773+17]..[187,4773+22])
                      ]
                    expression (lib/SparseBitSet.ml[188,4801+8]..[188,4801+20])
                      Pexp_apply
                      expression (lib/SparseBitSet.ml[188,4801+8]..[188,4801+13])
                        Pexp_ident "inter" (lib/SparseBitSet.ml[188,4801+8]..[188,4801+13])
                      [
                        <arg>
                        Nolabel
                          expression (lib/SparseBitSet.ml[188,4801+14]..[188,4801+17])
                            Pexp_ident "qs1" (lib/SparseBitSet.ml[188,4801+14]..[188,4801+17])
                        <arg>
                        Nolabel
                          expression (lib/SparseBitSet.ml[188,4801+18]..[188,4801+20])
                            Pexp_ident "s2" (lib/SparseBitSet.ml[188,4801+18]..[188,4801+20])
                      ]
                    Some
                      expression (lib/SparseBitSet.ml[189,4822+11]..[197,5011+69])
                        Pexp_ifthenelse
                        expression (lib/SparseBitSet.ml[189,4822+14]..[189,4822+27])
                          Pexp_apply
                          expression (lib/SparseBitSet.ml[189,4822+20]..[189,4822+21])
                            Pexp_ident ">" (lib/SparseBitSet.ml[189,4822+20]..[189,4822+21])
                          [
                            <arg>
                            Nolabel
                              expression (lib/SparseBitSet.ml[189,4822+14]..[189,4822+19])
                                Pexp_ident "addr1" (lib/SparseBitSet.ml[189,4822+14]..[189,4822+19])
                            <arg>
                            Nolabel
                              expression (lib/SparseBitSet.ml[189,4822+22]..[189,4822+27])
                                Pexp_ident "addr2" (lib/SparseBitSet.ml[189,4822+22]..[189,4822+27])
                          ]
                        expression (lib/SparseBitSet.ml[190,4855+8]..[190,4855+20])
                          Pexp_apply
                          expression (lib/SparseBitSet.ml[190,4855+8]..[190,4855+13])
                            Pexp_ident "inter" (lib/SparseBitSet.ml[190,4855+8]..[190,4855+13])
                          [
                            <arg>
                            Nolabel
                              expression (lib/SparseBitSet.ml[190,4855+14]..[190,4855+16])
                                Pexp_ident "s1" (lib/SparseBitSet.ml[190,4855+14]..[190,4855+16])
                            <arg>
                            Nolabel
                              expression (lib/SparseBitSet.ml[190,4855+17]..[190,4855+20])
                                Pexp_ident "qs2" (lib/SparseBitSet.ml[190,4855+17]..[190,4855+20])
                          ]
                        Some
                          expression (lib/SparseBitSet.ml[192,4887+8]..[197,5011+69])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/SparseBitSet.ml[192,4887+12]..[192,4887+14])
                                  Ppat_var "ss" (lib/SparseBitSet.ml[192,4887+12]..[192,4887+14])
                                expression (lib/SparseBitSet.ml[192,4887+17]..[192,4887+32])
                                  Pexp_apply
                                  expression (lib/SparseBitSet.ml[192,4887+17]..[192,4887+24])
                                    Pexp_ident "A.inter" (lib/SparseBitSet.ml[192,4887+17]..[192,4887+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/SparseBitSet.ml[192,4887+25]..[192,4887+28])
                                        Pexp_ident "ss1" (lib/SparseBitSet.ml[192,4887+25]..[192,4887+28])
                                    <arg>
                                    Nolabel
                                      expression (lib/SparseBitSet.ml[192,4887+29]..[192,4887+32])
                                        Pexp_ident "ss2" (lib/SparseBitSet.ml[192,4887+29]..[192,4887+32])
                                  ]
                            ]
                            expression (lib/SparseBitSet.ml[193,4923+8]..[197,5011+69])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/SparseBitSet.ml[193,4923+12]..[193,4923+13])
                                    Ppat_var "s" (lib/SparseBitSet.ml[193,4923+12]..[193,4923+13])
                                  expression (lib/SparseBitSet.ml[193,4923+16]..[193,4923+29])
                                    Pexp_apply
                                    expression (lib/SparseBitSet.ml[193,4923+16]..[193,4923+21])
                                      Pexp_ident "inter" (lib/SparseBitSet.ml[193,4923+16]..[193,4923+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/SparseBitSet.ml[193,4923+22]..[193,4923+25])
                                          Pexp_ident "qs1" (lib/SparseBitSet.ml[193,4923+22]..[193,4923+25])
                                      <arg>
                                      Nolabel
                                        expression (lib/SparseBitSet.ml[193,4923+26]..[193,4923+29])
                                          Pexp_ident "qs2" (lib/SparseBitSet.ml[193,4923+26]..[193,4923+29])
                                    ]
                              ]
                              expression (lib/SparseBitSet.ml[194,4956+8]..[197,5011+69])
                                Pexp_ifthenelse
                                expression (lib/SparseBitSet.ml[194,4956+11]..[194,4956+24])
                                  Pexp_apply
                                  expression (lib/SparseBitSet.ml[194,4956+11]..[194,4956+21])
                                    Pexp_ident "A.is_empty" (lib/SparseBitSet.ml[194,4956+11]..[194,4956+21])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/SparseBitSet.ml[194,4956+22]..[194,4956+24])
                                        Pexp_ident "ss" (lib/SparseBitSet.ml[194,4956+22]..[194,4956+24])
                                  ]
                                expression (lib/SparseBitSet.ml[195,4986+10]..[195,4986+11])
                                  Pexp_ident "s" (lib/SparseBitSet.ml[195,4986+10]..[195,4986+11])
                                Some
                                  expression (lib/SparseBitSet.ml[197,5011+10]..[197,5011+69])
                                    Pexp_ifthenelse
                                    expression (lib/SparseBitSet.ml[197,5011+13]..[197,5011+39])
                                      Pexp_apply
                                      expression (lib/SparseBitSet.ml[197,5011+28]..[197,5011+30])
                                        Pexp_ident "&&" (lib/SparseBitSet.ml[197,5011+28]..[197,5011+30])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/SparseBitSet.ml[197,5011+13]..[197,5011+27])
                                            Pexp_apply
                                            expression (lib/SparseBitSet.ml[197,5011+13]..[197,5011+20])
                                              Pexp_ident "A.equal" (lib/SparseBitSet.ml[197,5011+13]..[197,5011+20])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/SparseBitSet.ml[197,5011+21]..[197,5011+23])
                                                  Pexp_ident "ss" (lib/SparseBitSet.ml[197,5011+21]..[197,5011+23])
                                              <arg>
                                              Nolabel
                                                expression (lib/SparseBitSet.ml[197,5011+24]..[197,5011+27])
                                                  Pexp_ident "ss1" (lib/SparseBitSet.ml[197,5011+24]..[197,5011+27])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/SparseBitSet.ml[197,5011+31]..[197,5011+39])
                                            Pexp_apply
                                            expression (lib/SparseBitSet.ml[197,5011+33]..[197,5011+35])
                                              Pexp_ident "==" (lib/SparseBitSet.ml[197,5011+33]..[197,5011+35])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/SparseBitSet.ml[197,5011+31]..[197,5011+32])
                                                  Pexp_ident "s" (lib/SparseBitSet.ml[197,5011+31]..[197,5011+32])
                                              <arg>
                                              Nolabel
                                                expression (lib/SparseBitSet.ml[197,5011+36]..[197,5011+39])
                                                  Pexp_ident "qs1" (lib/SparseBitSet.ml[197,5011+36]..[197,5011+39])
                                            ]
                                      ]
                                    expression (lib/SparseBitSet.ml[197,5011+45]..[197,5011+47])
                                      Pexp_ident "s1" (lib/SparseBitSet.ml[197,5011+45]..[197,5011+47])
                                    Some
                                      expression (lib/SparseBitSet.ml[197,5011+53]..[197,5011+69])
                                        Pexp_construct "C" (lib/SparseBitSet.ml[197,5011+53]..[197,5011+54])
                                        Some
                                          expression (lib/SparseBitSet.ml[197,5011+55]..[197,5011+69])
                                            Pexp_tuple
                                            [
                                              expression (lib/SparseBitSet.ml[197,5011+56]..[197,5011+61])
                                                Pexp_ident "addr1" (lib/SparseBitSet.ml[197,5011+56]..[197,5011+61])
                                              expression (lib/SparseBitSet.ml[197,5011+63]..[197,5011+65])
                                                Pexp_ident "ss" (lib/SparseBitSet.ml[197,5011+63]..[197,5011+65])
                                              expression (lib/SparseBitSet.ml[197,5011+67]..[197,5011+68])
                                                Pexp_ident "s" (lib/SparseBitSet.ml[197,5011+67]..[197,5011+68])
                                            ]
              ]
    ]
  structure_item (lib/SparseBitSet.ml[199,5082+0]..[205,5202+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[199,5082+4]..[199,5082+10])
          Ppat_var "choose" (lib/SparseBitSet.ml[199,5082+4]..[199,5082+10])
        expression (lib/SparseBitSet.ml[199,5082+11]..[205,5202+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/SparseBitSet.ml[199,5082+11]..[199,5082+12])
            Ppat_var "s" (lib/SparseBitSet.ml[199,5082+11]..[199,5082+12])
          expression (lib/SparseBitSet.ml[200,5097+2]..[205,5202+24])
            Pexp_match
            expression (lib/SparseBitSet.ml[200,5097+8]..[200,5097+9])
              Pexp_ident "s" (lib/SparseBitSet.ml[200,5097+8]..[200,5097+9])
            [
              <case>
                pattern (lib/SparseBitSet.ml[201,5112+4]..[201,5112+5])
                  Ppat_construct "N" (lib/SparseBitSet.ml[201,5112+4]..[201,5112+5])
                  None
                expression (lib/SparseBitSet.ml[202,5121+6]..[202,5121+21])
                  Pexp_apply
                  expression (lib/SparseBitSet.ml[202,5121+6]..[202,5121+11])
                    Pexp_ident "raise" (lib/SparseBitSet.ml[202,5121+6]..[202,5121+11])
                  [
                    <arg>
                    Nolabel
                      expression (lib/SparseBitSet.ml[202,5121+12]..[202,5121+21])
                        Pexp_construct "Not_found" (lib/SparseBitSet.ml[202,5121+12]..[202,5121+21])
                        None
                  ]
              <case>
                pattern (lib/SparseBitSet.ml[203,5143+4]..[203,5143+19])
                  Ppat_construct "C" (lib/SparseBitSet.ml[203,5143+4]..[203,5143+5])
                  Some
                    []
                    pattern (lib/SparseBitSet.ml[203,5143+6]..[203,5143+19])
                      Ppat_tuple
                      [
                        pattern (lib/SparseBitSet.ml[203,5143+7]..[203,5143+11])
                          Ppat_var "addr" (lib/SparseBitSet.ml[203,5143+7]..[203,5143+11])
                        pattern (lib/SparseBitSet.ml[203,5143+13]..[203,5143+15])
                          Ppat_var "ss" (lib/SparseBitSet.ml[203,5143+13]..[203,5143+15])
                        pattern (lib/SparseBitSet.ml[203,5143+17]..[203,5143+18])
                          Ppat_any
                      ]
                expression (lib/SparseBitSet.ml[204,5166+6]..[205,5202+24])
                  Pexp_sequence
                  expression (lib/SparseBitSet.ml[204,5166+6]..[204,5166+34])
                    Pexp_assert
                    expression (lib/SparseBitSet.ml[204,5166+13]..[204,5166+34])
                      Pexp_apply
                      expression (lib/SparseBitSet.ml[204,5166+14]..[204,5166+17])
                        Pexp_ident "not" (lib/SparseBitSet.ml[204,5166+14]..[204,5166+17])
                      [
                        <arg>
                        Nolabel
                          expression (lib/SparseBitSet.ml[204,5166+18]..[204,5166+33])
                            Pexp_apply
                            expression (lib/SparseBitSet.ml[204,5166+19]..[204,5166+29])
                              Pexp_ident "A.is_empty" (lib/SparseBitSet.ml[204,5166+19]..[204,5166+29])
                            [
                              <arg>
                              Nolabel
                                expression (lib/SparseBitSet.ml[204,5166+30]..[204,5166+32])
                                  Pexp_ident "ss" (lib/SparseBitSet.ml[204,5166+30]..[204,5166+32])
                            ]
                      ]
                  expression (lib/SparseBitSet.ml[205,5202+6]..[205,5202+24])
                    Pexp_apply
                    expression (lib/SparseBitSet.ml[205,5202+11]..[205,5202+12])
                      Pexp_ident "+" (lib/SparseBitSet.ml[205,5202+11]..[205,5202+12])
                    [
                      <arg>
                      Nolabel
                        expression (lib/SparseBitSet.ml[205,5202+6]..[205,5202+10])
                          Pexp_ident "addr" (lib/SparseBitSet.ml[205,5202+6]..[205,5202+10])
                      <arg>
                      Nolabel
                        expression (lib/SparseBitSet.ml[205,5202+13]..[205,5202+24])
                          Pexp_apply
                          expression (lib/SparseBitSet.ml[205,5202+13]..[205,5202+21])
                            Pexp_ident "A.choose" (lib/SparseBitSet.ml[205,5202+13]..[205,5202+21])
                          [
                            <arg>
                            Nolabel
                              expression (lib/SparseBitSet.ml[205,5202+22]..[205,5202+24])
                                Pexp_ident "ss" (lib/SparseBitSet.ml[205,5202+22]..[205,5202+24])
                          ]
                    ]
            ]
    ]
  structure_item (lib/SparseBitSet.ml[207,5228+0]..[220,5564+18])
    Pstr_value Rec
    [
      <def>
        pattern (lib/SparseBitSet.ml[207,5228+8]..[207,5228+15])
          Ppat_var "compare" (lib/SparseBitSet.ml[207,5228+8]..[207,5228+15])
        expression (lib/SparseBitSet.ml[207,5228+16]..[220,5564+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/SparseBitSet.ml[207,5228+16]..[207,5228+17])
            Ppat_var "x" (lib/SparseBitSet.ml[207,5228+16]..[207,5228+17])
          expression (lib/SparseBitSet.ml[207,5228+18]..[220,5564+18]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/SparseBitSet.ml[207,5228+18]..[207,5228+19])
              Ppat_var "y" (lib/SparseBitSet.ml[207,5228+18]..[207,5228+19])
            expression (lib/SparseBitSet.ml[208,5250+2]..[220,5564+18])
              Pexp_ifthenelse
              expression (lib/SparseBitSet.ml[208,5250+5]..[208,5250+11])
                Pexp_apply
                expression (lib/SparseBitSet.ml[208,5250+7]..[208,5250+9])
                  Pexp_ident "==" (lib/SparseBitSet.ml[208,5250+7]..[208,5250+9])
                [
                  <arg>
                  Nolabel
                    expression (lib/SparseBitSet.ml[208,5250+5]..[208,5250+6])
                      Pexp_ident "x" (lib/SparseBitSet.ml[208,5250+5]..[208,5250+6])
                  <arg>
                  Nolabel
                    expression (lib/SparseBitSet.ml[208,5250+10]..[208,5250+11])
                      Pexp_ident "y" (lib/SparseBitSet.ml[208,5250+10]..[208,5250+11])
                ]
              expression (lib/SparseBitSet.ml[208,5250+17]..[208,5250+18])
                Pexp_constant PConst_int (0,None)
              Some
                expression (lib/SparseBitSet.ml[209,5274+4]..[220,5564+18])
                  Pexp_match
                  expression (lib/SparseBitSet.ml[209,5274+10]..[209,5274+14])
                    Pexp_tuple
                    [
                      expression (lib/SparseBitSet.ml[209,5274+10]..[209,5274+11])
                        Pexp_ident "x" (lib/SparseBitSet.ml[209,5274+10]..[209,5274+11])
                      expression (lib/SparseBitSet.ml[209,5274+13]..[209,5274+14])
                        Pexp_ident "y" (lib/SparseBitSet.ml[209,5274+13]..[209,5274+14])
                    ]
                  [
                    <case>
                      pattern (lib/SparseBitSet.ml[210,5294+6]..[210,5294+40])
                        Ppat_tuple
                        [
                          pattern (lib/SparseBitSet.ml[210,5294+6]..[210,5294+22])
                            Ppat_construct "C" (lib/SparseBitSet.ml[210,5294+6]..[210,5294+7])
                            Some
                              []
                              pattern (lib/SparseBitSet.ml[210,5294+8]..[210,5294+22])
                                Ppat_tuple
                                [
                                  pattern (lib/SparseBitSet.ml[210,5294+9]..[210,5294+11])
                                    Ppat_var "a1" (lib/SparseBitSet.ml[210,5294+9]..[210,5294+11])
                                  pattern (lib/SparseBitSet.ml[210,5294+13]..[210,5294+16])
                                    Ppat_var "ss1" (lib/SparseBitSet.ml[210,5294+13]..[210,5294+16])
                                  pattern (lib/SparseBitSet.ml[210,5294+18]..[210,5294+21])
                                    Ppat_var "qs1" (lib/SparseBitSet.ml[210,5294+18]..[210,5294+21])
                                ]
                          pattern (lib/SparseBitSet.ml[210,5294+24]..[210,5294+40])
                            Ppat_construct "C" (lib/SparseBitSet.ml[210,5294+24]..[210,5294+25])
                            Some
                              []
                              pattern (lib/SparseBitSet.ml[210,5294+26]..[210,5294+40])
                                Ppat_tuple
                                [
                                  pattern (lib/SparseBitSet.ml[210,5294+27]..[210,5294+29])
                                    Ppat_var "a2" (lib/SparseBitSet.ml[210,5294+27]..[210,5294+29])
                                  pattern (lib/SparseBitSet.ml[210,5294+31]..[210,5294+34])
                                    Ppat_var "ss2" (lib/SparseBitSet.ml[210,5294+31]..[210,5294+34])
                                  pattern (lib/SparseBitSet.ml[210,5294+36]..[210,5294+39])
                                    Ppat_var "qs2" (lib/SparseBitSet.ml[210,5294+36]..[210,5294+39])
                                ]
                        ]
                      expression (lib/SparseBitSet.ml[211,5338+6]..[217,5520+9])
                        Pexp_match
                        expression (lib/SparseBitSet.ml[211,5338+18]..[211,5338+39])
                          Pexp_apply
                          expression (lib/SparseBitSet.ml[211,5338+18]..[211,5338+33])
                            Pexp_ident "Generic.compare" (lib/SparseBitSet.ml[211,5338+18]..[211,5338+33])
                          [
                            <arg>
                            Nolabel
                              expression (lib/SparseBitSet.ml[211,5338+34]..[211,5338+36])
                                Pexp_ident "a1" (lib/SparseBitSet.ml[211,5338+34]..[211,5338+36])
                            <arg>
                            Nolabel
                              expression (lib/SparseBitSet.ml[211,5338+37]..[211,5338+39])
                                Pexp_ident "a2" (lib/SparseBitSet.ml[211,5338+37]..[211,5338+39])
                          ]
                        [
                          <case>
                            pattern (lib/SparseBitSet.ml[212,5383+10]..[212,5383+11])
                              Ppat_constant PConst_int (0,None)
                            expression (lib/SparseBitSet.ml[212,5383+15]..[215,5489+13])
                              Pexp_match
                              expression (lib/SparseBitSet.ml[212,5383+27]..[212,5383+44])
                                Pexp_apply
                                expression (lib/SparseBitSet.ml[212,5383+27]..[212,5383+36])
                                  Pexp_ident "A.compare" (lib/SparseBitSet.ml[212,5383+27]..[212,5383+36])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/SparseBitSet.ml[212,5383+37]..[212,5383+40])
                                      Pexp_ident "ss1" (lib/SparseBitSet.ml[212,5383+37]..[212,5383+40])
                                  <arg>
                                  Nolabel
                                    expression (lib/SparseBitSet.ml[212,5383+41]..[212,5383+44])
                                      Pexp_ident "ss2" (lib/SparseBitSet.ml[212,5383+41]..[212,5383+44])
                                ]
                              [
                                <case>
                                  pattern (lib/SparseBitSet.ml[213,5433+14]..[213,5433+15])
                                    Ppat_constant PConst_int (0,None)
                                  expression (lib/SparseBitSet.ml[213,5433+19]..[213,5433+34])
                                    Pexp_apply
                                    expression (lib/SparseBitSet.ml[213,5433+19]..[213,5433+26])
                                      Pexp_ident "compare" (lib/SparseBitSet.ml[213,5433+19]..[213,5433+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/SparseBitSet.ml[213,5433+27]..[213,5433+30])
                                          Pexp_ident "qs1" (lib/SparseBitSet.ml[213,5433+27]..[213,5433+30])
                                      <arg>
                                      Nolabel
                                        expression (lib/SparseBitSet.ml[213,5433+31]..[213,5433+34])
                                          Pexp_ident "qs2" (lib/SparseBitSet.ml[213,5433+31]..[213,5433+34])
                                    ]
                                <case>
                                  pattern (lib/SparseBitSet.ml[214,5468+14]..[214,5468+15])
                                    Ppat_var "n" (lib/SparseBitSet.ml[214,5468+14]..[214,5468+15])
                                  expression (lib/SparseBitSet.ml[214,5468+19]..[214,5468+20])
                                    Pexp_ident "n" (lib/SparseBitSet.ml[214,5468+19]..[214,5468+20])
                              ]
                          <case>
                            pattern (lib/SparseBitSet.ml[216,5503+10]..[216,5503+11])
                              Ppat_var "n" (lib/SparseBitSet.ml[216,5503+10]..[216,5503+11])
                            expression (lib/SparseBitSet.ml[216,5503+15]..[216,5503+16])
                              Pexp_ident "n" (lib/SparseBitSet.ml[216,5503+15]..[216,5503+16])
                        ]
                    <case>
                      pattern (lib/SparseBitSet.ml[218,5530+6]..[218,5530+10])
                        Ppat_tuple
                        [
                          pattern (lib/SparseBitSet.ml[218,5530+6]..[218,5530+7])
                            Ppat_construct "N" (lib/SparseBitSet.ml[218,5530+6]..[218,5530+7])
                            None
                          pattern (lib/SparseBitSet.ml[218,5530+9]..[218,5530+10])
                            Ppat_construct "N" (lib/SparseBitSet.ml[218,5530+9]..[218,5530+10])
                            None
                        ]
                      expression (lib/SparseBitSet.ml[218,5530+14]..[218,5530+15])
                        Pexp_constant PConst_int (0,None)
                    <case>
                      pattern (lib/SparseBitSet.ml[219,5546+6]..[219,5546+12])
                        Ppat_tuple
                        [
                          pattern (lib/SparseBitSet.ml[219,5546+6]..[219,5546+9])
                            Ppat_construct "C" (lib/SparseBitSet.ml[219,5546+6]..[219,5546+7])
                            Some
                              []
                              pattern (lib/SparseBitSet.ml[219,5546+8]..[219,5546+9])
                                Ppat_any
                          pattern (lib/SparseBitSet.ml[219,5546+11]..[219,5546+12])
                            Ppat_construct "N" (lib/SparseBitSet.ml[219,5546+11]..[219,5546+12])
                            None
                        ]
                      expression (lib/SparseBitSet.ml[219,5546+16]..[219,5546+17])
                        Pexp_constant PConst_int (1,None)
                    <case>
                      pattern (lib/SparseBitSet.ml[220,5564+6]..[220,5564+12])
                        Ppat_tuple
                        [
                          pattern (lib/SparseBitSet.ml[220,5564+6]..[220,5564+7])
                            Ppat_construct "N" (lib/SparseBitSet.ml[220,5564+6]..[220,5564+7])
                            None
                          pattern (lib/SparseBitSet.ml[220,5564+9]..[220,5564+12])
                            Ppat_construct "C" (lib/SparseBitSet.ml[220,5564+9]..[220,5564+10])
                            Some
                              []
                              pattern (lib/SparseBitSet.ml[220,5564+11]..[220,5564+12])
                                Ppat_any
                        ]
                      expression (lib/SparseBitSet.ml[220,5564+16]..[220,5564+18])
                        Pexp_constant PConst_int (-1,None)
                  ]
    ]
  structure_item (lib/SparseBitSet.ml[222,5584+0]..[230,5751+28])
    Pstr_value Rec
    [
      <def>
        pattern (lib/SparseBitSet.ml[222,5584+8]..[222,5584+13])
          Ppat_var "equal" (lib/SparseBitSet.ml[222,5584+8]..[222,5584+13])
        expression (lib/SparseBitSet.ml[222,5584+14]..[230,5751+28]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/SparseBitSet.ml[222,5584+14]..[222,5584+15])
            Ppat_var "x" (lib/SparseBitSet.ml[222,5584+14]..[222,5584+15])
          expression (lib/SparseBitSet.ml[222,5584+16]..[230,5751+28]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/SparseBitSet.ml[222,5584+16]..[222,5584+17])
              Ppat_var "y" (lib/SparseBitSet.ml[222,5584+16]..[222,5584+17])
            expression (lib/SparseBitSet.ml[223,5604+2]..[230,5751+28])
              Pexp_apply
              expression (lib/SparseBitSet.ml[223,5604+11]..[223,5604+13])
                Pexp_ident "||" (lib/SparseBitSet.ml[223,5604+11]..[223,5604+13])
              [
                <arg>
                Nolabel
                  expression (lib/SparseBitSet.ml[223,5604+2]..[223,5604+10])
                    Pexp_apply
                    expression (lib/SparseBitSet.ml[223,5604+5]..[223,5604+7])
                      Pexp_ident "==" (lib/SparseBitSet.ml[223,5604+5]..[223,5604+7])
                    [
                      <arg>
                      Nolabel
                        expression (lib/SparseBitSet.ml[223,5604+3]..[223,5604+4])
                          Pexp_ident "x" (lib/SparseBitSet.ml[223,5604+3]..[223,5604+4])
                      <arg>
                      Nolabel
                        expression (lib/SparseBitSet.ml[223,5604+8]..[223,5604+9])
                          Pexp_ident "y" (lib/SparseBitSet.ml[223,5604+8]..[223,5604+9])
                    ]
                <arg>
                Nolabel
                  expression (lib/SparseBitSet.ml[224,5618+2]..[230,5751+28])
                    Pexp_match
                    expression (lib/SparseBitSet.ml[224,5618+8]..[224,5618+12])
                      Pexp_tuple
                      [
                        expression (lib/SparseBitSet.ml[224,5618+8]..[224,5618+9])
                          Pexp_ident "x" (lib/SparseBitSet.ml[224,5618+8]..[224,5618+9])
                        expression (lib/SparseBitSet.ml[224,5618+11]..[224,5618+12])
                          Pexp_ident "y" (lib/SparseBitSet.ml[224,5618+11]..[224,5618+12])
                      ]
                    [
                      <case>
                        pattern (lib/SparseBitSet.ml[225,5636+4]..[225,5636+38])
                          Ppat_tuple
                          [
                            pattern (lib/SparseBitSet.ml[225,5636+4]..[225,5636+20])
                              Ppat_construct "C" (lib/SparseBitSet.ml[225,5636+4]..[225,5636+5])
                              Some
                                []
                                pattern (lib/SparseBitSet.ml[225,5636+6]..[225,5636+20])
                                  Ppat_tuple
                                  [
                                    pattern (lib/SparseBitSet.ml[225,5636+7]..[225,5636+9])
                                      Ppat_var "a1" (lib/SparseBitSet.ml[225,5636+7]..[225,5636+9])
                                    pattern (lib/SparseBitSet.ml[225,5636+11]..[225,5636+14])
                                      Ppat_var "ss1" (lib/SparseBitSet.ml[225,5636+11]..[225,5636+14])
                                    pattern (lib/SparseBitSet.ml[225,5636+16]..[225,5636+19])
                                      Ppat_var "qs1" (lib/SparseBitSet.ml[225,5636+16]..[225,5636+19])
                                  ]
                            pattern (lib/SparseBitSet.ml[225,5636+22]..[225,5636+38])
                              Ppat_construct "C" (lib/SparseBitSet.ml[225,5636+22]..[225,5636+23])
                              Some
                                []
                                pattern (lib/SparseBitSet.ml[225,5636+24]..[225,5636+38])
                                  Ppat_tuple
                                  [
                                    pattern (lib/SparseBitSet.ml[225,5636+25]..[225,5636+27])
                                      Ppat_var "a2" (lib/SparseBitSet.ml[225,5636+25]..[225,5636+27])
                                    pattern (lib/SparseBitSet.ml[225,5636+29]..[225,5636+32])
                                      Ppat_var "ss2" (lib/SparseBitSet.ml[225,5636+29]..[225,5636+32])
                                    pattern (lib/SparseBitSet.ml[225,5636+34]..[225,5636+37])
                                      Ppat_var "qs2" (lib/SparseBitSet.ml[225,5636+34]..[225,5636+37])
                                  ]
                          ]
                        expression (lib/SparseBitSet.ml[226,5678+4]..[228,5716+17])
                          Pexp_apply
                          expression (lib/SparseBitSet.ml[226,5678+12]..[226,5678+14])
                            Pexp_ident "&&" (lib/SparseBitSet.ml[226,5678+12]..[226,5678+14])
                          [
                            <arg>
                            Nolabel
                              expression (lib/SparseBitSet.ml[226,5678+4]..[226,5678+11])
                                Pexp_apply
                                expression (lib/SparseBitSet.ml[226,5678+7]..[226,5678+8])
                                  Pexp_ident "=" (lib/SparseBitSet.ml[226,5678+7]..[226,5678+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/SparseBitSet.ml[226,5678+4]..[226,5678+6])
                                      Pexp_ident "a1" (lib/SparseBitSet.ml[226,5678+4]..[226,5678+6])
                                  <arg>
                                  Nolabel
                                    expression (lib/SparseBitSet.ml[226,5678+9]..[226,5678+11])
                                      Pexp_ident "a2" (lib/SparseBitSet.ml[226,5678+9]..[226,5678+11])
                                ]
                            <arg>
                            Nolabel
                              expression (lib/SparseBitSet.ml[227,5693+4]..[228,5716+17])
                                Pexp_apply
                                expression (lib/SparseBitSet.ml[227,5693+20]..[227,5693+22])
                                  Pexp_ident "&&" (lib/SparseBitSet.ml[227,5693+20]..[227,5693+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/SparseBitSet.ml[227,5693+4]..[227,5693+19])
                                      Pexp_apply
                                      expression (lib/SparseBitSet.ml[227,5693+4]..[227,5693+11])
                                        Pexp_ident "A.equal" (lib/SparseBitSet.ml[227,5693+4]..[227,5693+11])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/SparseBitSet.ml[227,5693+12]..[227,5693+15])
                                            Pexp_ident "ss1" (lib/SparseBitSet.ml[227,5693+12]..[227,5693+15])
                                        <arg>
                                        Nolabel
                                          expression (lib/SparseBitSet.ml[227,5693+16]..[227,5693+19])
                                            Pexp_ident "ss2" (lib/SparseBitSet.ml[227,5693+16]..[227,5693+19])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lib/SparseBitSet.ml[228,5716+4]..[228,5716+17])
                                      Pexp_apply
                                      expression (lib/SparseBitSet.ml[228,5716+4]..[228,5716+9])
                                        Pexp_ident "equal" (lib/SparseBitSet.ml[228,5716+4]..[228,5716+9])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/SparseBitSet.ml[228,5716+10]..[228,5716+13])
                                            Pexp_ident "qs1" (lib/SparseBitSet.ml[228,5716+10]..[228,5716+13])
                                        <arg>
                                        Nolabel
                                          expression (lib/SparseBitSet.ml[228,5716+14]..[228,5716+17])
                                            Pexp_ident "qs2" (lib/SparseBitSet.ml[228,5716+14]..[228,5716+17])
                                      ]
                                ]
                          ]
                      <case>
                        pattern (lib/SparseBitSet.ml[229,5734+4]..[229,5734+8])
                          Ppat_tuple
                          [
                            pattern (lib/SparseBitSet.ml[229,5734+4]..[229,5734+5])
                              Ppat_construct "N" (lib/SparseBitSet.ml[229,5734+4]..[229,5734+5])
                              None
                            pattern (lib/SparseBitSet.ml[229,5734+7]..[229,5734+8])
                              Ppat_construct "N" (lib/SparseBitSet.ml[229,5734+7]..[229,5734+8])
                              None
                          ]
                        expression (lib/SparseBitSet.ml[229,5734+12]..[229,5734+16])
                          Pexp_construct "true" (lib/SparseBitSet.ml[229,5734+12]..[229,5734+16])
                          None
                      <case>
                        pattern (lib/SparseBitSet.ml[230,5751+4]..[230,5751+19])
                          Ppat_or
                          pattern (lib/SparseBitSet.ml[230,5751+4]..[230,5751+10])
                            Ppat_tuple
                            [
                              pattern (lib/SparseBitSet.ml[230,5751+4]..[230,5751+7])
                                Ppat_construct "C" (lib/SparseBitSet.ml[230,5751+4]..[230,5751+5])
                                Some
                                  []
                                  pattern (lib/SparseBitSet.ml[230,5751+6]..[230,5751+7])
                                    Ppat_any
                              pattern (lib/SparseBitSet.ml[230,5751+9]..[230,5751+10])
                                Ppat_construct "N" (lib/SparseBitSet.ml[230,5751+9]..[230,5751+10])
                                None
                            ]
                          pattern (lib/SparseBitSet.ml[230,5751+13]..[230,5751+19])
                            Ppat_tuple
                            [
                              pattern (lib/SparseBitSet.ml[230,5751+13]..[230,5751+14])
                                Ppat_construct "N" (lib/SparseBitSet.ml[230,5751+13]..[230,5751+14])
                                None
                              pattern (lib/SparseBitSet.ml[230,5751+16]..[230,5751+19])
                                Ppat_construct "C" (lib/SparseBitSet.ml[230,5751+16]..[230,5751+17])
                                Some
                                  []
                                  pattern (lib/SparseBitSet.ml[230,5751+18]..[230,5751+19])
                                    Ppat_any
                            ]
                        expression (lib/SparseBitSet.ml[230,5751+23]..[230,5751+28])
                          Pexp_construct "false" (lib/SparseBitSet.ml[230,5751+23]..[230,5751+28])
                          None
                    ]
              ]
    ]
  structure_item (lib/SparseBitSet.ml[232,5781+0]..[243,6049+23])
    Pstr_value Rec
    [
      <def>
        pattern (lib/SparseBitSet.ml[232,5781+8]..[232,5781+16])
          Ppat_var "disjoint" (lib/SparseBitSet.ml[232,5781+8]..[232,5781+16])
        expression (lib/SparseBitSet.ml[232,5781+17]..[243,6049+23]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/SparseBitSet.ml[232,5781+17]..[232,5781+19])
            Ppat_var "s1" (lib/SparseBitSet.ml[232,5781+17]..[232,5781+19])
          expression (lib/SparseBitSet.ml[232,5781+20]..[243,6049+23]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/SparseBitSet.ml[232,5781+20]..[232,5781+22])
              Ppat_var "s2" (lib/SparseBitSet.ml[232,5781+20]..[232,5781+22])
            expression (lib/SparseBitSet.ml[233,5806+2]..[243,6049+23])
              Pexp_match
              expression (lib/SparseBitSet.ml[233,5806+8]..[233,5806+14])
                Pexp_tuple
                [
                  expression (lib/SparseBitSet.ml[233,5806+8]..[233,5806+10])
                    Pexp_ident "s1" (lib/SparseBitSet.ml[233,5806+8]..[233,5806+10])
                  expression (lib/SparseBitSet.ml[233,5806+12]..[233,5806+14])
                    Pexp_ident "s2" (lib/SparseBitSet.ml[233,5806+12]..[233,5806+14])
                ]
              [
                <case>
                  pattern (lib/SparseBitSet.ml[234,5826+4]..[235,5835+8])
                    Ppat_or
                    pattern (lib/SparseBitSet.ml[234,5826+4]..[234,5826+8])
                      Ppat_tuple
                      [
                        pattern (lib/SparseBitSet.ml[234,5826+4]..[234,5826+5])
                          Ppat_construct "N" (lib/SparseBitSet.ml[234,5826+4]..[234,5826+5])
                          None
                        pattern (lib/SparseBitSet.ml[234,5826+7]..[234,5826+8])
                          Ppat_any
                      ]
                    pattern (lib/SparseBitSet.ml[235,5835+4]..[235,5835+8])
                      Ppat_tuple
                      [
                        pattern (lib/SparseBitSet.ml[235,5835+4]..[235,5835+5])
                          Ppat_any
                        pattern (lib/SparseBitSet.ml[235,5835+7]..[235,5835+8])
                          Ppat_construct "N" (lib/SparseBitSet.ml[235,5835+7]..[235,5835+8])
                          None
                      ]
                  expression (lib/SparseBitSet.ml[236,5847+6]..[236,5847+10])
                    Pexp_construct "true" (lib/SparseBitSet.ml[236,5847+6]..[236,5847+10])
                    None
                <case>
                  pattern (lib/SparseBitSet.ml[237,5858+4]..[237,5858+44])
                    Ppat_tuple
                    [
                      pattern (lib/SparseBitSet.ml[237,5858+4]..[237,5858+23])
                        Ppat_construct "C" (lib/SparseBitSet.ml[237,5858+4]..[237,5858+5])
                        Some
                          []
                          pattern (lib/SparseBitSet.ml[237,5858+6]..[237,5858+23])
                            Ppat_tuple
                            [
                              pattern (lib/SparseBitSet.ml[237,5858+7]..[237,5858+12])
                                Ppat_var "addr1" (lib/SparseBitSet.ml[237,5858+7]..[237,5858+12])
                              pattern (lib/SparseBitSet.ml[237,5858+14]..[237,5858+17])
                                Ppat_var "ss1" (lib/SparseBitSet.ml[237,5858+14]..[237,5858+17])
                              pattern (lib/SparseBitSet.ml[237,5858+19]..[237,5858+22])
                                Ppat_var "qs1" (lib/SparseBitSet.ml[237,5858+19]..[237,5858+22])
                            ]
                      pattern (lib/SparseBitSet.ml[237,5858+25]..[237,5858+44])
                        Ppat_construct "C" (lib/SparseBitSet.ml[237,5858+25]..[237,5858+26])
                        Some
                          []
                          pattern (lib/SparseBitSet.ml[237,5858+27]..[237,5858+44])
                            Ppat_tuple
                            [
                              pattern (lib/SparseBitSet.ml[237,5858+28]..[237,5858+33])
                                Ppat_var "addr2" (lib/SparseBitSet.ml[237,5858+28]..[237,5858+33])
                              pattern (lib/SparseBitSet.ml[237,5858+35]..[237,5858+38])
                                Ppat_var "ss2" (lib/SparseBitSet.ml[237,5858+35]..[237,5858+38])
                              pattern (lib/SparseBitSet.ml[237,5858+40]..[237,5858+43])
                                Ppat_var "qs2" (lib/SparseBitSet.ml[237,5858+40]..[237,5858+43])
                            ]
                    ]
                  expression (lib/SparseBitSet.ml[238,5906+6]..[243,6049+23])
                    Pexp_ifthenelse
                    expression (lib/SparseBitSet.ml[238,5906+9]..[238,5906+22])
                      Pexp_apply
                      expression (lib/SparseBitSet.ml[238,5906+15]..[238,5906+16])
                        Pexp_ident "=" (lib/SparseBitSet.ml[238,5906+15]..[238,5906+16])
                      [
                        <arg>
                        Nolabel
                          expression (lib/SparseBitSet.ml[238,5906+9]..[238,5906+14])
                            Pexp_ident "addr1" (lib/SparseBitSet.ml[238,5906+9]..[238,5906+14])
                        <arg>
                        Nolabel
                          expression (lib/SparseBitSet.ml[238,5906+17]..[238,5906+22])
                            Pexp_ident "addr2" (lib/SparseBitSet.ml[238,5906+17]..[238,5906+22])
                      ]
                    expression (lib/SparseBitSet.ml[239,5934+8]..[239,5934+46])
                      Pexp_apply
                      expression (lib/SparseBitSet.ml[239,5934+27]..[239,5934+29])
                        Pexp_ident "&&" (lib/SparseBitSet.ml[239,5934+27]..[239,5934+29])
                      [
                        <arg>
                        Nolabel
                          expression (lib/SparseBitSet.ml[239,5934+8]..[239,5934+26])
                            Pexp_apply
                            expression (lib/SparseBitSet.ml[239,5934+8]..[239,5934+18])
                              Pexp_ident "A.disjoint" (lib/SparseBitSet.ml[239,5934+8]..[239,5934+18])
                            [
                              <arg>
                              Nolabel
                                expression (lib/SparseBitSet.ml[239,5934+19]..[239,5934+22])
                                  Pexp_ident "ss1" (lib/SparseBitSet.ml[239,5934+19]..[239,5934+22])
                              <arg>
                              Nolabel
                                expression (lib/SparseBitSet.ml[239,5934+23]..[239,5934+26])
                                  Pexp_ident "ss2" (lib/SparseBitSet.ml[239,5934+23]..[239,5934+26])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/SparseBitSet.ml[239,5934+30]..[239,5934+46])
                            Pexp_apply
                            expression (lib/SparseBitSet.ml[239,5934+30]..[239,5934+38])
                              Pexp_ident "disjoint" (lib/SparseBitSet.ml[239,5934+30]..[239,5934+38])
                            [
                              <arg>
                              Nolabel
                                expression (lib/SparseBitSet.ml[239,5934+39]..[239,5934+42])
                                  Pexp_ident "qs1" (lib/SparseBitSet.ml[239,5934+39]..[239,5934+42])
                              <arg>
                              Nolabel
                                expression (lib/SparseBitSet.ml[239,5934+43]..[239,5934+46])
                                  Pexp_ident "qs2" (lib/SparseBitSet.ml[239,5934+43]..[239,5934+46])
                            ]
                      ]
                    Some
                      expression (lib/SparseBitSet.ml[240,5981+11]..[243,6049+23])
                        Pexp_ifthenelse
                        expression (lib/SparseBitSet.ml[240,5981+14]..[240,5981+27])
                          Pexp_apply
                          expression (lib/SparseBitSet.ml[240,5981+20]..[240,5981+21])
                            Pexp_ident "<" (lib/SparseBitSet.ml[240,5981+20]..[240,5981+21])
                          [
                            <arg>
                            Nolabel
                              expression (lib/SparseBitSet.ml[240,5981+14]..[240,5981+19])
                                Pexp_ident "addr1" (lib/SparseBitSet.ml[240,5981+14]..[240,5981+19])
                            <arg>
                            Nolabel
                              expression (lib/SparseBitSet.ml[240,5981+22]..[240,5981+27])
                                Pexp_ident "addr2" (lib/SparseBitSet.ml[240,5981+22]..[240,5981+27])
                          ]
                        expression (lib/SparseBitSet.ml[241,6014+8]..[241,6014+23])
                          Pexp_apply
                          expression (lib/SparseBitSet.ml[241,6014+8]..[241,6014+16])
                            Pexp_ident "disjoint" (lib/SparseBitSet.ml[241,6014+8]..[241,6014+16])
                          [
                            <arg>
                            Nolabel
                              expression (lib/SparseBitSet.ml[241,6014+17]..[241,6014+20])
                                Pexp_ident "qs1" (lib/SparseBitSet.ml[241,6014+17]..[241,6014+20])
                            <arg>
                            Nolabel
                              expression (lib/SparseBitSet.ml[241,6014+21]..[241,6014+23])
                                Pexp_ident "s2" (lib/SparseBitSet.ml[241,6014+21]..[241,6014+23])
                          ]
                        Some
                          expression (lib/SparseBitSet.ml[243,6049+8]..[243,6049+23])
                            Pexp_apply
                            expression (lib/SparseBitSet.ml[243,6049+8]..[243,6049+16])
                              Pexp_ident "disjoint" (lib/SparseBitSet.ml[243,6049+8]..[243,6049+16])
                            [
                              <arg>
                              Nolabel
                                expression (lib/SparseBitSet.ml[243,6049+17]..[243,6049+19])
                                  Pexp_ident "s1" (lib/SparseBitSet.ml[243,6049+17]..[243,6049+19])
                              <arg>
                              Nolabel
                                expression (lib/SparseBitSet.ml[243,6049+20]..[243,6049+23])
                                  Pexp_ident "qs2" (lib/SparseBitSet.ml[243,6049+20]..[243,6049+23])
                            ]
              ]
    ]
  structure_item (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
          Ppat_construct "()" (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
          None
        expression (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
          Pexp_apply
          expression (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
            Pexp_ident "Ppx_inline_test_lib.unset_lib" (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
          [
            <arg>
            Nolabel
              expression (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost,None)
          ]
    ]
  structure_item (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
          Ppat_construct "()" (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
          None
        expression (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
          Pexp_apply
          expression (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
            Pexp_ident "Expect_test_collector.Current_file.unset" (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
          [
            <arg>
            Nolabel
              expression (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
                Pexp_construct "()" (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
                None
          ]
    ]
  structure_item (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
          Ppat_construct "()" (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
          None
        expression (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
          Pexp_apply
          expression (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
            Pexp_ident "Ppx_bench_lib.Benchmark_accumulator.Current_libname.unset" (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
          [
            <arg>
            Nolabel
              expression (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
                Pexp_construct "()" (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
                None
          ]
    ]
  structure_item (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
          Ppat_construct "()" (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
          None
        expression (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
          Pexp_apply
          expression (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
            Pexp_ident "Ppx_module_timer_runtime.record_until" (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
          [
            <arg>
            Nolabel
              expression (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
                Pexp_ident "Ppx_module_timer_runtime.__MODULE__" (lib/SparseBitSet.ml[243,6049+23]..[243,6049+23]) ghost
          ]
    ]
]

[@@@ocaml.ppx.context
  {
    tool_name = "ppx_driver";
    include_dirs = [];
    load_path = [];
    open_modules = [];
    for_package = None;
    debug = false;
    use_threads = false;
    use_vmthreads = false;
    recursive_types = false;
    principal = false;
    transparent_modules = false;
    unboxed_types = false;
    unsafe_string = false;
    cookies = [("inline_tests", "enabled"); ("library-name", "gbnf_parser")]
  }]
let () =
  Ppx_module_timer_runtime.record_start Ppx_module_timer_runtime.__MODULE__
let () =
  Ppx_bench_lib.Benchmark_accumulator.Current_libname.set "gbnf_parser"
let () =
  Expect_test_collector.Current_file.set
    ~absolute_filename:"lib/SparseBitSet.ml"
let () =
  Ppx_inline_test_lib.set_lib_and_partition "gbnf_parser" "SparseBitSet.ml"
module A = AtomicBitSet
type t =
  | N 
  | C of int * A.t * t 
type element = int
let empty = N
let is_empty = function | N -> true | C _ -> false
let rec add base offset s =
  match s with
  | N -> C (base, (A.singleton offset), N)
  | C (addr, ss, qs) ->
      if base < addr
      then C (base, (A.singleton offset), s)
      else
        if base = addr
        then
          (let ss' = A.add offset ss in
           if A.equal ss' ss then s else C (addr, ss', qs))
        else
          (let qs' = add base offset qs in
           if qs == qs' then s else C (addr, ss, qs'))
let add i s =
  let offset = i mod A.bound in let base = i - offset in add base offset s
let singleton i =
  let offset = i mod A.bound in
  let base = i - offset in C (base, (A.singleton offset), N)
let rec remove base offset s =
  match s with
  | N -> N
  | C (addr, ss, qs) ->
      if base < addr
      then s
      else
        if base = addr
        then
          (let ss' = A.remove offset ss in
           if A.is_empty ss'
           then qs
           else if A.equal ss' ss then s else C (addr, ss', qs))
        else
          (let qs' = remove base offset qs in
           if qs == qs' then s else C (addr, ss, qs'))
let remove i s =
  let offset = i mod A.bound in let base = i - offset in remove base offset s
let rec mem base offset s =
  match s with
  | N -> false
  | C (addr, ss, qs) ->
      if base < addr
      then false
      else if base = addr then A.mem offset ss else mem base offset qs
let mem i s =
  let offset = i mod A.bound in let base = i - offset in mem base offset s
let rec fold f s accu =
  match s with
  | N -> accu
  | C (addr, ss, qs) ->
      let accu = A.fold_delta addr f ss accu in fold f qs accu
let rec iter f s =
  match s with
  | N -> ()
  | C (addr, ss, qs) -> (A.iter_delta addr f ss; iter f qs)
let is_singleton s =
  match s with
  | C (_, ss, N) -> A.is_singleton ss
  | C (_, _, C _) | N -> false
let rec cardinal accu s =
  match s with
  | C (_, ss, qs) -> let accu = accu + (A.cardinal ss) in cardinal accu qs
  | N -> accu
let cardinal s = cardinal 0 s
let elements s = fold (fun tl -> fun hd -> tl :: hd) s []
let rec subset s1 s2 =
  match (s1, s2) with
  | (N, _) -> true
  | (_, N) -> false
  | (C (addr1, ss1, qs1), C (addr2, ss2, qs2)) ->
      if addr1 < addr2
      then false
      else
        if addr1 = addr2
        then (A.subset ss1 ss2) && (subset qs1 qs2)
        else subset s1 qs2
let rec union s1 s2 =
  match (s1, s2) with
  | (N, s) | (s, N) -> s
  | (C (addr1, ss1, qs1), C (addr2, ss2, qs2)) ->
      if addr1 < addr2
      then C (addr1, ss1, (union qs1 s2))
      else
        if addr1 > addr2
        then
          (let s = union s1 qs2 in if s == qs2 then s2 else C (addr2, ss2, s))
        else
          (let ss = A.union ss1 ss2 in
           let s = union qs1 qs2 in
           if (A.equal ss ss2) && (s == qs2) then s2 else C (addr1, ss, s))
let rec inter s1 s2 =
  match (s1, s2) with
  | (N, _) | (_, N) -> N
  | (C (addr1, ss1, qs1), C (addr2, ss2, qs2)) ->
      if addr1 < addr2
      then inter qs1 s2
      else
        if addr1 > addr2
        then inter s1 qs2
        else
          (let ss = A.inter ss1 ss2 in
           let s = inter qs1 qs2 in
           if A.is_empty ss
           then s
           else
             if (A.equal ss ss1) && (s == qs1) then s1 else C (addr1, ss, s))
let choose s =
  match s with
  | N -> raise Not_found
  | C (addr, ss, _) -> (assert (not (A.is_empty ss)); addr + (A.choose ss))
let rec compare x y =
  if x == y
  then 0
  else
    (match (x, y) with
     | (C (a1, ss1, qs1), C (a2, ss2, qs2)) ->
         (match Generic.compare a1 a2 with
          | 0 ->
              (match A.compare ss1 ss2 with | 0 -> compare qs1 qs2 | n -> n)
          | n -> n)
     | (N, N) -> 0
     | (C _, N) -> 1
     | (N, C _) -> (-1))
let rec equal x y =
  (x == y) ||
    (match (x, y) with
     | (C (a1, ss1, qs1), C (a2, ss2, qs2)) ->
         (a1 = a2) && ((A.equal ss1 ss2) && (equal qs1 qs2))
     | (N, N) -> true
     | (C _, N) | (N, C _) -> false)
let rec disjoint s1 s2 =
  match (s1, s2) with
  | (N, _) | (_, N) -> true
  | (C (addr1, ss1, qs1), C (addr2, ss2, qs2)) ->
      if addr1 = addr2
      then (A.disjoint ss1 ss2) && (disjoint qs1 qs2)
      else if addr1 < addr2 then disjoint qs1 s2 else disjoint s1 qs2
let () = Ppx_inline_test_lib.unset_lib "gbnf_parser"
let () = Expect_test_collector.Current_file.unset ()
let () = Ppx_bench_lib.Benchmark_accumulator.Current_libname.unset ()
let () =
  Ppx_module_timer_runtime.record_until Ppx_module_timer_runtime.__MODULE__
[
  structure_item (_none_[0,0+-1].._none_[0,0+-1]) ghost
    Tstr_attribute "ocaml.ppx.context"
    [
      structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
        Pstr_eval
        expression (_none_[0,0+-1]..[0,0+-1]) ghost
          Pexp_record
          [
            "tool_name" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_constant PConst_string("ppx_driver",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
            "include_dirs" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "load_path" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "open_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "for_package" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "None" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "debug" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_threads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_vmthreads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "recursive_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "principal" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "transparent_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unboxed_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unsafe_string" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "cookies" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                Some
                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                    Pexp_tuple
                    [
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_tuple
                        [
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_constant PConst_string("inline_tests",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                          expression (<command-line>[1,0+0]..[1,0+9])
                            Pexp_constant PConst_string("enabled",(<command-line>[1,0+1]..[1,0+8]),None)
                        ]
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                        Some
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_tuple
                            [
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_tuple
                                [
                                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                    Pexp_constant PConst_string("library-name",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                                  expression (<command-line>[1,0+0]..[1,0+13])
                                    Pexp_constant PConst_string("gbnf_parser",(<command-line>[1,0+1]..[1,0+12]),None)
                                ]
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                                None
                            ]
                    ]
          ]
          None
    ]
  structure_item (lib/SparseBitSet.ml[16,1057+0]..lib/SparseBitSet.ml[16,1057+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[16,1057+0]..lib/SparseBitSet.ml[16,1057+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/SparseBitSet.ml[16,1057+0]..lib/SparseBitSet.ml[16,1057+0]) ghost
          Texp_apply
          expression (lib/SparseBitSet.ml[16,1057+0]..lib/SparseBitSet.ml[16,1057+0]) ghost
            Texp_ident "Ppx_module_timer_runtime!.record_start"
          [
            <arg>
              Nolabel
              expression (lib/SparseBitSet.ml[16,1057+0]..lib/SparseBitSet.ml[16,1057+0]) ghost
                Texp_ident "Ppx_module_timer_runtime!.__MODULE__"
          ]
    ]
  structure_item (lib/SparseBitSet.ml[16,1057+0]..lib/SparseBitSet.ml[16,1057+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[16,1057+0]..lib/SparseBitSet.ml[16,1057+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/SparseBitSet.ml[16,1057+0]..lib/SparseBitSet.ml[16,1057+0]) ghost
          Texp_apply
          expression (lib/SparseBitSet.ml[16,1057+0]..lib/SparseBitSet.ml[16,1057+0]) ghost
            Texp_ident "Ppx_bench_lib!.Benchmark_accumulator.Current_libname.set"
          [
            <arg>
              Nolabel
              expression (lib/SparseBitSet.ml[16,1057+0]..lib/SparseBitSet.ml[16,1057+0]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/SparseBitSet.ml[16,1057+0]..lib/SparseBitSet.ml[16,1057+0]) ghost,None)
          ]
    ]
  structure_item (lib/SparseBitSet.ml[16,1057+0]..lib/SparseBitSet.ml[16,1057+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[16,1057+0]..lib/SparseBitSet.ml[16,1057+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/SparseBitSet.ml[16,1057+0]..lib/SparseBitSet.ml[16,1057+0]) ghost
          Texp_apply
          expression (lib/SparseBitSet.ml[16,1057+0]..lib/SparseBitSet.ml[16,1057+0]) ghost
            Texp_ident "Expect_test_collector!.Current_file.set"
          [
            <arg>
              Labelled "absolute_filename"
              expression (lib/SparseBitSet.ml[16,1057+0]..lib/SparseBitSet.ml[16,1057+0]) ghost
                Texp_constant Const_string("lib/SparseBitSet.ml",(lib/SparseBitSet.ml[16,1057+0]..lib/SparseBitSet.ml[16,1057+0]) ghost,None)
          ]
    ]
  structure_item (lib/SparseBitSet.ml[16,1057+0]..lib/SparseBitSet.ml[16,1057+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[16,1057+0]..lib/SparseBitSet.ml[16,1057+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/SparseBitSet.ml[16,1057+0]..lib/SparseBitSet.ml[16,1057+0]) ghost
          Texp_apply
          expression (lib/SparseBitSet.ml[16,1057+0]..lib/SparseBitSet.ml[16,1057+0]) ghost
            Texp_ident "Ppx_inline_test_lib!.set_lib_and_partition"
          [
            <arg>
              Nolabel
              expression (lib/SparseBitSet.ml[16,1057+0]..lib/SparseBitSet.ml[16,1057+0]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/SparseBitSet.ml[16,1057+0]..lib/SparseBitSet.ml[16,1057+0]) ghost,None)
            <arg>
              Nolabel
              expression (lib/SparseBitSet.ml[16,1057+0]..lib/SparseBitSet.ml[16,1057+0]) ghost
                Texp_constant Const_string("SparseBitSet.ml",(lib/SparseBitSet.ml[16,1057+0]..lib/SparseBitSet.ml[16,1057+0]) ghost,None)
          ]
    ]
  structure_item (lib/SparseBitSet.ml[16,1057+0]..lib/SparseBitSet.ml[17,1068+14])
    Tstr_module
    A/1132
      module_expr (lib/SparseBitSet.ml[17,1068+2]..lib/SparseBitSet.ml[17,1068+14])
        Tmod_ident "Gbnf_parser!.AtomicBitSet"
  structure_item (lib/SparseBitSet.ml[22,1212+0]..lib/SparseBitSet.ml[24,1227+22])
    Tstr_type Rec
    [
      type_declaration t/1133 (lib/SparseBitSet.ml[22,1212+0]..lib/SparseBitSet.ml[24,1227+22])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/SparseBitSet.ml[23,1221+2]..lib/SparseBitSet.ml[23,1221+5])
                N/1134
                []
                None
              (lib/SparseBitSet.ml[24,1227+2]..lib/SparseBitSet.ml[24,1227+22])
                C/1135
                [
                  core_type (lib/SparseBitSet.ml[24,1227+9]..lib/SparseBitSet.ml[24,1227+12])
                    Ttyp_constr "int/1!"
                    []
                  core_type (lib/SparseBitSet.ml[24,1227+15]..lib/SparseBitSet.ml[24,1227+18])
                    Ttyp_constr "A/1132.t"
                    []
                  core_type (lib/SparseBitSet.ml[24,1227+21]..lib/SparseBitSet.ml[24,1227+22])
                    Ttyp_constr "t/1133"
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/SparseBitSet.ml[26,1251+0]..lib/SparseBitSet.ml[27,1266+5])
    Tstr_type Rec
    [
      type_declaration element/1173 (lib/SparseBitSet.ml[26,1251+0]..lib/SparseBitSet.ml[27,1266+5])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/SparseBitSet.ml[27,1266+2]..lib/SparseBitSet.ml[27,1266+5])
              Ttyp_constr "int/1!"
              []
    ]
  structure_item (lib/SparseBitSet.ml[29,1273+0]..lib/SparseBitSet.ml[30,1285+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[29,1273+4]..lib/SparseBitSet.ml[29,1273+9])
          Tpat_var "empty/1174"
        expression (lib/SparseBitSet.ml[30,1285+2]..lib/SparseBitSet.ml[30,1285+3])
          Texp_construct "N"
          []
    ]
  structure_item (lib/SparseBitSet.ml[32,1290+0]..lib/SparseBitSet.ml[36,1345+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[32,1290+4]..lib/SparseBitSet.ml[32,1290+12])
          Tpat_var "is_empty/1175"
        expression (lib/SparseBitSet.ml[32,1290+15]..lib/SparseBitSet.ml[36,1345+11])
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/SparseBitSet.ml[33,1314+4]..lib/SparseBitSet.ml[33,1314+5])
                Tpat_construct "N"
                []
                None
              expression (lib/SparseBitSet.ml[34,1323+6]..lib/SparseBitSet.ml[34,1323+10])
                Texp_construct "true"
                []
            <case>
              pattern (lib/SparseBitSet.ml[35,1334+4]..lib/SparseBitSet.ml[35,1334+7])
                Tpat_construct "C"
                [
                  pattern (lib/SparseBitSet.ml[35,1334+6]..lib/SparseBitSet.ml[35,1334+7])
                    Tpat_any
                  pattern (lib/SparseBitSet.ml[35,1334+6]..lib/SparseBitSet.ml[35,1334+7])
                    Tpat_any
                  pattern (lib/SparseBitSet.ml[35,1334+6]..lib/SparseBitSet.ml[35,1334+7])
                    Tpat_any
                ]
                None
              expression (lib/SparseBitSet.ml[36,1345+6]..lib/SparseBitSet.ml[36,1345+11])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/SparseBitSet.ml[38,1358+0]..lib/SparseBitSet.ml[54,1866+50])
    Tstr_value Rec
    [
      <def>
        pattern (lib/SparseBitSet.ml[38,1358+8]..lib/SparseBitSet.ml[38,1358+11])
          Tpat_var "add/1178"
        expression (lib/SparseBitSet.ml[38,1358+12]..lib/SparseBitSet.ml[54,1866+50]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/SparseBitSet.ml[38,1358+12]..lib/SparseBitSet.ml[38,1358+16])
                Tpat_var "base/1179"
              expression (lib/SparseBitSet.ml[38,1358+17]..lib/SparseBitSet.ml[54,1866+50]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/SparseBitSet.ml[38,1358+17]..lib/SparseBitSet.ml[38,1358+23])
                      Tpat_var "offset/1180"
                    expression (lib/SparseBitSet.ml[38,1358+24]..lib/SparseBitSet.ml[54,1866+50]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/SparseBitSet.ml[38,1358+24]..lib/SparseBitSet.ml[38,1358+25])
                            Tpat_var "s/1181"
                          expression (lib/SparseBitSet.ml[39,1386+2]..lib/SparseBitSet.ml[54,1866+50])
                            Texp_match
                            expression (lib/SparseBitSet.ml[39,1386+8]..lib/SparseBitSet.ml[39,1386+9])
                              Texp_ident "s/1181"
                            [
                              <case>
                                pattern (lib/SparseBitSet.ml[40,1401+4]..lib/SparseBitSet.ml[40,1401+5])
                                  Tpat_value
                                  pattern (lib/SparseBitSet.ml[40,1401+4]..lib/SparseBitSet.ml[40,1401+5])
                                    Tpat_construct "N"
                                    []
                                    None
                                expression (lib/SparseBitSet.ml[42,1437+6]..lib/SparseBitSet.ml[42,1437+37])
                                  Texp_construct "C"
                                  [
                                    expression (lib/SparseBitSet.ml[42,1437+9]..lib/SparseBitSet.ml[42,1437+13])
                                      Texp_ident "base/1179"
                                    expression (lib/SparseBitSet.ml[42,1437+15]..lib/SparseBitSet.ml[42,1437+33])
                                      Texp_apply
                                      expression (lib/SparseBitSet.ml[42,1437+15]..lib/SparseBitSet.ml[42,1437+26])
                                        Texp_ident "A/1132.singleton"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/SparseBitSet.ml[42,1437+27]..lib/SparseBitSet.ml[42,1437+33])
                                            Texp_ident "offset/1180"
                                      ]
                                    expression (lib/SparseBitSet.ml[42,1437+35]..lib/SparseBitSet.ml[42,1437+36])
                                      Texp_construct "N"
                                      []
                                  ]
                              <case>
                                pattern (lib/SparseBitSet.ml[43,1475+4]..lib/SparseBitSet.ml[43,1475+20])
                                  Tpat_value
                                  pattern (lib/SparseBitSet.ml[43,1475+4]..lib/SparseBitSet.ml[43,1475+20])
                                    Tpat_construct "C"
                                    [
                                      pattern (lib/SparseBitSet.ml[43,1475+7]..lib/SparseBitSet.ml[43,1475+11])
                                        Tpat_var "addr/1182"
                                      pattern (lib/SparseBitSet.ml[43,1475+13]..lib/SparseBitSet.ml[43,1475+15])
                                        Tpat_var "ss/1183"
                                      pattern (lib/SparseBitSet.ml[43,1475+17]..lib/SparseBitSet.ml[43,1475+19])
                                        Tpat_var "qs/1184"
                                    ]
                                    None
                                expression (lib/SparseBitSet.ml[44,1499+6]..lib/SparseBitSet.ml[54,1866+50])
                                  Texp_ifthenelse
                                  expression (lib/SparseBitSet.ml[44,1499+9]..lib/SparseBitSet.ml[44,1499+20])
                                    Texp_apply
                                    expression (lib/SparseBitSet.ml[44,1499+14]..lib/SparseBitSet.ml[44,1499+15])
                                      Texp_ident "Stdlib!.<"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/SparseBitSet.ml[44,1499+9]..lib/SparseBitSet.ml[44,1499+13])
                                          Texp_ident "base/1179"
                                      <arg>
                                        Nolabel
                                        expression (lib/SparseBitSet.ml[44,1499+16]..lib/SparseBitSet.ml[44,1499+20])
                                          Texp_ident "addr/1182"
                                    ]
                                  expression (lib/SparseBitSet.ml[46,1556+8]..lib/SparseBitSet.ml[46,1556+39])
                                    Texp_construct "C"
                                    [
                                      expression (lib/SparseBitSet.ml[46,1556+11]..lib/SparseBitSet.ml[46,1556+15])
                                        Texp_ident "base/1179"
                                      expression (lib/SparseBitSet.ml[46,1556+17]..lib/SparseBitSet.ml[46,1556+35])
                                        Texp_apply
                                        expression (lib/SparseBitSet.ml[46,1556+17]..lib/SparseBitSet.ml[46,1556+28])
                                          Texp_ident "A/1132.singleton"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/SparseBitSet.ml[46,1556+29]..lib/SparseBitSet.ml[46,1556+35])
                                              Texp_ident "offset/1180"
                                        ]
                                      expression (lib/SparseBitSet.ml[46,1556+37]..lib/SparseBitSet.ml[46,1556+38])
                                        Texp_ident "s/1181"
                                    ]
                                  Some
                                    expression (lib/SparseBitSet.ml[47,1596+11]..lib/SparseBitSet.ml[54,1866+50])
                                      Texp_ifthenelse
                                      expression (lib/SparseBitSet.ml[47,1596+14]..lib/SparseBitSet.ml[47,1596+25])
                                        Texp_apply
                                        expression (lib/SparseBitSet.ml[47,1596+19]..lib/SparseBitSet.ml[47,1596+20])
                                          Texp_ident "Stdlib!.="
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/SparseBitSet.ml[47,1596+14]..lib/SparseBitSet.ml[47,1596+18])
                                              Texp_ident "base/1179"
                                          <arg>
                                            Nolabel
                                            expression (lib/SparseBitSet.ml[47,1596+21]..lib/SparseBitSet.ml[47,1596+25])
                                              Texp_ident "addr/1182"
                                        ]
                                      expression (lib/SparseBitSet.ml[49,1683+8]..lib/SparseBitSet.ml[50,1720+55])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/SparseBitSet.ml[49,1683+12]..lib/SparseBitSet.ml[49,1683+15])
                                              Tpat_var "ss'/1185"
                                            expression (lib/SparseBitSet.ml[49,1683+18]..lib/SparseBitSet.ml[49,1683+33])
                                              Texp_apply
                                              expression (lib/SparseBitSet.ml[49,1683+18]..lib/SparseBitSet.ml[49,1683+23])
                                                Texp_ident "A/1132.add"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/SparseBitSet.ml[49,1683+24]..lib/SparseBitSet.ml[49,1683+30])
                                                    Texp_ident "offset/1180"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/SparseBitSet.ml[49,1683+31]..lib/SparseBitSet.ml[49,1683+33])
                                                    Texp_ident "ss/1183"
                                              ]
                                        ]
                                        expression (lib/SparseBitSet.ml[50,1720+8]..lib/SparseBitSet.ml[50,1720+55])
                                          Texp_ifthenelse
                                          expression (lib/SparseBitSet.ml[50,1720+11]..lib/SparseBitSet.ml[50,1720+25])
                                            Texp_apply
                                            expression (lib/SparseBitSet.ml[50,1720+11]..lib/SparseBitSet.ml[50,1720+18])
                                              Texp_ident "A/1132.equal"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/SparseBitSet.ml[50,1720+19]..lib/SparseBitSet.ml[50,1720+22])
                                                  Texp_ident "ss'/1185"
                                              <arg>
                                                Nolabel
                                                expression (lib/SparseBitSet.ml[50,1720+23]..lib/SparseBitSet.ml[50,1720+25])
                                                  Texp_ident "ss/1183"
                                            ]
                                          expression (lib/SparseBitSet.ml[50,1720+31]..lib/SparseBitSet.ml[50,1720+32])
                                            Texp_ident "s/1181"
                                          Some
                                            expression (lib/SparseBitSet.ml[50,1720+38]..lib/SparseBitSet.ml[50,1720+55])
                                              Texp_construct "C"
                                              [
                                                expression (lib/SparseBitSet.ml[50,1720+41]..lib/SparseBitSet.ml[50,1720+45])
                                                  Texp_ident "addr/1182"
                                                expression (lib/SparseBitSet.ml[50,1720+47]..lib/SparseBitSet.ml[50,1720+50])
                                                  Texp_ident "ss'/1185"
                                                expression (lib/SparseBitSet.ml[50,1720+52]..lib/SparseBitSet.ml[50,1720+54])
                                                  Texp_ident "qs/1184"
                                              ]
                                      Some
                                        expression (lib/SparseBitSet.ml[53,1826+8]..lib/SparseBitSet.ml[54,1866+50])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/SparseBitSet.ml[53,1826+12]..lib/SparseBitSet.ml[53,1826+15])
                                                Tpat_var "qs'/1186"
                                              expression (lib/SparseBitSet.ml[53,1826+18]..lib/SparseBitSet.ml[53,1826+36])
                                                Texp_apply
                                                expression (lib/SparseBitSet.ml[53,1826+18]..lib/SparseBitSet.ml[53,1826+21])
                                                  Texp_ident "add/1178"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/SparseBitSet.ml[53,1826+22]..lib/SparseBitSet.ml[53,1826+26])
                                                      Texp_ident "base/1179"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/SparseBitSet.ml[53,1826+27]..lib/SparseBitSet.ml[53,1826+33])
                                                      Texp_ident "offset/1180"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/SparseBitSet.ml[53,1826+34]..lib/SparseBitSet.ml[53,1826+36])
                                                      Texp_ident "qs/1184"
                                                ]
                                          ]
                                          expression (lib/SparseBitSet.ml[54,1866+8]..lib/SparseBitSet.ml[54,1866+50])
                                            Texp_ifthenelse
                                            expression (lib/SparseBitSet.ml[54,1866+11]..lib/SparseBitSet.ml[54,1866+20])
                                              Texp_apply
                                              expression (lib/SparseBitSet.ml[54,1866+14]..lib/SparseBitSet.ml[54,1866+16])
                                                Texp_ident "Stdlib!.=="
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/SparseBitSet.ml[54,1866+11]..lib/SparseBitSet.ml[54,1866+13])
                                                    Texp_ident "qs/1184"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/SparseBitSet.ml[54,1866+17]..lib/SparseBitSet.ml[54,1866+20])
                                                    Texp_ident "qs'/1186"
                                              ]
                                            expression (lib/SparseBitSet.ml[54,1866+26]..lib/SparseBitSet.ml[54,1866+27])
                                              Texp_ident "s/1181"
                                            Some
                                              expression (lib/SparseBitSet.ml[54,1866+33]..lib/SparseBitSet.ml[54,1866+50])
                                                Texp_construct "C"
                                                [
                                                  expression (lib/SparseBitSet.ml[54,1866+36]..lib/SparseBitSet.ml[54,1866+40])
                                                    Texp_ident "addr/1182"
                                                  expression (lib/SparseBitSet.ml[54,1866+42]..lib/SparseBitSet.ml[54,1866+44])
                                                    Texp_ident "ss/1183"
                                                  expression (lib/SparseBitSet.ml[54,1866+46]..lib/SparseBitSet.ml[54,1866+49])
                                                    Texp_ident "qs'/1186"
                                                ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/SparseBitSet.ml[56,1918+0]..lib/SparseBitSet.ml[59,1991+19])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[56,1918+4]..lib/SparseBitSet.ml[56,1918+7])
          Tpat_var "add/1187"
        expression (lib/SparseBitSet.ml[56,1918+8]..lib/SparseBitSet.ml[59,1991+19]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/SparseBitSet.ml[56,1918+8]..lib/SparseBitSet.ml[56,1918+9])
                Tpat_var "i/1188"
              expression (lib/SparseBitSet.ml[56,1918+10]..lib/SparseBitSet.ml[59,1991+19]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/SparseBitSet.ml[56,1918+10]..lib/SparseBitSet.ml[56,1918+11])
                      Tpat_var "s/1189"
                    expression (lib/SparseBitSet.ml[57,1932+2]..lib/SparseBitSet.ml[59,1991+19])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/SparseBitSet.ml[57,1932+6]..lib/SparseBitSet.ml[57,1932+12])
                            Tpat_var "offset/1190"
                          expression (lib/SparseBitSet.ml[57,1932+15]..lib/SparseBitSet.ml[57,1932+28])
                            Texp_apply
                            expression (lib/SparseBitSet.ml[57,1932+17]..lib/SparseBitSet.ml[57,1932+20])
                              Texp_ident "Stdlib!.mod"
                            [
                              <arg>
                                Nolabel
                                expression (lib/SparseBitSet.ml[57,1932+15]..lib/SparseBitSet.ml[57,1932+16])
                                  Texp_ident "i/1188"
                              <arg>
                                Nolabel
                                expression (lib/SparseBitSet.ml[57,1932+21]..lib/SparseBitSet.ml[57,1932+28])
                                  Texp_ident "A/1132.bound"
                            ]
                      ]
                      expression (lib/SparseBitSet.ml[58,1964+2]..lib/SparseBitSet.ml[59,1991+19])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (lib/SparseBitSet.ml[58,1964+6]..lib/SparseBitSet.ml[58,1964+10])
                              Tpat_var "base/1191"
                            expression (lib/SparseBitSet.ml[58,1964+13]..lib/SparseBitSet.ml[58,1964+23])
                              Texp_apply
                              expression (lib/SparseBitSet.ml[58,1964+15]..lib/SparseBitSet.ml[58,1964+16])
                                Texp_ident "Stdlib!.-"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/SparseBitSet.ml[58,1964+13]..lib/SparseBitSet.ml[58,1964+14])
                                    Texp_ident "i/1188"
                                <arg>
                                  Nolabel
                                  expression (lib/SparseBitSet.ml[58,1964+17]..lib/SparseBitSet.ml[58,1964+23])
                                    Texp_ident "offset/1190"
                              ]
                        ]
                        expression (lib/SparseBitSet.ml[59,1991+2]..lib/SparseBitSet.ml[59,1991+19])
                          Texp_apply
                          expression (lib/SparseBitSet.ml[59,1991+2]..lib/SparseBitSet.ml[59,1991+5])
                            Texp_ident "add/1178"
                          [
                            <arg>
                              Nolabel
                              expression (lib/SparseBitSet.ml[59,1991+6]..lib/SparseBitSet.ml[59,1991+10])
                                Texp_ident "base/1191"
                            <arg>
                              Nolabel
                              expression (lib/SparseBitSet.ml[59,1991+11]..lib/SparseBitSet.ml[59,1991+17])
                                Texp_ident "offset/1190"
                            <arg>
                              Nolabel
                              expression (lib/SparseBitSet.ml[59,1991+18]..lib/SparseBitSet.ml[59,1991+19])
                                Texp_ident "s/1189"
                          ]
                ]
          ]
    ]
  structure_item (lib/SparseBitSet.ml[61,2012+0]..lib/SparseBitSet.ml[65,2129+33])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[61,2012+4]..lib/SparseBitSet.ml[61,2012+13])
          Tpat_var "singleton/1192"
        expression (lib/SparseBitSet.ml[61,2012+14]..lib/SparseBitSet.ml[65,2129+33]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/SparseBitSet.ml[61,2012+14]..lib/SparseBitSet.ml[61,2012+15])
                Tpat_var "i/1194"
              expression (lib/SparseBitSet.ml[63,2070+2]..lib/SparseBitSet.ml[65,2129+33])
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/SparseBitSet.ml[63,2070+6]..lib/SparseBitSet.ml[63,2070+12])
                      Tpat_var "offset/1195"
                    expression (lib/SparseBitSet.ml[63,2070+15]..lib/SparseBitSet.ml[63,2070+28])
                      Texp_apply
                      expression (lib/SparseBitSet.ml[63,2070+17]..lib/SparseBitSet.ml[63,2070+20])
                        Texp_ident "Stdlib!.mod"
                      [
                        <arg>
                          Nolabel
                          expression (lib/SparseBitSet.ml[63,2070+15]..lib/SparseBitSet.ml[63,2070+16])
                            Texp_ident "i/1194"
                        <arg>
                          Nolabel
                          expression (lib/SparseBitSet.ml[63,2070+21]..lib/SparseBitSet.ml[63,2070+28])
                            Texp_ident "A/1132.bound"
                      ]
                ]
                expression (lib/SparseBitSet.ml[64,2102+2]..lib/SparseBitSet.ml[65,2129+33])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (lib/SparseBitSet.ml[64,2102+6]..lib/SparseBitSet.ml[64,2102+10])
                        Tpat_var "base/1196"
                      expression (lib/SparseBitSet.ml[64,2102+13]..lib/SparseBitSet.ml[64,2102+23])
                        Texp_apply
                        expression (lib/SparseBitSet.ml[64,2102+15]..lib/SparseBitSet.ml[64,2102+16])
                          Texp_ident "Stdlib!.-"
                        [
                          <arg>
                            Nolabel
                            expression (lib/SparseBitSet.ml[64,2102+13]..lib/SparseBitSet.ml[64,2102+14])
                              Texp_ident "i/1194"
                          <arg>
                            Nolabel
                            expression (lib/SparseBitSet.ml[64,2102+17]..lib/SparseBitSet.ml[64,2102+23])
                              Texp_ident "offset/1195"
                        ]
                  ]
                  expression (lib/SparseBitSet.ml[65,2129+2]..lib/SparseBitSet.ml[65,2129+33])
                    Texp_construct "C"
                    [
                      expression (lib/SparseBitSet.ml[65,2129+5]..lib/SparseBitSet.ml[65,2129+9])
                        Texp_ident "base/1196"
                      expression (lib/SparseBitSet.ml[65,2129+11]..lib/SparseBitSet.ml[65,2129+29])
                        Texp_apply
                        expression (lib/SparseBitSet.ml[65,2129+11]..lib/SparseBitSet.ml[65,2129+22])
                          Texp_ident "A/1132.singleton"
                        [
                          <arg>
                            Nolabel
                            expression (lib/SparseBitSet.ml[65,2129+23]..lib/SparseBitSet.ml[65,2129+29])
                              Texp_ident "offset/1195"
                        ]
                      expression (lib/SparseBitSet.ml[65,2129+31]..lib/SparseBitSet.ml[65,2129+32])
                        Texp_construct "N"
                        []
                    ]
          ]
    ]
  structure_item (lib/SparseBitSet.ml[67,2164+0]..lib/SparseBitSet.ml[83,2612+50])
    Tstr_value Rec
    [
      <def>
        pattern (lib/SparseBitSet.ml[67,2164+8]..lib/SparseBitSet.ml[67,2164+14])
          Tpat_var "remove/1197"
        expression (lib/SparseBitSet.ml[67,2164+15]..lib/SparseBitSet.ml[83,2612+50]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/SparseBitSet.ml[67,2164+15]..lib/SparseBitSet.ml[67,2164+19])
                Tpat_var "base/1198"
              expression (lib/SparseBitSet.ml[67,2164+20]..lib/SparseBitSet.ml[83,2612+50]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/SparseBitSet.ml[67,2164+20]..lib/SparseBitSet.ml[67,2164+26])
                      Tpat_var "offset/1199"
                    expression (lib/SparseBitSet.ml[67,2164+27]..lib/SparseBitSet.ml[83,2612+50]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/SparseBitSet.ml[67,2164+27]..lib/SparseBitSet.ml[67,2164+28])
                            Tpat_var "s/1200"
                          expression (lib/SparseBitSet.ml[68,2195+2]..lib/SparseBitSet.ml[83,2612+50])
                            Texp_match
                            expression (lib/SparseBitSet.ml[68,2195+8]..lib/SparseBitSet.ml[68,2195+9])
                              Texp_ident "s/1200"
                            [
                              <case>
                                pattern (lib/SparseBitSet.ml[69,2210+4]..lib/SparseBitSet.ml[69,2210+5])
                                  Tpat_value
                                  pattern (lib/SparseBitSet.ml[69,2210+4]..lib/SparseBitSet.ml[69,2210+5])
                                    Tpat_construct "N"
                                    []
                                    None
                                expression (lib/SparseBitSet.ml[70,2219+6]..lib/SparseBitSet.ml[70,2219+7])
                                  Texp_construct "N"
                                  []
                              <case>
                                pattern (lib/SparseBitSet.ml[71,2227+4]..lib/SparseBitSet.ml[71,2227+20])
                                  Tpat_value
                                  pattern (lib/SparseBitSet.ml[71,2227+4]..lib/SparseBitSet.ml[71,2227+20])
                                    Tpat_construct "C"
                                    [
                                      pattern (lib/SparseBitSet.ml[71,2227+7]..lib/SparseBitSet.ml[71,2227+11])
                                        Tpat_var "addr/1201"
                                      pattern (lib/SparseBitSet.ml[71,2227+13]..lib/SparseBitSet.ml[71,2227+15])
                                        Tpat_var "ss/1202"
                                      pattern (lib/SparseBitSet.ml[71,2227+17]..lib/SparseBitSet.ml[71,2227+19])
                                        Tpat_var "qs/1203"
                                    ]
                                    None
                                expression (lib/SparseBitSet.ml[72,2251+6]..lib/SparseBitSet.ml[83,2612+50])
                                  Texp_ifthenelse
                                  expression (lib/SparseBitSet.ml[72,2251+9]..lib/SparseBitSet.ml[72,2251+20])
                                    Texp_apply
                                    expression (lib/SparseBitSet.ml[72,2251+14]..lib/SparseBitSet.ml[72,2251+15])
                                      Texp_ident "Stdlib!.<"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/SparseBitSet.ml[72,2251+9]..lib/SparseBitSet.ml[72,2251+13])
                                          Texp_ident "base/1198"
                                      <arg>
                                        Nolabel
                                        expression (lib/SparseBitSet.ml[72,2251+16]..lib/SparseBitSet.ml[72,2251+20])
                                          Texp_ident "addr/1201"
                                    ]
                                  expression (lib/SparseBitSet.ml[73,2277+8]..lib/SparseBitSet.ml[73,2277+9])
                                    Texp_ident "s/1200"
                                  Some
                                    expression (lib/SparseBitSet.ml[74,2287+11]..lib/SparseBitSet.ml[83,2612+50])
                                      Texp_ifthenelse
                                      expression (lib/SparseBitSet.ml[74,2287+14]..lib/SparseBitSet.ml[74,2287+25])
                                        Texp_apply
                                        expression (lib/SparseBitSet.ml[74,2287+19]..lib/SparseBitSet.ml[74,2287+20])
                                          Texp_ident "Stdlib!.="
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/SparseBitSet.ml[74,2287+14]..lib/SparseBitSet.ml[74,2287+18])
                                              Texp_ident "base/1198"
                                          <arg>
                                            Nolabel
                                            expression (lib/SparseBitSet.ml[74,2287+21]..lib/SparseBitSet.ml[74,2287+25])
                                              Texp_ident "addr/1201"
                                        ]
                                      expression (lib/SparseBitSet.ml[76,2374+8]..lib/SparseBitSet.ml[79,2458+60])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/SparseBitSet.ml[76,2374+12]..lib/SparseBitSet.ml[76,2374+15])
                                              Tpat_var "ss'/1204"
                                            expression (lib/SparseBitSet.ml[76,2374+18]..lib/SparseBitSet.ml[76,2374+36])
                                              Texp_apply
                                              expression (lib/SparseBitSet.ml[76,2374+18]..lib/SparseBitSet.ml[76,2374+26])
                                                Texp_ident "A/1132.remove"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/SparseBitSet.ml[76,2374+27]..lib/SparseBitSet.ml[76,2374+33])
                                                    Texp_ident "offset/1199"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/SparseBitSet.ml[76,2374+34]..lib/SparseBitSet.ml[76,2374+36])
                                                    Texp_ident "ss/1202"
                                              ]
                                        ]
                                        expression (lib/SparseBitSet.ml[77,2414+8]..lib/SparseBitSet.ml[79,2458+60])
                                          Texp_ifthenelse
                                          expression (lib/SparseBitSet.ml[77,2414+11]..lib/SparseBitSet.ml[77,2414+25])
                                            Texp_apply
                                            expression (lib/SparseBitSet.ml[77,2414+11]..lib/SparseBitSet.ml[77,2414+21])
                                              Texp_ident "A/1132.is_empty"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/SparseBitSet.ml[77,2414+22]..lib/SparseBitSet.ml[77,2414+25])
                                                  Texp_ident "ss'/1204"
                                            ]
                                          expression (lib/SparseBitSet.ml[78,2445+10]..lib/SparseBitSet.ml[78,2445+12])
                                            Texp_ident "qs/1203"
                                          Some
                                            expression (lib/SparseBitSet.ml[79,2458+13]..lib/SparseBitSet.ml[79,2458+60])
                                              Texp_ifthenelse
                                              expression (lib/SparseBitSet.ml[79,2458+16]..lib/SparseBitSet.ml[79,2458+30])
                                                Texp_apply
                                                expression (lib/SparseBitSet.ml[79,2458+16]..lib/SparseBitSet.ml[79,2458+23])
                                                  Texp_ident "A/1132.equal"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/SparseBitSet.ml[79,2458+24]..lib/SparseBitSet.ml[79,2458+27])
                                                      Texp_ident "ss'/1204"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/SparseBitSet.ml[79,2458+28]..lib/SparseBitSet.ml[79,2458+30])
                                                      Texp_ident "ss/1202"
                                                ]
                                              expression (lib/SparseBitSet.ml[79,2458+36]..lib/SparseBitSet.ml[79,2458+37])
                                                Texp_ident "s/1200"
                                              Some
                                                expression (lib/SparseBitSet.ml[79,2458+43]..lib/SparseBitSet.ml[79,2458+60])
                                                  Texp_construct "C"
                                                  [
                                                    expression (lib/SparseBitSet.ml[79,2458+46]..lib/SparseBitSet.ml[79,2458+50])
                                                      Texp_ident "addr/1201"
                                                    expression (lib/SparseBitSet.ml[79,2458+52]..lib/SparseBitSet.ml[79,2458+55])
                                                      Texp_ident "ss'/1204"
                                                    expression (lib/SparseBitSet.ml[79,2458+57]..lib/SparseBitSet.ml[79,2458+59])
                                                      Texp_ident "qs/1203"
                                                  ]
                                      Some
                                        expression (lib/SparseBitSet.ml[82,2569+8]..lib/SparseBitSet.ml[83,2612+50])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/SparseBitSet.ml[82,2569+12]..lib/SparseBitSet.ml[82,2569+15])
                                                Tpat_var "qs'/1205"
                                              expression (lib/SparseBitSet.ml[82,2569+18]..lib/SparseBitSet.ml[82,2569+39])
                                                Texp_apply
                                                expression (lib/SparseBitSet.ml[82,2569+18]..lib/SparseBitSet.ml[82,2569+24])
                                                  Texp_ident "remove/1197"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/SparseBitSet.ml[82,2569+25]..lib/SparseBitSet.ml[82,2569+29])
                                                      Texp_ident "base/1198"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/SparseBitSet.ml[82,2569+30]..lib/SparseBitSet.ml[82,2569+36])
                                                      Texp_ident "offset/1199"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/SparseBitSet.ml[82,2569+37]..lib/SparseBitSet.ml[82,2569+39])
                                                      Texp_ident "qs/1203"
                                                ]
                                          ]
                                          expression (lib/SparseBitSet.ml[83,2612+8]..lib/SparseBitSet.ml[83,2612+50])
                                            Texp_ifthenelse
                                            expression (lib/SparseBitSet.ml[83,2612+11]..lib/SparseBitSet.ml[83,2612+20])
                                              Texp_apply
                                              expression (lib/SparseBitSet.ml[83,2612+14]..lib/SparseBitSet.ml[83,2612+16])
                                                Texp_ident "Stdlib!.=="
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/SparseBitSet.ml[83,2612+11]..lib/SparseBitSet.ml[83,2612+13])
                                                    Texp_ident "qs/1203"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/SparseBitSet.ml[83,2612+17]..lib/SparseBitSet.ml[83,2612+20])
                                                    Texp_ident "qs'/1205"
                                              ]
                                            expression (lib/SparseBitSet.ml[83,2612+26]..lib/SparseBitSet.ml[83,2612+27])
                                              Texp_ident "s/1200"
                                            Some
                                              expression (lib/SparseBitSet.ml[83,2612+33]..lib/SparseBitSet.ml[83,2612+50])
                                                Texp_construct "C"
                                                [
                                                  expression (lib/SparseBitSet.ml[83,2612+36]..lib/SparseBitSet.ml[83,2612+40])
                                                    Texp_ident "addr/1201"
                                                  expression (lib/SparseBitSet.ml[83,2612+42]..lib/SparseBitSet.ml[83,2612+44])
                                                    Texp_ident "ss/1202"
                                                  expression (lib/SparseBitSet.ml[83,2612+46]..lib/SparseBitSet.ml[83,2612+49])
                                                    Texp_ident "qs'/1205"
                                                ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/SparseBitSet.ml[85,2664+0]..lib/SparseBitSet.ml[88,2740+22])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[85,2664+4]..lib/SparseBitSet.ml[85,2664+10])
          Tpat_var "remove/1206"
        expression (lib/SparseBitSet.ml[85,2664+11]..lib/SparseBitSet.ml[88,2740+22]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/SparseBitSet.ml[85,2664+11]..lib/SparseBitSet.ml[85,2664+12])
                Tpat_var "i/1207"
              expression (lib/SparseBitSet.ml[85,2664+13]..lib/SparseBitSet.ml[88,2740+22]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/SparseBitSet.ml[85,2664+13]..lib/SparseBitSet.ml[85,2664+14])
                      Tpat_var "s/1208"
                    expression (lib/SparseBitSet.ml[86,2681+2]..lib/SparseBitSet.ml[88,2740+22])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/SparseBitSet.ml[86,2681+6]..lib/SparseBitSet.ml[86,2681+12])
                            Tpat_var "offset/1209"
                          expression (lib/SparseBitSet.ml[86,2681+15]..lib/SparseBitSet.ml[86,2681+28])
                            Texp_apply
                            expression (lib/SparseBitSet.ml[86,2681+17]..lib/SparseBitSet.ml[86,2681+20])
                              Texp_ident "Stdlib!.mod"
                            [
                              <arg>
                                Nolabel
                                expression (lib/SparseBitSet.ml[86,2681+15]..lib/SparseBitSet.ml[86,2681+16])
                                  Texp_ident "i/1207"
                              <arg>
                                Nolabel
                                expression (lib/SparseBitSet.ml[86,2681+21]..lib/SparseBitSet.ml[86,2681+28])
                                  Texp_ident "A/1132.bound"
                            ]
                      ]
                      expression (lib/SparseBitSet.ml[87,2713+2]..lib/SparseBitSet.ml[88,2740+22])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (lib/SparseBitSet.ml[87,2713+6]..lib/SparseBitSet.ml[87,2713+10])
                              Tpat_var "base/1210"
                            expression (lib/SparseBitSet.ml[87,2713+13]..lib/SparseBitSet.ml[87,2713+23])
                              Texp_apply
                              expression (lib/SparseBitSet.ml[87,2713+15]..lib/SparseBitSet.ml[87,2713+16])
                                Texp_ident "Stdlib!.-"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/SparseBitSet.ml[87,2713+13]..lib/SparseBitSet.ml[87,2713+14])
                                    Texp_ident "i/1207"
                                <arg>
                                  Nolabel
                                  expression (lib/SparseBitSet.ml[87,2713+17]..lib/SparseBitSet.ml[87,2713+23])
                                    Texp_ident "offset/1209"
                              ]
                        ]
                        expression (lib/SparseBitSet.ml[88,2740+2]..lib/SparseBitSet.ml[88,2740+22])
                          Texp_apply
                          expression (lib/SparseBitSet.ml[88,2740+2]..lib/SparseBitSet.ml[88,2740+8])
                            Texp_ident "remove/1197"
                          [
                            <arg>
                              Nolabel
                              expression (lib/SparseBitSet.ml[88,2740+9]..lib/SparseBitSet.ml[88,2740+13])
                                Texp_ident "base/1210"
                            <arg>
                              Nolabel
                              expression (lib/SparseBitSet.ml[88,2740+14]..lib/SparseBitSet.ml[88,2740+20])
                                Texp_ident "offset/1209"
                            <arg>
                              Nolabel
                              expression (lib/SparseBitSet.ml[88,2740+21]..lib/SparseBitSet.ml[88,2740+22])
                                Texp_ident "s/1208"
                          ]
                ]
          ]
    ]
  structure_item (lib/SparseBitSet.ml[90,2764+0]..lib/SparseBitSet.ml[100,2958+26])
    Tstr_value Rec
    [
      <def>
        pattern (lib/SparseBitSet.ml[90,2764+8]..lib/SparseBitSet.ml[90,2764+11])
          Tpat_var "mem/1211"
        expression (lib/SparseBitSet.ml[90,2764+12]..lib/SparseBitSet.ml[100,2958+26]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/SparseBitSet.ml[90,2764+12]..lib/SparseBitSet.ml[90,2764+16])
                Tpat_var "base/1212"
              expression (lib/SparseBitSet.ml[90,2764+17]..lib/SparseBitSet.ml[100,2958+26]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/SparseBitSet.ml[90,2764+17]..lib/SparseBitSet.ml[90,2764+23])
                      Tpat_var "offset/1213"
                    expression (lib/SparseBitSet.ml[90,2764+24]..lib/SparseBitSet.ml[100,2958+26]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/SparseBitSet.ml[90,2764+24]..lib/SparseBitSet.ml[90,2764+25])
                            Tpat_var "s/1214"
                          expression (lib/SparseBitSet.ml[91,2792+2]..lib/SparseBitSet.ml[100,2958+26])
                            Texp_match
                            expression (lib/SparseBitSet.ml[91,2792+8]..lib/SparseBitSet.ml[91,2792+9])
                              Texp_ident "s/1214"
                            [
                              <case>
                                pattern (lib/SparseBitSet.ml[92,2807+4]..lib/SparseBitSet.ml[92,2807+5])
                                  Tpat_value
                                  pattern (lib/SparseBitSet.ml[92,2807+4]..lib/SparseBitSet.ml[92,2807+5])
                                    Tpat_construct "N"
                                    []
                                    None
                                expression (lib/SparseBitSet.ml[93,2816+6]..lib/SparseBitSet.ml[93,2816+11])
                                  Texp_construct "false"
                                  []
                              <case>
                                pattern (lib/SparseBitSet.ml[94,2828+4]..lib/SparseBitSet.ml[94,2828+20])
                                  Tpat_value
                                  pattern (lib/SparseBitSet.ml[94,2828+4]..lib/SparseBitSet.ml[94,2828+20])
                                    Tpat_construct "C"
                                    [
                                      pattern (lib/SparseBitSet.ml[94,2828+7]..lib/SparseBitSet.ml[94,2828+11])
                                        Tpat_var "addr/1215"
                                      pattern (lib/SparseBitSet.ml[94,2828+13]..lib/SparseBitSet.ml[94,2828+15])
                                        Tpat_var "ss/1216"
                                      pattern (lib/SparseBitSet.ml[94,2828+17]..lib/SparseBitSet.ml[94,2828+19])
                                        Tpat_var "qs/1217"
                                    ]
                                    None
                                expression (lib/SparseBitSet.ml[95,2852+6]..lib/SparseBitSet.ml[100,2958+26])
                                  Texp_ifthenelse
                                  expression (lib/SparseBitSet.ml[95,2852+9]..lib/SparseBitSet.ml[95,2852+20])
                                    Texp_apply
                                    expression (lib/SparseBitSet.ml[95,2852+14]..lib/SparseBitSet.ml[95,2852+15])
                                      Texp_ident "Stdlib!.<"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/SparseBitSet.ml[95,2852+9]..lib/SparseBitSet.ml[95,2852+13])
                                          Texp_ident "base/1212"
                                      <arg>
                                        Nolabel
                                        expression (lib/SparseBitSet.ml[95,2852+16]..lib/SparseBitSet.ml[95,2852+20])
                                          Texp_ident "addr/1215"
                                    ]
                                  expression (lib/SparseBitSet.ml[96,2878+8]..lib/SparseBitSet.ml[96,2878+13])
                                    Texp_construct "false"
                                    []
                                  Some
                                    expression (lib/SparseBitSet.ml[97,2892+11]..lib/SparseBitSet.ml[100,2958+26])
                                      Texp_ifthenelse
                                      expression (lib/SparseBitSet.ml[97,2892+14]..lib/SparseBitSet.ml[97,2892+25])
                                        Texp_apply
                                        expression (lib/SparseBitSet.ml[97,2892+19]..lib/SparseBitSet.ml[97,2892+20])
                                          Texp_ident "Stdlib!.="
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/SparseBitSet.ml[97,2892+14]..lib/SparseBitSet.ml[97,2892+18])
                                              Texp_ident "base/1212"
                                          <arg>
                                            Nolabel
                                            expression (lib/SparseBitSet.ml[97,2892+21]..lib/SparseBitSet.ml[97,2892+25])
                                              Texp_ident "addr/1215"
                                        ]
                                      expression (lib/SparseBitSet.ml[98,2923+8]..lib/SparseBitSet.ml[98,2923+23])
                                        Texp_apply
                                        expression (lib/SparseBitSet.ml[98,2923+8]..lib/SparseBitSet.ml[98,2923+13])
                                          Texp_ident "A/1132.mem"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/SparseBitSet.ml[98,2923+14]..lib/SparseBitSet.ml[98,2923+20])
                                              Texp_ident "offset/1213"
                                          <arg>
                                            Nolabel
                                            expression (lib/SparseBitSet.ml[98,2923+21]..lib/SparseBitSet.ml[98,2923+23])
                                              Texp_ident "ss/1216"
                                        ]
                                      Some
                                        expression (lib/SparseBitSet.ml[100,2958+8]..lib/SparseBitSet.ml[100,2958+26])
                                          Texp_apply
                                          expression (lib/SparseBitSet.ml[100,2958+8]..lib/SparseBitSet.ml[100,2958+11])
                                            Texp_ident "mem/1211"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/SparseBitSet.ml[100,2958+12]..lib/SparseBitSet.ml[100,2958+16])
                                                Texp_ident "base/1212"
                                            <arg>
                                              Nolabel
                                              expression (lib/SparseBitSet.ml[100,2958+17]..lib/SparseBitSet.ml[100,2958+23])
                                                Texp_ident "offset/1213"
                                            <arg>
                                              Nolabel
                                              expression (lib/SparseBitSet.ml[100,2958+24]..lib/SparseBitSet.ml[100,2958+26])
                                                Texp_ident "qs/1217"
                                          ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/SparseBitSet.ml[102,2986+0]..lib/SparseBitSet.ml[105,3059+19])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[102,2986+4]..lib/SparseBitSet.ml[102,2986+7])
          Tpat_var "mem/1218"
        expression (lib/SparseBitSet.ml[102,2986+8]..lib/SparseBitSet.ml[105,3059+19]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/SparseBitSet.ml[102,2986+8]..lib/SparseBitSet.ml[102,2986+9])
                Tpat_var "i/1219"
              expression (lib/SparseBitSet.ml[102,2986+10]..lib/SparseBitSet.ml[105,3059+19]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/SparseBitSet.ml[102,2986+10]..lib/SparseBitSet.ml[102,2986+11])
                      Tpat_var "s/1220"
                    expression (lib/SparseBitSet.ml[103,3000+2]..lib/SparseBitSet.ml[105,3059+19])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/SparseBitSet.ml[103,3000+6]..lib/SparseBitSet.ml[103,3000+12])
                            Tpat_var "offset/1221"
                          expression (lib/SparseBitSet.ml[103,3000+15]..lib/SparseBitSet.ml[103,3000+28])
                            Texp_apply
                            expression (lib/SparseBitSet.ml[103,3000+17]..lib/SparseBitSet.ml[103,3000+20])
                              Texp_ident "Stdlib!.mod"
                            [
                              <arg>
                                Nolabel
                                expression (lib/SparseBitSet.ml[103,3000+15]..lib/SparseBitSet.ml[103,3000+16])
                                  Texp_ident "i/1219"
                              <arg>
                                Nolabel
                                expression (lib/SparseBitSet.ml[103,3000+21]..lib/SparseBitSet.ml[103,3000+28])
                                  Texp_ident "A/1132.bound"
                            ]
                      ]
                      expression (lib/SparseBitSet.ml[104,3032+2]..lib/SparseBitSet.ml[105,3059+19])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (lib/SparseBitSet.ml[104,3032+6]..lib/SparseBitSet.ml[104,3032+10])
                              Tpat_var "base/1222"
                            expression (lib/SparseBitSet.ml[104,3032+13]..lib/SparseBitSet.ml[104,3032+23])
                              Texp_apply
                              expression (lib/SparseBitSet.ml[104,3032+15]..lib/SparseBitSet.ml[104,3032+16])
                                Texp_ident "Stdlib!.-"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/SparseBitSet.ml[104,3032+13]..lib/SparseBitSet.ml[104,3032+14])
                                    Texp_ident "i/1219"
                                <arg>
                                  Nolabel
                                  expression (lib/SparseBitSet.ml[104,3032+17]..lib/SparseBitSet.ml[104,3032+23])
                                    Texp_ident "offset/1221"
                              ]
                        ]
                        expression (lib/SparseBitSet.ml[105,3059+2]..lib/SparseBitSet.ml[105,3059+19])
                          Texp_apply
                          expression (lib/SparseBitSet.ml[105,3059+2]..lib/SparseBitSet.ml[105,3059+5])
                            Texp_ident "mem/1211"
                          [
                            <arg>
                              Nolabel
                              expression (lib/SparseBitSet.ml[105,3059+6]..lib/SparseBitSet.ml[105,3059+10])
                                Texp_ident "base/1222"
                            <arg>
                              Nolabel
                              expression (lib/SparseBitSet.ml[105,3059+11]..lib/SparseBitSet.ml[105,3059+17])
                                Texp_ident "offset/1221"
                            <arg>
                              Nolabel
                              expression (lib/SparseBitSet.ml[105,3059+18]..lib/SparseBitSet.ml[105,3059+19])
                                Texp_ident "s/1220"
                          ]
                ]
          ]
    ]
  structure_item (lib/SparseBitSet.ml[107,3080+0]..lib/SparseBitSet.ml[113,3211+20])
    Tstr_value Rec
    [
      <def>
        pattern (lib/SparseBitSet.ml[107,3080+8]..lib/SparseBitSet.ml[107,3080+12])
          Tpat_var "fold/1223"
        expression (lib/SparseBitSet.ml[107,3080+13]..lib/SparseBitSet.ml[113,3211+20]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/SparseBitSet.ml[107,3080+13]..lib/SparseBitSet.ml[107,3080+14])
                Tpat_var "f/1224"
              expression (lib/SparseBitSet.ml[107,3080+15]..lib/SparseBitSet.ml[113,3211+20]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/SparseBitSet.ml[107,3080+15]..lib/SparseBitSet.ml[107,3080+16])
                      Tpat_var "s/1225"
                    expression (lib/SparseBitSet.ml[107,3080+17]..lib/SparseBitSet.ml[113,3211+20]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/SparseBitSet.ml[107,3080+17]..lib/SparseBitSet.ml[107,3080+21])
                            Tpat_var "accu/1226"
                          expression (lib/SparseBitSet.ml[108,3104+2]..lib/SparseBitSet.ml[113,3211+20])
                            Texp_match
                            expression (lib/SparseBitSet.ml[108,3104+8]..lib/SparseBitSet.ml[108,3104+9])
                              Texp_ident "s/1225"
                            [
                              <case>
                                pattern (lib/SparseBitSet.ml[109,3119+4]..lib/SparseBitSet.ml[109,3119+5])
                                  Tpat_value
                                  pattern (lib/SparseBitSet.ml[109,3119+4]..lib/SparseBitSet.ml[109,3119+5])
                                    Tpat_construct "N"
                                    []
                                    None
                                expression (lib/SparseBitSet.ml[110,3128+6]..lib/SparseBitSet.ml[110,3128+10])
                                  Texp_ident "accu/1226"
                              <case>
                                pattern (lib/SparseBitSet.ml[111,3139+4]..lib/SparseBitSet.ml[111,3139+20])
                                  Tpat_value
                                  pattern (lib/SparseBitSet.ml[111,3139+4]..lib/SparseBitSet.ml[111,3139+20])
                                    Tpat_construct "C"
                                    [
                                      pattern (lib/SparseBitSet.ml[111,3139+7]..lib/SparseBitSet.ml[111,3139+11])
                                        Tpat_var "addr/1227"
                                      pattern (lib/SparseBitSet.ml[111,3139+13]..lib/SparseBitSet.ml[111,3139+15])
                                        Tpat_var "ss/1228"
                                      pattern (lib/SparseBitSet.ml[111,3139+17]..lib/SparseBitSet.ml[111,3139+19])
                                        Tpat_var "qs/1229"
                                    ]
                                    None
                                expression (lib/SparseBitSet.ml[112,3163+6]..lib/SparseBitSet.ml[113,3211+20])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/SparseBitSet.ml[112,3163+10]..lib/SparseBitSet.ml[112,3163+14])
                                        Tpat_var "accu/1230"
                                      expression (lib/SparseBitSet.ml[112,3163+17]..lib/SparseBitSet.ml[112,3163+44])
                                        Texp_apply
                                        expression (lib/SparseBitSet.ml[112,3163+17]..lib/SparseBitSet.ml[112,3163+29])
                                          Texp_ident "A/1132.fold_delta"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/SparseBitSet.ml[112,3163+30]..lib/SparseBitSet.ml[112,3163+34])
                                              Texp_ident "addr/1227"
                                          <arg>
                                            Nolabel
                                            expression (lib/SparseBitSet.ml[112,3163+35]..lib/SparseBitSet.ml[112,3163+36])
                                              Texp_ident "f/1224"
                                          <arg>
                                            Nolabel
                                            expression (lib/SparseBitSet.ml[112,3163+37]..lib/SparseBitSet.ml[112,3163+39])
                                              Texp_ident "ss/1228"
                                          <arg>
                                            Nolabel
                                            expression (lib/SparseBitSet.ml[112,3163+40]..lib/SparseBitSet.ml[112,3163+44])
                                              Texp_ident "accu/1226"
                                        ]
                                  ]
                                  expression (lib/SparseBitSet.ml[113,3211+6]..lib/SparseBitSet.ml[113,3211+20])
                                    Texp_apply
                                    expression (lib/SparseBitSet.ml[113,3211+6]..lib/SparseBitSet.ml[113,3211+10])
                                      Texp_ident "fold/1223"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/SparseBitSet.ml[113,3211+11]..lib/SparseBitSet.ml[113,3211+12])
                                          Texp_ident "f/1224"
                                      <arg>
                                        Nolabel
                                        expression (lib/SparseBitSet.ml[113,3211+13]..lib/SparseBitSet.ml[113,3211+15])
                                          Texp_ident "qs/1229"
                                      <arg>
                                        Nolabel
                                        expression (lib/SparseBitSet.ml[113,3211+16]..lib/SparseBitSet.ml[113,3211+20])
                                          Texp_ident "accu/1230"
                                    ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/SparseBitSet.ml[115,3233+0]..lib/SparseBitSet.ml[121,3339+15])
    Tstr_value Rec
    [
      <def>
        pattern (lib/SparseBitSet.ml[115,3233+8]..lib/SparseBitSet.ml[115,3233+12])
          Tpat_var "iter/1231"
        expression (lib/SparseBitSet.ml[115,3233+13]..lib/SparseBitSet.ml[121,3339+15]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/SparseBitSet.ml[115,3233+13]..lib/SparseBitSet.ml[115,3233+14])
                Tpat_var "f/1232"
              expression (lib/SparseBitSet.ml[115,3233+15]..lib/SparseBitSet.ml[121,3339+15]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/SparseBitSet.ml[115,3233+15]..lib/SparseBitSet.ml[115,3233+16])
                      Tpat_var "s/1233"
                    expression (lib/SparseBitSet.ml[116,3252+2]..lib/SparseBitSet.ml[121,3339+15])
                      Texp_match
                      expression (lib/SparseBitSet.ml[116,3252+8]..lib/SparseBitSet.ml[116,3252+9])
                        Texp_ident "s/1233"
                      [
                        <case>
                          pattern (lib/SparseBitSet.ml[117,3267+4]..lib/SparseBitSet.ml[117,3267+5])
                            Tpat_value
                            pattern (lib/SparseBitSet.ml[117,3267+4]..lib/SparseBitSet.ml[117,3267+5])
                              Tpat_construct "N"
                              []
                              None
                          expression (lib/SparseBitSet.ml[118,3276+6]..lib/SparseBitSet.ml[118,3276+8])
                            Texp_construct "()"
                            []
                        <case>
                          pattern (lib/SparseBitSet.ml[119,3285+4]..lib/SparseBitSet.ml[119,3285+20])
                            Tpat_value
                            pattern (lib/SparseBitSet.ml[119,3285+4]..lib/SparseBitSet.ml[119,3285+20])
                              Tpat_construct "C"
                              [
                                pattern (lib/SparseBitSet.ml[119,3285+7]..lib/SparseBitSet.ml[119,3285+11])
                                  Tpat_var "addr/1234"
                                pattern (lib/SparseBitSet.ml[119,3285+13]..lib/SparseBitSet.ml[119,3285+15])
                                  Tpat_var "ss/1235"
                                pattern (lib/SparseBitSet.ml[119,3285+17]..lib/SparseBitSet.ml[119,3285+19])
                                  Tpat_var "qs/1236"
                              ]
                              None
                          expression (lib/SparseBitSet.ml[120,3309+6]..lib/SparseBitSet.ml[121,3339+15])
                            Texp_sequence
                            expression (lib/SparseBitSet.ml[120,3309+6]..lib/SparseBitSet.ml[120,3309+28])
                              Texp_apply
                              expression (lib/SparseBitSet.ml[120,3309+6]..lib/SparseBitSet.ml[120,3309+18])
                                Texp_ident "A/1132.iter_delta"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/SparseBitSet.ml[120,3309+19]..lib/SparseBitSet.ml[120,3309+23])
                                    Texp_ident "addr/1234"
                                <arg>
                                  Nolabel
                                  expression (lib/SparseBitSet.ml[120,3309+24]..lib/SparseBitSet.ml[120,3309+25])
                                    Texp_ident "f/1232"
                                <arg>
                                  Nolabel
                                  expression (lib/SparseBitSet.ml[120,3309+26]..lib/SparseBitSet.ml[120,3309+28])
                                    Texp_ident "ss/1235"
                              ]
                            expression (lib/SparseBitSet.ml[121,3339+6]..lib/SparseBitSet.ml[121,3339+15])
                              Texp_apply
                              expression (lib/SparseBitSet.ml[121,3339+6]..lib/SparseBitSet.ml[121,3339+10])
                                Texp_ident "iter/1231"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/SparseBitSet.ml[121,3339+11]..lib/SparseBitSet.ml[121,3339+12])
                                    Texp_ident "f/1232"
                                <arg>
                                  Nolabel
                                  expression (lib/SparseBitSet.ml[121,3339+13]..lib/SparseBitSet.ml[121,3339+15])
                                    Texp_ident "qs/1236"
                              ]
                      ]
                ]
          ]
    ]
  structure_item (lib/SparseBitSet.ml[123,3356+0]..lib/SparseBitSet.ml[129,3463+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[123,3356+4]..lib/SparseBitSet.ml[123,3356+16])
          Tpat_var "is_singleton/1237"
        expression (lib/SparseBitSet.ml[123,3356+17]..lib/SparseBitSet.ml[129,3463+11]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/SparseBitSet.ml[123,3356+17]..lib/SparseBitSet.ml[123,3356+18])
                Tpat_var "s/1239"
              expression (lib/SparseBitSet.ml[124,3377+2]..lib/SparseBitSet.ml[129,3463+11])
                Texp_match
                expression (lib/SparseBitSet.ml[124,3377+8]..lib/SparseBitSet.ml[124,3377+9])
                  Texp_ident "s/1239"
                [
                  <case>
                    pattern (lib/SparseBitSet.ml[125,3392+4]..lib/SparseBitSet.ml[125,3392+16])
                      Tpat_value
                      pattern (lib/SparseBitSet.ml[125,3392+4]..lib/SparseBitSet.ml[125,3392+16])
                        Tpat_construct "C"
                        [
                          pattern (lib/SparseBitSet.ml[125,3392+7]..lib/SparseBitSet.ml[125,3392+8])
                            Tpat_any
                          pattern (lib/SparseBitSet.ml[125,3392+10]..lib/SparseBitSet.ml[125,3392+12])
                            Tpat_var "ss/1240"
                          pattern (lib/SparseBitSet.ml[125,3392+14]..lib/SparseBitSet.ml[125,3392+15])
                            Tpat_construct "N"
                            []
                            None
                        ]
                        None
                    expression (lib/SparseBitSet.ml[126,3412+6]..lib/SparseBitSet.ml[126,3412+23])
                      Texp_apply
                      expression (lib/SparseBitSet.ml[126,3412+6]..lib/SparseBitSet.ml[126,3412+20])
                        Texp_ident "A/1132.is_singleton"
                      [
                        <arg>
                          Nolabel
                          expression (lib/SparseBitSet.ml[126,3412+21]..lib/SparseBitSet.ml[126,3412+23])
                            Texp_ident "ss/1240"
                      ]
                  <case>
                    pattern (lib/SparseBitSet.ml[127,3436+4]..lib/SparseBitSet.ml[128,3454+5])
                      Tpat_or
                      pattern (lib/SparseBitSet.ml[127,3436+4]..lib/SparseBitSet.ml[127,3436+17])
                        Tpat_value
                        pattern (lib/SparseBitSet.ml[127,3436+4]..lib/SparseBitSet.ml[127,3436+17])
                          Tpat_construct "C"
                          [
                            pattern (lib/SparseBitSet.ml[127,3436+7]..lib/SparseBitSet.ml[127,3436+8])
                              Tpat_any
                            pattern (lib/SparseBitSet.ml[127,3436+10]..lib/SparseBitSet.ml[127,3436+11])
                              Tpat_any
                            pattern (lib/SparseBitSet.ml[127,3436+13]..lib/SparseBitSet.ml[127,3436+16])
                              Tpat_construct "C"
                              [
                                pattern (lib/SparseBitSet.ml[127,3436+15]..lib/SparseBitSet.ml[127,3436+16])
                                  Tpat_any
                                pattern (lib/SparseBitSet.ml[127,3436+15]..lib/SparseBitSet.ml[127,3436+16])
                                  Tpat_any
                                pattern (lib/SparseBitSet.ml[127,3436+15]..lib/SparseBitSet.ml[127,3436+16])
                                  Tpat_any
                              ]
                              None
                          ]
                          None
                      pattern (lib/SparseBitSet.ml[128,3454+4]..lib/SparseBitSet.ml[128,3454+5])
                        Tpat_value
                        pattern (lib/SparseBitSet.ml[128,3454+4]..lib/SparseBitSet.ml[128,3454+5])
                          Tpat_construct "N"
                          []
                          None
                    expression (lib/SparseBitSet.ml[129,3463+6]..lib/SparseBitSet.ml[129,3463+11])
                      Texp_construct "false"
                      []
                ]
          ]
    ]
  structure_item (lib/SparseBitSet.ml[131,3476+0]..lib/SparseBitSet.ml[137,3611+10])
    Tstr_value Rec
    [
      <def>
        pattern (lib/SparseBitSet.ml[131,3476+8]..lib/SparseBitSet.ml[131,3476+16])
          Tpat_var "cardinal/1241"
        expression (lib/SparseBitSet.ml[131,3476+17]..lib/SparseBitSet.ml[137,3611+10]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/SparseBitSet.ml[131,3476+17]..lib/SparseBitSet.ml[131,3476+21])
                Tpat_var "accu/1242"
              expression (lib/SparseBitSet.ml[131,3476+22]..lib/SparseBitSet.ml[137,3611+10]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/SparseBitSet.ml[131,3476+22]..lib/SparseBitSet.ml[131,3476+23])
                      Tpat_var "s/1243"
                    expression (lib/SparseBitSet.ml[132,3502+2]..lib/SparseBitSet.ml[137,3611+10])
                      Texp_match
                      expression (lib/SparseBitSet.ml[132,3502+8]..lib/SparseBitSet.ml[132,3502+9])
                        Texp_ident "s/1243"
                      [
                        <case>
                          pattern (lib/SparseBitSet.ml[133,3517+4]..lib/SparseBitSet.ml[133,3517+17])
                            Tpat_value
                            pattern (lib/SparseBitSet.ml[133,3517+4]..lib/SparseBitSet.ml[133,3517+17])
                              Tpat_construct "C"
                              [
                                pattern (lib/SparseBitSet.ml[133,3517+7]..lib/SparseBitSet.ml[133,3517+8])
                                  Tpat_any
                                pattern (lib/SparseBitSet.ml[133,3517+10]..lib/SparseBitSet.ml[133,3517+12])
                                  Tpat_var "ss/1244"
                                pattern (lib/SparseBitSet.ml[133,3517+14]..lib/SparseBitSet.ml[133,3517+16])
                                  Tpat_var "qs/1245"
                              ]
                              None
                          expression (lib/SparseBitSet.ml[134,3538+6]..lib/SparseBitSet.ml[135,3579+22])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (lib/SparseBitSet.ml[134,3538+10]..lib/SparseBitSet.ml[134,3538+14])
                                  Tpat_var "accu/1246"
                                expression (lib/SparseBitSet.ml[134,3538+17]..lib/SparseBitSet.ml[134,3538+37])
                                  Texp_apply
                                  expression (lib/SparseBitSet.ml[134,3538+22]..lib/SparseBitSet.ml[134,3538+23])
                                    Texp_ident "Stdlib!.+"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/SparseBitSet.ml[134,3538+17]..lib/SparseBitSet.ml[134,3538+21])
                                        Texp_ident "accu/1242"
                                    <arg>
                                      Nolabel
                                      expression (lib/SparseBitSet.ml[134,3538+24]..lib/SparseBitSet.ml[134,3538+37])
                                        Texp_apply
                                        expression (lib/SparseBitSet.ml[134,3538+24]..lib/SparseBitSet.ml[134,3538+34])
                                          Texp_ident "A/1132.cardinal"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/SparseBitSet.ml[134,3538+35]..lib/SparseBitSet.ml[134,3538+37])
                                              Texp_ident "ss/1244"
                                        ]
                                  ]
                            ]
                            expression (lib/SparseBitSet.ml[135,3579+6]..lib/SparseBitSet.ml[135,3579+22])
                              Texp_apply
                              expression (lib/SparseBitSet.ml[135,3579+6]..lib/SparseBitSet.ml[135,3579+14])
                                Texp_ident "cardinal/1241"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/SparseBitSet.ml[135,3579+15]..lib/SparseBitSet.ml[135,3579+19])
                                    Texp_ident "accu/1246"
                                <arg>
                                  Nolabel
                                  expression (lib/SparseBitSet.ml[135,3579+20]..lib/SparseBitSet.ml[135,3579+22])
                                    Texp_ident "qs/1245"
                              ]
                        <case>
                          pattern (lib/SparseBitSet.ml[136,3602+4]..lib/SparseBitSet.ml[136,3602+5])
                            Tpat_value
                            pattern (lib/SparseBitSet.ml[136,3602+4]..lib/SparseBitSet.ml[136,3602+5])
                              Tpat_construct "N"
                              []
                              None
                          expression (lib/SparseBitSet.ml[137,3611+6]..lib/SparseBitSet.ml[137,3611+10])
                            Texp_ident "accu/1242"
                      ]
                ]
          ]
    ]
  structure_item (lib/SparseBitSet.ml[139,3623+0]..lib/SparseBitSet.ml[140,3640+14])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[139,3623+4]..lib/SparseBitSet.ml[139,3623+12])
          Tpat_var "cardinal/1247"
        expression (lib/SparseBitSet.ml[139,3623+13]..lib/SparseBitSet.ml[140,3640+14]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/SparseBitSet.ml[139,3623+13]..lib/SparseBitSet.ml[139,3623+14])
                Tpat_var "s/1248"
              expression (lib/SparseBitSet.ml[140,3640+2]..lib/SparseBitSet.ml[140,3640+14])
                Texp_apply
                expression (lib/SparseBitSet.ml[140,3640+2]..lib/SparseBitSet.ml[140,3640+10])
                  Texp_ident "cardinal/1241"
                [
                  <arg>
                    Nolabel
                    expression (lib/SparseBitSet.ml[140,3640+11]..lib/SparseBitSet.ml[140,3640+12])
                      Texp_constant Const_int 0
                  <arg>
                    Nolabel
                    expression (lib/SparseBitSet.ml[140,3640+13]..lib/SparseBitSet.ml[140,3640+14])
                      Texp_ident "s/1248"
                ]
          ]
    ]
  structure_item (lib/SparseBitSet.ml[142,3656+0]..lib/SparseBitSet.ml[143,3673+35])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[142,3656+4]..lib/SparseBitSet.ml[142,3656+12])
          Tpat_var "elements/1249"
        expression (lib/SparseBitSet.ml[142,3656+13]..lib/SparseBitSet.ml[143,3673+35]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/SparseBitSet.ml[142,3656+13]..lib/SparseBitSet.ml[142,3656+14])
                Tpat_var "s/1251"
              expression (lib/SparseBitSet.ml[143,3673+2]..lib/SparseBitSet.ml[143,3673+35])
                Texp_apply
                expression (lib/SparseBitSet.ml[143,3673+2]..lib/SparseBitSet.ml[143,3673+6])
                  Texp_ident "fold/1223"
                [
                  <arg>
                    Nolabel
                    expression (lib/SparseBitSet.ml[143,3673+7]..lib/SparseBitSet.ml[143,3673+30])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/SparseBitSet.ml[143,3673+12]..lib/SparseBitSet.ml[143,3673+14])
                            Tpat_var "tl/1252"
                          expression (lib/SparseBitSet.ml[143,3673+15]..lib/SparseBitSet.ml[143,3673+29]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (lib/SparseBitSet.ml[143,3673+15]..lib/SparseBitSet.ml[143,3673+17])
                                  Tpat_var "hd/1253"
                                expression (lib/SparseBitSet.ml[143,3673+21]..lib/SparseBitSet.ml[143,3673+29])
                                  Texp_construct "::"
                                  [
                                    expression (lib/SparseBitSet.ml[143,3673+21]..lib/SparseBitSet.ml[143,3673+23])
                                      Texp_ident "tl/1252"
                                    expression (lib/SparseBitSet.ml[143,3673+27]..lib/SparseBitSet.ml[143,3673+29])
                                      Texp_ident "hd/1253"
                                  ]
                            ]
                      ]
                  <arg>
                    Nolabel
                    expression (lib/SparseBitSet.ml[143,3673+31]..lib/SparseBitSet.ml[143,3673+32])
                      Texp_ident "s/1251"
                  <arg>
                    Nolabel
                    expression (lib/SparseBitSet.ml[143,3673+33]..lib/SparseBitSet.ml[143,3673+35])
                      Texp_construct "[]"
                      []
                ]
          ]
    ]
  structure_item (lib/SparseBitSet.ml[145,3710+0]..lib/SparseBitSet.ml[157,3977+21])
    Tstr_value Rec
    [
      <def>
        pattern (lib/SparseBitSet.ml[145,3710+8]..lib/SparseBitSet.ml[145,3710+14])
          Tpat_var "subset/1254"
        expression (lib/SparseBitSet.ml[145,3710+15]..lib/SparseBitSet.ml[157,3977+21]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/SparseBitSet.ml[145,3710+15]..lib/SparseBitSet.ml[145,3710+17])
                Tpat_var "s1/1255"
              expression (lib/SparseBitSet.ml[145,3710+18]..lib/SparseBitSet.ml[157,3977+21]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/SparseBitSet.ml[145,3710+18]..lib/SparseBitSet.ml[145,3710+20])
                      Tpat_var "s2/1256"
                    expression (lib/SparseBitSet.ml[146,3733+2]..lib/SparseBitSet.ml[157,3977+21])
                      Texp_match
                      expression (lib/SparseBitSet.ml[146,3733+8]..lib/SparseBitSet.ml[146,3733+14])
                        Texp_tuple
                        [
                          expression (lib/SparseBitSet.ml[146,3733+8]..lib/SparseBitSet.ml[146,3733+10])
                            Texp_ident "s1/1255"
                          expression (lib/SparseBitSet.ml[146,3733+12]..lib/SparseBitSet.ml[146,3733+14])
                            Texp_ident "s2/1256"
                        ]
                      [
                        <case>
                          pattern (lib/SparseBitSet.ml[147,3753+4]..lib/SparseBitSet.ml[147,3753+8])
                            Tpat_value
                            pattern (lib/SparseBitSet.ml[147,3753+4]..lib/SparseBitSet.ml[147,3753+8])
                              Tpat_tuple
                              [
                                pattern (lib/SparseBitSet.ml[147,3753+4]..lib/SparseBitSet.ml[147,3753+5])
                                  Tpat_construct "N"
                                  []
                                  None
                                pattern (lib/SparseBitSet.ml[147,3753+7]..lib/SparseBitSet.ml[147,3753+8])
                                  Tpat_any
                              ]
                          expression (lib/SparseBitSet.ml[148,3765+6]..lib/SparseBitSet.ml[148,3765+10])
                            Texp_construct "true"
                            []
                        <case>
                          pattern (lib/SparseBitSet.ml[149,3776+4]..lib/SparseBitSet.ml[149,3776+8])
                            Tpat_value
                            pattern (lib/SparseBitSet.ml[149,3776+4]..lib/SparseBitSet.ml[149,3776+8])
                              Tpat_tuple
                              [
                                pattern (lib/SparseBitSet.ml[149,3776+4]..lib/SparseBitSet.ml[149,3776+5])
                                  Tpat_any
                                pattern (lib/SparseBitSet.ml[149,3776+7]..lib/SparseBitSet.ml[149,3776+8])
                                  Tpat_construct "N"
                                  []
                                  None
                              ]
                          expression (lib/SparseBitSet.ml[150,3788+6]..lib/SparseBitSet.ml[150,3788+11])
                            Texp_construct "false"
                            []
                        <case>
                          pattern (lib/SparseBitSet.ml[151,3800+4]..lib/SparseBitSet.ml[151,3800+44])
                            Tpat_value
                            pattern (lib/SparseBitSet.ml[151,3800+4]..lib/SparseBitSet.ml[151,3800+44])
                              Tpat_tuple
                              [
                                pattern (lib/SparseBitSet.ml[151,3800+4]..lib/SparseBitSet.ml[151,3800+23])
                                  Tpat_construct "C"
                                  [
                                    pattern (lib/SparseBitSet.ml[151,3800+7]..lib/SparseBitSet.ml[151,3800+12])
                                      Tpat_var "addr1/1257"
                                    pattern (lib/SparseBitSet.ml[151,3800+14]..lib/SparseBitSet.ml[151,3800+17])
                                      Tpat_var "ss1/1258"
                                    pattern (lib/SparseBitSet.ml[151,3800+19]..lib/SparseBitSet.ml[151,3800+22])
                                      Tpat_var "qs1/1259"
                                  ]
                                  None
                                pattern (lib/SparseBitSet.ml[151,3800+25]..lib/SparseBitSet.ml[151,3800+44])
                                  Tpat_construct "C"
                                  [
                                    pattern (lib/SparseBitSet.ml[151,3800+28]..lib/SparseBitSet.ml[151,3800+33])
                                      Tpat_var "addr2/1260"
                                    pattern (lib/SparseBitSet.ml[151,3800+35]..lib/SparseBitSet.ml[151,3800+38])
                                      Tpat_var "ss2/1261"
                                    pattern (lib/SparseBitSet.ml[151,3800+40]..lib/SparseBitSet.ml[151,3800+43])
                                      Tpat_var "qs2/1262"
                                  ]
                                  None
                              ]
                          expression (lib/SparseBitSet.ml[152,3848+6]..lib/SparseBitSet.ml[157,3977+21])
                            Texp_ifthenelse
                            expression (lib/SparseBitSet.ml[152,3848+9]..lib/SparseBitSet.ml[152,3848+22])
                              Texp_apply
                              expression (lib/SparseBitSet.ml[152,3848+15]..lib/SparseBitSet.ml[152,3848+16])
                                Texp_ident "Stdlib!.<"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/SparseBitSet.ml[152,3848+9]..lib/SparseBitSet.ml[152,3848+14])
                                    Texp_ident "addr1/1257"
                                <arg>
                                  Nolabel
                                  expression (lib/SparseBitSet.ml[152,3848+17]..lib/SparseBitSet.ml[152,3848+22])
                                    Texp_ident "addr2/1260"
                              ]
                            expression (lib/SparseBitSet.ml[153,3876+8]..lib/SparseBitSet.ml[153,3876+13])
                              Texp_construct "false"
                              []
                            Some
                              expression (lib/SparseBitSet.ml[154,3890+11]..lib/SparseBitSet.ml[157,3977+21])
                                Texp_ifthenelse
                                expression (lib/SparseBitSet.ml[154,3890+14]..lib/SparseBitSet.ml[154,3890+27])
                                  Texp_apply
                                  expression (lib/SparseBitSet.ml[154,3890+20]..lib/SparseBitSet.ml[154,3890+21])
                                    Texp_ident "Stdlib!.="
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/SparseBitSet.ml[154,3890+14]..lib/SparseBitSet.ml[154,3890+19])
                                        Texp_ident "addr1/1257"
                                    <arg>
                                      Nolabel
                                      expression (lib/SparseBitSet.ml[154,3890+22]..lib/SparseBitSet.ml[154,3890+27])
                                        Texp_ident "addr2/1260"
                                  ]
                                expression (lib/SparseBitSet.ml[155,3923+8]..lib/SparseBitSet.ml[155,3923+42])
                                  Texp_apply
                                  expression (lib/SparseBitSet.ml[155,3923+25]..lib/SparseBitSet.ml[155,3923+27])
                                    Texp_ident "Stdlib!.&&"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/SparseBitSet.ml[155,3923+8]..lib/SparseBitSet.ml[155,3923+24])
                                        Texp_apply
                                        expression (lib/SparseBitSet.ml[155,3923+8]..lib/SparseBitSet.ml[155,3923+16])
                                          Texp_ident "A/1132.subset"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/SparseBitSet.ml[155,3923+17]..lib/SparseBitSet.ml[155,3923+20])
                                              Texp_ident "ss1/1258"
                                          <arg>
                                            Nolabel
                                            expression (lib/SparseBitSet.ml[155,3923+21]..lib/SparseBitSet.ml[155,3923+24])
                                              Texp_ident "ss2/1261"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (lib/SparseBitSet.ml[155,3923+28]..lib/SparseBitSet.ml[155,3923+42])
                                        Texp_apply
                                        expression (lib/SparseBitSet.ml[155,3923+28]..lib/SparseBitSet.ml[155,3923+34])
                                          Texp_ident "subset/1254"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/SparseBitSet.ml[155,3923+35]..lib/SparseBitSet.ml[155,3923+38])
                                              Texp_ident "qs1/1259"
                                          <arg>
                                            Nolabel
                                            expression (lib/SparseBitSet.ml[155,3923+39]..lib/SparseBitSet.ml[155,3923+42])
                                              Texp_ident "qs2/1262"
                                        ]
                                  ]
                                Some
                                  expression (lib/SparseBitSet.ml[157,3977+8]..lib/SparseBitSet.ml[157,3977+21])
                                    Texp_apply
                                    expression (lib/SparseBitSet.ml[157,3977+8]..lib/SparseBitSet.ml[157,3977+14])
                                      Texp_ident "subset/1254"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/SparseBitSet.ml[157,3977+15]..lib/SparseBitSet.ml[157,3977+17])
                                          Texp_ident "s1/1255"
                                      <arg>
                                        Nolabel
                                        expression (lib/SparseBitSet.ml[157,3977+18]..lib/SparseBitSet.ml[157,3977+21])
                                          Texp_ident "qs2/1262"
                                    ]
                      ]
                ]
          ]
    ]
  structure_item (lib/SparseBitSet.ml[162,4103+0]..lib/SparseBitSet.ml[176,4483+67])
    Tstr_value Rec
    [
      <def>
        pattern (lib/SparseBitSet.ml[162,4103+8]..lib/SparseBitSet.ml[162,4103+13])
          Tpat_var "union/1263"
        expression (lib/SparseBitSet.ml[162,4103+14]..lib/SparseBitSet.ml[176,4483+67]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/SparseBitSet.ml[162,4103+14]..lib/SparseBitSet.ml[162,4103+16])
                Tpat_var "s1/1264"
              expression (lib/SparseBitSet.ml[162,4103+17]..lib/SparseBitSet.ml[176,4483+67]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/SparseBitSet.ml[162,4103+17]..lib/SparseBitSet.ml[162,4103+19])
                      Tpat_var "s2/1265"
                    expression (lib/SparseBitSet.ml[163,4125+2]..lib/SparseBitSet.ml[176,4483+67])
                      Texp_match
                      expression (lib/SparseBitSet.ml[163,4125+8]..lib/SparseBitSet.ml[163,4125+14])
                        Texp_tuple
                        [
                          expression (lib/SparseBitSet.ml[163,4125+8]..lib/SparseBitSet.ml[163,4125+10])
                            Texp_ident "s1/1264"
                          expression (lib/SparseBitSet.ml[163,4125+12]..lib/SparseBitSet.ml[163,4125+14])
                            Texp_ident "s2/1265"
                        ]
                      [
                        <case>
                          pattern (lib/SparseBitSet.ml[164,4145+4]..lib/SparseBitSet.ml[165,4154+8])
                            Tpat_or
                            pattern (lib/SparseBitSet.ml[164,4145+4]..lib/SparseBitSet.ml[164,4145+8])
                              Tpat_value
                              pattern (lib/SparseBitSet.ml[164,4145+4]..lib/SparseBitSet.ml[164,4145+8])
                                Tpat_tuple
                                [
                                  pattern (lib/SparseBitSet.ml[164,4145+4]..lib/SparseBitSet.ml[164,4145+5])
                                    Tpat_construct "N"
                                    []
                                    None
                                  pattern (lib/SparseBitSet.ml[164,4145+7]..lib/SparseBitSet.ml[164,4145+8])
                                    Tpat_var "s/1266"
                                ]
                            pattern (lib/SparseBitSet.ml[165,4154+4]..lib/SparseBitSet.ml[165,4154+8])
                              Tpat_value
                              pattern (lib/SparseBitSet.ml[165,4154+4]..lib/SparseBitSet.ml[165,4154+8])
                                Tpat_tuple
                                [
                                  pattern (lib/SparseBitSet.ml[165,4154+4]..lib/SparseBitSet.ml[165,4154+5])
                                    Tpat_var "s/1266"
                                  pattern (lib/SparseBitSet.ml[165,4154+7]..lib/SparseBitSet.ml[165,4154+8])
                                    Tpat_construct "N"
                                    []
                                    None
                                ]
                          expression (lib/SparseBitSet.ml[166,4166+6]..lib/SparseBitSet.ml[166,4166+7])
                            Texp_ident "s/1266"
                        <case>
                          pattern (lib/SparseBitSet.ml[167,4174+4]..lib/SparseBitSet.ml[167,4174+44])
                            Tpat_value
                            pattern (lib/SparseBitSet.ml[167,4174+4]..lib/SparseBitSet.ml[167,4174+44])
                              Tpat_tuple
                              [
                                pattern (lib/SparseBitSet.ml[167,4174+4]..lib/SparseBitSet.ml[167,4174+23])
                                  Tpat_construct "C"
                                  [
                                    pattern (lib/SparseBitSet.ml[167,4174+7]..lib/SparseBitSet.ml[167,4174+12])
                                      Tpat_var "addr1/1268"
                                    pattern (lib/SparseBitSet.ml[167,4174+14]..lib/SparseBitSet.ml[167,4174+17])
                                      Tpat_var "ss1/1269"
                                    pattern (lib/SparseBitSet.ml[167,4174+19]..lib/SparseBitSet.ml[167,4174+22])
                                      Tpat_var "qs1/1270"
                                  ]
                                  None
                                pattern (lib/SparseBitSet.ml[167,4174+25]..lib/SparseBitSet.ml[167,4174+44])
                                  Tpat_construct "C"
                                  [
                                    pattern (lib/SparseBitSet.ml[167,4174+28]..lib/SparseBitSet.ml[167,4174+33])
                                      Tpat_var "addr2/1271"
                                    pattern (lib/SparseBitSet.ml[167,4174+35]..lib/SparseBitSet.ml[167,4174+38])
                                      Tpat_var "ss2/1272"
                                    pattern (lib/SparseBitSet.ml[167,4174+40]..lib/SparseBitSet.ml[167,4174+43])
                                      Tpat_var "qs2/1273"
                                  ]
                                  None
                              ]
                          expression (lib/SparseBitSet.ml[168,4222+6]..lib/SparseBitSet.ml[176,4483+67])
                            Texp_ifthenelse
                            expression (lib/SparseBitSet.ml[168,4222+9]..lib/SparseBitSet.ml[168,4222+22])
                              Texp_apply
                              expression (lib/SparseBitSet.ml[168,4222+15]..lib/SparseBitSet.ml[168,4222+16])
                                Texp_ident "Stdlib!.<"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/SparseBitSet.ml[168,4222+9]..lib/SparseBitSet.ml[168,4222+14])
                                    Texp_ident "addr1/1268"
                                <arg>
                                  Nolabel
                                  expression (lib/SparseBitSet.ml[168,4222+17]..lib/SparseBitSet.ml[168,4222+22])
                                    Texp_ident "addr2/1271"
                              ]
                            expression (lib/SparseBitSet.ml[169,4250+8]..lib/SparseBitSet.ml[169,4250+36])
                              Texp_construct "C"
                              [
                                expression (lib/SparseBitSet.ml[169,4250+11]..lib/SparseBitSet.ml[169,4250+16])
                                  Texp_ident "addr1/1268"
                                expression (lib/SparseBitSet.ml[169,4250+18]..lib/SparseBitSet.ml[169,4250+21])
                                  Texp_ident "ss1/1269"
                                expression (lib/SparseBitSet.ml[169,4250+23]..lib/SparseBitSet.ml[169,4250+35])
                                  Texp_apply
                                  expression (lib/SparseBitSet.ml[169,4250+23]..lib/SparseBitSet.ml[169,4250+28])
                                    Texp_ident "union/1263"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/SparseBitSet.ml[169,4250+29]..lib/SparseBitSet.ml[169,4250+32])
                                        Texp_ident "qs1/1270"
                                    <arg>
                                      Nolabel
                                      expression (lib/SparseBitSet.ml[169,4250+33]..lib/SparseBitSet.ml[169,4250+35])
                                        Texp_ident "s2/1265"
                                  ]
                              ]
                            Some
                              expression (lib/SparseBitSet.ml[170,4287+11]..lib/SparseBitSet.ml[176,4483+67])
                                Texp_ifthenelse
                                expression (lib/SparseBitSet.ml[170,4287+14]..lib/SparseBitSet.ml[170,4287+27])
                                  Texp_apply
                                  expression (lib/SparseBitSet.ml[170,4287+20]..lib/SparseBitSet.ml[170,4287+21])
                                    Texp_ident "Stdlib!.>"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/SparseBitSet.ml[170,4287+14]..lib/SparseBitSet.ml[170,4287+19])
                                        Texp_ident "addr1/1268"
                                    <arg>
                                      Nolabel
                                      expression (lib/SparseBitSet.ml[170,4287+22]..lib/SparseBitSet.ml[170,4287+27])
                                        Texp_ident "addr2/1271"
                                  ]
                                expression (lib/SparseBitSet.ml[171,4320+8]..lib/SparseBitSet.ml[172,4352+50])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/SparseBitSet.ml[171,4320+12]..lib/SparseBitSet.ml[171,4320+13])
                                        Tpat_var "s/1274"
                                      expression (lib/SparseBitSet.ml[171,4320+16]..lib/SparseBitSet.ml[171,4320+28])
                                        Texp_apply
                                        expression (lib/SparseBitSet.ml[171,4320+16]..lib/SparseBitSet.ml[171,4320+21])
                                          Texp_ident "union/1263"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/SparseBitSet.ml[171,4320+22]..lib/SparseBitSet.ml[171,4320+24])
                                              Texp_ident "s1/1264"
                                          <arg>
                                            Nolabel
                                            expression (lib/SparseBitSet.ml[171,4320+25]..lib/SparseBitSet.ml[171,4320+28])
                                              Texp_ident "qs2/1273"
                                        ]
                                  ]
                                  expression (lib/SparseBitSet.ml[172,4352+8]..lib/SparseBitSet.ml[172,4352+50])
                                    Texp_ifthenelse
                                    expression (lib/SparseBitSet.ml[172,4352+11]..lib/SparseBitSet.ml[172,4352+19])
                                      Texp_apply
                                      expression (lib/SparseBitSet.ml[172,4352+13]..lib/SparseBitSet.ml[172,4352+15])
                                        Texp_ident "Stdlib!.=="
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/SparseBitSet.ml[172,4352+11]..lib/SparseBitSet.ml[172,4352+12])
                                            Texp_ident "s/1274"
                                        <arg>
                                          Nolabel
                                          expression (lib/SparseBitSet.ml[172,4352+16]..lib/SparseBitSet.ml[172,4352+19])
                                            Texp_ident "qs2/1273"
                                      ]
                                    expression (lib/SparseBitSet.ml[172,4352+25]..lib/SparseBitSet.ml[172,4352+27])
                                      Texp_ident "s2/1265"
                                    Some
                                      expression (lib/SparseBitSet.ml[172,4352+33]..lib/SparseBitSet.ml[172,4352+50])
                                        Texp_construct "C"
                                        [
                                          expression (lib/SparseBitSet.ml[172,4352+36]..lib/SparseBitSet.ml[172,4352+41])
                                            Texp_ident "addr2/1271"
                                          expression (lib/SparseBitSet.ml[172,4352+43]..lib/SparseBitSet.ml[172,4352+46])
                                            Texp_ident "ss2/1272"
                                          expression (lib/SparseBitSet.ml[172,4352+48]..lib/SparseBitSet.ml[172,4352+49])
                                            Texp_ident "s/1274"
                                        ]
                                Some
                                  expression (lib/SparseBitSet.ml[174,4414+8]..lib/SparseBitSet.ml[176,4483+67])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/SparseBitSet.ml[174,4414+12]..lib/SparseBitSet.ml[174,4414+14])
                                          Tpat_var "ss/1275"
                                        expression (lib/SparseBitSet.ml[174,4414+17]..lib/SparseBitSet.ml[174,4414+32])
                                          Texp_apply
                                          expression (lib/SparseBitSet.ml[174,4414+17]..lib/SparseBitSet.ml[174,4414+24])
                                            Texp_ident "A/1132.union"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/SparseBitSet.ml[174,4414+25]..lib/SparseBitSet.ml[174,4414+28])
                                                Texp_ident "ss1/1269"
                                            <arg>
                                              Nolabel
                                              expression (lib/SparseBitSet.ml[174,4414+29]..lib/SparseBitSet.ml[174,4414+32])
                                                Texp_ident "ss2/1272"
                                          ]
                                    ]
                                    expression (lib/SparseBitSet.ml[175,4450+8]..lib/SparseBitSet.ml[176,4483+67])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (lib/SparseBitSet.ml[175,4450+12]..lib/SparseBitSet.ml[175,4450+13])
                                            Tpat_var "s/1276"
                                          expression (lib/SparseBitSet.ml[175,4450+16]..lib/SparseBitSet.ml[175,4450+29])
                                            Texp_apply
                                            expression (lib/SparseBitSet.ml[175,4450+16]..lib/SparseBitSet.ml[175,4450+21])
                                              Texp_ident "union/1263"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/SparseBitSet.ml[175,4450+22]..lib/SparseBitSet.ml[175,4450+25])
                                                  Texp_ident "qs1/1270"
                                              <arg>
                                                Nolabel
                                                expression (lib/SparseBitSet.ml[175,4450+26]..lib/SparseBitSet.ml[175,4450+29])
                                                  Texp_ident "qs2/1273"
                                            ]
                                      ]
                                      expression (lib/SparseBitSet.ml[176,4483+8]..lib/SparseBitSet.ml[176,4483+67])
                                        Texp_ifthenelse
                                        expression (lib/SparseBitSet.ml[176,4483+11]..lib/SparseBitSet.ml[176,4483+37])
                                          Texp_apply
                                          expression (lib/SparseBitSet.ml[176,4483+26]..lib/SparseBitSet.ml[176,4483+28])
                                            Texp_ident "Stdlib!.&&"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/SparseBitSet.ml[176,4483+11]..lib/SparseBitSet.ml[176,4483+25])
                                                Texp_apply
                                                expression (lib/SparseBitSet.ml[176,4483+11]..lib/SparseBitSet.ml[176,4483+18])
                                                  Texp_ident "A/1132.equal"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/SparseBitSet.ml[176,4483+19]..lib/SparseBitSet.ml[176,4483+21])
                                                      Texp_ident "ss/1275"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/SparseBitSet.ml[176,4483+22]..lib/SparseBitSet.ml[176,4483+25])
                                                      Texp_ident "ss2/1272"
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (lib/SparseBitSet.ml[176,4483+29]..lib/SparseBitSet.ml[176,4483+37])
                                                Texp_apply
                                                expression (lib/SparseBitSet.ml[176,4483+31]..lib/SparseBitSet.ml[176,4483+33])
                                                  Texp_ident "Stdlib!.=="
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/SparseBitSet.ml[176,4483+29]..lib/SparseBitSet.ml[176,4483+30])
                                                      Texp_ident "s/1276"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/SparseBitSet.ml[176,4483+34]..lib/SparseBitSet.ml[176,4483+37])
                                                      Texp_ident "qs2/1273"
                                                ]
                                          ]
                                        expression (lib/SparseBitSet.ml[176,4483+43]..lib/SparseBitSet.ml[176,4483+45])
                                          Texp_ident "s2/1265"
                                        Some
                                          expression (lib/SparseBitSet.ml[176,4483+51]..lib/SparseBitSet.ml[176,4483+67])
                                            Texp_construct "C"
                                            [
                                              expression (lib/SparseBitSet.ml[176,4483+54]..lib/SparseBitSet.ml[176,4483+59])
                                                Texp_ident "addr1/1268"
                                              expression (lib/SparseBitSet.ml[176,4483+61]..lib/SparseBitSet.ml[176,4483+63])
                                                Texp_ident "ss/1275"
                                              expression (lib/SparseBitSet.ml[176,4483+65]..lib/SparseBitSet.ml[176,4483+66])
                                                Texp_ident "s/1276"
                                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/SparseBitSet.ml[181,4654+0]..lib/SparseBitSet.ml[197,5011+69])
    Tstr_value Rec
    [
      <def>
        pattern (lib/SparseBitSet.ml[181,4654+8]..lib/SparseBitSet.ml[181,4654+13])
          Tpat_var "inter/1277"
        expression (lib/SparseBitSet.ml[181,4654+14]..lib/SparseBitSet.ml[197,5011+69]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/SparseBitSet.ml[181,4654+14]..lib/SparseBitSet.ml[181,4654+16])
                Tpat_var "s1/1278"
              expression (lib/SparseBitSet.ml[181,4654+17]..lib/SparseBitSet.ml[197,5011+69]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/SparseBitSet.ml[181,4654+17]..lib/SparseBitSet.ml[181,4654+19])
                      Tpat_var "s2/1279"
                    expression (lib/SparseBitSet.ml[182,4676+2]..lib/SparseBitSet.ml[197,5011+69])
                      Texp_match
                      expression (lib/SparseBitSet.ml[182,4676+8]..lib/SparseBitSet.ml[182,4676+14])
                        Texp_tuple
                        [
                          expression (lib/SparseBitSet.ml[182,4676+8]..lib/SparseBitSet.ml[182,4676+10])
                            Texp_ident "s1/1278"
                          expression (lib/SparseBitSet.ml[182,4676+12]..lib/SparseBitSet.ml[182,4676+14])
                            Texp_ident "s2/1279"
                        ]
                      [
                        <case>
                          pattern (lib/SparseBitSet.ml[183,4696+4]..lib/SparseBitSet.ml[184,4705+8])
                            Tpat_or
                            pattern (lib/SparseBitSet.ml[183,4696+4]..lib/SparseBitSet.ml[183,4696+8])
                              Tpat_value
                              pattern (lib/SparseBitSet.ml[183,4696+4]..lib/SparseBitSet.ml[183,4696+8])
                                Tpat_tuple
                                [
                                  pattern (lib/SparseBitSet.ml[183,4696+4]..lib/SparseBitSet.ml[183,4696+5])
                                    Tpat_construct "N"
                                    []
                                    None
                                  pattern (lib/SparseBitSet.ml[183,4696+7]..lib/SparseBitSet.ml[183,4696+8])
                                    Tpat_any
                                ]
                            pattern (lib/SparseBitSet.ml[184,4705+4]..lib/SparseBitSet.ml[184,4705+8])
                              Tpat_value
                              pattern (lib/SparseBitSet.ml[184,4705+4]..lib/SparseBitSet.ml[184,4705+8])
                                Tpat_tuple
                                [
                                  pattern (lib/SparseBitSet.ml[184,4705+4]..lib/SparseBitSet.ml[184,4705+5])
                                    Tpat_any
                                  pattern (lib/SparseBitSet.ml[184,4705+7]..lib/SparseBitSet.ml[184,4705+8])
                                    Tpat_construct "N"
                                    []
                                    None
                                ]
                          expression (lib/SparseBitSet.ml[185,4717+6]..lib/SparseBitSet.ml[185,4717+7])
                            Texp_construct "N"
                            []
                        <case>
                          pattern (lib/SparseBitSet.ml[186,4725+4]..lib/SparseBitSet.ml[186,4725+44])
                            Tpat_value
                            pattern (lib/SparseBitSet.ml[186,4725+4]..lib/SparseBitSet.ml[186,4725+44])
                              Tpat_tuple
                              [
                                pattern (lib/SparseBitSet.ml[186,4725+4]..lib/SparseBitSet.ml[186,4725+23])
                                  Tpat_construct "C"
                                  [
                                    pattern (lib/SparseBitSet.ml[186,4725+7]..lib/SparseBitSet.ml[186,4725+12])
                                      Tpat_var "addr1/1280"
                                    pattern (lib/SparseBitSet.ml[186,4725+14]..lib/SparseBitSet.ml[186,4725+17])
                                      Tpat_var "ss1/1281"
                                    pattern (lib/SparseBitSet.ml[186,4725+19]..lib/SparseBitSet.ml[186,4725+22])
                                      Tpat_var "qs1/1282"
                                  ]
                                  None
                                pattern (lib/SparseBitSet.ml[186,4725+25]..lib/SparseBitSet.ml[186,4725+44])
                                  Tpat_construct "C"
                                  [
                                    pattern (lib/SparseBitSet.ml[186,4725+28]..lib/SparseBitSet.ml[186,4725+33])
                                      Tpat_var "addr2/1283"
                                    pattern (lib/SparseBitSet.ml[186,4725+35]..lib/SparseBitSet.ml[186,4725+38])
                                      Tpat_var "ss2/1284"
                                    pattern (lib/SparseBitSet.ml[186,4725+40]..lib/SparseBitSet.ml[186,4725+43])
                                      Tpat_var "qs2/1285"
                                  ]
                                  None
                              ]
                          expression (lib/SparseBitSet.ml[187,4773+6]..lib/SparseBitSet.ml[197,5011+69])
                            Texp_ifthenelse
                            expression (lib/SparseBitSet.ml[187,4773+9]..lib/SparseBitSet.ml[187,4773+22])
                              Texp_apply
                              expression (lib/SparseBitSet.ml[187,4773+15]..lib/SparseBitSet.ml[187,4773+16])
                                Texp_ident "Stdlib!.<"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/SparseBitSet.ml[187,4773+9]..lib/SparseBitSet.ml[187,4773+14])
                                    Texp_ident "addr1/1280"
                                <arg>
                                  Nolabel
                                  expression (lib/SparseBitSet.ml[187,4773+17]..lib/SparseBitSet.ml[187,4773+22])
                                    Texp_ident "addr2/1283"
                              ]
                            expression (lib/SparseBitSet.ml[188,4801+8]..lib/SparseBitSet.ml[188,4801+20])
                              Texp_apply
                              expression (lib/SparseBitSet.ml[188,4801+8]..lib/SparseBitSet.ml[188,4801+13])
                                Texp_ident "inter/1277"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/SparseBitSet.ml[188,4801+14]..lib/SparseBitSet.ml[188,4801+17])
                                    Texp_ident "qs1/1282"
                                <arg>
                                  Nolabel
                                  expression (lib/SparseBitSet.ml[188,4801+18]..lib/SparseBitSet.ml[188,4801+20])
                                    Texp_ident "s2/1279"
                              ]
                            Some
                              expression (lib/SparseBitSet.ml[189,4822+11]..lib/SparseBitSet.ml[197,5011+69])
                                Texp_ifthenelse
                                expression (lib/SparseBitSet.ml[189,4822+14]..lib/SparseBitSet.ml[189,4822+27])
                                  Texp_apply
                                  expression (lib/SparseBitSet.ml[189,4822+20]..lib/SparseBitSet.ml[189,4822+21])
                                    Texp_ident "Stdlib!.>"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/SparseBitSet.ml[189,4822+14]..lib/SparseBitSet.ml[189,4822+19])
                                        Texp_ident "addr1/1280"
                                    <arg>
                                      Nolabel
                                      expression (lib/SparseBitSet.ml[189,4822+22]..lib/SparseBitSet.ml[189,4822+27])
                                        Texp_ident "addr2/1283"
                                  ]
                                expression (lib/SparseBitSet.ml[190,4855+8]..lib/SparseBitSet.ml[190,4855+20])
                                  Texp_apply
                                  expression (lib/SparseBitSet.ml[190,4855+8]..lib/SparseBitSet.ml[190,4855+13])
                                    Texp_ident "inter/1277"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/SparseBitSet.ml[190,4855+14]..lib/SparseBitSet.ml[190,4855+16])
                                        Texp_ident "s1/1278"
                                    <arg>
                                      Nolabel
                                      expression (lib/SparseBitSet.ml[190,4855+17]..lib/SparseBitSet.ml[190,4855+20])
                                        Texp_ident "qs2/1285"
                                  ]
                                Some
                                  expression (lib/SparseBitSet.ml[192,4887+8]..lib/SparseBitSet.ml[197,5011+69])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/SparseBitSet.ml[192,4887+12]..lib/SparseBitSet.ml[192,4887+14])
                                          Tpat_var "ss/1286"
                                        expression (lib/SparseBitSet.ml[192,4887+17]..lib/SparseBitSet.ml[192,4887+32])
                                          Texp_apply
                                          expression (lib/SparseBitSet.ml[192,4887+17]..lib/SparseBitSet.ml[192,4887+24])
                                            Texp_ident "A/1132.inter"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/SparseBitSet.ml[192,4887+25]..lib/SparseBitSet.ml[192,4887+28])
                                                Texp_ident "ss1/1281"
                                            <arg>
                                              Nolabel
                                              expression (lib/SparseBitSet.ml[192,4887+29]..lib/SparseBitSet.ml[192,4887+32])
                                                Texp_ident "ss2/1284"
                                          ]
                                    ]
                                    expression (lib/SparseBitSet.ml[193,4923+8]..lib/SparseBitSet.ml[197,5011+69])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (lib/SparseBitSet.ml[193,4923+12]..lib/SparseBitSet.ml[193,4923+13])
                                            Tpat_var "s/1287"
                                          expression (lib/SparseBitSet.ml[193,4923+16]..lib/SparseBitSet.ml[193,4923+29])
                                            Texp_apply
                                            expression (lib/SparseBitSet.ml[193,4923+16]..lib/SparseBitSet.ml[193,4923+21])
                                              Texp_ident "inter/1277"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/SparseBitSet.ml[193,4923+22]..lib/SparseBitSet.ml[193,4923+25])
                                                  Texp_ident "qs1/1282"
                                              <arg>
                                                Nolabel
                                                expression (lib/SparseBitSet.ml[193,4923+26]..lib/SparseBitSet.ml[193,4923+29])
                                                  Texp_ident "qs2/1285"
                                            ]
                                      ]
                                      expression (lib/SparseBitSet.ml[194,4956+8]..lib/SparseBitSet.ml[197,5011+69])
                                        Texp_ifthenelse
                                        expression (lib/SparseBitSet.ml[194,4956+11]..lib/SparseBitSet.ml[194,4956+24])
                                          Texp_apply
                                          expression (lib/SparseBitSet.ml[194,4956+11]..lib/SparseBitSet.ml[194,4956+21])
                                            Texp_ident "A/1132.is_empty"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/SparseBitSet.ml[194,4956+22]..lib/SparseBitSet.ml[194,4956+24])
                                                Texp_ident "ss/1286"
                                          ]
                                        expression (lib/SparseBitSet.ml[195,4986+10]..lib/SparseBitSet.ml[195,4986+11])
                                          Texp_ident "s/1287"
                                        Some
                                          expression (lib/SparseBitSet.ml[197,5011+10]..lib/SparseBitSet.ml[197,5011+69])
                                            Texp_ifthenelse
                                            expression (lib/SparseBitSet.ml[197,5011+13]..lib/SparseBitSet.ml[197,5011+39])
                                              Texp_apply
                                              expression (lib/SparseBitSet.ml[197,5011+28]..lib/SparseBitSet.ml[197,5011+30])
                                                Texp_ident "Stdlib!.&&"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/SparseBitSet.ml[197,5011+13]..lib/SparseBitSet.ml[197,5011+27])
                                                    Texp_apply
                                                    expression (lib/SparseBitSet.ml[197,5011+13]..lib/SparseBitSet.ml[197,5011+20])
                                                      Texp_ident "A/1132.equal"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/SparseBitSet.ml[197,5011+21]..lib/SparseBitSet.ml[197,5011+23])
                                                          Texp_ident "ss/1286"
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/SparseBitSet.ml[197,5011+24]..lib/SparseBitSet.ml[197,5011+27])
                                                          Texp_ident "ss1/1281"
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (lib/SparseBitSet.ml[197,5011+31]..lib/SparseBitSet.ml[197,5011+39])
                                                    Texp_apply
                                                    expression (lib/SparseBitSet.ml[197,5011+33]..lib/SparseBitSet.ml[197,5011+35])
                                                      Texp_ident "Stdlib!.=="
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/SparseBitSet.ml[197,5011+31]..lib/SparseBitSet.ml[197,5011+32])
                                                          Texp_ident "s/1287"
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/SparseBitSet.ml[197,5011+36]..lib/SparseBitSet.ml[197,5011+39])
                                                          Texp_ident "qs1/1282"
                                                    ]
                                              ]
                                            expression (lib/SparseBitSet.ml[197,5011+45]..lib/SparseBitSet.ml[197,5011+47])
                                              Texp_ident "s1/1278"
                                            Some
                                              expression (lib/SparseBitSet.ml[197,5011+53]..lib/SparseBitSet.ml[197,5011+69])
                                                Texp_construct "C"
                                                [
                                                  expression (lib/SparseBitSet.ml[197,5011+56]..lib/SparseBitSet.ml[197,5011+61])
                                                    Texp_ident "addr1/1280"
                                                  expression (lib/SparseBitSet.ml[197,5011+63]..lib/SparseBitSet.ml[197,5011+65])
                                                    Texp_ident "ss/1286"
                                                  expression (lib/SparseBitSet.ml[197,5011+67]..lib/SparseBitSet.ml[197,5011+68])
                                                    Texp_ident "s/1287"
                                                ]
                      ]
                ]
          ]
    ]
  structure_item (lib/SparseBitSet.ml[199,5082+0]..lib/SparseBitSet.ml[205,5202+24])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[199,5082+4]..lib/SparseBitSet.ml[199,5082+10])
          Tpat_var "choose/1288"
        expression (lib/SparseBitSet.ml[199,5082+11]..lib/SparseBitSet.ml[205,5202+24]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/SparseBitSet.ml[199,5082+11]..lib/SparseBitSet.ml[199,5082+12])
                Tpat_var "s/1290"
              expression (lib/SparseBitSet.ml[200,5097+2]..lib/SparseBitSet.ml[205,5202+24])
                Texp_match
                expression (lib/SparseBitSet.ml[200,5097+8]..lib/SparseBitSet.ml[200,5097+9])
                  Texp_ident "s/1290"
                [
                  <case>
                    pattern (lib/SparseBitSet.ml[201,5112+4]..lib/SparseBitSet.ml[201,5112+5])
                      Tpat_value
                      pattern (lib/SparseBitSet.ml[201,5112+4]..lib/SparseBitSet.ml[201,5112+5])
                        Tpat_construct "N"
                        []
                        None
                    expression (lib/SparseBitSet.ml[202,5121+6]..lib/SparseBitSet.ml[202,5121+21])
                      Texp_apply
                      expression (lib/SparseBitSet.ml[202,5121+6]..lib/SparseBitSet.ml[202,5121+11])
                        Texp_ident "Stdlib!.raise"
                      [
                        <arg>
                          Nolabel
                          expression (lib/SparseBitSet.ml[202,5121+12]..lib/SparseBitSet.ml[202,5121+21])
                            Texp_construct "Not_found"
                            []
                      ]
                  <case>
                    pattern (lib/SparseBitSet.ml[203,5143+4]..lib/SparseBitSet.ml[203,5143+19])
                      Tpat_value
                      pattern (lib/SparseBitSet.ml[203,5143+4]..lib/SparseBitSet.ml[203,5143+19])
                        Tpat_construct "C"
                        [
                          pattern (lib/SparseBitSet.ml[203,5143+7]..lib/SparseBitSet.ml[203,5143+11])
                            Tpat_var "addr/1291"
                          pattern (lib/SparseBitSet.ml[203,5143+13]..lib/SparseBitSet.ml[203,5143+15])
                            Tpat_var "ss/1292"
                          pattern (lib/SparseBitSet.ml[203,5143+17]..lib/SparseBitSet.ml[203,5143+18])
                            Tpat_any
                        ]
                        None
                    expression (lib/SparseBitSet.ml[204,5166+6]..lib/SparseBitSet.ml[205,5202+24])
                      Texp_sequence
                      expression (lib/SparseBitSet.ml[204,5166+6]..lib/SparseBitSet.ml[204,5166+34])
                        Texp_assert                        expression (lib/SparseBitSet.ml[204,5166+13]..lib/SparseBitSet.ml[204,5166+34])
                          Texp_apply
                          expression (lib/SparseBitSet.ml[204,5166+14]..lib/SparseBitSet.ml[204,5166+17])
                            Texp_ident "Stdlib!.not"
                          [
                            <arg>
                              Nolabel
                              expression (lib/SparseBitSet.ml[204,5166+18]..lib/SparseBitSet.ml[204,5166+33])
                                Texp_apply
                                expression (lib/SparseBitSet.ml[204,5166+19]..lib/SparseBitSet.ml[204,5166+29])
                                  Texp_ident "A/1132.is_empty"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/SparseBitSet.ml[204,5166+30]..lib/SparseBitSet.ml[204,5166+32])
                                      Texp_ident "ss/1292"
                                ]
                          ]
                      expression (lib/SparseBitSet.ml[205,5202+6]..lib/SparseBitSet.ml[205,5202+24])
                        Texp_apply
                        expression (lib/SparseBitSet.ml[205,5202+11]..lib/SparseBitSet.ml[205,5202+12])
                          Texp_ident "Stdlib!.+"
                        [
                          <arg>
                            Nolabel
                            expression (lib/SparseBitSet.ml[205,5202+6]..lib/SparseBitSet.ml[205,5202+10])
                              Texp_ident "addr/1291"
                          <arg>
                            Nolabel
                            expression (lib/SparseBitSet.ml[205,5202+13]..lib/SparseBitSet.ml[205,5202+24])
                              Texp_apply
                              expression (lib/SparseBitSet.ml[205,5202+13]..lib/SparseBitSet.ml[205,5202+21])
                                Texp_ident "A/1132.choose"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/SparseBitSet.ml[205,5202+22]..lib/SparseBitSet.ml[205,5202+24])
                                    Texp_ident "ss/1292"
                              ]
                        ]
                ]
          ]
    ]
  structure_item (lib/SparseBitSet.ml[207,5228+0]..lib/SparseBitSet.ml[220,5564+18])
    Tstr_value Rec
    [
      <def>
        pattern (lib/SparseBitSet.ml[207,5228+8]..lib/SparseBitSet.ml[207,5228+15])
          Tpat_var "compare/1293"
        expression (lib/SparseBitSet.ml[207,5228+16]..lib/SparseBitSet.ml[220,5564+18]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/SparseBitSet.ml[207,5228+16]..lib/SparseBitSet.ml[207,5228+17])
                Tpat_var "x/1294"
              expression (lib/SparseBitSet.ml[207,5228+18]..lib/SparseBitSet.ml[220,5564+18]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/SparseBitSet.ml[207,5228+18]..lib/SparseBitSet.ml[207,5228+19])
                      Tpat_var "y/1295"
                    expression (lib/SparseBitSet.ml[208,5250+2]..lib/SparseBitSet.ml[220,5564+18])
                      Texp_ifthenelse
                      expression (lib/SparseBitSet.ml[208,5250+5]..lib/SparseBitSet.ml[208,5250+11])
                        Texp_apply
                        expression (lib/SparseBitSet.ml[208,5250+7]..lib/SparseBitSet.ml[208,5250+9])
                          Texp_ident "Stdlib!.=="
                        [
                          <arg>
                            Nolabel
                            expression (lib/SparseBitSet.ml[208,5250+5]..lib/SparseBitSet.ml[208,5250+6])
                              Texp_ident "x/1294"
                          <arg>
                            Nolabel
                            expression (lib/SparseBitSet.ml[208,5250+10]..lib/SparseBitSet.ml[208,5250+11])
                              Texp_ident "y/1295"
                        ]
                      expression (lib/SparseBitSet.ml[208,5250+17]..lib/SparseBitSet.ml[208,5250+18])
                        Texp_constant Const_int 0
                      Some
                        expression (lib/SparseBitSet.ml[209,5274+4]..lib/SparseBitSet.ml[220,5564+18])
                          Texp_match
                          expression (lib/SparseBitSet.ml[209,5274+10]..lib/SparseBitSet.ml[209,5274+14])
                            Texp_tuple
                            [
                              expression (lib/SparseBitSet.ml[209,5274+10]..lib/SparseBitSet.ml[209,5274+11])
                                Texp_ident "x/1294"
                              expression (lib/SparseBitSet.ml[209,5274+13]..lib/SparseBitSet.ml[209,5274+14])
                                Texp_ident "y/1295"
                            ]
                          [
                            <case>
                              pattern (lib/SparseBitSet.ml[210,5294+6]..lib/SparseBitSet.ml[210,5294+40])
                                Tpat_value
                                pattern (lib/SparseBitSet.ml[210,5294+6]..lib/SparseBitSet.ml[210,5294+40])
                                  Tpat_tuple
                                  [
                                    pattern (lib/SparseBitSet.ml[210,5294+6]..lib/SparseBitSet.ml[210,5294+22])
                                      Tpat_construct "C"
                                      [
                                        pattern (lib/SparseBitSet.ml[210,5294+9]..lib/SparseBitSet.ml[210,5294+11])
                                          Tpat_var "a1/1296"
                                        pattern (lib/SparseBitSet.ml[210,5294+13]..lib/SparseBitSet.ml[210,5294+16])
                                          Tpat_var "ss1/1297"
                                        pattern (lib/SparseBitSet.ml[210,5294+18]..lib/SparseBitSet.ml[210,5294+21])
                                          Tpat_var "qs1/1298"
                                      ]
                                      None
                                    pattern (lib/SparseBitSet.ml[210,5294+24]..lib/SparseBitSet.ml[210,5294+40])
                                      Tpat_construct "C"
                                      [
                                        pattern (lib/SparseBitSet.ml[210,5294+27]..lib/SparseBitSet.ml[210,5294+29])
                                          Tpat_var "a2/1299"
                                        pattern (lib/SparseBitSet.ml[210,5294+31]..lib/SparseBitSet.ml[210,5294+34])
                                          Tpat_var "ss2/1300"
                                        pattern (lib/SparseBitSet.ml[210,5294+36]..lib/SparseBitSet.ml[210,5294+39])
                                          Tpat_var "qs2/1301"
                                      ]
                                      None
                                  ]
                              expression (lib/SparseBitSet.ml[211,5338+6]..lib/SparseBitSet.ml[217,5520+9])
                                Texp_match
                                expression (lib/SparseBitSet.ml[211,5338+18]..lib/SparseBitSet.ml[211,5338+39])
                                  Texp_apply
                                  expression (lib/SparseBitSet.ml[211,5338+18]..lib/SparseBitSet.ml[211,5338+33])
                                    Texp_ident "Gbnf_parser!.Generic.compare"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/SparseBitSet.ml[211,5338+34]..lib/SparseBitSet.ml[211,5338+36])
                                        Texp_ident "a1/1296"
                                    <arg>
                                      Nolabel
                                      expression (lib/SparseBitSet.ml[211,5338+37]..lib/SparseBitSet.ml[211,5338+39])
                                        Texp_ident "a2/1299"
                                  ]
                                [
                                  <case>
                                    pattern (lib/SparseBitSet.ml[212,5383+10]..lib/SparseBitSet.ml[212,5383+11])
                                      Tpat_value
                                      pattern (lib/SparseBitSet.ml[212,5383+10]..lib/SparseBitSet.ml[212,5383+11])
                                        Tpat_constant Const_int 0
                                    expression (lib/SparseBitSet.ml[212,5383+15]..lib/SparseBitSet.ml[215,5489+13])
                                      Texp_match
                                      expression (lib/SparseBitSet.ml[212,5383+27]..lib/SparseBitSet.ml[212,5383+44])
                                        Texp_apply
                                        expression (lib/SparseBitSet.ml[212,5383+27]..lib/SparseBitSet.ml[212,5383+36])
                                          Texp_ident "A/1132.compare"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/SparseBitSet.ml[212,5383+37]..lib/SparseBitSet.ml[212,5383+40])
                                              Texp_ident "ss1/1297"
                                          <arg>
                                            Nolabel
                                            expression (lib/SparseBitSet.ml[212,5383+41]..lib/SparseBitSet.ml[212,5383+44])
                                              Texp_ident "ss2/1300"
                                        ]
                                      [
                                        <case>
                                          pattern (lib/SparseBitSet.ml[213,5433+14]..lib/SparseBitSet.ml[213,5433+15])
                                            Tpat_value
                                            pattern (lib/SparseBitSet.ml[213,5433+14]..lib/SparseBitSet.ml[213,5433+15])
                                              Tpat_constant Const_int 0
                                          expression (lib/SparseBitSet.ml[213,5433+19]..lib/SparseBitSet.ml[213,5433+34])
                                            Texp_apply
                                            expression (lib/SparseBitSet.ml[213,5433+19]..lib/SparseBitSet.ml[213,5433+26])
                                              Texp_ident "compare/1293"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/SparseBitSet.ml[213,5433+27]..lib/SparseBitSet.ml[213,5433+30])
                                                  Texp_ident "qs1/1298"
                                              <arg>
                                                Nolabel
                                                expression (lib/SparseBitSet.ml[213,5433+31]..lib/SparseBitSet.ml[213,5433+34])
                                                  Texp_ident "qs2/1301"
                                            ]
                                        <case>
                                          pattern (lib/SparseBitSet.ml[214,5468+14]..lib/SparseBitSet.ml[214,5468+15])
                                            Tpat_value
                                            pattern (lib/SparseBitSet.ml[214,5468+14]..lib/SparseBitSet.ml[214,5468+15])
                                              Tpat_var "n/1304"
                                          expression (lib/SparseBitSet.ml[214,5468+19]..lib/SparseBitSet.ml[214,5468+20])
                                            Texp_ident "n/1304"
                                      ]
                                  <case>
                                    pattern (lib/SparseBitSet.ml[216,5503+10]..lib/SparseBitSet.ml[216,5503+11])
                                      Tpat_value
                                      pattern (lib/SparseBitSet.ml[216,5503+10]..lib/SparseBitSet.ml[216,5503+11])
                                        Tpat_var "n/1303"
                                    expression (lib/SparseBitSet.ml[216,5503+15]..lib/SparseBitSet.ml[216,5503+16])
                                      Texp_ident "n/1303"
                                ]
                            <case>
                              pattern (lib/SparseBitSet.ml[218,5530+6]..lib/SparseBitSet.ml[218,5530+10])
                                Tpat_value
                                pattern (lib/SparseBitSet.ml[218,5530+6]..lib/SparseBitSet.ml[218,5530+10])
                                  Tpat_tuple
                                  [
                                    pattern (lib/SparseBitSet.ml[218,5530+6]..lib/SparseBitSet.ml[218,5530+7])
                                      Tpat_construct "N"
                                      []
                                      None
                                    pattern (lib/SparseBitSet.ml[218,5530+9]..lib/SparseBitSet.ml[218,5530+10])
                                      Tpat_construct "N"
                                      []
                                      None
                                  ]
                              expression (lib/SparseBitSet.ml[218,5530+14]..lib/SparseBitSet.ml[218,5530+15])
                                Texp_constant Const_int 0
                            <case>
                              pattern (lib/SparseBitSet.ml[219,5546+6]..lib/SparseBitSet.ml[219,5546+12])
                                Tpat_value
                                pattern (lib/SparseBitSet.ml[219,5546+6]..lib/SparseBitSet.ml[219,5546+12])
                                  Tpat_tuple
                                  [
                                    pattern (lib/SparseBitSet.ml[219,5546+6]..lib/SparseBitSet.ml[219,5546+9])
                                      Tpat_construct "C"
                                      [
                                        pattern (lib/SparseBitSet.ml[219,5546+8]..lib/SparseBitSet.ml[219,5546+9])
                                          Tpat_any
                                        pattern (lib/SparseBitSet.ml[219,5546+8]..lib/SparseBitSet.ml[219,5546+9])
                                          Tpat_any
                                        pattern (lib/SparseBitSet.ml[219,5546+8]..lib/SparseBitSet.ml[219,5546+9])
                                          Tpat_any
                                      ]
                                      None
                                    pattern (lib/SparseBitSet.ml[219,5546+11]..lib/SparseBitSet.ml[219,5546+12])
                                      Tpat_construct "N"
                                      []
                                      None
                                  ]
                              expression (lib/SparseBitSet.ml[219,5546+16]..lib/SparseBitSet.ml[219,5546+17])
                                Texp_constant Const_int 1
                            <case>
                              pattern (lib/SparseBitSet.ml[220,5564+6]..lib/SparseBitSet.ml[220,5564+12])
                                Tpat_value
                                pattern (lib/SparseBitSet.ml[220,5564+6]..lib/SparseBitSet.ml[220,5564+12])
                                  Tpat_tuple
                                  [
                                    pattern (lib/SparseBitSet.ml[220,5564+6]..lib/SparseBitSet.ml[220,5564+7])
                                      Tpat_construct "N"
                                      []
                                      None
                                    pattern (lib/SparseBitSet.ml[220,5564+9]..lib/SparseBitSet.ml[220,5564+12])
                                      Tpat_construct "C"
                                      [
                                        pattern (lib/SparseBitSet.ml[220,5564+11]..lib/SparseBitSet.ml[220,5564+12])
                                          Tpat_any
                                        pattern (lib/SparseBitSet.ml[220,5564+11]..lib/SparseBitSet.ml[220,5564+12])
                                          Tpat_any
                                        pattern (lib/SparseBitSet.ml[220,5564+11]..lib/SparseBitSet.ml[220,5564+12])
                                          Tpat_any
                                      ]
                                      None
                                  ]
                              expression (lib/SparseBitSet.ml[220,5564+16]..lib/SparseBitSet.ml[220,5564+18])
                                Texp_constant Const_int -1
                          ]
                ]
          ]
    ]
  structure_item (lib/SparseBitSet.ml[222,5584+0]..lib/SparseBitSet.ml[230,5751+28])
    Tstr_value Rec
    [
      <def>
        pattern (lib/SparseBitSet.ml[222,5584+8]..lib/SparseBitSet.ml[222,5584+13])
          Tpat_var "equal/1305"
        expression (lib/SparseBitSet.ml[222,5584+14]..lib/SparseBitSet.ml[230,5751+28]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/SparseBitSet.ml[222,5584+14]..lib/SparseBitSet.ml[222,5584+15])
                Tpat_var "x/1306"
              expression (lib/SparseBitSet.ml[222,5584+16]..lib/SparseBitSet.ml[230,5751+28]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/SparseBitSet.ml[222,5584+16]..lib/SparseBitSet.ml[222,5584+17])
                      Tpat_var "y/1307"
                    expression (lib/SparseBitSet.ml[223,5604+2]..lib/SparseBitSet.ml[230,5751+28])
                      Texp_apply
                      expression (lib/SparseBitSet.ml[223,5604+11]..lib/SparseBitSet.ml[223,5604+13])
                        Texp_ident "Stdlib!.||"
                      [
                        <arg>
                          Nolabel
                          expression (lib/SparseBitSet.ml[223,5604+2]..lib/SparseBitSet.ml[223,5604+10])
                            Texp_apply
                            expression (lib/SparseBitSet.ml[223,5604+5]..lib/SparseBitSet.ml[223,5604+7])
                              Texp_ident "Stdlib!.=="
                            [
                              <arg>
                                Nolabel
                                expression (lib/SparseBitSet.ml[223,5604+3]..lib/SparseBitSet.ml[223,5604+4])
                                  Texp_ident "x/1306"
                              <arg>
                                Nolabel
                                expression (lib/SparseBitSet.ml[223,5604+8]..lib/SparseBitSet.ml[223,5604+9])
                                  Texp_ident "y/1307"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/SparseBitSet.ml[224,5618+2]..lib/SparseBitSet.ml[230,5751+28])
                            Texp_match
                            expression (lib/SparseBitSet.ml[224,5618+8]..lib/SparseBitSet.ml[224,5618+12])
                              Texp_tuple
                              [
                                expression (lib/SparseBitSet.ml[224,5618+8]..lib/SparseBitSet.ml[224,5618+9])
                                  Texp_ident "x/1306"
                                expression (lib/SparseBitSet.ml[224,5618+11]..lib/SparseBitSet.ml[224,5618+12])
                                  Texp_ident "y/1307"
                              ]
                            [
                              <case>
                                pattern (lib/SparseBitSet.ml[225,5636+4]..lib/SparseBitSet.ml[225,5636+38])
                                  Tpat_value
                                  pattern (lib/SparseBitSet.ml[225,5636+4]..lib/SparseBitSet.ml[225,5636+38])
                                    Tpat_tuple
                                    [
                                      pattern (lib/SparseBitSet.ml[225,5636+4]..lib/SparseBitSet.ml[225,5636+20])
                                        Tpat_construct "C"
                                        [
                                          pattern (lib/SparseBitSet.ml[225,5636+7]..lib/SparseBitSet.ml[225,5636+9])
                                            Tpat_var "a1/1308"
                                          pattern (lib/SparseBitSet.ml[225,5636+11]..lib/SparseBitSet.ml[225,5636+14])
                                            Tpat_var "ss1/1309"
                                          pattern (lib/SparseBitSet.ml[225,5636+16]..lib/SparseBitSet.ml[225,5636+19])
                                            Tpat_var "qs1/1310"
                                        ]
                                        None
                                      pattern (lib/SparseBitSet.ml[225,5636+22]..lib/SparseBitSet.ml[225,5636+38])
                                        Tpat_construct "C"
                                        [
                                          pattern (lib/SparseBitSet.ml[225,5636+25]..lib/SparseBitSet.ml[225,5636+27])
                                            Tpat_var "a2/1311"
                                          pattern (lib/SparseBitSet.ml[225,5636+29]..lib/SparseBitSet.ml[225,5636+32])
                                            Tpat_var "ss2/1312"
                                          pattern (lib/SparseBitSet.ml[225,5636+34]..lib/SparseBitSet.ml[225,5636+37])
                                            Tpat_var "qs2/1313"
                                        ]
                                        None
                                    ]
                                expression (lib/SparseBitSet.ml[226,5678+4]..lib/SparseBitSet.ml[228,5716+17])
                                  Texp_apply
                                  expression (lib/SparseBitSet.ml[226,5678+12]..lib/SparseBitSet.ml[226,5678+14])
                                    Texp_ident "Stdlib!.&&"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/SparseBitSet.ml[226,5678+4]..lib/SparseBitSet.ml[226,5678+11])
                                        Texp_apply
                                        expression (lib/SparseBitSet.ml[226,5678+7]..lib/SparseBitSet.ml[226,5678+8])
                                          Texp_ident "Stdlib!.="
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/SparseBitSet.ml[226,5678+4]..lib/SparseBitSet.ml[226,5678+6])
                                              Texp_ident "a1/1308"
                                          <arg>
                                            Nolabel
                                            expression (lib/SparseBitSet.ml[226,5678+9]..lib/SparseBitSet.ml[226,5678+11])
                                              Texp_ident "a2/1311"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (lib/SparseBitSet.ml[227,5693+4]..lib/SparseBitSet.ml[228,5716+17])
                                        Texp_apply
                                        expression (lib/SparseBitSet.ml[227,5693+20]..lib/SparseBitSet.ml[227,5693+22])
                                          Texp_ident "Stdlib!.&&"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/SparseBitSet.ml[227,5693+4]..lib/SparseBitSet.ml[227,5693+19])
                                              Texp_apply
                                              expression (lib/SparseBitSet.ml[227,5693+4]..lib/SparseBitSet.ml[227,5693+11])
                                                Texp_ident "A/1132.equal"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/SparseBitSet.ml[227,5693+12]..lib/SparseBitSet.ml[227,5693+15])
                                                    Texp_ident "ss1/1309"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/SparseBitSet.ml[227,5693+16]..lib/SparseBitSet.ml[227,5693+19])
                                                    Texp_ident "ss2/1312"
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (lib/SparseBitSet.ml[228,5716+4]..lib/SparseBitSet.ml[228,5716+17])
                                              Texp_apply
                                              expression (lib/SparseBitSet.ml[228,5716+4]..lib/SparseBitSet.ml[228,5716+9])
                                                Texp_ident "equal/1305"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/SparseBitSet.ml[228,5716+10]..lib/SparseBitSet.ml[228,5716+13])
                                                    Texp_ident "qs1/1310"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/SparseBitSet.ml[228,5716+14]..lib/SparseBitSet.ml[228,5716+17])
                                                    Texp_ident "qs2/1313"
                                              ]
                                        ]
                                  ]
                              <case>
                                pattern (lib/SparseBitSet.ml[229,5734+4]..lib/SparseBitSet.ml[229,5734+8])
                                  Tpat_value
                                  pattern (lib/SparseBitSet.ml[229,5734+4]..lib/SparseBitSet.ml[229,5734+8])
                                    Tpat_tuple
                                    [
                                      pattern (lib/SparseBitSet.ml[229,5734+4]..lib/SparseBitSet.ml[229,5734+5])
                                        Tpat_construct "N"
                                        []
                                        None
                                      pattern (lib/SparseBitSet.ml[229,5734+7]..lib/SparseBitSet.ml[229,5734+8])
                                        Tpat_construct "N"
                                        []
                                        None
                                    ]
                                expression (lib/SparseBitSet.ml[229,5734+12]..lib/SparseBitSet.ml[229,5734+16])
                                  Texp_construct "true"
                                  []
                              <case>
                                pattern (lib/SparseBitSet.ml[230,5751+4]..lib/SparseBitSet.ml[230,5751+19])
                                  Tpat_or
                                  pattern (lib/SparseBitSet.ml[230,5751+4]..lib/SparseBitSet.ml[230,5751+10])
                                    Tpat_value
                                    pattern (lib/SparseBitSet.ml[230,5751+4]..lib/SparseBitSet.ml[230,5751+10])
                                      Tpat_tuple
                                      [
                                        pattern (lib/SparseBitSet.ml[230,5751+4]..lib/SparseBitSet.ml[230,5751+7])
                                          Tpat_construct "C"
                                          [
                                            pattern (lib/SparseBitSet.ml[230,5751+6]..lib/SparseBitSet.ml[230,5751+7])
                                              Tpat_any
                                            pattern (lib/SparseBitSet.ml[230,5751+6]..lib/SparseBitSet.ml[230,5751+7])
                                              Tpat_any
                                            pattern (lib/SparseBitSet.ml[230,5751+6]..lib/SparseBitSet.ml[230,5751+7])
                                              Tpat_any
                                          ]
                                          None
                                        pattern (lib/SparseBitSet.ml[230,5751+9]..lib/SparseBitSet.ml[230,5751+10])
                                          Tpat_construct "N"
                                          []
                                          None
                                      ]
                                  pattern (lib/SparseBitSet.ml[230,5751+13]..lib/SparseBitSet.ml[230,5751+19])
                                    Tpat_value
                                    pattern (lib/SparseBitSet.ml[230,5751+13]..lib/SparseBitSet.ml[230,5751+19])
                                      Tpat_tuple
                                      [
                                        pattern (lib/SparseBitSet.ml[230,5751+13]..lib/SparseBitSet.ml[230,5751+14])
                                          Tpat_construct "N"
                                          []
                                          None
                                        pattern (lib/SparseBitSet.ml[230,5751+16]..lib/SparseBitSet.ml[230,5751+19])
                                          Tpat_construct "C"
                                          [
                                            pattern (lib/SparseBitSet.ml[230,5751+18]..lib/SparseBitSet.ml[230,5751+19])
                                              Tpat_any
                                            pattern (lib/SparseBitSet.ml[230,5751+18]..lib/SparseBitSet.ml[230,5751+19])
                                              Tpat_any
                                            pattern (lib/SparseBitSet.ml[230,5751+18]..lib/SparseBitSet.ml[230,5751+19])
                                              Tpat_any
                                          ]
                                          None
                                      ]
                                expression (lib/SparseBitSet.ml[230,5751+23]..lib/SparseBitSet.ml[230,5751+28])
                                  Texp_construct "false"
                                  []
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/SparseBitSet.ml[232,5781+0]..lib/SparseBitSet.ml[243,6049+23])
    Tstr_value Rec
    [
      <def>
        pattern (lib/SparseBitSet.ml[232,5781+8]..lib/SparseBitSet.ml[232,5781+16])
          Tpat_var "disjoint/1314"
        expression (lib/SparseBitSet.ml[232,5781+17]..lib/SparseBitSet.ml[243,6049+23]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/SparseBitSet.ml[232,5781+17]..lib/SparseBitSet.ml[232,5781+19])
                Tpat_var "s1/1315"
              expression (lib/SparseBitSet.ml[232,5781+20]..lib/SparseBitSet.ml[243,6049+23]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/SparseBitSet.ml[232,5781+20]..lib/SparseBitSet.ml[232,5781+22])
                      Tpat_var "s2/1316"
                    expression (lib/SparseBitSet.ml[233,5806+2]..lib/SparseBitSet.ml[243,6049+23])
                      Texp_match
                      expression (lib/SparseBitSet.ml[233,5806+8]..lib/SparseBitSet.ml[233,5806+14])
                        Texp_tuple
                        [
                          expression (lib/SparseBitSet.ml[233,5806+8]..lib/SparseBitSet.ml[233,5806+10])
                            Texp_ident "s1/1315"
                          expression (lib/SparseBitSet.ml[233,5806+12]..lib/SparseBitSet.ml[233,5806+14])
                            Texp_ident "s2/1316"
                        ]
                      [
                        <case>
                          pattern (lib/SparseBitSet.ml[234,5826+4]..lib/SparseBitSet.ml[235,5835+8])
                            Tpat_or
                            pattern (lib/SparseBitSet.ml[234,5826+4]..lib/SparseBitSet.ml[234,5826+8])
                              Tpat_value
                              pattern (lib/SparseBitSet.ml[234,5826+4]..lib/SparseBitSet.ml[234,5826+8])
                                Tpat_tuple
                                [
                                  pattern (lib/SparseBitSet.ml[234,5826+4]..lib/SparseBitSet.ml[234,5826+5])
                                    Tpat_construct "N"
                                    []
                                    None
                                  pattern (lib/SparseBitSet.ml[234,5826+7]..lib/SparseBitSet.ml[234,5826+8])
                                    Tpat_any
                                ]
                            pattern (lib/SparseBitSet.ml[235,5835+4]..lib/SparseBitSet.ml[235,5835+8])
                              Tpat_value
                              pattern (lib/SparseBitSet.ml[235,5835+4]..lib/SparseBitSet.ml[235,5835+8])
                                Tpat_tuple
                                [
                                  pattern (lib/SparseBitSet.ml[235,5835+4]..lib/SparseBitSet.ml[235,5835+5])
                                    Tpat_any
                                  pattern (lib/SparseBitSet.ml[235,5835+7]..lib/SparseBitSet.ml[235,5835+8])
                                    Tpat_construct "N"
                                    []
                                    None
                                ]
                          expression (lib/SparseBitSet.ml[236,5847+6]..lib/SparseBitSet.ml[236,5847+10])
                            Texp_construct "true"
                            []
                        <case>
                          pattern (lib/SparseBitSet.ml[237,5858+4]..lib/SparseBitSet.ml[237,5858+44])
                            Tpat_value
                            pattern (lib/SparseBitSet.ml[237,5858+4]..lib/SparseBitSet.ml[237,5858+44])
                              Tpat_tuple
                              [
                                pattern (lib/SparseBitSet.ml[237,5858+4]..lib/SparseBitSet.ml[237,5858+23])
                                  Tpat_construct "C"
                                  [
                                    pattern (lib/SparseBitSet.ml[237,5858+7]..lib/SparseBitSet.ml[237,5858+12])
                                      Tpat_var "addr1/1317"
                                    pattern (lib/SparseBitSet.ml[237,5858+14]..lib/SparseBitSet.ml[237,5858+17])
                                      Tpat_var "ss1/1318"
                                    pattern (lib/SparseBitSet.ml[237,5858+19]..lib/SparseBitSet.ml[237,5858+22])
                                      Tpat_var "qs1/1319"
                                  ]
                                  None
                                pattern (lib/SparseBitSet.ml[237,5858+25]..lib/SparseBitSet.ml[237,5858+44])
                                  Tpat_construct "C"
                                  [
                                    pattern (lib/SparseBitSet.ml[237,5858+28]..lib/SparseBitSet.ml[237,5858+33])
                                      Tpat_var "addr2/1320"
                                    pattern (lib/SparseBitSet.ml[237,5858+35]..lib/SparseBitSet.ml[237,5858+38])
                                      Tpat_var "ss2/1321"
                                    pattern (lib/SparseBitSet.ml[237,5858+40]..lib/SparseBitSet.ml[237,5858+43])
                                      Tpat_var "qs2/1322"
                                  ]
                                  None
                              ]
                          expression (lib/SparseBitSet.ml[238,5906+6]..lib/SparseBitSet.ml[243,6049+23])
                            Texp_ifthenelse
                            expression (lib/SparseBitSet.ml[238,5906+9]..lib/SparseBitSet.ml[238,5906+22])
                              Texp_apply
                              expression (lib/SparseBitSet.ml[238,5906+15]..lib/SparseBitSet.ml[238,5906+16])
                                Texp_ident "Stdlib!.="
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/SparseBitSet.ml[238,5906+9]..lib/SparseBitSet.ml[238,5906+14])
                                    Texp_ident "addr1/1317"
                                <arg>
                                  Nolabel
                                  expression (lib/SparseBitSet.ml[238,5906+17]..lib/SparseBitSet.ml[238,5906+22])
                                    Texp_ident "addr2/1320"
                              ]
                            expression (lib/SparseBitSet.ml[239,5934+8]..lib/SparseBitSet.ml[239,5934+46])
                              Texp_apply
                              expression (lib/SparseBitSet.ml[239,5934+27]..lib/SparseBitSet.ml[239,5934+29])
                                Texp_ident "Stdlib!.&&"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/SparseBitSet.ml[239,5934+8]..lib/SparseBitSet.ml[239,5934+26])
                                    Texp_apply
                                    expression (lib/SparseBitSet.ml[239,5934+8]..lib/SparseBitSet.ml[239,5934+18])
                                      Texp_ident "A/1132.disjoint"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/SparseBitSet.ml[239,5934+19]..lib/SparseBitSet.ml[239,5934+22])
                                          Texp_ident "ss1/1318"
                                      <arg>
                                        Nolabel
                                        expression (lib/SparseBitSet.ml[239,5934+23]..lib/SparseBitSet.ml[239,5934+26])
                                          Texp_ident "ss2/1321"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (lib/SparseBitSet.ml[239,5934+30]..lib/SparseBitSet.ml[239,5934+46])
                                    Texp_apply
                                    expression (lib/SparseBitSet.ml[239,5934+30]..lib/SparseBitSet.ml[239,5934+38])
                                      Texp_ident "disjoint/1314"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/SparseBitSet.ml[239,5934+39]..lib/SparseBitSet.ml[239,5934+42])
                                          Texp_ident "qs1/1319"
                                      <arg>
                                        Nolabel
                                        expression (lib/SparseBitSet.ml[239,5934+43]..lib/SparseBitSet.ml[239,5934+46])
                                          Texp_ident "qs2/1322"
                                    ]
                              ]
                            Some
                              expression (lib/SparseBitSet.ml[240,5981+11]..lib/SparseBitSet.ml[243,6049+23])
                                Texp_ifthenelse
                                expression (lib/SparseBitSet.ml[240,5981+14]..lib/SparseBitSet.ml[240,5981+27])
                                  Texp_apply
                                  expression (lib/SparseBitSet.ml[240,5981+20]..lib/SparseBitSet.ml[240,5981+21])
                                    Texp_ident "Stdlib!.<"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/SparseBitSet.ml[240,5981+14]..lib/SparseBitSet.ml[240,5981+19])
                                        Texp_ident "addr1/1317"
                                    <arg>
                                      Nolabel
                                      expression (lib/SparseBitSet.ml[240,5981+22]..lib/SparseBitSet.ml[240,5981+27])
                                        Texp_ident "addr2/1320"
                                  ]
                                expression (lib/SparseBitSet.ml[241,6014+8]..lib/SparseBitSet.ml[241,6014+23])
                                  Texp_apply
                                  expression (lib/SparseBitSet.ml[241,6014+8]..lib/SparseBitSet.ml[241,6014+16])
                                    Texp_ident "disjoint/1314"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/SparseBitSet.ml[241,6014+17]..lib/SparseBitSet.ml[241,6014+20])
                                        Texp_ident "qs1/1319"
                                    <arg>
                                      Nolabel
                                      expression (lib/SparseBitSet.ml[241,6014+21]..lib/SparseBitSet.ml[241,6014+23])
                                        Texp_ident "s2/1316"
                                  ]
                                Some
                                  expression (lib/SparseBitSet.ml[243,6049+8]..lib/SparseBitSet.ml[243,6049+23])
                                    Texp_apply
                                    expression (lib/SparseBitSet.ml[243,6049+8]..lib/SparseBitSet.ml[243,6049+16])
                                      Texp_ident "disjoint/1314"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/SparseBitSet.ml[243,6049+17]..lib/SparseBitSet.ml[243,6049+19])
                                          Texp_ident "s1/1315"
                                      <arg>
                                        Nolabel
                                        expression (lib/SparseBitSet.ml[243,6049+20]..lib/SparseBitSet.ml[243,6049+23])
                                          Texp_ident "qs2/1322"
                                    ]
                      ]
                ]
          ]
    ]
  structure_item (lib/SparseBitSet.ml[243,6049+23]..lib/SparseBitSet.ml[243,6049+23]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[243,6049+23]..lib/SparseBitSet.ml[243,6049+23]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/SparseBitSet.ml[243,6049+23]..lib/SparseBitSet.ml[243,6049+23]) ghost
          Texp_apply
          expression (lib/SparseBitSet.ml[243,6049+23]..lib/SparseBitSet.ml[243,6049+23]) ghost
            Texp_ident "Ppx_inline_test_lib!.unset_lib"
          [
            <arg>
              Nolabel
              expression (lib/SparseBitSet.ml[243,6049+23]..lib/SparseBitSet.ml[243,6049+23]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/SparseBitSet.ml[243,6049+23]..lib/SparseBitSet.ml[243,6049+23]) ghost,None)
          ]
    ]
  structure_item (lib/SparseBitSet.ml[243,6049+23]..lib/SparseBitSet.ml[243,6049+23]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[243,6049+23]..lib/SparseBitSet.ml[243,6049+23]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/SparseBitSet.ml[243,6049+23]..lib/SparseBitSet.ml[243,6049+23]) ghost
          Texp_apply
          expression (lib/SparseBitSet.ml[243,6049+23]..lib/SparseBitSet.ml[243,6049+23]) ghost
            Texp_ident "Expect_test_collector!.Current_file.unset"
          [
            <arg>
              Nolabel
              expression (lib/SparseBitSet.ml[243,6049+23]..lib/SparseBitSet.ml[243,6049+23]) ghost
                Texp_construct "()"
                []
          ]
    ]
  structure_item (lib/SparseBitSet.ml[243,6049+23]..lib/SparseBitSet.ml[243,6049+23]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[243,6049+23]..lib/SparseBitSet.ml[243,6049+23]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/SparseBitSet.ml[243,6049+23]..lib/SparseBitSet.ml[243,6049+23]) ghost
          Texp_apply
          expression (lib/SparseBitSet.ml[243,6049+23]..lib/SparseBitSet.ml[243,6049+23]) ghost
            Texp_ident "Ppx_bench_lib!.Benchmark_accumulator.Current_libname.unset"
          [
            <arg>
              Nolabel
              expression (lib/SparseBitSet.ml[243,6049+23]..lib/SparseBitSet.ml[243,6049+23]) ghost
                Texp_construct "()"
                []
          ]
    ]
  structure_item (lib/SparseBitSet.ml[243,6049+23]..lib/SparseBitSet.ml[243,6049+23]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/SparseBitSet.ml[243,6049+23]..lib/SparseBitSet.ml[243,6049+23]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/SparseBitSet.ml[243,6049+23]..lib/SparseBitSet.ml[243,6049+23]) ghost
          Texp_apply
          expression (lib/SparseBitSet.ml[243,6049+23]..lib/SparseBitSet.ml[243,6049+23]) ghost
            Texp_ident "Ppx_module_timer_runtime!.record_until"
          [
            <arg>
              Nolabel
              expression (lib/SparseBitSet.ml[243,6049+23]..lib/SparseBitSet.ml[243,6049+23]) ghost
                Texp_ident "Ppx_module_timer_runtime!.__MODULE__"
          ]
    ]
]

{<Gbnf_parser__SparseBitSet>
 "A"[module] ->
   (CU Gbnf_parser . "AtomicBitSet"[module])<Gbnf_parser__SparseBitSet.0>;
 "add"[value] -> <Gbnf_parser__SparseBitSet.16>;
 "cardinal"[value] -> <Gbnf_parser__SparseBitSet.74>;
 "choose"[value] -> <Gbnf_parser__SparseBitSet.113>;
 "compare"[value] -> <Gbnf_parser__SparseBitSet.117>;
 "disjoint"[value] -> <Gbnf_parser__SparseBitSet.137>;
 "element"[type] -> <Gbnf_parser__SparseBitSet.4>;
 "elements"[value] -> <Gbnf_parser__SparseBitSet.76>;
 "empty"[value] -> <Gbnf_parser__SparseBitSet.5>;
 "equal"[value] -> <Gbnf_parser__SparseBitSet.128>;
 "fold"[value] -> <Gbnf_parser__SparseBitSet.51>;
 "inter"[value] -> <Gbnf_parser__SparseBitSet.102>;
 "is_empty"[value] -> <Gbnf_parser__SparseBitSet.6>;
 "is_singleton"[value] -> <Gbnf_parser__SparseBitSet.65>;
 "iter"[value] -> <Gbnf_parser__SparseBitSet.59>;
 "mem"[value] -> <Gbnf_parser__SparseBitSet.46>;
 "remove"[value] -> <Gbnf_parser__SparseBitSet.34>;
 "singleton"[value] -> <Gbnf_parser__SparseBitSet.21>;
 "subset"[value] -> <Gbnf_parser__SparseBitSet.80>;
 "t"[type] -> <Gbnf_parser__SparseBitSet.1>;
 "union"[value] -> <Gbnf_parser__SparseBitSet.89>;
 }

(setglobal Gbnf_parser__SparseBitSet!
  (let
    (*match*/1658 =
       (after Gbnf_parser__SparseBitSet lib/SparseBitSet.ml(16)<ghost>:1057-1057
         (apply (field_imm 3 (global Ppx_module_timer_runtime!))
           #"Gbnf_parser__SparseBitSet"))
     *match*/1656 =
       (after Gbnf_parser__SparseBitSet lib/SparseBitSet.ml(16)<ghost>:1057-1057
         (apply
           (field_imm 0
             (field_imm 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
           "gbnf_parser"))
     *match*/1654 =
       (after Gbnf_parser__SparseBitSet lib/SparseBitSet.ml(16)<ghost>:1057-1057
         (apply (field_imm 0 (field_imm 5 (global Expect_test_collector!)))
           "lib/SparseBitSet.ml"))
     *match*/1652 =
       (after Gbnf_parser__SparseBitSet lib/SparseBitSet.ml(16)<ghost>:1057-1057
         (apply (field_imm 4 (global Ppx_inline_test_lib!)) "gbnf_parser"
           "SparseBitSet.ml"))
     empty/1174 = 0
     is_empty/1175 =
       (function param/1177 : int
         (funct-body Gbnf_parser__SparseBitSet.is_empty lib/SparseBitSet.ml(32):1305-1356
           (if param/1177
             (let
               (*match*/1627 =a (field_imm 2 param/1177)
                *match*/1626 =a (field_imm 1 param/1177)
                *match*/1625 =a (field_imm 0 param/1177))
               (before Gbnf_parser__SparseBitSet.is_empty lib/SparseBitSet.ml(36):1351-1356
                 0))
             (before Gbnf_parser__SparseBitSet.is_empty lib/SparseBitSet.ml(34):1329-1333
               1)))))
    (letrec
      (add/1178
         (function base/1179[int] offset/1180[int] s/1181
           (funct-body Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(38)<ghost>:1370-1916
             (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(39):1388-1916
               (if s/1181
                 (let
                   (qs/1184 =a (field_imm 2 s/1181)
                    ss/1183 =a (field_imm 1 s/1181)
                    addr/1182 =a (field_imm 0 s/1181))
                   (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(44):1505-1916
                     (if (< base/1179 addr/1182)
                       (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(46):1564-1595
                         (makeblock 0 (int,int,*) base/1179
                           (after Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(46):1573-1591
                             (apply
                               (field_imm 16
                                 (global Gbnf_parser__AtomicBitSet!))
                               offset/1180))
                           s/1181))
                       (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(47):1607-1916
                         (if (== base/1179 addr/1182)
                           (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(49):1691-1775
                             (let
                               (ss'/1185 =[int]
                                  (after Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(49):1701-1716
                                    (apply
                                      (field_imm 17
                                        (global Gbnf_parser__AtomicBitSet!))
                                      offset/1180 ss/1183)))
                               (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(50):1728-1775
                                 (if
                                   (after Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(50):1731-1745
                                     (apply
                                       (field_imm 33
                                         (global Gbnf_parser__AtomicBitSet!))
                                       ss'/1185 ss/1183))
                                   (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(50):1751-1752
                                     s/1181)
                                   (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(50):1758-1775
                                     (makeblock 0 (int,int,*) addr/1182
                                       ss'/1185 qs/1184))))))
                           (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(53):1834-1916
                             (let
                               (qs'/1186 =
                                  (after Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(53):1844-1862
                                    (apply add/1178 base/1179 offset/1180
                                      qs/1184)))
                               (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(54):1874-1916
                                 (if (== qs/1184 qs'/1186)
                                   (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(54):1892-1893
                                     s/1181)
                                   (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(54):1899-1916
                                     (makeblock 0 (int,int,*) addr/1182
                                       ss/1183 qs'/1186)))))))))))
                 (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(42):1443-1474
                   (makeblock 0 (int,int,*) base/1179
                     (after Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(42):1452-1470
                       (apply
                         (field_imm 16 (global Gbnf_parser__AtomicBitSet!))
                         offset/1180))
                     0)))))))
      (let
        (add/1187 =
           (function i/1188[int] s/1189
             (funct-body Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(56)<ghost>:1926-2010
               (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(57):1934-2010
                 (let
                   (offset/1190 =[int]
                      (mod i/1188
                        (field_imm 0 (global Gbnf_parser__AtomicBitSet!))))
                   (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(58):1966-2010
                     (let (base/1191 =[int] (- i/1188 offset/1190))
                       (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(59):1993-2010
                         (after Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(59):1993-2010
                           (apply add/1178 base/1191 offset/1190 s/1189)))))))))
         singleton/1192 =
           (function i/1194[int]
             (funct-body Gbnf_parser__SparseBitSet.singleton lib/SparseBitSet.ml(61)<ghost>:2026-2162
               (before Gbnf_parser__SparseBitSet.singleton lib/SparseBitSet.ml(63):2072-2162
                 (let
                   (offset/1195 =[int]
                      (mod i/1194
                        (field_imm 0 (global Gbnf_parser__AtomicBitSet!))))
                   (before Gbnf_parser__SparseBitSet.singleton lib/SparseBitSet.ml(64):2104-2162
                     (let (base/1196 =[int] (- i/1194 offset/1195))
                       (before Gbnf_parser__SparseBitSet.singleton lib/SparseBitSet.ml(65):2131-2162
                         (makeblock 0 (int,int,*) base/1196
                           (after Gbnf_parser__SparseBitSet.singleton lib/SparseBitSet.ml(65):2140-2158
                             (apply
                               (field_imm 16
                                 (global Gbnf_parser__AtomicBitSet!))
                               offset/1195))
                           0)))))))))
        (letrec
          (remove/1197
             (function base/1198[int] offset/1199[int] s/1200
               (funct-body Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(67)<ghost>:2179-2662
                 (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(68):2197-2662
                   (if s/1200
                     (let
                       (qs/1203 =a (field_imm 2 s/1200)
                        ss/1202 =a (field_imm 1 s/1200)
                        addr/1201 =a (field_imm 0 s/1200))
                       (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(72):2257-2662
                         (if (< base/1198 addr/1201)
                           (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(73):2285-2286
                             s/1200)
                           (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(74):2298-2662
                             (if (== base/1198 addr/1201)
                               (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(76):2382-2518
                                 (let
                                   (ss'/1204 =[int]
                                      (after Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(76):2392-2410
                                        (apply
                                          (field_imm 18
                                            (global Gbnf_parser__AtomicBitSet!))
                                          offset/1199 ss/1202)))
                                   (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(77):2422-2518
                                     (if
                                       (after Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(77):2425-2439
                                         (apply
                                           (field_imm 15
                                             (global Gbnf_parser__AtomicBitSet!))
                                           ss'/1204))
                                       (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(78):2455-2457
                                         qs/1203)
                                       (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(79):2471-2518
                                         (if
                                           (after Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(79):2474-2488
                                             (apply
                                               (field_imm 33
                                                 (global Gbnf_parser__AtomicBitSet!))
                                               ss'/1204 ss/1202))
                                           (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(79):2494-2495
                                             s/1200)
                                           (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(79):2501-2518
                                             (makeblock 0 (int,int,*)
                                               addr/1201 ss'/1204 qs/1203))))))))
                               (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(82):2577-2662
                                 (let
                                   (qs'/1205 =
                                      (after Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(82):2587-2608
                                        (apply remove/1197 base/1198
                                          offset/1199 qs/1203)))
                                   (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(83):2620-2662
                                     (if (== qs/1203 qs'/1205)
                                       (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(83):2638-2639
                                         s/1200)
                                       (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(83):2645-2662
                                         (makeblock 0 (int,int,*) addr/1201
                                           ss/1202 qs'/1205)))))))))))
                     (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(70):2225-2226
                       0))))))
          (let
            (remove/1206 =
               (function i/1207[int] s/1208
                 (funct-body Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(85)<ghost>:2675-2762
                   (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(86):2683-2762
                     (let
                       (offset/1209 =[int]
                          (mod i/1207
                            (field_imm 0 (global Gbnf_parser__AtomicBitSet!))))
                       (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(87):2715-2762
                         (let (base/1210 =[int] (- i/1207 offset/1209))
                           (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(88):2742-2762
                             (after Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(88):2742-2762
                               (apply remove/1197 base/1210 offset/1209
                                 s/1208))))))))))
            (letrec
              (mem/1211
                 (function base/1212[int] offset/1213[int] s/1214 : int
                   (funct-body Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(90)<ghost>:2776-2984
                     (before Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(91):2794-2984
                       (if s/1214
                         (let
                           (qs/1217 =a (field_imm 2 s/1214)
                            ss/1216 =a (field_imm 1 s/1214)
                            addr/1215 =a (field_imm 0 s/1214))
                           (before Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(95):2858-2984
                             (if (< base/1212 addr/1215)
                               (before Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(96):2886-2891
                                 0)
                               (before Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(97):2903-2984
                                 (if (== base/1212 addr/1215)
                                   (before Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(98):2931-2946
                                     (after Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(98):2931-2946
                                       (apply
                                         (field_imm 27
                                           (global Gbnf_parser__AtomicBitSet!))
                                         offset/1213 ss/1216)))
                                   (before Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(100):2966-2984
                                     (after Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(100):2966-2984
                                       (apply mem/1211 base/1212 offset/1213
                                         qs/1217))))))))
                         (before Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(93):2822-2827
                           0))))))
              (let
                (mem/1218 =
                   (function i/1219[int] s/1220 : int
                     (funct-body Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(102)<ghost>:2994-3078
                       (before Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(103):3002-3078
                         (let
                           (offset/1221 =[int]
                              (mod i/1219
                                (field_imm 0
                                  (global Gbnf_parser__AtomicBitSet!))))
                           (before Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(104):3034-3078
                             (let (base/1222 =[int] (- i/1219 offset/1221))
                               (before Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(105):3061-3078
                                 (after Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(105):3061-3078
                                   (apply mem/1211 base/1222 offset/1221
                                     s/1220))))))))))
                (letrec
                  (fold/1223
                     (function f/1224 s/1225 accu/1226
                       (funct-body Gbnf_parser__SparseBitSet.fold lib/SparseBitSet.ml(107)<ghost>:3093-3231
                         (before Gbnf_parser__SparseBitSet.fold lib/SparseBitSet.ml(108):3106-3231
                           (if s/1225
                             (let
                               (qs/1229 =a (field_imm 2 s/1225)
                                ss/1228 =a (field_imm 1 s/1225)
                                addr/1227 =a (field_imm 0 s/1225))
                               (before Gbnf_parser__SparseBitSet.fold lib/SparseBitSet.ml(112):3169-3231
                                 (let
                                   (accu/1230 =
                                      (after Gbnf_parser__SparseBitSet.fold lib/SparseBitSet.ml(112):3180-3207
                                        (apply
                                          (field_imm 19
                                            (global Gbnf_parser__AtomicBitSet!))
                                          addr/1227 f/1224 ss/1228 accu/1226)))
                                   (before Gbnf_parser__SparseBitSet.fold lib/SparseBitSet.ml(113):3217-3231
                                     (after Gbnf_parser__SparseBitSet.fold lib/SparseBitSet.ml(113):3217-3231
                                       (apply fold/1223 f/1224 qs/1229
                                         accu/1230))))))
                             (before Gbnf_parser__SparseBitSet.fold lib/SparseBitSet.ml(110):3134-3138
                               accu/1226))))))
                  (letrec
                    (iter/1231
                       (function f/1232 s/1233 : int
                         (funct-body Gbnf_parser__SparseBitSet.iter lib/SparseBitSet.ml(115)<ghost>:3246-3354
                           (before Gbnf_parser__SparseBitSet.iter lib/SparseBitSet.ml(116):3254-3354
                             (if s/1233
                               (let
                                 (qs/1236 =a (field_imm 2 s/1233)
                                  ss/1235 =a (field_imm 1 s/1233)
                                  addr/1234 =a (field_imm 0 s/1233))
                                 (before Gbnf_parser__SparseBitSet.iter lib/SparseBitSet.ml(120):3315-3354
                                   (seq
                                     (after Gbnf_parser__SparseBitSet.iter lib/SparseBitSet.ml(120):3315-3337
                                       (apply
                                         (field_imm 20
                                           (global Gbnf_parser__AtomicBitSet!))
                                         addr/1234 f/1232 ss/1235))
                                     (before Gbnf_parser__SparseBitSet.iter lib/SparseBitSet.ml(121):3345-3354
                                       (after Gbnf_parser__SparseBitSet.iter lib/SparseBitSet.ml(121):3345-3354
                                         (apply iter/1231 f/1232 qs/1236))))))
                               (before Gbnf_parser__SparseBitSet.iter lib/SparseBitSet.ml(118):3282-3284
                                 0))))))
                    (let
                      (is_singleton/1237 =
                         (function s/1239 : int
                           (funct-body Gbnf_parser__SparseBitSet.is_singleton lib/SparseBitSet.ml(123)<ghost>:3373-3474
                             (before Gbnf_parser__SparseBitSet.is_singleton lib/SparseBitSet.ml(124):3379-3474
                               (catch
                                 (if s/1239
                                   (let
                                     (*match*/1629 =a (field_imm 2 s/1239))
                                     (if *match*/1629
                                       (let
                                         (*match*/1632 =a
                                            (field_imm 2 *match*/1629)
                                          *match*/1631 =a
                                            (field_imm 1 *match*/1629)
                                          *match*/1630 =a
                                            (field_imm 0 *match*/1629))
                                         (exit 1))
                                       (let
                                         (ss/1240 =a (field_imm 1 s/1239)
                                          *match*/1628 =a
                                            (field_imm 0 s/1239))
                                         (before Gbnf_parser__SparseBitSet.is_singleton lib/SparseBitSet.ml(126):3418-3435
                                           (after Gbnf_parser__SparseBitSet.is_singleton lib/SparseBitSet.ml(126):3418-3435
                                             (apply
                                               (field_imm 23
                                                 (global Gbnf_parser__AtomicBitSet!))
                                               ss/1240))))))
                                   (exit 1))
                                with (1)
                                 (before Gbnf_parser__SparseBitSet.is_singleton lib/SparseBitSet.ml(129):3469-3474
                                   0))))))
                      (letrec
                        (cardinal/1241
                           (function accu/1242[int] s/1243 : int
                             (funct-body Gbnf_parser__SparseBitSet.cardinal lib/SparseBitSet.ml(131)<ghost>:3493-3621
                               (before Gbnf_parser__SparseBitSet.cardinal lib/SparseBitSet.ml(132):3504-3621
                                 (if s/1243
                                   (let
                                     (qs/1245 =a (field_imm 2 s/1243)
                                      ss/1244 =a (field_imm 1 s/1243)
                                      *match*/1633 =a (field_imm 0 s/1243))
                                     (before Gbnf_parser__SparseBitSet.cardinal lib/SparseBitSet.ml(134):3544-3601
                                       (let
                                         (accu/1246 =[int]
                                            (+ accu/1242
                                              (after Gbnf_parser__SparseBitSet.cardinal lib/SparseBitSet.ml(134):3562-3575
                                                (apply
                                                  (field_imm 24
                                                    (global Gbnf_parser__AtomicBitSet!))
                                                  ss/1244))))
                                         (before Gbnf_parser__SparseBitSet.cardinal lib/SparseBitSet.ml(135):3585-3601
                                           (after Gbnf_parser__SparseBitSet.cardinal lib/SparseBitSet.ml(135):3585-3601
                                             (apply cardinal/1241 accu/1246
                                               qs/1245))))))
                                   (before Gbnf_parser__SparseBitSet.cardinal lib/SparseBitSet.ml(137):3617-3621
                                     accu/1242))))))
                        (let
                          (cardinal/1247 =
                             (function s/1248 : int
                               (funct-body Gbnf_parser__SparseBitSet.cardinal lib/SparseBitSet.ml(139)<ghost>:3636-3654
                                 (before Gbnf_parser__SparseBitSet.cardinal lib/SparseBitSet.ml(140):3642-3654
                                   (after Gbnf_parser__SparseBitSet.cardinal lib/SparseBitSet.ml(140):3642-3654
                                     (apply cardinal/1241 0 s/1248)))))
                           elements/1249 =
                             (function s/1251
                               (funct-body Gbnf_parser__SparseBitSet.elements lib/SparseBitSet.ml(142)<ghost>:3669-3708
                                 (before Gbnf_parser__SparseBitSet.elements lib/SparseBitSet.ml(143):3675-3708
                                   (after Gbnf_parser__SparseBitSet.elements lib/SparseBitSet.ml(143):3675-3708
                                     (apply fold/1223
                                       (function tl/1252[int] hd/1253
                                         (funct-body Gbnf_parser__SparseBitSet.elements.(fun) lib/SparseBitSet.ml(143):3680-3703
                                           (before Gbnf_parser__SparseBitSet.elements.(fun) lib/SparseBitSet.ml(143):3694-3702
                                             (makeblock 0 (int,*) tl/1252
                                               hd/1253))))
                                       s/1251 0))))))
                          (letrec
                            (subset/1254
                               (function s1/1255 s2/1256 : int
                                 (funct-body Gbnf_parser__SparseBitSet.subset lib/SparseBitSet.ml(145)<ghost>:3725-3998
                                   (before Gbnf_parser__SparseBitSet.subset lib/SparseBitSet.ml(146):3735-3998
                                     (catch
                                       (if s1/1255
                                         (if s2/1256
                                           (let
                                             (qs2/1262 =a
                                                (field_imm 2 s2/1256)
                                              ss2/1261 =a
                                                (field_imm 1 s2/1256)
                                              addr2/1260 =a
                                                (field_imm 0 s2/1256)
                                              qs1/1259 =a
                                                (field_imm 2 s1/1255)
                                              ss1/1258 =a
                                                (field_imm 1 s1/1255)
                                              addr1/1257 =a
                                                (field_imm 0 s1/1255))
                                             (before Gbnf_parser__SparseBitSet.subset lib/SparseBitSet.ml(152):3854-3998
                                               (if (< addr1/1257 addr2/1260)
                                                 (before Gbnf_parser__SparseBitSet.subset lib/SparseBitSet.ml(153):3884-3889
                                                   0)
                                                 (before Gbnf_parser__SparseBitSet.subset lib/SparseBitSet.ml(154):3901-3998
                                                   (if
                                                     (== addr1/1257
                                                       addr2/1260)
                                                     (before Gbnf_parser__SparseBitSet.subset lib/SparseBitSet.ml(155):3931-3965
                                                       (&&
                                                         (after Gbnf_parser__SparseBitSet.subset lib/SparseBitSet.ml(155):3931-3947
                                                           (apply
                                                             (field_imm 26
                                                               (global Gbnf_parser__AtomicBitSet!))
                                                             ss1/1258
                                                             ss2/1261))
                                                         (after Gbnf_parser__SparseBitSet.subset lib/SparseBitSet.ml(155):3951-3965
                                                           (apply subset/1254
                                                             qs1/1259
                                                             qs2/1262))))
                                                     (before Gbnf_parser__SparseBitSet.subset lib/SparseBitSet.ml(157):3985-3998
                                                       (after Gbnf_parser__SparseBitSet.subset lib/SparseBitSet.ml(157):3985-3998
                                                         (apply subset/1254
                                                           s1/1255 qs2/1262))))))))
                                           (exit 2))
                                         (before Gbnf_parser__SparseBitSet.subset lib/SparseBitSet.ml(148):3771-3775
                                           1))
                                      with (2)
                                       (before Gbnf_parser__SparseBitSet.subset lib/SparseBitSet.ml(150):3794-3799
                                         0))))))
                            (letrec
                              (union/1263
                                 (function s1/1264 s2/1265
                                   (funct-body Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(162)<ghost>:4117-4550
                                     (before Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(163):4127-4550
                                       (catch
                                         (catch
                                           (if s1/1264
                                             (if s2/1265
                                               (let
                                                 (qs2/1273 =a
                                                    (field_imm 2 s2/1265)
                                                  ss2/1272 =a
                                                    (field_imm 1 s2/1265)
                                                  addr2/1271 =a
                                                    (field_imm 0 s2/1265)
                                                  qs1/1270 =a
                                                    (field_imm 2 s1/1264)
                                                  ss1/1269 =a
                                                    (field_imm 1 s1/1264)
                                                  addr1/1268 =a
                                                    (field_imm 0 s1/1264))
                                                 (before Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(168):4228-4550
                                                   (if
                                                     (< addr1/1268
                                                       addr2/1271)
                                                     (before Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(169):4258-4286
                                                       (makeblock 0 (int,int,*)
                                                         addr1/1268 ss1/1269
                                                         (after Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(169):4273-4285
                                                           (apply union/1263
                                                             qs1/1270
                                                             s2/1265))))
                                                     (before Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(170):4298-4550
                                                       (if
                                                         (> addr1/1268
                                                           addr2/1271)
                                                         (before Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(171):4328-4402
                                                           (let
                                                             (s/1274 =
                                                                (after Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(171):4336-4348
                                                                  (apply
                                                                    union/1263
                                                                    s1/1264
                                                                    qs2/1273)))
                                                             (before Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(172):4360-4402
                                                               (if
                                                                 (== s/1274
                                                                   qs2/1273)
                                                                 (before Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(172):4377-4379
                                                                   s2/1265)
                                                                 (before Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(172):4385-4402
                                                                   (makeblock 0 (int,int,*)
                                                                    addr2/1271
                                                                    ss2/1272
                                                                    s/1274))))))
                                                         (before Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(174):4422-4550
                                                           (let
                                                             (ss/1275 =[int]
                                                                (after Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(174):4431-4446
                                                                  (apply
                                                                    (field_imm 28
                                                                    (global Gbnf_parser__AtomicBitSet!))
                                                                    ss1/1269
                                                                    ss2/1272)))
                                                             (before Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(175):4458-4550
                                                               (let
                                                                 (s/1276 =
                                                                    (after Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(175):4466-4479
                                                                    (apply
                                                                    union/1263
                                                                    qs1/1270
                                                                    qs2/1273)))
                                                                 (before Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(176):4491-4550
                                                                   (if
                                                                    (&&
                                                                    (after Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(176):4494-4508
                                                                    (apply
                                                                    (field_imm 33
                                                                    (global Gbnf_parser__AtomicBitSet!))
                                                                    ss/1275
                                                                    ss2/1272))
                                                                    (==
                                                                    s/1276
                                                                    qs2/1273))
                                                                    (before Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(176):4526-4528
                                                                    s2/1265)
                                                                    (before Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(176):4534-4550
                                                                    (makeblock 0 (int,int,*)
                                                                    addr1/1268
                                                                    ss/1275
                                                                    s/1276)))))))))))))
                                               (exit 4))
                                             (let (s/1635 =a s2/1265)
                                               (exit 3 s/1635)))
                                          with (4)
                                           (let (s/1634 =a s1/1264)
                                             (exit 3 s/1634)))
                                        with (3 s/1266)
                                         (before Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(166):4172-4173
                                           s/1266))))))
                              (letrec
                                (inter/1277
                                   (function s1/1278 s2/1279
                                     (funct-body Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(181)<ghost>:4668-5080
                                       (before Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(182):4678-5080
                                         (catch
                                           (catch
                                             (if s1/1278
                                               (if s2/1279
                                                 (let
                                                   (qs2/1285 =a
                                                      (field_imm 2 s2/1279)
                                                    ss2/1284 =a
                                                      (field_imm 1 s2/1279)
                                                    addr2/1283 =a
                                                      (field_imm 0 s2/1279)
                                                    qs1/1282 =a
                                                      (field_imm 2 s1/1278)
                                                    ss1/1281 =a
                                                      (field_imm 1 s1/1278)
                                                    addr1/1280 =a
                                                      (field_imm 0 s1/1278))
                                                   (before Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(187):4779-5080
                                                     (if
                                                       (< addr1/1280
                                                         addr2/1283)
                                                       (before Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(188):4809-4821
                                                         (after Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(188):4809-4821
                                                           (apply inter/1277
                                                             qs1/1282
                                                             s2/1279)))
                                                       (before Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(189):4833-5080
                                                         (if
                                                           (> addr1/1280
                                                             addr2/1283)
                                                           (before Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(190):4863-4875
                                                             (after Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(190):4863-4875
                                                               (apply
                                                                 inter/1277
                                                                 s1/1278
                                                                 qs2/1285)))
                                                           (before Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(192):4895-5080
                                                             (let
                                                               (ss/1286 =[int]
                                                                  (after Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(192):4904-4919
                                                                    (apply
                                                                    (field_imm 29
                                                                    (global Gbnf_parser__AtomicBitSet!))
                                                                    ss1/1281
                                                                    ss2/1284)))
                                                               (before Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(193):4931-5080
                                                                 (let
                                                                   (s/1287 =
                                                                    (after Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(193):4939-4952
                                                                    (apply
                                                                    inter/1277
                                                                    qs1/1282
                                                                    qs2/1285)))
                                                                   (before Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(194):4964-5080
                                                                    (if
                                                                    (after Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(194):4967-4980
                                                                    (apply
                                                                    (field_imm 15
                                                                    (global Gbnf_parser__AtomicBitSet!))
                                                                    ss/1286))
                                                                    (before Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(195):4996-4997
                                                                    s/1287)
                                                                    (before Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(197):5021-5080
                                                                    (if
                                                                    (&&
                                                                    (after Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(197):5024-5038
                                                                    (apply
                                                                    (field_imm 33
                                                                    (global Gbnf_parser__AtomicBitSet!))
                                                                    ss/1286
                                                                    ss1/1281))
                                                                    (==
                                                                    s/1287
                                                                    qs1/1282))
                                                                    (before Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(197):5056-5058
                                                                    s1/1278)
                                                                    (before Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(197):5064-5080
                                                                    (makeblock 0 (int,int,*)
                                                                    addr1/1280
                                                                    ss/1286
                                                                    s/1287)))))))))))))))
                                                 (exit 6))
                                               (exit 5))
                                            with (6) (exit 5))
                                          with (5)
                                           (before Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(185):4723-4724
                                             0))))))
                                (let
                                  (choose/1288 =
                                     (function s/1290 : int
                                       (funct-body Gbnf_parser__SparseBitSet.choose lib/SparseBitSet.ml(199)<ghost>:5093-5226
                                         (before Gbnf_parser__SparseBitSet.choose lib/SparseBitSet.ml(200):5099-5226
                                           (if s/1290
                                             (let
                                               (*match*/1636 =a
                                                  (field_imm 2 s/1290)
                                                ss/1292 =a
                                                  (field_imm 1 s/1290)
                                                addr/1291 =a
                                                  (field_imm 0 s/1290))
                                               (before Gbnf_parser__SparseBitSet.choose lib/SparseBitSet.ml(204):5172-5226
                                                 (seq
                                                   (if
                                                     (not
                                                       (after Gbnf_parser__SparseBitSet.choose lib/SparseBitSet.ml(204):5184-5199
                                                         (apply
                                                           (field_imm 15
                                                             (global Gbnf_parser__AtomicBitSet!))
                                                           ss/1292)))
                                                     0
                                                     (raise
                                                       (after Gbnf_parser__SparseBitSet.choose lib/SparseBitSet.ml(204):5172-5200
                                                         (makeblock 0
                                                           (global Assert_failure/28!)
                                                           [0:
                                                            "lib/SparseBitSet.ml"
                                                            204 6]))))
                                                   (before Gbnf_parser__SparseBitSet.choose lib/SparseBitSet.ml(205):5208-5226
                                                     (+ addr/1291
                                                       (after Gbnf_parser__SparseBitSet.choose lib/SparseBitSet.ml(205):5215-5226
                                                         (apply
                                                           (field_imm 31
                                                             (global Gbnf_parser__AtomicBitSet!))
                                                           ss/1292)))))))
                                             (before Gbnf_parser__SparseBitSet.choose lib/SparseBitSet.ml(202):5127-5142
                                               (raise
                                                 (after Gbnf_parser__SparseBitSet.choose lib/SparseBitSet.ml(202):5127-5142
                                                   (field_imm 7
                                                     (global Stdlib!))))))))))
                                  (letrec
                                    (compare/1293
                                       (function x/1294 y/1295 : int
                                         (funct-body Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(207)<ghost>:5244-5582
                                           (before Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(208):5252-5582
                                             (if (== x/1294 y/1295)
                                               (before Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(208):5267-5268
                                                 0)
                                               (before Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(209):5278-5582
                                                 (if x/1294
                                                   (let
                                                     (qs1/1298 =a
                                                        (field_imm 2 x/1294)
                                                      ss1/1297 =a
                                                        (field_imm 1 x/1294)
                                                      a1/1296 =a
                                                        (field_imm 0 x/1294))
                                                     (if y/1295
                                                       (let
                                                         (qs2/1301 =a
                                                            (field_imm 2
                                                              y/1295)
                                                          ss2/1300 =a
                                                            (field_imm 1
                                                              y/1295)
                                                          a2/1299 =a
                                                            (field_imm 0
                                                              y/1295))
                                                         (before Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(211):5344-5529
                                                           (let
                                                             (n/1303 =
                                                                (after Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(211):5356-5377
                                                                  (apply
                                                                    (field_imm 0
                                                                    (global Gbnf_parser__Generic!))
                                                                    a1/1296
                                                                    a2/1299)))
                                                             (catch
                                                               (if
                                                                 (!= n/1303
                                                                   0)
                                                                 (exit 8)
                                                                 (before Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(212):5398-5502
                                                                   (let
                                                                    (n/1304 =
                                                                    (after Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(212):5410-5427
                                                                    (apply
                                                                    (field_imm 32
                                                                    (global Gbnf_parser__AtomicBitSet!))
                                                                    ss1/1297
                                                                    ss2/1300)))
                                                                    (catch
                                                                    (if
                                                                    (!=
                                                                    n/1304 0)
                                                                    (exit 7)
                                                                    (before Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(213):5452-5467
                                                                    (after Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(213):5452-5467
                                                                    (apply
                                                                    compare/1293
                                                                    qs1/1298
                                                                    qs2/1301))))
                                                                    with (7)
                                                                    (before Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(214):5487-5488
                                                                    n/1304)))))
                                                              with (8)
                                                               (before Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(216):5518-5519
                                                                 n/1303)))))
                                                       (before Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(219):5562-5563
                                                         1)))
                                                   (if y/1295
                                                     (let
                                                       (*match*/1639 =a
                                                          (field_imm 2
                                                            y/1295)
                                                        *match*/1638 =a
                                                          (field_imm 1
                                                            y/1295)
                                                        *match*/1637 =a
                                                          (field_imm 0
                                                            y/1295))
                                                       (before Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(220):5580-5582
                                                         -1))
                                                     (before Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(218):5544-5545
                                                       0)))))))))
                                    (letrec
                                      (equal/1305
                                         (function x/1306 y/1307 : int
                                           (funct-body Gbnf_parser__SparseBitSet.equal lib/SparseBitSet.ml(222)<ghost>:5598-5779
                                             (before Gbnf_parser__SparseBitSet.equal lib/SparseBitSet.ml(223):5606-5779
                                               (|| (== x/1306 y/1307)
                                                 (catch
                                                   (if x/1306
                                                     (if y/1307
                                                       (let
                                                         (qs2/1313 =a
                                                            (field_imm 2
                                                              y/1307)
                                                          ss2/1312 =a
                                                            (field_imm 1
                                                              y/1307)
                                                          a2/1311 =a
                                                            (field_imm 0
                                                              y/1307)
                                                          qs1/1310 =a
                                                            (field_imm 2
                                                              x/1306)
                                                          ss1/1309 =a
                                                            (field_imm 1
                                                              x/1306)
                                                          a1/1308 =a
                                                            (field_imm 0
                                                              x/1306))
                                                         (before Gbnf_parser__SparseBitSet.equal lib/SparseBitSet.ml(226):5682-5733
                                                           (&&
                                                             (== a1/1308
                                                               a2/1311)
                                                             (&&
                                                               (after Gbnf_parser__SparseBitSet.equal lib/SparseBitSet.ml(227):5697-5712
                                                                 (apply
                                                                   (field_imm 33
                                                                    (global Gbnf_parser__AtomicBitSet!))
                                                                   ss1/1309
                                                                   ss2/1312))
                                                               (after Gbnf_parser__SparseBitSet.equal lib/SparseBitSet.ml(228):5720-5733
                                                                 (apply
                                                                   equal/1305
                                                                   qs1/1310
                                                                   qs2/1313))))))
                                                       (exit 9))
                                                     (if y/1307
                                                       (let
                                                         (*match*/1642 =a
                                                            (field_imm 2
                                                              y/1307)
                                                          *match*/1641 =a
                                                            (field_imm 1
                                                              y/1307)
                                                          *match*/1640 =a
                                                            (field_imm 0
                                                              y/1307))
                                                         (exit 9))
                                                       (before Gbnf_parser__SparseBitSet.equal lib/SparseBitSet.ml(229):5746-5750
                                                         1)))
                                                  with (9)
                                                   (before Gbnf_parser__SparseBitSet.equal lib/SparseBitSet.ml(230):5774-5779
                                                     0)))))))
                                      (letrec
                                        (disjoint/1314
                                           (function s1/1315 s2/1316 : int
                                             (funct-body Gbnf_parser__SparseBitSet.disjoint lib/SparseBitSet.ml(232)<ghost>:5798-6072
                                               (before Gbnf_parser__SparseBitSet.disjoint lib/SparseBitSet.ml(233):5808-6072
                                                 (catch
                                                   (catch
                                                     (if s1/1315
                                                       (if s2/1316
                                                         (let
                                                           (qs2/1322 =a
                                                              (field_imm 2
                                                                s2/1316)
                                                            ss2/1321 =a
                                                              (field_imm 1
                                                                s2/1316)
                                                            addr2/1320 =a
                                                              (field_imm 0
                                                                s2/1316)
                                                            qs1/1319 =a
                                                              (field_imm 2
                                                                s1/1315)
                                                            ss1/1318 =a
                                                              (field_imm 1
                                                                s1/1315)
                                                            addr1/1317 =a
                                                              (field_imm 0
                                                                s1/1315))
                                                           (before Gbnf_parser__SparseBitSet.disjoint lib/SparseBitSet.ml(238):5912-6072
                                                             (if
                                                               (== addr1/1317
                                                                 addr2/1320)
                                                               (before Gbnf_parser__SparseBitSet.disjoint lib/SparseBitSet.ml(239):5942-5980
                                                                 (&&
                                                                   (after Gbnf_parser__SparseBitSet.disjoint lib/SparseBitSet.ml(239):5942-5960
                                                                    (apply
                                                                    (field_imm 34
                                                                    (global Gbnf_parser__AtomicBitSet!))
                                                                    ss1/1318
                                                                    ss2/1321))
                                                                   (after Gbnf_parser__SparseBitSet.disjoint lib/SparseBitSet.ml(239):5964-5980
                                                                    (apply
                                                                    disjoint/1314
                                                                    qs1/1319
                                                                    qs2/1322))))
                                                               (before Gbnf_parser__SparseBitSet.disjoint lib/SparseBitSet.ml(240):5992-6072
                                                                 (if
                                                                   (<
                                                                    addr1/1317
                                                                    addr2/1320)
                                                                   (before Gbnf_parser__SparseBitSet.disjoint lib/SparseBitSet.ml(241):6022-6037
                                                                    (after Gbnf_parser__SparseBitSet.disjoint lib/SparseBitSet.ml(241):6022-6037
                                                                    (apply
                                                                    disjoint/1314
                                                                    qs1/1319
                                                                    s2/1316)))
                                                                   (before Gbnf_parser__SparseBitSet.disjoint lib/SparseBitSet.ml(243):6057-6072
                                                                    (after Gbnf_parser__SparseBitSet.disjoint lib/SparseBitSet.ml(243):6057-6072
                                                                    (apply
                                                                    disjoint/1314
                                                                    s1/1315
                                                                    qs2/1322))))))))
                                                         (exit 11))
                                                       (exit 10))
                                                    with (11) (exit 10))
                                                  with (10)
                                                   (before Gbnf_parser__SparseBitSet.disjoint lib/SparseBitSet.ml(236):5853-5857
                                                     1))))))
                                        (let
                                          (*match*/1650 =
                                             (after Gbnf_parser__SparseBitSet lib/SparseBitSet.ml(243)<ghost>:6072-6072
                                               (apply
                                                 (field_imm 5
                                                   (global Ppx_inline_test_lib!))
                                                 "gbnf_parser"))
                                           *match*/1648 =
                                             (after Gbnf_parser__SparseBitSet lib/SparseBitSet.ml(243)<ghost>:6072-6072
                                               (apply
                                                 (field_imm 1
                                                   (field_imm 5
                                                     (global Expect_test_collector!)))
                                                 0))
                                           *match*/1646 =
                                             (after Gbnf_parser__SparseBitSet lib/SparseBitSet.ml(243)<ghost>:6072-6072
                                               (apply
                                                 (field_imm 1
                                                   (field_imm 0
                                                     (global Ppx_bench_lib__Benchmark_accumulator!)))
                                                 0))
                                           *match*/1644 =
                                             (after Gbnf_parser__SparseBitSet lib/SparseBitSet.ml(243)<ghost>:6072-6072
                                               (apply
                                                 (field_imm 4
                                                   (global Ppx_module_timer_runtime!))
                                                 #"Gbnf_parser__SparseBitSet")))
                                          (pseudo <unknown location>
                                            (makeblock 0 empty/1174
                                              is_empty/1175 add/1187
                                              singleton/1192 remove/1206
                                              mem/1218 fold/1223 iter/1231
                                              is_singleton/1237 cardinal/1247
                                              elements/1249 subset/1254
                                              union/1263 inter/1277
                                              choose/1288 compare/1293
                                              equal/1305 disjoint/1314)))))))))))))))))))))))
(setglobal Gbnf_parser__SparseBitSet!
  (let
    (*match*/1658 =
       (after Gbnf_parser__SparseBitSet lib/SparseBitSet.ml(16)<ghost>:1057-1057
         (apply (field_imm 3 (global Ppx_module_timer_runtime!))
           #"Gbnf_parser__SparseBitSet"))
     *match*/1656 =
       (after Gbnf_parser__SparseBitSet lib/SparseBitSet.ml(16)<ghost>:1057-1057
         (apply
           (field_imm 0
             (field_imm 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
           "gbnf_parser"))
     *match*/1654 =
       (after Gbnf_parser__SparseBitSet lib/SparseBitSet.ml(16)<ghost>:1057-1057
         (apply (field_imm 0 (field_imm 5 (global Expect_test_collector!)))
           "lib/SparseBitSet.ml"))
     *match*/1652 =
       (after Gbnf_parser__SparseBitSet lib/SparseBitSet.ml(16)<ghost>:1057-1057
         (apply (field_imm 4 (global Ppx_inline_test_lib!)) "gbnf_parser"
           "SparseBitSet.ml"))
     empty/1174 = 0
     is_empty/1175 =
       (function param/1177 : int
         (funct-body Gbnf_parser__SparseBitSet.is_empty lib/SparseBitSet.ml(32):1305-1356
           (if param/1177
             (before Gbnf_parser__SparseBitSet.is_empty lib/SparseBitSet.ml(36):1351-1356
               0)
             (before Gbnf_parser__SparseBitSet.is_empty lib/SparseBitSet.ml(34):1329-1333
               1)))))
    (letrec
      (add/1178
         (function base/1179[int] offset/1180[int] s/1181
           (funct-body Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(38)<ghost>:1370-1916
             (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(39):1388-1916
               (if s/1181
                 (let
                   (qs/1184 =a (field_imm 2 s/1181)
                    ss/1183 =a (field_imm 1 s/1181)
                    addr/1182 =a (field_imm 0 s/1181))
                   (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(44):1505-1916
                     (if (< base/1179 addr/1182)
                       (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(46):1564-1595
                         (makeblock 0 (int,int,*) base/1179
                           (after Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(46):1573-1591
                             (apply
                               (field_imm 16
                                 (global Gbnf_parser__AtomicBitSet!))
                               offset/1180))
                           s/1181))
                       (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(47):1607-1916
                         (if (== base/1179 addr/1182)
                           (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(49):1691-1775
                             (let
                               (ss'/1185 =[int]
                                  (after Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(49):1701-1716
                                    (apply
                                      (field_imm 17
                                        (global Gbnf_parser__AtomicBitSet!))
                                      offset/1180 ss/1183)))
                               (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(50):1728-1775
                                 (if
                                   (after Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(50):1731-1745
                                     (apply
                                       (field_imm 33
                                         (global Gbnf_parser__AtomicBitSet!))
                                       ss'/1185 ss/1183))
                                   (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(50):1751-1752
                                     s/1181)
                                   (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(50):1758-1775
                                     (makeblock 0 (int,int,*) addr/1182
                                       ss'/1185 qs/1184))))))
                           (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(53):1834-1916
                             (let
                               (qs'/1186 =
                                  (after Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(53):1844-1862
                                    (apply add/1178 base/1179 offset/1180
                                      qs/1184)))
                               (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(54):1874-1916
                                 (if (== qs/1184 qs'/1186)
                                   (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(54):1892-1893
                                     s/1181)
                                   (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(54):1899-1916
                                     (makeblock 0 (int,int,*) addr/1182
                                       ss/1183 qs'/1186)))))))))))
                 (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(42):1443-1474
                   (makeblock 0 (int,int,*) base/1179
                     (after Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(42):1452-1470
                       (apply
                         (field_imm 16 (global Gbnf_parser__AtomicBitSet!))
                         offset/1180))
                     0)))))))
      (let
        (add/1187 =
           (function i/1188[int] s/1189
             (funct-body Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(56)<ghost>:1926-2010
               (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(57):1934-2010
                 (let
                   (offset/1190 =[int]
                      (mod i/1188
                        (field_imm 0 (global Gbnf_parser__AtomicBitSet!))))
                   (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(58):1966-2010
                     (let (base/1191 =[int] (- i/1188 offset/1190))
                       (before Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(59):1993-2010
                         (after Gbnf_parser__SparseBitSet.add lib/SparseBitSet.ml(59):1993-2010
                           (apply add/1178 base/1191 offset/1190 s/1189)))))))))
         singleton/1192 =
           (function i/1194[int]
             (funct-body Gbnf_parser__SparseBitSet.singleton lib/SparseBitSet.ml(61)<ghost>:2026-2162
               (before Gbnf_parser__SparseBitSet.singleton lib/SparseBitSet.ml(63):2072-2162
                 (let
                   (offset/1195 =[int]
                      (mod i/1194
                        (field_imm 0 (global Gbnf_parser__AtomicBitSet!))))
                   (before Gbnf_parser__SparseBitSet.singleton lib/SparseBitSet.ml(64):2104-2162
                     (let (base/1196 =[int] (- i/1194 offset/1195))
                       (before Gbnf_parser__SparseBitSet.singleton lib/SparseBitSet.ml(65):2131-2162
                         (makeblock 0 (int,int,*) base/1196
                           (after Gbnf_parser__SparseBitSet.singleton lib/SparseBitSet.ml(65):2140-2158
                             (apply
                               (field_imm 16
                                 (global Gbnf_parser__AtomicBitSet!))
                               offset/1195))
                           0)))))))))
        (letrec
          (remove/1197
             (function base/1198[int] offset/1199[int] s/1200
               (funct-body Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(67)<ghost>:2179-2662
                 (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(68):2197-2662
                   (if s/1200
                     (let
                       (qs/1203 =a (field_imm 2 s/1200)
                        ss/1202 =a (field_imm 1 s/1200)
                        addr/1201 =a (field_imm 0 s/1200))
                       (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(72):2257-2662
                         (if (< base/1198 addr/1201)
                           (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(73):2285-2286
                             s/1200)
                           (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(74):2298-2662
                             (if (== base/1198 addr/1201)
                               (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(76):2382-2518
                                 (let
                                   (ss'/1204 =[int]
                                      (after Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(76):2392-2410
                                        (apply
                                          (field_imm 18
                                            (global Gbnf_parser__AtomicBitSet!))
                                          offset/1199 ss/1202)))
                                   (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(77):2422-2518
                                     (if
                                       (after Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(77):2425-2439
                                         (apply
                                           (field_imm 15
                                             (global Gbnf_parser__AtomicBitSet!))
                                           ss'/1204))
                                       (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(78):2455-2457
                                         qs/1203)
                                       (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(79):2471-2518
                                         (if
                                           (after Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(79):2474-2488
                                             (apply
                                               (field_imm 33
                                                 (global Gbnf_parser__AtomicBitSet!))
                                               ss'/1204 ss/1202))
                                           (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(79):2494-2495
                                             s/1200)
                                           (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(79):2501-2518
                                             (makeblock 0 (int,int,*)
                                               addr/1201 ss'/1204 qs/1203))))))))
                               (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(82):2577-2662
                                 (let
                                   (qs'/1205 =
                                      (after Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(82):2587-2608
                                        (apply remove/1197 base/1198
                                          offset/1199 qs/1203)))
                                   (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(83):2620-2662
                                     (if (== qs/1203 qs'/1205)
                                       (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(83):2638-2639
                                         s/1200)
                                       (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(83):2645-2662
                                         (makeblock 0 (int,int,*) addr/1201
                                           ss/1202 qs'/1205)))))))))))
                     (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(70):2225-2226
                       0))))))
          (let
            (remove/1206 =
               (function i/1207[int] s/1208
                 (funct-body Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(85)<ghost>:2675-2762
                   (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(86):2683-2762
                     (let
                       (offset/1209 =[int]
                          (mod i/1207
                            (field_imm 0 (global Gbnf_parser__AtomicBitSet!))))
                       (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(87):2715-2762
                         (let (base/1210 =[int] (- i/1207 offset/1209))
                           (before Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(88):2742-2762
                             (after Gbnf_parser__SparseBitSet.remove lib/SparseBitSet.ml(88):2742-2762
                               (apply remove/1197 base/1210 offset/1209
                                 s/1208))))))))))
            (letrec
              (mem/1211
                 (function base/1212[int] offset/1213[int] s/1214 : int
                   (funct-body Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(90)<ghost>:2776-2984
                     (before Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(91):2794-2984
                       (if s/1214
                         (let
                           (qs/1217 =a (field_imm 2 s/1214)
                            ss/1216 =a (field_imm 1 s/1214)
                            addr/1215 =a (field_imm 0 s/1214))
                           (before Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(95):2858-2984
                             (if (< base/1212 addr/1215)
                               (before Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(96):2886-2891
                                 0)
                               (before Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(97):2903-2984
                                 (if (== base/1212 addr/1215)
                                   (before Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(98):2931-2946
                                     (after Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(98):2931-2946
                                       (apply
                                         (field_imm 27
                                           (global Gbnf_parser__AtomicBitSet!))
                                         offset/1213 ss/1216)))
                                   (before Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(100):2966-2984
                                     (after Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(100):2966-2984
                                       (apply mem/1211 base/1212 offset/1213
                                         qs/1217))))))))
                         (before Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(93):2822-2827
                           0))))))
              (let
                (mem/1218 =
                   (function i/1219[int] s/1220 : int
                     (funct-body Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(102)<ghost>:2994-3078
                       (before Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(103):3002-3078
                         (let
                           (offset/1221 =[int]
                              (mod i/1219
                                (field_imm 0
                                  (global Gbnf_parser__AtomicBitSet!))))
                           (before Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(104):3034-3078
                             (let (base/1222 =[int] (- i/1219 offset/1221))
                               (before Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(105):3061-3078
                                 (after Gbnf_parser__SparseBitSet.mem lib/SparseBitSet.ml(105):3061-3078
                                   (apply mem/1211 base/1222 offset/1221
                                     s/1220))))))))))
                (letrec
                  (fold/1223
                     (function f/1224 s/1225 accu/1226
                       (funct-body Gbnf_parser__SparseBitSet.fold lib/SparseBitSet.ml(107)<ghost>:3093-3231
                         (before Gbnf_parser__SparseBitSet.fold lib/SparseBitSet.ml(108):3106-3231
                           (if s/1225
                             (let
                               (qs/1229 =a (field_imm 2 s/1225)
                                ss/1228 =a (field_imm 1 s/1225)
                                addr/1227 =a (field_imm 0 s/1225))
                               (before Gbnf_parser__SparseBitSet.fold lib/SparseBitSet.ml(112):3169-3231
                                 (let
                                   (accu/1230 =
                                      (after Gbnf_parser__SparseBitSet.fold lib/SparseBitSet.ml(112):3180-3207
                                        (apply
                                          (field_imm 19
                                            (global Gbnf_parser__AtomicBitSet!))
                                          addr/1227 f/1224 ss/1228 accu/1226)))
                                   (before Gbnf_parser__SparseBitSet.fold lib/SparseBitSet.ml(113):3217-3231
                                     (after Gbnf_parser__SparseBitSet.fold lib/SparseBitSet.ml(113):3217-3231
                                       (apply fold/1223 f/1224 qs/1229
                                         accu/1230))))))
                             (before Gbnf_parser__SparseBitSet.fold lib/SparseBitSet.ml(110):3134-3138
                               accu/1226))))))
                  (letrec
                    (iter/1231
                       (function f/1232 s/1233 : int
                         (funct-body Gbnf_parser__SparseBitSet.iter lib/SparseBitSet.ml(115)<ghost>:3246-3354
                           (before Gbnf_parser__SparseBitSet.iter lib/SparseBitSet.ml(116):3254-3354
                             (if s/1233
                               (let
                                 (qs/1236 =a (field_imm 2 s/1233)
                                  ss/1235 =a (field_imm 1 s/1233)
                                  addr/1234 =a (field_imm 0 s/1233))
                                 (before Gbnf_parser__SparseBitSet.iter lib/SparseBitSet.ml(120):3315-3354
                                   (seq
                                     (after Gbnf_parser__SparseBitSet.iter lib/SparseBitSet.ml(120):3315-3337
                                       (apply
                                         (field_imm 20
                                           (global Gbnf_parser__AtomicBitSet!))
                                         addr/1234 f/1232 ss/1235))
                                     (before Gbnf_parser__SparseBitSet.iter lib/SparseBitSet.ml(121):3345-3354
                                       (after Gbnf_parser__SparseBitSet.iter lib/SparseBitSet.ml(121):3345-3354
                                         (apply iter/1231 f/1232 qs/1236))))))
                               (before Gbnf_parser__SparseBitSet.iter lib/SparseBitSet.ml(118):3282-3284
                                 0))))))
                    (let
                      (is_singleton/1237 =
                         (function s/1239 : int
                           (funct-body Gbnf_parser__SparseBitSet.is_singleton lib/SparseBitSet.ml(123)<ghost>:3373-3474
                             (before Gbnf_parser__SparseBitSet.is_singleton lib/SparseBitSet.ml(124):3379-3474
                               (catch
                                 (if s/1239
                                   (let
                                     (*match*/1629 =a (field_imm 2 s/1239))
                                     (if *match*/1629 (exit 1)
                                       (let (ss/1240 =a (field_imm 1 s/1239))
                                         (before Gbnf_parser__SparseBitSet.is_singleton lib/SparseBitSet.ml(126):3418-3435
                                           (after Gbnf_parser__SparseBitSet.is_singleton lib/SparseBitSet.ml(126):3418-3435
                                             (apply
                                               (field_imm 23
                                                 (global Gbnf_parser__AtomicBitSet!))
                                               ss/1240))))))
                                   (exit 1))
                                with (1)
                                 (before Gbnf_parser__SparseBitSet.is_singleton lib/SparseBitSet.ml(129):3469-3474
                                   0))))))
                      (letrec
                        (cardinal/1241
                           (function accu/1242[int] s/1243 : int
                             (funct-body Gbnf_parser__SparseBitSet.cardinal lib/SparseBitSet.ml(131)<ghost>:3493-3621
                               (before Gbnf_parser__SparseBitSet.cardinal lib/SparseBitSet.ml(132):3504-3621
                                 (if s/1243
                                   (let
                                     (qs/1245 =a (field_imm 2 s/1243)
                                      ss/1244 =a (field_imm 1 s/1243))
                                     (before Gbnf_parser__SparseBitSet.cardinal lib/SparseBitSet.ml(134):3544-3601
                                       (let
                                         (accu/1246 =[int]
                                            (+ accu/1242
                                              (after Gbnf_parser__SparseBitSet.cardinal lib/SparseBitSet.ml(134):3562-3575
                                                (apply
                                                  (field_imm 24
                                                    (global Gbnf_parser__AtomicBitSet!))
                                                  ss/1244))))
                                         (before Gbnf_parser__SparseBitSet.cardinal lib/SparseBitSet.ml(135):3585-3601
                                           (after Gbnf_parser__SparseBitSet.cardinal lib/SparseBitSet.ml(135):3585-3601
                                             (apply cardinal/1241 accu/1246
                                               qs/1245))))))
                                   (before Gbnf_parser__SparseBitSet.cardinal lib/SparseBitSet.ml(137):3617-3621
                                     accu/1242))))))
                        (let
                          (cardinal/1247 =
                             (function s/1248 : int
                               (funct-body Gbnf_parser__SparseBitSet.cardinal lib/SparseBitSet.ml(139)<ghost>:3636-3654
                                 (before Gbnf_parser__SparseBitSet.cardinal lib/SparseBitSet.ml(140):3642-3654
                                   (after Gbnf_parser__SparseBitSet.cardinal lib/SparseBitSet.ml(140):3642-3654
                                     (apply cardinal/1241 0 s/1248)))))
                           elements/1249 =
                             (function s/1251
                               (funct-body Gbnf_parser__SparseBitSet.elements lib/SparseBitSet.ml(142)<ghost>:3669-3708
                                 (before Gbnf_parser__SparseBitSet.elements lib/SparseBitSet.ml(143):3675-3708
                                   (after Gbnf_parser__SparseBitSet.elements lib/SparseBitSet.ml(143):3675-3708
                                     (apply fold/1223
                                       (function tl/1252[int] hd/1253
                                         (funct-body Gbnf_parser__SparseBitSet.elements.(fun) lib/SparseBitSet.ml(143):3680-3703
                                           (before Gbnf_parser__SparseBitSet.elements.(fun) lib/SparseBitSet.ml(143):3694-3702
                                             (makeblock 0 (int,*) tl/1252
                                               hd/1253))))
                                       s/1251 0))))))
                          (letrec
                            (subset/1254
                               (function s1/1255 s2/1256 : int
                                 (funct-body Gbnf_parser__SparseBitSet.subset lib/SparseBitSet.ml(145)<ghost>:3725-3998
                                   (before Gbnf_parser__SparseBitSet.subset lib/SparseBitSet.ml(146):3735-3998
                                     (if s1/1255
                                       (if s2/1256
                                         (let
                                           (qs2/1262 =a (field_imm 2 s2/1256)
                                            ss2/1261 =a (field_imm 1 s2/1256)
                                            addr2/1260 =a
                                              (field_imm 0 s2/1256)
                                            qs1/1259 =a (field_imm 2 s1/1255)
                                            ss1/1258 =a (field_imm 1 s1/1255)
                                            addr1/1257 =a
                                              (field_imm 0 s1/1255))
                                           (before Gbnf_parser__SparseBitSet.subset lib/SparseBitSet.ml(152):3854-3998
                                             (if (< addr1/1257 addr2/1260)
                                               (before Gbnf_parser__SparseBitSet.subset lib/SparseBitSet.ml(153):3884-3889
                                                 0)
                                               (before Gbnf_parser__SparseBitSet.subset lib/SparseBitSet.ml(154):3901-3998
                                                 (if
                                                   (== addr1/1257 addr2/1260)
                                                   (before Gbnf_parser__SparseBitSet.subset lib/SparseBitSet.ml(155):3931-3965
                                                     (&&
                                                       (after Gbnf_parser__SparseBitSet.subset lib/SparseBitSet.ml(155):3931-3947
                                                         (apply
                                                           (field_imm 26
                                                             (global Gbnf_parser__AtomicBitSet!))
                                                           ss1/1258 ss2/1261))
                                                       (after Gbnf_parser__SparseBitSet.subset lib/SparseBitSet.ml(155):3951-3965
                                                         (apply subset/1254
                                                           qs1/1259 qs2/1262))))
                                                   (before Gbnf_parser__SparseBitSet.subset lib/SparseBitSet.ml(157):3985-3998
                                                     (after Gbnf_parser__SparseBitSet.subset lib/SparseBitSet.ml(157):3985-3998
                                                       (apply subset/1254
                                                         s1/1255 qs2/1262))))))))
                                         (before Gbnf_parser__SparseBitSet.subset lib/SparseBitSet.ml(150):3794-3799
                                           0))
                                       (before Gbnf_parser__SparseBitSet.subset lib/SparseBitSet.ml(148):3771-3775
                                         1))))))
                            (letrec
                              (union/1263
                                 (function s1/1264 s2/1265
                                   (funct-body Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(162)<ghost>:4117-4550
                                     (before Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(163):4127-4550
                                       (catch
                                         (if s1/1264
                                           (if s2/1265
                                             (let
                                               (qs2/1273 =a
                                                  (field_imm 2 s2/1265)
                                                ss2/1272 =a
                                                  (field_imm 1 s2/1265)
                                                addr2/1271 =a
                                                  (field_imm 0 s2/1265)
                                                qs1/1270 =a
                                                  (field_imm 2 s1/1264)
                                                ss1/1269 =a
                                                  (field_imm 1 s1/1264)
                                                addr1/1268 =a
                                                  (field_imm 0 s1/1264))
                                               (before Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(168):4228-4550
                                                 (if
                                                   (< addr1/1268 addr2/1271)
                                                   (before Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(169):4258-4286
                                                     (makeblock 0 (int,int,*)
                                                       addr1/1268 ss1/1269
                                                       (after Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(169):4273-4285
                                                         (apply union/1263
                                                           qs1/1270 s2/1265))))
                                                   (before Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(170):4298-4550
                                                     (if
                                                       (> addr1/1268
                                                         addr2/1271)
                                                       (before Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(171):4328-4402
                                                         (let
                                                           (s/1274 =
                                                              (after Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(171):4336-4348
                                                                (apply
                                                                  union/1263
                                                                  s1/1264
                                                                  qs2/1273)))
                                                           (before Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(172):4360-4402
                                                             (if
                                                               (== s/1274
                                                                 qs2/1273)
                                                               (before Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(172):4377-4379
                                                                 s2/1265)
                                                               (before Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(172):4385-4402
                                                                 (makeblock 0 (int,int,*)
                                                                   addr2/1271
                                                                   ss2/1272
                                                                   s/1274))))))
                                                       (before Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(174):4422-4550
                                                         (let
                                                           (ss/1275 =[int]
                                                              (after Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(174):4431-4446
                                                                (apply
                                                                  (field_imm 28
                                                                    (global Gbnf_parser__AtomicBitSet!))
                                                                  ss1/1269
                                                                  ss2/1272)))
                                                           (before Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(175):4458-4550
                                                             (let
                                                               (s/1276 =
                                                                  (after Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(175):4466-4479
                                                                    (apply
                                                                    union/1263
                                                                    qs1/1270
                                                                    qs2/1273)))
                                                               (before Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(176):4491-4550
                                                                 (if
                                                                   (&&
                                                                    (after Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(176):4494-4508
                                                                    (apply
                                                                    (field_imm 33
                                                                    (global Gbnf_parser__AtomicBitSet!))
                                                                    ss/1275
                                                                    ss2/1272))
                                                                    (==
                                                                    s/1276
                                                                    qs2/1273))
                                                                   (before Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(176):4526-4528
                                                                    s2/1265)
                                                                   (before Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(176):4534-4550
                                                                    (makeblock 0 (int,int,*)
                                                                    addr1/1268
                                                                    ss/1275
                                                                    s/1276)))))))))))))
                                             (let (s/1634 =a s1/1264)
                                               (exit 3 s/1634)))
                                           (let (s/1635 =a s2/1265)
                                             (exit 3 s/1635)))
                                        with (3 s/1266)
                                         (before Gbnf_parser__SparseBitSet.union lib/SparseBitSet.ml(166):4172-4173
                                           s/1266))))))
                              (letrec
                                (inter/1277
                                   (function s1/1278 s2/1279
                                     (funct-body Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(181)<ghost>:4668-5080
                                       (before Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(182):4678-5080
                                         (catch
                                           (if s1/1278
                                             (if s2/1279
                                               (let
                                                 (qs2/1285 =a
                                                    (field_imm 2 s2/1279)
                                                  ss2/1284 =a
                                                    (field_imm 1 s2/1279)
                                                  addr2/1283 =a
                                                    (field_imm 0 s2/1279)
                                                  qs1/1282 =a
                                                    (field_imm 2 s1/1278)
                                                  ss1/1281 =a
                                                    (field_imm 1 s1/1278)
                                                  addr1/1280 =a
                                                    (field_imm 0 s1/1278))
                                                 (before Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(187):4779-5080
                                                   (if
                                                     (< addr1/1280
                                                       addr2/1283)
                                                     (before Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(188):4809-4821
                                                       (after Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(188):4809-4821
                                                         (apply inter/1277
                                                           qs1/1282 s2/1279)))
                                                     (before Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(189):4833-5080
                                                       (if
                                                         (> addr1/1280
                                                           addr2/1283)
                                                         (before Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(190):4863-4875
                                                           (after Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(190):4863-4875
                                                             (apply
                                                               inter/1277
                                                               s1/1278
                                                               qs2/1285)))
                                                         (before Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(192):4895-5080
                                                           (let
                                                             (ss/1286 =[int]
                                                                (after Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(192):4904-4919
                                                                  (apply
                                                                    (field_imm 29
                                                                    (global Gbnf_parser__AtomicBitSet!))
                                                                    ss1/1281
                                                                    ss2/1284)))
                                                             (before Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(193):4931-5080
                                                               (let
                                                                 (s/1287 =
                                                                    (after Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(193):4939-4952
                                                                    (apply
                                                                    inter/1277
                                                                    qs1/1282
                                                                    qs2/1285)))
                                                                 (before Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(194):4964-5080
                                                                   (if
                                                                    (after Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(194):4967-4980
                                                                    (apply
                                                                    (field_imm 15
                                                                    (global Gbnf_parser__AtomicBitSet!))
                                                                    ss/1286))
                                                                    (before Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(195):4996-4997
                                                                    s/1287)
                                                                    (before Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(197):5021-5080
                                                                    (if
                                                                    (&&
                                                                    (after Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(197):5024-5038
                                                                    (apply
                                                                    (field_imm 33
                                                                    (global Gbnf_parser__AtomicBitSet!))
                                                                    ss/1286
                                                                    ss1/1281))
                                                                    (==
                                                                    s/1287
                                                                    qs1/1282))
                                                                    (before Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(197):5056-5058
                                                                    s1/1278)
                                                                    (before Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(197):5064-5080
                                                                    (makeblock 0 (int,int,*)
                                                                    addr1/1280
                                                                    ss/1286
                                                                    s/1287)))))))))))))))
                                               (exit 5))
                                             (exit 5))
                                          with (5)
                                           (before Gbnf_parser__SparseBitSet.inter lib/SparseBitSet.ml(185):4723-4724
                                             0))))))
                                (let
                                  (choose/1288 =
                                     (function s/1290 : int
                                       (funct-body Gbnf_parser__SparseBitSet.choose lib/SparseBitSet.ml(199)<ghost>:5093-5226
                                         (before Gbnf_parser__SparseBitSet.choose lib/SparseBitSet.ml(200):5099-5226
                                           (if s/1290
                                             (let
                                               (ss/1292 =a
                                                  (field_imm 1 s/1290)
                                                addr/1291 =a
                                                  (field_imm 0 s/1290))
                                               (before Gbnf_parser__SparseBitSet.choose lib/SparseBitSet.ml(204):5172-5226
                                                 (seq
                                                   (if
                                                     (not
                                                       (after Gbnf_parser__SparseBitSet.choose lib/SparseBitSet.ml(204):5184-5199
                                                         (apply
                                                           (field_imm 15
                                                             (global Gbnf_parser__AtomicBitSet!))
                                                           ss/1292)))
                                                     0
                                                     (raise
                                                       (after Gbnf_parser__SparseBitSet.choose lib/SparseBitSet.ml(204):5172-5200
                                                         (makeblock 0
                                                           (global Assert_failure/28!)
                                                           [0:
                                                            "lib/SparseBitSet.ml"
                                                            204 6]))))
                                                   (before Gbnf_parser__SparseBitSet.choose lib/SparseBitSet.ml(205):5208-5226
                                                     (+ addr/1291
                                                       (after Gbnf_parser__SparseBitSet.choose lib/SparseBitSet.ml(205):5215-5226
                                                         (apply
                                                           (field_imm 31
                                                             (global Gbnf_parser__AtomicBitSet!))
                                                           ss/1292)))))))
                                             (before Gbnf_parser__SparseBitSet.choose lib/SparseBitSet.ml(202):5127-5142
                                               (raise
                                                 (after Gbnf_parser__SparseBitSet.choose lib/SparseBitSet.ml(202):5127-5142
                                                   (field_imm 7
                                                     (global Stdlib!))))))))))
                                  (letrec
                                    (compare/1293
                                       (function x/1294 y/1295 : int
                                         (funct-body Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(207)<ghost>:5244-5582
                                           (before Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(208):5252-5582
                                             (if (== x/1294 y/1295)
                                               (before Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(208):5267-5268
                                                 0)
                                               (before Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(209):5278-5582
                                                 (if x/1294
                                                   (let
                                                     (qs1/1298 =a
                                                        (field_imm 2 x/1294)
                                                      ss1/1297 =a
                                                        (field_imm 1 x/1294)
                                                      a1/1296 =a
                                                        (field_imm 0 x/1294))
                                                     (if y/1295
                                                       (let
                                                         (qs2/1301 =a
                                                            (field_imm 2
                                                              y/1295)
                                                          ss2/1300 =a
                                                            (field_imm 1
                                                              y/1295)
                                                          a2/1299 =a
                                                            (field_imm 0
                                                              y/1295))
                                                         (before Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(211):5344-5529
                                                           (let
                                                             (n/1303 =
                                                                (after Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(211):5356-5377
                                                                  (apply
                                                                    (field_imm 0
                                                                    (global Gbnf_parser__Generic!))
                                                                    a1/1296
                                                                    a2/1299)))
                                                             (if
                                                               (!= n/1303 0)
                                                               (before Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(216):5518-5519
                                                                 n/1303)
                                                               (before Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(212):5398-5502
                                                                 (let
                                                                   (n/1304 =
                                                                    (after Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(212):5410-5427
                                                                    (apply
                                                                    (field_imm 32
                                                                    (global Gbnf_parser__AtomicBitSet!))
                                                                    ss1/1297
                                                                    ss2/1300)))
                                                                   (if
                                                                    (!=
                                                                    n/1304 0)
                                                                    (before Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(214):5487-5488
                                                                    n/1304)
                                                                    (before Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(213):5452-5467
                                                                    (after Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(213):5452-5467
                                                                    (apply
                                                                    compare/1293
                                                                    qs1/1298
                                                                    qs2/1301))))))))))
                                                       (before Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(219):5562-5563
                                                         1)))
                                                   (if y/1295
                                                     (before Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(220):5580-5582
                                                       -1)
                                                     (before Gbnf_parser__SparseBitSet.compare lib/SparseBitSet.ml(218):5544-5545
                                                       0)))))))))
                                    (letrec
                                      (equal/1305
                                         (function x/1306 y/1307 : int
                                           (funct-body Gbnf_parser__SparseBitSet.equal lib/SparseBitSet.ml(222)<ghost>:5598-5779
                                             (before Gbnf_parser__SparseBitSet.equal lib/SparseBitSet.ml(223):5606-5779
                                               (|| (== x/1306 y/1307)
                                                 (catch
                                                   (if x/1306
                                                     (if y/1307
                                                       (let
                                                         (qs2/1313 =a
                                                            (field_imm 2
                                                              y/1307)
                                                          ss2/1312 =a
                                                            (field_imm 1
                                                              y/1307)
                                                          a2/1311 =a
                                                            (field_imm 0
                                                              y/1307)
                                                          qs1/1310 =a
                                                            (field_imm 2
                                                              x/1306)
                                                          ss1/1309 =a
                                                            (field_imm 1
                                                              x/1306)
                                                          a1/1308 =a
                                                            (field_imm 0
                                                              x/1306))
                                                         (before Gbnf_parser__SparseBitSet.equal lib/SparseBitSet.ml(226):5682-5733
                                                           (&&
                                                             (== a1/1308
                                                               a2/1311)
                                                             (&&
                                                               (after Gbnf_parser__SparseBitSet.equal lib/SparseBitSet.ml(227):5697-5712
                                                                 (apply
                                                                   (field_imm 33
                                                                    (global Gbnf_parser__AtomicBitSet!))
                                                                   ss1/1309
                                                                   ss2/1312))
                                                               (after Gbnf_parser__SparseBitSet.equal lib/SparseBitSet.ml(228):5720-5733
                                                                 (apply
                                                                   equal/1305
                                                                   qs1/1310
                                                                   qs2/1313))))))
                                                       (exit 9))
                                                     (if y/1307 (exit 9)
                                                       (before Gbnf_parser__SparseBitSet.equal lib/SparseBitSet.ml(229):5746-5750
                                                         1)))
                                                  with (9)
                                                   (before Gbnf_parser__SparseBitSet.equal lib/SparseBitSet.ml(230):5774-5779
                                                     0)))))))
                                      (letrec
                                        (disjoint/1314
                                           (function s1/1315 s2/1316 : int
                                             (funct-body Gbnf_parser__SparseBitSet.disjoint lib/SparseBitSet.ml(232)<ghost>:5798-6072
                                               (before Gbnf_parser__SparseBitSet.disjoint lib/SparseBitSet.ml(233):5808-6072
                                                 (catch
                                                   (if s1/1315
                                                     (if s2/1316
                                                       (let
                                                         (qs2/1322 =a
                                                            (field_imm 2
                                                              s2/1316)
                                                          ss2/1321 =a
                                                            (field_imm 1
                                                              s2/1316)
                                                          addr2/1320 =a
                                                            (field_imm 0
                                                              s2/1316)
                                                          qs1/1319 =a
                                                            (field_imm 2
                                                              s1/1315)
                                                          ss1/1318 =a
                                                            (field_imm 1
                                                              s1/1315)
                                                          addr1/1317 =a
                                                            (field_imm 0
                                                              s1/1315))
                                                         (before Gbnf_parser__SparseBitSet.disjoint lib/SparseBitSet.ml(238):5912-6072
                                                           (if
                                                             (== addr1/1317
                                                               addr2/1320)
                                                             (before Gbnf_parser__SparseBitSet.disjoint lib/SparseBitSet.ml(239):5942-5980
                                                               (&&
                                                                 (after Gbnf_parser__SparseBitSet.disjoint lib/SparseBitSet.ml(239):5942-5960
                                                                   (apply
                                                                    (field_imm 34
                                                                    (global Gbnf_parser__AtomicBitSet!))
                                                                    ss1/1318
                                                                    ss2/1321))
                                                                 (after Gbnf_parser__SparseBitSet.disjoint lib/SparseBitSet.ml(239):5964-5980
                                                                   (apply
                                                                    disjoint/1314
                                                                    qs1/1319
                                                                    qs2/1322))))
                                                             (before Gbnf_parser__SparseBitSet.disjoint lib/SparseBitSet.ml(240):5992-6072
                                                               (if
                                                                 (<
                                                                   addr1/1317
                                                                   addr2/1320)
                                                                 (before Gbnf_parser__SparseBitSet.disjoint lib/SparseBitSet.ml(241):6022-6037
                                                                   (after Gbnf_parser__SparseBitSet.disjoint lib/SparseBitSet.ml(241):6022-6037
                                                                    (apply
                                                                    disjoint/1314
                                                                    qs1/1319
                                                                    s2/1316)))
                                                                 (before Gbnf_parser__SparseBitSet.disjoint lib/SparseBitSet.ml(243):6057-6072
                                                                   (after Gbnf_parser__SparseBitSet.disjoint lib/SparseBitSet.ml(243):6057-6072
                                                                    (apply
                                                                    disjoint/1314
                                                                    s1/1315
                                                                    qs2/1322))))))))
                                                       (exit 10))
                                                     (exit 10))
                                                  with (10)
                                                   (before Gbnf_parser__SparseBitSet.disjoint lib/SparseBitSet.ml(236):5853-5857
                                                     1))))))
                                        (let
                                          (*match*/1650 =
                                             (after Gbnf_parser__SparseBitSet lib/SparseBitSet.ml(243)<ghost>:6072-6072
                                               (apply
                                                 (field_imm 5
                                                   (global Ppx_inline_test_lib!))
                                                 "gbnf_parser"))
                                           *match*/1648 =
                                             (after Gbnf_parser__SparseBitSet lib/SparseBitSet.ml(243)<ghost>:6072-6072
                                               (apply
                                                 (field_imm 1
                                                   (field_imm 5
                                                     (global Expect_test_collector!)))
                                                 0))
                                           *match*/1646 =
                                             (after Gbnf_parser__SparseBitSet lib/SparseBitSet.ml(243)<ghost>:6072-6072
                                               (apply
                                                 (field_imm 1
                                                   (field_imm 0
                                                     (global Ppx_bench_lib__Benchmark_accumulator!)))
                                                 0))
                                           *match*/1644 =
                                             (after Gbnf_parser__SparseBitSet lib/SparseBitSet.ml(243)<ghost>:6072-6072
                                               (apply
                                                 (field_imm 4
                                                   (global Ppx_module_timer_runtime!))
                                                 #"Gbnf_parser__SparseBitSet")))
                                          (pseudo <unknown location>
                                            (makeblock 0 empty/1174
                                              is_empty/1175 add/1187
                                              singleton/1192 remove/1206
                                              mem/1218 fold/1223 iter/1231
                                              is_singleton/1237 cardinal/1247
                                              elements/1249 subset/1254
                                              union/1263 inter/1277
                                              choose/1288 compare/1293
                                              equal/1305 disjoint/1314)))))))))))))))))))))))
