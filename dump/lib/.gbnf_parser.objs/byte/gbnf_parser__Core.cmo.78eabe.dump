[
  structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
    Pstr_attribute "ocaml.ppx.context"
    [
      structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
        Pstr_eval
        expression (_none_[0,0+-1]..[0,0+-1]) ghost
          Pexp_record
          [
            "tool_name" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_constant PConst_string("ppx_driver",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
            "include_dirs" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "load_path" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "open_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "for_package" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "None" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "debug" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_threads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_vmthreads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "recursive_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "principal" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "transparent_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unboxed_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unsafe_string" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "cookies" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                Some
                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                    Pexp_tuple
                    [
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_tuple
                        [
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_constant PConst_string("inline_tests",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                          expression (<command-line>[1,0+0]..[1,0+9])
                            Pexp_constant PConst_string("enabled",(<command-line>[1,0+1]..[1,0+8]),None)
                        ]
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                        Some
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_tuple
                            [
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_tuple
                                [
                                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                    Pexp_constant PConst_string("library-name",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                                  expression (<command-line>[1,0+0]..[1,0+13])
                                    Pexp_constant PConst_string("gbnf_parser",(<command-line>[1,0+1]..[1,0+12]),None)
                                ]
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                                None
                            ]
                    ]
          ]
          None
    ]
  structure_item (lib/Core.ml[13,893+0]..[13,893+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/Core.ml[13,893+0]..[13,893+0]) ghost
          Ppat_construct "()" (lib/Core.ml[13,893+0]..[13,893+0]) ghost
          None
        expression (lib/Core.ml[13,893+0]..[13,893+0]) ghost
          Pexp_apply
          expression (lib/Core.ml[13,893+0]..[13,893+0]) ghost
            Pexp_ident "Ppx_module_timer_runtime.record_start" (lib/Core.ml[13,893+0]..[13,893+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/Core.ml[13,893+0]..[13,893+0]) ghost
                Pexp_ident "Ppx_module_timer_runtime.__MODULE__" (lib/Core.ml[13,893+0]..[13,893+0]) ghost
          ]
    ]
  structure_item (lib/Core.ml[13,893+0]..[13,893+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/Core.ml[13,893+0]..[13,893+0]) ghost
          Ppat_construct "()" (lib/Core.ml[13,893+0]..[13,893+0]) ghost
          None
        expression (lib/Core.ml[13,893+0]..[13,893+0]) ghost
          Pexp_apply
          expression (lib/Core.ml[13,893+0]..[13,893+0]) ghost
            Pexp_ident "Ppx_bench_lib.Benchmark_accumulator.Current_libname.set" (lib/Core.ml[13,893+0]..[13,893+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/Core.ml[13,893+0]..[13,893+0]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/Core.ml[13,893+0]..[13,893+0]) ghost,None)
          ]
    ]
  structure_item (lib/Core.ml[13,893+0]..[13,893+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/Core.ml[13,893+0]..[13,893+0]) ghost
          Ppat_construct "()" (lib/Core.ml[13,893+0]..[13,893+0]) ghost
          None
        expression (lib/Core.ml[13,893+0]..[13,893+0]) ghost
          Pexp_apply
          expression (lib/Core.ml[13,893+0]..[13,893+0]) ghost
            Pexp_ident "Expect_test_collector.Current_file.set" (lib/Core.ml[13,893+0]..[13,893+0]) ghost
          [
            <arg>
            Labelled "absolute_filename"
              expression (lib/Core.ml[13,893+0]..[13,893+0]) ghost
                Pexp_constant PConst_string("lib/Core.ml",(lib/Core.ml[13,893+0]..[13,893+0]) ghost,None)
          ]
    ]
  structure_item (lib/Core.ml[13,893+0]..[13,893+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/Core.ml[13,893+0]..[13,893+0]) ghost
          Ppat_construct "()" (lib/Core.ml[13,893+0]..[13,893+0]) ghost
          None
        expression (lib/Core.ml[13,893+0]..[13,893+0]) ghost
          Pexp_apply
          expression (lib/Core.ml[13,893+0]..[13,893+0]) ghost
            Pexp_ident "Ppx_inline_test_lib.set_lib_and_partition" (lib/Core.ml[13,893+0]..[13,893+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/Core.ml[13,893+0]..[13,893+0]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/Core.ml[13,893+0]..[13,893+0]) ghost,None)
            <arg>
            Nolabel
              expression (lib/Core.ml[13,893+0]..[13,893+0]) ghost
                Pexp_constant PConst_string("Core.ml",(lib/Core.ml[13,893+0]..[13,893+0]) ghost,None)
          ]
    ]
  structure_item (lib/Core.ml[13,893+0]..[13,893+9])
    Pstr_open Fresh
    module_expr (lib/Core.ml[13,893+5]..[13,893+9])
      Pmod_ident "Sigs" (lib/Core.ml[13,893+5]..[13,893+9])
  structure_item (lib/Core.ml[20,1103+0]..[338,12030+3])
    Pstr_module
    "Make" (lib/Core.ml[20,1103+7]..[20,1103+11])
      module_expr (lib/Core.ml[21,1115+2]..[338,12030+3])
        Pmod_functor "M" (lib/Core.ml[21,1115+3]..[21,1115+4])
        module_type (lib/Core.ml[21,1115+7]..[21,1115+22])
          Pmty_ident "IMPERATIVE_MAPS" (lib/Core.ml[21,1115+7]..[21,1115+22])
        module_expr (lib/Core.ml[22,1139+2]..[338,12030+3])
          Pmod_functor "P" (lib/Core.ml[22,1139+3]..[22,1139+4])
          module_type (lib/Core.ml[22,1139+7]..[22,1139+15])
            Pmty_ident "PROPERTY" (lib/Core.ml[22,1139+7]..[22,1139+15])
          module_expr (lib/Core.ml[23,1156+2]..[338,12030+3])
            Pmod_structure
            [
              structure_item (lib/Core.ml[25,1166+0]..[26,1182+9])
                Pstr_type Rec
                [
                  type_declaration "variable" (lib/Core.ml[25,1166+5]..[25,1166+13]) (lib/Core.ml[25,1166+0]..[26,1182+9])
                    ptype_params =
                      []
                    ptype_cstrs =
                      []
                    ptype_kind =
                      Ptype_abstract
                    ptype_private = Public
                    ptype_manifest =
                      Some
                        core_type (lib/Core.ml[26,1182+4]..[26,1182+9])
                          Ptyp_constr "M.key" (lib/Core.ml[26,1182+4]..[26,1182+9])
                          []
                ]
              structure_item (lib/Core.ml[28,1193+0]..[29,1209+14])
                Pstr_type Rec
                [
                  type_declaration "property" (lib/Core.ml[28,1193+5]..[28,1193+13]) (lib/Core.ml[28,1193+0]..[29,1209+14])
                    ptype_params =
                      []
                    ptype_cstrs =
                      []
                    ptype_kind =
                      Ptype_abstract
                    ptype_private = Public
                    ptype_manifest =
                      Some
                        core_type (lib/Core.ml[29,1209+4]..[29,1209+14])
                          Ptyp_constr "P.property" (lib/Core.ml[29,1209+4]..[29,1209+14])
                          []
                ]
              structure_item (lib/Core.ml[31,1225+0]..[32,1242+24])
                Pstr_type Rec
                [
                  type_declaration "valuation" (lib/Core.ml[31,1225+5]..[31,1225+14]) (lib/Core.ml[31,1225+0]..[32,1242+24])
                    ptype_params =
                      []
                    ptype_cstrs =
                      []
                    ptype_kind =
                      Ptype_abstract
                    ptype_private = Public
                    ptype_manifest =
                      Some
                        core_type (lib/Core.ml[32,1242+4]..[32,1242+24])
                          Ptyp_arrow
                          Nolabel
                          core_type (lib/Core.ml[32,1242+4]..[32,1242+12])
                            Ptyp_constr "variable" (lib/Core.ml[32,1242+4]..[32,1242+12])
                            []
                          core_type (lib/Core.ml[32,1242+16]..[32,1242+24])
                            Ptyp_constr "property" (lib/Core.ml[32,1242+16]..[32,1242+24])
                            []
                ]
              structure_item (lib/Core.ml[34,1268+0]..[35,1279+25])
                Pstr_type Rec
                [
                  type_declaration "rhs" (lib/Core.ml[34,1268+5]..[34,1268+8]) (lib/Core.ml[34,1268+0]..[35,1279+25])
                    ptype_params =
                      []
                    ptype_cstrs =
                      []
                    ptype_kind =
                      Ptype_abstract
                    ptype_private = Public
                    ptype_manifest =
                      Some
                        core_type (lib/Core.ml[35,1279+4]..[35,1279+25])
                          Ptyp_arrow
                          Nolabel
                          core_type (lib/Core.ml[35,1279+4]..[35,1279+13])
                            Ptyp_constr "valuation" (lib/Core.ml[35,1279+4]..[35,1279+13])
                            []
                          core_type (lib/Core.ml[35,1279+17]..[35,1279+25])
                            Ptyp_constr "property" (lib/Core.ml[35,1279+17]..[35,1279+25])
                            []
                ]
              structure_item (lib/Core.ml[37,1306+0]..[38,1323+19])
                Pstr_type Rec
                [
                  type_declaration "equations" (lib/Core.ml[37,1306+5]..[37,1306+14]) (lib/Core.ml[37,1306+0]..[38,1323+19])
                    ptype_params =
                      []
                    ptype_cstrs =
                      []
                    ptype_kind =
                      Ptype_abstract
                    ptype_private = Public
                    ptype_manifest =
                      Some
                        core_type (lib/Core.ml[38,1323+4]..[38,1323+19])
                          Ptyp_arrow
                          Nolabel
                          core_type (lib/Core.ml[38,1323+4]..[38,1323+12])
                            Ptyp_constr "variable" (lib/Core.ml[38,1323+4]..[38,1323+12])
                            []
                          core_type (lib/Core.ml[38,1323+16]..[38,1323+19])
                            Ptyp_constr "rhs" (lib/Core.ml[38,1323+16]..[38,1323+19])
                            []
                ]
              structure_item (lib/Core.ml[49,1740+0]..[50,1755+21])
                Pstr_module
                "Graph" (lib/Core.ml[49,1740+7]..[49,1740+12])
                  module_expr (lib/Core.ml[50,1755+2]..[50,1755+21])
                    Pmod_ident "CoreDependencyGraph" (lib/Core.ml[50,1755+2]..[50,1755+21])
              structure_item (lib/Core.ml[52,1778+0]..[70,2260+1])
                Pstr_type Rec
                [
                  type_declaration "node" (lib/Core.ml[52,1778+5]..[52,1778+9]) (lib/Core.ml[52,1778+0]..[53,1790+19])
                    ptype_params =
                      []
                    ptype_cstrs =
                      []
                    ptype_kind =
                      Ptype_abstract
                    ptype_private = Public
                    ptype_manifest =
                      Some
                        core_type (lib/Core.ml[53,1790+4]..[53,1790+19])
                          Ptyp_constr "Graph.node" (lib/Core.ml[53,1790+9]..[53,1790+19])
                          [
                            core_type (lib/Core.ml[53,1790+4]..[53,1790+8])
                              Ptyp_constr "data" (lib/Core.ml[53,1790+4]..[53,1790+8])
                              []
                          ]
                  type_declaration "data" (lib/Core.ml[58,1922+4]..[58,1922+8]) (lib/Core.ml[58,1922+0]..[70,2260+1])
                    ptype_params =
                      []
                    ptype_cstrs =
                      []
                    ptype_kind =
                      Ptype_record
                        [
                          (lib/Core.ml[63,2111+2]..[63,2111+11])
                            Immutable
                            "rhs" (lib/Core.ml[63,2111+2]..[63,2111+5])                            core_type (lib/Core.ml[63,2111+7]..[63,2111+10])
                              Ptyp_constr "rhs" (lib/Core.ml[63,2111+7]..[63,2111+10])
                              []
                          (lib/Core.ml[67,2210+2]..[67,2210+29])
                            Mutable
                            "property" (lib/Core.ml[67,2210+10]..[67,2210+18])                            core_type (lib/Core.ml[67,2210+20]..[67,2210+28])
                              Ptyp_constr "property" (lib/Core.ml[67,2210+20]..[67,2210+28])
                              []
                        ]
                    ptype_private = Public
                    ptype_manifest =
                      None
                ]
              structure_item (lib/Core.ml[74,2326+0]..[75,2346+28])
                Pstr_value Nonrec
                [
                  <def>
                    pattern (lib/Core.ml[74,2326+4]..[74,2326+12])
                      Ppat_var "property" (lib/Core.ml[74,2326+4]..[74,2326+12])
                    expression (lib/Core.ml[74,2326+13]..[75,2346+28]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lib/Core.ml[74,2326+13]..[74,2326+17])
                        Ppat_var "node" (lib/Core.ml[74,2326+13]..[74,2326+17])
                      expression (lib/Core.ml[75,2346+2]..[75,2346+28])
                        Pexp_field
                        expression (lib/Core.ml[75,2346+2]..[75,2346+19])
                          Pexp_apply
                          expression (lib/Core.ml[75,2346+3]..[75,2346+13])
                            Pexp_ident "Graph.data" (lib/Core.ml[75,2346+3]..[75,2346+13])
                          [
                            <arg>
                            Nolabel
                              expression (lib/Core.ml[75,2346+14]..[75,2346+18])
                                Pexp_ident "node" (lib/Core.ml[75,2346+14]..[75,2346+18])
                          ]
                        "property" (lib/Core.ml[75,2346+20]..[75,2346+28])
                ]
              structure_item (lib/Core.ml[82,2605+0]..[336,12018+10])
                Pstr_value Nonrec
                [
                  <def>
                    pattern (lib/Core.ml[82,2605+4]..[82,2605+7])
                      Ppat_var "lfp" (lib/Core.ml[82,2605+4]..[82,2605+7])
                    expression (lib/Core.ml[82,2605+8]..[336,12018+10]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lib/Core.ml[82,2605+8]..[82,2605+25])
                        Ppat_constraint
                        pattern (lib/Core.ml[82,2605+9]..[82,2605+12])
                          Ppat_var "eqs" (lib/Core.ml[82,2605+9]..[82,2605+12])
                        core_type (lib/Core.ml[82,2605+15]..[82,2605+24])
                          Ptyp_constr "equations" (lib/Core.ml[82,2605+15]..[82,2605+24])
                          []
                      expression (lib/Core.ml[82,2605+26]..[336,12018+10])
                        Pexp_constraint
                        expression (lib/Core.ml[83,2645+2]..[336,12018+10])
                          Pexp_letmodule "LFP" (lib/Core.ml[83,2645+13]..[83,2645+16])
                          module_expr (lib/Core.ml[83,2645+19]..[335,12014+3])
                            Pmod_structure
                            [
                              structure_item (lib/Core.ml[96,3074+0]..[124,3659+3])
                                Pstr_module
                                "Workset" (lib/Core.ml[96,3074+7]..[96,3074+14])
                                  module_expr (lib/Core.ml[96,3074+15]..[124,3659+3])
                                    Pmod_constraint
                                    module_expr (lib/Core.ml[109,3434+2]..[124,3659+3])
                                      Pmod_structure
                                      [
                                        structure_item (lib/Core.ml[113,3477+2]..[114,3493+18])
                                          Pstr_value Nonrec
                                          [
                                            <def>
                                              pattern (lib/Core.ml[113,3477+6]..[113,3477+13])
                                                Ppat_var "workset" (lib/Core.ml[113,3477+6]..[113,3477+13])
                                              expression (lib/Core.ml[114,3493+4]..[114,3493+18])
                                                Pexp_apply
                                                expression (lib/Core.ml[114,3493+4]..[114,3493+16])
                                                  Pexp_ident "Queue.create" (lib/Core.ml[114,3493+4]..[114,3493+16])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/Core.ml[114,3493+16]..[114,3493+18])
                                                      Pexp_construct "()" (lib/Core.ml[114,3493+16]..[114,3493+18])
                                                      None
                                                ]
                                          ]
                                        structure_item (lib/Core.ml[116,3513+2]..[117,3533+27])
                                          Pstr_value Nonrec
                                          [
                                            <def>
                                              pattern (lib/Core.ml[116,3513+6]..[116,3513+12])
                                                Ppat_var "insert" (lib/Core.ml[116,3513+6]..[116,3513+12])
                                              expression (lib/Core.ml[116,3513+13]..[117,3533+27]) ghost
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (lib/Core.ml[116,3513+13]..[116,3513+17])
                                                  Ppat_var "node" (lib/Core.ml[116,3513+13]..[116,3513+17])
                                                expression (lib/Core.ml[117,3533+4]..[117,3533+27])
                                                  Pexp_apply
                                                  expression (lib/Core.ml[117,3533+4]..[117,3533+14])
                                                    Pexp_ident "Queue.push" (lib/Core.ml[117,3533+4]..[117,3533+14])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/Core.ml[117,3533+15]..[117,3533+19])
                                                        Pexp_ident "node" (lib/Core.ml[117,3533+15]..[117,3533+19])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/Core.ml[117,3533+20]..[117,3533+27])
                                                        Pexp_ident "workset" (lib/Core.ml[117,3533+20]..[117,3533+27])
                                                  ]
                                          ]
                                        structure_item (lib/Core.ml[119,3562+2]..[122,3649+8])
                                          Pstr_value Nonrec
                                          [
                                            <def>
                                              pattern (lib/Core.ml[119,3562+6]..[119,3562+12])
                                                Ppat_var "repeat" (lib/Core.ml[119,3562+6]..[119,3562+12])
                                              expression (lib/Core.ml[119,3562+13]..[122,3649+8]) ghost
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (lib/Core.ml[119,3562+13]..[119,3562+14])
                                                  Ppat_var "f" (lib/Core.ml[119,3562+13]..[119,3562+14])
                                                expression (lib/Core.ml[120,3579+4]..[122,3649+8])
                                                  Pexp_while
                                                  expression (lib/Core.ml[120,3579+10]..[120,3579+38])
                                                    Pexp_apply
                                                    expression (lib/Core.ml[120,3579+10]..[120,3579+13])
                                                      Pexp_ident "not" (lib/Core.ml[120,3579+10]..[120,3579+13])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/Core.ml[120,3579+14]..[120,3579+38])
                                                          Pexp_apply
                                                          expression (lib/Core.ml[120,3579+15]..[120,3579+29])
                                                            Pexp_ident "Queue.is_empty" (lib/Core.ml[120,3579+15]..[120,3579+29])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/Core.ml[120,3579+30]..[120,3579+37])
                                                                Pexp_ident "workset" (lib/Core.ml[120,3579+30]..[120,3579+37])
                                                          ]
                                                    ]
                                                  expression (lib/Core.ml[121,3621+6]..[121,3621+27])
                                                    Pexp_apply
                                                    expression (lib/Core.ml[121,3621+6]..[121,3621+7])
                                                      Pexp_ident "f" (lib/Core.ml[121,3621+6]..[121,3621+7])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/Core.ml[121,3621+8]..[121,3621+27])
                                                          Pexp_apply
                                                          expression (lib/Core.ml[121,3621+9]..[121,3621+18])
                                                            Pexp_ident "Queue.pop" (lib/Core.ml[121,3621+9]..[121,3621+18])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/Core.ml[121,3621+19]..[121,3621+26])
                                                                Pexp_ident "workset" (lib/Core.ml[121,3621+19]..[121,3621+26])
                                                          ]
                                                    ]
                                          ]
                                      ]
                                    module_type (lib/Core.ml[96,3074+17]..[108,3430+3])
                                      Pmty_signature
                                      [
                                        signature_item (lib/Core.ml[100,3188+2]..[100,3188+26])
                                          Psig_value
                                          value_description "insert" (lib/Core.ml[100,3188+6]..[100,3188+12]) (lib/Core.ml[100,3188+2]..[100,3188+26])
                                            core_type (lib/Core.ml[100,3188+14]..[100,3188+26])
                                              Ptyp_arrow
                                              Nolabel
                                              core_type (lib/Core.ml[100,3188+14]..[100,3188+18])
                                                Ptyp_constr "node" (lib/Core.ml[100,3188+14]..[100,3188+18])
                                                []
                                              core_type (lib/Core.ml[100,3188+22]..[100,3188+26])
                                                Ptyp_constr "unit" (lib/Core.ml[100,3188+22]..[100,3188+26])
                                                []
                                            []
                                        signature_item (lib/Core.ml[105,3373+2]..[105,3373+36])
                                          Psig_value
                                          value_description "repeat" (lib/Core.ml[105,3373+6]..[105,3373+12]) (lib/Core.ml[105,3373+2]..[105,3373+36])
                                            core_type (lib/Core.ml[105,3373+14]..[105,3373+36])
                                              Ptyp_arrow
                                              Nolabel
                                              core_type (lib/Core.ml[105,3373+15]..[105,3373+27])
                                                Ptyp_arrow
                                                Nolabel
                                                core_type (lib/Core.ml[105,3373+15]..[105,3373+19])
                                                  Ptyp_constr "node" (lib/Core.ml[105,3373+15]..[105,3373+19])
                                                  []
                                                core_type (lib/Core.ml[105,3373+23]..[105,3373+27])
                                                  Ptyp_constr "unit" (lib/Core.ml[105,3373+23]..[105,3373+27])
                                                  []
                                              core_type (lib/Core.ml[105,3373+32]..[105,3373+36])
                                                Ptyp_constr "unit" (lib/Core.ml[105,3373+32]..[105,3373+36])
                                                []
                                            []
                                      ]
                              structure_item (lib/Core.ml[139,4269+0]..[143,4384+32])
                                Pstr_value Nonrec
                                [
                                  <def>
                                    pattern (lib/Core.ml[139,4269+4]..[139,4269+10])
                                      Ppat_var "signal" (lib/Core.ml[139,4269+4]..[139,4269+10])
                                    expression (lib/Core.ml[139,4269+11]..[143,4384+32]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lib/Core.ml[139,4269+11]..[139,4269+18])
                                        Ppat_var "subject" (lib/Core.ml[139,4269+11]..[139,4269+18])
                                      expression (lib/Core.ml[140,4290+2]..[143,4384+32])
                                        Pexp_apply
                                        expression (lib/Core.ml[140,4290+2]..[140,4290+11])
                                          Pexp_ident "List.iter" (lib/Core.ml[140,4290+2]..[140,4290+11])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/Core.ml[140,4290+12]..[143,4384+3])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (lib/Core.ml[140,4290+17]..[140,4290+25])
                                                Ppat_var "observer" (lib/Core.ml[140,4290+17]..[140,4290+25])
                                              expression (lib/Core.ml[141,4319+4]..[142,4356+27])
                                                Pexp_sequence
                                                expression (lib/Core.ml[141,4319+4]..[141,4319+35])
                                                  Pexp_apply
                                                  expression (lib/Core.ml[141,4319+4]..[141,4319+26])
                                                    Pexp_ident "Graph.clear_successors" (lib/Core.ml[141,4319+4]..[141,4319+26])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/Core.ml[141,4319+27]..[141,4319+35])
                                                        Pexp_ident "observer" (lib/Core.ml[141,4319+27]..[141,4319+35])
                                                  ]
                                                expression (lib/Core.ml[142,4356+4]..[142,4356+27])
                                                  Pexp_apply
                                                  expression (lib/Core.ml[142,4356+4]..[142,4356+18])
                                                    Pexp_ident "Workset.insert" (lib/Core.ml[142,4356+4]..[142,4356+18])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/Core.ml[142,4356+19]..[142,4356+27])
                                                        Pexp_ident "observer" (lib/Core.ml[142,4356+19]..[142,4356+27])
                                                  ]
                                          <arg>
                                          Nolabel
                                            expression (lib/Core.ml[143,4384+4]..[143,4384+32])
                                              Pexp_apply
                                              expression (lib/Core.ml[143,4384+5]..[143,4384+23])
                                                Pexp_ident "Graph.predecessors" (lib/Core.ml[143,4384+5]..[143,4384+23])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/Core.ml[143,4384+24]..[143,4384+31])
                                                    Pexp_ident "subject" (lib/Core.ml[143,4384+24]..[143,4384+31])
                                              ]
                                        ]
                                ]
                              structure_item (lib/Core.ml[154,4740+0]..[155,4771+12])
                                Pstr_value Nonrec
                                [
                                  <def>
                                    pattern (lib/Core.ml[154,4740+4]..[154,4740+28]) ghost
                                      Ppat_constraint
                                      pattern (lib/Core.ml[154,4740+4]..[154,4740+13])
                                        Ppat_var "permanent" (lib/Core.ml[154,4740+4]..[154,4740+13])
                                      core_type (lib/Core.ml[154,4740+16]..[154,4740+28]) ghost
                                        Ptyp_poly
                                        core_type (lib/Core.ml[154,4740+16]..[154,4740+28])
                                          Ptyp_constr "M.t" (lib/Core.ml[154,4740+25]..[154,4740+28])
                                          [
                                            core_type (lib/Core.ml[154,4740+16]..[154,4740+24])
                                              Ptyp_constr "property" (lib/Core.ml[154,4740+16]..[154,4740+24])
                                              []
                                          ]
                                    expression (lib/Core.ml[154,4740+4]..[155,4771+12])
                                      Pexp_constraint
                                      expression (lib/Core.ml[155,4771+2]..[155,4771+12])
                                        Pexp_apply
                                        expression (lib/Core.ml[155,4771+2]..[155,4771+10])
                                          Pexp_ident "M.create" (lib/Core.ml[155,4771+2]..[155,4771+10])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/Core.ml[155,4771+10]..[155,4771+12])
                                              Pexp_construct "()" (lib/Core.ml[155,4771+10]..[155,4771+12])
                                              None
                                        ]
                                      core_type (lib/Core.ml[154,4740+16]..[154,4740+28])
                                        Ptyp_constr "M.t" (lib/Core.ml[154,4740+25]..[154,4740+28])
                                        [
                                          core_type (lib/Core.ml[154,4740+16]..[154,4740+24])
                                            Ptyp_constr "property" (lib/Core.ml[154,4740+16]..[154,4740+24])
                                            []
                                        ]
                                ]
                              structure_item (lib/Core.ml[163,5122+0]..[164,5149+12])
                                Pstr_value Nonrec
                                [
                                  <def>
                                    pattern (lib/Core.ml[163,5122+4]..[163,5122+24]) ghost
                                      Ppat_constraint
                                      pattern (lib/Core.ml[163,5122+4]..[163,5122+13])
                                        Ppat_var "transient" (lib/Core.ml[163,5122+4]..[163,5122+13])
                                      core_type (lib/Core.ml[163,5122+16]..[163,5122+24]) ghost
                                        Ptyp_poly
                                        core_type (lib/Core.ml[163,5122+16]..[163,5122+24])
                                          Ptyp_constr "M.t" (lib/Core.ml[163,5122+21]..[163,5122+24])
                                          [
                                            core_type (lib/Core.ml[163,5122+16]..[163,5122+20])
                                              Ptyp_constr "node" (lib/Core.ml[163,5122+16]..[163,5122+20])
                                              []
                                          ]
                                    expression (lib/Core.ml[163,5122+4]..[164,5149+12])
                                      Pexp_constraint
                                      expression (lib/Core.ml[164,5149+2]..[164,5149+12])
                                        Pexp_apply
                                        expression (lib/Core.ml[164,5149+2]..[164,5149+10])
                                          Pexp_ident "M.create" (lib/Core.ml[164,5149+2]..[164,5149+10])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/Core.ml[164,5149+10]..[164,5149+12])
                                              Pexp_construct "()" (lib/Core.ml[164,5149+10]..[164,5149+12])
                                              None
                                        ]
                                      core_type (lib/Core.ml[163,5122+16]..[163,5122+24])
                                        Ptyp_constr "M.t" (lib/Core.ml[163,5122+21]..[163,5122+24])
                                        [
                                          core_type (lib/Core.ml[163,5122+16]..[163,5122+20])
                                            Ptyp_constr "node" (lib/Core.ml[163,5122+16]..[163,5122+20])
                                            []
                                        ]
                                ]
                              structure_item (lib/Core.ml[170,5337+0]..[174,5430+19])
                                Pstr_value Nonrec
                                [
                                  <def>
                                    pattern (lib/Core.ml[170,5337+4]..[170,5337+10])
                                      Ppat_var "freeze" (lib/Core.ml[170,5337+4]..[170,5337+10])
                                    expression (lib/Core.ml[170,5337+11]..[174,5430+19]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lib/Core.ml[170,5337+11]..[170,5337+13])
                                        Ppat_construct "()" (lib/Core.ml[170,5337+11]..[170,5337+13])
                                        None
                                      expression (lib/Core.ml[171,5353+2]..[174,5430+19])
                                        Pexp_sequence
                                        expression (lib/Core.ml[171,5353+2]..[173,5415+13])
                                          Pexp_apply
                                          expression (lib/Core.ml[171,5353+2]..[171,5353+8])
                                            Pexp_ident "M.iter" (lib/Core.ml[171,5353+2]..[171,5353+8])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/Core.ml[171,5353+9]..[173,5415+3])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (lib/Core.ml[171,5353+14]..[171,5353+15])
                                                  Ppat_var "v" (lib/Core.ml[171,5353+14]..[171,5353+15])
                                                expression (lib/Core.ml[171,5353+16]..[172,5377+37]) ghost
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (lib/Core.ml[171,5353+16]..[171,5353+20])
                                                    Ppat_var "node" (lib/Core.ml[171,5353+16]..[171,5353+20])
                                                  expression (lib/Core.ml[172,5377+4]..[172,5377+37])
                                                    Pexp_apply
                                                    expression (lib/Core.ml[172,5377+4]..[172,5377+9])
                                                      Pexp_ident "M.add" (lib/Core.ml[172,5377+4]..[172,5377+9])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/Core.ml[172,5377+10]..[172,5377+11])
                                                          Pexp_ident "v" (lib/Core.ml[172,5377+10]..[172,5377+11])
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/Core.ml[172,5377+12]..[172,5377+27])
                                                          Pexp_apply
                                                          expression (lib/Core.ml[172,5377+13]..[172,5377+21])
                                                            Pexp_ident "property" (lib/Core.ml[172,5377+13]..[172,5377+21])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/Core.ml[172,5377+22]..[172,5377+26])
                                                                Pexp_ident "node" (lib/Core.ml[172,5377+22]..[172,5377+26])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/Core.ml[172,5377+28]..[172,5377+37])
                                                          Pexp_ident "permanent" (lib/Core.ml[172,5377+28]..[172,5377+37])
                                                    ]
                                            <arg>
                                            Nolabel
                                              expression (lib/Core.ml[173,5415+4]..[173,5415+13])
                                                Pexp_ident "transient" (lib/Core.ml[173,5415+4]..[173,5415+13])
                                          ]
                                        expression (lib/Core.ml[174,5430+2]..[174,5430+19])
                                          Pexp_apply
                                          expression (lib/Core.ml[174,5430+2]..[174,5430+9])
                                            Pexp_ident "M.clear" (lib/Core.ml[174,5430+2]..[174,5430+9])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/Core.ml[174,5430+10]..[174,5430+19])
                                                Pexp_ident "transient" (lib/Core.ml[174,5430+10]..[174,5430+19])
                                          ]
                                ]
                              structure_item (lib/Core.ml[196,6344+0]..[308,11404+8])
                                Pstr_value Rec
                                [
                                  <def>
                                    pattern (lib/Core.ml[196,6344+8]..[196,6344+13])
                                      Ppat_var "solve" (lib/Core.ml[196,6344+8]..[196,6344+13])
                                    expression (lib/Core.ml[196,6344+14]..[273,9520+5]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lib/Core.ml[196,6344+14]..[196,6344+27])
                                        Ppat_constraint
                                        pattern (lib/Core.ml[196,6344+15]..[196,6344+19])
                                          Ppat_var "node" (lib/Core.ml[196,6344+15]..[196,6344+19])
                                        core_type (lib/Core.ml[196,6344+22]..[196,6344+26])
                                          Ptyp_constr "node" (lib/Core.ml[196,6344+22]..[196,6344+26])
                                          []
                                      expression (lib/Core.ml[196,6344+28]..[273,9520+5])
                                        Pexp_constraint
                                        expression (lib/Core.ml[199,6437+2]..[273,9520+5])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/Core.ml[199,6437+6]..[199,6437+10])
                                                Ppat_var "data" (lib/Core.ml[199,6437+6]..[199,6437+10])
                                              expression (lib/Core.ml[199,6437+13]..[199,6437+28])
                                                Pexp_apply
                                                expression (lib/Core.ml[199,6437+13]..[199,6437+23])
                                                  Pexp_ident "Graph.data" (lib/Core.ml[199,6437+13]..[199,6437+23])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/Core.ml[199,6437+24]..[199,6437+28])
                                                      Pexp_ident "node" (lib/Core.ml[199,6437+24]..[199,6437+28])
                                                ]
                                          ]
                                          expression (lib/Core.ml[209,6984+2]..[273,9520+5])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lib/Core.ml[209,6984+6]..[209,6984+11])
                                                  Ppat_var "alive" (lib/Core.ml[209,6984+6]..[209,6984+11])
                                                expression (lib/Core.ml[209,6984+14]..[209,6984+22])
                                                  Pexp_apply
                                                  expression (lib/Core.ml[209,6984+14]..[209,6984+17])
                                                    Pexp_ident "ref" (lib/Core.ml[209,6984+14]..[209,6984+17])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/Core.ml[209,6984+18]..[209,6984+22])
                                                        Pexp_construct "true" (lib/Core.ml[209,6984+18]..[209,6984+22])
                                                        None
                                                  ]
                                              <def>
                                                pattern (lib/Core.ml[210,7007+6]..[210,7007+14])
                                                  Ppat_var "subjects" (lib/Core.ml[210,7007+6]..[210,7007+14])
                                                expression (lib/Core.ml[210,7007+17]..[210,7007+23])
                                                  Pexp_apply
                                                  expression (lib/Core.ml[210,7007+17]..[210,7007+20])
                                                    Pexp_ident "ref" (lib/Core.ml[210,7007+17]..[210,7007+20])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/Core.ml[210,7007+21]..[210,7007+23])
                                                        Pexp_construct "[]" (lib/Core.ml[210,7007+21]..[210,7007+23])
                                                        None
                                                  ]
                                            ]
                                            expression (lib/Core.ml[215,7253+2]..[273,9520+5])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (lib/Core.ml[215,7253+6]..[215,7253+13])
                                                    Ppat_var "request" (lib/Core.ml[215,7253+6]..[215,7253+13])
                                                  expression (lib/Core.ml[215,7253+14]..[228,7608+7]) ghost
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (lib/Core.ml[215,7253+14]..[215,7253+28])
                                                      Ppat_constraint
                                                      pattern (lib/Core.ml[215,7253+15]..[215,7253+16])
                                                        Ppat_var "v" (lib/Core.ml[215,7253+15]..[215,7253+16])
                                                      core_type (lib/Core.ml[215,7253+19]..[215,7253+27])
                                                        Ptyp_constr "variable" (lib/Core.ml[215,7253+19]..[215,7253+27])
                                                        []
                                                    expression (lib/Core.ml[215,7253+29]..[228,7608+7])
                                                      Pexp_constraint
                                                      expression (lib/Core.ml[216,7295+4]..[228,7608+7])
                                                        Pexp_sequence
                                                        expression (lib/Core.ml[216,7295+4]..[216,7295+17])
                                                          Pexp_assert
                                                          expression (lib/Core.ml[216,7295+11]..[216,7295+17])
                                                            Pexp_apply
                                                            expression (lib/Core.ml[216,7295+11]..[216,7295+12])
                                                              Pexp_ident "!" (lib/Core.ml[216,7295+11]..[216,7295+12])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/Core.ml[216,7295+12]..[216,7295+17])
                                                                  Pexp_ident "alive" (lib/Core.ml[216,7295+12]..[216,7295+17])
                                                            ]
                                                        expression (lib/Core.ml[217,7314+4]..[228,7608+7])
                                                          Pexp_try
                                                          expression (lib/Core.ml[218,7322+6]..[218,7322+24])
                                                            Pexp_apply
                                                            expression (lib/Core.ml[218,7322+6]..[218,7322+12])
                                                              Pexp_ident "M.find" (lib/Core.ml[218,7322+6]..[218,7322+12])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/Core.ml[218,7322+13]..[218,7322+14])
                                                                  Pexp_ident "v" (lib/Core.ml[218,7322+13]..[218,7322+14])
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/Core.ml[218,7322+15]..[218,7322+24])
                                                                  Pexp_ident "permanent" (lib/Core.ml[218,7322+15]..[218,7322+24])
                                                            ]
                                                          [
                                                            <case>
                                                              pattern (lib/Core.ml[219,7347+9]..[219,7347+18])
                                                                Ppat_construct "Not_found" (lib/Core.ml[219,7347+9]..[219,7347+18])
                                                                None
                                                              expression (lib/Core.ml[220,7369+6]..[228,7608+7])
                                                                Pexp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (lib/Core.ml[220,7369+10]..[220,7369+17])
                                                                      Ppat_var "subject" (lib/Core.ml[220,7369+10]..[220,7369+17])
                                                                    expression (lib/Core.ml[220,7369+20]..[220,7369+30])
                                                                      Pexp_apply
                                                                      expression (lib/Core.ml[220,7369+20]..[220,7369+28])
Pexp_ident "node_for" (lib/Core.ml[220,7369+20]..[220,7369+28])
                                                                      [
<arg>
Nolabel
  expression (lib/Core.ml[220,7369+29]..[220,7369+30])
    Pexp_ident "v" (lib/Core.ml[220,7369+29]..[220,7369+30])
                                                                      ]
                                                                ]
                                                                expression (lib/Core.ml[225,7497+6]..[228,7608+7])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (lib/Core.ml[225,7497+10]..[225,7497+11])
Ppat_var "p" (lib/Core.ml[225,7497+10]..[225,7497+11])
                                                                      expression (lib/Core.ml[225,7497+14]..[225,7497+30])
Pexp_apply
expression (lib/Core.ml[225,7497+14]..[225,7497+22])
  Pexp_ident "property" (lib/Core.ml[225,7497+14]..[225,7497+22])
[
  <arg>
  Nolabel
    expression (lib/Core.ml[225,7497+23]..[225,7497+30])
      Pexp_ident "subject" (lib/Core.ml[225,7497+23]..[225,7497+30])
]
                                                                  ]
                                                                  expression (lib/Core.ml[226,7531+6]..[228,7608+7])
                                                                    Pexp_sequence
                                                                    expression (lib/Core.ml[226,7531+6]..[227,7566+40])
                                                                      Pexp_ifthenelse
                                                                      expression (lib/Core.ml[226,7531+9]..[226,7531+29])
Pexp_apply
expression (lib/Core.ml[226,7531+9]..[226,7531+12])
  Pexp_ident "not" (lib/Core.ml[226,7531+9]..[226,7531+12])
[
  <arg>
  Nolabel
    expression (lib/Core.ml[226,7531+13]..[226,7531+29])
      Pexp_apply
      expression (lib/Core.ml[226,7531+14]..[226,7531+26])
        Pexp_ident "P.is_maximal" (lib/Core.ml[226,7531+14]..[226,7531+26])
      [
        <arg>
        Nolabel
          expression (lib/Core.ml[226,7531+27]..[226,7531+28])
            Pexp_ident "p" (lib/Core.ml[226,7531+27]..[226,7531+28])
      ]
]
                                                                      expression (lib/Core.ml[227,7566+8]..[227,7566+40])
Pexp_apply
expression (lib/Core.ml[227,7566+17]..[227,7566+19])
  Pexp_ident ":=" (lib/Core.ml[227,7566+17]..[227,7566+19])
[
  <arg>
  Nolabel
    expression (lib/Core.ml[227,7566+8]..[227,7566+16])
      Pexp_ident "subjects" (lib/Core.ml[227,7566+8]..[227,7566+16])
  <arg>
  Nolabel
    expression (lib/Core.ml[227,7566+20]..[227,7566+40])
      Pexp_construct "::" (lib/Core.ml[227,7566+28]..[227,7566+30])
      Some
        expression (lib/Core.ml[227,7566+20]..[227,7566+40]) ghost
          Pexp_tuple
          [
            expression (lib/Core.ml[227,7566+20]..[227,7566+27])
              Pexp_ident "subject" (lib/Core.ml[227,7566+20]..[227,7566+27])
            expression (lib/Core.ml[227,7566+31]..[227,7566+40])
              Pexp_apply
              expression (lib/Core.ml[227,7566+31]..[227,7566+32])
                Pexp_ident "!" (lib/Core.ml[227,7566+31]..[227,7566+32])
              [
                <arg>
                Nolabel
                  expression (lib/Core.ml[227,7566+32]..[227,7566+40])
                    Pexp_ident "subjects" (lib/Core.ml[227,7566+32]..[227,7566+40])
              ]
          ]
]
                                                                      None
                                                                    expression (lib/Core.ml[228,7608+6]..[228,7608+7])
                                                                      Pexp_ident "p" (lib/Core.ml[228,7608+6]..[228,7608+7])
                                                          ]
                                                      core_type (lib/Core.ml[215,7253+31]..[215,7253+39])
                                                        Ptyp_constr "property" (lib/Core.ml[215,7253+31]..[215,7253+39])
                                                        []
                                              ]
                                              expression (lib/Core.ml[233,7674+2]..[273,9520+5])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (lib/Core.ml[233,7674+6]..[233,7674+18])
                                                      Ppat_var "new_property" (lib/Core.ml[233,7674+6]..[233,7674+18])
                                                    expression (lib/Core.ml[233,7674+21]..[233,7674+37])
                                                      Pexp_apply
                                                      expression (lib/Core.ml[233,7674+21]..[233,7674+29])
                                                        Pexp_field
                                                        expression (lib/Core.ml[233,7674+21]..[233,7674+25])
                                                          Pexp_ident "data" (lib/Core.ml[233,7674+21]..[233,7674+25])
                                                        "rhs" (lib/Core.ml[233,7674+26]..[233,7674+29])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/Core.ml[233,7674+30]..[233,7674+37])
                                                            Pexp_ident "request" (lib/Core.ml[233,7674+30]..[233,7674+37])
                                                      ]
                                                ]
                                                expression (lib/Core.ml[237,7810+2]..[273,9520+5])
                                                  Pexp_sequence
                                                  expression (lib/Core.ml[237,7810+2]..[237,7810+16])
                                                    Pexp_apply
                                                    expression (lib/Core.ml[237,7810+8]..[237,7810+10])
                                                      Pexp_ident ":=" (lib/Core.ml[237,7810+8]..[237,7810+10])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/Core.ml[237,7810+2]..[237,7810+7])
                                                          Pexp_ident "alive" (lib/Core.ml[237,7810+2]..[237,7810+7])
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/Core.ml[237,7810+11]..[237,7810+16])
                                                          Pexp_construct "false" (lib/Core.ml[237,7810+11]..[237,7810+16])
                                                          None
                                                    ]
                                                  expression (lib/Core.ml[264,9160+2]..[273,9520+5])
                                                    Pexp_sequence
                                                    expression (lib/Core.ml[264,9160+2]..[265,9220+39])
                                                      Pexp_ifthenelse
                                                      expression (lib/Core.ml[264,9160+5]..[264,9160+54])
                                                        Pexp_apply
                                                        expression (lib/Core.ml[264,9160+5]..[264,9160+8])
                                                          Pexp_ident "not" (lib/Core.ml[264,9160+5]..[264,9160+8])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/Core.ml[264,9160+9]..[264,9160+54])
                                                              Pexp_apply
                                                              expression (lib/Core.ml[264,9160+25]..[264,9160+27])
                                                                Pexp_ident "||" (lib/Core.ml[264,9160+25]..[264,9160+27])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/Core.ml[264,9160+10]..[264,9160+24])
                                                                    Pexp_apply
                                                                    expression (lib/Core.ml[264,9160+20]..[264,9160+21])
                                                                      Pexp_ident "=" (lib/Core.ml[264,9160+20]..[264,9160+21])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (lib/Core.ml[264,9160+10]..[264,9160+19])
  Pexp_apply
  expression (lib/Core.ml[264,9160+10]..[264,9160+11])
    Pexp_ident "!" (lib/Core.ml[264,9160+10]..[264,9160+11])
  [
    <arg>
    Nolabel
      expression (lib/Core.ml[264,9160+11]..[264,9160+19])
        Pexp_ident "subjects" (lib/Core.ml[264,9160+11]..[264,9160+19])
  ]
                                                                      <arg>
                                                                      Nolabel
expression (lib/Core.ml[264,9160+22]..[264,9160+24])
  Pexp_construct "[]" (lib/Core.ml[264,9160+22]..[264,9160+24])
  None
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/Core.ml[264,9160+28]..[264,9160+53])
                                                                    Pexp_apply
                                                                    expression (lib/Core.ml[264,9160+28]..[264,9160+40])
                                                                      Pexp_ident "P.is_maximal" (lib/Core.ml[264,9160+28]..[264,9160+40])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (lib/Core.ml[264,9160+41]..[264,9160+53])
  Pexp_ident "new_property" (lib/Core.ml[264,9160+41]..[264,9160+53])
                                                                    ]
                                                              ]
                                                        ]
                                                      expression (lib/Core.ml[265,9220+4]..[265,9220+39])
                                                        Pexp_apply
                                                        expression (lib/Core.ml[265,9220+4]..[265,9220+24])
                                                          Pexp_ident "Graph.set_successors" (lib/Core.ml[265,9220+4]..[265,9220+24])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/Core.ml[265,9220+25]..[265,9220+29])
                                                              Pexp_ident "node" (lib/Core.ml[265,9220+25]..[265,9220+29])
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/Core.ml[265,9220+30]..[265,9220+39])
                                                              Pexp_apply
                                                              expression (lib/Core.ml[265,9220+30]..[265,9220+31])
                                                                Pexp_ident "!" (lib/Core.ml[265,9220+30]..[265,9220+31])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/Core.ml[265,9220+31]..[265,9220+39])
                                                                    Pexp_ident "subjects" (lib/Core.ml[265,9220+31]..[265,9220+39])
                                                              ]
                                                        ]
                                                      None
                                                    expression (lib/Core.ml[270,9412+2]..[273,9520+5])
                                                      Pexp_ifthenelse
                                                      expression (lib/Core.ml[270,9412+5]..[270,9412+45])
                                                        Pexp_apply
                                                        expression (lib/Core.ml[270,9412+5]..[270,9412+8])
                                                          Pexp_ident "not" (lib/Core.ml[270,9412+5]..[270,9412+8])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/Core.ml[270,9412+9]..[270,9412+45])
                                                              Pexp_apply
                                                              expression (lib/Core.ml[270,9412+10]..[270,9412+17])
                                                                Pexp_ident "P.equal" (lib/Core.ml[270,9412+10]..[270,9412+17])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/Core.ml[270,9412+18]..[270,9412+31])
                                                                    Pexp_field
                                                                    expression (lib/Core.ml[270,9412+18]..[270,9412+22])
                                                                      Pexp_ident "data" (lib/Core.ml[270,9412+18]..[270,9412+22])
                                                                    "property" (lib/Core.ml[270,9412+23]..[270,9412+31])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/Core.ml[270,9412+32]..[270,9412+44])
                                                                    Pexp_ident "new_property" (lib/Core.ml[270,9412+32]..[270,9412+44])
                                                              ]
                                                        ]
                                                      expression (lib/Core.ml[270,9412+51]..[273,9520+5])
                                                        Pexp_sequence
                                                        expression (lib/Core.ml[271,9469+4]..[271,9469+33])
                                                          Pexp_setfield
                                                          expression (lib/Core.ml[271,9469+4]..[271,9469+8])
                                                            Pexp_ident "data" (lib/Core.ml[271,9469+4]..[271,9469+8])
                                                          "property" (lib/Core.ml[271,9469+9]..[271,9469+17])
                                                          expression (lib/Core.ml[271,9469+21]..[271,9469+33])
                                                            Pexp_ident "new_property" (lib/Core.ml[271,9469+21]..[271,9469+33])
                                                        expression (lib/Core.ml[272,9504+4]..[272,9504+15])
                                                          Pexp_apply
                                                          expression (lib/Core.ml[272,9504+4]..[272,9504+10])
                                                            Pexp_ident "signal" (lib/Core.ml[272,9504+4]..[272,9504+10])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/Core.ml[272,9504+11]..[272,9504+15])
                                                                Pexp_ident "node" (lib/Core.ml[272,9504+11]..[272,9504+15])
                                                          ]
                                                      None
                                        core_type (lib/Core.ml[196,6344+30]..[196,6344+34])
                                          Ptyp_constr "unit" (lib/Core.ml[196,6344+30]..[196,6344+34])
                                          []
                                  <def>
                                    pattern (lib/Core.ml[298,10970+4]..[298,10970+12])
                                      Ppat_var "node_for" (lib/Core.ml[298,10970+4]..[298,10970+12])
                                    expression (lib/Core.ml[298,10970+13]..[308,11404+8]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lib/Core.ml[298,10970+13]..[298,10970+27])
                                        Ppat_constraint
                                        pattern (lib/Core.ml[298,10970+14]..[298,10970+15])
                                          Ppat_var "v" (lib/Core.ml[298,10970+14]..[298,10970+15])
                                        core_type (lib/Core.ml[298,10970+18]..[298,10970+26])
                                          Ptyp_constr "variable" (lib/Core.ml[298,10970+18]..[298,10970+26])
                                          []
                                      expression (lib/Core.ml[298,10970+28]..[308,11404+8])
                                        Pexp_constraint
                                        expression (lib/Core.ml[299,11007+2]..[308,11404+8])
                                          Pexp_try
                                          expression (lib/Core.ml[300,11013+4]..[300,11013+22])
                                            Pexp_apply
                                            expression (lib/Core.ml[300,11013+4]..[300,11013+10])
                                              Pexp_ident "M.find" (lib/Core.ml[300,11013+4]..[300,11013+10])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/Core.ml[300,11013+11]..[300,11013+12])
                                                  Pexp_ident "v" (lib/Core.ml[300,11013+11]..[300,11013+12])
                                              <arg>
                                              Nolabel
                                                expression (lib/Core.ml[300,11013+13]..[300,11013+22])
                                                  Pexp_ident "transient" (lib/Core.ml[300,11013+13]..[300,11013+22])
                                            ]
                                          [
                                            <case>
                                              pattern (lib/Core.ml[301,11036+7]..[301,11036+16])
                                                Ppat_construct "Not_found" (lib/Core.ml[301,11036+7]..[301,11036+16])
                                                None
                                              expression (lib/Core.ml[302,11056+4]..[308,11404+8])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (lib/Core.ml[302,11056+8]..[302,11056+12])
                                                      Ppat_var "node" (lib/Core.ml[302,11056+8]..[302,11056+12])
                                                    expression (lib/Core.ml[302,11056+15]..[302,11056+64])
                                                      Pexp_apply
                                                      expression (lib/Core.ml[302,11056+15]..[302,11056+27])
                                                        Pexp_ident "Graph.create" (lib/Core.ml[302,11056+15]..[302,11056+27])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/Core.ml[302,11056+28]..[302,11056+64])
                                                            Pexp_record
                                                            [
                                                              "rhs" (lib/Core.ml[302,11056+30]..[302,11056+33])
                                                                expression (lib/Core.ml[302,11056+36]..[302,11056+41])
                                                                  Pexp_apply
                                                                  expression (lib/Core.ml[302,11056+36]..[302,11056+39])
                                                                    Pexp_ident "eqs" (lib/Core.ml[302,11056+36]..[302,11056+39])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lib/Core.ml[302,11056+40]..[302,11056+41])
Pexp_ident "v" (lib/Core.ml[302,11056+40]..[302,11056+41])
                                                                  ]
                                                              "property" (lib/Core.ml[302,11056+43]..[302,11056+51])
                                                                expression (lib/Core.ml[302,11056+54]..[302,11056+62])
                                                                  Pexp_ident "P.bottom" (lib/Core.ml[302,11056+54]..[302,11056+62])
                                                            ]
                                                            None
                                                      ]
                                                ]
                                                expression (lib/Core.ml[306,11329+4]..[308,11404+8])
                                                  Pexp_sequence
                                                  expression (lib/Core.ml[306,11329+4]..[306,11329+26])
                                                    Pexp_apply
                                                    expression (lib/Core.ml[306,11329+4]..[306,11329+9])
                                                      Pexp_ident "M.add" (lib/Core.ml[306,11329+4]..[306,11329+9])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/Core.ml[306,11329+10]..[306,11329+11])
                                                          Pexp_ident "v" (lib/Core.ml[306,11329+10]..[306,11329+11])
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/Core.ml[306,11329+12]..[306,11329+16])
                                                          Pexp_ident "node" (lib/Core.ml[306,11329+12]..[306,11329+16])
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/Core.ml[306,11329+17]..[306,11329+26])
                                                          Pexp_ident "transient" (lib/Core.ml[306,11329+17]..[306,11329+26])
                                                    ]
                                                  expression (lib/Core.ml[307,11357+4]..[308,11404+8])
                                                    Pexp_sequence
                                                    expression (lib/Core.ml[307,11357+4]..[307,11357+14])
                                                      Pexp_apply
                                                      expression (lib/Core.ml[307,11357+4]..[307,11357+9])
                                                        Pexp_ident "solve" (lib/Core.ml[307,11357+4]..[307,11357+9])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/Core.ml[307,11357+10]..[307,11357+14])
                                                            Pexp_ident "node" (lib/Core.ml[307,11357+10]..[307,11357+14])
                                                      ]
                                                    expression (lib/Core.ml[308,11404+4]..[308,11404+8])
                                                      Pexp_ident "node" (lib/Core.ml[308,11404+4]..[308,11404+8])
                                          ]
                                        core_type (lib/Core.ml[298,10970+30]..[298,10970+34])
                                          Ptyp_constr "node" (lib/Core.ml[298,10970+30]..[298,10970+34])
                                          []
                                ]
                              structure_item (lib/Core.ml[316,11628+0]..[317,11643+10])
                                Pstr_value Nonrec
                                [
                                  <def>
                                    pattern (lib/Core.ml[316,11628+4]..[316,11628+12])
                                      Ppat_var "inactive" (lib/Core.ml[316,11628+4]..[316,11628+12])
                                    expression (lib/Core.ml[317,11643+2]..[317,11643+10])
                                      Pexp_apply
                                      expression (lib/Core.ml[317,11643+2]..[317,11643+5])
                                        Pexp_ident "ref" (lib/Core.ml[317,11643+2]..[317,11643+5])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/Core.ml[317,11643+6]..[317,11643+10])
                                            Pexp_construct "true" (lib/Core.ml[317,11643+6]..[317,11643+10])
                                            None
                                      ]
                                ]
                              structure_item (lib/Core.ml[319,11655+0]..[329,11876+17])
                                Pstr_value Nonrec
                                [
                                  <def>
                                    pattern (lib/Core.ml[319,11655+4]..[319,11655+7])
                                      Ppat_var "get" (lib/Core.ml[319,11655+4]..[319,11655+7])
                                    expression (lib/Core.ml[319,11655+8]..[329,11876+17]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lib/Core.ml[319,11655+8]..[319,11655+22])
                                        Ppat_constraint
                                        pattern (lib/Core.ml[319,11655+9]..[319,11655+10])
                                          Ppat_var "v" (lib/Core.ml[319,11655+9]..[319,11655+10])
                                        core_type (lib/Core.ml[319,11655+13]..[319,11655+21])
                                          Ptyp_constr "variable" (lib/Core.ml[319,11655+13]..[319,11655+21])
                                          []
                                      expression (lib/Core.ml[319,11655+23]..[329,11876+17])
                                        Pexp_constraint
                                        expression (lib/Core.ml[320,11691+2]..[329,11876+17])
                                          Pexp_try
                                          expression (lib/Core.ml[321,11697+4]..[321,11697+22])
                                            Pexp_apply
                                            expression (lib/Core.ml[321,11697+4]..[321,11697+10])
                                              Pexp_ident "M.find" (lib/Core.ml[321,11697+4]..[321,11697+10])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/Core.ml[321,11697+11]..[321,11697+12])
                                                  Pexp_ident "v" (lib/Core.ml[321,11697+11]..[321,11697+12])
                                              <arg>
                                              Nolabel
                                                expression (lib/Core.ml[321,11697+13]..[321,11697+22])
                                                  Pexp_ident "permanent" (lib/Core.ml[321,11697+13]..[321,11697+22])
                                            ]
                                          [
                                            <case>
                                              pattern (lib/Core.ml[322,11720+7]..[322,11720+16])
                                                Ppat_construct "Not_found" (lib/Core.ml[322,11720+7]..[322,11720+16])
                                                None
                                              expression (lib/Core.ml[323,11740+4]..[329,11876+17])
                                                Pexp_sequence
                                                expression (lib/Core.ml[323,11740+4]..[323,11740+20])
                                                  Pexp_assert
                                                  expression (lib/Core.ml[323,11740+11]..[323,11740+20])
                                                    Pexp_apply
                                                    expression (lib/Core.ml[323,11740+11]..[323,11740+12])
                                                      Pexp_ident "!" (lib/Core.ml[323,11740+11]..[323,11740+12])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/Core.ml[323,11740+12]..[323,11740+20])
                                                          Pexp_ident "inactive" (lib/Core.ml[323,11740+12]..[323,11740+20])
                                                    ]
                                                expression (lib/Core.ml[324,11762+4]..[329,11876+17])
                                                  Pexp_sequence
                                                  expression (lib/Core.ml[324,11762+4]..[324,11762+21])
                                                    Pexp_apply
                                                    expression (lib/Core.ml[324,11762+13]..[324,11762+15])
                                                      Pexp_ident ":=" (lib/Core.ml[324,11762+13]..[324,11762+15])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/Core.ml[324,11762+4]..[324,11762+12])
                                                          Pexp_ident "inactive" (lib/Core.ml[324,11762+4]..[324,11762+12])
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/Core.ml[324,11762+16]..[324,11762+21])
                                                          Pexp_construct "false" (lib/Core.ml[324,11762+16]..[324,11762+21])
                                                          None
                                                    ]
                                                  expression (lib/Core.ml[325,11785+4]..[329,11876+17])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (lib/Core.ml[325,11785+8]..[325,11785+12])
                                                          Ppat_var "node" (lib/Core.ml[325,11785+8]..[325,11785+12])
                                                        expression (lib/Core.ml[325,11785+15]..[325,11785+25])
                                                          Pexp_apply
                                                          expression (lib/Core.ml[325,11785+15]..[325,11785+23])
                                                            Pexp_ident "node_for" (lib/Core.ml[325,11785+15]..[325,11785+23])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/Core.ml[325,11785+24]..[325,11785+25])
                                                                Pexp_ident "v" (lib/Core.ml[325,11785+24]..[325,11785+25])
                                                          ]
                                                    ]
                                                    expression (lib/Core.ml[326,11814+4]..[329,11876+17])
                                                      Pexp_sequence
                                                      expression (lib/Core.ml[326,11814+4]..[326,11814+24])
                                                        Pexp_apply
                                                        expression (lib/Core.ml[326,11814+4]..[326,11814+18])
                                                          Pexp_ident "Workset.repeat" (lib/Core.ml[326,11814+4]..[326,11814+18])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/Core.ml[326,11814+19]..[326,11814+24])
                                                              Pexp_ident "solve" (lib/Core.ml[326,11814+19]..[326,11814+24])
                                                        ]
                                                      expression (lib/Core.ml[327,11840+4]..[329,11876+17])
                                                        Pexp_sequence
                                                        expression (lib/Core.ml[327,11840+4]..[327,11840+12])
                                                          Pexp_apply
                                                          expression (lib/Core.ml[327,11840+4]..[327,11840+10])
                                                            Pexp_ident "freeze" (lib/Core.ml[327,11840+4]..[327,11840+10])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/Core.ml[327,11840+10]..[327,11840+12])
                                                                Pexp_construct "()" (lib/Core.ml[327,11840+10]..[327,11840+12])
                                                                None
                                                          ]
                                                        expression (lib/Core.ml[328,11854+4]..[329,11876+17])
                                                          Pexp_sequence
                                                          expression (lib/Core.ml[328,11854+4]..[328,11854+20])
                                                            Pexp_apply
                                                            expression (lib/Core.ml[328,11854+13]..[328,11854+15])
                                                              Pexp_ident ":=" (lib/Core.ml[328,11854+13]..[328,11854+15])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/Core.ml[328,11854+4]..[328,11854+12])
                                                                  Pexp_ident "inactive" (lib/Core.ml[328,11854+4]..[328,11854+12])
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/Core.ml[328,11854+16]..[328,11854+20])
                                                                  Pexp_construct "true" (lib/Core.ml[328,11854+16]..[328,11854+20])
                                                                  None
                                                            ]
                                                          expression (lib/Core.ml[329,11876+4]..[329,11876+17])
                                                            Pexp_apply
                                                            expression (lib/Core.ml[329,11876+4]..[329,11876+12])
                                                              Pexp_ident "property" (lib/Core.ml[329,11876+4]..[329,11876+12])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/Core.ml[329,11876+13]..[329,11876+17])
                                                                  Pexp_ident "node" (lib/Core.ml[329,11876+13]..[329,11876+17])
                                                            ]
                                          ]
                                        core_type (lib/Core.ml[319,11655+25]..[319,11655+33])
                                          Ptyp_constr "property" (lib/Core.ml[319,11655+25]..[319,11655+33])
                                          []
                                ]
                            ]
                          expression (lib/Core.ml[336,12018+3]..[336,12018+10])
                            Pexp_ident "LFP.get" (lib/Core.ml[336,12018+3]..[336,12018+10])
                        core_type (lib/Core.ml[82,2605+28]..[82,2605+37])
                          Ptyp_constr "valuation" (lib/Core.ml[82,2605+28]..[82,2605+37])
                          []
                ]
            ]
  structure_item (lib/Core.ml[344,12155+0]..[347,12214+64])
    Pstr_module
    "ForOrderedType" (lib/Core.ml[344,12155+7]..[344,12155+21])
      module_expr (lib/Core.ml[345,12177+2]..[347,12214+64])
        Pmod_functor "T" (lib/Core.ml[345,12177+3]..[345,12177+4])
        module_type (lib/Core.ml[345,12177+7]..[345,12177+18])
          Pmty_ident "OrderedType" (lib/Core.ml[345,12177+7]..[345,12177+18])
        module_expr (lib/Core.ml[346,12197+2]..[347,12214+64])
          Pmod_functor "P" (lib/Core.ml[346,12197+3]..[346,12197+4])
          module_type (lib/Core.ml[346,12197+7]..[346,12197+15])
            Pmty_ident "PROPERTY" (lib/Core.ml[346,12197+7]..[346,12197+15])
          module_expr (lib/Core.ml[347,12214+7]..[347,12214+64])
            Pmod_apply
            module_expr (lib/Core.ml[347,12214+7]..[347,12214+61])
              Pmod_apply
              module_expr (lib/Core.ml[347,12214+7]..[347,12214+11])
                Pmod_ident "Make" (lib/Core.ml[347,12214+7]..[347,12214+11])
              module_expr (lib/Core.ml[347,12214+12]..[347,12214+60])
                Pmod_apply
                module_expr (lib/Core.ml[347,12214+12]..[347,12214+47])
                  Pmod_ident "Glue.PersistentMapsToImperativeMaps" (lib/Core.ml[347,12214+12]..[347,12214+47])
                module_expr (lib/Core.ml[347,12214+48]..[347,12214+59])
                  Pmod_apply
                  module_expr (lib/Core.ml[347,12214+48]..[347,12214+56])
                    Pmod_ident "Map.Make" (lib/Core.ml[347,12214+48]..[347,12214+56])
                  module_expr (lib/Core.ml[347,12214+57]..[347,12214+58])
                    Pmod_ident "T" (lib/Core.ml[347,12214+57]..[347,12214+58])
            module_expr (lib/Core.ml[347,12214+62]..[347,12214+63])
              Pmod_ident "P" (lib/Core.ml[347,12214+62]..[347,12214+63])
  structure_item (lib/Core.ml[349,12280+0]..[352,12337+50])
    Pstr_module
    "ForHashedType" (lib/Core.ml[349,12280+7]..[349,12280+20])
      module_expr (lib/Core.ml[350,12301+2]..[352,12337+50])
        Pmod_functor "T" (lib/Core.ml[350,12301+3]..[350,12301+4])
        module_type (lib/Core.ml[350,12301+7]..[350,12301+17])
          Pmty_ident "HashedType" (lib/Core.ml[350,12301+7]..[350,12301+17])
        module_expr (lib/Core.ml[351,12320+2]..[352,12337+50])
          Pmod_functor "P" (lib/Core.ml[351,12320+3]..[351,12320+4])
          module_type (lib/Core.ml[351,12320+7]..[351,12320+15])
            Pmty_ident "PROPERTY" (lib/Core.ml[351,12320+7]..[351,12320+15])
          module_expr (lib/Core.ml[352,12337+7]..[352,12337+50])
            Pmod_apply
            module_expr (lib/Core.ml[352,12337+7]..[352,12337+47])
              Pmod_apply
              module_expr (lib/Core.ml[352,12337+7]..[352,12337+11])
                Pmod_ident "Make" (lib/Core.ml[352,12337+7]..[352,12337+11])
              module_expr (lib/Core.ml[352,12337+12]..[352,12337+46])
                Pmod_apply
                module_expr (lib/Core.ml[352,12337+12]..[352,12337+43])
                  Pmod_ident "Glue.HashTablesAsImperativeMaps" (lib/Core.ml[352,12337+12]..[352,12337+43])
                module_expr (lib/Core.ml[352,12337+44]..[352,12337+45])
                  Pmod_ident "T" (lib/Core.ml[352,12337+44]..[352,12337+45])
            module_expr (lib/Core.ml[352,12337+48]..[352,12337+49])
              Pmod_ident "P" (lib/Core.ml[352,12337+48]..[352,12337+49])
  structure_item (lib/Core.ml[354,12389+0]..[357,12434+50])
    Pstr_module
    "ForType" (lib/Core.ml[354,12389+7]..[354,12389+14])
      module_expr (lib/Core.ml[355,12404+2]..[357,12434+50])
        Pmod_functor "T" (lib/Core.ml[355,12404+3]..[355,12404+4])
        module_type (lib/Core.ml[355,12404+7]..[355,12404+11])
          Pmty_ident "TYPE" (lib/Core.ml[355,12404+7]..[355,12404+11])
        module_expr (lib/Core.ml[356,12417+2]..[357,12434+50])
          Pmod_functor "P" (lib/Core.ml[356,12417+3]..[356,12417+4])
          module_type (lib/Core.ml[356,12417+7]..[356,12417+15])
            Pmty_ident "PROPERTY" (lib/Core.ml[356,12417+7]..[356,12417+15])
          module_expr (lib/Core.ml[357,12434+7]..[357,12434+50])
            Pmod_apply
            module_expr (lib/Core.ml[357,12434+7]..[357,12434+47])
              Pmod_apply
              module_expr (lib/Core.ml[357,12434+7]..[357,12434+20])
                Pmod_ident "ForHashedType" (lib/Core.ml[357,12434+7]..[357,12434+20])
              module_expr (lib/Core.ml[357,12434+21]..[357,12434+46])
                Pmod_apply
                module_expr (lib/Core.ml[357,12434+21]..[357,12434+43])
                  Pmod_ident "Glue.TrivialHashedType" (lib/Core.ml[357,12434+21]..[357,12434+43])
                module_expr (lib/Core.ml[357,12434+44]..[357,12434+45])
                  Pmod_ident "T" (lib/Core.ml[357,12434+44]..[357,12434+45])
            module_expr (lib/Core.ml[357,12434+48]..[357,12434+49])
              Pmod_ident "P" (lib/Core.ml[357,12434+48]..[357,12434+49])
  structure_item (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
          Ppat_construct "()" (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
          None
        expression (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
          Pexp_apply
          expression (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
            Pexp_ident "Ppx_inline_test_lib.unset_lib" (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
          [
            <arg>
            Nolabel
              expression (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/Core.ml[357,12434+50]..[357,12434+50]) ghost,None)
          ]
    ]
  structure_item (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
          Ppat_construct "()" (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
          None
        expression (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
          Pexp_apply
          expression (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
            Pexp_ident "Expect_test_collector.Current_file.unset" (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
          [
            <arg>
            Nolabel
              expression (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
                Pexp_construct "()" (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
                None
          ]
    ]
  structure_item (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
          Ppat_construct "()" (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
          None
        expression (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
          Pexp_apply
          expression (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
            Pexp_ident "Ppx_bench_lib.Benchmark_accumulator.Current_libname.unset" (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
          [
            <arg>
            Nolabel
              expression (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
                Pexp_construct "()" (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
                None
          ]
    ]
  structure_item (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
          Ppat_construct "()" (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
          None
        expression (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
          Pexp_apply
          expression (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
            Pexp_ident "Ppx_module_timer_runtime.record_until" (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
          [
            <arg>
            Nolabel
              expression (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
                Pexp_ident "Ppx_module_timer_runtime.__MODULE__" (lib/Core.ml[357,12434+50]..[357,12434+50]) ghost
          ]
    ]
]

[@@@ocaml.ppx.context
  {
    tool_name = "ppx_driver";
    include_dirs = [];
    load_path = [];
    open_modules = [];
    for_package = None;
    debug = false;
    use_threads = false;
    use_vmthreads = false;
    recursive_types = false;
    principal = false;
    transparent_modules = false;
    unboxed_types = false;
    unsafe_string = false;
    cookies = [("inline_tests", "enabled"); ("library-name", "gbnf_parser")]
  }]
let () =
  Ppx_module_timer_runtime.record_start Ppx_module_timer_runtime.__MODULE__
let () =
  Ppx_bench_lib.Benchmark_accumulator.Current_libname.set "gbnf_parser"
let () =
  Expect_test_collector.Current_file.set ~absolute_filename:"lib/Core.ml"
let () = Ppx_inline_test_lib.set_lib_and_partition "gbnf_parser" "Core.ml"
open Sigs
module Make(M:IMPERATIVE_MAPS)(P:PROPERTY) =
  struct
    type variable = M.key
    type property = P.property
    type valuation = variable -> property
    type rhs = valuation -> property
    type equations = variable -> rhs
    module Graph = CoreDependencyGraph
    type node = data Graph.node
    and data = {
      rhs: rhs ;
      mutable property: property }
    let property node = (Graph.data node).property
    let lfp (eqs : equations) =
      (let module LFP =
         struct
           module Workset :
             sig
               val insert : node -> unit
               val repeat : (node -> unit) -> unit
             end =
             struct
               let workset = Queue.create ()
               let insert node = Queue.push node workset
               let repeat f =
                 while not (Queue.is_empty workset) do f (Queue.pop workset)
                   done
             end 
           let signal subject =
             List.iter
               (fun observer ->
                  Graph.clear_successors observer; Workset.insert observer)
               (Graph.predecessors subject)
           let permanent : property M.t = M.create ()
           let transient : node M.t = M.create ()
           let freeze () =
             M.iter (fun v -> fun node -> M.add v (property node) permanent)
               transient;
             M.clear transient
           let rec solve (node : node) =
             (let data = Graph.data node in
              let alive = ref true
              and subjects = ref [] in
              let request (v : variable) =
                (assert (!alive);
                 (try M.find v permanent
                  with
                  | Not_found ->
                      let subject = node_for v in
                      let p = property subject in
                      (if not (P.is_maximal p)
                       then subjects := (subject :: (!subjects));
                       p)) : property) in
              let new_property = data.rhs request in
              alive := false;
              if not (((!subjects) = []) || (P.is_maximal new_property))
              then Graph.set_successors node (!subjects);
              if not (P.equal data.property new_property)
              then (data.property <- new_property; signal node) : unit)
           and node_for (v : variable) =
             (try M.find v transient
              with
              | Not_found ->
                  let node =
                    Graph.create { rhs = (eqs v); property = P.bottom } in
                  (M.add v node transient; solve node; node) : node)
           let inactive = ref true
           let get (v : variable) =
             (try M.find v permanent
              with
              | Not_found ->
                  (assert (!inactive);
                   inactive := false;
                   (let node = node_for v in
                    Workset.repeat solve;
                    freeze ();
                    inactive := true;
                    property node)) : property)
         end in LFP.get : valuation)
  end
module ForOrderedType(T:OrderedType)(P:PROPERTY) =
  ((Make)((Glue.PersistentMapsToImperativeMaps)((Map.Make)(T))))(P)
module ForHashedType(T:HashedType)(P:PROPERTY) =
  ((Make)((Glue.HashTablesAsImperativeMaps)(T)))(P)
module ForType(T:TYPE)(P:PROPERTY) =
  ((ForHashedType)((Glue.TrivialHashedType)(T)))(P)
let () = Ppx_inline_test_lib.unset_lib "gbnf_parser"
let () = Expect_test_collector.Current_file.unset ()
let () = Ppx_bench_lib.Benchmark_accumulator.Current_libname.unset ()
let () =
  Ppx_module_timer_runtime.record_until Ppx_module_timer_runtime.__MODULE__
[
  structure_item (_none_[0,0+-1].._none_[0,0+-1]) ghost
    Tstr_attribute "ocaml.ppx.context"
    [
      structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
        Pstr_eval
        expression (_none_[0,0+-1]..[0,0+-1]) ghost
          Pexp_record
          [
            "tool_name" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_constant PConst_string("ppx_driver",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
            "include_dirs" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "load_path" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "open_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "for_package" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "None" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "debug" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_threads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_vmthreads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "recursive_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "principal" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "transparent_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unboxed_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unsafe_string" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "cookies" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                Some
                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                    Pexp_tuple
                    [
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_tuple
                        [
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_constant PConst_string("inline_tests",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                          expression (<command-line>[1,0+0]..[1,0+9])
                            Pexp_constant PConst_string("enabled",(<command-line>[1,0+1]..[1,0+8]),None)
                        ]
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                        Some
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_tuple
                            [
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_tuple
                                [
                                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                    Pexp_constant PConst_string("library-name",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                                  expression (<command-line>[1,0+0]..[1,0+13])
                                    Pexp_constant PConst_string("gbnf_parser",(<command-line>[1,0+1]..[1,0+12]),None)
                                ]
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                                None
                            ]
                    ]
          ]
          None
    ]
  structure_item (lib/Core.ml[13,893+0]..lib/Core.ml[13,893+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/Core.ml[13,893+0]..lib/Core.ml[13,893+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/Core.ml[13,893+0]..lib/Core.ml[13,893+0]) ghost
          Texp_apply
          expression (lib/Core.ml[13,893+0]..lib/Core.ml[13,893+0]) ghost
            Texp_ident "Ppx_module_timer_runtime!.record_start"
          [
            <arg>
              Nolabel
              expression (lib/Core.ml[13,893+0]..lib/Core.ml[13,893+0]) ghost
                Texp_ident "Ppx_module_timer_runtime!.__MODULE__"
          ]
    ]
  structure_item (lib/Core.ml[13,893+0]..lib/Core.ml[13,893+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/Core.ml[13,893+0]..lib/Core.ml[13,893+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/Core.ml[13,893+0]..lib/Core.ml[13,893+0]) ghost
          Texp_apply
          expression (lib/Core.ml[13,893+0]..lib/Core.ml[13,893+0]) ghost
            Texp_ident "Ppx_bench_lib!.Benchmark_accumulator.Current_libname.set"
          [
            <arg>
              Nolabel
              expression (lib/Core.ml[13,893+0]..lib/Core.ml[13,893+0]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/Core.ml[13,893+0]..lib/Core.ml[13,893+0]) ghost,None)
          ]
    ]
  structure_item (lib/Core.ml[13,893+0]..lib/Core.ml[13,893+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/Core.ml[13,893+0]..lib/Core.ml[13,893+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/Core.ml[13,893+0]..lib/Core.ml[13,893+0]) ghost
          Texp_apply
          expression (lib/Core.ml[13,893+0]..lib/Core.ml[13,893+0]) ghost
            Texp_ident "Expect_test_collector!.Current_file.set"
          [
            <arg>
              Labelled "absolute_filename"
              expression (lib/Core.ml[13,893+0]..lib/Core.ml[13,893+0]) ghost
                Texp_constant Const_string("lib/Core.ml",(lib/Core.ml[13,893+0]..lib/Core.ml[13,893+0]) ghost,None)
          ]
    ]
  structure_item (lib/Core.ml[13,893+0]..lib/Core.ml[13,893+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/Core.ml[13,893+0]..lib/Core.ml[13,893+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/Core.ml[13,893+0]..lib/Core.ml[13,893+0]) ghost
          Texp_apply
          expression (lib/Core.ml[13,893+0]..lib/Core.ml[13,893+0]) ghost
            Texp_ident "Ppx_inline_test_lib!.set_lib_and_partition"
          [
            <arg>
              Nolabel
              expression (lib/Core.ml[13,893+0]..lib/Core.ml[13,893+0]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/Core.ml[13,893+0]..lib/Core.ml[13,893+0]) ghost,None)
            <arg>
              Nolabel
              expression (lib/Core.ml[13,893+0]..lib/Core.ml[13,893+0]) ghost
                Texp_constant Const_string("Core.ml",(lib/Core.ml[13,893+0]..lib/Core.ml[13,893+0]) ghost,None)
          ]
    ]
  structure_item (lib/Core.ml[13,893+0]..lib/Core.ml[13,893+9])
    Tstr_open Fresh
    module_expr (lib/Core.ml[13,893+5]..lib/Core.ml[13,893+9])
      Tmod_ident "Gbnf_parser!.Sigs"
  structure_item (lib/Core.ml[20,1103+0]..lib/Core.ml[338,12030+3])
    Tstr_module
    Make/1363
      module_expr (lib/Core.ml[21,1115+2]..lib/Core.ml[338,12030+3])
        Tmod_functor "M/1177"
        module_type (lib/Core.ml[21,1115+7]..lib/Core.ml[21,1115+22])
          Tmty_ident "Gbnf_parser!.Sigs.IMPERATIVE_MAPS"
        module_expr (lib/Core.ml[22,1139+2]..lib/Core.ml[338,12030+3])
          Tmod_functor "P/1182"
          module_type (lib/Core.ml[22,1139+7]..lib/Core.ml[22,1139+15])
            Tmty_ident "Gbnf_parser!.Sigs.PROPERTY"
          module_expr (lib/Core.ml[23,1156+2]..lib/Core.ml[338,12030+3])
            Tmod_structure
            [
              structure_item (lib/Core.ml[25,1166+0]..lib/Core.ml[26,1182+9])
                Tstr_type Rec
                [
                  type_declaration variable/1183 (lib/Core.ml[25,1166+0]..lib/Core.ml[26,1182+9])
                    ptype_params =
                      []
                    ptype_cstrs =
                      []
                    ptype_kind =
                      Ttype_abstract
                    ptype_private = Public
                    ptype_manifest =
                      Some
                        core_type (lib/Core.ml[26,1182+4]..lib/Core.ml[26,1182+9])
                          Ttyp_constr "M/1177.key"
                          []
                ]
              structure_item (lib/Core.ml[28,1193+0]..lib/Core.ml[29,1209+14])
                Tstr_type Rec
                [
                  type_declaration property/1184 (lib/Core.ml[28,1193+0]..lib/Core.ml[29,1209+14])
                    ptype_params =
                      []
                    ptype_cstrs =
                      []
                    ptype_kind =
                      Ttype_abstract
                    ptype_private = Public
                    ptype_manifest =
                      Some
                        core_type (lib/Core.ml[29,1209+4]..lib/Core.ml[29,1209+14])
                          Ttyp_constr "P/1182.property"
                          []
                ]
              structure_item (lib/Core.ml[31,1225+0]..lib/Core.ml[32,1242+24])
                Tstr_type Rec
                [
                  type_declaration valuation/1185 (lib/Core.ml[31,1225+0]..lib/Core.ml[32,1242+24])
                    ptype_params =
                      []
                    ptype_cstrs =
                      []
                    ptype_kind =
                      Ttype_abstract
                    ptype_private = Public
                    ptype_manifest =
                      Some
                        core_type (lib/Core.ml[32,1242+4]..lib/Core.ml[32,1242+24])
                          Ttyp_arrow
                          Nolabel
                          core_type (lib/Core.ml[32,1242+4]..lib/Core.ml[32,1242+12])
                            Ttyp_constr "variable/1183"
                            []
                          core_type (lib/Core.ml[32,1242+16]..lib/Core.ml[32,1242+24])
                            Ttyp_constr "property/1184"
                            []
                ]
              structure_item (lib/Core.ml[34,1268+0]..lib/Core.ml[35,1279+25])
                Tstr_type Rec
                [
                  type_declaration rhs/1186 (lib/Core.ml[34,1268+0]..lib/Core.ml[35,1279+25])
                    ptype_params =
                      []
                    ptype_cstrs =
                      []
                    ptype_kind =
                      Ttype_abstract
                    ptype_private = Public
                    ptype_manifest =
                      Some
                        core_type (lib/Core.ml[35,1279+4]..lib/Core.ml[35,1279+25])
                          Ttyp_arrow
                          Nolabel
                          core_type (lib/Core.ml[35,1279+4]..lib/Core.ml[35,1279+13])
                            Ttyp_constr "valuation/1185"
                            []
                          core_type (lib/Core.ml[35,1279+17]..lib/Core.ml[35,1279+25])
                            Ttyp_constr "property/1184"
                            []
                ]
              structure_item (lib/Core.ml[37,1306+0]..lib/Core.ml[38,1323+19])
                Tstr_type Rec
                [
                  type_declaration equations/1187 (lib/Core.ml[37,1306+0]..lib/Core.ml[38,1323+19])
                    ptype_params =
                      []
                    ptype_cstrs =
                      []
                    ptype_kind =
                      Ttype_abstract
                    ptype_private = Public
                    ptype_manifest =
                      Some
                        core_type (lib/Core.ml[38,1323+4]..lib/Core.ml[38,1323+19])
                          Ttyp_arrow
                          Nolabel
                          core_type (lib/Core.ml[38,1323+4]..lib/Core.ml[38,1323+12])
                            Ttyp_constr "variable/1183"
                            []
                          core_type (lib/Core.ml[38,1323+16]..lib/Core.ml[38,1323+19])
                            Ttyp_constr "rhs/1186"
                            []
                ]
              structure_item (lib/Core.ml[49,1740+0]..lib/Core.ml[50,1755+21])
                Tstr_module
                Graph/1188
                  module_expr (lib/Core.ml[50,1755+2]..lib/Core.ml[50,1755+21])
                    Tmod_ident "Gbnf_parser!.CoreDependencyGraph"
              structure_item (lib/Core.ml[52,1778+0]..lib/Core.ml[70,2260+1])
                Tstr_type Rec
                [
                  type_declaration node/1189 (lib/Core.ml[52,1778+0]..lib/Core.ml[53,1790+19])
                    ptype_params =
                      []
                    ptype_cstrs =
                      []
                    ptype_kind =
                      Ttype_abstract
                    ptype_private = Public
                    ptype_manifest =
                      Some
                        core_type (lib/Core.ml[53,1790+4]..lib/Core.ml[53,1790+19])
                          Ttyp_constr "Graph/1188.node"
                          [
                            core_type (lib/Core.ml[53,1790+4]..lib/Core.ml[53,1790+8])
                              Ttyp_constr "data/1190"
                              []
                          ]
                  type_declaration data/1190 (lib/Core.ml[58,1922+0]..lib/Core.ml[70,2260+1])
                    ptype_params =
                      []
                    ptype_cstrs =
                      []
                    ptype_kind =
                      Ttype_record
                        [
                          (lib/Core.ml[63,2111+2]..lib/Core.ml[63,2111+11])
                            Immutable
                            rhs/1200                            core_type (lib/Core.ml[63,2111+7]..lib/Core.ml[63,2111+10])
                              Ttyp_poly
                              core_type (lib/Core.ml[63,2111+7]..lib/Core.ml[63,2111+10])
                                Ttyp_constr "rhs/1186"
                                []
                          (lib/Core.ml[67,2210+2]..lib/Core.ml[67,2210+29])
                            Mutable
                            property/1201                            core_type (lib/Core.ml[67,2210+20]..lib/Core.ml[67,2210+28])
                              Ttyp_poly
                              core_type (lib/Core.ml[67,2210+20]..lib/Core.ml[67,2210+28])
                                Ttyp_constr "property/1184"
                                []
                        ]
                    ptype_private = Public
                    ptype_manifest =
                      None
                ]
              structure_item (lib/Core.ml[74,2326+0]..lib/Core.ml[75,2346+28])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (lib/Core.ml[74,2326+4]..lib/Core.ml[74,2326+12])
                      Tpat_var "property/1211"
                    expression (lib/Core.ml[74,2326+13]..lib/Core.ml[75,2346+28]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/Core.ml[74,2326+13]..lib/Core.ml[74,2326+17])
                            Tpat_var "node/1213"
                          expression (lib/Core.ml[75,2346+2]..lib/Core.ml[75,2346+28])
                            Texp_field
                            expression (lib/Core.ml[75,2346+2]..lib/Core.ml[75,2346+19])
                              Texp_apply
                              expression (lib/Core.ml[75,2346+3]..lib/Core.ml[75,2346+13])
                                Texp_ident "Graph/1188.data"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/Core.ml[75,2346+14]..lib/Core.ml[75,2346+18])
                                    Texp_ident "node/1213"
                              ]
                            "property"
                      ]
                ]
              structure_item (lib/Core.ml[82,2605+0]..lib/Core.ml[336,12018+10])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (lib/Core.ml[82,2605+4]..lib/Core.ml[82,2605+7])
                      Tpat_var "lfp/1214"
                    expression (lib/Core.ml[82,2605+8]..lib/Core.ml[336,12018+10]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/Core.ml[82,2605+9]..lib/Core.ml[82,2605+12])
                            extra
                              Tpat_extra_constraint
                              core_type (lib/Core.ml[82,2605+15]..lib/Core.ml[82,2605+24])
                                Ttyp_constr "equations/1187"
                                []
                            Tpat_alias "eqs/1216"
                            pattern (lib/Core.ml[82,2605+9]..lib/Core.ml[82,2605+12])
                              Tpat_any
                          expression (lib/Core.ml[83,2645+2]..lib/Core.ml[336,12018+10])
                            extra
                              Texp_constraint
                              core_type (lib/Core.ml[82,2605+28]..lib/Core.ml[82,2605+37])
                                Ttyp_constr "valuation/1185"
                                []
                            Texp_letmodule "LFP/1362"
                            module_expr (lib/Core.ml[83,2645+19]..lib/Core.ml[335,12014+3])
                              Tmod_structure
                              [
                                structure_item (lib/Core.ml[96,3074+0]..lib/Core.ml[124,3659+3])
                                  Tstr_module
                                  Workset/1268
                                    module_expr (lib/Core.ml[96,3074+15]..lib/Core.ml[124,3659+3])
                                      Tmod_constraint
                                      module_expr (lib/Core.ml[109,3434+2]..lib/Core.ml[124,3659+3])
                                        Tmod_structure
                                        [
                                          structure_item (lib/Core.ml[113,3477+2]..lib/Core.ml[114,3493+18])
                                            Tstr_value Nonrec
                                            [
                                              <def>
                                                pattern (lib/Core.ml[113,3477+6]..lib/Core.ml[113,3477+13])
                                                  Tpat_var "workset/1217"
                                                expression (lib/Core.ml[114,3493+4]..lib/Core.ml[114,3493+18])
                                                  Texp_apply
                                                  expression (lib/Core.ml[114,3493+4]..lib/Core.ml[114,3493+16])
                                                    Texp_ident "Stdlib!.Queue.create"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/Core.ml[114,3493+16]..lib/Core.ml[114,3493+18])
                                                        Texp_construct "()"
                                                        []
                                                  ]
                                            ]
                                          structure_item (lib/Core.ml[116,3513+2]..lib/Core.ml[117,3533+27])
                                            Tstr_value Nonrec
                                            [
                                              <def>
                                                pattern (lib/Core.ml[116,3513+6]..lib/Core.ml[116,3513+12])
                                                  Tpat_var "insert/1260"
                                                expression (lib/Core.ml[116,3513+13]..lib/Core.ml[117,3533+27]) ghost
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (lib/Core.ml[116,3513+13]..lib/Core.ml[116,3513+17])
                                                        Tpat_var "node/1262"
                                                      expression (lib/Core.ml[117,3533+4]..lib/Core.ml[117,3533+27])
                                                        Texp_apply
                                                        expression (lib/Core.ml[117,3533+4]..lib/Core.ml[117,3533+14])
                                                          Texp_ident "Stdlib!.Queue.push"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/Core.ml[117,3533+15]..lib/Core.ml[117,3533+19])
                                                              Texp_ident "node/1262"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/Core.ml[117,3533+20]..lib/Core.ml[117,3533+27])
                                                              Texp_ident "workset/1217"
                                                        ]
                                                  ]
                                            ]
                                          structure_item (lib/Core.ml[119,3562+2]..lib/Core.ml[122,3649+8])
                                            Tstr_value Nonrec
                                            [
                                              <def>
                                                pattern (lib/Core.ml[119,3562+6]..lib/Core.ml[119,3562+12])
                                                  Tpat_var "repeat/1263"
                                                expression (lib/Core.ml[119,3562+13]..lib/Core.ml[122,3649+8]) ghost
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (lib/Core.ml[119,3562+13]..lib/Core.ml[119,3562+14])
                                                        Tpat_var "f/1265"
                                                      expression (lib/Core.ml[120,3579+4]..lib/Core.ml[122,3649+8])
                                                        Texp_while
                                                        expression (lib/Core.ml[120,3579+10]..lib/Core.ml[120,3579+38])
                                                          Texp_apply
                                                          expression (lib/Core.ml[120,3579+10]..lib/Core.ml[120,3579+13])
                                                            Texp_ident "Stdlib!.not"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/Core.ml[120,3579+14]..lib/Core.ml[120,3579+38])
                                                                Texp_apply
                                                                expression (lib/Core.ml[120,3579+15]..lib/Core.ml[120,3579+29])
                                                                  Texp_ident "Stdlib!.Queue.is_empty"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/Core.ml[120,3579+30]..lib/Core.ml[120,3579+37])
                                                                      Texp_ident "workset/1217"
                                                                ]
                                                          ]
                                                        expression (lib/Core.ml[121,3621+6]..lib/Core.ml[121,3621+27])
                                                          Texp_apply
                                                          expression (lib/Core.ml[121,3621+6]..lib/Core.ml[121,3621+7])
                                                            Texp_ident "f/1265"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/Core.ml[121,3621+8]..lib/Core.ml[121,3621+27])
                                                                Texp_apply
                                                                expression (lib/Core.ml[121,3621+9]..lib/Core.ml[121,3621+18])
                                                                  Texp_ident "Stdlib!.Queue.pop"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/Core.ml[121,3621+19]..lib/Core.ml[121,3621+26])
                                                                      Texp_ident "workset/1217"
                                                                ]
                                                          ]
                                                  ]
                                            ]
                                        ]
                                      module_type (lib/Core.ml[96,3074+17]..lib/Core.ml[108,3430+3])
                                        Tmty_signature
                                        [
                                          signature_item (lib/Core.ml[100,3188+2]..lib/Core.ml[100,3188+26])
                                            Tsig_value
                                            value_description insert/1266 (lib/Core.ml[100,3188+2]..lib/Core.ml[100,3188+26])
                                              core_type (lib/Core.ml[100,3188+14]..lib/Core.ml[100,3188+26])
                                                Ttyp_arrow
                                                Nolabel
                                                core_type (lib/Core.ml[100,3188+14]..lib/Core.ml[100,3188+18])
                                                  Ttyp_constr "node/1189"
                                                  []
                                                core_type (lib/Core.ml[100,3188+22]..lib/Core.ml[100,3188+26])
                                                  Ttyp_constr "unit/6!"
                                                  []
                                              []
                                          signature_item (lib/Core.ml[105,3373+2]..lib/Core.ml[105,3373+36])
                                            Tsig_value
                                            value_description repeat/1267 (lib/Core.ml[105,3373+2]..lib/Core.ml[105,3373+36])
                                              core_type (lib/Core.ml[105,3373+14]..lib/Core.ml[105,3373+36])
                                                Ttyp_arrow
                                                Nolabel
                                                core_type (lib/Core.ml[105,3373+15]..lib/Core.ml[105,3373+27])
                                                  Ttyp_arrow
                                                  Nolabel
                                                  core_type (lib/Core.ml[105,3373+15]..lib/Core.ml[105,3373+19])
                                                    Ttyp_constr "node/1189"
                                                    []
                                                  core_type (lib/Core.ml[105,3373+23]..lib/Core.ml[105,3373+27])
                                                    Ttyp_constr "unit/6!"
                                                    []
                                                core_type (lib/Core.ml[105,3373+32]..lib/Core.ml[105,3373+36])
                                                  Ttyp_constr "unit/6!"
                                                  []
                                              []
                                        ]
                                structure_item (lib/Core.ml[139,4269+0]..lib/Core.ml[143,4384+32])
                                  Tstr_value Nonrec
                                  [
                                    <def>
                                      pattern (lib/Core.ml[139,4269+4]..lib/Core.ml[139,4269+10])
                                        Tpat_var "signal/1269"
                                      expression (lib/Core.ml[139,4269+11]..lib/Core.ml[143,4384+32]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/Core.ml[139,4269+11]..lib/Core.ml[139,4269+18])
                                              Tpat_var "subject/1271"
                                            expression (lib/Core.ml[140,4290+2]..lib/Core.ml[143,4384+32])
                                              Texp_apply
                                              expression (lib/Core.ml[140,4290+2]..lib/Core.ml[140,4290+11])
                                                Texp_ident "Stdlib!.List.iter"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/Core.ml[140,4290+12]..lib/Core.ml[143,4384+3])
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (lib/Core.ml[140,4290+17]..lib/Core.ml[140,4290+25])
                                                          Tpat_var "observer/1335"
                                                        expression (lib/Core.ml[141,4319+4]..lib/Core.ml[142,4356+27])
                                                          Texp_sequence
                                                          expression (lib/Core.ml[141,4319+4]..lib/Core.ml[141,4319+35])
                                                            Texp_apply
                                                            expression (lib/Core.ml[141,4319+4]..lib/Core.ml[141,4319+26])
                                                              Texp_ident "Graph/1188.clear_successors"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/Core.ml[141,4319+27]..lib/Core.ml[141,4319+35])
                                                                  Texp_ident "observer/1335"
                                                            ]
                                                          expression (lib/Core.ml[142,4356+4]..lib/Core.ml[142,4356+27])
                                                            Texp_apply
                                                            expression (lib/Core.ml[142,4356+4]..lib/Core.ml[142,4356+18])
                                                              Texp_ident "Workset/1268.insert"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/Core.ml[142,4356+19]..lib/Core.ml[142,4356+27])
                                                                  Texp_ident "observer/1335"
                                                            ]
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (lib/Core.ml[143,4384+4]..lib/Core.ml[143,4384+32])
                                                    Texp_apply
                                                    expression (lib/Core.ml[143,4384+5]..lib/Core.ml[143,4384+23])
                                                      Texp_ident "Graph/1188.predecessors"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/Core.ml[143,4384+24]..lib/Core.ml[143,4384+31])
                                                          Texp_ident "subject/1271"
                                                    ]
                                              ]
                                        ]
                                  ]
                                structure_item (lib/Core.ml[154,4740+0]..lib/Core.ml[155,4771+12])
                                  Tstr_value Nonrec
                                  [
                                    <def>
                                      pattern (lib/Core.ml[154,4740+4]..lib/Core.ml[154,4740+13])
                                        extra
                                          Tpat_extra_constraint
                                          core_type (lib/Core.ml[154,4740+16]..lib/Core.ml[154,4740+28]) ghost
                                            Ttyp_poly
                                            core_type (lib/Core.ml[154,4740+16]..lib/Core.ml[154,4740+28])
                                              Ttyp_constr "M/1177.t"
                                              [
                                                core_type (lib/Core.ml[154,4740+16]..lib/Core.ml[154,4740+24])
                                                  Ttyp_constr "property/1184"
                                                  []
                                              ]
                                        Tpat_var "permanent/1336"
                                      expression (lib/Core.ml[155,4771+2]..lib/Core.ml[155,4771+12])
                                        extra
                                          Texp_constraint
                                          core_type (lib/Core.ml[154,4740+16]..lib/Core.ml[154,4740+28])
                                            Ttyp_constr "M/1177.t"
                                            [
                                              core_type (lib/Core.ml[154,4740+16]..lib/Core.ml[154,4740+24])
                                                Ttyp_constr "property/1184"
                                                []
                                            ]
                                        Texp_apply
                                        expression (lib/Core.ml[155,4771+2]..lib/Core.ml[155,4771+10])
                                          Texp_ident "M/1177.create"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/Core.ml[155,4771+10]..lib/Core.ml[155,4771+12])
                                              Texp_construct "()"
                                              []
                                        ]
                                  ]
                                structure_item (lib/Core.ml[163,5122+0]..lib/Core.ml[164,5149+12])
                                  Tstr_value Nonrec
                                  [
                                    <def>
                                      pattern (lib/Core.ml[163,5122+4]..lib/Core.ml[163,5122+13])
                                        extra
                                          Tpat_extra_constraint
                                          core_type (lib/Core.ml[163,5122+16]..lib/Core.ml[163,5122+24]) ghost
                                            Ttyp_poly
                                            core_type (lib/Core.ml[163,5122+16]..lib/Core.ml[163,5122+24])
                                              Ttyp_constr "M/1177.t"
                                              [
                                                core_type (lib/Core.ml[163,5122+16]..lib/Core.ml[163,5122+20])
                                                  Ttyp_constr "node/1189"
                                                  []
                                              ]
                                        Tpat_var "transient/1337"
                                      expression (lib/Core.ml[164,5149+2]..lib/Core.ml[164,5149+12])
                                        extra
                                          Texp_constraint
                                          core_type (lib/Core.ml[163,5122+16]..lib/Core.ml[163,5122+24])
                                            Ttyp_constr "M/1177.t"
                                            [
                                              core_type (lib/Core.ml[163,5122+16]..lib/Core.ml[163,5122+20])
                                                Ttyp_constr "node/1189"
                                                []
                                            ]
                                        Texp_apply
                                        expression (lib/Core.ml[164,5149+2]..lib/Core.ml[164,5149+10])
                                          Texp_ident "M/1177.create"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/Core.ml[164,5149+10]..lib/Core.ml[164,5149+12])
                                              Texp_construct "()"
                                              []
                                        ]
                                  ]
                                structure_item (lib/Core.ml[170,5337+0]..lib/Core.ml[174,5430+19])
                                  Tstr_value Nonrec
                                  [
                                    <def>
                                      pattern (lib/Core.ml[170,5337+4]..lib/Core.ml[170,5337+10])
                                        Tpat_var "freeze/1338"
                                      expression (lib/Core.ml[170,5337+11]..lib/Core.ml[174,5430+19]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/Core.ml[170,5337+11]..lib/Core.ml[170,5337+13])
                                              Tpat_construct "()"
                                              []
                                              None
                                            expression (lib/Core.ml[171,5353+2]..lib/Core.ml[174,5430+19])
                                              Texp_sequence
                                              expression (lib/Core.ml[171,5353+2]..lib/Core.ml[173,5415+13])
                                                Texp_apply
                                                expression (lib/Core.ml[171,5353+2]..lib/Core.ml[171,5353+8])
                                                  Texp_ident "M/1177.iter"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/Core.ml[171,5353+9]..lib/Core.ml[173,5415+3])
                                                      Texp_function
                                                      Nolabel
                                                      [
                                                        <case>
                                                          pattern (lib/Core.ml[171,5353+14]..lib/Core.ml[171,5353+15])
                                                            Tpat_var "v/1340"
                                                          expression (lib/Core.ml[171,5353+16]..lib/Core.ml[172,5377+37]) ghost
                                                            Texp_function
                                                            Nolabel
                                                            [
                                                              <case>
                                                                pattern (lib/Core.ml[171,5353+16]..lib/Core.ml[171,5353+20])
                                                                  Tpat_var "node/1341"
                                                                expression (lib/Core.ml[172,5377+4]..lib/Core.ml[172,5377+37])
                                                                  Texp_apply
                                                                  expression (lib/Core.ml[172,5377+4]..lib/Core.ml[172,5377+9])
                                                                    Texp_ident "M/1177.add"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/Core.ml[172,5377+10]..lib/Core.ml[172,5377+11])
                                                                        Texp_ident "v/1340"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/Core.ml[172,5377+12]..lib/Core.ml[172,5377+27])
                                                                        Texp_apply
                                                                        expression (lib/Core.ml[172,5377+13]..lib/Core.ml[172,5377+21])
                                                                          Texp_ident "property/1211"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (lib/Core.ml[172,5377+22]..lib/Core.ml[172,5377+26])
                                                                              Texp_ident "node/1341"
                                                                        ]
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/Core.ml[172,5377+28]..lib/Core.ml[172,5377+37])
                                                                        Texp_ident "permanent/1336"
                                                                  ]
                                                            ]
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/Core.ml[173,5415+4]..lib/Core.ml[173,5415+13])
                                                      Texp_ident "transient/1337"
                                                ]
                                              expression (lib/Core.ml[174,5430+2]..lib/Core.ml[174,5430+19])
                                                Texp_apply
                                                expression (lib/Core.ml[174,5430+2]..lib/Core.ml[174,5430+9])
                                                  Texp_ident "M/1177.clear"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/Core.ml[174,5430+10]..lib/Core.ml[174,5430+19])
                                                      Texp_ident "transient/1337"
                                                ]
                                        ]
                                  ]
                                structure_item (lib/Core.ml[196,6344+0]..lib/Core.ml[308,11404+8])
                                  Tstr_value Rec
                                  [
                                    <def>
                                      pattern (lib/Core.ml[196,6344+8]..lib/Core.ml[196,6344+13])
                                        Tpat_var "solve/1343"
                                      expression (lib/Core.ml[196,6344+14]..lib/Core.ml[273,9520+5]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/Core.ml[196,6344+15]..lib/Core.ml[196,6344+19])
                                              extra
                                                Tpat_extra_constraint
                                                core_type (lib/Core.ml[196,6344+22]..lib/Core.ml[196,6344+26])
                                                  Ttyp_constr "node/1189"
                                                  []
                                              Tpat_alias "node/1345"
                                              pattern (lib/Core.ml[196,6344+15]..lib/Core.ml[196,6344+19])
                                                Tpat_any
                                            expression (lib/Core.ml[199,6437+2]..lib/Core.ml[273,9520+5])
                                              extra
                                                Texp_constraint
                                                core_type (lib/Core.ml[196,6344+30]..lib/Core.ml[196,6344+34])
                                                  Ttyp_constr "unit/6!"
                                                  []
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (lib/Core.ml[199,6437+6]..lib/Core.ml[199,6437+10])
                                                    Tpat_var "data/1346"
                                                  expression (lib/Core.ml[199,6437+13]..lib/Core.ml[199,6437+28])
                                                    Texp_apply
                                                    expression (lib/Core.ml[199,6437+13]..lib/Core.ml[199,6437+23])
                                                      Texp_ident "Graph/1188.data"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/Core.ml[199,6437+24]..lib/Core.ml[199,6437+28])
                                                          Texp_ident "node/1345"
                                                    ]
                                              ]
                                              expression (lib/Core.ml[209,6984+2]..lib/Core.ml[273,9520+5])
                                                Texp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (lib/Core.ml[209,6984+6]..lib/Core.ml[209,6984+11])
                                                      Tpat_var "alive/1347"
                                                    expression (lib/Core.ml[209,6984+14]..lib/Core.ml[209,6984+22])
                                                      Texp_apply
                                                      expression (lib/Core.ml[209,6984+14]..lib/Core.ml[209,6984+17])
                                                        Texp_ident "Stdlib!.ref"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/Core.ml[209,6984+18]..lib/Core.ml[209,6984+22])
                                                            Texp_construct "true"
                                                            []
                                                      ]
                                                  <def>
                                                    pattern (lib/Core.ml[210,7007+6]..lib/Core.ml[210,7007+14])
                                                      Tpat_var "subjects/1348"
                                                    expression (lib/Core.ml[210,7007+17]..lib/Core.ml[210,7007+23])
                                                      Texp_apply
                                                      expression (lib/Core.ml[210,7007+17]..lib/Core.ml[210,7007+20])
                                                        Texp_ident "Stdlib!.ref"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/Core.ml[210,7007+21]..lib/Core.ml[210,7007+23])
                                                            Texp_construct "[]"
                                                            []
                                                      ]
                                                ]
                                                expression (lib/Core.ml[215,7253+2]..lib/Core.ml[273,9520+5])
                                                  Texp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (lib/Core.ml[215,7253+6]..lib/Core.ml[215,7253+13])
                                                        Tpat_var "request/1349"
                                                      expression (lib/Core.ml[215,7253+14]..lib/Core.ml[228,7608+7]) ghost
                                                        Texp_function
                                                        Nolabel
                                                        [
                                                          <case>
                                                            pattern (lib/Core.ml[215,7253+15]..lib/Core.ml[215,7253+16])
                                                              extra
                                                                Tpat_extra_constraint
                                                                core_type (lib/Core.ml[215,7253+19]..lib/Core.ml[215,7253+27])
                                                                  Ttyp_constr "variable/1183"
                                                                  []
                                                              Tpat_alias "v/1351"
                                                              pattern (lib/Core.ml[215,7253+15]..lib/Core.ml[215,7253+16])
                                                                Tpat_any
                                                            expression (lib/Core.ml[216,7295+4]..lib/Core.ml[228,7608+7])
                                                              extra
                                                                Texp_constraint
                                                                core_type (lib/Core.ml[215,7253+31]..lib/Core.ml[215,7253+39])
                                                                  Ttyp_constr "property/1184"
                                                                  []
                                                              Texp_sequence
                                                              expression (lib/Core.ml[216,7295+4]..lib/Core.ml[216,7295+17])
                                                                Texp_assert                                                                expression (lib/Core.ml[216,7295+11]..lib/Core.ml[216,7295+17])
                                                                  Texp_apply
                                                                  expression (lib/Core.ml[216,7295+11]..lib/Core.ml[216,7295+12])
                                                                    Texp_ident "Stdlib!.!"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/Core.ml[216,7295+12]..lib/Core.ml[216,7295+17])
                                                                        Texp_ident "alive/1347"
                                                                  ]
                                                              expression (lib/Core.ml[217,7314+4]..lib/Core.ml[228,7608+7])
                                                                Texp_try
                                                                expression (lib/Core.ml[218,7322+6]..lib/Core.ml[218,7322+24])
                                                                  Texp_apply
                                                                  expression (lib/Core.ml[218,7322+6]..lib/Core.ml[218,7322+12])
                                                                    Texp_ident "M/1177.find"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/Core.ml[218,7322+13]..lib/Core.ml[218,7322+14])
                                                                        Texp_ident "v/1351"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/Core.ml[218,7322+15]..lib/Core.ml[218,7322+24])
                                                                        Texp_ident "permanent/1336"
                                                                  ]
                                                                [
                                                                  <case>
                                                                    pattern (lib/Core.ml[219,7347+9]..lib/Core.ml[219,7347+18])
                                                                      Tpat_construct "Not_found"
                                                                      []
                                                                      None
                                                                    expression (lib/Core.ml[220,7369+6]..lib/Core.ml[228,7608+7])
                                                                      Texp_let Nonrec
                                                                      [
                                                                        <def>
                                                                          pattern (lib/Core.ml[220,7369+10]..lib/Core.ml[220,7369+17])
                                                                            Tpat_var "subject/1352"
                                                                          expression (lib/Core.ml[220,7369+20]..lib/Core.ml[220,7369+30])
                                                                            Texp_apply
                                                                            expression (lib/Core.ml[220,7369+20]..lib/Core.ml[220,7369+28])
                                                                              Texp_ident "node_for/1344"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (lib/Core.ml[220,7369+29]..lib/Core.ml[220,7369+30])
                                                                                  Texp_ident "v/1351"
                                                                            ]
                                                                      ]
                                                                      expression (lib/Core.ml[225,7497+6]..lib/Core.ml[228,7608+7])
                                                                        Texp_let Nonrec
                                                                        [
                                                                          <def>
                                                                            pattern (lib/Core.ml[225,7497+10]..lib/Core.ml[225,7497+11])
                                                                              Tpat_var "p/1353"
                                                                            expression (lib/Core.ml[225,7497+14]..lib/Core.ml[225,7497+30])
                                                                              Texp_apply
                                                                              expression (lib/Core.ml[225,7497+14]..lib/Core.ml[225,7497+22])
                                                                                Texp_ident "property/1211"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (lib/Core.ml[225,7497+23]..lib/Core.ml[225,7497+30])
                                                                                    Texp_ident "subject/1352"
                                                                              ]
                                                                        ]
                                                                        expression (lib/Core.ml[226,7531+6]..lib/Core.ml[228,7608+7])
                                                                          Texp_sequence
                                                                          expression (lib/Core.ml[226,7531+6]..lib/Core.ml[227,7566+40])
                                                                            Texp_ifthenelse
                                                                            expression (lib/Core.ml[226,7531+9]..lib/Core.ml[226,7531+29])
                                                                              Texp_apply
                                                                              expression (lib/Core.ml[226,7531+9]..lib/Core.ml[226,7531+12])
                                                                                Texp_ident "Stdlib!.not"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (lib/Core.ml[226,7531+13]..lib/Core.ml[226,7531+29])
                                                                                    Texp_apply
                                                                                    expression (lib/Core.ml[226,7531+14]..lib/Core.ml[226,7531+26])
                                                                                      Texp_ident "P/1182.is_maximal"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (lib/Core.ml[226,7531+27]..lib/Core.ml[226,7531+28])
                                                                                          Texp_ident "p/1353"
                                                                                    ]
                                                                              ]
                                                                            expression (lib/Core.ml[227,7566+8]..lib/Core.ml[227,7566+40])
                                                                              Texp_apply
                                                                              expression (lib/Core.ml[227,7566+17]..lib/Core.ml[227,7566+19])
                                                                                Texp_ident "Stdlib!.:="
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (lib/Core.ml[227,7566+8]..lib/Core.ml[227,7566+16])
                                                                                    Texp_ident "subjects/1348"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (lib/Core.ml[227,7566+20]..lib/Core.ml[227,7566+40])
                                                                                    Texp_construct "::"
                                                                                    [
                                                                                      expression (lib/Core.ml[227,7566+20]..lib/Core.ml[227,7566+27])
                                                                                        Texp_ident "subject/1352"
                                                                                      expression (lib/Core.ml[227,7566+31]..lib/Core.ml[227,7566+40])
                                                                                        Texp_apply
                                                                                        expression (lib/Core.ml[227,7566+31]..lib/Core.ml[227,7566+32])
                                                                                          Texp_ident "Stdlib!.!"
                                                                                        [
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (lib/Core.ml[227,7566+32]..lib/Core.ml[227,7566+40])
                                                                                              Texp_ident "subjects/1348"
                                                                                        ]
                                                                                    ]
                                                                              ]
                                                                            None
                                                                          expression (lib/Core.ml[228,7608+6]..lib/Core.ml[228,7608+7])
                                                                            Texp_ident "p/1353"
                                                                ]
                                                        ]
                                                  ]
                                                  expression (lib/Core.ml[233,7674+2]..lib/Core.ml[273,9520+5])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (lib/Core.ml[233,7674+6]..lib/Core.ml[233,7674+18])
                                                          Tpat_var "new_property/1354"
                                                        expression (lib/Core.ml[233,7674+21]..lib/Core.ml[233,7674+37])
                                                          Texp_apply
                                                          expression (lib/Core.ml[233,7674+21]..lib/Core.ml[233,7674+29])
                                                            Texp_field
                                                            expression (lib/Core.ml[233,7674+21]..lib/Core.ml[233,7674+25])
                                                              Texp_ident "data/1346"
                                                            "rhs"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/Core.ml[233,7674+30]..lib/Core.ml[233,7674+37])
                                                                Texp_ident "request/1349"
                                                          ]
                                                    ]
                                                    expression (lib/Core.ml[237,7810+2]..lib/Core.ml[273,9520+5])
                                                      Texp_sequence
                                                      expression (lib/Core.ml[237,7810+2]..lib/Core.ml[237,7810+16])
                                                        Texp_apply
                                                        expression (lib/Core.ml[237,7810+8]..lib/Core.ml[237,7810+10])
                                                          Texp_ident "Stdlib!.:="
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/Core.ml[237,7810+2]..lib/Core.ml[237,7810+7])
                                                              Texp_ident "alive/1347"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/Core.ml[237,7810+11]..lib/Core.ml[237,7810+16])
                                                              Texp_construct "false"
                                                              []
                                                        ]
                                                      expression (lib/Core.ml[264,9160+2]..lib/Core.ml[273,9520+5])
                                                        Texp_sequence
                                                        expression (lib/Core.ml[264,9160+2]..lib/Core.ml[265,9220+39])
                                                          Texp_ifthenelse
                                                          expression (lib/Core.ml[264,9160+5]..lib/Core.ml[264,9160+54])
                                                            Texp_apply
                                                            expression (lib/Core.ml[264,9160+5]..lib/Core.ml[264,9160+8])
                                                              Texp_ident "Stdlib!.not"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/Core.ml[264,9160+9]..lib/Core.ml[264,9160+54])
                                                                  Texp_apply
                                                                  expression (lib/Core.ml[264,9160+25]..lib/Core.ml[264,9160+27])
                                                                    Texp_ident "Stdlib!.||"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/Core.ml[264,9160+10]..lib/Core.ml[264,9160+24])
                                                                        Texp_apply
                                                                        expression (lib/Core.ml[264,9160+20]..lib/Core.ml[264,9160+21])
                                                                          Texp_ident "Stdlib!.="
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (lib/Core.ml[264,9160+10]..lib/Core.ml[264,9160+19])
                                                                              Texp_apply
                                                                              expression (lib/Core.ml[264,9160+10]..lib/Core.ml[264,9160+11])
                                                                                Texp_ident "Stdlib!.!"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (lib/Core.ml[264,9160+11]..lib/Core.ml[264,9160+19])
                                                                                    Texp_ident "subjects/1348"
                                                                              ]
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (lib/Core.ml[264,9160+22]..lib/Core.ml[264,9160+24])
                                                                              Texp_construct "[]"
                                                                              []
                                                                        ]
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/Core.ml[264,9160+28]..lib/Core.ml[264,9160+53])
                                                                        Texp_apply
                                                                        expression (lib/Core.ml[264,9160+28]..lib/Core.ml[264,9160+40])
                                                                          Texp_ident "P/1182.is_maximal"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (lib/Core.ml[264,9160+41]..lib/Core.ml[264,9160+53])
                                                                              Texp_ident "new_property/1354"
                                                                        ]
                                                                  ]
                                                            ]
                                                          expression (lib/Core.ml[265,9220+4]..lib/Core.ml[265,9220+39])
                                                            Texp_apply
                                                            expression (lib/Core.ml[265,9220+4]..lib/Core.ml[265,9220+24])
                                                              Texp_ident "Graph/1188.set_successors"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/Core.ml[265,9220+25]..lib/Core.ml[265,9220+29])
                                                                  Texp_ident "node/1345"
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/Core.ml[265,9220+30]..lib/Core.ml[265,9220+39])
                                                                  Texp_apply
                                                                  expression (lib/Core.ml[265,9220+30]..lib/Core.ml[265,9220+31])
                                                                    Texp_ident "Stdlib!.!"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/Core.ml[265,9220+31]..lib/Core.ml[265,9220+39])
                                                                        Texp_ident "subjects/1348"
                                                                  ]
                                                            ]
                                                          None
                                                        expression (lib/Core.ml[270,9412+2]..lib/Core.ml[273,9520+5])
                                                          Texp_ifthenelse
                                                          expression (lib/Core.ml[270,9412+5]..lib/Core.ml[270,9412+45])
                                                            Texp_apply
                                                            expression (lib/Core.ml[270,9412+5]..lib/Core.ml[270,9412+8])
                                                              Texp_ident "Stdlib!.not"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/Core.ml[270,9412+9]..lib/Core.ml[270,9412+45])
                                                                  Texp_apply
                                                                  expression (lib/Core.ml[270,9412+10]..lib/Core.ml[270,9412+17])
                                                                    Texp_ident "P/1182.equal"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/Core.ml[270,9412+18]..lib/Core.ml[270,9412+31])
                                                                        Texp_field
                                                                        expression (lib/Core.ml[270,9412+18]..lib/Core.ml[270,9412+22])
                                                                          Texp_ident "data/1346"
                                                                        "property"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (lib/Core.ml[270,9412+32]..lib/Core.ml[270,9412+44])
                                                                        Texp_ident "new_property/1354"
                                                                  ]
                                                            ]
                                                          expression (lib/Core.ml[270,9412+51]..lib/Core.ml[273,9520+5])
                                                            Texp_sequence
                                                            expression (lib/Core.ml[271,9469+4]..lib/Core.ml[271,9469+33])
                                                              Texp_setfield
                                                              expression (lib/Core.ml[271,9469+4]..lib/Core.ml[271,9469+8])
                                                                Texp_ident "data/1346"
                                                              "property"
                                                              expression (lib/Core.ml[271,9469+21]..lib/Core.ml[271,9469+33])
                                                                Texp_ident "new_property/1354"
                                                            expression (lib/Core.ml[272,9504+4]..lib/Core.ml[272,9504+15])
                                                              Texp_apply
                                                              expression (lib/Core.ml[272,9504+4]..lib/Core.ml[272,9504+10])
                                                                Texp_ident "signal/1269"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/Core.ml[272,9504+11]..lib/Core.ml[272,9504+15])
                                                                    Texp_ident "node/1345"
                                                              ]
                                                          None
                                        ]
                                    <def>
                                      pattern (lib/Core.ml[298,10970+4]..lib/Core.ml[298,10970+12])
                                        Tpat_var "node_for/1344"
                                      expression (lib/Core.ml[298,10970+13]..lib/Core.ml[308,11404+8]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/Core.ml[298,10970+14]..lib/Core.ml[298,10970+15])
                                              extra
                                                Tpat_extra_constraint
                                                core_type (lib/Core.ml[298,10970+18]..lib/Core.ml[298,10970+26])
                                                  Ttyp_constr "variable/1183"
                                                  []
                                              Tpat_alias "v/1355"
                                              pattern (lib/Core.ml[298,10970+14]..lib/Core.ml[298,10970+15])
                                                Tpat_any
                                            expression (lib/Core.ml[299,11007+2]..lib/Core.ml[308,11404+8])
                                              extra
                                                Texp_constraint
                                                core_type (lib/Core.ml[298,10970+30]..lib/Core.ml[298,10970+34])
                                                  Ttyp_constr "node/1189"
                                                  []
                                              Texp_try
                                              expression (lib/Core.ml[300,11013+4]..lib/Core.ml[300,11013+22])
                                                Texp_apply
                                                expression (lib/Core.ml[300,11013+4]..lib/Core.ml[300,11013+10])
                                                  Texp_ident "M/1177.find"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/Core.ml[300,11013+11]..lib/Core.ml[300,11013+12])
                                                      Texp_ident "v/1355"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/Core.ml[300,11013+13]..lib/Core.ml[300,11013+22])
                                                      Texp_ident "transient/1337"
                                                ]
                                              [
                                                <case>
                                                  pattern (lib/Core.ml[301,11036+7]..lib/Core.ml[301,11036+16])
                                                    Tpat_construct "Not_found"
                                                    []
                                                    None
                                                  expression (lib/Core.ml[302,11056+4]..lib/Core.ml[308,11404+8])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (lib/Core.ml[302,11056+8]..lib/Core.ml[302,11056+12])
                                                          Tpat_var "node/1356"
                                                        expression (lib/Core.ml[302,11056+15]..lib/Core.ml[302,11056+64])
                                                          Texp_apply
                                                          expression (lib/Core.ml[302,11056+15]..lib/Core.ml[302,11056+27])
                                                            Texp_ident "Graph/1188.create"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/Core.ml[302,11056+28]..lib/Core.ml[302,11056+64])
                                                                Texp_record
                                                                  fields =
                                                                    [
                                                                      "rhs"
                                                                        expression (lib/Core.ml[302,11056+36]..lib/Core.ml[302,11056+41])
                                                                          Texp_apply
                                                                          expression (lib/Core.ml[302,11056+36]..lib/Core.ml[302,11056+39])
                                                                            Texp_ident "eqs/1216"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (lib/Core.ml[302,11056+40]..lib/Core.ml[302,11056+41])
                                                                                Texp_ident "v/1355"
                                                                          ]
                                                                      "property"
                                                                        expression (lib/Core.ml[302,11056+54]..lib/Core.ml[302,11056+62])
                                                                          Texp_ident "P/1182.bottom"
                                                                    ]
                                                                  representation =
                                                                    Record_regular
                                                                  extended_expression =
                                                                    None
                                                          ]
                                                    ]
                                                    expression (lib/Core.ml[306,11329+4]..lib/Core.ml[308,11404+8])
                                                      Texp_sequence
                                                      expression (lib/Core.ml[306,11329+4]..lib/Core.ml[306,11329+26])
                                                        Texp_apply
                                                        expression (lib/Core.ml[306,11329+4]..lib/Core.ml[306,11329+9])
                                                          Texp_ident "M/1177.add"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/Core.ml[306,11329+10]..lib/Core.ml[306,11329+11])
                                                              Texp_ident "v/1355"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/Core.ml[306,11329+12]..lib/Core.ml[306,11329+16])
                                                              Texp_ident "node/1356"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/Core.ml[306,11329+17]..lib/Core.ml[306,11329+26])
                                                              Texp_ident "transient/1337"
                                                        ]
                                                      expression (lib/Core.ml[307,11357+4]..lib/Core.ml[308,11404+8])
                                                        Texp_sequence
                                                        expression (lib/Core.ml[307,11357+4]..lib/Core.ml[307,11357+14])
                                                          Texp_apply
                                                          expression (lib/Core.ml[307,11357+4]..lib/Core.ml[307,11357+9])
                                                            Texp_ident "solve/1343"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/Core.ml[307,11357+10]..lib/Core.ml[307,11357+14])
                                                                Texp_ident "node/1356"
                                                          ]
                                                        expression (lib/Core.ml[308,11404+4]..lib/Core.ml[308,11404+8])
                                                          Texp_ident "node/1356"
                                              ]
                                        ]
                                  ]
                                structure_item (lib/Core.ml[316,11628+0]..lib/Core.ml[317,11643+10])
                                  Tstr_value Nonrec
                                  [
                                    <def>
                                      pattern (lib/Core.ml[316,11628+4]..lib/Core.ml[316,11628+12])
                                        Tpat_var "inactive/1357"
                                      expression (lib/Core.ml[317,11643+2]..lib/Core.ml[317,11643+10])
                                        Texp_apply
                                        expression (lib/Core.ml[317,11643+2]..lib/Core.ml[317,11643+5])
                                          Texp_ident "Stdlib!.ref"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/Core.ml[317,11643+6]..lib/Core.ml[317,11643+10])
                                              Texp_construct "true"
                                              []
                                        ]
                                  ]
                                structure_item (lib/Core.ml[319,11655+0]..lib/Core.ml[329,11876+17])
                                  Tstr_value Nonrec
                                  [
                                    <def>
                                      pattern (lib/Core.ml[319,11655+4]..lib/Core.ml[319,11655+7])
                                        Tpat_var "get/1358"
                                      expression (lib/Core.ml[319,11655+8]..lib/Core.ml[329,11876+17]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (lib/Core.ml[319,11655+9]..lib/Core.ml[319,11655+10])
                                              extra
                                                Tpat_extra_constraint
                                                core_type (lib/Core.ml[319,11655+13]..lib/Core.ml[319,11655+21])
                                                  Ttyp_constr "variable/1183"
                                                  []
                                              Tpat_alias "v/1360"
                                              pattern (lib/Core.ml[319,11655+9]..lib/Core.ml[319,11655+10])
                                                Tpat_any
                                            expression (lib/Core.ml[320,11691+2]..lib/Core.ml[329,11876+17])
                                              extra
                                                Texp_constraint
                                                core_type (lib/Core.ml[319,11655+25]..lib/Core.ml[319,11655+33])
                                                  Ttyp_constr "property/1184"
                                                  []
                                              Texp_try
                                              expression (lib/Core.ml[321,11697+4]..lib/Core.ml[321,11697+22])
                                                Texp_apply
                                                expression (lib/Core.ml[321,11697+4]..lib/Core.ml[321,11697+10])
                                                  Texp_ident "M/1177.find"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/Core.ml[321,11697+11]..lib/Core.ml[321,11697+12])
                                                      Texp_ident "v/1360"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/Core.ml[321,11697+13]..lib/Core.ml[321,11697+22])
                                                      Texp_ident "permanent/1336"
                                                ]
                                              [
                                                <case>
                                                  pattern (lib/Core.ml[322,11720+7]..lib/Core.ml[322,11720+16])
                                                    Tpat_construct "Not_found"
                                                    []
                                                    None
                                                  expression (lib/Core.ml[323,11740+4]..lib/Core.ml[329,11876+17])
                                                    Texp_sequence
                                                    expression (lib/Core.ml[323,11740+4]..lib/Core.ml[323,11740+20])
                                                      Texp_assert                                                      expression (lib/Core.ml[323,11740+11]..lib/Core.ml[323,11740+20])
                                                        Texp_apply
                                                        expression (lib/Core.ml[323,11740+11]..lib/Core.ml[323,11740+12])
                                                          Texp_ident "Stdlib!.!"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/Core.ml[323,11740+12]..lib/Core.ml[323,11740+20])
                                                              Texp_ident "inactive/1357"
                                                        ]
                                                    expression (lib/Core.ml[324,11762+4]..lib/Core.ml[329,11876+17])
                                                      Texp_sequence
                                                      expression (lib/Core.ml[324,11762+4]..lib/Core.ml[324,11762+21])
                                                        Texp_apply
                                                        expression (lib/Core.ml[324,11762+13]..lib/Core.ml[324,11762+15])
                                                          Texp_ident "Stdlib!.:="
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/Core.ml[324,11762+4]..lib/Core.ml[324,11762+12])
                                                              Texp_ident "inactive/1357"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/Core.ml[324,11762+16]..lib/Core.ml[324,11762+21])
                                                              Texp_construct "false"
                                                              []
                                                        ]
                                                      expression (lib/Core.ml[325,11785+4]..lib/Core.ml[329,11876+17])
                                                        Texp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (lib/Core.ml[325,11785+8]..lib/Core.ml[325,11785+12])
                                                              Tpat_var "node/1361"
                                                            expression (lib/Core.ml[325,11785+15]..lib/Core.ml[325,11785+25])
                                                              Texp_apply
                                                              expression (lib/Core.ml[325,11785+15]..lib/Core.ml[325,11785+23])
                                                                Texp_ident "node_for/1344"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/Core.ml[325,11785+24]..lib/Core.ml[325,11785+25])
                                                                    Texp_ident "v/1360"
                                                              ]
                                                        ]
                                                        expression (lib/Core.ml[326,11814+4]..lib/Core.ml[329,11876+17])
                                                          Texp_sequence
                                                          expression (lib/Core.ml[326,11814+4]..lib/Core.ml[326,11814+24])
                                                            Texp_apply
                                                            expression (lib/Core.ml[326,11814+4]..lib/Core.ml[326,11814+18])
                                                              Texp_ident "Workset/1268.repeat"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/Core.ml[326,11814+19]..lib/Core.ml[326,11814+24])
                                                                  Texp_ident "solve/1343"
                                                            ]
                                                          expression (lib/Core.ml[327,11840+4]..lib/Core.ml[329,11876+17])
                                                            Texp_sequence
                                                            expression (lib/Core.ml[327,11840+4]..lib/Core.ml[327,11840+12])
                                                              Texp_apply
                                                              expression (lib/Core.ml[327,11840+4]..lib/Core.ml[327,11840+10])
                                                                Texp_ident "freeze/1338"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/Core.ml[327,11840+10]..lib/Core.ml[327,11840+12])
                                                                    Texp_construct "()"
                                                                    []
                                                              ]
                                                            expression (lib/Core.ml[328,11854+4]..lib/Core.ml[329,11876+17])
                                                              Texp_sequence
                                                              expression (lib/Core.ml[328,11854+4]..lib/Core.ml[328,11854+20])
                                                                Texp_apply
                                                                expression (lib/Core.ml[328,11854+13]..lib/Core.ml[328,11854+15])
                                                                  Texp_ident "Stdlib!.:="
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/Core.ml[328,11854+4]..lib/Core.ml[328,11854+12])
                                                                      Texp_ident "inactive/1357"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/Core.ml[328,11854+16]..lib/Core.ml[328,11854+20])
                                                                      Texp_construct "true"
                                                                      []
                                                                ]
                                                              expression (lib/Core.ml[329,11876+4]..lib/Core.ml[329,11876+17])
                                                                Texp_apply
                                                                expression (lib/Core.ml[329,11876+4]..lib/Core.ml[329,11876+12])
                                                                  Texp_ident "property/1211"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/Core.ml[329,11876+13]..lib/Core.ml[329,11876+17])
                                                                      Texp_ident "node/1361"
                                                                ]
                                              ]
                                        ]
                                  ]
                              ]
                            expression (lib/Core.ml[336,12018+3]..lib/Core.ml[336,12018+10])
                              Texp_ident "LFP/1362.get"
                      ]
                ]
            ]
  structure_item (lib/Core.ml[344,12155+0]..lib/Core.ml[347,12214+64])
    Tstr_module
    ForOrderedType/1746
      module_expr (lib/Core.ml[345,12177+2]..lib/Core.ml[347,12214+64])
        Tmod_functor "T/1375"
        module_type (lib/Core.ml[345,12177+7]..lib/Core.ml[345,12177+18])
          Tmty_ident "Gbnf_parser!.Sigs.OrderedType"
        module_expr (lib/Core.ml[346,12197+2]..lib/Core.ml[347,12214+64])
          Tmod_functor "P/1376"
          module_type (lib/Core.ml[346,12197+7]..lib/Core.ml[346,12197+15])
            Tmty_ident "Gbnf_parser!.Sigs.PROPERTY"
          module_expr (lib/Core.ml[347,12214+7]..lib/Core.ml[347,12214+64])
            Tmod_apply
            module_expr (lib/Core.ml[347,12214+7]..lib/Core.ml[347,12214+61])
              Tmod_apply
              module_expr (lib/Core.ml[347,12214+7]..lib/Core.ml[347,12214+11])
                Tmod_ident "Make/1363"
              module_expr (lib/Core.ml[347,12214+12]..lib/Core.ml[347,12214+60])
                Tmod_apply
                module_expr (lib/Core.ml[347,12214+12]..lib/Core.ml[347,12214+47])
                  module_expr (lib/Core.ml[347,12214+12]..lib/Core.ml[347,12214+47])
                    Tmod_ident "Gbnf_parser!.Glue.PersistentMapsToImperativeMaps"
                module_expr (lib/Core.ml[347,12214+48]..lib/Core.ml[347,12214+59])
                  Tmod_apply
                  module_expr (lib/Core.ml[347,12214+48]..lib/Core.ml[347,12214+56])
                    module_expr (lib/Core.ml[347,12214+48]..lib/Core.ml[347,12214+56])
                      Tmod_ident "Stdlib!.Map.Make"
                  module_expr (lib/Core.ml[347,12214+57]..lib/Core.ml[347,12214+58])
                    Tmod_ident "T/1375"
            module_expr (lib/Core.ml[347,12214+62]..lib/Core.ml[347,12214+63])
              Tmod_ident "P/1376"
  structure_item (lib/Core.ml[349,12280+0]..lib/Core.ml[352,12337+50])
    Tstr_module
    ForHashedType/2021
      module_expr (lib/Core.ml[350,12301+2]..lib/Core.ml[352,12337+50])
        Tmod_functor "T/1830"
        module_type (lib/Core.ml[350,12301+7]..lib/Core.ml[350,12301+17])
          Tmty_ident "Gbnf_parser!.Sigs.HashedType"
        module_expr (lib/Core.ml[351,12320+2]..lib/Core.ml[352,12337+50])
          Tmod_functor "P/1831"
          module_type (lib/Core.ml[351,12320+7]..lib/Core.ml[351,12320+15])
            Tmty_ident "Gbnf_parser!.Sigs.PROPERTY"
          module_expr (lib/Core.ml[352,12337+7]..lib/Core.ml[352,12337+50])
            Tmod_apply
            module_expr (lib/Core.ml[352,12337+7]..lib/Core.ml[352,12337+47])
              Tmod_apply
              module_expr (lib/Core.ml[352,12337+7]..lib/Core.ml[352,12337+11])
                Tmod_ident "Make/1363"
              module_expr (lib/Core.ml[352,12337+12]..lib/Core.ml[352,12337+46])
                Tmod_apply
                module_expr (lib/Core.ml[352,12337+12]..lib/Core.ml[352,12337+43])
                  module_expr (lib/Core.ml[352,12337+12]..lib/Core.ml[352,12337+43])
                    Tmod_ident "Gbnf_parser!.Glue.HashTablesAsImperativeMaps"
                module_expr (lib/Core.ml[352,12337+44]..lib/Core.ml[352,12337+45])
                  Tmod_ident "T/1830"
            module_expr (lib/Core.ml[352,12337+48]..lib/Core.ml[352,12337+49])
              Tmod_ident "P/1831"
  structure_item (lib/Core.ml[354,12389+0]..lib/Core.ml[357,12434+50])
    Tstr_module
    ForType/2052
      module_expr (lib/Core.ml[355,12404+2]..lib/Core.ml[357,12434+50])
        Tmod_functor "T/2023"
        module_type (lib/Core.ml[355,12404+7]..lib/Core.ml[355,12404+11])
          Tmty_ident "Gbnf_parser!.Sigs.TYPE"
        module_expr (lib/Core.ml[356,12417+2]..lib/Core.ml[357,12434+50])
          Tmod_functor "P/2024"
          module_type (lib/Core.ml[356,12417+7]..lib/Core.ml[356,12417+15])
            Tmty_ident "Gbnf_parser!.Sigs.PROPERTY"
          module_expr (lib/Core.ml[357,12434+7]..lib/Core.ml[357,12434+50])
            Tmod_apply
            module_expr (lib/Core.ml[357,12434+7]..lib/Core.ml[357,12434+47])
              Tmod_apply
              module_expr (lib/Core.ml[357,12434+7]..lib/Core.ml[357,12434+20])
                Tmod_ident "ForHashedType/2021"
              module_expr (lib/Core.ml[357,12434+21]..lib/Core.ml[357,12434+46])
                Tmod_apply
                module_expr (lib/Core.ml[357,12434+21]..lib/Core.ml[357,12434+43])
                  module_expr (lib/Core.ml[357,12434+21]..lib/Core.ml[357,12434+43])
                    Tmod_ident "Gbnf_parser!.Glue.TrivialHashedType"
                module_expr (lib/Core.ml[357,12434+44]..lib/Core.ml[357,12434+45])
                  Tmod_ident "T/2023"
            module_expr (lib/Core.ml[357,12434+48]..lib/Core.ml[357,12434+49])
              Tmod_ident "P/2024"
  structure_item (lib/Core.ml[357,12434+50]..lib/Core.ml[357,12434+50]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/Core.ml[357,12434+50]..lib/Core.ml[357,12434+50]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/Core.ml[357,12434+50]..lib/Core.ml[357,12434+50]) ghost
          Texp_apply
          expression (lib/Core.ml[357,12434+50]..lib/Core.ml[357,12434+50]) ghost
            Texp_ident "Ppx_inline_test_lib!.unset_lib"
          [
            <arg>
              Nolabel
              expression (lib/Core.ml[357,12434+50]..lib/Core.ml[357,12434+50]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/Core.ml[357,12434+50]..lib/Core.ml[357,12434+50]) ghost,None)
          ]
    ]
  structure_item (lib/Core.ml[357,12434+50]..lib/Core.ml[357,12434+50]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/Core.ml[357,12434+50]..lib/Core.ml[357,12434+50]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/Core.ml[357,12434+50]..lib/Core.ml[357,12434+50]) ghost
          Texp_apply
          expression (lib/Core.ml[357,12434+50]..lib/Core.ml[357,12434+50]) ghost
            Texp_ident "Expect_test_collector!.Current_file.unset"
          [
            <arg>
              Nolabel
              expression (lib/Core.ml[357,12434+50]..lib/Core.ml[357,12434+50]) ghost
                Texp_construct "()"
                []
          ]
    ]
  structure_item (lib/Core.ml[357,12434+50]..lib/Core.ml[357,12434+50]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/Core.ml[357,12434+50]..lib/Core.ml[357,12434+50]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/Core.ml[357,12434+50]..lib/Core.ml[357,12434+50]) ghost
          Texp_apply
          expression (lib/Core.ml[357,12434+50]..lib/Core.ml[357,12434+50]) ghost
            Texp_ident "Ppx_bench_lib!.Benchmark_accumulator.Current_libname.unset"
          [
            <arg>
              Nolabel
              expression (lib/Core.ml[357,12434+50]..lib/Core.ml[357,12434+50]) ghost
                Texp_construct "()"
                []
          ]
    ]
  structure_item (lib/Core.ml[357,12434+50]..lib/Core.ml[357,12434+50]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/Core.ml[357,12434+50]..lib/Core.ml[357,12434+50]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/Core.ml[357,12434+50]..lib/Core.ml[357,12434+50]) ghost
          Texp_apply
          expression (lib/Core.ml[357,12434+50]..lib/Core.ml[357,12434+50]) ghost
            Texp_ident "Ppx_module_timer_runtime!.record_until"
          [
            <arg>
              Nolabel
              expression (lib/Core.ml[357,12434+50]..lib/Core.ml[357,12434+50]) ghost
                Texp_ident "Ppx_module_timer_runtime!.__MODULE__"
          ]
    ]
]

{<Gbnf_parser__Core>
 "ForHashedType"[module] ->
     Abs<Gbnf_parser__Core.56>
        (T/1830,
         Abs
            (P/1831,
             {
              "Graph"[module] ->
                  (CU Gbnf_parser .
                  "CoreDependencyGraph"[module])<Gbnf_parser__Core.7>;
              "data"[type] -> <Gbnf_parser__Core.9>;
              "equations"[type] -> <Gbnf_parser__Core.6>;
              "lfp"[value] -> <Gbnf_parser__Core.14>;
              "node"[type] -> <Gbnf_parser__Core.8>;
              "property"[value] -> <Gbnf_parser__Core.12>;
              "property"[type] -> <Gbnf_parser__Core.3>;
              "rhs"[type] -> <Gbnf_parser__Core.5>;
              "valuation"[type] -> <Gbnf_parser__Core.4>;
              "variable"[type] -> <Gbnf_parser__Core.2>;
              }));
 "ForOrderedType"[module] ->
     Abs<Gbnf_parser__Core.53>
        (T/1375,
         Abs
            (P/1376,
             {
              "Graph"[module] ->
                  (CU Gbnf_parser .
                  "CoreDependencyGraph"[module])<Gbnf_parser__Core.7>;
              "data"[type] -> <Gbnf_parser__Core.9>;
              "equations"[type] -> <Gbnf_parser__Core.6>;
              "lfp"[value] -> <Gbnf_parser__Core.14>;
              "node"[type] -> <Gbnf_parser__Core.8>;
              "property"[value] -> <Gbnf_parser__Core.12>;
              "property"[type] -> <Gbnf_parser__Core.3>;
              "rhs"[type] -> <Gbnf_parser__Core.5>;
              "valuation"[type] -> <Gbnf_parser__Core.4>;
              "variable"[type] -> <Gbnf_parser__Core.2>;
              }));
 "ForType"[module] ->
     Abs<Gbnf_parser__Core.59>
        (T/2023,
         Abs
            (P/2024,
             {
              "Graph"[module] ->
                  (CU Gbnf_parser .
                  "CoreDependencyGraph"[module])<Gbnf_parser__Core.7>;
              "data"[type] -> <Gbnf_parser__Core.9>;
              "equations"[type] -> <Gbnf_parser__Core.6>;
              "lfp"[value] -> <Gbnf_parser__Core.14>;
              "node"[type] -> <Gbnf_parser__Core.8>;
              "property"[value] -> <Gbnf_parser__Core.12>;
              "property"[type] -> <Gbnf_parser__Core.3>;
              "rhs"[type] -> <Gbnf_parser__Core.5>;
              "valuation"[type] -> <Gbnf_parser__Core.4>;
              "variable"[type] -> <Gbnf_parser__Core.2>;
              }));
 "Make"[module] ->
     Abs<Gbnf_parser__Core.50>
        (M/1177,
         Abs
            (P/1182,
             {
              "Graph"[module] ->
                  (CU Gbnf_parser .
                  "CoreDependencyGraph"[module])<Gbnf_parser__Core.7>;
              "data"[type] -> <Gbnf_parser__Core.9>;
              "equations"[type] -> <Gbnf_parser__Core.6>;
              "lfp"[value] -> <Gbnf_parser__Core.14>;
              "node"[type] -> <Gbnf_parser__Core.8>;
              "property"[value] -> <Gbnf_parser__Core.12>;
              "property"[type] -> <Gbnf_parser__Core.3>;
              "rhs"[type] -> <Gbnf_parser__Core.5>;
              "valuation"[type] -> <Gbnf_parser__Core.4>;
              "variable"[type] -> <Gbnf_parser__Core.2>;
              }));
 }

(setglobal Gbnf_parser__Core!
  (let
    (*match*/3150 =
       (after Gbnf_parser__Core lib/Core.ml(13)<ghost>:893-893
         (apply (field 3 (global Ppx_module_timer_runtime!))
           #"Gbnf_parser__Core"))
     *match*/3148 =
       (after Gbnf_parser__Core lib/Core.ml(13)<ghost>:893-893
         (apply
           (field 0 (field 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
           "gbnf_parser"))
     *match*/3146 =
       (after Gbnf_parser__Core lib/Core.ml(13)<ghost>:893-893
         (apply (field 0 (field 5 (global Expect_test_collector!)))
           "lib/Core.ml"))
     *match*/3144 =
       (after Gbnf_parser__Core lib/Core.ml(13)<ghost>:893-893
         (apply (field 4 (global Ppx_inline_test_lib!)) "gbnf_parser"
           "Core.ml"))
     Make/1363 =
       (module-defn(Make/1363) Gbnf_parser__Core lib/Core.ml(20):1103-12033
         (function M/3121 P/3120 is_a_functor
           (let
             (M/1177 =a M/3121
              P/1182 =a P/3120
              property/1211 =
                (function node/1213
                  (funct-body Gbnf_parser__Core.Make.property lib/Core.ml(74)<ghost>:2339-2374
                    (before Gbnf_parser__Core.Make.property lib/Core.ml(75):2348-2374
                      (field 1
                        (after Gbnf_parser__Core.Make.property lib/Core.ml(75):2348-2365
                          (apply
                            (field 1
                              (global Gbnf_parser__CoreDependencyGraph!))
                            node/1213))))))
              lfp/1214 =
                (function eqs/1216
                  (funct-body Gbnf_parser__Core.Make.lfp lib/Core.ml(82)<ghost>:2613-12028
                    (before Gbnf_parser__Core.Make.lfp lib/Core.ml(83):2647-12028
                      (let
                        (LFP/1362 =
                           (module-defn(LFP/1362) Gbnf_parser__Core.Make.lfp lib/Core.ml(83):2658-2661
                             (let
                               (Workset/1268 =
                                  (module-defn(Workset/1268) Gbnf_parser__Core.Make.lfp.LFP lib/Core.ml(96):3074-3662
                                    (let
                                      (workset/1217 =
                                         (after Gbnf_parser__Core.Make.lfp.LFP.Workset.workset lib/Core.ml(114):3497-3511
                                           (apply
                                             (field 1
                                               (global Stdlib__Queue!))
                                             0))
                                       insert/1260 =
                                         (function node/1262 : int
                                           (funct-body Gbnf_parser__Core.Make.lfp.LFP.Workset.insert lib/Core.ml(116)<ghost>:3526-3560
                                             (before Gbnf_parser__Core.Make.lfp.LFP.Workset.insert lib/Core.ml(117):3537-3560
                                               (after Gbnf_parser__Core.Make.lfp.LFP.Workset.insert lib/Core.ml(117):3537-3560
                                                 (apply
                                                   (field 3
                                                     (global Stdlib__Queue!))
                                                   node/1262 workset/1217)))))
                                       repeat/1263 =
                                         (function f/1265 : int
                                           (funct-body Gbnf_parser__Core.Make.lfp.LFP.Workset.repeat lib/Core.ml(119)<ghost>:3575-3657
                                             (before Gbnf_parser__Core.Make.lfp.LFP.Workset.repeat lib/Core.ml(120):3583-3657
                                               (while
                                                 (not
                                                   (after Gbnf_parser__Core.Make.lfp.LFP.Workset.repeat lib/Core.ml(120):3593-3617
                                                     (apply
                                                       (field 12
                                                         (global Stdlib__Queue!))
                                                       workset/1217)))
                                                 (before Gbnf_parser__Core.Make.lfp.LFP.Workset.repeat lib/Core.ml(121):3627-3648
                                                   (after Gbnf_parser__Core.Make.lfp.LFP.Workset.repeat lib/Core.ml(121):3627-3648
                                                     (apply f/1265
                                                       (after Gbnf_parser__Core.Make.lfp.LFP.Workset.repeat lib/Core.ml(121):3629-3648
                                                         (apply
                                                           (field 6
                                                             (global Stdlib__Queue!))
                                                           workset/1217))))))))))
                                      (pseudo Gbnf_parser__Core.Make.lfp.LFP.Workset lib/Core.ml(109):3436-3662
                                        (makeblock 0 insert/1260 repeat/1263))))
                                signal/1269 =
                                  (function subject/1271 : int
                                    (funct-body Gbnf_parser__Core.Make.lfp.LFP.signal lib/Core.ml(139)<ghost>:4280-4416
                                      (before Gbnf_parser__Core.Make.lfp.LFP.signal lib/Core.ml(140):4292-4416
                                        (after Gbnf_parser__Core.Make.lfp.LFP.signal lib/Core.ml(140):4292-4416
                                          (apply
                                            (field 16 (global Stdlib__List!))
                                            (function observer/1335 : int
                                              (funct-body Gbnf_parser__Core.Make.lfp.LFP.signal.(fun) lib/Core.ml(140):4302-4387
                                                (before Gbnf_parser__Core.Make.lfp.LFP.signal.(fun) lib/Core.ml(141):4323-4383
                                                  (seq
                                                    (after Gbnf_parser__Core.Make.lfp.LFP.signal.(fun) lib/Core.ml(141):4323-4354
                                                      (apply
                                                        (field 6
                                                          (global Gbnf_parser__CoreDependencyGraph!))
                                                        observer/1335))
                                                    (before Gbnf_parser__Core.Make.lfp.LFP.signal.(fun) lib/Core.ml(142):4360-4383
                                                      (after Gbnf_parser__Core.Make.lfp.LFP.signal.(fun) lib/Core.ml(142):4360-4383
                                                        (apply
                                                          (field 0
                                                            Workset/1268)
                                                          observer/1335)))))))
                                            (after Gbnf_parser__Core.Make.lfp.LFP.signal lib/Core.ml(143):4388-4416
                                              (apply
                                                (field 3
                                                  (global Gbnf_parser__CoreDependencyGraph!))
                                                subject/1271)))))))
                                permanent/1336 =
                                  (after Gbnf_parser__Core.Make.lfp.LFP.permanent lib/Core.ml(155):4773-4783
                                    (apply (field 0 M/1177) 0))
                                transient/1337 =
                                  (after Gbnf_parser__Core.Make.lfp.LFP.transient lib/Core.ml(164):5151-5161
                                    (apply (field 0 M/1177) 0))
                                freeze/1338 =
                                  (function param/1342[int] : int
                                    (funct-body Gbnf_parser__Core.Make.lfp.LFP.freeze lib/Core.ml(170)<ghost>:5348-5449
                                      (before Gbnf_parser__Core.Make.lfp.LFP.freeze lib/Core.ml(171):5355-5449
                                        (seq
                                          (after Gbnf_parser__Core.Make.lfp.LFP.freeze lib/Core.ml(171):5355-5428
                                            (apply (field 4 M/1177)
                                              (function v/1340 node/1341
                                                : int
                                                (funct-body Gbnf_parser__Core.Make.lfp.LFP.freeze.(fun) lib/Core.ml(171):5362-5418
                                                  (before Gbnf_parser__Core.Make.lfp.LFP.freeze.(fun) lib/Core.ml(172):5381-5414
                                                    (after Gbnf_parser__Core.Make.lfp.LFP.freeze.(fun) lib/Core.ml(172):5381-5414
                                                      (apply (field 1 M/1177)
                                                        v/1340
                                                        (after Gbnf_parser__Core.Make.lfp.LFP.freeze.(fun) lib/Core.ml(172):5389-5404
                                                          (apply
                                                            property/1211
                                                            node/1341))
                                                        permanent/1336)))))
                                              transient/1337))
                                          (before Gbnf_parser__Core.Make.lfp.LFP.freeze lib/Core.ml(174):5432-5449
                                            (after Gbnf_parser__Core.Make.lfp.LFP.freeze lib/Core.ml(174):5432-5449
                                              (apply (field 3 M/1177)
                                                transient/1337))))))))
                               (letrec
                                 (solve/1343
                                    (function node/1345 : int
                                      (funct-body Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(196)<ghost>:6358-9525
                                        (before Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(199):6439-9525
                                          (let
                                            (data/1346 =
                                               (after Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(199):6450-6465
                                                 (apply
                                                   (field 1
                                                     (global Gbnf_parser__CoreDependencyGraph!))
                                                   node/1345)))
                                            (before Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(209):6986-9525
                                              (let
                                                (alive/1347 =
                                                   (makemutable 0 (int) 1)
                                                 subjects/1348 =
                                                   (makemutable 0 0))
                                                (before Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(215):7255-9525
                                                  (let
                                                    (request/1349 =
                                                       (function v/1351
                                                         (funct-body Gbnf_parser__Core.Make.lfp.LFP.solve.request lib/Core.ml(215)<ghost>:7267-7615
                                                           (before Gbnf_parser__Core.Make.lfp.LFP.solve.request lib/Core.ml(216):7299-7615
                                                             (seq
                                                               (if
                                                                 (field 0
                                                                   alive/1347)
                                                                 0
                                                                 (raise
                                                                   (after Gbnf_parser__Core.Make.lfp.LFP.solve.request lib/Core.ml(216):7299-7312
                                                                    (makeblock 0
                                                                    (global Assert_failure/28!)
                                                                    [0:
                                                                    "lib/Core.ml"
                                                                    216 4]))))
                                                               (before Gbnf_parser__Core.Make.lfp.LFP.solve.request lib/Core.ml(217):7318-7615
                                                                 (try
                                                                   (after Gbnf_parser__Core.Make.lfp.LFP.solve.request lib/Core.ml(218):7328-7346
                                                                    (apply
                                                                    (field 2
                                                                    M/1177)
                                                                    v/1351
                                                                    permanent/1336))
                                                                  with exn/3116
                                                                   (catch
                                                                    (if
                                                                    (==
                                                                    exn/3116
                                                                    (field 7
                                                                    (global Stdlib!)))
                                                                    (before Gbnf_parser__Core.Make.lfp.LFP.solve.request lib/Core.ml(220):7375-7615
                                                                    (let
                                                                    (subject/1352 =
                                                                    (after Gbnf_parser__Core.Make.lfp.LFP.solve.request lib/Core.ml(220):7389-7399
                                                                    (apply
                                                                    node_for/1344
                                                                    v/1351)))
                                                                    (before Gbnf_parser__Core.Make.lfp.LFP.solve.request lib/Core.ml(225):7503-7615
                                                                    (let
                                                                    (p/1353 =
                                                                    (after Gbnf_parser__Core.Make.lfp.LFP.solve.request lib/Core.ml(225):7511-7527
                                                                    (apply
                                                                    property/1211
                                                                    subject/1352)))
                                                                    (before Gbnf_parser__Core.Make.lfp.LFP.solve.request lib/Core.ml(226):7537-7615
                                                                    (seq
                                                                    (if
                                                                    (not
                                                                    (after Gbnf_parser__Core.Make.lfp.LFP.solve.request lib/Core.ml(226):7544-7560
                                                                    (apply
                                                                    (field 2
                                                                    P/1182)
                                                                    p/1353)))
                                                                    (before Gbnf_parser__Core.Make.lfp.LFP.solve.request lib/Core.ml(227):7574-7606
                                                                    (setfield_ptr 0
                                                                    subjects/1348
                                                                    (makeblock 0
                                                                    subject/1352
                                                                    (field 0
                                                                    subjects/1348))))
                                                                    0)
                                                                    (before Gbnf_parser__Core.Make.lfp.LFP.solve.request lib/Core.ml(228):7614-7615
                                                                    p/1353)))))))
                                                                    (exit 1))
                                                                    with (1)
                                                                    (reraise
                                                                    exn/3116)))))))))
                                                    (before Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(233):7676-9525
                                                      (let
                                                        (new_property/1354 =
                                                           (after Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(233):7695-7711
                                                             (apply
                                                               (field 0
                                                                 data/1346)
                                                               request/1349)))
                                                        (before Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(237):7812-9525
                                                          (seq
                                                            (setfield_imm 0
                                                              alive/1347 0)
                                                            (before Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(264):9162-9525
                                                              (seq
                                                                (if
                                                                  (not
                                                                    (||
                                                                    (==
                                                                    (field 0
                                                                    subjects/1348)
                                                                    0)
                                                                    (after Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(264):9188-9213
                                                                    (apply
                                                                    (field 2
                                                                    P/1182)
                                                                    new_property/1354))))
                                                                  (before Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(265):9224-9259
                                                                    (after Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(265):9224-9259
                                                                    (apply
                                                                    (field 5
                                                                    (global Gbnf_parser__CoreDependencyGraph!))
                                                                    node/1345
                                                                    (field 0
                                                                    subjects/1348))))
                                                                  0)
                                                                (before Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(270):9414-9525
                                                                  (if
                                                                    (not
                                                                    (after Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(270):9421-9457
                                                                    (apply
                                                                    (field 1
                                                                    P/1182)
                                                                    (field 1
                                                                    data/1346)
                                                                    new_property/1354)))
                                                                    (before Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(270):9463-9525
                                                                    (seq
                                                                    (setfield_ptr 1
                                                                    data/1346
                                                                    new_property/1354)
                                                                    (before Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(272):9508-9519
                                                                    (after Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(272):9508-9519
                                                                    (apply
                                                                    signal/1269
                                                                    node/1345)))))
                                                                    0))))))))))))))))
                                   node_for/1344
                                     (function v/1355
                                       (funct-body Gbnf_parser__Core.Make.lfp.LFP.node_for lib/Core.ml(298)<ghost>:10983-11412
                                         (before Gbnf_parser__Core.Make.lfp.LFP.node_for lib/Core.ml(299):11009-11412
                                           (try
                                             (after Gbnf_parser__Core.Make.lfp.LFP.node_for lib/Core.ml(300):11017-11035
                                               (apply (field 2 M/1177) v/1355
                                                 transient/1337))
                                            with exn/3117
                                             (catch
                                               (if
                                                 (== exn/3117
                                                   (field 7 (global Stdlib!)))
                                                 (before Gbnf_parser__Core.Make.lfp.LFP.node_for lib/Core.ml(302):11060-11412
                                                   (let
                                                     (node/1356 =
                                                        (after Gbnf_parser__Core.Make.lfp.LFP.node_for lib/Core.ml(302):11071-11120
                                                          (apply
                                                            (field 0
                                                              (global Gbnf_parser__CoreDependencyGraph!))
                                                            (makemutable 0
                                                              (after Gbnf_parser__Core.Make.lfp.LFP.node_for lib/Core.ml(302):11092-11097
                                                                (apply
                                                                  eqs/1216
                                                                  v/1355))
                                                              (field 0
                                                                P/1182)))))
                                                     (before Gbnf_parser__Core.Make.lfp.LFP.node_for lib/Core.ml(306):11333-11412
                                                       (seq
                                                         (after Gbnf_parser__Core.Make.lfp.LFP.node_for lib/Core.ml(306):11333-11355
                                                           (apply
                                                             (field 1 M/1177)
                                                             v/1355 node/1356
                                                             transient/1337))
                                                         (before Gbnf_parser__Core.Make.lfp.LFP.node_for lib/Core.ml(307):11361-11412
                                                           (seq
                                                             (after Gbnf_parser__Core.Make.lfp.LFP.node_for lib/Core.ml(307):11361-11371
                                                               (apply
                                                                 solve/1343
                                                                 node/1356))
                                                             (before Gbnf_parser__Core.Make.lfp.LFP.node_for lib/Core.ml(308):11408-11412
                                                               node/1356)))))))
                                                 (exit 2))
                                              with (2) (reraise exn/3117)))))))
                                 (let
                                   (inactive/1357 = (makemutable 0 (int) 1)
                                    get/1358 =
                                      (function v/1360
                                        (funct-body Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(319)<ghost>:11663-11893
                                          (before Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(320):11693-11893
                                            (try
                                              (after Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(321):11701-11719
                                                (apply (field 2 M/1177)
                                                  v/1360 permanent/1336))
                                             with exn/3119
                                              (catch
                                                (if
                                                  (== exn/3119
                                                    (field 7
                                                      (global Stdlib!)))
                                                  (before Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(323):11744-11893
                                                    (seq
                                                      (if
                                                        (field 0
                                                          inactive/1357)
                                                        0
                                                        (raise
                                                          (after Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(323):11744-11760
                                                            (makeblock 0
                                                              (global Assert_failure/28!)
                                                              [0:
                                                               "lib/Core.ml"
                                                               323 4]))))
                                                      (before Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(324):11766-11893
                                                        (seq
                                                          (setfield_imm 0
                                                            inactive/1357 0)
                                                          (before Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(325):11789-11893
                                                            (let
                                                              (node/1361 =
                                                                 (after Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(325):11800-11810
                                                                   (apply
                                                                    node_for/1344
                                                                    v/1360)))
                                                              (before Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(326):11818-11893
                                                                (seq
                                                                  (after Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(326):11818-11838
                                                                    (apply
                                                                    (field 1
                                                                    Workset/1268)
                                                                    solve/1343))
                                                                  (before Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(327):11844-11893
                                                                    (seq
                                                                    (after Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(327):11844-11852
                                                                    (apply
                                                                    freeze/1338
                                                                    0))
                                                                    (before Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(328):11858-11893
                                                                    (seq
                                                                    (setfield_imm 0
                                                                    inactive/1357
                                                                    1)
                                                                    (before Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(329):11880-11893
                                                                    (after Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(329):11880-11893
                                                                    (apply
                                                                    property/1211
                                                                    node/1361)))))))))))))))
                                                  (exit 3))
                                               with (3) (reraise exn/3119)))))))
                                   (pseudo Gbnf_parser__Core.Make.lfp.LFP lib/Core.ml(83):2664-12017
                                     (makeblock 0 Workset/1268 signal/1269
                                       permanent/1336 transient/1337
                                       freeze/1338 solve/1343 node_for/1344
                                       inactive/1357 get/1358)))))))
                        (field 8 LFP/1362))))))
             (pseudo Gbnf_parser__Core.Make lib/Core.ml(23):1158-12033
               (makeblock 0 property/1211 lfp/1214)))))
     ForOrderedType/1746 =
       (module-defn(ForOrderedType/1746) Gbnf_parser__Core lib/Core.ml(344):12155-12278
         (function T/3127 P/3126 is_a_functor
           (let (T/1375 =a T/3127 P/1376 =a P/3126)
             (apply
               (apply Make/1363
                 (let
                   (let/3125 =
                      (apply
                        (let
                          (let/3124 = (field 9 (global Gbnf_parser__Glue!)))
                          (field 9 (global Gbnf_parser__Glue!)))
                        (let
                          (let/3123 =
                             (apply
                               (let
                                 (let/3122 = (field 0 (global Stdlib__Map!)))
                                 (field 0 (global Stdlib__Map!)))
                               T/1375))
                          (makeblock 0 (field 0 let/3123) (field 3 let/3123)
                            (field 27 let/3123) (field 11 let/3123)))))
                   (makeblock 0 (field 0 let/3125) (field 2 let/3125)
                     (field 3 let/3125) (field 1 let/3125)
                     (field 4 let/3125))))
               P/1376))))
     ForHashedType/2021 =
       (module-defn(ForHashedType/2021) Gbnf_parser__Core lib/Core.ml(349):12280-12387
         (function T/3131 P/3130 is_a_functor
           (let (T/1830 =a T/3131 P/1831 =a P/3130)
             (apply
               (apply Make/1363
                 (let
                   (let/3129 =
                      (apply
                        (let
                          (let/3128 = (field 12 (global Gbnf_parser__Glue!)))
                          (field 12 (global Gbnf_parser__Glue!)))
                        T/1830))
                   (makeblock 0 (field 19 let/3129) (field 20 let/3129)
                     (field 21 let/3129) (field 0 let/3129)
                     (field 8 let/3129))))
               P/1831))))
     ForType/2052 =
       (module-defn(ForType/2052) Gbnf_parser__Core lib/Core.ml(354):12389-12484
         (function T/3134 P/3133 is_a_functor
           (let (T/2023 =a T/3134 P/2024 =a P/3133)
             (apply
               (apply ForHashedType/2021
                 (apply
                   (let (let/3132 = (field 4 (global Gbnf_parser__Glue!)))
                     (field 4 (global Gbnf_parser__Glue!)))
                   T/2023))
               P/2024))))
     *match*/3142 =
       (after Gbnf_parser__Core lib/Core.ml(357)<ghost>:12484-12484
         (apply (field 5 (global Ppx_inline_test_lib!)) "gbnf_parser"))
     *match*/3140 =
       (after Gbnf_parser__Core lib/Core.ml(357)<ghost>:12484-12484
         (apply (field 1 (field 5 (global Expect_test_collector!))) 0))
     *match*/3138 =
       (after Gbnf_parser__Core lib/Core.ml(357)<ghost>:12484-12484
         (apply
           (field 1 (field 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
           0))
     *match*/3136 =
       (after Gbnf_parser__Core lib/Core.ml(357)<ghost>:12484-12484
         (apply (field 4 (global Ppx_module_timer_runtime!))
           #"Gbnf_parser__Core")))
    (pseudo <unknown location>
      (makeblock 0 Make/1363 ForOrderedType/1746 ForHashedType/2021
        ForType/2052))))
(setglobal Gbnf_parser__Core!
  (let
    (*match*/3150 =
       (after Gbnf_parser__Core lib/Core.ml(13)<ghost>:893-893
         (apply (field 3 (global Ppx_module_timer_runtime!))
           #"Gbnf_parser__Core"))
     *match*/3148 =
       (after Gbnf_parser__Core lib/Core.ml(13)<ghost>:893-893
         (apply
           (field 0 (field 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
           "gbnf_parser"))
     *match*/3146 =
       (after Gbnf_parser__Core lib/Core.ml(13)<ghost>:893-893
         (apply (field 0 (field 5 (global Expect_test_collector!)))
           "lib/Core.ml"))
     *match*/3144 =
       (after Gbnf_parser__Core lib/Core.ml(13)<ghost>:893-893
         (apply (field 4 (global Ppx_inline_test_lib!)) "gbnf_parser"
           "Core.ml"))
     Make/1363 =
       (module-defn(Make/1363) Gbnf_parser__Core lib/Core.ml(20):1103-12033
         (function M/3121 P/3120 is_a_functor
           (let
             (M/1177 =a M/3121
              P/1182 =a P/3120
              property/1211 =
                (function node/1213
                  (funct-body Gbnf_parser__Core.Make.property lib/Core.ml(74)<ghost>:2339-2374
                    (before Gbnf_parser__Core.Make.property lib/Core.ml(75):2348-2374
                      (field 1
                        (after Gbnf_parser__Core.Make.property lib/Core.ml(75):2348-2365
                          (apply
                            (field 1
                              (global Gbnf_parser__CoreDependencyGraph!))
                            node/1213))))))
              lfp/1214 =
                (function eqs/1216
                  (funct-body Gbnf_parser__Core.Make.lfp lib/Core.ml(82)<ghost>:2613-12028
                    (before Gbnf_parser__Core.Make.lfp lib/Core.ml(83):2647-12028
                      (let
                        (LFP/1362 =
                           (module-defn(LFP/1362) Gbnf_parser__Core.Make.lfp lib/Core.ml(83):2658-2661
                             (let
                               (Workset/1268 =
                                  (module-defn(Workset/1268) Gbnf_parser__Core.Make.lfp.LFP lib/Core.ml(96):3074-3662
                                    (let
                                      (workset/1217 =
                                         (after Gbnf_parser__Core.Make.lfp.LFP.Workset.workset lib/Core.ml(114):3497-3511
                                           (apply
                                             (field 1
                                               (global Stdlib__Queue!))
                                             0))
                                       insert/1260 =
                                         (function node/1262 : int
                                           (funct-body Gbnf_parser__Core.Make.lfp.LFP.Workset.insert lib/Core.ml(116)<ghost>:3526-3560
                                             (before Gbnf_parser__Core.Make.lfp.LFP.Workset.insert lib/Core.ml(117):3537-3560
                                               (after Gbnf_parser__Core.Make.lfp.LFP.Workset.insert lib/Core.ml(117):3537-3560
                                                 (apply
                                                   (field 3
                                                     (global Stdlib__Queue!))
                                                   node/1262 workset/1217)))))
                                       repeat/1263 =
                                         (function f/1265 : int
                                           (funct-body Gbnf_parser__Core.Make.lfp.LFP.Workset.repeat lib/Core.ml(119)<ghost>:3575-3657
                                             (before Gbnf_parser__Core.Make.lfp.LFP.Workset.repeat lib/Core.ml(120):3583-3657
                                               (while
                                                 (not
                                                   (after Gbnf_parser__Core.Make.lfp.LFP.Workset.repeat lib/Core.ml(120):3593-3617
                                                     (apply
                                                       (field 12
                                                         (global Stdlib__Queue!))
                                                       workset/1217)))
                                                 (before Gbnf_parser__Core.Make.lfp.LFP.Workset.repeat lib/Core.ml(121):3627-3648
                                                   (after Gbnf_parser__Core.Make.lfp.LFP.Workset.repeat lib/Core.ml(121):3627-3648
                                                     (apply f/1265
                                                       (after Gbnf_parser__Core.Make.lfp.LFP.Workset.repeat lib/Core.ml(121):3629-3648
                                                         (apply
                                                           (field 6
                                                             (global Stdlib__Queue!))
                                                           workset/1217))))))))))
                                      (pseudo Gbnf_parser__Core.Make.lfp.LFP.Workset lib/Core.ml(109):3436-3662
                                        (makeblock 0 insert/1260 repeat/1263))))
                                signal/1269 =
                                  (function subject/1271 : int
                                    (funct-body Gbnf_parser__Core.Make.lfp.LFP.signal lib/Core.ml(139)<ghost>:4280-4416
                                      (before Gbnf_parser__Core.Make.lfp.LFP.signal lib/Core.ml(140):4292-4416
                                        (after Gbnf_parser__Core.Make.lfp.LFP.signal lib/Core.ml(140):4292-4416
                                          (apply
                                            (field 16 (global Stdlib__List!))
                                            (function observer/1335 : int
                                              (funct-body Gbnf_parser__Core.Make.lfp.LFP.signal.(fun) lib/Core.ml(140):4302-4387
                                                (before Gbnf_parser__Core.Make.lfp.LFP.signal.(fun) lib/Core.ml(141):4323-4383
                                                  (seq
                                                    (after Gbnf_parser__Core.Make.lfp.LFP.signal.(fun) lib/Core.ml(141):4323-4354
                                                      (apply
                                                        (field 6
                                                          (global Gbnf_parser__CoreDependencyGraph!))
                                                        observer/1335))
                                                    (before Gbnf_parser__Core.Make.lfp.LFP.signal.(fun) lib/Core.ml(142):4360-4383
                                                      (after Gbnf_parser__Core.Make.lfp.LFP.signal.(fun) lib/Core.ml(142):4360-4383
                                                        (apply
                                                          (field 0
                                                            Workset/1268)
                                                          observer/1335)))))))
                                            (after Gbnf_parser__Core.Make.lfp.LFP.signal lib/Core.ml(143):4388-4416
                                              (apply
                                                (field 3
                                                  (global Gbnf_parser__CoreDependencyGraph!))
                                                subject/1271)))))))
                                permanent/1336 =
                                  (after Gbnf_parser__Core.Make.lfp.LFP.permanent lib/Core.ml(155):4773-4783
                                    (apply (field 0 M/1177) 0))
                                transient/1337 =
                                  (after Gbnf_parser__Core.Make.lfp.LFP.transient lib/Core.ml(164):5151-5161
                                    (apply (field 0 M/1177) 0))
                                freeze/1338 =
                                  (function param/1342[int] : int
                                    (funct-body Gbnf_parser__Core.Make.lfp.LFP.freeze lib/Core.ml(170)<ghost>:5348-5449
                                      (before Gbnf_parser__Core.Make.lfp.LFP.freeze lib/Core.ml(171):5355-5449
                                        (seq
                                          (after Gbnf_parser__Core.Make.lfp.LFP.freeze lib/Core.ml(171):5355-5428
                                            (apply (field 4 M/1177)
                                              (function v/1340 node/1341
                                                : int
                                                (funct-body Gbnf_parser__Core.Make.lfp.LFP.freeze.(fun) lib/Core.ml(171):5362-5418
                                                  (before Gbnf_parser__Core.Make.lfp.LFP.freeze.(fun) lib/Core.ml(172):5381-5414
                                                    (after Gbnf_parser__Core.Make.lfp.LFP.freeze.(fun) lib/Core.ml(172):5381-5414
                                                      (apply (field 1 M/1177)
                                                        v/1340
                                                        (after Gbnf_parser__Core.Make.lfp.LFP.freeze.(fun) lib/Core.ml(172):5389-5404
                                                          (apply
                                                            property/1211
                                                            node/1341))
                                                        permanent/1336)))))
                                              transient/1337))
                                          (before Gbnf_parser__Core.Make.lfp.LFP.freeze lib/Core.ml(174):5432-5449
                                            (after Gbnf_parser__Core.Make.lfp.LFP.freeze lib/Core.ml(174):5432-5449
                                              (apply (field 3 M/1177)
                                                transient/1337))))))))
                               (letrec
                                 (solve/1343
                                    (function node/1345 : int
                                      (funct-body Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(196)<ghost>:6358-9525
                                        (before Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(199):6439-9525
                                          (let
                                            (data/1346 =
                                               (after Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(199):6450-6465
                                                 (apply
                                                   (field 1
                                                     (global Gbnf_parser__CoreDependencyGraph!))
                                                   node/1345)))
                                            (before Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(209):6986-9525
                                              (let
                                                (alive/1347 =
                                                   (makemutable 0 (int) 1)
                                                 subjects/1348 =
                                                   (makemutable 0 0))
                                                (before Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(215):7255-9525
                                                  (let
                                                    (request/1349 =
                                                       (function v/1351
                                                         (funct-body Gbnf_parser__Core.Make.lfp.LFP.solve.request lib/Core.ml(215)<ghost>:7267-7615
                                                           (before Gbnf_parser__Core.Make.lfp.LFP.solve.request lib/Core.ml(216):7299-7615
                                                             (seq
                                                               (if
                                                                 (field 0
                                                                   alive/1347)
                                                                 0
                                                                 (raise
                                                                   (after Gbnf_parser__Core.Make.lfp.LFP.solve.request lib/Core.ml(216):7299-7312
                                                                    (makeblock 0
                                                                    (global Assert_failure/28!)
                                                                    [0:
                                                                    "lib/Core.ml"
                                                                    216 4]))))
                                                               (before Gbnf_parser__Core.Make.lfp.LFP.solve.request lib/Core.ml(217):7318-7615
                                                                 (try
                                                                   (after Gbnf_parser__Core.Make.lfp.LFP.solve.request lib/Core.ml(218):7328-7346
                                                                    (apply
                                                                    (field 2
                                                                    M/1177)
                                                                    v/1351
                                                                    permanent/1336))
                                                                  with exn/3116
                                                                   (if
                                                                    (==
                                                                    exn/3116
                                                                    (field 7
                                                                    (global Stdlib!)))
                                                                    (before Gbnf_parser__Core.Make.lfp.LFP.solve.request lib/Core.ml(220):7375-7615
                                                                    (let
                                                                    (subject/1352 =
                                                                    (after Gbnf_parser__Core.Make.lfp.LFP.solve.request lib/Core.ml(220):7389-7399
                                                                    (apply
                                                                    node_for/1344
                                                                    v/1351)))
                                                                    (before Gbnf_parser__Core.Make.lfp.LFP.solve.request lib/Core.ml(225):7503-7615
                                                                    (let
                                                                    (p/1353 =
                                                                    (after Gbnf_parser__Core.Make.lfp.LFP.solve.request lib/Core.ml(225):7511-7527
                                                                    (apply
                                                                    property/1211
                                                                    subject/1352)))
                                                                    (before Gbnf_parser__Core.Make.lfp.LFP.solve.request lib/Core.ml(226):7537-7615
                                                                    (seq
                                                                    (if
                                                                    (not
                                                                    (after Gbnf_parser__Core.Make.lfp.LFP.solve.request lib/Core.ml(226):7544-7560
                                                                    (apply
                                                                    (field 2
                                                                    P/1182)
                                                                    p/1353)))
                                                                    (before Gbnf_parser__Core.Make.lfp.LFP.solve.request lib/Core.ml(227):7574-7606
                                                                    (setfield_ptr 0
                                                                    subjects/1348
                                                                    (makeblock 0
                                                                    subject/1352
                                                                    (field 0
                                                                    subjects/1348))))
                                                                    0)
                                                                    (before Gbnf_parser__Core.Make.lfp.LFP.solve.request lib/Core.ml(228):7614-7615
                                                                    p/1353)))))))
                                                                    (reraise
                                                                    exn/3116)))))))))
                                                    (before Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(233):7676-9525
                                                      (let
                                                        (new_property/1354 =
                                                           (after Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(233):7695-7711
                                                             (apply
                                                               (field 0
                                                                 data/1346)
                                                               request/1349)))
                                                        (before Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(237):7812-9525
                                                          (seq
                                                            (setfield_imm 0
                                                              alive/1347 0)
                                                            (before Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(264):9162-9525
                                                              (seq
                                                                (if
                                                                  (not
                                                                    (||
                                                                    (==
                                                                    (field 0
                                                                    subjects/1348)
                                                                    0)
                                                                    (after Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(264):9188-9213
                                                                    (apply
                                                                    (field 2
                                                                    P/1182)
                                                                    new_property/1354))))
                                                                  (before Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(265):9224-9259
                                                                    (after Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(265):9224-9259
                                                                    (apply
                                                                    (field 5
                                                                    (global Gbnf_parser__CoreDependencyGraph!))
                                                                    node/1345
                                                                    (field 0
                                                                    subjects/1348))))
                                                                  0)
                                                                (before Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(270):9414-9525
                                                                  (if
                                                                    (not
                                                                    (after Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(270):9421-9457
                                                                    (apply
                                                                    (field 1
                                                                    P/1182)
                                                                    (field 1
                                                                    data/1346)
                                                                    new_property/1354)))
                                                                    (before Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(270):9463-9525
                                                                    (seq
                                                                    (setfield_ptr 1
                                                                    data/1346
                                                                    new_property/1354)
                                                                    (before Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(272):9508-9519
                                                                    (after Gbnf_parser__Core.Make.lfp.LFP.solve lib/Core.ml(272):9508-9519
                                                                    (apply
                                                                    signal/1269
                                                                    node/1345)))))
                                                                    0))))))))))))))))
                                   node_for/1344
                                     (function v/1355
                                       (funct-body Gbnf_parser__Core.Make.lfp.LFP.node_for lib/Core.ml(298)<ghost>:10983-11412
                                         (before Gbnf_parser__Core.Make.lfp.LFP.node_for lib/Core.ml(299):11009-11412
                                           (try
                                             (after Gbnf_parser__Core.Make.lfp.LFP.node_for lib/Core.ml(300):11017-11035
                                               (apply (field 2 M/1177) v/1355
                                                 transient/1337))
                                            with exn/3117
                                             (if
                                               (== exn/3117
                                                 (field 7 (global Stdlib!)))
                                               (before Gbnf_parser__Core.Make.lfp.LFP.node_for lib/Core.ml(302):11060-11412
                                                 (let
                                                   (node/1356 =
                                                      (after Gbnf_parser__Core.Make.lfp.LFP.node_for lib/Core.ml(302):11071-11120
                                                        (apply
                                                          (field 0
                                                            (global Gbnf_parser__CoreDependencyGraph!))
                                                          (makemutable 0
                                                            (after Gbnf_parser__Core.Make.lfp.LFP.node_for lib/Core.ml(302):11092-11097
                                                              (apply eqs/1216
                                                                v/1355))
                                                            (field 0 P/1182)))))
                                                   (before Gbnf_parser__Core.Make.lfp.LFP.node_for lib/Core.ml(306):11333-11412
                                                     (seq
                                                       (after Gbnf_parser__Core.Make.lfp.LFP.node_for lib/Core.ml(306):11333-11355
                                                         (apply
                                                           (field 1 M/1177)
                                                           v/1355 node/1356
                                                           transient/1337))
                                                       (before Gbnf_parser__Core.Make.lfp.LFP.node_for lib/Core.ml(307):11361-11412
                                                         (seq
                                                           (after Gbnf_parser__Core.Make.lfp.LFP.node_for lib/Core.ml(307):11361-11371
                                                             (apply
                                                               solve/1343
                                                               node/1356))
                                                           (before Gbnf_parser__Core.Make.lfp.LFP.node_for lib/Core.ml(308):11408-11412
                                                             node/1356)))))))
                                               (reraise exn/3117)))))))
                                 (let
                                   (inactive/1357 = (makemutable 0 (int) 1)
                                    get/1358 =
                                      (function v/1360
                                        (funct-body Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(319)<ghost>:11663-11893
                                          (before Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(320):11693-11893
                                            (try
                                              (after Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(321):11701-11719
                                                (apply (field 2 M/1177)
                                                  v/1360 permanent/1336))
                                             with exn/3119
                                              (if
                                                (== exn/3119
                                                  (field 7 (global Stdlib!)))
                                                (before Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(323):11744-11893
                                                  (seq
                                                    (if
                                                      (field 0 inactive/1357)
                                                      0
                                                      (raise
                                                        (after Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(323):11744-11760
                                                          (makeblock 0
                                                            (global Assert_failure/28!)
                                                            [0:
                                                             "lib/Core.ml"
                                                             323 4]))))
                                                    (before Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(324):11766-11893
                                                      (seq
                                                        (setfield_imm 0
                                                          inactive/1357 0)
                                                        (before Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(325):11789-11893
                                                          (let
                                                            (node/1361 =
                                                               (after Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(325):11800-11810
                                                                 (apply
                                                                   node_for/1344
                                                                   v/1360)))
                                                            (before Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(326):11818-11893
                                                              (seq
                                                                (after Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(326):11818-11838
                                                                  (apply
                                                                    (field 1
                                                                    Workset/1268)
                                                                    solve/1343))
                                                                (before Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(327):11844-11893
                                                                  (seq
                                                                    (after Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(327):11844-11852
                                                                    (apply
                                                                    freeze/1338
                                                                    0))
                                                                    (before Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(328):11858-11893
                                                                    (seq
                                                                    (setfield_imm 0
                                                                    inactive/1357
                                                                    1)
                                                                    (before Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(329):11880-11893
                                                                    (after Gbnf_parser__Core.Make.lfp.LFP.get lib/Core.ml(329):11880-11893
                                                                    (apply
                                                                    property/1211
                                                                    node/1361)))))))))))))))
                                                (reraise exn/3119)))))))
                                   (pseudo Gbnf_parser__Core.Make.lfp.LFP lib/Core.ml(83):2664-12017
                                     (makeblock 0 Workset/1268 signal/1269
                                       permanent/1336 transient/1337
                                       freeze/1338 solve/1343 node_for/1344
                                       inactive/1357 get/1358)))))))
                        (field 8 LFP/1362))))))
             (pseudo Gbnf_parser__Core.Make lib/Core.ml(23):1158-12033
               (makeblock 0 property/1211 lfp/1214)))))
     ForOrderedType/1746 =
       (module-defn(ForOrderedType/1746) Gbnf_parser__Core lib/Core.ml(344):12155-12278
         (function T/3127 P/3126 is_a_functor
           (let (T/1375 =a T/3127 P/1376 =a P/3126)
             (apply
               (apply Make/1363
                 (let
                   (let/3125 =
                      (apply
                        (let
                          (let/3124 = (field 9 (global Gbnf_parser__Glue!)))
                          (field 9 (global Gbnf_parser__Glue!)))
                        (let
                          (let/3123 =
                             (apply
                               (let
                                 (let/3122 = (field 0 (global Stdlib__Map!)))
                                 (field 0 (global Stdlib__Map!)))
                               T/1375))
                          (makeblock 0 (field 0 let/3123) (field 3 let/3123)
                            (field 27 let/3123) (field 11 let/3123)))))
                   (makeblock 0 (field 0 let/3125) (field 2 let/3125)
                     (field 3 let/3125) (field 1 let/3125)
                     (field 4 let/3125))))
               P/1376))))
     ForHashedType/2021 =
       (module-defn(ForHashedType/2021) Gbnf_parser__Core lib/Core.ml(349):12280-12387
         (function T/3131 P/3130 is_a_functor
           (let (T/1830 =a T/3131 P/1831 =a P/3130)
             (apply
               (apply Make/1363
                 (let
                   (let/3129 =
                      (apply
                        (let
                          (let/3128 = (field 12 (global Gbnf_parser__Glue!)))
                          (field 12 (global Gbnf_parser__Glue!)))
                        T/1830))
                   (makeblock 0 (field 19 let/3129) (field 20 let/3129)
                     (field 21 let/3129) (field 0 let/3129)
                     (field 8 let/3129))))
               P/1831))))
     ForType/2052 =
       (module-defn(ForType/2052) Gbnf_parser__Core lib/Core.ml(354):12389-12484
         (function T/3134 P/3133 is_a_functor
           (let (T/2023 =a T/3134 P/2024 =a P/3133)
             (apply
               (apply ForHashedType/2021
                 (apply
                   (let (let/3132 = (field 4 (global Gbnf_parser__Glue!)))
                     (field 4 (global Gbnf_parser__Glue!)))
                   T/2023))
               P/2024))))
     *match*/3142 =
       (after Gbnf_parser__Core lib/Core.ml(357)<ghost>:12484-12484
         (apply (field 5 (global Ppx_inline_test_lib!)) "gbnf_parser"))
     *match*/3140 =
       (after Gbnf_parser__Core lib/Core.ml(357)<ghost>:12484-12484
         (apply (field 1 (field 5 (global Expect_test_collector!))) 0))
     *match*/3138 =
       (after Gbnf_parser__Core lib/Core.ml(357)<ghost>:12484-12484
         (apply
           (field 1 (field 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
           0))
     *match*/3136 =
       (after Gbnf_parser__Core lib/Core.ml(357)<ghost>:12484-12484
         (apply (field 4 (global Ppx_module_timer_runtime!))
           #"Gbnf_parser__Core")))
    (pseudo <unknown location>
      (makeblock 0 Make/1363 ForOrderedType/1746 ForHashedType/2021
        ForType/2052))))
