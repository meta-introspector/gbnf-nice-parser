[
  structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
    Pstr_attribute "ocaml.ppx.context"
    [
      structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
        Pstr_eval
        expression (_none_[0,0+-1]..[0,0+-1]) ghost
          Pexp_record
          [
            "tool_name" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_constant PConst_string("ppx_driver",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
            "include_dirs" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "load_path" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "open_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "for_package" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "None" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "debug" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_threads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_vmthreads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "recursive_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "principal" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "transparent_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unboxed_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unsafe_string" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "cookies" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                Some
                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                    Pexp_tuple
                    [
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_tuple
                        [
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_constant PConst_string("inline_tests",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                          expression (<command-line>[1,0+0]..[1,0+9])
                            Pexp_constant PConst_string("enabled",(<command-line>[1,0+1]..[1,0+8]),None)
                        ]
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                        Some
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_tuple
                            [
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_tuple
                                [
                                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                    Pexp_constant PConst_string("library-name",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                                  expression (<command-line>[1,0+0]..[1,0+13])
                                    Pexp_constant PConst_string("gbnf_parser",(<command-line>[1,0+1]..[1,0+12]),None)
                                ]
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                                None
                            ]
                    ]
          ]
          None
    ]
  structure_item (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
          Ppat_construct "()" (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
          None
        expression (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
          Pexp_apply
          expression (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
            Pexp_ident "Ppx_module_timer_runtime.record_start" (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
                Pexp_ident "Ppx_module_timer_runtime.__MODULE__" (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
          ]
    ]
  structure_item (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
          Ppat_construct "()" (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
          None
        expression (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
          Pexp_apply
          expression (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
            Pexp_ident "Ppx_bench_lib.Benchmark_accumulator.Current_libname.set" (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost,None)
          ]
    ]
  structure_item (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
          Ppat_construct "()" (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
          None
        expression (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
          Pexp_apply
          expression (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
            Pexp_ident "Expect_test_collector.Current_file.set" (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
          [
            <arg>
            Labelled "absolute_filename"
              expression (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
                Pexp_constant PConst_string("lib/parameters.ml",(lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost,None)
          ]
    ]
  structure_item (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
          Ppat_construct "()" (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
          None
        expression (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
          Pexp_apply
          expression (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
            Pexp_ident "Ppx_inline_test_lib.set_lib_and_partition" (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
          [
            <arg>
            Nolabel
              expression (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost,None)
            <arg>
            Nolabel
              expression (lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost
                Pexp_constant PConst_string("parameters.ml",(lib/parameters.ml[16,1025+0]..[16,1025+0]) ghost,None)
          ]
    ]
  structure_item (lib/parameters.ml[16,1025+0]..[16,1025+11])
    Pstr_open Fresh
    module_expr (lib/parameters.ml[16,1025+5]..[16,1025+11])
      Pmod_ident "Syntax" (lib/parameters.ml[16,1025+5]..[16,1025+11])
  structure_item (lib/parameters.ml[17,1037+0]..[17,1037+14])
    Pstr_open Fresh
    module_expr (lib/parameters.ml[17,1037+5]..[17,1037+14])
      Pmod_ident "Positions" (lib/parameters.ml[17,1037+5]..[17,1037+14])
  structure_item (lib/parameters.ml[19,1053+0]..[24,1124+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[19,1053+4]..[19,1053+7])
          Ppat_var "app" (lib/parameters.ml[19,1053+4]..[19,1053+7])
        expression (lib/parameters.ml[19,1053+8]..[24,1124+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/parameters.ml[19,1053+8]..[19,1053+9])
            Ppat_var "p" (lib/parameters.ml[19,1053+8]..[19,1053+9])
          expression (lib/parameters.ml[19,1053+10]..[24,1124+26]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/parameters.ml[19,1053+10]..[19,1053+12])
              Ppat_var "ps" (lib/parameters.ml[19,1053+10]..[19,1053+12])
            expression (lib/parameters.ml[20,1068+2]..[24,1124+26])
              Pexp_match
              expression (lib/parameters.ml[20,1068+8]..[20,1068+10])
                Pexp_ident "ps" (lib/parameters.ml[20,1068+8]..[20,1068+10])
              [
                <case>
                  pattern (lib/parameters.ml[21,1084+4]..[21,1084+6])
                    Ppat_construct "[]" (lib/parameters.ml[21,1084+4]..[21,1084+6])
                    None
                  expression (lib/parameters.ml[22,1094+6]..[22,1094+20])
                    Pexp_construct "ParameterVar" (lib/parameters.ml[22,1094+6]..[22,1094+18])
                    Some
                      expression (lib/parameters.ml[22,1094+19]..[22,1094+20])
                        Pexp_ident "p" (lib/parameters.ml[22,1094+19]..[22,1094+20])
                <case>
                  pattern (lib/parameters.ml[23,1115+4]..[23,1115+5])
                    Ppat_any
                  expression (lib/parameters.ml[24,1124+6]..[24,1124+26])
                    Pexp_construct "ParameterApp" (lib/parameters.ml[24,1124+6]..[24,1124+18])
                    Some
                      expression (lib/parameters.ml[24,1124+19]..[24,1124+26])
                        Pexp_tuple
                        [
                          expression (lib/parameters.ml[24,1124+20]..[24,1124+21])
                            Pexp_ident "p" (lib/parameters.ml[24,1124+20]..[24,1124+21])
                          expression (lib/parameters.ml[24,1124+23]..[24,1124+25])
                            Pexp_ident "ps" (lib/parameters.ml[24,1124+23]..[24,1124+25])
                        ]
              ]
    ]
  structure_item (lib/parameters.ml[26,1152+0]..[33,1332+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[26,1152+4]..[26,1152+9])
          Ppat_var "unapp" (lib/parameters.ml[26,1152+4]..[26,1152+9])
        expression (lib/parameters.ml[26,1152+12]..[33,1332+18])
          Pexp_function
          [
            <case>
              pattern (lib/parameters.ml[27,1173+4]..[27,1173+18])
                Ppat_construct "ParameterVar" (lib/parameters.ml[27,1173+4]..[27,1173+16])
                Some
                  []
                  pattern (lib/parameters.ml[27,1173+17]..[27,1173+18])
                    Ppat_var "x" (lib/parameters.ml[27,1173+17]..[27,1173+18])
              expression (lib/parameters.ml[28,1195+6]..[28,1195+13])
                Pexp_tuple
                [
                  expression (lib/parameters.ml[28,1195+7]..[28,1195+8])
                    Pexp_ident "x" (lib/parameters.ml[28,1195+7]..[28,1195+8])
                  expression (lib/parameters.ml[28,1195+10]..[28,1195+12])
                    Pexp_construct "[]" (lib/parameters.ml[28,1195+10]..[28,1195+12])
                    None
                ]
            <case>
              pattern (lib/parameters.ml[29,1209+4]..[29,1209+24])
                Ppat_construct "ParameterApp" (lib/parameters.ml[29,1209+4]..[29,1209+16])
                Some
                  []
                  pattern (lib/parameters.ml[29,1209+17]..[29,1209+24])
                    Ppat_tuple
                    [
                      pattern (lib/parameters.ml[29,1209+18]..[29,1209+19])
                        Ppat_var "p" (lib/parameters.ml[29,1209+18]..[29,1209+19])
                      pattern (lib/parameters.ml[29,1209+21]..[29,1209+23])
                        Ppat_var "ps" (lib/parameters.ml[29,1209+21]..[29,1209+23])
                    ]
              expression (lib/parameters.ml[30,1237+6]..[30,1237+13])
                Pexp_tuple
                [
                  expression (lib/parameters.ml[30,1237+7]..[30,1237+8])
                    Pexp_ident "p" (lib/parameters.ml[30,1237+7]..[30,1237+8])
                  expression (lib/parameters.ml[30,1237+10]..[30,1237+12])
                    Pexp_ident "ps" (lib/parameters.ml[30,1237+10]..[30,1237+12])
                ]
            <case>
              pattern (lib/parameters.ml[31,1251+4]..[31,1251+24])
                Ppat_construct "ParameterAnonymous" (lib/parameters.ml[31,1251+4]..[31,1251+22])
                Some
                  []
                  pattern (lib/parameters.ml[31,1251+23]..[31,1251+24])
                    Ppat_any
              expression (lib/parameters.ml[33,1332+6]..[33,1332+18])
                Pexp_assert
                expression (lib/parameters.ml[33,1332+13]..[33,1332+18])
                  Pexp_construct "false" (lib/parameters.ml[33,1332+13]..[33,1332+18])
                  None
          ]
    ]
  structure_item (lib/parameters.ml[35,1352+0]..[40,1450+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[35,1352+4]..[35,1352+9])
          Ppat_var "unvar" (lib/parameters.ml[35,1352+4]..[35,1352+9])
        expression (lib/parameters.ml[35,1352+12]..[40,1450+18])
          Pexp_function
          [
            <case>
              pattern (lib/parameters.ml[36,1373+4]..[36,1373+18])
                Ppat_construct "ParameterVar" (lib/parameters.ml[36,1373+4]..[36,1373+16])
                Some
                  []
                  pattern (lib/parameters.ml[36,1373+17]..[36,1373+18])
                    Ppat_var "x" (lib/parameters.ml[36,1373+17]..[36,1373+18])
              expression (lib/parameters.ml[37,1395+6]..[37,1395+7])
                Pexp_ident "x" (lib/parameters.ml[37,1395+6]..[37,1395+7])
            <case>
              pattern (lib/parameters.ml[38,1403+4]..[39,1422+24])
                Ppat_or
                pattern (lib/parameters.ml[38,1403+4]..[38,1403+18])
                  Ppat_construct "ParameterApp" (lib/parameters.ml[38,1403+4]..[38,1403+16])
                  Some
                    []
                    pattern (lib/parameters.ml[38,1403+17]..[38,1403+18])
                      Ppat_any
                pattern (lib/parameters.ml[39,1422+4]..[39,1422+24])
                  Ppat_construct "ParameterAnonymous" (lib/parameters.ml[39,1422+4]..[39,1422+22])
                  Some
                    []
                    pattern (lib/parameters.ml[39,1422+23]..[39,1422+24])
                      Ppat_any
              expression (lib/parameters.ml[40,1450+6]..[40,1450+18])
                Pexp_assert
                expression (lib/parameters.ml[40,1450+13]..[40,1450+18])
                  Pexp_construct "false" (lib/parameters.ml[40,1450+13]..[40,1450+18])
                  None
          ]
    ]
  structure_item (lib/parameters.ml[42,1470+0]..[49,1697+18])
    Pstr_value Rec
    [
      <def>
        pattern (lib/parameters.ml[42,1470+8]..[42,1470+11])
          Ppat_var "map" (lib/parameters.ml[42,1470+8]..[42,1470+11])
        expression (lib/parameters.ml[42,1470+12]..[49,1697+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/parameters.ml[42,1470+12]..[42,1470+13])
            Ppat_var "f" (lib/parameters.ml[42,1470+12]..[42,1470+13])
          expression (lib/parameters.ml[42,1470+16]..[49,1697+18])
            Pexp_function
            [
              <case>
                pattern (lib/parameters.ml[43,1495+4]..[43,1495+18])
                  Ppat_construct "ParameterVar" (lib/parameters.ml[43,1495+4]..[43,1495+16])
                  Some
                    []
                    pattern (lib/parameters.ml[43,1495+17]..[43,1495+18])
                      Ppat_var "x" (lib/parameters.ml[43,1495+17]..[43,1495+18])
                expression (lib/parameters.ml[44,1517+6]..[44,1517+24])
                  Pexp_construct "ParameterVar" (lib/parameters.ml[44,1517+6]..[44,1517+18])
                  Some
                    expression (lib/parameters.ml[44,1517+19]..[44,1517+24])
                      Pexp_apply
                      expression (lib/parameters.ml[44,1517+20]..[44,1517+21])
                        Pexp_ident "f" (lib/parameters.ml[44,1517+20]..[44,1517+21])
                      [
                        <arg>
                        Nolabel
                          expression (lib/parameters.ml[44,1517+22]..[44,1517+23])
                            Pexp_ident "x" (lib/parameters.ml[44,1517+22]..[44,1517+23])
                      ]
              <case>
                pattern (lib/parameters.ml[45,1542+4]..[45,1542+24])
                  Ppat_construct "ParameterApp" (lib/parameters.ml[45,1542+4]..[45,1542+16])
                  Some
                    []
                    pattern (lib/parameters.ml[45,1542+17]..[45,1542+24])
                      Ppat_tuple
                      [
                        pattern (lib/parameters.ml[45,1542+18]..[45,1542+19])
                          Ppat_var "p" (lib/parameters.ml[45,1542+18]..[45,1542+19])
                        pattern (lib/parameters.ml[45,1542+21]..[45,1542+23])
                          Ppat_var "ps" (lib/parameters.ml[45,1542+21]..[45,1542+23])
                      ]
                expression (lib/parameters.ml[46,1570+6]..[46,1570+45])
                  Pexp_construct "ParameterApp" (lib/parameters.ml[46,1570+6]..[46,1570+18])
                  Some
                    expression (lib/parameters.ml[46,1570+19]..[46,1570+45])
                      Pexp_tuple
                      [
                        expression (lib/parameters.ml[46,1570+20]..[46,1570+23])
                          Pexp_apply
                          expression (lib/parameters.ml[46,1570+20]..[46,1570+21])
                            Pexp_ident "f" (lib/parameters.ml[46,1570+20]..[46,1570+21])
                          [
                            <arg>
                            Nolabel
                              expression (lib/parameters.ml[46,1570+22]..[46,1570+23])
                                Pexp_ident "p" (lib/parameters.ml[46,1570+22]..[46,1570+23])
                          ]
                        expression (lib/parameters.ml[46,1570+25]..[46,1570+44])
                          Pexp_apply
                          expression (lib/parameters.ml[46,1570+25]..[46,1570+33])
                            Pexp_ident "List.map" (lib/parameters.ml[46,1570+25]..[46,1570+33])
                          [
                            <arg>
                            Nolabel
                              expression (lib/parameters.ml[46,1570+34]..[46,1570+41])
                                Pexp_apply
                                expression (lib/parameters.ml[46,1570+35]..[46,1570+38])
                                  Pexp_ident "map" (lib/parameters.ml[46,1570+35]..[46,1570+38])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/parameters.ml[46,1570+39]..[46,1570+40])
                                      Pexp_ident "f" (lib/parameters.ml[46,1570+39]..[46,1570+40])
                                ]
                            <arg>
                            Nolabel
                              expression (lib/parameters.ml[46,1570+42]..[46,1570+44])
                                Pexp_ident "ps" (lib/parameters.ml[46,1570+42]..[46,1570+44])
                          ]
                      ]
              <case>
                pattern (lib/parameters.ml[47,1616+4]..[47,1616+24])
                  Ppat_construct "ParameterAnonymous" (lib/parameters.ml[47,1616+4]..[47,1616+22])
                  Some
                    []
                    pattern (lib/parameters.ml[47,1616+23]..[47,1616+24])
                      Ppat_any
                expression (lib/parameters.ml[49,1697+6]..[49,1697+18])
                  Pexp_assert
                  expression (lib/parameters.ml[49,1697+13]..[49,1697+18])
                    Pexp_construct "false" (lib/parameters.ml[49,1697+13]..[49,1697+18])
                    None
            ]
    ]
  structure_item (lib/parameters.ml[51,1717+0]..[58,1938+18])
    Pstr_value Rec
    [
      <def>
        pattern (lib/parameters.ml[51,1717+8]..[51,1717+12])
          Ppat_var "fold" (lib/parameters.ml[51,1717+8]..[51,1717+12])
        expression (lib/parameters.ml[51,1717+13]..[58,1938+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/parameters.ml[51,1717+13]..[51,1717+14])
            Ppat_var "f" (lib/parameters.ml[51,1717+13]..[51,1717+14])
          expression (lib/parameters.ml[51,1717+15]..[58,1938+18]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/parameters.ml[51,1717+15]..[51,1717+19])
              Ppat_var "init" (lib/parameters.ml[51,1717+15]..[51,1717+19])
            expression (lib/parameters.ml[51,1717+22]..[58,1938+18])
              Pexp_function
              [
                <case>
                  pattern (lib/parameters.ml[52,1748+4]..[52,1748+18])
                    Ppat_construct "ParameterVar" (lib/parameters.ml[52,1748+4]..[52,1748+16])
                    Some
                      []
                      pattern (lib/parameters.ml[52,1748+17]..[52,1748+18])
                        Ppat_var "x" (lib/parameters.ml[52,1748+17]..[52,1748+18])
                  expression (lib/parameters.ml[53,1770+6]..[53,1770+14])
                    Pexp_apply
                    expression (lib/parameters.ml[53,1770+6]..[53,1770+7])
                      Pexp_ident "f" (lib/parameters.ml[53,1770+6]..[53,1770+7])
                    [
                      <arg>
                      Nolabel
                        expression (lib/parameters.ml[53,1770+8]..[53,1770+12])
                          Pexp_ident "init" (lib/parameters.ml[53,1770+8]..[53,1770+12])
                      <arg>
                      Nolabel
                        expression (lib/parameters.ml[53,1770+13]..[53,1770+14])
                          Pexp_ident "x" (lib/parameters.ml[53,1770+13]..[53,1770+14])
                    ]
                <case>
                  pattern (lib/parameters.ml[54,1785+4]..[54,1785+24])
                    Ppat_construct "ParameterApp" (lib/parameters.ml[54,1785+4]..[54,1785+16])
                    Some
                      []
                      pattern (lib/parameters.ml[54,1785+17]..[54,1785+24])
                        Ppat_tuple
                        [
                          pattern (lib/parameters.ml[54,1785+18]..[54,1785+19])
                            Ppat_var "p" (lib/parameters.ml[54,1785+18]..[54,1785+19])
                          pattern (lib/parameters.ml[54,1785+21]..[54,1785+23])
                            Ppat_var "ps" (lib/parameters.ml[54,1785+21]..[54,1785+23])
                        ]
                  expression (lib/parameters.ml[55,1813+6]..[55,1813+43])
                    Pexp_apply
                    expression (lib/parameters.ml[55,1813+6]..[55,1813+7])
                      Pexp_ident "f" (lib/parameters.ml[55,1813+6]..[55,1813+7])
                    [
                      <arg>
                      Nolabel
                        expression (lib/parameters.ml[55,1813+8]..[55,1813+41])
                          Pexp_apply
                          expression (lib/parameters.ml[55,1813+9]..[55,1813+23])
                            Pexp_ident "List.fold_left" (lib/parameters.ml[55,1813+9]..[55,1813+23])
                          [
                            <arg>
                            Nolabel
                              expression (lib/parameters.ml[55,1813+24]..[55,1813+32])
                                Pexp_apply
                                expression (lib/parameters.ml[55,1813+25]..[55,1813+29])
                                  Pexp_ident "fold" (lib/parameters.ml[55,1813+25]..[55,1813+29])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/parameters.ml[55,1813+30]..[55,1813+31])
                                      Pexp_ident "f" (lib/parameters.ml[55,1813+30]..[55,1813+31])
                                ]
                            <arg>
                            Nolabel
                              expression (lib/parameters.ml[55,1813+33]..[55,1813+37])
                                Pexp_ident "init" (lib/parameters.ml[55,1813+33]..[55,1813+37])
                            <arg>
                            Nolabel
                              expression (lib/parameters.ml[55,1813+38]..[55,1813+40])
                                Pexp_ident "ps" (lib/parameters.ml[55,1813+38]..[55,1813+40])
                          ]
                      <arg>
                      Nolabel
                        expression (lib/parameters.ml[55,1813+42]..[55,1813+43])
                          Pexp_ident "p" (lib/parameters.ml[55,1813+42]..[55,1813+43])
                    ]
                <case>
                  pattern (lib/parameters.ml[56,1857+4]..[56,1857+24])
                    Ppat_construct "ParameterAnonymous" (lib/parameters.ml[56,1857+4]..[56,1857+22])
                    Some
                      []
                      pattern (lib/parameters.ml[56,1857+23]..[56,1857+24])
                        Ppat_any
                  expression (lib/parameters.ml[58,1938+6]..[58,1938+18])
                    Pexp_assert
                    expression (lib/parameters.ml[58,1938+13]..[58,1938+18])
                      Pexp_construct "false" (lib/parameters.ml[58,1938+13]..[58,1938+18])
                      None
              ]
    ]
  structure_item (lib/parameters.ml[60,1958+0]..[61,1980+64])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[60,1958+4]..[60,1958+15])
          Ppat_var "identifiers" (lib/parameters.ml[60,1958+4]..[60,1958+15])
        expression (lib/parameters.ml[60,1958+16]..[61,1980+64]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/parameters.ml[60,1958+16]..[60,1958+17])
            Ppat_var "m" (lib/parameters.ml[60,1958+16]..[60,1958+17])
          expression (lib/parameters.ml[60,1958+18]..[61,1980+64]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/parameters.ml[60,1958+18]..[60,1958+19])
              Ppat_var "p" (lib/parameters.ml[60,1958+18]..[60,1958+19])
            expression (lib/parameters.ml[61,1980+2]..[61,1980+64])
              Pexp_apply
              expression (lib/parameters.ml[61,1980+2]..[61,1980+6])
                Pexp_ident "fold" (lib/parameters.ml[61,1980+2]..[61,1980+6])
              [
                <arg>
                Nolabel
                  expression (lib/parameters.ml[61,1980+7]..[61,1980+60])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lib/parameters.ml[61,1980+12]..[61,1980+16])
                      Ppat_var "accu" (lib/parameters.ml[61,1980+12]..[61,1980+16])
                    expression (lib/parameters.ml[61,1980+17]..[61,1980+59]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lib/parameters.ml[61,1980+17]..[61,1980+18])
                        Ppat_var "x" (lib/parameters.ml[61,1980+17]..[61,1980+18])
                      expression (lib/parameters.ml[61,1980+22]..[61,1980+59])
                        Pexp_apply
                        expression (lib/parameters.ml[61,1980+22]..[61,1980+35])
                          Pexp_ident "StringMap.add" (lib/parameters.ml[61,1980+22]..[61,1980+35])
                        [
                          <arg>
                          Nolabel
                            expression (lib/parameters.ml[61,1980+36]..[61,1980+43])
                              Pexp_field
                              expression (lib/parameters.ml[61,1980+36]..[61,1980+37])
                                Pexp_ident "x" (lib/parameters.ml[61,1980+36]..[61,1980+37])
                              "value" (lib/parameters.ml[61,1980+38]..[61,1980+43])
                          <arg>
                          Nolabel
                            expression (lib/parameters.ml[61,1980+44]..[61,1980+54])
                              Pexp_field
                              expression (lib/parameters.ml[61,1980+44]..[61,1980+45])
                                Pexp_ident "x" (lib/parameters.ml[61,1980+44]..[61,1980+45])
                              "position" (lib/parameters.ml[61,1980+46]..[61,1980+54])
                          <arg>
                          Nolabel
                            expression (lib/parameters.ml[61,1980+55]..[61,1980+59])
                              Pexp_ident "accu" (lib/parameters.ml[61,1980+55]..[61,1980+59])
                        ]
                <arg>
                Nolabel
                  expression (lib/parameters.ml[61,1980+61]..[61,1980+62])
                    Pexp_ident "m" (lib/parameters.ml[61,1980+61]..[61,1980+62])
                <arg>
                Nolabel
                  expression (lib/parameters.ml[61,1980+63]..[61,1980+64])
                    Pexp_ident "p" (lib/parameters.ml[61,1980+63]..[61,1980+64])
              ]
    ]
  structure_item (lib/parameters.ml[63,2046+0]..[70,2250+18])
    Pstr_value Rec
    [
      <def>
        pattern (lib/parameters.ml[63,2046+8]..[63,2046+14])
          Ppat_var "occurs" (lib/parameters.ml[63,2046+8]..[63,2046+14])
        expression (lib/parameters.ml[63,2046+15]..[70,2250+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/parameters.ml[63,2046+15]..[63,2046+27])
            Ppat_constraint
            pattern (lib/parameters.ml[63,2046+16]..[63,2046+17])
              Ppat_var "x" (lib/parameters.ml[63,2046+16]..[63,2046+17])
            core_type (lib/parameters.ml[63,2046+20]..[63,2046+26])
              Ptyp_constr "symbol" (lib/parameters.ml[63,2046+20]..[63,2046+26])
              []
          expression (lib/parameters.ml[63,2046+28]..[70,2250+18]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/parameters.ml[63,2046+28]..[63,2046+43])
              Ppat_constraint
              pattern (lib/parameters.ml[63,2046+29]..[63,2046+30])
                Ppat_var "p" (lib/parameters.ml[63,2046+29]..[63,2046+30])
              core_type (lib/parameters.ml[63,2046+33]..[63,2046+42])
                Ptyp_constr "parameter" (lib/parameters.ml[63,2046+33]..[63,2046+42])
                []
            expression (lib/parameters.ml[64,2092+2]..[70,2250+18])
              Pexp_match
              expression (lib/parameters.ml[64,2092+8]..[64,2092+9])
                Pexp_ident "p" (lib/parameters.ml[64,2092+8]..[64,2092+9])
              [
                <case>
                  pattern (lib/parameters.ml[65,2107+4]..[65,2107+18])
                    Ppat_construct "ParameterVar" (lib/parameters.ml[65,2107+4]..[65,2107+16])
                    Some
                      []
                      pattern (lib/parameters.ml[65,2107+17]..[65,2107+18])
                        Ppat_var "y" (lib/parameters.ml[65,2107+17]..[65,2107+18])
                  expression (lib/parameters.ml[66,2129+6]..[66,2129+17])
                    Pexp_apply
                    expression (lib/parameters.ml[66,2129+8]..[66,2129+9])
                      Pexp_ident "=" (lib/parameters.ml[66,2129+8]..[66,2129+9])
                    [
                      <arg>
                      Nolabel
                        expression (lib/parameters.ml[66,2129+6]..[66,2129+7])
                          Pexp_ident "x" (lib/parameters.ml[66,2129+6]..[66,2129+7])
                      <arg>
                      Nolabel
                        expression (lib/parameters.ml[66,2129+10]..[66,2129+17])
                          Pexp_field
                          expression (lib/parameters.ml[66,2129+10]..[66,2129+11])
                            Pexp_ident "y" (lib/parameters.ml[66,2129+10]..[66,2129+11])
                          "value" (lib/parameters.ml[66,2129+12]..[66,2129+17])
                    ]
                <case>
                  pattern (lib/parameters.ml[67,2147+4]..[67,2147+24])
                    Ppat_construct "ParameterApp" (lib/parameters.ml[67,2147+4]..[67,2147+16])
                    Some
                      []
                      pattern (lib/parameters.ml[67,2147+17]..[67,2147+24])
                        Ppat_tuple
                        [
                          pattern (lib/parameters.ml[67,2147+18]..[67,2147+19])
                            Ppat_var "y" (lib/parameters.ml[67,2147+18]..[67,2147+19])
                          pattern (lib/parameters.ml[67,2147+21]..[67,2147+23])
                            Ppat_var "ps" (lib/parameters.ml[67,2147+21]..[67,2147+23])
                        ]
                  expression (lib/parameters.ml[68,2175+6]..[68,2175+46])
                    Pexp_apply
                    expression (lib/parameters.ml[68,2175+18]..[68,2175+20])
                      Pexp_ident "||" (lib/parameters.ml[68,2175+18]..[68,2175+20])
                    [
                      <arg>
                      Nolabel
                        expression (lib/parameters.ml[68,2175+6]..[68,2175+17])
                          Pexp_apply
                          expression (lib/parameters.ml[68,2175+8]..[68,2175+9])
                            Pexp_ident "=" (lib/parameters.ml[68,2175+8]..[68,2175+9])
                          [
                            <arg>
                            Nolabel
                              expression (lib/parameters.ml[68,2175+6]..[68,2175+7])
                                Pexp_ident "x" (lib/parameters.ml[68,2175+6]..[68,2175+7])
                            <arg>
                            Nolabel
                              expression (lib/parameters.ml[68,2175+10]..[68,2175+17])
                                Pexp_field
                                expression (lib/parameters.ml[68,2175+10]..[68,2175+11])
                                  Pexp_ident "y" (lib/parameters.ml[68,2175+10]..[68,2175+11])
                                "value" (lib/parameters.ml[68,2175+12]..[68,2175+17])
                          ]
                      <arg>
                      Nolabel
                        expression (lib/parameters.ml[68,2175+21]..[68,2175+46])
                          Pexp_apply
                          expression (lib/parameters.ml[68,2175+21]..[68,2175+32])
                            Pexp_ident "List.exists" (lib/parameters.ml[68,2175+21]..[68,2175+32])
                          [
                            <arg>
                            Nolabel
                              expression (lib/parameters.ml[68,2175+33]..[68,2175+43])
                                Pexp_apply
                                expression (lib/parameters.ml[68,2175+34]..[68,2175+40])
                                  Pexp_ident "occurs" (lib/parameters.ml[68,2175+34]..[68,2175+40])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/parameters.ml[68,2175+41]..[68,2175+42])
                                      Pexp_ident "x" (lib/parameters.ml[68,2175+41]..[68,2175+42])
                                ]
                            <arg>
                            Nolabel
                              expression (lib/parameters.ml[68,2175+44]..[68,2175+46])
                                Pexp_ident "ps" (lib/parameters.ml[68,2175+44]..[68,2175+46])
                          ]
                    ]
                <case>
                  pattern (lib/parameters.ml[69,2222+4]..[69,2222+24])
                    Ppat_construct "ParameterAnonymous" (lib/parameters.ml[69,2222+4]..[69,2222+22])
                    Some
                      []
                      pattern (lib/parameters.ml[69,2222+23]..[69,2222+24])
                        Ppat_any
                  expression (lib/parameters.ml[70,2250+6]..[70,2250+18])
                    Pexp_assert
                    expression (lib/parameters.ml[70,2250+13]..[70,2250+18])
                      Pexp_construct "false" (lib/parameters.ml[70,2250+13]..[70,2250+18])
                      None
              ]
    ]
  structure_item (lib/parameters.ml[72,2270+0]..[80,2471+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[72,2270+4]..[72,2270+18])
          Ppat_var "occurs_shallow" (lib/parameters.ml[72,2270+4]..[72,2270+18])
        expression (lib/parameters.ml[72,2270+19]..[80,2471+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/parameters.ml[72,2270+19]..[72,2270+31])
            Ppat_constraint
            pattern (lib/parameters.ml[72,2270+20]..[72,2270+21])
              Ppat_var "x" (lib/parameters.ml[72,2270+20]..[72,2270+21])
            core_type (lib/parameters.ml[72,2270+24]..[72,2270+30])
              Ptyp_constr "symbol" (lib/parameters.ml[72,2270+24]..[72,2270+30])
              []
          expression (lib/parameters.ml[72,2270+32]..[80,2471+18]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/parameters.ml[72,2270+32]..[72,2270+47])
              Ppat_constraint
              pattern (lib/parameters.ml[72,2270+33]..[72,2270+34])
                Ppat_var "p" (lib/parameters.ml[72,2270+33]..[72,2270+34])
              core_type (lib/parameters.ml[72,2270+37]..[72,2270+46])
                Ptyp_constr "parameter" (lib/parameters.ml[72,2270+37]..[72,2270+46])
                []
            expression (lib/parameters.ml[73,2320+2]..[80,2471+18])
              Pexp_match
              expression (lib/parameters.ml[73,2320+8]..[73,2320+9])
                Pexp_ident "p" (lib/parameters.ml[73,2320+8]..[73,2320+9])
              [
                <case>
                  pattern (lib/parameters.ml[74,2335+4]..[74,2335+18])
                    Ppat_construct "ParameterVar" (lib/parameters.ml[74,2335+4]..[74,2335+16])
                    Some
                      []
                      pattern (lib/parameters.ml[74,2335+17]..[74,2335+18])
                        Ppat_var "y" (lib/parameters.ml[74,2335+17]..[74,2335+18])
                  expression (lib/parameters.ml[75,2357+6]..[75,2357+17])
                    Pexp_apply
                    expression (lib/parameters.ml[75,2357+8]..[75,2357+9])
                      Pexp_ident "=" (lib/parameters.ml[75,2357+8]..[75,2357+9])
                    [
                      <arg>
                      Nolabel
                        expression (lib/parameters.ml[75,2357+6]..[75,2357+7])
                          Pexp_ident "x" (lib/parameters.ml[75,2357+6]..[75,2357+7])
                      <arg>
                      Nolabel
                        expression (lib/parameters.ml[75,2357+10]..[75,2357+17])
                          Pexp_field
                          expression (lib/parameters.ml[75,2357+10]..[75,2357+11])
                            Pexp_ident "y" (lib/parameters.ml[75,2357+10]..[75,2357+11])
                          "value" (lib/parameters.ml[75,2357+12]..[75,2357+17])
                    ]
                <case>
                  pattern (lib/parameters.ml[76,2375+4]..[76,2375+23])
                    Ppat_construct "ParameterApp" (lib/parameters.ml[76,2375+4]..[76,2375+16])
                    Some
                      []
                      pattern (lib/parameters.ml[76,2375+17]..[76,2375+23])
                        Ppat_tuple
                        [
                          pattern (lib/parameters.ml[76,2375+18]..[76,2375+19])
                            Ppat_var "y" (lib/parameters.ml[76,2375+18]..[76,2375+19])
                          pattern (lib/parameters.ml[76,2375+21]..[76,2375+22])
                            Ppat_any
                        ]
                  expression (lib/parameters.ml[77,2402+6]..[78,2431+11])
                    Pexp_sequence
                    expression (lib/parameters.ml[77,2402+6]..[77,2402+27])
                      Pexp_assert
                      expression (lib/parameters.ml[77,2402+13]..[77,2402+27])
                        Pexp_apply
                        expression (lib/parameters.ml[77,2402+16]..[77,2402+18])
                          Pexp_ident "<>" (lib/parameters.ml[77,2402+16]..[77,2402+18])
                        [
                          <arg>
                          Nolabel
                            expression (lib/parameters.ml[77,2402+14]..[77,2402+15])
                              Pexp_ident "x" (lib/parameters.ml[77,2402+14]..[77,2402+15])
                          <arg>
                          Nolabel
                            expression (lib/parameters.ml[77,2402+19]..[77,2402+26])
                              Pexp_field
                              expression (lib/parameters.ml[77,2402+19]..[77,2402+20])
                                Pexp_ident "y" (lib/parameters.ml[77,2402+19]..[77,2402+20])
                              "value" (lib/parameters.ml[77,2402+21]..[77,2402+26])
                        ]
                    expression (lib/parameters.ml[78,2431+6]..[78,2431+11])
                      Pexp_construct "false" (lib/parameters.ml[78,2431+6]..[78,2431+11])
                      None
                <case>
                  pattern (lib/parameters.ml[79,2443+4]..[79,2443+24])
                    Ppat_construct "ParameterAnonymous" (lib/parameters.ml[79,2443+4]..[79,2443+22])
                    Some
                      []
                      pattern (lib/parameters.ml[79,2443+23]..[79,2443+24])
                        Ppat_any
                  expression (lib/parameters.ml[80,2471+6]..[80,2471+18])
                    Pexp_assert
                    expression (lib/parameters.ml[80,2471+13]..[80,2471+18])
                      Pexp_construct "false" (lib/parameters.ml[80,2471+13]..[80,2471+18])
                      None
              ]
    ]
  structure_item (lib/parameters.ml[82,2491+0]..[89,2675+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[82,2491+4]..[82,2491+15])
          Ppat_var "occurs_deep" (lib/parameters.ml[82,2491+4]..[82,2491+15])
        expression (lib/parameters.ml[82,2491+16]..[89,2675+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/parameters.ml[82,2491+16]..[82,2491+28])
            Ppat_constraint
            pattern (lib/parameters.ml[82,2491+17]..[82,2491+18])
              Ppat_var "x" (lib/parameters.ml[82,2491+17]..[82,2491+18])
            core_type (lib/parameters.ml[82,2491+21]..[82,2491+27])
              Ptyp_constr "symbol" (lib/parameters.ml[82,2491+21]..[82,2491+27])
              []
          expression (lib/parameters.ml[82,2491+29]..[89,2675+18]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/parameters.ml[82,2491+29]..[82,2491+44])
              Ppat_constraint
              pattern (lib/parameters.ml[82,2491+30]..[82,2491+31])
                Ppat_var "p" (lib/parameters.ml[82,2491+30]..[82,2491+31])
              core_type (lib/parameters.ml[82,2491+34]..[82,2491+43])
                Ptyp_constr "parameter" (lib/parameters.ml[82,2491+34]..[82,2491+43])
                []
            expression (lib/parameters.ml[83,2538+2]..[89,2675+18])
              Pexp_match
              expression (lib/parameters.ml[83,2538+8]..[83,2538+9])
                Pexp_ident "p" (lib/parameters.ml[83,2538+8]..[83,2538+9])
              [
                <case>
                  pattern (lib/parameters.ml[84,2553+4]..[84,2553+18])
                    Ppat_construct "ParameterVar" (lib/parameters.ml[84,2553+4]..[84,2553+16])
                    Some
                      []
                      pattern (lib/parameters.ml[84,2553+17]..[84,2553+18])
                        Ppat_any
                  expression (lib/parameters.ml[85,2575+6]..[85,2575+11])
                    Pexp_construct "false" (lib/parameters.ml[85,2575+6]..[85,2575+11])
                    None
                <case>
                  pattern (lib/parameters.ml[86,2587+4]..[86,2587+24])
                    Ppat_construct "ParameterApp" (lib/parameters.ml[86,2587+4]..[86,2587+16])
                    Some
                      []
                      pattern (lib/parameters.ml[86,2587+17]..[86,2587+24])
                        Ppat_tuple
                        [
                          pattern (lib/parameters.ml[86,2587+18]..[86,2587+19])
                            Ppat_any
                          pattern (lib/parameters.ml[86,2587+21]..[86,2587+23])
                            Ppat_var "ps" (lib/parameters.ml[86,2587+21]..[86,2587+23])
                        ]
                  expression (lib/parameters.ml[87,2615+6]..[87,2615+31])
                    Pexp_apply
                    expression (lib/parameters.ml[87,2615+6]..[87,2615+17])
                      Pexp_ident "List.exists" (lib/parameters.ml[87,2615+6]..[87,2615+17])
                    [
                      <arg>
                      Nolabel
                        expression (lib/parameters.ml[87,2615+18]..[87,2615+28])
                          Pexp_apply
                          expression (lib/parameters.ml[87,2615+19]..[87,2615+25])
                            Pexp_ident "occurs" (lib/parameters.ml[87,2615+19]..[87,2615+25])
                          [
                            <arg>
                            Nolabel
                              expression (lib/parameters.ml[87,2615+26]..[87,2615+27])
                                Pexp_ident "x" (lib/parameters.ml[87,2615+26]..[87,2615+27])
                          ]
                      <arg>
                      Nolabel
                        expression (lib/parameters.ml[87,2615+29]..[87,2615+31])
                          Pexp_ident "ps" (lib/parameters.ml[87,2615+29]..[87,2615+31])
                    ]
                <case>
                  pattern (lib/parameters.ml[88,2647+4]..[88,2647+24])
                    Ppat_construct "ParameterAnonymous" (lib/parameters.ml[88,2647+4]..[88,2647+22])
                    Some
                      []
                      pattern (lib/parameters.ml[88,2647+23]..[88,2647+24])
                        Ppat_any
                  expression (lib/parameters.ml[89,2675+6]..[89,2675+18])
                    Pexp_assert
                    expression (lib/parameters.ml[89,2675+13]..[89,2675+18])
                      Pexp_construct "false" (lib/parameters.ml[89,2675+13]..[89,2675+18])
                      None
              ]
    ]
  structure_item (lib/parameters.ml[91,2695+0]..[91,2695+18])
    Pstr_type Rec
    [
      type_declaration "t" (lib/parameters.ml[91,2695+5]..[91,2695+6]) (lib/parameters.ml[91,2695+0]..[91,2695+18])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/parameters.ml[91,2695+9]..[91,2695+18])
              Ptyp_constr "parameter" (lib/parameters.ml[91,2695+9]..[91,2695+18])
              []
    ]
  structure_item (lib/parameters.ml[93,2715+0]..[101,3000+13])
    Pstr_value Rec
    [
      <def>
        pattern (lib/parameters.ml[93,2715+8]..[93,2715+13])
          Ppat_var "equal" (lib/parameters.ml[93,2715+8]..[93,2715+13])
        expression (lib/parameters.ml[93,2715+14]..[101,3000+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/parameters.ml[93,2715+14]..[93,2715+15])
            Ppat_var "x" (lib/parameters.ml[93,2715+14]..[93,2715+15])
          expression (lib/parameters.ml[93,2715+16]..[101,3000+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lib/parameters.ml[93,2715+16]..[93,2715+17])
              Ppat_var "y" (lib/parameters.ml[93,2715+16]..[93,2715+17])
            expression (lib/parameters.ml[94,2735+2]..[101,3000+13])
              Pexp_match
              expression (lib/parameters.ml[94,2735+8]..[94,2735+12])
                Pexp_tuple
                [
                  expression (lib/parameters.ml[94,2735+8]..[94,2735+9])
                    Pexp_ident "x" (lib/parameters.ml[94,2735+8]..[94,2735+9])
                  expression (lib/parameters.ml[94,2735+11]..[94,2735+12])
                    Pexp_ident "y" (lib/parameters.ml[94,2735+11]..[94,2735+12])
                ]
              [
                <case>
                  pattern (lib/parameters.ml[95,2753+6]..[95,2753+36])
                    Ppat_tuple
                    [
                      pattern (lib/parameters.ml[95,2753+6]..[95,2753+20])
                        Ppat_construct "ParameterVar" (lib/parameters.ml[95,2753+6]..[95,2753+18])
                        Some
                          []
                          pattern (lib/parameters.ml[95,2753+19]..[95,2753+20])
                            Ppat_var "x" (lib/parameters.ml[95,2753+19]..[95,2753+20])
                      pattern (lib/parameters.ml[95,2753+22]..[95,2753+36])
                        Ppat_construct "ParameterVar" (lib/parameters.ml[95,2753+22]..[95,2753+34])
                        Some
                          []
                          pattern (lib/parameters.ml[95,2753+35]..[95,2753+36])
                            Ppat_var "y" (lib/parameters.ml[95,2753+35]..[95,2753+36])
                    ]
                  expression (lib/parameters.ml[96,2793+8]..[96,2793+25])
                    Pexp_apply
                    expression (lib/parameters.ml[96,2793+16]..[96,2793+17])
                      Pexp_ident "=" (lib/parameters.ml[96,2793+16]..[96,2793+17])
                    [
                      <arg>
                      Nolabel
                        expression (lib/parameters.ml[96,2793+8]..[96,2793+15])
                          Pexp_field
                          expression (lib/parameters.ml[96,2793+8]..[96,2793+9])
                            Pexp_ident "x" (lib/parameters.ml[96,2793+8]..[96,2793+9])
                          "value" (lib/parameters.ml[96,2793+10]..[96,2793+15])
                      <arg>
                      Nolabel
                        expression (lib/parameters.ml[96,2793+18]..[96,2793+25])
                          Pexp_field
                          expression (lib/parameters.ml[96,2793+18]..[96,2793+19])
                            Pexp_ident "y" (lib/parameters.ml[96,2793+18]..[96,2793+19])
                          "value" (lib/parameters.ml[96,2793+20]..[96,2793+25])
                    ]
                <case>
                  pattern (lib/parameters.ml[97,2819+6]..[97,2819+52])
                    Ppat_tuple
                    [
                      pattern (lib/parameters.ml[97,2819+6]..[97,2819+27])
                        Ppat_construct "ParameterApp" (lib/parameters.ml[97,2819+6]..[97,2819+18])
                        Some
                          []
                          pattern (lib/parameters.ml[97,2819+19]..[97,2819+27])
                            Ppat_tuple
                            [
                              pattern (lib/parameters.ml[97,2819+20]..[97,2819+22])
                                Ppat_var "p1" (lib/parameters.ml[97,2819+20]..[97,2819+22])
                              pattern (lib/parameters.ml[97,2819+24]..[97,2819+26])
                                Ppat_var "p2" (lib/parameters.ml[97,2819+24]..[97,2819+26])
                            ]
                      pattern (lib/parameters.ml[97,2819+29]..[97,2819+52])
                        Ppat_construct "ParameterApp" (lib/parameters.ml[97,2819+29]..[97,2819+41])
                        Some
                          []
                          pattern (lib/parameters.ml[97,2819+42]..[97,2819+52])
                            Ppat_tuple
                            [
                              pattern (lib/parameters.ml[97,2819+43]..[97,2819+46])
                                Ppat_var "p1'" (lib/parameters.ml[97,2819+43]..[97,2819+46])
                              pattern (lib/parameters.ml[97,2819+48]..[97,2819+51])
                                Ppat_var "p2'" (lib/parameters.ml[97,2819+48]..[97,2819+51])
                            ]
                    ]
                  expression (lib/parameters.ml[98,2875+8]..[98,2875+58])
                    Pexp_apply
                    expression (lib/parameters.ml[98,2875+29]..[98,2875+31])
                      Pexp_ident "&&" (lib/parameters.ml[98,2875+29]..[98,2875+31])
                    [
                      <arg>
                      Nolabel
                        expression (lib/parameters.ml[98,2875+8]..[98,2875+28])
                          Pexp_apply
                          expression (lib/parameters.ml[98,2875+17]..[98,2875+18])
                            Pexp_ident "=" (lib/parameters.ml[98,2875+17]..[98,2875+18])
                          [
                            <arg>
                            Nolabel
                              expression (lib/parameters.ml[98,2875+8]..[98,2875+16])
                                Pexp_field
                                expression (lib/parameters.ml[98,2875+8]..[98,2875+10])
                                  Pexp_ident "p1" (lib/parameters.ml[98,2875+8]..[98,2875+10])
                                "value" (lib/parameters.ml[98,2875+11]..[98,2875+16])
                            <arg>
                            Nolabel
                              expression (lib/parameters.ml[98,2875+19]..[98,2875+28])
                                Pexp_field
                                expression (lib/parameters.ml[98,2875+19]..[98,2875+22])
                                  Pexp_ident "p1'" (lib/parameters.ml[98,2875+19]..[98,2875+22])
                                "value" (lib/parameters.ml[98,2875+23]..[98,2875+28])
                          ]
                      <arg>
                      Nolabel
                        expression (lib/parameters.ml[98,2875+32]..[98,2875+58])
                          Pexp_apply
                          expression (lib/parameters.ml[98,2875+32]..[98,2875+45])
                            Pexp_ident "List.for_all2" (lib/parameters.ml[98,2875+32]..[98,2875+45])
                          [
                            <arg>
                            Nolabel
                              expression (lib/parameters.ml[98,2875+46]..[98,2875+51])
                                Pexp_ident "equal" (lib/parameters.ml[98,2875+46]..[98,2875+51])
                            <arg>
                            Nolabel
                              expression (lib/parameters.ml[98,2875+52]..[98,2875+54])
                                Pexp_ident "p2" (lib/parameters.ml[98,2875+52]..[98,2875+54])
                            <arg>
                            Nolabel
                              expression (lib/parameters.ml[98,2875+55]..[98,2875+58])
                                Pexp_ident "p2'" (lib/parameters.ml[98,2875+55]..[98,2875+58])
                          ]
                    ]
                <case>
                  pattern (lib/parameters.ml[99,2934+6]..[99,2934+7])
                    Ppat_any
                  expression (lib/parameters.ml[101,3000+8]..[101,3000+13])
                    Pexp_construct "false" (lib/parameters.ml[101,3000+8]..[101,3000+13])
                    None
              ]
    ]
  structure_item (lib/parameters.ml[103,3015+0]..[109,3201+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[103,3015+4]..[103,3015+8])
          Ppat_var "hash" (lib/parameters.ml[103,3015+4]..[103,3015+8])
        expression (lib/parameters.ml[103,3015+11]..[109,3201+18])
          Pexp_function
          [
            <case>
              pattern (lib/parameters.ml[104,3035+4]..[105,3054+23])
                Ppat_or
                pattern (lib/parameters.ml[104,3035+4]..[104,3035+18])
                  Ppat_construct "ParameterVar" (lib/parameters.ml[104,3035+4]..[104,3035+16])
                  Some
                    []
                    pattern (lib/parameters.ml[104,3035+17]..[104,3035+18])
                      Ppat_var "x" (lib/parameters.ml[104,3035+17]..[104,3035+18])
                pattern (lib/parameters.ml[105,3054+4]..[105,3054+23])
                  Ppat_construct "ParameterApp" (lib/parameters.ml[105,3054+4]..[105,3054+16])
                  Some
                    []
                    pattern (lib/parameters.ml[105,3054+17]..[105,3054+23])
                      Ppat_tuple
                      [
                        pattern (lib/parameters.ml[105,3054+18]..[105,3054+19])
                          Ppat_var "x" (lib/parameters.ml[105,3054+18]..[105,3054+19])
                        pattern (lib/parameters.ml[105,3054+21]..[105,3054+22])
                          Ppat_any
                      ]
              expression (lib/parameters.ml[106,3081+6]..[106,3081+38])
                Pexp_apply
                expression (lib/parameters.ml[106,3081+6]..[106,3081+18])
                  Pexp_ident "Hashtbl.hash" (lib/parameters.ml[106,3081+6]..[106,3081+18])
                [
                  <arg>
                  Nolabel
                    expression (lib/parameters.ml[106,3081+19]..[106,3081+38])
                      Pexp_apply
                      expression (lib/parameters.ml[106,3081+20]..[106,3081+35])
                        Pexp_ident "Positions.value" (lib/parameters.ml[106,3081+20]..[106,3081+35])
                      [
                        <arg>
                        Nolabel
                          expression (lib/parameters.ml[106,3081+36]..[106,3081+37])
                            Pexp_ident "x" (lib/parameters.ml[106,3081+36]..[106,3081+37])
                      ]
                ]
            <case>
              pattern (lib/parameters.ml[107,3120+4]..[107,3120+24])
                Ppat_construct "ParameterAnonymous" (lib/parameters.ml[107,3120+4]..[107,3120+22])
                Some
                  []
                  pattern (lib/parameters.ml[107,3120+23]..[107,3120+24])
                    Ppat_any
              expression (lib/parameters.ml[109,3201+6]..[109,3201+18])
                Pexp_assert
                expression (lib/parameters.ml[109,3201+13]..[109,3201+18])
                  Pexp_construct "false" (lib/parameters.ml[109,3201+13]..[109,3201+18])
                  None
          ]
    ]
  structure_item (lib/parameters.ml[111,3221+0]..[116,3347+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[111,3221+4]..[111,3221+12])
          Ppat_var "position" (lib/parameters.ml[111,3221+4]..[111,3221+12])
        expression (lib/parameters.ml[111,3221+15]..[116,3347+27])
          Pexp_function
          [
            <case>
              pattern (lib/parameters.ml[112,3245+4]..[113,3264+23])
                Ppat_or
                pattern (lib/parameters.ml[112,3245+4]..[112,3245+18])
                  Ppat_construct "ParameterVar" (lib/parameters.ml[112,3245+4]..[112,3245+16])
                  Some
                    []
                    pattern (lib/parameters.ml[112,3245+17]..[112,3245+18])
                      Ppat_var "x" (lib/parameters.ml[112,3245+17]..[112,3245+18])
                pattern (lib/parameters.ml[113,3264+4]..[113,3264+23])
                  Ppat_construct "ParameterApp" (lib/parameters.ml[113,3264+4]..[113,3264+16])
                  Some
                    []
                    pattern (lib/parameters.ml[113,3264+17]..[113,3264+23])
                      Ppat_tuple
                      [
                        pattern (lib/parameters.ml[113,3264+18]..[113,3264+19])
                          Ppat_var "x" (lib/parameters.ml[113,3264+18]..[113,3264+19])
                        pattern (lib/parameters.ml[113,3264+21]..[113,3264+22])
                          Ppat_any
                      ]
              expression (lib/parameters.ml[114,3291+6]..[114,3291+26])
                Pexp_apply
                expression (lib/parameters.ml[114,3291+6]..[114,3291+24])
                  Pexp_ident "Positions.position" (lib/parameters.ml[114,3291+6]..[114,3291+24])
                [
                  <arg>
                  Nolabel
                    expression (lib/parameters.ml[114,3291+25]..[114,3291+26])
                      Pexp_ident "x" (lib/parameters.ml[114,3291+25]..[114,3291+26])
                ]
            <case>
              pattern (lib/parameters.ml[115,3318+4]..[115,3318+25])
                Ppat_construct "ParameterAnonymous" (lib/parameters.ml[115,3318+4]..[115,3318+22])
                Some
                  []
                  pattern (lib/parameters.ml[115,3318+23]..[115,3318+25])
                    Ppat_var "bs" (lib/parameters.ml[115,3318+23]..[115,3318+25])
              expression (lib/parameters.ml[116,3347+6]..[116,3347+27])
                Pexp_apply
                expression (lib/parameters.ml[116,3347+6]..[116,3347+24])
                  Pexp_ident "Positions.position" (lib/parameters.ml[116,3347+6]..[116,3347+24])
                [
                  <arg>
                  Nolabel
                    expression (lib/parameters.ml[116,3347+25]..[116,3347+27])
                      Pexp_ident "bs" (lib/parameters.ml[116,3347+25]..[116,3347+27])
                ]
          ]
    ]
  structure_item (lib/parameters.ml[118,3376+0]..[119,3393+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[118,3376+4]..[118,3376+12])
          Ppat_var "with_pos" (lib/parameters.ml[118,3376+4]..[118,3376+12])
        expression (lib/parameters.ml[118,3376+13]..[119,3393+35]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/parameters.ml[118,3376+13]..[118,3376+14])
            Ppat_var "p" (lib/parameters.ml[118,3376+13]..[118,3376+14])
          expression (lib/parameters.ml[119,3393+2]..[119,3393+35])
            Pexp_apply
            expression (lib/parameters.ml[119,3393+2]..[119,3393+20])
              Pexp_ident "Positions.with_pos" (lib/parameters.ml[119,3393+2]..[119,3393+20])
            [
              <arg>
              Nolabel
                expression (lib/parameters.ml[119,3393+21]..[119,3393+33])
                  Pexp_apply
                  expression (lib/parameters.ml[119,3393+22]..[119,3393+30])
                    Pexp_ident "position" (lib/parameters.ml[119,3393+22]..[119,3393+30])
                  [
                    <arg>
                    Nolabel
                      expression (lib/parameters.ml[119,3393+31]..[119,3393+32])
                        Pexp_ident "p" (lib/parameters.ml[119,3393+31]..[119,3393+32])
                  ]
              <arg>
              Nolabel
                expression (lib/parameters.ml[119,3393+34]..[119,3393+35])
                  Pexp_ident "p" (lib/parameters.ml[119,3393+34]..[119,3393+35])
            ]
    ]
  structure_item (lib/parameters.ml[121,3430+0]..[131,3762+18])
    Pstr_value Rec
    [
      <def>
        pattern (lib/parameters.ml[121,3430+8]..[121,3430+13])
          Ppat_var "print" (lib/parameters.ml[121,3430+8]..[121,3430+13])
        expression (lib/parameters.ml[121,3430+14]..[131,3762+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lib/parameters.ml[121,3430+14]..[121,3430+25])
            Ppat_var "with_spaces" (lib/parameters.ml[121,3430+14]..[121,3430+25])
          expression (lib/parameters.ml[121,3430+28]..[131,3762+18])
            Pexp_function
            [
              <case>
                pattern (lib/parameters.ml[122,3467+4]..[123,3486+24])
                  Ppat_or
                  pattern (lib/parameters.ml[122,3467+4]..[122,3467+18])
                    Ppat_construct "ParameterVar" (lib/parameters.ml[122,3467+4]..[122,3467+16])
                    Some
                      []
                      pattern (lib/parameters.ml[122,3467+17]..[122,3467+18])
                        Ppat_var "x" (lib/parameters.ml[122,3467+17]..[122,3467+18])
                  pattern (lib/parameters.ml[123,3486+4]..[123,3486+24])
                    Ppat_construct "ParameterApp" (lib/parameters.ml[123,3486+4]..[123,3486+16])
                    Some
                      []
                      pattern (lib/parameters.ml[123,3486+17]..[123,3486+24])
                        Ppat_tuple
                        [
                          pattern (lib/parameters.ml[123,3486+18]..[123,3486+19])
                            Ppat_var "x" (lib/parameters.ml[123,3486+18]..[123,3486+19])
                          pattern (lib/parameters.ml[123,3486+21]..[123,3486+23])
                            Ppat_construct "[]" (lib/parameters.ml[123,3486+21]..[123,3486+23])
                            None
                        ]
                expression (lib/parameters.ml[124,3514+6]..[124,3514+13])
                  Pexp_field
                  expression (lib/parameters.ml[124,3514+6]..[124,3514+7])
                    Pexp_ident "x" (lib/parameters.ml[124,3514+6]..[124,3514+7])
                  "value" (lib/parameters.ml[124,3514+8]..[124,3514+13])
              <case>
                pattern (lib/parameters.ml[125,3528+4]..[125,3528+24])
                  Ppat_construct "ParameterApp" (lib/parameters.ml[125,3528+4]..[125,3528+16])
                  Some
                    []
                    pattern (lib/parameters.ml[125,3528+17]..[125,3528+24])
                      Ppat_tuple
                      [
                        pattern (lib/parameters.ml[125,3528+18]..[125,3528+19])
                          Ppat_var "x" (lib/parameters.ml[125,3528+18]..[125,3528+19])
                        pattern (lib/parameters.ml[125,3528+21]..[125,3528+23])
                          Ppat_var "ps" (lib/parameters.ml[125,3528+21]..[125,3528+23])
                      ]
                expression (lib/parameters.ml[126,3556+6]..[129,3661+72])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/parameters.ml[126,3556+10]..[126,3556+19])
                        Ppat_var "separator" (lib/parameters.ml[126,3556+10]..[126,3556+19])
                      expression (lib/parameters.ml[126,3556+22]..[126,3556+55])
                        Pexp_ifthenelse
                        expression (lib/parameters.ml[126,3556+25]..[126,3556+36])
                          Pexp_ident "with_spaces" (lib/parameters.ml[126,3556+25]..[126,3556+36])
                        expression (lib/parameters.ml[126,3556+42]..[126,3556+46])
                          Pexp_constant PConst_string(", ",(lib/parameters.ml[126,3556+43]..[126,3556+45]),None)
                        Some
                          expression (lib/parameters.ml[126,3556+52]..[126,3556+55])
                            Pexp_constant PConst_string(",",(lib/parameters.ml[126,3556+53]..[126,3556+54]),None)
                  ]
                  expression (lib/parameters.ml[127,3615+6]..[129,3661+72])
                    Pexp_apply
                    expression (lib/parameters.ml[127,3615+6]..[127,3615+20])
                      Pexp_ident "Printf.sprintf" (lib/parameters.ml[127,3615+6]..[127,3615+20])
                    [
                      <arg>
                      Nolabel
                        expression (lib/parameters.ml[127,3615+21]..[127,3615+29])
                          Pexp_constant PConst_string("%s(%s)",(lib/parameters.ml[127,3615+22]..[127,3615+28]),None)
                      <arg>
                      Nolabel
                        expression (lib/parameters.ml[128,3645+8]..[128,3645+15])
                          Pexp_field
                          expression (lib/parameters.ml[128,3645+8]..[128,3645+9])
                            Pexp_ident "x" (lib/parameters.ml[128,3645+8]..[128,3645+9])
                          "value" (lib/parameters.ml[128,3645+10]..[128,3645+15])
                      <arg>
                      Nolabel
                        expression (lib/parameters.ml[129,3661+8]..[129,3661+72])
                          Pexp_apply
                          expression (lib/parameters.ml[129,3661+9]..[129,3661+38])
                            Pexp_ident "Misc.separated_list_to_string" (lib/parameters.ml[129,3661+9]..[129,3661+38])
                          [
                            <arg>
                            Nolabel
                              expression (lib/parameters.ml[129,3661+39]..[129,3661+58])
                                Pexp_apply
                                expression (lib/parameters.ml[129,3661+40]..[129,3661+45])
                                  Pexp_ident "print" (lib/parameters.ml[129,3661+40]..[129,3661+45])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/parameters.ml[129,3661+46]..[129,3661+57])
                                      Pexp_ident "with_spaces" (lib/parameters.ml[129,3661+46]..[129,3661+57])
                                ]
                            <arg>
                            Nolabel
                              expression (lib/parameters.ml[129,3661+59]..[129,3661+68])
                                Pexp_ident "separator" (lib/parameters.ml[129,3661+59]..[129,3661+68])
                            <arg>
                            Nolabel
                              expression (lib/parameters.ml[129,3661+69]..[129,3661+71])
                                Pexp_ident "ps" (lib/parameters.ml[129,3661+69]..[129,3661+71])
                          ]
                    ]
              <case>
                pattern (lib/parameters.ml[130,3734+4]..[130,3734+24])
                  Ppat_construct "ParameterAnonymous" (lib/parameters.ml[130,3734+4]..[130,3734+22])
                  Some
                    []
                    pattern (lib/parameters.ml[130,3734+23]..[130,3734+24])
                      Ppat_any
                expression (lib/parameters.ml[131,3762+6]..[131,3762+18])
                  Pexp_assert
                  expression (lib/parameters.ml[131,3762+13]..[131,3762+18])
                    Pexp_construct "false" (lib/parameters.ml[131,3762+13]..[131,3762+18])
                    None
            ]
    ]
  structure_item (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
          Ppat_construct "()" (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
          None
        expression (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
          Pexp_apply
          expression (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
            Pexp_ident "Ppx_inline_test_lib.unset_lib" (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
          [
            <arg>
            Nolabel
              expression (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
                Pexp_constant PConst_string("gbnf_parser",(lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost,None)
          ]
    ]
  structure_item (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
          Ppat_construct "()" (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
          None
        expression (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
          Pexp_apply
          expression (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
            Pexp_ident "Expect_test_collector.Current_file.unset" (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
          [
            <arg>
            Nolabel
              expression (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
                Pexp_construct "()" (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
                None
          ]
    ]
  structure_item (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
          Ppat_construct "()" (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
          None
        expression (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
          Pexp_apply
          expression (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
            Pexp_ident "Ppx_bench_lib.Benchmark_accumulator.Current_libname.unset" (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
          [
            <arg>
            Nolabel
              expression (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
                Pexp_construct "()" (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
                None
          ]
    ]
  structure_item (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
          Ppat_construct "()" (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
          None
        expression (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
          Pexp_apply
          expression (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
            Pexp_ident "Ppx_module_timer_runtime.record_until" (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
          [
            <arg>
            Nolabel
              expression (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
                Pexp_ident "Ppx_module_timer_runtime.__MODULE__" (lib/parameters.ml[131,3762+18]..[131,3762+18]) ghost
          ]
    ]
]

[@@@ocaml.ppx.context
  {
    tool_name = "ppx_driver";
    include_dirs = [];
    load_path = [];
    open_modules = [];
    for_package = None;
    debug = false;
    use_threads = false;
    use_vmthreads = false;
    recursive_types = false;
    principal = false;
    transparent_modules = false;
    unboxed_types = false;
    unsafe_string = false;
    cookies = [("inline_tests", "enabled"); ("library-name", "gbnf_parser")]
  }]
let () =
  Ppx_module_timer_runtime.record_start Ppx_module_timer_runtime.__MODULE__
let () =
  Ppx_bench_lib.Benchmark_accumulator.Current_libname.set "gbnf_parser"
let () =
  Expect_test_collector.Current_file.set
    ~absolute_filename:"lib/parameters.ml"
let () =
  Ppx_inline_test_lib.set_lib_and_partition "gbnf_parser" "parameters.ml"
open Syntax
open Positions
let app p ps =
  match ps with | [] -> ParameterVar p | _ -> ParameterApp (p, ps)
let unapp =
  function
  | ParameterVar x -> (x, [])
  | ParameterApp (p, ps) -> (p, ps)
  | ParameterAnonymous _ -> assert false
let unvar =
  function
  | ParameterVar x -> x
  | ParameterApp _ | ParameterAnonymous _ -> assert false
let rec map f =
  function
  | ParameterVar x -> ParameterVar (f x)
  | ParameterApp (p, ps) -> ParameterApp ((f p), (List.map (map f) ps))
  | ParameterAnonymous _ -> assert false
let rec fold f init =
  function
  | ParameterVar x -> f init x
  | ParameterApp (p, ps) -> f (List.fold_left (fold f) init ps) p
  | ParameterAnonymous _ -> assert false
let identifiers m p =
  fold (fun accu -> fun x -> StringMap.add x.value x.position accu) m p
let rec occurs (x : symbol) (p : parameter) =
  match p with
  | ParameterVar y -> x = y.value
  | ParameterApp (y, ps) -> (x = y.value) || (List.exists (occurs x) ps)
  | ParameterAnonymous _ -> assert false
let occurs_shallow (x : symbol) (p : parameter) =
  match p with
  | ParameterVar y -> x = y.value
  | ParameterApp (y, _) -> (assert (x <> y.value); false)
  | ParameterAnonymous _ -> assert false
let occurs_deep (x : symbol) (p : parameter) =
  match p with
  | ParameterVar _ -> false
  | ParameterApp (_, ps) -> List.exists (occurs x) ps
  | ParameterAnonymous _ -> assert false
type t = parameter
let rec equal x y =
  match (x, y) with
  | (ParameterVar x, ParameterVar y) -> x.value = y.value
  | (ParameterApp (p1, p2), ParameterApp (p1', p2')) ->
      (p1.value = p1'.value) && (List.for_all2 equal p2 p2')
  | _ -> false
let hash =
  function
  | ParameterVar x | ParameterApp (x, _) -> Hashtbl.hash (Positions.value x)
  | ParameterAnonymous _ -> assert false
let position =
  function
  | ParameterVar x | ParameterApp (x, _) -> Positions.position x
  | ParameterAnonymous bs -> Positions.position bs
let with_pos p = Positions.with_pos (position p) p
let rec print with_spaces =
  function
  | ParameterVar x | ParameterApp (x, []) -> x.value
  | ParameterApp (x, ps) ->
      let separator = if with_spaces then ", " else "," in
      Printf.sprintf "%s(%s)" x.value
        (Misc.separated_list_to_string (print with_spaces) separator ps)
  | ParameterAnonymous _ -> assert false
let () = Ppx_inline_test_lib.unset_lib "gbnf_parser"
let () = Expect_test_collector.Current_file.unset ()
let () = Ppx_bench_lib.Benchmark_accumulator.Current_libname.unset ()
let () =
  Ppx_module_timer_runtime.record_until Ppx_module_timer_runtime.__MODULE__
[
  structure_item (_none_[0,0+-1].._none_[0,0+-1]) ghost
    Tstr_attribute "ocaml.ppx.context"
    [
      structure_item (_none_[0,0+-1]..[0,0+-1]) ghost
        Pstr_eval
        expression (_none_[0,0+-1]..[0,0+-1]) ghost
          Pexp_record
          [
            "tool_name" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_constant PConst_string("ppx_driver",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
            "include_dirs" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "load_path" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "open_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "for_package" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "None" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "debug" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_threads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "use_vmthreads" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "recursive_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "principal" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "transparent_modules" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unboxed_types" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "unsafe_string" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "false" (_none_[0,0+-1]..[0,0+-1]) ghost
                None
            "cookies" (_none_[0,0+-1]..[0,0+-1]) ghost
              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                Some
                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                    Pexp_tuple
                    [
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_tuple
                        [
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_constant PConst_string("inline_tests",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                          expression (<command-line>[1,0+0]..[1,0+9])
                            Pexp_constant PConst_string("enabled",(<command-line>[1,0+1]..[1,0+8]),None)
                        ]
                      expression (_none_[0,0+-1]..[0,0+-1]) ghost
                        Pexp_construct "::" (_none_[0,0+-1]..[0,0+-1]) ghost
                        Some
                          expression (_none_[0,0+-1]..[0,0+-1]) ghost
                            Pexp_tuple
                            [
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_tuple
                                [
                                  expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                    Pexp_constant PConst_string("library-name",(_none_[0,0+-1]..[0,0+-1]) ghost,None)
                                  expression (<command-line>[1,0+0]..[1,0+13])
                                    Pexp_constant PConst_string("gbnf_parser",(<command-line>[1,0+1]..[1,0+12]),None)
                                ]
                              expression (_none_[0,0+-1]..[0,0+-1]) ghost
                                Pexp_construct "[]" (_none_[0,0+-1]..[0,0+-1]) ghost
                                None
                            ]
                    ]
          ]
          None
    ]
  structure_item (lib/parameters.ml[16,1025+0]..lib/parameters.ml[16,1025+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[16,1025+0]..lib/parameters.ml[16,1025+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/parameters.ml[16,1025+0]..lib/parameters.ml[16,1025+0]) ghost
          Texp_apply
          expression (lib/parameters.ml[16,1025+0]..lib/parameters.ml[16,1025+0]) ghost
            Texp_ident "Ppx_module_timer_runtime!.record_start"
          [
            <arg>
              Nolabel
              expression (lib/parameters.ml[16,1025+0]..lib/parameters.ml[16,1025+0]) ghost
                Texp_ident "Ppx_module_timer_runtime!.__MODULE__"
          ]
    ]
  structure_item (lib/parameters.ml[16,1025+0]..lib/parameters.ml[16,1025+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[16,1025+0]..lib/parameters.ml[16,1025+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/parameters.ml[16,1025+0]..lib/parameters.ml[16,1025+0]) ghost
          Texp_apply
          expression (lib/parameters.ml[16,1025+0]..lib/parameters.ml[16,1025+0]) ghost
            Texp_ident "Ppx_bench_lib!.Benchmark_accumulator.Current_libname.set"
          [
            <arg>
              Nolabel
              expression (lib/parameters.ml[16,1025+0]..lib/parameters.ml[16,1025+0]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/parameters.ml[16,1025+0]..lib/parameters.ml[16,1025+0]) ghost,None)
          ]
    ]
  structure_item (lib/parameters.ml[16,1025+0]..lib/parameters.ml[16,1025+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[16,1025+0]..lib/parameters.ml[16,1025+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/parameters.ml[16,1025+0]..lib/parameters.ml[16,1025+0]) ghost
          Texp_apply
          expression (lib/parameters.ml[16,1025+0]..lib/parameters.ml[16,1025+0]) ghost
            Texp_ident "Expect_test_collector!.Current_file.set"
          [
            <arg>
              Labelled "absolute_filename"
              expression (lib/parameters.ml[16,1025+0]..lib/parameters.ml[16,1025+0]) ghost
                Texp_constant Const_string("lib/parameters.ml",(lib/parameters.ml[16,1025+0]..lib/parameters.ml[16,1025+0]) ghost,None)
          ]
    ]
  structure_item (lib/parameters.ml[16,1025+0]..lib/parameters.ml[16,1025+0]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[16,1025+0]..lib/parameters.ml[16,1025+0]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/parameters.ml[16,1025+0]..lib/parameters.ml[16,1025+0]) ghost
          Texp_apply
          expression (lib/parameters.ml[16,1025+0]..lib/parameters.ml[16,1025+0]) ghost
            Texp_ident "Ppx_inline_test_lib!.set_lib_and_partition"
          [
            <arg>
              Nolabel
              expression (lib/parameters.ml[16,1025+0]..lib/parameters.ml[16,1025+0]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/parameters.ml[16,1025+0]..lib/parameters.ml[16,1025+0]) ghost,None)
            <arg>
              Nolabel
              expression (lib/parameters.ml[16,1025+0]..lib/parameters.ml[16,1025+0]) ghost
                Texp_constant Const_string("parameters.ml",(lib/parameters.ml[16,1025+0]..lib/parameters.ml[16,1025+0]) ghost,None)
          ]
    ]
  structure_item (lib/parameters.ml[16,1025+0]..lib/parameters.ml[16,1025+11])
    Tstr_open Fresh
    module_expr (lib/parameters.ml[16,1025+5]..lib/parameters.ml[16,1025+11])
      Tmod_ident "Gbnf_parser!.Syntax"
  structure_item (lib/parameters.ml[17,1037+0]..lib/parameters.ml[17,1037+14])
    Tstr_open Fresh
    module_expr (lib/parameters.ml[17,1037+5]..lib/parameters.ml[17,1037+14])
      Tmod_ident "Gbnf_parser!.Positions"
  structure_item (lib/parameters.ml[19,1053+0]..lib/parameters.ml[24,1124+26])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[19,1053+4]..lib/parameters.ml[19,1053+7])
          Tpat_var "app/1204"
        expression (lib/parameters.ml[19,1053+8]..lib/parameters.ml[24,1124+26]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/parameters.ml[19,1053+8]..lib/parameters.ml[19,1053+9])
                Tpat_var "p/1206"
              expression (lib/parameters.ml[19,1053+10]..lib/parameters.ml[24,1124+26]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/parameters.ml[19,1053+10]..lib/parameters.ml[19,1053+12])
                      Tpat_var "ps/1207"
                    expression (lib/parameters.ml[20,1068+2]..lib/parameters.ml[24,1124+26])
                      Texp_match
                      expression (lib/parameters.ml[20,1068+8]..lib/parameters.ml[20,1068+10])
                        Texp_ident "ps/1207"
                      [
                        <case>
                          pattern (lib/parameters.ml[21,1084+4]..lib/parameters.ml[21,1084+6])
                            Tpat_value
                            pattern (lib/parameters.ml[21,1084+4]..lib/parameters.ml[21,1084+6])
                              Tpat_construct "[]"
                              []
                              None
                          expression (lib/parameters.ml[22,1094+6]..lib/parameters.ml[22,1094+20])
                            Texp_construct "ParameterVar"
                            [
                              expression (lib/parameters.ml[22,1094+19]..lib/parameters.ml[22,1094+20])
                                Texp_ident "p/1206"
                            ]
                        <case>
                          pattern (lib/parameters.ml[23,1115+4]..lib/parameters.ml[23,1115+5])
                            Tpat_value
                            pattern (lib/parameters.ml[23,1115+4]..lib/parameters.ml[23,1115+5])
                              Tpat_any
                          expression (lib/parameters.ml[24,1124+6]..lib/parameters.ml[24,1124+26])
                            Texp_construct "ParameterApp"
                            [
                              expression (lib/parameters.ml[24,1124+20]..lib/parameters.ml[24,1124+21])
                                Texp_ident "p/1206"
                              expression (lib/parameters.ml[24,1124+23]..lib/parameters.ml[24,1124+25])
                                Texp_ident "ps/1207"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (lib/parameters.ml[26,1152+0]..lib/parameters.ml[33,1332+18])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[26,1152+4]..lib/parameters.ml[26,1152+9])
          Tpat_var "unapp/1280"
        expression (lib/parameters.ml[26,1152+12]..lib/parameters.ml[33,1332+18])
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/parameters.ml[27,1173+4]..lib/parameters.ml[27,1173+18])
                Tpat_construct "ParameterVar"
                [
                  pattern (lib/parameters.ml[27,1173+17]..lib/parameters.ml[27,1173+18])
                    Tpat_var "x/1282"
                ]
                None
              expression (lib/parameters.ml[28,1195+6]..lib/parameters.ml[28,1195+13])
                Texp_tuple
                [
                  expression (lib/parameters.ml[28,1195+7]..lib/parameters.ml[28,1195+8])
                    Texp_ident "x/1282"
                  expression (lib/parameters.ml[28,1195+10]..lib/parameters.ml[28,1195+12])
                    Texp_construct "[]"
                    []
                ]
            <case>
              pattern (lib/parameters.ml[29,1209+4]..lib/parameters.ml[29,1209+24])
                Tpat_construct "ParameterApp"
                [
                  pattern (lib/parameters.ml[29,1209+18]..lib/parameters.ml[29,1209+19])
                    Tpat_var "p/1283"
                  pattern (lib/parameters.ml[29,1209+21]..lib/parameters.ml[29,1209+23])
                    Tpat_var "ps/1284"
                ]
                None
              expression (lib/parameters.ml[30,1237+6]..lib/parameters.ml[30,1237+13])
                Texp_tuple
                [
                  expression (lib/parameters.ml[30,1237+7]..lib/parameters.ml[30,1237+8])
                    Texp_ident "p/1283"
                  expression (lib/parameters.ml[30,1237+10]..lib/parameters.ml[30,1237+12])
                    Texp_ident "ps/1284"
                ]
            <case>
              pattern (lib/parameters.ml[31,1251+4]..lib/parameters.ml[31,1251+24])
                Tpat_construct "ParameterAnonymous"
                [
                  pattern (lib/parameters.ml[31,1251+23]..lib/parameters.ml[31,1251+24])
                    Tpat_any
                ]
                None
              expression (lib/parameters.ml[33,1332+6]..lib/parameters.ml[33,1332+18])
                Texp_assert                expression (lib/parameters.ml[33,1332+13]..lib/parameters.ml[33,1332+18])
                  Texp_construct "false"
                  []
          ]
    ]
  structure_item (lib/parameters.ml[35,1352+0]..lib/parameters.ml[40,1450+18])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[35,1352+4]..lib/parameters.ml[35,1352+9])
          Tpat_var "unvar/1310"
        expression (lib/parameters.ml[35,1352+12]..lib/parameters.ml[40,1450+18])
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/parameters.ml[36,1373+4]..lib/parameters.ml[36,1373+18])
                Tpat_construct "ParameterVar"
                [
                  pattern (lib/parameters.ml[36,1373+17]..lib/parameters.ml[36,1373+18])
                    Tpat_var "x/1312"
                ]
                None
              expression (lib/parameters.ml[37,1395+6]..lib/parameters.ml[37,1395+7])
                Texp_ident "x/1312"
            <case>
              pattern (lib/parameters.ml[38,1403+4]..lib/parameters.ml[39,1422+24])
                Tpat_or
                pattern (lib/parameters.ml[38,1403+4]..lib/parameters.ml[38,1403+18])
                  Tpat_construct "ParameterApp"
                  [
                    pattern (lib/parameters.ml[38,1403+17]..lib/parameters.ml[38,1403+18])
                      Tpat_any
                    pattern (lib/parameters.ml[38,1403+17]..lib/parameters.ml[38,1403+18])
                      Tpat_any
                  ]
                  None
                pattern (lib/parameters.ml[39,1422+4]..lib/parameters.ml[39,1422+24])
                  Tpat_construct "ParameterAnonymous"
                  [
                    pattern (lib/parameters.ml[39,1422+23]..lib/parameters.ml[39,1422+24])
                      Tpat_any
                  ]
                  None
              expression (lib/parameters.ml[40,1450+6]..lib/parameters.ml[40,1450+18])
                Texp_assert                expression (lib/parameters.ml[40,1450+13]..lib/parameters.ml[40,1450+18])
                  Texp_construct "false"
                  []
          ]
    ]
  structure_item (lib/parameters.ml[42,1470+0]..lib/parameters.ml[49,1697+18])
    Tstr_value Rec
    [
      <def>
        pattern (lib/parameters.ml[42,1470+8]..lib/parameters.ml[42,1470+11])
          Tpat_var "map/1314"
        expression (lib/parameters.ml[42,1470+12]..lib/parameters.ml[49,1697+18]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/parameters.ml[42,1470+12]..lib/parameters.ml[42,1470+13])
                Tpat_var "f/1315"
              expression (lib/parameters.ml[42,1470+16]..lib/parameters.ml[49,1697+18])
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/parameters.ml[43,1495+4]..lib/parameters.ml[43,1495+18])
                      Tpat_construct "ParameterVar"
                      [
                        pattern (lib/parameters.ml[43,1495+17]..lib/parameters.ml[43,1495+18])
                          Tpat_var "x/1316"
                      ]
                      None
                    expression (lib/parameters.ml[44,1517+6]..lib/parameters.ml[44,1517+24])
                      Texp_construct "ParameterVar"
                      [
                        expression (lib/parameters.ml[44,1517+19]..lib/parameters.ml[44,1517+24])
                          Texp_apply
                          expression (lib/parameters.ml[44,1517+20]..lib/parameters.ml[44,1517+21])
                            Texp_ident "f/1315"
                          [
                            <arg>
                              Nolabel
                              expression (lib/parameters.ml[44,1517+22]..lib/parameters.ml[44,1517+23])
                                Texp_ident "x/1316"
                          ]
                      ]
                  <case>
                    pattern (lib/parameters.ml[45,1542+4]..lib/parameters.ml[45,1542+24])
                      Tpat_construct "ParameterApp"
                      [
                        pattern (lib/parameters.ml[45,1542+18]..lib/parameters.ml[45,1542+19])
                          Tpat_var "p/1317"
                        pattern (lib/parameters.ml[45,1542+21]..lib/parameters.ml[45,1542+23])
                          Tpat_var "ps/1318"
                      ]
                      None
                    expression (lib/parameters.ml[46,1570+6]..lib/parameters.ml[46,1570+45])
                      Texp_construct "ParameterApp"
                      [
                        expression (lib/parameters.ml[46,1570+20]..lib/parameters.ml[46,1570+23])
                          Texp_apply
                          expression (lib/parameters.ml[46,1570+20]..lib/parameters.ml[46,1570+21])
                            Texp_ident "f/1315"
                          [
                            <arg>
                              Nolabel
                              expression (lib/parameters.ml[46,1570+22]..lib/parameters.ml[46,1570+23])
                                Texp_ident "p/1317"
                          ]
                        expression (lib/parameters.ml[46,1570+25]..lib/parameters.ml[46,1570+44])
                          Texp_apply
                          expression (lib/parameters.ml[46,1570+25]..lib/parameters.ml[46,1570+33])
                            Texp_ident "Stdlib!.List.map"
                          [
                            <arg>
                              Nolabel
                              expression (lib/parameters.ml[46,1570+34]..lib/parameters.ml[46,1570+41])
                                Texp_apply
                                expression (lib/parameters.ml[46,1570+35]..lib/parameters.ml[46,1570+38])
                                  Texp_ident "map/1314"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/parameters.ml[46,1570+39]..lib/parameters.ml[46,1570+40])
                                      Texp_ident "f/1315"
                                ]
                            <arg>
                              Nolabel
                              expression (lib/parameters.ml[46,1570+42]..lib/parameters.ml[46,1570+44])
                                Texp_ident "ps/1318"
                          ]
                      ]
                  <case>
                    pattern (lib/parameters.ml[47,1616+4]..lib/parameters.ml[47,1616+24])
                      Tpat_construct "ParameterAnonymous"
                      [
                        pattern (lib/parameters.ml[47,1616+23]..lib/parameters.ml[47,1616+24])
                          Tpat_any
                      ]
                      None
                    expression (lib/parameters.ml[49,1697+6]..lib/parameters.ml[49,1697+18])
                      Texp_assert                      expression (lib/parameters.ml[49,1697+13]..lib/parameters.ml[49,1697+18])
                        Texp_construct "false"
                        []
                ]
          ]
    ]
  structure_item (lib/parameters.ml[51,1717+0]..lib/parameters.ml[58,1938+18])
    Tstr_value Rec
    [
      <def>
        pattern (lib/parameters.ml[51,1717+8]..lib/parameters.ml[51,1717+12])
          Tpat_var "fold/1386"
        expression (lib/parameters.ml[51,1717+13]..lib/parameters.ml[58,1938+18]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/parameters.ml[51,1717+13]..lib/parameters.ml[51,1717+14])
                Tpat_var "f/1387"
              expression (lib/parameters.ml[51,1717+15]..lib/parameters.ml[58,1938+18]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/parameters.ml[51,1717+15]..lib/parameters.ml[51,1717+19])
                      Tpat_var "init/1388"
                    expression (lib/parameters.ml[51,1717+22]..lib/parameters.ml[58,1938+18])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (lib/parameters.ml[52,1748+4]..lib/parameters.ml[52,1748+18])
                            Tpat_construct "ParameterVar"
                            [
                              pattern (lib/parameters.ml[52,1748+17]..lib/parameters.ml[52,1748+18])
                                Tpat_var "x/1389"
                            ]
                            None
                          expression (lib/parameters.ml[53,1770+6]..lib/parameters.ml[53,1770+14])
                            Texp_apply
                            expression (lib/parameters.ml[53,1770+6]..lib/parameters.ml[53,1770+7])
                              Texp_ident "f/1387"
                            [
                              <arg>
                                Nolabel
                                expression (lib/parameters.ml[53,1770+8]..lib/parameters.ml[53,1770+12])
                                  Texp_ident "init/1388"
                              <arg>
                                Nolabel
                                expression (lib/parameters.ml[53,1770+13]..lib/parameters.ml[53,1770+14])
                                  Texp_ident "x/1389"
                            ]
                        <case>
                          pattern (lib/parameters.ml[54,1785+4]..lib/parameters.ml[54,1785+24])
                            Tpat_construct "ParameterApp"
                            [
                              pattern (lib/parameters.ml[54,1785+18]..lib/parameters.ml[54,1785+19])
                                Tpat_var "p/1390"
                              pattern (lib/parameters.ml[54,1785+21]..lib/parameters.ml[54,1785+23])
                                Tpat_var "ps/1391"
                            ]
                            None
                          expression (lib/parameters.ml[55,1813+6]..lib/parameters.ml[55,1813+43])
                            Texp_apply
                            expression (lib/parameters.ml[55,1813+6]..lib/parameters.ml[55,1813+7])
                              Texp_ident "f/1387"
                            [
                              <arg>
                                Nolabel
                                expression (lib/parameters.ml[55,1813+8]..lib/parameters.ml[55,1813+41])
                                  Texp_apply
                                  expression (lib/parameters.ml[55,1813+9]..lib/parameters.ml[55,1813+23])
                                    Texp_ident "Stdlib!.List.fold_left"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/parameters.ml[55,1813+24]..lib/parameters.ml[55,1813+32])
                                        Texp_apply
                                        expression (lib/parameters.ml[55,1813+25]..lib/parameters.ml[55,1813+29])
                                          Texp_ident "fold/1386"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/parameters.ml[55,1813+30]..lib/parameters.ml[55,1813+31])
                                              Texp_ident "f/1387"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (lib/parameters.ml[55,1813+33]..lib/parameters.ml[55,1813+37])
                                        Texp_ident "init/1388"
                                    <arg>
                                      Nolabel
                                      expression (lib/parameters.ml[55,1813+38]..lib/parameters.ml[55,1813+40])
                                        Texp_ident "ps/1391"
                                  ]
                              <arg>
                                Nolabel
                                expression (lib/parameters.ml[55,1813+42]..lib/parameters.ml[55,1813+43])
                                  Texp_ident "p/1390"
                            ]
                        <case>
                          pattern (lib/parameters.ml[56,1857+4]..lib/parameters.ml[56,1857+24])
                            Tpat_construct "ParameterAnonymous"
                            [
                              pattern (lib/parameters.ml[56,1857+23]..lib/parameters.ml[56,1857+24])
                                Tpat_any
                            ]
                            None
                          expression (lib/parameters.ml[58,1938+6]..lib/parameters.ml[58,1938+18])
                            Texp_assert                            expression (lib/parameters.ml[58,1938+13]..lib/parameters.ml[58,1938+18])
                              Texp_construct "false"
                              []
                      ]
                ]
          ]
    ]
  structure_item (lib/parameters.ml[60,1958+0]..lib/parameters.ml[61,1980+64])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[60,1958+4]..lib/parameters.ml[60,1958+15])
          Tpat_var "identifiers/1393"
        expression (lib/parameters.ml[60,1958+16]..lib/parameters.ml[61,1980+64]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/parameters.ml[60,1958+16]..lib/parameters.ml[60,1958+17])
                Tpat_var "m/1395"
              expression (lib/parameters.ml[60,1958+18]..lib/parameters.ml[61,1980+64]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/parameters.ml[60,1958+18]..lib/parameters.ml[60,1958+19])
                      Tpat_var "p/1396"
                    expression (lib/parameters.ml[61,1980+2]..lib/parameters.ml[61,1980+64])
                      Texp_apply
                      expression (lib/parameters.ml[61,1980+2]..lib/parameters.ml[61,1980+6])
                        Texp_ident "fold/1386"
                      [
                        <arg>
                          Nolabel
                          expression (lib/parameters.ml[61,1980+7]..lib/parameters.ml[61,1980+60])
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (lib/parameters.ml[61,1980+12]..lib/parameters.ml[61,1980+16])
                                  Tpat_var "accu/1397"
                                expression (lib/parameters.ml[61,1980+17]..lib/parameters.ml[61,1980+59]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (lib/parameters.ml[61,1980+17]..lib/parameters.ml[61,1980+18])
                                        Tpat_var "x/1398"
                                      expression (lib/parameters.ml[61,1980+22]..lib/parameters.ml[61,1980+59])
                                        Texp_apply
                                        expression (lib/parameters.ml[61,1980+22]..lib/parameters.ml[61,1980+35])
                                          Texp_ident "Gbnf_parser!.StringMap.add"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/parameters.ml[61,1980+36]..lib/parameters.ml[61,1980+43])
                                              Texp_field
                                              expression (lib/parameters.ml[61,1980+36]..lib/parameters.ml[61,1980+37])
                                                Texp_ident "x/1398"
                                              "value"
                                          <arg>
                                            Nolabel
                                            expression (lib/parameters.ml[61,1980+44]..lib/parameters.ml[61,1980+54])
                                              Texp_field
                                              expression (lib/parameters.ml[61,1980+44]..lib/parameters.ml[61,1980+45])
                                                Texp_ident "x/1398"
                                              "position"
                                          <arg>
                                            Nolabel
                                            expression (lib/parameters.ml[61,1980+55]..lib/parameters.ml[61,1980+59])
                                              Texp_ident "accu/1397"
                                        ]
                                  ]
                            ]
                        <arg>
                          Nolabel
                          expression (lib/parameters.ml[61,1980+61]..lib/parameters.ml[61,1980+62])
                            Texp_ident "m/1395"
                        <arg>
                          Nolabel
                          expression (lib/parameters.ml[61,1980+63]..lib/parameters.ml[61,1980+64])
                            Texp_ident "p/1396"
                      ]
                ]
          ]
    ]
  structure_item (lib/parameters.ml[63,2046+0]..lib/parameters.ml[70,2250+18])
    Tstr_value Rec
    [
      <def>
        pattern (lib/parameters.ml[63,2046+8]..lib/parameters.ml[63,2046+14])
          Tpat_var "occurs/1656"
        expression (lib/parameters.ml[63,2046+15]..lib/parameters.ml[70,2250+18]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/parameters.ml[63,2046+16]..lib/parameters.ml[63,2046+17])
                extra
                  Tpat_extra_constraint
                  core_type (lib/parameters.ml[63,2046+20]..lib/parameters.ml[63,2046+26])
                    Ttyp_constr "Gbnf_parser!.Syntax.symbol"
                    []
                Tpat_alias "x/1657"
                pattern (lib/parameters.ml[63,2046+16]..lib/parameters.ml[63,2046+17])
                  Tpat_any
              expression (lib/parameters.ml[63,2046+28]..lib/parameters.ml[70,2250+18]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/parameters.ml[63,2046+29]..lib/parameters.ml[63,2046+30])
                      extra
                        Tpat_extra_constraint
                        core_type (lib/parameters.ml[63,2046+33]..lib/parameters.ml[63,2046+42])
                          Ttyp_constr "Gbnf_parser!.Syntax.parameter"
                          []
                      Tpat_alias "p/1658"
                      pattern (lib/parameters.ml[63,2046+29]..lib/parameters.ml[63,2046+30])
                        Tpat_any
                    expression (lib/parameters.ml[64,2092+2]..lib/parameters.ml[70,2250+18])
                      Texp_match
                      expression (lib/parameters.ml[64,2092+8]..lib/parameters.ml[64,2092+9])
                        Texp_ident "p/1658"
                      [
                        <case>
                          pattern (lib/parameters.ml[65,2107+4]..lib/parameters.ml[65,2107+18])
                            Tpat_value
                            pattern (lib/parameters.ml[65,2107+4]..lib/parameters.ml[65,2107+18])
                              Tpat_construct "ParameterVar"
                              [
                                pattern (lib/parameters.ml[65,2107+17]..lib/parameters.ml[65,2107+18])
                                  Tpat_var "y/1659"
                              ]
                              None
                          expression (lib/parameters.ml[66,2129+6]..lib/parameters.ml[66,2129+17])
                            Texp_apply
                            expression (lib/parameters.ml[66,2129+8]..lib/parameters.ml[66,2129+9])
                              Texp_ident "Stdlib!.="
                            [
                              <arg>
                                Nolabel
                                expression (lib/parameters.ml[66,2129+6]..lib/parameters.ml[66,2129+7])
                                  Texp_ident "x/1657"
                              <arg>
                                Nolabel
                                expression (lib/parameters.ml[66,2129+10]..lib/parameters.ml[66,2129+17])
                                  Texp_field
                                  expression (lib/parameters.ml[66,2129+10]..lib/parameters.ml[66,2129+11])
                                    Texp_ident "y/1659"
                                  "value"
                            ]
                        <case>
                          pattern (lib/parameters.ml[67,2147+4]..lib/parameters.ml[67,2147+24])
                            Tpat_value
                            pattern (lib/parameters.ml[67,2147+4]..lib/parameters.ml[67,2147+24])
                              Tpat_construct "ParameterApp"
                              [
                                pattern (lib/parameters.ml[67,2147+18]..lib/parameters.ml[67,2147+19])
                                  Tpat_var "y/1660"
                                pattern (lib/parameters.ml[67,2147+21]..lib/parameters.ml[67,2147+23])
                                  Tpat_var "ps/1661"
                              ]
                              None
                          expression (lib/parameters.ml[68,2175+6]..lib/parameters.ml[68,2175+46])
                            Texp_apply
                            expression (lib/parameters.ml[68,2175+18]..lib/parameters.ml[68,2175+20])
                              Texp_ident "Stdlib!.||"
                            [
                              <arg>
                                Nolabel
                                expression (lib/parameters.ml[68,2175+6]..lib/parameters.ml[68,2175+17])
                                  Texp_apply
                                  expression (lib/parameters.ml[68,2175+8]..lib/parameters.ml[68,2175+9])
                                    Texp_ident "Stdlib!.="
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/parameters.ml[68,2175+6]..lib/parameters.ml[68,2175+7])
                                        Texp_ident "x/1657"
                                    <arg>
                                      Nolabel
                                      expression (lib/parameters.ml[68,2175+10]..lib/parameters.ml[68,2175+17])
                                        Texp_field
                                        expression (lib/parameters.ml[68,2175+10]..lib/parameters.ml[68,2175+11])
                                          Texp_ident "y/1660"
                                        "value"
                                  ]
                              <arg>
                                Nolabel
                                expression (lib/parameters.ml[68,2175+21]..lib/parameters.ml[68,2175+46])
                                  Texp_apply
                                  expression (lib/parameters.ml[68,2175+21]..lib/parameters.ml[68,2175+32])
                                    Texp_ident "Stdlib!.List.exists"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/parameters.ml[68,2175+33]..lib/parameters.ml[68,2175+43])
                                        Texp_apply
                                        expression (lib/parameters.ml[68,2175+34]..lib/parameters.ml[68,2175+40])
                                          Texp_ident "occurs/1656"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/parameters.ml[68,2175+41]..lib/parameters.ml[68,2175+42])
                                              Texp_ident "x/1657"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (lib/parameters.ml[68,2175+44]..lib/parameters.ml[68,2175+46])
                                        Texp_ident "ps/1661"
                                  ]
                            ]
                        <case>
                          pattern (lib/parameters.ml[69,2222+4]..lib/parameters.ml[69,2222+24])
                            Tpat_value
                            pattern (lib/parameters.ml[69,2222+4]..lib/parameters.ml[69,2222+24])
                              Tpat_construct "ParameterAnonymous"
                              [
                                pattern (lib/parameters.ml[69,2222+23]..lib/parameters.ml[69,2222+24])
                                  Tpat_any
                              ]
                              None
                          expression (lib/parameters.ml[70,2250+6]..lib/parameters.ml[70,2250+18])
                            Texp_assert                            expression (lib/parameters.ml[70,2250+13]..lib/parameters.ml[70,2250+18])
                              Texp_construct "false"
                              []
                      ]
                ]
          ]
    ]
  structure_item (lib/parameters.ml[72,2270+0]..lib/parameters.ml[80,2471+18])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[72,2270+4]..lib/parameters.ml[72,2270+18])
          Tpat_var "occurs_shallow/1662"
        expression (lib/parameters.ml[72,2270+19]..lib/parameters.ml[80,2471+18]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/parameters.ml[72,2270+20]..lib/parameters.ml[72,2270+21])
                extra
                  Tpat_extra_constraint
                  core_type (lib/parameters.ml[72,2270+24]..lib/parameters.ml[72,2270+30])
                    Ttyp_constr "Gbnf_parser!.Syntax.symbol"
                    []
                Tpat_alias "x/1664"
                pattern (lib/parameters.ml[72,2270+20]..lib/parameters.ml[72,2270+21])
                  Tpat_any
              expression (lib/parameters.ml[72,2270+32]..lib/parameters.ml[80,2471+18]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/parameters.ml[72,2270+33]..lib/parameters.ml[72,2270+34])
                      extra
                        Tpat_extra_constraint
                        core_type (lib/parameters.ml[72,2270+37]..lib/parameters.ml[72,2270+46])
                          Ttyp_constr "Gbnf_parser!.Syntax.parameter"
                          []
                      Tpat_alias "p/1665"
                      pattern (lib/parameters.ml[72,2270+33]..lib/parameters.ml[72,2270+34])
                        Tpat_any
                    expression (lib/parameters.ml[73,2320+2]..lib/parameters.ml[80,2471+18])
                      Texp_match
                      expression (lib/parameters.ml[73,2320+8]..lib/parameters.ml[73,2320+9])
                        Texp_ident "p/1665"
                      [
                        <case>
                          pattern (lib/parameters.ml[74,2335+4]..lib/parameters.ml[74,2335+18])
                            Tpat_value
                            pattern (lib/parameters.ml[74,2335+4]..lib/parameters.ml[74,2335+18])
                              Tpat_construct "ParameterVar"
                              [
                                pattern (lib/parameters.ml[74,2335+17]..lib/parameters.ml[74,2335+18])
                                  Tpat_var "y/1666"
                              ]
                              None
                          expression (lib/parameters.ml[75,2357+6]..lib/parameters.ml[75,2357+17])
                            Texp_apply
                            expression (lib/parameters.ml[75,2357+8]..lib/parameters.ml[75,2357+9])
                              Texp_ident "Stdlib!.="
                            [
                              <arg>
                                Nolabel
                                expression (lib/parameters.ml[75,2357+6]..lib/parameters.ml[75,2357+7])
                                  Texp_ident "x/1664"
                              <arg>
                                Nolabel
                                expression (lib/parameters.ml[75,2357+10]..lib/parameters.ml[75,2357+17])
                                  Texp_field
                                  expression (lib/parameters.ml[75,2357+10]..lib/parameters.ml[75,2357+11])
                                    Texp_ident "y/1666"
                                  "value"
                            ]
                        <case>
                          pattern (lib/parameters.ml[76,2375+4]..lib/parameters.ml[76,2375+23])
                            Tpat_value
                            pattern (lib/parameters.ml[76,2375+4]..lib/parameters.ml[76,2375+23])
                              Tpat_construct "ParameterApp"
                              [
                                pattern (lib/parameters.ml[76,2375+18]..lib/parameters.ml[76,2375+19])
                                  Tpat_var "y/1667"
                                pattern (lib/parameters.ml[76,2375+21]..lib/parameters.ml[76,2375+22])
                                  Tpat_any
                              ]
                              None
                          expression (lib/parameters.ml[77,2402+6]..lib/parameters.ml[78,2431+11])
                            Texp_sequence
                            expression (lib/parameters.ml[77,2402+6]..lib/parameters.ml[77,2402+27])
                              Texp_assert                              expression (lib/parameters.ml[77,2402+13]..lib/parameters.ml[77,2402+27])
                                Texp_apply
                                expression (lib/parameters.ml[77,2402+16]..lib/parameters.ml[77,2402+18])
                                  Texp_ident "Stdlib!.<>"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/parameters.ml[77,2402+14]..lib/parameters.ml[77,2402+15])
                                      Texp_ident "x/1664"
                                  <arg>
                                    Nolabel
                                    expression (lib/parameters.ml[77,2402+19]..lib/parameters.ml[77,2402+26])
                                      Texp_field
                                      expression (lib/parameters.ml[77,2402+19]..lib/parameters.ml[77,2402+20])
                                        Texp_ident "y/1667"
                                      "value"
                                ]
                            expression (lib/parameters.ml[78,2431+6]..lib/parameters.ml[78,2431+11])
                              Texp_construct "false"
                              []
                        <case>
                          pattern (lib/parameters.ml[79,2443+4]..lib/parameters.ml[79,2443+24])
                            Tpat_value
                            pattern (lib/parameters.ml[79,2443+4]..lib/parameters.ml[79,2443+24])
                              Tpat_construct "ParameterAnonymous"
                              [
                                pattern (lib/parameters.ml[79,2443+23]..lib/parameters.ml[79,2443+24])
                                  Tpat_any
                              ]
                              None
                          expression (lib/parameters.ml[80,2471+6]..lib/parameters.ml[80,2471+18])
                            Texp_assert                            expression (lib/parameters.ml[80,2471+13]..lib/parameters.ml[80,2471+18])
                              Texp_construct "false"
                              []
                      ]
                ]
          ]
    ]
  structure_item (lib/parameters.ml[82,2491+0]..lib/parameters.ml[89,2675+18])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[82,2491+4]..lib/parameters.ml[82,2491+15])
          Tpat_var "occurs_deep/1668"
        expression (lib/parameters.ml[82,2491+16]..lib/parameters.ml[89,2675+18]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/parameters.ml[82,2491+17]..lib/parameters.ml[82,2491+18])
                extra
                  Tpat_extra_constraint
                  core_type (lib/parameters.ml[82,2491+21]..lib/parameters.ml[82,2491+27])
                    Ttyp_constr "Gbnf_parser!.Syntax.symbol"
                    []
                Tpat_alias "x/1670"
                pattern (lib/parameters.ml[82,2491+17]..lib/parameters.ml[82,2491+18])
                  Tpat_any
              expression (lib/parameters.ml[82,2491+29]..lib/parameters.ml[89,2675+18]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/parameters.ml[82,2491+30]..lib/parameters.ml[82,2491+31])
                      extra
                        Tpat_extra_constraint
                        core_type (lib/parameters.ml[82,2491+34]..lib/parameters.ml[82,2491+43])
                          Ttyp_constr "Gbnf_parser!.Syntax.parameter"
                          []
                      Tpat_alias "p/1671"
                      pattern (lib/parameters.ml[82,2491+30]..lib/parameters.ml[82,2491+31])
                        Tpat_any
                    expression (lib/parameters.ml[83,2538+2]..lib/parameters.ml[89,2675+18])
                      Texp_match
                      expression (lib/parameters.ml[83,2538+8]..lib/parameters.ml[83,2538+9])
                        Texp_ident "p/1671"
                      [
                        <case>
                          pattern (lib/parameters.ml[84,2553+4]..lib/parameters.ml[84,2553+18])
                            Tpat_value
                            pattern (lib/parameters.ml[84,2553+4]..lib/parameters.ml[84,2553+18])
                              Tpat_construct "ParameterVar"
                              [
                                pattern (lib/parameters.ml[84,2553+17]..lib/parameters.ml[84,2553+18])
                                  Tpat_any
                              ]
                              None
                          expression (lib/parameters.ml[85,2575+6]..lib/parameters.ml[85,2575+11])
                            Texp_construct "false"
                            []
                        <case>
                          pattern (lib/parameters.ml[86,2587+4]..lib/parameters.ml[86,2587+24])
                            Tpat_value
                            pattern (lib/parameters.ml[86,2587+4]..lib/parameters.ml[86,2587+24])
                              Tpat_construct "ParameterApp"
                              [
                                pattern (lib/parameters.ml[86,2587+18]..lib/parameters.ml[86,2587+19])
                                  Tpat_any
                                pattern (lib/parameters.ml[86,2587+21]..lib/parameters.ml[86,2587+23])
                                  Tpat_var "ps/1672"
                              ]
                              None
                          expression (lib/parameters.ml[87,2615+6]..lib/parameters.ml[87,2615+31])
                            Texp_apply
                            expression (lib/parameters.ml[87,2615+6]..lib/parameters.ml[87,2615+17])
                              Texp_ident "Stdlib!.List.exists"
                            [
                              <arg>
                                Nolabel
                                expression (lib/parameters.ml[87,2615+18]..lib/parameters.ml[87,2615+28])
                                  Texp_apply
                                  expression (lib/parameters.ml[87,2615+19]..lib/parameters.ml[87,2615+25])
                                    Texp_ident "occurs/1656"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/parameters.ml[87,2615+26]..lib/parameters.ml[87,2615+27])
                                        Texp_ident "x/1670"
                                  ]
                              <arg>
                                Nolabel
                                expression (lib/parameters.ml[87,2615+29]..lib/parameters.ml[87,2615+31])
                                  Texp_ident "ps/1672"
                            ]
                        <case>
                          pattern (lib/parameters.ml[88,2647+4]..lib/parameters.ml[88,2647+24])
                            Tpat_value
                            pattern (lib/parameters.ml[88,2647+4]..lib/parameters.ml[88,2647+24])
                              Tpat_construct "ParameterAnonymous"
                              [
                                pattern (lib/parameters.ml[88,2647+23]..lib/parameters.ml[88,2647+24])
                                  Tpat_any
                              ]
                              None
                          expression (lib/parameters.ml[89,2675+6]..lib/parameters.ml[89,2675+18])
                            Texp_assert                            expression (lib/parameters.ml[89,2675+13]..lib/parameters.ml[89,2675+18])
                              Texp_construct "false"
                              []
                      ]
                ]
          ]
    ]
  structure_item (lib/parameters.ml[91,2695+0]..lib/parameters.ml[91,2695+18])
    Tstr_type Rec
    [
      type_declaration t/1673 (lib/parameters.ml[91,2695+0]..lib/parameters.ml[91,2695+18])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/parameters.ml[91,2695+9]..lib/parameters.ml[91,2695+18])
              Ttyp_constr "Gbnf_parser!.Syntax.parameter"
              []
    ]
  structure_item (lib/parameters.ml[93,2715+0]..lib/parameters.ml[101,3000+13])
    Tstr_value Rec
    [
      <def>
        pattern (lib/parameters.ml[93,2715+8]..lib/parameters.ml[93,2715+13])
          Tpat_var "equal/1674"
        expression (lib/parameters.ml[93,2715+14]..lib/parameters.ml[101,3000+13]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/parameters.ml[93,2715+14]..lib/parameters.ml[93,2715+15])
                Tpat_var "x/1675"
              expression (lib/parameters.ml[93,2715+16]..lib/parameters.ml[101,3000+13]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/parameters.ml[93,2715+16]..lib/parameters.ml[93,2715+17])
                      Tpat_var "y/1676"
                    expression (lib/parameters.ml[94,2735+2]..lib/parameters.ml[101,3000+13])
                      Texp_match
                      expression (lib/parameters.ml[94,2735+8]..lib/parameters.ml[94,2735+12])
                        Texp_tuple
                        [
                          expression (lib/parameters.ml[94,2735+8]..lib/parameters.ml[94,2735+9])
                            Texp_ident "x/1675"
                          expression (lib/parameters.ml[94,2735+11]..lib/parameters.ml[94,2735+12])
                            Texp_ident "y/1676"
                        ]
                      [
                        <case>
                          pattern (lib/parameters.ml[95,2753+6]..lib/parameters.ml[95,2753+36])
                            Tpat_value
                            pattern (lib/parameters.ml[95,2753+6]..lib/parameters.ml[95,2753+36])
                              Tpat_tuple
                              [
                                pattern (lib/parameters.ml[95,2753+6]..lib/parameters.ml[95,2753+20])
                                  Tpat_construct "ParameterVar"
                                  [
                                    pattern (lib/parameters.ml[95,2753+19]..lib/parameters.ml[95,2753+20])
                                      Tpat_var "x/1677"
                                  ]
                                  None
                                pattern (lib/parameters.ml[95,2753+22]..lib/parameters.ml[95,2753+36])
                                  Tpat_construct "ParameterVar"
                                  [
                                    pattern (lib/parameters.ml[95,2753+35]..lib/parameters.ml[95,2753+36])
                                      Tpat_var "y/1678"
                                  ]
                                  None
                              ]
                          expression (lib/parameters.ml[96,2793+8]..lib/parameters.ml[96,2793+25])
                            Texp_apply
                            expression (lib/parameters.ml[96,2793+16]..lib/parameters.ml[96,2793+17])
                              Texp_ident "Stdlib!.="
                            [
                              <arg>
                                Nolabel
                                expression (lib/parameters.ml[96,2793+8]..lib/parameters.ml[96,2793+15])
                                  Texp_field
                                  expression (lib/parameters.ml[96,2793+8]..lib/parameters.ml[96,2793+9])
                                    Texp_ident "x/1677"
                                  "value"
                              <arg>
                                Nolabel
                                expression (lib/parameters.ml[96,2793+18]..lib/parameters.ml[96,2793+25])
                                  Texp_field
                                  expression (lib/parameters.ml[96,2793+18]..lib/parameters.ml[96,2793+19])
                                    Texp_ident "y/1678"
                                  "value"
                            ]
                        <case>
                          pattern (lib/parameters.ml[97,2819+6]..lib/parameters.ml[97,2819+52])
                            Tpat_value
                            pattern (lib/parameters.ml[97,2819+6]..lib/parameters.ml[97,2819+52])
                              Tpat_tuple
                              [
                                pattern (lib/parameters.ml[97,2819+6]..lib/parameters.ml[97,2819+27])
                                  Tpat_construct "ParameterApp"
                                  [
                                    pattern (lib/parameters.ml[97,2819+20]..lib/parameters.ml[97,2819+22])
                                      Tpat_var "p1/1679"
                                    pattern (lib/parameters.ml[97,2819+24]..lib/parameters.ml[97,2819+26])
                                      Tpat_var "p2/1680"
                                  ]
                                  None
                                pattern (lib/parameters.ml[97,2819+29]..lib/parameters.ml[97,2819+52])
                                  Tpat_construct "ParameterApp"
                                  [
                                    pattern (lib/parameters.ml[97,2819+43]..lib/parameters.ml[97,2819+46])
                                      Tpat_var "p1'/1681"
                                    pattern (lib/parameters.ml[97,2819+48]..lib/parameters.ml[97,2819+51])
                                      Tpat_var "p2'/1682"
                                  ]
                                  None
                              ]
                          expression (lib/parameters.ml[98,2875+8]..lib/parameters.ml[98,2875+58])
                            Texp_apply
                            expression (lib/parameters.ml[98,2875+29]..lib/parameters.ml[98,2875+31])
                              Texp_ident "Stdlib!.&&"
                            [
                              <arg>
                                Nolabel
                                expression (lib/parameters.ml[98,2875+8]..lib/parameters.ml[98,2875+28])
                                  Texp_apply
                                  expression (lib/parameters.ml[98,2875+17]..lib/parameters.ml[98,2875+18])
                                    Texp_ident "Stdlib!.="
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/parameters.ml[98,2875+8]..lib/parameters.ml[98,2875+16])
                                        Texp_field
                                        expression (lib/parameters.ml[98,2875+8]..lib/parameters.ml[98,2875+10])
                                          Texp_ident "p1/1679"
                                        "value"
                                    <arg>
                                      Nolabel
                                      expression (lib/parameters.ml[98,2875+19]..lib/parameters.ml[98,2875+28])
                                        Texp_field
                                        expression (lib/parameters.ml[98,2875+19]..lib/parameters.ml[98,2875+22])
                                          Texp_ident "p1'/1681"
                                        "value"
                                  ]
                              <arg>
                                Nolabel
                                expression (lib/parameters.ml[98,2875+32]..lib/parameters.ml[98,2875+58])
                                  Texp_apply
                                  expression (lib/parameters.ml[98,2875+32]..lib/parameters.ml[98,2875+45])
                                    Texp_ident "Stdlib!.List.for_all2"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/parameters.ml[98,2875+46]..lib/parameters.ml[98,2875+51])
                                        Texp_ident "equal/1674"
                                    <arg>
                                      Nolabel
                                      expression (lib/parameters.ml[98,2875+52]..lib/parameters.ml[98,2875+54])
                                        Texp_ident "p2/1680"
                                    <arg>
                                      Nolabel
                                      expression (lib/parameters.ml[98,2875+55]..lib/parameters.ml[98,2875+58])
                                        Texp_ident "p2'/1682"
                                  ]
                            ]
                        <case>
                          pattern (lib/parameters.ml[99,2934+6]..lib/parameters.ml[99,2934+7])
                            Tpat_value
                            pattern (lib/parameters.ml[99,2934+6]..lib/parameters.ml[99,2934+7])
                              Tpat_any
                          expression (lib/parameters.ml[101,3000+8]..lib/parameters.ml[101,3000+13])
                            Texp_construct "false"
                            []
                      ]
                ]
          ]
    ]
  structure_item (lib/parameters.ml[103,3015+0]..lib/parameters.ml[109,3201+18])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[103,3015+4]..lib/parameters.ml[103,3015+8])
          Tpat_var "hash/1683"
        expression (lib/parameters.ml[103,3015+11]..lib/parameters.ml[109,3201+18])
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/parameters.ml[104,3035+4]..lib/parameters.ml[105,3054+23])
                Tpat_or
                pattern (lib/parameters.ml[104,3035+4]..lib/parameters.ml[104,3035+18])
                  Tpat_construct "ParameterVar"
                  [
                    pattern (lib/parameters.ml[104,3035+17]..lib/parameters.ml[104,3035+18])
                      Tpat_var "x/1685"
                  ]
                  None
                pattern (lib/parameters.ml[105,3054+4]..lib/parameters.ml[105,3054+23])
                  Tpat_construct "ParameterApp"
                  [
                    pattern (lib/parameters.ml[105,3054+18]..lib/parameters.ml[105,3054+19])
                      Tpat_var "x/1685"
                    pattern (lib/parameters.ml[105,3054+21]..lib/parameters.ml[105,3054+22])
                      Tpat_any
                  ]
                  None
              expression (lib/parameters.ml[106,3081+6]..lib/parameters.ml[106,3081+38])
                Texp_apply
                expression (lib/parameters.ml[106,3081+6]..lib/parameters.ml[106,3081+18])
                  Texp_ident "Stdlib!.Hashtbl.hash"
                [
                  <arg>
                    Nolabel
                    expression (lib/parameters.ml[106,3081+19]..lib/parameters.ml[106,3081+38])
                      Texp_apply
                      expression (lib/parameters.ml[106,3081+20]..lib/parameters.ml[106,3081+35])
                        Texp_ident "Gbnf_parser!.Positions.value"
                      [
                        <arg>
                          Nolabel
                          expression (lib/parameters.ml[106,3081+36]..lib/parameters.ml[106,3081+37])
                            Texp_ident "x/1685"
                      ]
                ]
            <case>
              pattern (lib/parameters.ml[107,3120+4]..lib/parameters.ml[107,3120+24])
                Tpat_construct "ParameterAnonymous"
                [
                  pattern (lib/parameters.ml[107,3120+23]..lib/parameters.ml[107,3120+24])
                    Tpat_any
                ]
                None
              expression (lib/parameters.ml[109,3201+6]..lib/parameters.ml[109,3201+18])
                Texp_assert                expression (lib/parameters.ml[109,3201+13]..lib/parameters.ml[109,3201+18])
                  Texp_construct "false"
                  []
          ]
    ]
  structure_item (lib/parameters.ml[111,3221+0]..lib/parameters.ml[116,3347+27])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[111,3221+4]..lib/parameters.ml[111,3221+12])
          Tpat_var "position/1727"
        expression (lib/parameters.ml[111,3221+15]..lib/parameters.ml[116,3347+27])
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/parameters.ml[112,3245+4]..lib/parameters.ml[113,3264+23])
                Tpat_or
                pattern (lib/parameters.ml[112,3245+4]..lib/parameters.ml[112,3245+18])
                  Tpat_construct "ParameterVar"
                  [
                    pattern (lib/parameters.ml[112,3245+17]..lib/parameters.ml[112,3245+18])
                      Tpat_var "x/1728"
                  ]
                  None
                pattern (lib/parameters.ml[113,3264+4]..lib/parameters.ml[113,3264+23])
                  Tpat_construct "ParameterApp"
                  [
                    pattern (lib/parameters.ml[113,3264+18]..lib/parameters.ml[113,3264+19])
                      Tpat_var "x/1728"
                    pattern (lib/parameters.ml[113,3264+21]..lib/parameters.ml[113,3264+22])
                      Tpat_any
                  ]
                  None
              expression (lib/parameters.ml[114,3291+6]..lib/parameters.ml[114,3291+26])
                Texp_apply
                expression (lib/parameters.ml[114,3291+6]..lib/parameters.ml[114,3291+24])
                  Texp_ident "Gbnf_parser!.Positions.position"
                [
                  <arg>
                    Nolabel
                    expression (lib/parameters.ml[114,3291+25]..lib/parameters.ml[114,3291+26])
                      Texp_ident "x/1728"
                ]
            <case>
              pattern (lib/parameters.ml[115,3318+4]..lib/parameters.ml[115,3318+25])
                Tpat_construct "ParameterAnonymous"
                [
                  pattern (lib/parameters.ml[115,3318+23]..lib/parameters.ml[115,3318+25])
                    Tpat_var "bs/1730"
                ]
                None
              expression (lib/parameters.ml[116,3347+6]..lib/parameters.ml[116,3347+27])
                Texp_apply
                expression (lib/parameters.ml[116,3347+6]..lib/parameters.ml[116,3347+24])
                  Texp_ident "Gbnf_parser!.Positions.position"
                [
                  <arg>
                    Nolabel
                    expression (lib/parameters.ml[116,3347+25]..lib/parameters.ml[116,3347+27])
                      Texp_ident "bs/1730"
                ]
          ]
    ]
  structure_item (lib/parameters.ml[118,3376+0]..lib/parameters.ml[119,3393+35])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[118,3376+4]..lib/parameters.ml[118,3376+12])
          Tpat_var "with_pos/1732"
        expression (lib/parameters.ml[118,3376+13]..lib/parameters.ml[119,3393+35]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/parameters.ml[118,3376+13]..lib/parameters.ml[118,3376+14])
                Tpat_var "p/1733"
              expression (lib/parameters.ml[119,3393+2]..lib/parameters.ml[119,3393+35])
                Texp_apply
                expression (lib/parameters.ml[119,3393+2]..lib/parameters.ml[119,3393+20])
                  Texp_ident "Gbnf_parser!.Positions.with_pos"
                [
                  <arg>
                    Nolabel
                    expression (lib/parameters.ml[119,3393+21]..lib/parameters.ml[119,3393+33])
                      Texp_apply
                      expression (lib/parameters.ml[119,3393+22]..lib/parameters.ml[119,3393+30])
                        Texp_ident "position/1727"
                      [
                        <arg>
                          Nolabel
                          expression (lib/parameters.ml[119,3393+31]..lib/parameters.ml[119,3393+32])
                            Texp_ident "p/1733"
                      ]
                  <arg>
                    Nolabel
                    expression (lib/parameters.ml[119,3393+34]..lib/parameters.ml[119,3393+35])
                      Texp_ident "p/1733"
                ]
          ]
    ]
  structure_item (lib/parameters.ml[121,3430+0]..lib/parameters.ml[131,3762+18])
    Tstr_value Rec
    [
      <def>
        pattern (lib/parameters.ml[121,3430+8]..lib/parameters.ml[121,3430+13])
          Tpat_var "print/1734"
        expression (lib/parameters.ml[121,3430+14]..lib/parameters.ml[131,3762+18]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (lib/parameters.ml[121,3430+14]..lib/parameters.ml[121,3430+25])
                Tpat_var "with_spaces/1735"
              expression (lib/parameters.ml[121,3430+28]..lib/parameters.ml[131,3762+18])
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (lib/parameters.ml[122,3467+4]..lib/parameters.ml[123,3486+24])
                      Tpat_or
                      pattern (lib/parameters.ml[122,3467+4]..lib/parameters.ml[122,3467+18])
                        Tpat_construct "ParameterVar"
                        [
                          pattern (lib/parameters.ml[122,3467+17]..lib/parameters.ml[122,3467+18])
                            Tpat_var "x/1736"
                        ]
                        None
                      pattern (lib/parameters.ml[123,3486+4]..lib/parameters.ml[123,3486+24])
                        Tpat_construct "ParameterApp"
                        [
                          pattern (lib/parameters.ml[123,3486+18]..lib/parameters.ml[123,3486+19])
                            Tpat_var "x/1736"
                          pattern (lib/parameters.ml[123,3486+21]..lib/parameters.ml[123,3486+23])
                            Tpat_construct "[]"
                            []
                            None
                        ]
                        None
                    expression (lib/parameters.ml[124,3514+6]..lib/parameters.ml[124,3514+13])
                      Texp_field
                      expression (lib/parameters.ml[124,3514+6]..lib/parameters.ml[124,3514+7])
                        Texp_ident "x/1736"
                      "value"
                  <case>
                    pattern (lib/parameters.ml[125,3528+4]..lib/parameters.ml[125,3528+24])
                      Tpat_construct "ParameterApp"
                      [
                        pattern (lib/parameters.ml[125,3528+18]..lib/parameters.ml[125,3528+19])
                          Tpat_var "x/1738"
                        pattern (lib/parameters.ml[125,3528+21]..lib/parameters.ml[125,3528+23])
                          Tpat_var "ps/1739"
                      ]
                      None
                    expression (lib/parameters.ml[126,3556+6]..lib/parameters.ml[129,3661+72])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/parameters.ml[126,3556+10]..lib/parameters.ml[126,3556+19])
                            Tpat_var "separator/1740"
                          expression (lib/parameters.ml[126,3556+22]..lib/parameters.ml[126,3556+55])
                            Texp_ifthenelse
                            expression (lib/parameters.ml[126,3556+25]..lib/parameters.ml[126,3556+36])
                              Texp_ident "with_spaces/1735"
                            expression (lib/parameters.ml[126,3556+42]..lib/parameters.ml[126,3556+46])
                              Texp_constant Const_string(", ",(lib/parameters.ml[126,3556+43]..lib/parameters.ml[126,3556+45]),None)
                            Some
                              expression (lib/parameters.ml[126,3556+52]..lib/parameters.ml[126,3556+55])
                                Texp_constant Const_string(",",(lib/parameters.ml[126,3556+53]..lib/parameters.ml[126,3556+54]),None)
                      ]
                      expression (lib/parameters.ml[127,3615+6]..lib/parameters.ml[129,3661+72])
                        Texp_apply
                        expression (lib/parameters.ml[127,3615+6]..lib/parameters.ml[127,3615+20])
                          Texp_ident "Stdlib!.Printf.sprintf"
                        [
                          <arg>
                            Nolabel
                            expression (lib/parameters.ml[127,3615+21]..lib/parameters.ml[127,3615+29])
                              Texp_construct "CamlinternalFormatBasics.Format"
                              [
                                expression (lib/parameters.ml[127,3615+21]..lib/parameters.ml[127,3615+29]) ghost
                                  Texp_construct "CamlinternalFormatBasics.String"
                                  [
                                    expression (lib/parameters.ml[127,3615+21]..lib/parameters.ml[127,3615+29]) ghost
                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                      []
                                    expression (lib/parameters.ml[127,3615+21]..lib/parameters.ml[127,3615+29]) ghost
                                      Texp_construct "CamlinternalFormatBasics.Char_literal"
                                      [
                                        expression (lib/parameters.ml[127,3615+21]..lib/parameters.ml[127,3615+29]) ghost
                                          Texp_constant Const_char 28
                                        expression (lib/parameters.ml[127,3615+21]..lib/parameters.ml[127,3615+29]) ghost
                                          Texp_construct "CamlinternalFormatBasics.String"
                                          [
                                            expression (lib/parameters.ml[127,3615+21]..lib/parameters.ml[127,3615+29]) ghost
                                              Texp_construct "CamlinternalFormatBasics.No_padding"
                                              []
                                            expression (lib/parameters.ml[127,3615+21]..lib/parameters.ml[127,3615+29]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Char_literal"
                                              [
                                                expression (lib/parameters.ml[127,3615+21]..lib/parameters.ml[127,3615+29]) ghost
                                                  Texp_constant Const_char 29
                                                expression (lib/parameters.ml[127,3615+21]..lib/parameters.ml[127,3615+29]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                  []
                                              ]
                                          ]
                                      ]
                                  ]
                                expression (lib/parameters.ml[127,3615+21]..lib/parameters.ml[127,3615+29]) ghost
                                  Texp_constant Const_string("%s(%s)",(lib/parameters.ml[127,3615+21]..lib/parameters.ml[127,3615+29]) ghost,None)
                              ]
                          <arg>
                            Nolabel
                            expression (lib/parameters.ml[128,3645+8]..lib/parameters.ml[128,3645+15])
                              Texp_field
                              expression (lib/parameters.ml[128,3645+8]..lib/parameters.ml[128,3645+9])
                                Texp_ident "x/1738"
                              "value"
                          <arg>
                            Nolabel
                            expression (lib/parameters.ml[129,3661+8]..lib/parameters.ml[129,3661+72])
                              Texp_apply
                              expression (lib/parameters.ml[129,3661+9]..lib/parameters.ml[129,3661+38])
                                Texp_ident "Gbnf_parser!.Misc.separated_list_to_string"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/parameters.ml[129,3661+39]..lib/parameters.ml[129,3661+58])
                                    Texp_apply
                                    expression (lib/parameters.ml[129,3661+40]..lib/parameters.ml[129,3661+45])
                                      Texp_ident "print/1734"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/parameters.ml[129,3661+46]..lib/parameters.ml[129,3661+57])
                                          Texp_ident "with_spaces/1735"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (lib/parameters.ml[129,3661+59]..lib/parameters.ml[129,3661+68])
                                    Texp_ident "separator/1740"
                                <arg>
                                  Nolabel
                                  expression (lib/parameters.ml[129,3661+69]..lib/parameters.ml[129,3661+71])
                                    Texp_ident "ps/1739"
                              ]
                        ]
                  <case>
                    pattern (lib/parameters.ml[130,3734+4]..lib/parameters.ml[130,3734+24])
                      Tpat_construct "ParameterAnonymous"
                      [
                        pattern (lib/parameters.ml[130,3734+23]..lib/parameters.ml[130,3734+24])
                          Tpat_any
                      ]
                      None
                    expression (lib/parameters.ml[131,3762+6]..lib/parameters.ml[131,3762+18])
                      Texp_assert                      expression (lib/parameters.ml[131,3762+13]..lib/parameters.ml[131,3762+18])
                        Texp_construct "false"
                        []
                ]
          ]
    ]
  structure_item (lib/parameters.ml[131,3762+18]..lib/parameters.ml[131,3762+18]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[131,3762+18]..lib/parameters.ml[131,3762+18]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/parameters.ml[131,3762+18]..lib/parameters.ml[131,3762+18]) ghost
          Texp_apply
          expression (lib/parameters.ml[131,3762+18]..lib/parameters.ml[131,3762+18]) ghost
            Texp_ident "Ppx_inline_test_lib!.unset_lib"
          [
            <arg>
              Nolabel
              expression (lib/parameters.ml[131,3762+18]..lib/parameters.ml[131,3762+18]) ghost
                Texp_constant Const_string("gbnf_parser",(lib/parameters.ml[131,3762+18]..lib/parameters.ml[131,3762+18]) ghost,None)
          ]
    ]
  structure_item (lib/parameters.ml[131,3762+18]..lib/parameters.ml[131,3762+18]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[131,3762+18]..lib/parameters.ml[131,3762+18]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/parameters.ml[131,3762+18]..lib/parameters.ml[131,3762+18]) ghost
          Texp_apply
          expression (lib/parameters.ml[131,3762+18]..lib/parameters.ml[131,3762+18]) ghost
            Texp_ident "Expect_test_collector!.Current_file.unset"
          [
            <arg>
              Nolabel
              expression (lib/parameters.ml[131,3762+18]..lib/parameters.ml[131,3762+18]) ghost
                Texp_construct "()"
                []
          ]
    ]
  structure_item (lib/parameters.ml[131,3762+18]..lib/parameters.ml[131,3762+18]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[131,3762+18]..lib/parameters.ml[131,3762+18]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/parameters.ml[131,3762+18]..lib/parameters.ml[131,3762+18]) ghost
          Texp_apply
          expression (lib/parameters.ml[131,3762+18]..lib/parameters.ml[131,3762+18]) ghost
            Texp_ident "Ppx_bench_lib!.Benchmark_accumulator.Current_libname.unset"
          [
            <arg>
              Nolabel
              expression (lib/parameters.ml[131,3762+18]..lib/parameters.ml[131,3762+18]) ghost
                Texp_construct "()"
                []
          ]
    ]
  structure_item (lib/parameters.ml[131,3762+18]..lib/parameters.ml[131,3762+18]) ghost
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/parameters.ml[131,3762+18]..lib/parameters.ml[131,3762+18]) ghost
          Tpat_construct "()"
          []
          None
        expression (lib/parameters.ml[131,3762+18]..lib/parameters.ml[131,3762+18]) ghost
          Texp_apply
          expression (lib/parameters.ml[131,3762+18]..lib/parameters.ml[131,3762+18]) ghost
            Texp_ident "Ppx_module_timer_runtime!.record_until"
          [
            <arg>
              Nolabel
              expression (lib/parameters.ml[131,3762+18]..lib/parameters.ml[131,3762+18]) ghost
                Texp_ident "Ppx_module_timer_runtime!.__MODULE__"
          ]
    ]
]

{<Gbnf_parser__Parameters>
 "app"[value] -> <Gbnf_parser__Parameters.0>;
 "equal"[value] -> <Gbnf_parser__Parameters.41>;
 "fold"[value] -> <Gbnf_parser__Parameters.14>;
 "hash"[value] -> <Gbnf_parser__Parameters.50>;
 "identifiers"[value] -> <Gbnf_parser__Parameters.20>;
 "map"[value] -> <Gbnf_parser__Parameters.9>;
 "occurs"[value] -> <Gbnf_parser__Parameters.25>;
 "occurs_deep"[value] -> <Gbnf_parser__Parameters.36>;
 "occurs_shallow"[value] -> <Gbnf_parser__Parameters.31>;
 "position"[value] -> <Gbnf_parser__Parameters.52>;
 "print"[value] -> <Gbnf_parser__Parameters.57>;
 "t"[type] -> <Gbnf_parser__Parameters.40>;
 "unapp"[value] -> <Gbnf_parser__Parameters.3>;
 "unvar"[value] -> <Gbnf_parser__Parameters.7>;
 "with_pos"[value] -> <Gbnf_parser__Parameters.55>;
 }

(setglobal Gbnf_parser__Parameters!
  (let
    (*match*/2522 =
       (after Gbnf_parser__Parameters lib/parameters.ml(16)<ghost>:1025-1025
         (apply (field_imm 3 (global Ppx_module_timer_runtime!))
           #"Gbnf_parser__Parameters"))
     *match*/2520 =
       (after Gbnf_parser__Parameters lib/parameters.ml(16)<ghost>:1025-1025
         (apply
           (field_imm 0
             (field_imm 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
           "gbnf_parser"))
     *match*/2518 =
       (after Gbnf_parser__Parameters lib/parameters.ml(16)<ghost>:1025-1025
         (apply (field_imm 0 (field_imm 5 (global Expect_test_collector!)))
           "lib/parameters.ml"))
     *match*/2516 =
       (after Gbnf_parser__Parameters lib/parameters.ml(16)<ghost>:1025-1025
         (apply (field_imm 4 (global Ppx_inline_test_lib!)) "gbnf_parser"
           "parameters.ml"))
     app/1204 =
       (function p/1206 ps/1207
         (funct-body Gbnf_parser__Parameters.app lib/parameters.ml(19)<ghost>:1061-1150
           (before Gbnf_parser__Parameters.app lib/parameters.ml(20):1070-1150
             (catch
               (if ps/1207 (exit 1)
                 (before Gbnf_parser__Parameters.app lib/parameters.ml(22):1100-1114
                   (makeblock 0 p/1206)))
              with (1)
               (before Gbnf_parser__Parameters.app lib/parameters.ml(24):1130-1150
                 (makeblock 1 p/1206 ps/1207))))))
     unapp/1280 =
       (function param/1309
         (funct-body Gbnf_parser__Parameters.unapp lib/parameters.ml(26):1164-1350
           (switch* param/1309
            case tag 0:
             (let (x/1282 =a (field_imm 0 param/1309))
               (before Gbnf_parser__Parameters.unapp lib/parameters.ml(28):1201-1208
                 (makeblock 0 x/1282 0)))
            case tag 1:
             (let
               (ps/1284 =a (field_imm 1 param/1309)
                p/1283 =a (field_imm 0 param/1309))
               (before Gbnf_parser__Parameters.unapp lib/parameters.ml(30):1243-1250
                 (makeblock 0 p/1283 ps/1284)))
            case tag 2:
             (let (*match*/2484 =a (field_imm 0 param/1309))
               (before Gbnf_parser__Parameters.unapp lib/parameters.ml(33):1338-1350
                 (raise
                   (after Gbnf_parser__Parameters.unapp lib/parameters.ml(33):1338-1350
                     (makeblock 0 (global Assert_failure/28!)
                       [0: "lib/parameters.ml" 33 6]))))))))
     unvar/1310 =
       (function param/1313
         (funct-body Gbnf_parser__Parameters.unvar lib/parameters.ml(35):1364-1468
           (catch
             (switch* param/1313
              case tag 0:
               (let (x/1312 =a (field_imm 0 param/1313))
                 (before Gbnf_parser__Parameters.unvar lib/parameters.ml(37):1401-1402
                   x/1312))
              case tag 1: (exit 2)
              case tag 2: (exit 2))
            with (2)
             (before Gbnf_parser__Parameters.unvar lib/parameters.ml(40):1456-1468
               (raise
                 (after Gbnf_parser__Parameters.unvar lib/parameters.ml(40):1456-1468
                   (makeblock 0 (global Assert_failure/28!)
                     [0: "lib/parameters.ml" 40 6]))))))))
    (letrec
      (map/1314
         (function f/1315 param/1385
           (funct-body Gbnf_parser__Parameters.map lib/parameters.ml(42)<ghost>:1482-1715
             (switch* param/1385
              case tag 0:
               (let (x/1316 =a (field_imm 0 param/1385))
                 (before Gbnf_parser__Parameters.map lib/parameters.ml(44):1523-1541
                   (makeblock 0
                     (after Gbnf_parser__Parameters.map lib/parameters.ml(44):1536-1541
                       (apply f/1315 x/1316)))))
              case tag 1:
               (let
                 (ps/1318 =a (field_imm 1 param/1385)
                  p/1317 =a (field_imm 0 param/1385))
                 (before Gbnf_parser__Parameters.map lib/parameters.ml(46):1576-1615
                   (makeblock 1
                     (after Gbnf_parser__Parameters.map lib/parameters.ml(46):1590-1593
                       (apply f/1315 p/1317))
                     (after Gbnf_parser__Parameters.map lib/parameters.ml(46):1595-1614
                       (apply (field_imm 19 (global Stdlib__List!))
                         (after Gbnf_parser__Parameters.map lib/parameters.ml(46):1604-1611
                           (apply map/1314 f/1315))
                         ps/1318)))))
              case tag 2:
               (let (*match*/2488 =a (field_imm 0 param/1385))
                 (before Gbnf_parser__Parameters.map lib/parameters.ml(49):1703-1715
                   (raise
                     (after Gbnf_parser__Parameters.map lib/parameters.ml(49):1703-1715
                       (makeblock 0 (global Assert_failure/28!)
                         [0: "lib/parameters.ml" 49 6])))))))))
      (letrec
        (fold/1386
           (function f/1387 init/1388 param/1392
             (funct-body Gbnf_parser__Parameters.fold lib/parameters.ml(51)<ghost>:1730-1956
               (switch* param/1392
                case tag 0:
                 (let (x/1389 =a (field_imm 0 param/1392))
                   (before Gbnf_parser__Parameters.fold lib/parameters.ml(53):1776-1784
                     (after Gbnf_parser__Parameters.fold lib/parameters.ml(53):1776-1784
                       (apply f/1387 init/1388 x/1389))))
                case tag 1:
                 (let
                   (ps/1391 =a (field_imm 1 param/1392)
                    p/1390 =a (field_imm 0 param/1392))
                   (before Gbnf_parser__Parameters.fold lib/parameters.ml(55):1819-1856
                     (after Gbnf_parser__Parameters.fold lib/parameters.ml(55):1819-1856
                       (apply f/1387
                         (after Gbnf_parser__Parameters.fold lib/parameters.ml(55):1821-1854
                           (apply (field_imm 25 (global Stdlib__List!))
                             (after Gbnf_parser__Parameters.fold lib/parameters.ml(55):1837-1845
                               (apply fold/1386 f/1387))
                             init/1388 ps/1391))
                         p/1390))))
                case tag 2:
                 (let (*match*/2489 =a (field_imm 0 param/1392))
                   (before Gbnf_parser__Parameters.fold lib/parameters.ml(58):1944-1956
                     (raise
                       (after Gbnf_parser__Parameters.fold lib/parameters.ml(58):1944-1956
                         (makeblock 0 (global Assert_failure/28!)
                           [0: "lib/parameters.ml" 58 6])))))))))
        (let
          (identifiers/1393 =
             (function m/1395 p/1396
               (funct-body Gbnf_parser__Parameters.identifiers lib/parameters.ml(60)<ghost>:1974-2044
                 (before Gbnf_parser__Parameters.identifiers lib/parameters.ml(61):1982-2044
                   (after Gbnf_parser__Parameters.identifiers lib/parameters.ml(61):1982-2044
                     (apply fold/1386
                       (function accu/1397 x/1398
                         (funct-body Gbnf_parser__Parameters.identifiers.(fun) lib/parameters.ml(61):1987-2040
                           (before Gbnf_parser__Parameters.identifiers.(fun) lib/parameters.ml(61):2002-2039
                             (after Gbnf_parser__Parameters.identifiers.(fun) lib/parameters.ml(61):2002-2039
                               (apply
                                 (field_imm 1
                                   (global Gbnf_parser__StringMap!))
                                 (field_imm 0 x/1398) (field_imm 1 x/1398)
                                 accu/1397)))))
                       m/1395 p/1396))))))
          (letrec
            (occurs/1656
               (function x/1657 p/1658 : int
                 (funct-body Gbnf_parser__Parameters.occurs lib/parameters.ml(63)<ghost>:2061-2268
                   (before Gbnf_parser__Parameters.occurs lib/parameters.ml(64):2094-2268
                     (switch* p/1658
                      case tag 0:
                       (let (y/1659 =a (field_imm 0 p/1658))
                         (before Gbnf_parser__Parameters.occurs lib/parameters.ml(66):2135-2146
                           (after Gbnf_parser__Parameters.occurs lib/parameters.ml(66):2135-2146
                             (caml_string_equal x/1657 (field_imm 0 y/1659)))))
                      case tag 1:
                       (let
                         (ps/1661 =a (field_imm 1 p/1658)
                          y/1660 =a (field_imm 0 p/1658))
                         (before Gbnf_parser__Parameters.occurs lib/parameters.ml(68):2181-2221
                           (||
                             (after Gbnf_parser__Parameters.occurs lib/parameters.ml(68):2181-2192
                               (caml_string_equal x/1657
                                 (field_imm 0 y/1660)))
                             (after Gbnf_parser__Parameters.occurs lib/parameters.ml(68):2196-2221
                               (apply (field_imm 33 (global Stdlib__List!))
                                 (after Gbnf_parser__Parameters.occurs lib/parameters.ml(68):2208-2218
                                   (apply occurs/1656 x/1657))
                                 ps/1661)))))
                      case tag 2:
                       (let (*match*/2490 =a (field_imm 0 p/1658))
                         (before Gbnf_parser__Parameters.occurs lib/parameters.ml(70):2256-2268
                           (raise
                             (after Gbnf_parser__Parameters.occurs lib/parameters.ml(70):2256-2268
                               (makeblock 0 (global Assert_failure/28!)
                                 [0: "lib/parameters.ml" 70 6]))))))))))
            (let
              (occurs_shallow/1662 =
                 (function x/1664 p/1665 : int
                   (funct-body Gbnf_parser__Parameters.occurs_shallow lib/parameters.ml(72)<ghost>:2289-2489
                     (before Gbnf_parser__Parameters.occurs_shallow lib/parameters.ml(73):2322-2489
                       (switch* p/1665
                        case tag 0:
                         (let (y/1666 =a (field_imm 0 p/1665))
                           (before Gbnf_parser__Parameters.occurs_shallow lib/parameters.ml(75):2363-2374
                             (after Gbnf_parser__Parameters.occurs_shallow lib/parameters.ml(75):2363-2374
                               (caml_string_equal x/1664
                                 (field_imm 0 y/1666)))))
                        case tag 1:
                         (let
                           (*match*/2491 =a (field_imm 1 p/1665)
                            y/1667 =a (field_imm 0 p/1665))
                           (before Gbnf_parser__Parameters.occurs_shallow lib/parameters.ml(77):2408-2442
                             (seq
                               (if
                                 (after Gbnf_parser__Parameters.occurs_shallow lib/parameters.ml(77):2415-2429
                                   (caml_string_notequal x/1664
                                     (field_imm 0 y/1667)))
                                 0
                                 (raise
                                   (after Gbnf_parser__Parameters.occurs_shallow lib/parameters.ml(77):2408-2429
                                     (makeblock 0 (global Assert_failure/28!)
                                       [0: "lib/parameters.ml" 77 6]))))
                               (before Gbnf_parser__Parameters.occurs_shallow lib/parameters.ml(78):2437-2442
                                 0))))
                        case tag 2:
                         (let (*match*/2492 =a (field_imm 0 p/1665))
                           (before Gbnf_parser__Parameters.occurs_shallow lib/parameters.ml(80):2477-2489
                             (raise
                               (after Gbnf_parser__Parameters.occurs_shallow lib/parameters.ml(80):2477-2489
                                 (makeblock 0 (global Assert_failure/28!)
                                   [0: "lib/parameters.ml" 80 6])))))))))
               occurs_deep/1668 =
                 (function x/1670 p/1671 : int
                   (funct-body Gbnf_parser__Parameters.occurs_deep lib/parameters.ml(82)<ghost>:2507-2693
                     (before Gbnf_parser__Parameters.occurs_deep lib/parameters.ml(83):2540-2693
                       (switch* p/1671
                        case tag 0:
                         (let (*match*/2493 =a (field_imm 0 p/1671))
                           (before Gbnf_parser__Parameters.occurs_deep lib/parameters.ml(85):2581-2586
                             0))
                        case tag 1:
                         (let
                           (ps/1672 =a (field_imm 1 p/1671)
                            *match*/2494 =a (field_imm 0 p/1671))
                           (before Gbnf_parser__Parameters.occurs_deep lib/parameters.ml(87):2621-2646
                             (after Gbnf_parser__Parameters.occurs_deep lib/parameters.ml(87):2621-2646
                               (apply (field_imm 33 (global Stdlib__List!))
                                 (after Gbnf_parser__Parameters.occurs_deep lib/parameters.ml(87):2633-2643
                                   (apply occurs/1656 x/1670))
                                 ps/1672))))
                        case tag 2:
                         (let (*match*/2495 =a (field_imm 0 p/1671))
                           (before Gbnf_parser__Parameters.occurs_deep lib/parameters.ml(89):2681-2693
                             (raise
                               (after Gbnf_parser__Parameters.occurs_deep lib/parameters.ml(89):2681-2693
                                 (makeblock 0 (global Assert_failure/28!)
                                   [0: "lib/parameters.ml" 89 6]))))))))))
              (letrec
                (equal/1674
                   (function x/1675 y/1676 : int
                     (funct-body Gbnf_parser__Parameters.equal lib/parameters.ml(93)<ghost>:2729-3013
                       (before Gbnf_parser__Parameters.equal lib/parameters.ml(94):2737-3013
                         (catch
                           (switch* x/1675
                            case tag 0:
                             (let (x/1677 =a (field_imm 0 x/1675))
                               (switch* y/1676
                                case tag 0:
                                 (let (y/1678 =a (field_imm 0 y/1676))
                                   (before Gbnf_parser__Parameters.equal lib/parameters.ml(96):2801-2818
                                     (after Gbnf_parser__Parameters.equal lib/parameters.ml(96):2801-2818
                                       (caml_string_equal
                                         (field_imm 0 x/1677)
                                         (field_imm 0 y/1678)))))
                                case tag 1: (exit 3)
                                case tag 2: (exit 3)))
                            case tag 1:
                             (let
                               (p2/1680 =a (field_imm 1 x/1675)
                                p1/1679 =a (field_imm 0 x/1675))
                               (switch* y/1676
                                case tag 0: (exit 3)
                                case tag 1:
                                 (let
                                   (p2'/1682 =a (field_imm 1 y/1676)
                                    p1'/1681 =a (field_imm 0 y/1676))
                                   (before Gbnf_parser__Parameters.equal lib/parameters.ml(98):2883-2933
                                     (&&
                                       (after Gbnf_parser__Parameters.equal lib/parameters.ml(98):2883-2903
                                         (caml_string_equal
                                           (field_imm 0 p1/1679)
                                           (field_imm 0 p1'/1681)))
                                       (after Gbnf_parser__Parameters.equal lib/parameters.ml(98):2907-2933
                                         (apply
                                           (field_imm 34
                                             (global Stdlib__List!))
                                           equal/1674 p2/1680 p2'/1682)))))
                                case tag 2: (exit 3)))
                            case tag 2: (exit 3))
                          with (3)
                           (before Gbnf_parser__Parameters.equal lib/parameters.ml(101):3008-3013
                             0))))))
                (let
                  (hash/1683 =
                     (function param/1726 : int
                       (funct-body Gbnf_parser__Parameters.hash lib/parameters.ml(103):3026-3219
                         (catch
                           (catch
                             (switch* param/1726
                              case tag 0: (exit 5)
                              case tag 1: (exit 5)
                              case tag 2:
                               (let
                                 (*match*/2498 =a (field_imm 0 param/1726))
                                 (before Gbnf_parser__Parameters.hash lib/parameters.ml(109):3207-3219
                                   (raise
                                     (after Gbnf_parser__Parameters.hash lib/parameters.ml(109):3207-3219
                                       (makeblock 0
                                         (global Assert_failure/28!)
                                         [0: "lib/parameters.ml" 109 6]))))))
                            with (5)
                             (let (x/2497 =a (field_imm 0 param/1726))
                               (exit 4 x/2497)))
                          with (4 x/1685)
                           (before Gbnf_parser__Parameters.hash lib/parameters.ml(106):3087-3119
                             (after Gbnf_parser__Parameters.hash lib/parameters.ml(106):3087-3119
                               (apply
                                 (field_imm 27 (global Stdlib__Hashtbl!))
                                 (after Gbnf_parser__Parameters.hash lib/parameters.ml(106):3100-3119
                                   (apply
                                     (field_imm 0
                                       (global Gbnf_parser__Positions!))
                                     x/1685))))))))
                   position/1727 =
                     (function param/1731
                       (funct-body Gbnf_parser__Parameters.position lib/parameters.ml(111):3236-3374
                         (catch
                           (catch
                             (switch* param/1731
                              case tag 0: (exit 7)
                              case tag 1: (exit 7)
                              case tag 2:
                               (let (bs/1730 =a (field_imm 0 param/1731))
                                 (before Gbnf_parser__Parameters.position lib/parameters.ml(116):3353-3374
                                   (after Gbnf_parser__Parameters.position lib/parameters.ml(116):3353-3374
                                     (apply
                                       (field_imm 1
                                         (global Gbnf_parser__Positions!))
                                       bs/1730)))))
                            with (7)
                             (let (x/2501 =a (field_imm 0 param/1731))
                               (exit 6 x/2501)))
                          with (6 x/1728)
                           (before Gbnf_parser__Parameters.position lib/parameters.ml(114):3297-3317
                             (after Gbnf_parser__Parameters.position lib/parameters.ml(114):3297-3317
                               (apply
                                 (field_imm 1
                                   (global Gbnf_parser__Positions!))
                                 x/1728))))))
                   with_pos/1732 =
                     (function p/1733
                       (funct-body Gbnf_parser__Parameters.with_pos lib/parameters.ml(118)<ghost>:3389-3428
                         (before Gbnf_parser__Parameters.with_pos lib/parameters.ml(119):3395-3428
                           (after Gbnf_parser__Parameters.with_pos lib/parameters.ml(119):3395-3428
                             (apply
                               (field_imm 3 (global Gbnf_parser__Positions!))
                               (after Gbnf_parser__Parameters.with_pos lib/parameters.ml(119):3414-3426
                                 (apply position/1727 p/1733))
                               p/1733))))))
                  (letrec
                    (print/1734
                       (function with_spaces/1735[int] param/1818
                         (funct-body Gbnf_parser__Parameters.print lib/parameters.ml(121)<ghost>:3444-3780
                           (catch
                             (switch* param/1818
                              case tag 0:
                               (let (x/2504 =a (field_imm 0 param/1818))
                                 (exit 8 x/2504))
                              case tag 1:
                               (let (x/2503 =a (field_imm 0 param/1818))
                                 (catch
                                   (let
                                     (*match*/2506 =a
                                        (field_imm 1 param/1818))
                                     (if *match*/2506 (exit 9)
                                       (exit 8 x/2503)))
                                  with (9)
                                   (let
                                     (x/1738 =a x/2503
                                      ps/1739 =a (field_imm 1 param/1818))
                                     (before Gbnf_parser__Parameters.print lib/parameters.ml(126):3562-3733
                                       (let
                                         (separator/1740 =
                                            (if with_spaces/1735
                                              (before Gbnf_parser__Parameters.print lib/parameters.ml(126):3598-3602
                                                ", ")
                                              (before Gbnf_parser__Parameters.print lib/parameters.ml(126):3608-3611
                                                ",")))
                                         (before Gbnf_parser__Parameters.print lib/parameters.ml(127):3621-3733
                                           (after Gbnf_parser__Parameters.print lib/parameters.ml(127):3621-3733
                                             (apply
                                               (field_imm 3
                                                 (global Stdlib__Printf!))
                                               [0:
                                                [2:
                                                 0
                                                 [12: '(' [2: 0 [12: ')' 0]]]]
                                                "%s(%s)"]
                                               (field_imm 0 x/1738)
                                               (after Gbnf_parser__Parameters.print lib/parameters.ml(129):3669-3733
                                                 (apply
                                                   (field_imm 6
                                                     (global Gbnf_parser__Misc!))
                                                   (after Gbnf_parser__Parameters.print lib/parameters.ml(129):3700-3719
                                                     (apply print/1734
                                                       with_spaces/1735))
                                                   separator/1740 ps/1739))))))))))
                              case tag 2:
                               (let
                                 (*match*/2505 =a (field_imm 0 param/1818))
                                 (before Gbnf_parser__Parameters.print lib/parameters.ml(131):3768-3780
                                   (raise
                                     (after Gbnf_parser__Parameters.print lib/parameters.ml(131):3768-3780
                                       (makeblock 0
                                         (global Assert_failure/28!)
                                         [0: "lib/parameters.ml" 131 6]))))))
                            with (8 x/1736)
                             (before Gbnf_parser__Parameters.print lib/parameters.ml(124):3520-3527
                               (field_imm 0 x/1736))))))
                    (let
                      (*match*/2514 =
                         (after Gbnf_parser__Parameters lib/parameters.ml(131)<ghost>:3780-3780
                           (apply (field_imm 5 (global Ppx_inline_test_lib!))
                             "gbnf_parser"))
                       *match*/2512 =
                         (after Gbnf_parser__Parameters lib/parameters.ml(131)<ghost>:3780-3780
                           (apply
                             (field_imm 1
                               (field_imm 5 (global Expect_test_collector!)))
                             0))
                       *match*/2510 =
                         (after Gbnf_parser__Parameters lib/parameters.ml(131)<ghost>:3780-3780
                           (apply
                             (field_imm 1
                               (field_imm 0
                                 (global Ppx_bench_lib__Benchmark_accumulator!)))
                             0))
                       *match*/2508 =
                         (after Gbnf_parser__Parameters lib/parameters.ml(131)<ghost>:3780-3780
                           (apply
                             (field_imm 4 (global Ppx_module_timer_runtime!))
                             #"Gbnf_parser__Parameters")))
                      (pseudo <unknown location>
                        (makeblock 0 app/1204 unapp/1280 unvar/1310 map/1314
                          fold/1386 identifiers/1393 occurs/1656
                          occurs_shallow/1662 occurs_deep/1668 equal/1674
                          hash/1683 position/1727 with_pos/1732 print/1734)))))))))))))
(setglobal Gbnf_parser__Parameters!
  (let
    (*match*/2522 =
       (after Gbnf_parser__Parameters lib/parameters.ml(16)<ghost>:1025-1025
         (apply (field_imm 3 (global Ppx_module_timer_runtime!))
           #"Gbnf_parser__Parameters"))
     *match*/2520 =
       (after Gbnf_parser__Parameters lib/parameters.ml(16)<ghost>:1025-1025
         (apply
           (field_imm 0
             (field_imm 0 (global Ppx_bench_lib__Benchmark_accumulator!)))
           "gbnf_parser"))
     *match*/2518 =
       (after Gbnf_parser__Parameters lib/parameters.ml(16)<ghost>:1025-1025
         (apply (field_imm 0 (field_imm 5 (global Expect_test_collector!)))
           "lib/parameters.ml"))
     *match*/2516 =
       (after Gbnf_parser__Parameters lib/parameters.ml(16)<ghost>:1025-1025
         (apply (field_imm 4 (global Ppx_inline_test_lib!)) "gbnf_parser"
           "parameters.ml"))
     app/1204 =
       (function p/1206 ps/1207
         (funct-body Gbnf_parser__Parameters.app lib/parameters.ml(19)<ghost>:1061-1150
           (before Gbnf_parser__Parameters.app lib/parameters.ml(20):1070-1150
             (if ps/1207
               (before Gbnf_parser__Parameters.app lib/parameters.ml(24):1130-1150
                 (makeblock 1 p/1206 ps/1207))
               (before Gbnf_parser__Parameters.app lib/parameters.ml(22):1100-1114
                 (makeblock 0 p/1206))))))
     unapp/1280 =
       (function param/1309
         (funct-body Gbnf_parser__Parameters.unapp lib/parameters.ml(26):1164-1350
           (switch* param/1309
            case tag 0:
             (let (x/1282 =a (field_imm 0 param/1309))
               (before Gbnf_parser__Parameters.unapp lib/parameters.ml(28):1201-1208
                 (makeblock 0 x/1282 0)))
            case tag 1:
             (let
               (ps/1284 =a (field_imm 1 param/1309)
                p/1283 =a (field_imm 0 param/1309))
               (before Gbnf_parser__Parameters.unapp lib/parameters.ml(30):1243-1250
                 (makeblock 0 p/1283 ps/1284)))
            case tag 2:
             (before Gbnf_parser__Parameters.unapp lib/parameters.ml(33):1338-1350
               (raise
                 (after Gbnf_parser__Parameters.unapp lib/parameters.ml(33):1338-1350
                   (makeblock 0 (global Assert_failure/28!)
                     [0: "lib/parameters.ml" 33 6])))))))
     unvar/1310 =
       (function param/1313
         (funct-body Gbnf_parser__Parameters.unvar lib/parameters.ml(35):1364-1468
           (catch
             (switch* param/1313
              case tag 0:
               (let (x/1312 =a (field_imm 0 param/1313))
                 (before Gbnf_parser__Parameters.unvar lib/parameters.ml(37):1401-1402
                   x/1312))
              case tag 1: (exit 2)
              case tag 2: (exit 2))
            with (2)
             (before Gbnf_parser__Parameters.unvar lib/parameters.ml(40):1456-1468
               (raise
                 (after Gbnf_parser__Parameters.unvar lib/parameters.ml(40):1456-1468
                   (makeblock 0 (global Assert_failure/28!)
                     [0: "lib/parameters.ml" 40 6]))))))))
    (letrec
      (map/1314
         (function f/1315 param/1385
           (funct-body Gbnf_parser__Parameters.map lib/parameters.ml(42)<ghost>:1482-1715
             (switch* param/1385
              case tag 0:
               (let (x/1316 =a (field_imm 0 param/1385))
                 (before Gbnf_parser__Parameters.map lib/parameters.ml(44):1523-1541
                   (makeblock 0
                     (after Gbnf_parser__Parameters.map lib/parameters.ml(44):1536-1541
                       (apply f/1315 x/1316)))))
              case tag 1:
               (let
                 (ps/1318 =a (field_imm 1 param/1385)
                  p/1317 =a (field_imm 0 param/1385))
                 (before Gbnf_parser__Parameters.map lib/parameters.ml(46):1576-1615
                   (makeblock 1
                     (after Gbnf_parser__Parameters.map lib/parameters.ml(46):1590-1593
                       (apply f/1315 p/1317))
                     (after Gbnf_parser__Parameters.map lib/parameters.ml(46):1595-1614
                       (apply (field_imm 19 (global Stdlib__List!))
                         (after Gbnf_parser__Parameters.map lib/parameters.ml(46):1604-1611
                           (apply map/1314 f/1315))
                         ps/1318)))))
              case tag 2:
               (before Gbnf_parser__Parameters.map lib/parameters.ml(49):1703-1715
                 (raise
                   (after Gbnf_parser__Parameters.map lib/parameters.ml(49):1703-1715
                     (makeblock 0 (global Assert_failure/28!)
                       [0: "lib/parameters.ml" 49 6]))))))))
      (letrec
        (fold/1386
           (function f/1387 init/1388 param/1392
             (funct-body Gbnf_parser__Parameters.fold lib/parameters.ml(51)<ghost>:1730-1956
               (switch* param/1392
                case tag 0:
                 (let (x/1389 =a (field_imm 0 param/1392))
                   (before Gbnf_parser__Parameters.fold lib/parameters.ml(53):1776-1784
                     (after Gbnf_parser__Parameters.fold lib/parameters.ml(53):1776-1784
                       (apply f/1387 init/1388 x/1389))))
                case tag 1:
                 (let
                   (ps/1391 =a (field_imm 1 param/1392)
                    p/1390 =a (field_imm 0 param/1392))
                   (before Gbnf_parser__Parameters.fold lib/parameters.ml(55):1819-1856
                     (after Gbnf_parser__Parameters.fold lib/parameters.ml(55):1819-1856
                       (apply f/1387
                         (after Gbnf_parser__Parameters.fold lib/parameters.ml(55):1821-1854
                           (apply (field_imm 25 (global Stdlib__List!))
                             (after Gbnf_parser__Parameters.fold lib/parameters.ml(55):1837-1845
                               (apply fold/1386 f/1387))
                             init/1388 ps/1391))
                         p/1390))))
                case tag 2:
                 (before Gbnf_parser__Parameters.fold lib/parameters.ml(58):1944-1956
                   (raise
                     (after Gbnf_parser__Parameters.fold lib/parameters.ml(58):1944-1956
                       (makeblock 0 (global Assert_failure/28!)
                         [0: "lib/parameters.ml" 58 6]))))))))
        (let
          (identifiers/1393 =
             (function m/1395 p/1396
               (funct-body Gbnf_parser__Parameters.identifiers lib/parameters.ml(60)<ghost>:1974-2044
                 (before Gbnf_parser__Parameters.identifiers lib/parameters.ml(61):1982-2044
                   (after Gbnf_parser__Parameters.identifiers lib/parameters.ml(61):1982-2044
                     (apply fold/1386
                       (function accu/1397 x/1398
                         (funct-body Gbnf_parser__Parameters.identifiers.(fun) lib/parameters.ml(61):1987-2040
                           (before Gbnf_parser__Parameters.identifiers.(fun) lib/parameters.ml(61):2002-2039
                             (after Gbnf_parser__Parameters.identifiers.(fun) lib/parameters.ml(61):2002-2039
                               (apply
                                 (field_imm 1
                                   (global Gbnf_parser__StringMap!))
                                 (field_imm 0 x/1398) (field_imm 1 x/1398)
                                 accu/1397)))))
                       m/1395 p/1396))))))
          (letrec
            (occurs/1656
               (function x/1657 p/1658 : int
                 (funct-body Gbnf_parser__Parameters.occurs lib/parameters.ml(63)<ghost>:2061-2268
                   (before Gbnf_parser__Parameters.occurs lib/parameters.ml(64):2094-2268
                     (switch* p/1658
                      case tag 0:
                       (let (y/1659 =a (field_imm 0 p/1658))
                         (before Gbnf_parser__Parameters.occurs lib/parameters.ml(66):2135-2146
                           (after Gbnf_parser__Parameters.occurs lib/parameters.ml(66):2135-2146
                             (caml_string_equal x/1657 (field_imm 0 y/1659)))))
                      case tag 1:
                       (let
                         (ps/1661 =a (field_imm 1 p/1658)
                          y/1660 =a (field_imm 0 p/1658))
                         (before Gbnf_parser__Parameters.occurs lib/parameters.ml(68):2181-2221
                           (||
                             (after Gbnf_parser__Parameters.occurs lib/parameters.ml(68):2181-2192
                               (caml_string_equal x/1657
                                 (field_imm 0 y/1660)))
                             (after Gbnf_parser__Parameters.occurs lib/parameters.ml(68):2196-2221
                               (apply (field_imm 33 (global Stdlib__List!))
                                 (after Gbnf_parser__Parameters.occurs lib/parameters.ml(68):2208-2218
                                   (apply occurs/1656 x/1657))
                                 ps/1661)))))
                      case tag 2:
                       (before Gbnf_parser__Parameters.occurs lib/parameters.ml(70):2256-2268
                         (raise
                           (after Gbnf_parser__Parameters.occurs lib/parameters.ml(70):2256-2268
                             (makeblock 0 (global Assert_failure/28!)
                               [0: "lib/parameters.ml" 70 6])))))))))
            (let
              (occurs_shallow/1662 =
                 (function x/1664 p/1665 : int
                   (funct-body Gbnf_parser__Parameters.occurs_shallow lib/parameters.ml(72)<ghost>:2289-2489
                     (before Gbnf_parser__Parameters.occurs_shallow lib/parameters.ml(73):2322-2489
                       (switch* p/1665
                        case tag 0:
                         (let (y/1666 =a (field_imm 0 p/1665))
                           (before Gbnf_parser__Parameters.occurs_shallow lib/parameters.ml(75):2363-2374
                             (after Gbnf_parser__Parameters.occurs_shallow lib/parameters.ml(75):2363-2374
                               (caml_string_equal x/1664
                                 (field_imm 0 y/1666)))))
                        case tag 1:
                         (let (y/1667 =a (field_imm 0 p/1665))
                           (before Gbnf_parser__Parameters.occurs_shallow lib/parameters.ml(77):2408-2442
                             (seq
                               (if
                                 (after Gbnf_parser__Parameters.occurs_shallow lib/parameters.ml(77):2415-2429
                                   (caml_string_notequal x/1664
                                     (field_imm 0 y/1667)))
                                 0
                                 (raise
                                   (after Gbnf_parser__Parameters.occurs_shallow lib/parameters.ml(77):2408-2429
                                     (makeblock 0 (global Assert_failure/28!)
                                       [0: "lib/parameters.ml" 77 6]))))
                               (before Gbnf_parser__Parameters.occurs_shallow lib/parameters.ml(78):2437-2442
                                 0))))
                        case tag 2:
                         (before Gbnf_parser__Parameters.occurs_shallow lib/parameters.ml(80):2477-2489
                           (raise
                             (after Gbnf_parser__Parameters.occurs_shallow lib/parameters.ml(80):2477-2489
                               (makeblock 0 (global Assert_failure/28!)
                                 [0: "lib/parameters.ml" 80 6]))))))))
               occurs_deep/1668 =
                 (function x/1670 p/1671 : int
                   (funct-body Gbnf_parser__Parameters.occurs_deep lib/parameters.ml(82)<ghost>:2507-2693
                     (before Gbnf_parser__Parameters.occurs_deep lib/parameters.ml(83):2540-2693
                       (switch* p/1671
                        case tag 0:
                         (before Gbnf_parser__Parameters.occurs_deep lib/parameters.ml(85):2581-2586
                           0)
                        case tag 1:
                         (let (ps/1672 =a (field_imm 1 p/1671))
                           (before Gbnf_parser__Parameters.occurs_deep lib/parameters.ml(87):2621-2646
                             (after Gbnf_parser__Parameters.occurs_deep lib/parameters.ml(87):2621-2646
                               (apply (field_imm 33 (global Stdlib__List!))
                                 (after Gbnf_parser__Parameters.occurs_deep lib/parameters.ml(87):2633-2643
                                   (apply occurs/1656 x/1670))
                                 ps/1672))))
                        case tag 2:
                         (before Gbnf_parser__Parameters.occurs_deep lib/parameters.ml(89):2681-2693
                           (raise
                             (after Gbnf_parser__Parameters.occurs_deep lib/parameters.ml(89):2681-2693
                               (makeblock 0 (global Assert_failure/28!)
                                 [0: "lib/parameters.ml" 89 6])))))))))
              (letrec
                (equal/1674
                   (function x/1675 y/1676 : int
                     (funct-body Gbnf_parser__Parameters.equal lib/parameters.ml(93)<ghost>:2729-3013
                       (before Gbnf_parser__Parameters.equal lib/parameters.ml(94):2737-3013
                         (catch
                           (switch* x/1675
                            case tag 0:
                             (let (x/1677 =a (field_imm 0 x/1675))
                               (switch* y/1676
                                case tag 0:
                                 (let (y/1678 =a (field_imm 0 y/1676))
                                   (before Gbnf_parser__Parameters.equal lib/parameters.ml(96):2801-2818
                                     (after Gbnf_parser__Parameters.equal lib/parameters.ml(96):2801-2818
                                       (caml_string_equal
                                         (field_imm 0 x/1677)
                                         (field_imm 0 y/1678)))))
                                case tag 1: (exit 3)
                                case tag 2: (exit 3)))
                            case tag 1:
                             (let
                               (p2/1680 =a (field_imm 1 x/1675)
                                p1/1679 =a (field_imm 0 x/1675))
                               (switch* y/1676
                                case tag 0: (exit 3)
                                case tag 1:
                                 (let
                                   (p2'/1682 =a (field_imm 1 y/1676)
                                    p1'/1681 =a (field_imm 0 y/1676))
                                   (before Gbnf_parser__Parameters.equal lib/parameters.ml(98):2883-2933
                                     (&&
                                       (after Gbnf_parser__Parameters.equal lib/parameters.ml(98):2883-2903
                                         (caml_string_equal
                                           (field_imm 0 p1/1679)
                                           (field_imm 0 p1'/1681)))
                                       (after Gbnf_parser__Parameters.equal lib/parameters.ml(98):2907-2933
                                         (apply
                                           (field_imm 34
                                             (global Stdlib__List!))
                                           equal/1674 p2/1680 p2'/1682)))))
                                case tag 2: (exit 3)))
                            case tag 2: (exit 3))
                          with (3)
                           (before Gbnf_parser__Parameters.equal lib/parameters.ml(101):3008-3013
                             0))))))
                (let
                  (hash/1683 =
                     (function param/1726 : int
                       (funct-body Gbnf_parser__Parameters.hash lib/parameters.ml(103):3026-3219
                         (catch
                           (switch* param/1726
                            case tag 0: (exit 5)
                            case tag 1: (exit 5)
                            case tag 2:
                             (before Gbnf_parser__Parameters.hash lib/parameters.ml(109):3207-3219
                               (raise
                                 (after Gbnf_parser__Parameters.hash lib/parameters.ml(109):3207-3219
                                   (makeblock 0 (global Assert_failure/28!)
                                     [0: "lib/parameters.ml" 109 6])))))
                          with (5)
                           (let
                             (x/2497 =a (field_imm 0 param/1726)
                              x/2524 = x/2497)
                             (before Gbnf_parser__Parameters.hash lib/parameters.ml(106):3087-3119
                               (after Gbnf_parser__Parameters.hash lib/parameters.ml(106):3087-3119
                                 (apply
                                   (field_imm 27 (global Stdlib__Hashtbl!))
                                   (after Gbnf_parser__Parameters.hash lib/parameters.ml(106):3100-3119
                                     (apply
                                       (field_imm 0
                                         (global Gbnf_parser__Positions!))
                                       x/2524)))))))))
                   position/1727 =
                     (function param/1731
                       (funct-body Gbnf_parser__Parameters.position lib/parameters.ml(111):3236-3374
                         (catch
                           (switch* param/1731
                            case tag 0: (exit 7)
                            case tag 1: (exit 7)
                            case tag 2:
                             (let (bs/1730 =a (field_imm 0 param/1731))
                               (before Gbnf_parser__Parameters.position lib/parameters.ml(116):3353-3374
                                 (after Gbnf_parser__Parameters.position lib/parameters.ml(116):3353-3374
                                   (apply
                                     (field_imm 1
                                       (global Gbnf_parser__Positions!))
                                     bs/1730)))))
                          with (7)
                           (let
                             (x/2501 =a (field_imm 0 param/1731)
                              x/2523 = x/2501)
                             (before Gbnf_parser__Parameters.position lib/parameters.ml(114):3297-3317
                               (after Gbnf_parser__Parameters.position lib/parameters.ml(114):3297-3317
                                 (apply
                                   (field_imm 1
                                     (global Gbnf_parser__Positions!))
                                   x/2523)))))))
                   with_pos/1732 =
                     (function p/1733
                       (funct-body Gbnf_parser__Parameters.with_pos lib/parameters.ml(118)<ghost>:3389-3428
                         (before Gbnf_parser__Parameters.with_pos lib/parameters.ml(119):3395-3428
                           (after Gbnf_parser__Parameters.with_pos lib/parameters.ml(119):3395-3428
                             (apply
                               (field_imm 3 (global Gbnf_parser__Positions!))
                               (after Gbnf_parser__Parameters.with_pos lib/parameters.ml(119):3414-3426
                                 (apply position/1727 p/1733))
                               p/1733))))))
                  (letrec
                    (print/1734
                       (function with_spaces/1735[int] param/1818
                         (funct-body Gbnf_parser__Parameters.print lib/parameters.ml(121)<ghost>:3444-3780
                           (catch
                             (switch* param/1818
                              case tag 0:
                               (let (x/2504 =a (field_imm 0 param/1818))
                                 (exit 8 x/2504))
                              case tag 1:
                               (let
                                 (x/2503 =a (field_imm 0 param/1818)
                                  *match*/2506 =a (field_imm 1 param/1818))
                                 (if *match*/2506
                                   (let
                                     (x/1738 =a x/2503
                                      ps/1739 =a (field_imm 1 param/1818))
                                     (before Gbnf_parser__Parameters.print lib/parameters.ml(126):3562-3733
                                       (let
                                         (separator/1740 =
                                            (if with_spaces/1735
                                              (before Gbnf_parser__Parameters.print lib/parameters.ml(126):3598-3602
                                                ", ")
                                              (before Gbnf_parser__Parameters.print lib/parameters.ml(126):3608-3611
                                                ",")))
                                         (before Gbnf_parser__Parameters.print lib/parameters.ml(127):3621-3733
                                           (after Gbnf_parser__Parameters.print lib/parameters.ml(127):3621-3733
                                             (apply
                                               (field_imm 3
                                                 (global Stdlib__Printf!))
                                               [0:
                                                [2:
                                                 0
                                                 [12: '(' [2: 0 [12: ')' 0]]]]
                                                "%s(%s)"]
                                               (field_imm 0 x/1738)
                                               (after Gbnf_parser__Parameters.print lib/parameters.ml(129):3669-3733
                                                 (apply
                                                   (field_imm 6
                                                     (global Gbnf_parser__Misc!))
                                                   (after Gbnf_parser__Parameters.print lib/parameters.ml(129):3700-3719
                                                     (apply print/1734
                                                       with_spaces/1735))
                                                   separator/1740 ps/1739))))))))
                                   (exit 8 x/2503)))
                              case tag 2:
                               (before Gbnf_parser__Parameters.print lib/parameters.ml(131):3768-3780
                                 (raise
                                   (after Gbnf_parser__Parameters.print lib/parameters.ml(131):3768-3780
                                     (makeblock 0 (global Assert_failure/28!)
                                       [0: "lib/parameters.ml" 131 6])))))
                            with (8 x/1736)
                             (before Gbnf_parser__Parameters.print lib/parameters.ml(124):3520-3527
                               (field_imm 0 x/1736))))))
                    (let
                      (*match*/2514 =
                         (after Gbnf_parser__Parameters lib/parameters.ml(131)<ghost>:3780-3780
                           (apply (field_imm 5 (global Ppx_inline_test_lib!))
                             "gbnf_parser"))
                       *match*/2512 =
                         (after Gbnf_parser__Parameters lib/parameters.ml(131)<ghost>:3780-3780
                           (apply
                             (field_imm 1
                               (field_imm 5 (global Expect_test_collector!)))
                             0))
                       *match*/2510 =
                         (after Gbnf_parser__Parameters lib/parameters.ml(131)<ghost>:3780-3780
                           (apply
                             (field_imm 1
                               (field_imm 0
                                 (global Ppx_bench_lib__Benchmark_accumulator!)))
                             0))
                       *match*/2508 =
                         (after Gbnf_parser__Parameters lib/parameters.ml(131)<ghost>:3780-3780
                           (apply
                             (field_imm 4 (global Ppx_module_timer_runtime!))
                             #"Gbnf_parser__Parameters")))
                      (pseudo <unknown location>
                        (makeblock 0 app/1204 unapp/1280 unvar/1310 map/1314
                          fold/1386 identifiers/1393 occurs/1656
                          occurs_shallow/1662 occurs_deep/1668 equal/1674
                          hash/1683 position/1727 with_pos/1732 print/1734)))))))))))))
