Done: 3% (6/189, 183 left) (jobs: 0)                                    Done: 18% (72/380, 308 left) (jobs: 0)                                      Hello, World!
State 0:
Lookahead token is now LID (0-4)
Shifting (LID) to state 3
State 3:
(1, 8, "::=")
Lookahead token is now COLONCOLONEQUAL (5-8)
Shifting (COLONCOLONEQUAL) to state 4
State 4:
"("
Lookahead token is now LPAREN (9-10)
Shifting (LPAREN) to state 10
State 10:
Lookahead token is now LID (10-18)
Reducing production list(NEWLINE) ->
State 13:
Shifting (LID) to state 14
State 14:
Lookahead token is now LID (19-25)
Reducing production term -> LID
("DEBUG:lid", ("question", (("", 1, 0, 10), ("", 1, 0, 18))))
("DEBUG:sterm/lid", ("question", (("", 1, 0, 10), ("", 1, 0, 18))))
("DEBUG:term/sterm", (("question", (("", 1, 0, 10), ("", 1, 0, 18)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("question", (("", 1, 0, 10), ("", 1, 0, 18))))))
State 24:
Reducing production concatenation -> factor
("DEBUG:concat2", Tag2 (Tag2 (Tag2 ((("question", (("", 1, 0, 10), ("", 1, 0, 18))))))))
State 25:
Shifting (LID) to state 14
State 14:
Lookahead token is now RPAREN (25-26)
Reducing production term -> LID
("DEBUG:lid", ("answer", (("", 1, 0, 19), ("", 1, 0, 25))))
("DEBUG:sterm/lid", ("answer", (("", 1, 0, 19), ("", 1, 0, 25))))
("DEBUG:term/sterm", (("answer", (("", 1, 0, 19), ("", 1, 0, 25)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("answer", (("", 1, 0, 19), ("", 1, 0, 25))))))
State 26:
Reducing production concatenation -> concatenation factor
("DEBUG:concat1", Tag2 (Tag2 (Tag2 (Tag2 ((("question", (("", 1, 0, 10), ("", 1, 0, 18)))))))))
State 25:
Reducing production alternation -> concatenation
("DEBUG:alt", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("question", (("", 1, 0, 10), ("", 1, 0, 18))))))))))
State 29:
Reducing production rhs -> alternation
("DEBUG:rhs", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("question", (("", 1, 0, 10), ("", 1, 0, 18)))))))))))
State 22:
Shifting (RPAREN) to state 23
State 23:
Lookahead token is now NEWLINE (26-27)
Reducing production term -> LPAREN list(NEWLINE) rhs RPAREN
("DEBUG:rhs", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("question", (("", 1, 0, 10), ("", 1, 0, 18))))))))))))
("DEBUG:cterm/group", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("question", (("", 1, 0, 10), ("", 1, 0, 18)))))))))))))
("DEBUG:term/cterms", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("question", (("", 1, 0, 10), ("", 1, 0, 18))))))))))))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("question", (("", 1, 0, 10), ("", 1, 0, 18)))))))))))))))
State 24:
Reducing production concatenation -> factor
("DEBUG:concat2", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("question", (("", 1, 0, 10), ("", 1, 0, 18)))))))))))))))))
State 25:
Reducing production alternation -> concatenation
("DEBUG:alt", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("question", (("", 1, 0, 10), ("", 1, 0, 18))))))))))))))))))
State 29:
Reducing production rhs -> alternation
("DEBUG:rhs", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("question", (("", 1, 0, 10), ("", 1, 0, 18)))))))))))))))))))
State 33:
Reducing production rule -> LID COLONCOLONEQUAL rhs
("DEBUG:rule", ("root", (("", 1, 0, 0), ("", 1, 0, 4))), Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("question", (("", 1, 0, 10), ("", 1, 0, 18))))))))))))))))))))
State 41:
Reducing production rules -> rule
("DEBUG:OLDRULE", ("root", [(("", 1, 0, 0), ("", 1, 0, 4))], 0))
State 34:
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now NEWLINE (27-28)
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now NEWLINE (28-117)
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now LID (117-125)
Reducing production nonempty_list(NEWLINE) -> NEWLINE
State 2:
Reducing production nonempty_list(NEWLINE) -> NEWLINE nonempty_list(NEWLINE)
State 2:
Reducing production nonempty_list(NEWLINE) -> NEWLINE nonempty_list(NEWLINE)
State 37:
Shifting (LID) to state 3
State 3:
(1, 129, "::=")
Lookahead token is now COLONCOLONEQUAL (126-129)
Shifting (COLONCOLONEQUAL) to state 4
State 4:
Lookahead token is now LID (130-136)
Shifting (LID) to state 14
State 14:
("DEBUG2:rs", 46)
("DEBUG:rs", "\\)")
Lookahead token is now QID (141-142)
Reducing production term -> LID
("DEBUG:lid", ("number", (("", 1, 0, 130), ("", 1, 0, 136))))
("DEBUG:sterm/lid", ("number", (("", 1, 0, 130), ("", 1, 0, 136))))
("DEBUG:term/sterm", (("number", (("", 1, 0, 130), ("", 1, 0, 136)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("number", (("", 1, 0, 130), ("", 1, 0, 136))))))
State 24:
Reducing production concatenation -> factor
("DEBUG:concat2", Tag2 (Tag2 (Tag2 ((("number", (("", 1, 0, 130), ("", 1, 0, 136))))))))
State 25:
Shifting (QID) to state 9
State 9:
Lookahead token is now LID (143-145)
Reducing production term -> QID
("DEBUG:quid", ("\".\\)\"", (("", 1, 0, 137), ("", 1, 0, 142))))
("DEBUG:sterm/quid", ("\".\\)\"", (("", 1, 0, 137), ("", 1, 0, 142))))
("DEBUG:term/sterm", (("\".\\)\"", (("", 1, 0, 137), ("", 1, 0, 142)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("\".\\)\"", (("", 1, 0, 137), ("", 1, 0, 142))))))
State 26:
Reducing production concatenation -> concatenation factor
("DEBUG:concat1", Tag2 (Tag2 (Tag2 (Tag2 ((("number", (("", 1, 0, 130), ("", 1, 0, 136)))))))))
State 25:
Shifting (LID) to state 14
State 14:
Lookahead token is now LID (146-153)
Reducing production term -> LID
("DEBUG:lid", ("ws", (("", 1, 0, 143), ("", 1, 0, 145))))
("DEBUG:sterm/lid", ("ws", (("", 1, 0, 143), ("", 1, 0, 145))))
("DEBUG:term/sterm", (("ws", (("", 1, 0, 143), ("", 1, 0, 145)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("ws", (("", 1, 0, 143), ("", 1, 0, 145))))))
State 26:
Reducing production concatenation -> concatenation factor
("DEBUG:concat1", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("number", (("", 1, 0, 130), ("", 1, 0, 136))))))))))
State 25:
Shifting (LID) to state 14
State 14:
Lookahead token is now LID (154-172)
Reducing production term -> LID
("DEBUG:lid", ("content", (("", 1, 0, 146), ("", 1, 0, 153))))
("DEBUG:sterm/lid", ("content", (("", 1, 0, 146), ("", 1, 0, 153))))
("DEBUG:term/sterm", (("content", (("", 1, 0, 146), ("", 1, 0, 153)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("content", (("", 1, 0, 146), ("", 1, 0, 153))))))
State 26:
Reducing production concatenation -> concatenation factor
("DEBUG:concat1", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("number", (("", 1, 0, 130), ("", 1, 0, 136)))))))))))
State 25:
Shifting (LID) to state 14
State 14:
Lookahead token is now LID (173-175)
Reducing production term -> LID
("DEBUG:lid", ("ending_punctuation", (("", 1, 0, 154), ("", 1, 0, 172))))
("DEBUG:sterm/lid", ("ending_punctuation", (("", 1, 0, 154), ("", 1, 0, 172))))
("DEBUG:term/sterm", (("ending_punctuation", (("", 1, 0, 154), ("", 1, 0, 172)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("ending_punctuation", (("", 1, 0, 154), ("", 1, 0, 172))))))
State 26:
Reducing production concatenation -> concatenation factor
("DEBUG:concat1", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("number", (("", 1, 0, 130), ("", 1, 0, 136))))))))))))
State 25:
Shifting (LID) to state 14
State 14:
Lookahead token is now NEWLINE (175-176)
Reducing production term -> LID
("DEBUG:lid", ("ws", (("", 1, 0, 173), ("", 1, 0, 175))))
("DEBUG:sterm/lid", ("ws", (("", 1, 0, 173), ("", 1, 0, 175))))
("DEBUG:term/sterm", (("ws", (("", 1, 0, 173), ("", 1, 0, 175)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("ws", (("", 1, 0, 173), ("", 1, 0, 175))))))
State 26:
Reducing production concatenation -> concatenation factor
("DEBUG:concat1", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("number", (("", 1, 0, 130), ("", 1, 0, 136)))))))))))))
State 25:
Reducing production alternation -> concatenation
("DEBUG:alt", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("number", (("", 1, 0, 130), ("", 1, 0, 136))))))))))))))
State 29:
Reducing production rhs -> alternation
("DEBUG:rhs", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("number", (("", 1, 0, 130), ("", 1, 0, 136)))))))))))))))
State 33:
Reducing production rule -> LID COLONCOLONEQUAL rhs
("DEBUG:rule", ("question", (("", 1, 0, 117), ("", 1, 0, 125))), Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("number", (("", 1, 0, 130), ("", 1, 0, 136))))))))))))))))
State 38:
Reducing production rules -> rules nonempty_list(NEWLINE) rule
("DEBUG:OLDRULE1", ("question", [(("", 1, 0, 117), ("", 1, 0, 125))], 0))
State 34:
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now NEWLINE (176-177)
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now NEWLINE (177-207)
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now LID (207-213)
Reducing production nonempty_list(NEWLINE) -> NEWLINE
State 2:
Reducing production nonempty_list(NEWLINE) -> NEWLINE nonempty_list(NEWLINE)
State 2:
Reducing production nonempty_list(NEWLINE) -> NEWLINE nonempty_list(NEWLINE)
State 37:
Shifting (LID) to state 3
State 3:
(1, 217, "::=")
Lookahead token is now COLONCOLONEQUAL (214-217)
Shifting (COLONCOLONEQUAL) to state 4
State 4:
("DEBUG2:rs", 65)
("DEBUG2:rs", 110)
("DEBUG2:rs", 115)
("DEBUG2:rs", 119)
("DEBUG2:rs", 101)
("DEBUG2:rs", 114)
("DEBUG2:rs", 58)
("DEBUG2:rs", 32)
Lookahead token is now QID (227-228)
Shifting (QID) to state 9
State 9:
Lookahead token is now LID (229-236)
Reducing production term -> QID
("DEBUG:quid", ("\"Answer: \"", (("", 1, 0, 218), ("", 1, 0, 228))))
("DEBUG:sterm/quid", ("\"Answer: \"", (("", 1, 0, 218), ("", 1, 0, 228))))
("DEBUG:term/sterm", (("\"Answer: \"", (("", 1, 0, 218), ("", 1, 0, 228)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("\"Answer: \"", (("", 1, 0, 218), ("", 1, 0, 228))))))
State 24:
Reducing production concatenation -> factor
("DEBUG:concat2", Tag2 (Tag2 (Tag2 ((("\"Answer: \"", (("", 1, 0, 218), ("", 1, 0, 228))))))))
State 25:
Shifting (LID) to state 14
State 14:
("DEBUG2:rs", 46)
Lookahead token is now QID (239-240)
Reducing production term -> LID
("DEBUG:lid", ("content", (("", 1, 0, 229), ("", 1, 0, 236))))
("DEBUG:sterm/lid", ("content", (("", 1, 0, 229), ("", 1, 0, 236))))
("DEBUG:term/sterm", (("content", (("", 1, 0, 229), ("", 1, 0, 236)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("content", (("", 1, 0, 229), ("", 1, 0, 236))))))
State 26:
Reducing production concatenation -> concatenation factor
("DEBUG:concat1", Tag2 (Tag2 (Tag2 (Tag2 ((("\"Answer: \"", (("", 1, 0, 218), ("", 1, 0, 228)))))))))
State 25:
Shifting (QID) to state 9
State 9:
Lookahead token is now NEWLINE (240-241)
Reducing production term -> QID
("DEBUG:quid", ("\".\"", (("", 1, 0, 237), ("", 1, 0, 240))))
("DEBUG:sterm/quid", ("\".\"", (("", 1, 0, 237), ("", 1, 0, 240))))
("DEBUG:term/sterm", (("\".\"", (("", 1, 0, 237), ("", 1, 0, 240)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("\".\"", (("", 1, 0, 237), ("", 1, 0, 240))))))
State 26:
Reducing production concatenation -> concatenation factor
("DEBUG:concat1", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"Answer: \"", (("", 1, 0, 218), ("", 1, 0, 228))))))))))
State 25:
Reducing production alternation -> concatenation
("DEBUG:alt", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"Answer: \"", (("", 1, 0, 218), ("", 1, 0, 228)))))))))))
State 29:
Reducing production rhs -> alternation
("DEBUG:rhs", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"Answer: \"", (("", 1, 0, 218), ("", 1, 0, 228))))))))))))
State 33:
Reducing production rule -> LID COLONCOLONEQUAL rhs
("DEBUG:rule", ("answer", (("", 1, 0, 207), ("", 1, 0, 213))), Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"Answer: \"", (("", 1, 0, 218), ("", 1, 0, 228)))))))))))))
State 38:
Reducing production rules -> rules nonempty_list(NEWLINE) rule
("DEBUG:OLDRULE1", ("answer", [(("", 1, 0, 207), ("", 1, 0, 213))], 0))
State 34:
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now NEWLINE (241-242)
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now NEWLINE (242-326)
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now LID (326-332)
Reducing production nonempty_list(NEWLINE) -> NEWLINE
State 2:
Reducing production nonempty_list(NEWLINE) -> NEWLINE nonempty_list(NEWLINE)
State 2:
Reducing production nonempty_list(NEWLINE) -> NEWLINE nonempty_list(NEWLINE)
State 37:
Shifting (LID) to state 3
State 3:
(1, 336, "::=")
Lookahead token is now COLONCOLONEQUAL (333-336)
Shifting (COLONCOLONEQUAL) to state 4
State 4:
"["
"1"
"-"
"9"
"]"
Lookahead token is now REGEX (341-342)
Shifting (REGEX) to state 8
State 8:
"["
"0"
"-"
"9"
"]"
Lookahead token is now REGEX (347-348)
Reducing production term -> REGEX
("DEBUG:class", ("\"TODO\"", (("", 1, 0, 337), ("", 1, 0, 342))))
("DEBUG:cterm/class", (("\"TODO\"", (("", 1, 0, 337), ("", 1, 0, 342)))))
("DEBUG:term/cterms", Tag2 ((("\"TODO\"", (("", 1, 0, 337), ("", 1, 0, 342))))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 337), ("", 1, 0, 342)))))))
State 24:
Reducing production concatenation -> factor
("DEBUG:concat2", Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 337), ("", 1, 0, 342)))))))))
State 25:
Shifting (REGEX) to state 8
State 8:
Lookahead token is now QUESTION (348-349)
Reducing production term -> REGEX
("DEBUG:class", ("\"TODO\"", (("", 1, 0, 343), ("", 1, 0, 348))))
("DEBUG:cterm/class", (("\"TODO\"", (("", 1, 0, 343), ("", 1, 0, 348)))))
("DEBUG:term/cterms", Tag2 ((("\"TODO\"", (("", 1, 0, 343), ("", 1, 0, 348))))))
State 18:
Shifting (QUESTION) to state 20
State 20:
"["
"0"
"-"
"9"
"]"
Lookahead token is now REGEX (354-355)
Reducing production factor -> term QUESTION
["DEBUG:quest"]
("DEBUG:quest", 1)
("DEBUG:termfactor", Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 343), ("", 1, 0, 348)))))))
State 26:
Reducing production concatenation -> concatenation factor
("DEBUG:concat1", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 337), ("", 1, 0, 342))))))))))
State 25:
Shifting (REGEX) to state 8
State 8:
Lookahead token is now QUESTION (355-356)
Reducing production term -> REGEX
("DEBUG:class", ("\"TODO\"", (("", 1, 0, 350), ("", 1, 0, 355))))
("DEBUG:cterm/class", (("\"TODO\"", (("", 1, 0, 350), ("", 1, 0, 355)))))
("DEBUG:term/cterms", Tag2 ((("\"TODO\"", (("", 1, 0, 350), ("", 1, 0, 355))))))
State 18:
Shifting (QUESTION) to state 20
State 20:
Lookahead token is now NEWLINE (356-357)
Reducing production factor -> term QUESTION
["DEBUG:quest"]
("DEBUG:quest", 1)
("DEBUG:termfactor", Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 350), ("", 1, 0, 355)))))))
State 26:
Reducing production concatenation -> concatenation factor
("DEBUG:concat1", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 337), ("", 1, 0, 342)))))))))))
State 25:
Reducing production alternation -> concatenation
("DEBUG:alt", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 337), ("", 1, 0, 342))))))))))))
State 29:
Reducing production rhs -> alternation
("DEBUG:rhs", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 337), ("", 1, 0, 342)))))))))))))
State 33:
Reducing production rule -> LID COLONCOLONEQUAL rhs
("DEBUG:rule", ("number", (("", 1, 0, 326), ("", 1, 0, 332))), Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 337), ("", 1, 0, 342))))))))))))))
State 38:
Reducing production rules -> rules nonempty_list(NEWLINE) rule
("DEBUG:OLDRULE1", ("number", [(("", 1, 0, 326), ("", 1, 0, 332))], 0))
State 34:
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now NEWLINE (357-358)
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now NEWLINE (358-432)
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now NEWLINE (432-538)
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now LID (538-545)
Reducing production nonempty_list(NEWLINE) -> NEWLINE
State 2:
Reducing production nonempty_list(NEWLINE) -> NEWLINE nonempty_list(NEWLINE)
State 2:
Reducing production nonempty_list(NEWLINE) -> NEWLINE nonempty_list(NEWLINE)
State 2:
Reducing production nonempty_list(NEWLINE) -> NEWLINE nonempty_list(NEWLINE)
State 37:
Shifting (LID) to state 3
State 3:
(1, 549, "::=")
Lookahead token is now COLONCOLONEQUAL (546-549)
Shifting (COLONCOLONEQUAL) to state 4
State 4:
"["
"^"
"\\"
"n"
"]"
Lookahead token is now REGEX (554-555)
Shifting (REGEX) to state 8
State 8:
Lookahead token is now PLUS (555-556)
Reducing production term -> REGEX
("DEBUG:class", ("\"TODO\"", (("", 1, 0, 550), ("", 1, 0, 555))))
("DEBUG:cterm/class", (("\"TODO\"", (("", 1, 0, 550), ("", 1, 0, 555)))))
("DEBUG:term/cterms", Tag2 ((("\"TODO\"", (("", 1, 0, 550), ("", 1, 0, 555))))))
State 18:
Shifting (PLUS) to state 21
State 21:
Lookahead token is now NEWLINE (556-557)
Reducing production factor -> term PLUS
["DEBUG:plus"]
("DEBUG:mod", 2)
("DEBUG:termfactor", Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 550), ("", 1, 0, 555)))))))
State 24:
Reducing production concatenation -> factor
("DEBUG:concat2", Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 550), ("", 1, 0, 555)))))))))
State 25:
Reducing production alternation -> concatenation
("DEBUG:alt", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 550), ("", 1, 0, 555))))))))))
State 29:
Reducing production rhs -> alternation
("DEBUG:rhs", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 550), ("", 1, 0, 555)))))))))))
State 33:
Reducing production rule -> LID COLONCOLONEQUAL rhs
("DEBUG:rule", ("content", (("", 1, 0, 538), ("", 1, 0, 545))), Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 550), ("", 1, 0, 555))))))))))))
State 38:
Reducing production rules -> rules nonempty_list(NEWLINE) rule
("DEBUG:OLDRULE1", ("content", [(("", 1, 0, 538), ("", 1, 0, 545))], 0))
State 34:
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now NEWLINE (557-558)
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now NEWLINE (558-616)
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now LID (616-634)
Reducing production nonempty_list(NEWLINE) -> NEWLINE
State 2:
Reducing production nonempty_list(NEWLINE) -> NEWLINE nonempty_list(NEWLINE)
State 2:
Reducing production nonempty_list(NEWLINE) -> NEWLINE nonempty_list(NEWLINE)
State 37:
Shifting (LID) to state 3
State 3:
(1, 638, "::=")
Lookahead token is now COLONCOLONEQUAL (635-638)
Shifting (COLONCOLONEQUAL) to state 4
State 4:
"["
"?"
"."
"!"
"]"
Lookahead token is now REGEX (643-644)
Shifting (REGEX) to state 8
State 8:
Lookahead token is now NEWLINE (644-645)
Reducing production term -> REGEX
("DEBUG:class", ("\"TODO\"", (("", 1, 0, 639), ("", 1, 0, 644))))
("DEBUG:cterm/class", (("\"TODO\"", (("", 1, 0, 639), ("", 1, 0, 644)))))
("DEBUG:term/cterms", Tag2 ((("\"TODO\"", (("", 1, 0, 639), ("", 1, 0, 644))))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 639), ("", 1, 0, 644)))))))
State 24:
Reducing production concatenation -> factor
("DEBUG:concat2", Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 639), ("", 1, 0, 644)))))))))
State 25:
Reducing production alternation -> concatenation
("DEBUG:alt", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 639), ("", 1, 0, 644))))))))))
State 29:
Reducing production rhs -> alternation
("DEBUG:rhs", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 639), ("", 1, 0, 644)))))))))))
State 33:
Reducing production rule -> LID COLONCOLONEQUAL rhs
("DEBUG:rule", ("ending_punctuation", (("", 1, 0, 616), ("", 1, 0, 634))), Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 639), ("", 1, 0, 644))))))))))))
State 38:
Reducing production rules -> rules nonempty_list(NEWLINE) rule
("DEBUG:OLDRULE1", ("ending_punctuation", [(("", 1, 0, 616), ("", 1, 0, 634))], 0))
State 34:
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now NEWLINE (645-646)
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now NEWLINE (646-712)
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now LID (712-714)
Reducing production nonempty_list(NEWLINE) -> NEWLINE
State 2:
Reducing production nonempty_list(NEWLINE) -> NEWLINE nonempty_list(NEWLINE)
State 2:
Reducing production nonempty_list(NEWLINE) -> NEWLINE nonempty_list(NEWLINE)
State 37:
Shifting (LID) to state 3
State 3:
(1, 718, "::=")
Lookahead token is now COLONCOLONEQUAL (715-718)
Shifting (COLONCOLONEQUAL) to state 4
State 4:
"["
" "
"\\"
"t"
"\\"
"n"
"]"
Lookahead token is now REGEX (725-726)
Shifting (REGEX) to state 8
State 8:
Lookahead token is now STAR (726-727)
Reducing production term -> REGEX
("DEBUG:class", ("\"TODO\"", (("", 1, 0, 719), ("", 1, 0, 726))))
("DEBUG:cterm/class", (("\"TODO\"", (("", 1, 0, 719), ("", 1, 0, 726)))))
("DEBUG:term/cterms", Tag2 ((("\"TODO\"", (("", 1, 0, 719), ("", 1, 0, 726))))))
State 18:
Shifting (STAR) to state 19
State 19:
Lookahead token is now EOF (727-727)
Reducing production factor -> term STAR
["DEBUG:star"]
("DEBUG:termfactor", Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 719), ("", 1, 0, 726)))))))
State 24:
Reducing production concatenation -> factor
("DEBUG:concat2", Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 719), ("", 1, 0, 726)))))))))
State 25:
Reducing production alternation -> concatenation
("DEBUG:alt", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 719), ("", 1, 0, 726))))))))))
State 29:
Reducing production rhs -> alternation
("DEBUG:rhs", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 719), ("", 1, 0, 726)))))))))))
State 33:
Reducing production rule -> LID COLONCOLONEQUAL rhs
("DEBUG:rule", ("ws", (("", 1, 0, 712), ("", 1, 0, 714))), Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 719), ("", 1, 0, 726))))))))))))
State 38:
Reducing production rules -> rules nonempty_list(NEWLINE) rule
("DEBUG:OLDRULE1", ("ws", [(("", 1, 0, 712), ("", 1, 0, 714))], 0))
State 34:
Reducing production list(NEWLINE) ->
State 39:
Shifting (EOF) to state 40
State 40:
Reducing production postlude -> list(NEWLINE) EOF
"DEBUG:DONE"
State 36:
Reducing production grammar -> rules postlude
("DEBUG:grammar", 0, 0)
State 44:
Accepting
[""]
0
