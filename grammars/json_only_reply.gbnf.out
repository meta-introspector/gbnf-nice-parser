Done: 57% (4/7, 3 left) (jobs: 0)                                 Done: 18% (72/380, 308 left) (jobs: 0)                                      Hello, World!
State 0:
Lookahead token is now LID (0-4)
Shifting (LID) to state 3
State 3:
(1, 11, "::=")
Lookahead token is now COLONCOLONEQUAL (8-11)
Shifting (COLONCOLONEQUAL) to state 4
State 4:
Lookahead token is now LID (12-27)
Shifting (LID) to state 14
State 14:
Lookahead token is now NEWLINE (27-28)
Reducing production term -> LID
("DEBUG:lid", ("restricted-json", (("", 1, 0, 12), ("", 1, 0, 27))))
("DEBUG:sterm/lid", ("restricted-json", (("", 1, 0, 12), ("", 1, 0, 27))))
("DEBUG:term/sterm", (("restricted-json", (("", 1, 0, 12), ("", 1, 0, 27)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("restricted-json", (("", 1, 0, 12), ("", 1, 0, 27))))))
State 24:
Reducing production concatenation -> factor
("DEBUG:concat2", Tag2 (Tag2 (Tag2 ((("restricted-json", (("", 1, 0, 12), ("", 1, 0, 27))))))))
State 25:
Reducing production alternation -> concatenation
("DEBUG:alt", Tag2 (Tag2 (Tag2 (Tag2 ((("restricted-json", (("", 1, 0, 12), ("", 1, 0, 27)))))))))
State 29:
Reducing production rhs -> alternation
("DEBUG:rhs", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("restricted-json", (("", 1, 0, 12), ("", 1, 0, 27))))))))))
State 33:
Reducing production rule -> LID COLONCOLONEQUAL rhs
("DEBUG:rule", ("root", (("", 1, 0, 0), ("", 1, 0, 4))), Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("restricted-json", (("", 1, 0, 12), ("", 1, 0, 27)))))))))))
State 41:
Reducing production rules -> rule
("DEBUG:OLDRULE", ("root", [(("", 1, 0, 0), ("", 1, 0, 4))], 0))
State 34:
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now NEWLINE (28-29)
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now LID (29-44)
Reducing production nonempty_list(NEWLINE) -> NEWLINE
State 2:
Reducing production nonempty_list(NEWLINE) -> NEWLINE nonempty_list(NEWLINE)
State 37:
Shifting (LID) to state 3
State 3:
(1, 48, "::=")
Lookahead token is now COLONCOLONEQUAL (45-48)
Shifting (COLONCOLONEQUAL) to state 4
State 4:
Lookahead token is now LID (49-60)
Shifting (LID) to state 14
State 14:
Lookahead token is now NEWLINE (60-61)
Reducing production term -> LID
("DEBUG:lid", ("object-list", (("", 1, 0, 49), ("", 1, 0, 60))))
("DEBUG:sterm/lid", ("object-list", (("", 1, 0, 49), ("", 1, 0, 60))))
("DEBUG:term/sterm", (("object-list", (("", 1, 0, 49), ("", 1, 0, 60)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("object-list", (("", 1, 0, 49), ("", 1, 0, 60))))))
State 24:
Reducing production concatenation -> factor
("DEBUG:concat2", Tag2 (Tag2 (Tag2 ((("object-list", (("", 1, 0, 49), ("", 1, 0, 60))))))))
State 25:
Reducing production alternation -> concatenation
("DEBUG:alt", Tag2 (Tag2 (Tag2 (Tag2 ((("object-list", (("", 1, 0, 49), ("", 1, 0, 60)))))))))
State 29:
Reducing production rhs -> alternation
("DEBUG:rhs", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("object-list", (("", 1, 0, 49), ("", 1, 0, 60))))))))))
State 33:
Reducing production rule -> LID COLONCOLONEQUAL rhs
("DEBUG:rule", ("restricted-json", (("", 1, 0, 29), ("", 1, 0, 44))), Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("object-list", (("", 1, 0, 49), ("", 1, 0, 60)))))))))))
State 38:
Reducing production rules -> rules nonempty_list(NEWLINE) rule
("DEBUG:OLDRULE1", ("restricted-json", [(("", 1, 0, 29), ("", 1, 0, 44))], 0))
State 34:
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now NEWLINE (61-62)
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now LID (62-73)
Reducing production nonempty_list(NEWLINE) -> NEWLINE
State 2:
Reducing production nonempty_list(NEWLINE) -> NEWLINE nonempty_list(NEWLINE)
State 37:
Shifting (LID) to state 3
State 3:
(1, 77, "::=")
Lookahead token is now COLONCOLONEQUAL (74-77)
Shifting (COLONCOLONEQUAL) to state 4
State 4:
Lookahead token is now LID (78-84)
Shifting (LID) to state 14
State 14:
Lookahead token is now NEWLINE (85-86)
Reducing production term -> LID
("DEBUG:lid", ("object", (("", 1, 0, 78), ("", 1, 0, 84))))
("DEBUG:sterm/lid", ("object", (("", 1, 0, 78), ("", 1, 0, 84))))
("DEBUG:term/sterm", (("object", (("", 1, 0, 78), ("", 1, 0, 84)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("object", (("", 1, 0, 78), ("", 1, 0, 84))))))
State 24:
Reducing production concatenation -> factor
("DEBUG:concat2", Tag2 (Tag2 (Tag2 ((("object", (("", 1, 0, 78), ("", 1, 0, 84))))))))
State 25:
Reducing production alternation -> concatenation
("DEBUG:alt", Tag2 (Tag2 (Tag2 (Tag2 ((("object", (("", 1, 0, 78), ("", 1, 0, 84)))))))))
State 29:
Reducing production rhs -> alternation
("DEBUG:rhs", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("object", (("", 1, 0, 78), ("", 1, 0, 84))))))))))
State 33:
Reducing production rule -> LID COLONCOLONEQUAL rhs
("DEBUG:rule", ("object-list", (("", 1, 0, 62), ("", 1, 0, 73))), Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("object", (("", 1, 0, 78), ("", 1, 0, 84)))))))))))
State 38:
Reducing production rules -> rules nonempty_list(NEWLINE) rule
("DEBUG:OLDRULE1", ("object-list", [(("", 1, 0, 62), ("", 1, 0, 73))], 0))
State 34:
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now NEWLINE (86-87)
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now LID (87-93)
Reducing production nonempty_list(NEWLINE) -> NEWLINE
State 2:
Reducing production nonempty_list(NEWLINE) -> NEWLINE nonempty_list(NEWLINE)
State 37:
Shifting (LID) to state 3
State 3:
(1, 98, "::=")
Lookahead token is now COLONCOLONEQUAL (95-98)
Shifting (COLONCOLONEQUAL) to state 4
State 4:
("DEBUG2:rs", 123)
Lookahead token is now QID (101-102)
Shifting (QID) to state 9
State 9:
Lookahead token is now LID (103-105)
Reducing production term -> QID
("DEBUG:quid", ("\"{\"", (("", 1, 0, 99), ("", 1, 0, 102))))
("DEBUG:sterm/quid", ("\"{\"", (("", 1, 0, 99), ("", 1, 0, 102))))
("DEBUG:term/sterm", (("\"{\"", (("", 1, 0, 99), ("", 1, 0, 102)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("\"{\"", (("", 1, 0, 99), ("", 1, 0, 102))))))
State 24:
Reducing production concatenation -> factor
("DEBUG:concat2", Tag2 (Tag2 (Tag2 ((("\"{\"", (("", 1, 0, 99), ("", 1, 0, 102))))))))
State 25:
Shifting (LID) to state 14
State 14:
Lookahead token is now LID (106-115)
Reducing production term -> LID
("DEBUG:lid", ("ws", (("", 1, 0, 103), ("", 1, 0, 105))))
("DEBUG:sterm/lid", ("ws", (("", 1, 0, 103), ("", 1, 0, 105))))
("DEBUG:term/sterm", (("ws", (("", 1, 0, 103), ("", 1, 0, 105)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("ws", (("", 1, 0, 103), ("", 1, 0, 105))))))
State 26:
Reducing production concatenation -> concatenation factor
("DEBUG:concat1", Tag2 (Tag2 (Tag2 (Tag2 ((("\"{\"", (("", 1, 0, 99), ("", 1, 0, 102)))))))))
State 25:
Shifting (LID) to state 14
State 14:
("DEBUG2:rs", 58)
Lookahead token is now QID (118-119)
Reducing production term -> LID
("DEBUG:lid", ("reply-key", (("", 1, 0, 106), ("", 1, 0, 115))))
("DEBUG:sterm/lid", ("reply-key", (("", 1, 0, 106), ("", 1, 0, 115))))
("DEBUG:term/sterm", (("reply-key", (("", 1, 0, 106), ("", 1, 0, 115)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("reply-key", (("", 1, 0, 106), ("", 1, 0, 115))))))
State 26:
Reducing production concatenation -> concatenation factor
("DEBUG:concat1", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"{\"", (("", 1, 0, 99), ("", 1, 0, 102))))))))))
State 25:
Shifting (QID) to state 9
State 9:
Lookahead token is now LID (120-122)
Reducing production term -> QID
("DEBUG:quid", ("\":\"", (("", 1, 0, 116), ("", 1, 0, 119))))
("DEBUG:sterm/quid", ("\":\"", (("", 1, 0, 116), ("", 1, 0, 119))))
("DEBUG:term/sterm", (("\":\"", (("", 1, 0, 116), ("", 1, 0, 119)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("\":\"", (("", 1, 0, 116), ("", 1, 0, 119))))))
State 26:
Reducing production concatenation -> concatenation factor
("DEBUG:concat1", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"{\"", (("", 1, 0, 99), ("", 1, 0, 102)))))))))))
State 25:
Shifting (LID) to state 14
State 14:
Lookahead token is now LID (123-129)
Reducing production term -> LID
("DEBUG:lid", ("ws", (("", 1, 0, 120), ("", 1, 0, 122))))
("DEBUG:sterm/lid", ("ws", (("", 1, 0, 120), ("", 1, 0, 122))))
("DEBUG:term/sterm", (("ws", (("", 1, 0, 120), ("", 1, 0, 122)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("ws", (("", 1, 0, 120), ("", 1, 0, 122))))))
State 26:
Reducing production concatenation -> concatenation factor
("DEBUG:concat1", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"{\"", (("", 1, 0, 99), ("", 1, 0, 102))))))))))))
State 25:
Shifting (LID) to state 14
State 14:
Lookahead token is now LID (130-132)
Reducing production term -> LID
("DEBUG:lid", ("string", (("", 1, 0, 123), ("", 1, 0, 129))))
("DEBUG:sterm/lid", ("string", (("", 1, 0, 123), ("", 1, 0, 129))))
("DEBUG:term/sterm", (("string", (("", 1, 0, 123), ("", 1, 0, 129)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("string", (("", 1, 0, 123), ("", 1, 0, 129))))))
State 26:
Reducing production concatenation -> concatenation factor
("DEBUG:concat1", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"{\"", (("", 1, 0, 99), ("", 1, 0, 102)))))))))))))
State 25:
Shifting (LID) to state 14
State 14:
("DEBUG2:rs", 125)
Lookahead token is now QID (135-136)
Reducing production term -> LID
("DEBUG:lid", ("ws", (("", 1, 0, 130), ("", 1, 0, 132))))
("DEBUG:sterm/lid", ("ws", (("", 1, 0, 130), ("", 1, 0, 132))))
("DEBUG:term/sterm", (("ws", (("", 1, 0, 130), ("", 1, 0, 132)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("ws", (("", 1, 0, 130), ("", 1, 0, 132))))))
State 26:
Reducing production concatenation -> concatenation factor
("DEBUG:concat1", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"{\"", (("", 1, 0, 99), ("", 1, 0, 102))))))))))))))
State 25:
Shifting (QID) to state 9
State 9:
Lookahead token is now NEWLINE (136-137)
Reducing production term -> QID
("DEBUG:quid", ("\"}\"", (("", 1, 0, 133), ("", 1, 0, 136))))
("DEBUG:sterm/quid", ("\"}\"", (("", 1, 0, 133), ("", 1, 0, 136))))
("DEBUG:term/sterm", (("\"}\"", (("", 1, 0, 133), ("", 1, 0, 136)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("\"}\"", (("", 1, 0, 133), ("", 1, 0, 136))))))
State 26:
Reducing production concatenation -> concatenation factor
("DEBUG:concat1", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"{\"", (("", 1, 0, 99), ("", 1, 0, 102)))))))))))))))
State 25:
Reducing production alternation -> concatenation
("DEBUG:alt", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"{\"", (("", 1, 0, 99), ("", 1, 0, 102))))))))))))))))
State 29:
Reducing production rhs -> alternation
("DEBUG:rhs", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"{\"", (("", 1, 0, 99), ("", 1, 0, 102)))))))))))))))))
State 33:
Reducing production rule -> LID COLONCOLONEQUAL rhs
("DEBUG:rule", ("object", (("", 1, 0, 87), ("", 1, 0, 93))), Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"{\"", (("", 1, 0, 99), ("", 1, 0, 102))))))))))))))))))
State 38:
Reducing production rules -> rules nonempty_list(NEWLINE) rule
("DEBUG:OLDRULE1", ("object", [(("", 1, 0, 87), ("", 1, 0, 93))], 0))
State 34:
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now NEWLINE (137-138)
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now LID (138-147)
Reducing production nonempty_list(NEWLINE) -> NEWLINE
State 2:
Reducing production nonempty_list(NEWLINE) -> NEWLINE nonempty_list(NEWLINE)
State 37:
Shifting (LID) to state 3
State 3:
(1, 151, "::=")
Lookahead token is now COLONCOLONEQUAL (148-151)
Shifting (COLONCOLONEQUAL) to state 4
State 4:
("DEBUG:rs", "\\\"")
("DEBUG2:rs", 82)
("DEBUG2:rs", 101)
("DEBUG2:rs", 112)
("DEBUG2:rs", 108)
("DEBUG2:rs", 121)
("DEBUG:rs", "\\\"")
Lookahead token is now QID (162-163)
Shifting (QID) to state 9
State 9:
Lookahead token is now NEWLINE (163-164)
Reducing production term -> QID
("DEBUG:quid", ("\"\\\"Reply\\\"\"", (("", 1, 0, 152), ("", 1, 0, 163))))
("DEBUG:sterm/quid", ("\"\\\"Reply\\\"\"", (("", 1, 0, 152), ("", 1, 0, 163))))
("DEBUG:term/sterm", (("\"\\\"Reply\\\"\"", (("", 1, 0, 152), ("", 1, 0, 163)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("\"\\\"Reply\\\"\"", (("", 1, 0, 152), ("", 1, 0, 163))))))
State 24:
Reducing production concatenation -> factor
("DEBUG:concat2", Tag2 (Tag2 (Tag2 ((("\"\\\"Reply\\\"\"", (("", 1, 0, 152), ("", 1, 0, 163))))))))
State 25:
Reducing production alternation -> concatenation
("DEBUG:alt", Tag2 (Tag2 (Tag2 (Tag2 ((("\"\\\"Reply\\\"\"", (("", 1, 0, 152), ("", 1, 0, 163)))))))))
State 29:
Reducing production rhs -> alternation
("DEBUG:rhs", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"\\\"Reply\\\"\"", (("", 1, 0, 152), ("", 1, 0, 163))))))))))
State 33:
Reducing production rule -> LID COLONCOLONEQUAL rhs
("DEBUG:rule", ("reply-key", (("", 1, 0, 138), ("", 1, 0, 147))), Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"\\\"Reply\\\"\"", (("", 1, 0, 152), ("", 1, 0, 163)))))))))))
State 38:
Reducing production rules -> rules nonempty_list(NEWLINE) rule
("DEBUG:OLDRULE1", ("reply-key", [(("", 1, 0, 138), ("", 1, 0, 147))], 0))
State 34:
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now NEWLINE (164-165)
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now LID (165-171)
Reducing production nonempty_list(NEWLINE) -> NEWLINE
State 2:
Reducing production nonempty_list(NEWLINE) -> NEWLINE nonempty_list(NEWLINE)
State 37:
Shifting (LID) to state 3
State 3:
(1, 176, "::=")
Lookahead token is now COLONCOLONEQUAL (173-176)
Shifting (COLONCOLONEQUAL) to state 4
State 4:
("DEBUG:rs", "\\\"")
Lookahead token is now QID (180-181)
Shifting (QID) to state 9
State 9:
"("
Lookahead token is now LPAREN (182-183)
Reducing production term -> QID
("DEBUG:quid", ("\"\\\"\"", (("", 1, 0, 177), ("", 1, 0, 181))))
("DEBUG:sterm/quid", ("\"\\\"\"", (("", 1, 0, 177), ("", 1, 0, 181))))
("DEBUG:term/sterm", (("\"\\\"\"", (("", 1, 0, 177), ("", 1, 0, 181)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("\"\\\"\"", (("", 1, 0, 177), ("", 1, 0, 181))))))
State 24:
Reducing production concatenation -> factor
("DEBUG:concat2", Tag2 (Tag2 (Tag2 ((("\"\\\"\"", (("", 1, 0, 177), ("", 1, 0, 181))))))))
State 25:
Shifting (LPAREN) to state 10
State 10:
"["
"^"
"\""
"\\"
"\\]"
" "
"|"
" "
"\""
"\\"
"\\"
"\""
" "
"("
"["
"\""
"\\"
"\\"
"/"
"b"
"f"
"n"
"r"
"t"
"]"
Lookahead token is now REGEX (209-210)
Reducing production list(NEWLINE) ->
State 13:
Shifting (REGEX) to state 8
State 8:
Lookahead token is now BAR (211-212)
Reducing production term -> REGEX
("DEBUG:class", ("\"TODO\"", (("", 1, 0, 184), ("", 1, 0, 210))))
("DEBUG:cterm/class", (("\"TODO\"", (("", 1, 0, 184), ("", 1, 0, 210)))))
("DEBUG:term/cterms", Tag2 ((("\"TODO\"", (("", 1, 0, 184), ("", 1, 0, 210))))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 184), ("", 1, 0, 210)))))))
State 24:
Reducing production concatenation -> factor
("DEBUG:concat2", Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 184), ("", 1, 0, 210)))))))))
State 25:
Reducing production alternation -> concatenation
("DEBUG:alt", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 184), ("", 1, 0, 210))))))))))
State 29:
Shifting (BAR) to state 30
State 30:
("DEBUG2:rs", 117)
Lookahead token is now QID (215-216)
Reducing production list(NEWLINE) ->
State 31:
Shifting (QID) to state 9
State 9:
"["
"0"
"-"
"9"
"a"
"-"
"f"
"A"
"-"
"F"
"]"
Lookahead token is now REGEX (227-228)
Reducing production term -> QID
("DEBUG:quid", ("\"u\"", (("", 1, 0, 213), ("", 1, 0, 216))))
("DEBUG:sterm/quid", ("\"u\"", (("", 1, 0, 213), ("", 1, 0, 216))))
("DEBUG:term/sterm", (("\"u\"", (("", 1, 0, 213), ("", 1, 0, 216)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("\"u\"", (("", 1, 0, 213), ("", 1, 0, 216))))))
State 24:
Reducing production concatenation -> factor
("DEBUG:concat2", Tag2 (Tag2 (Tag2 ((("\"u\"", (("", 1, 0, 213), ("", 1, 0, 216))))))))
State 32:
Shifting (REGEX) to state 8
State 8:
"["
"0"
"-"
"9"
"a"
"-"
"f"
"A"
"-"
"F"
"]"
Lookahead token is now REGEX (239-240)
Reducing production term -> REGEX
("DEBUG:class", ("\"TODO\"", (("", 1, 0, 217), ("", 1, 0, 228))))
("DEBUG:cterm/class", (("\"TODO\"", (("", 1, 0, 217), ("", 1, 0, 228)))))
("DEBUG:term/cterms", Tag2 ((("\"TODO\"", (("", 1, 0, 217), ("", 1, 0, 228))))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 217), ("", 1, 0, 228)))))))
State 26:
Reducing production concatenation -> concatenation factor
("DEBUG:concat1", Tag2 (Tag2 (Tag2 (Tag2 ((("\"u\"", (("", 1, 0, 213), ("", 1, 0, 216)))))))))
State 32:
Shifting (REGEX) to state 8
State 8:
"["
"0"
"-"
"9"
"a"
"-"
"f"
"A"
"-"
"F"
"]"
Lookahead token is now REGEX (251-252)
Reducing production term -> REGEX
("DEBUG:class", ("\"TODO\"", (("", 1, 0, 229), ("", 1, 0, 240))))
("DEBUG:cterm/class", (("\"TODO\"", (("", 1, 0, 229), ("", 1, 0, 240)))))
("DEBUG:term/cterms", Tag2 ((("\"TODO\"", (("", 1, 0, 229), ("", 1, 0, 240))))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 229), ("", 1, 0, 240)))))))
State 26:
Reducing production concatenation -> concatenation factor
("DEBUG:concat1", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"u\"", (("", 1, 0, 213), ("", 1, 0, 216))))))))))
State 32:
Shifting (REGEX) to state 8
State 8:
"["
"0"
"-"
"9"
"a"
"-"
"f"
"A"
"-"
"F"
"]"
Lookahead token is now REGEX (263-264)
Reducing production term -> REGEX
("DEBUG:class", ("\"TODO\"", (("", 1, 0, 241), ("", 1, 0, 252))))
("DEBUG:cterm/class", (("\"TODO\"", (("", 1, 0, 241), ("", 1, 0, 252)))))
("DEBUG:term/cterms", Tag2 ((("\"TODO\"", (("", 1, 0, 241), ("", 1, 0, 252))))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 241), ("", 1, 0, 252)))))))
State 26:
Reducing production concatenation -> concatenation factor
("DEBUG:concat1", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"u\"", (("", 1, 0, 213), ("", 1, 0, 216)))))))))))
State 32:
Shifting (REGEX) to state 8
State 8:
Lookahead token is now RPAREN (264-265)
Reducing production term -> REGEX
("DEBUG:class", ("\"TODO\"", (("", 1, 0, 253), ("", 1, 0, 264))))
("DEBUG:cterm/class", (("\"TODO\"", (("", 1, 0, 253), ("", 1, 0, 264)))))
("DEBUG:term/cterms", Tag2 ((("\"TODO\"", (("", 1, 0, 253), ("", 1, 0, 264))))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 253), ("", 1, 0, 264)))))))
State 26:
Reducing production concatenation -> concatenation factor
("DEBUG:concat1", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"u\"", (("", 1, 0, 213), ("", 1, 0, 216))))))))))))
State 32:
Reducing production alternation -> alternation BAR list(NEWLINE) concatenation
State 29:
Reducing production rhs -> alternation
("DEBUG:rhs", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 184), ("", 1, 0, 210))))))))))))
State 22:
Shifting (RPAREN) to state 23
State 23:
Lookahead token is now STAR (265-266)
Reducing production term -> LPAREN list(NEWLINE) rhs RPAREN
("DEBUG:rhs", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 184), ("", 1, 0, 210)))))))))))))
("DEBUG:cterm/group", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 184), ("", 1, 0, 210))))))))))))))
("DEBUG:term/cterms", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 184), ("", 1, 0, 210)))))))))))))))
State 18:
Shifting (STAR) to state 19
State 19:
("DEBUG:rs", "\\\"")
Lookahead token is now QID (270-271)
Reducing production factor -> term STAR
["DEBUG:star"]
("DEBUG:termfactor", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 184), ("", 1, 0, 210))))))))))))))))
State 26:
Reducing production concatenation -> concatenation factor
("DEBUG:concat1", Tag2 (Tag2 (Tag2 (Tag2 ((("\"\\\"\"", (("", 1, 0, 177), ("", 1, 0, 181)))))))))
State 25:
Shifting (QID) to state 9
State 9:
Lookahead token is now NEWLINE (271-272)
Reducing production term -> QID
("DEBUG:quid", ("\"\\\"\"", (("", 1, 0, 267), ("", 1, 0, 271))))
("DEBUG:sterm/quid", ("\"\\\"\"", (("", 1, 0, 267), ("", 1, 0, 271))))
("DEBUG:term/sterm", (("\"\\\"\"", (("", 1, 0, 267), ("", 1, 0, 271)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("\"\\\"\"", (("", 1, 0, 267), ("", 1, 0, 271))))))
State 26:
Reducing production concatenation -> concatenation factor
("DEBUG:concat1", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"\\\"\"", (("", 1, 0, 177), ("", 1, 0, 181))))))))))
State 25:
Reducing production alternation -> concatenation
("DEBUG:alt", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"\\\"\"", (("", 1, 0, 177), ("", 1, 0, 181)))))))))))
State 29:
Reducing production rhs -> alternation
("DEBUG:rhs", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"\\\"\"", (("", 1, 0, 177), ("", 1, 0, 181))))))))))))
State 33:
Reducing production rule -> LID COLONCOLONEQUAL rhs
("DEBUG:rule", ("string", (("", 1, 0, 165), ("", 1, 0, 171))), Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"\\\"\"", (("", 1, 0, 177), ("", 1, 0, 181)))))))))))))
State 38:
Reducing production rules -> rules nonempty_list(NEWLINE) rule
("DEBUG:OLDRULE1", ("string", [(("", 1, 0, 165), ("", 1, 0, 171))], 0))
State 34:
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now NEWLINE (272-273)
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now LID (273-275)
Reducing production nonempty_list(NEWLINE) -> NEWLINE
State 2:
Reducing production nonempty_list(NEWLINE) -> NEWLINE nonempty_list(NEWLINE)
State 37:
Shifting (LID) to state 3
State 3:
(1, 284, "::=")
Lookahead token is now COLONCOLONEQUAL (281-284)
Shifting (COLONCOLONEQUAL) to state 4
State 4:
"["
" "
"\\"
"t"
"\\"
"n"
"\\"
"r"
"]"
Lookahead token is now REGEX (293-294)
Shifting (REGEX) to state 8
State 8:
Lookahead token is now STAR (294-295)
Reducing production term -> REGEX
("DEBUG:class", ("\"TODO\"", (("", 1, 0, 285), ("", 1, 0, 294))))
("DEBUG:cterm/class", (("\"TODO\"", (("", 1, 0, 285), ("", 1, 0, 294)))))
("DEBUG:term/cterms", Tag2 ((("\"TODO\"", (("", 1, 0, 285), ("", 1, 0, 294))))))
State 18:
Shifting (STAR) to state 19
State 19:
Lookahead token is now NEWLINE (295-296)
Reducing production factor -> term STAR
["DEBUG:star"]
("DEBUG:termfactor", Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 285), ("", 1, 0, 294)))))))
State 24:
Reducing production concatenation -> factor
("DEBUG:concat2", Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 285), ("", 1, 0, 294)))))))))
State 25:
Reducing production alternation -> concatenation
("DEBUG:alt", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 285), ("", 1, 0, 294))))))))))
State 29:
Reducing production rhs -> alternation
("DEBUG:rhs", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 285), ("", 1, 0, 294)))))))))))
State 33:
Reducing production rule -> LID COLONCOLONEQUAL rhs
("DEBUG:rule", ("ws", (("", 1, 0, 273), ("", 1, 0, 275))), Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 285), ("", 1, 0, 294))))))))))))
State 38:
Reducing production rules -> rules nonempty_list(NEWLINE) rule
("DEBUG:OLDRULE1", ("ws", [(("", 1, 0, 273), ("", 1, 0, 275))], 0))
State 34:
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now NEWLINE (296-297)
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now EOF (297-297)
Reducing production list(NEWLINE) ->
State 12:
Reducing production list(NEWLINE) -> NEWLINE list(NEWLINE)
State 12:
Reducing production list(NEWLINE) -> NEWLINE list(NEWLINE)
State 39:
Shifting (EOF) to state 40
State 40:
Reducing production postlude -> list(NEWLINE) EOF
"DEBUG:DONE"
State 36:
Reducing production grammar -> rules postlude
("DEBUG:grammar", Tag4 (("ws", [(("", 1, 0, 273), ("", 1, 0, 275))], 0)), 0)
State 44:
Accepting
[""]
0
