Done: 2% (9/366, 357 left) (jobs: 0)                                    Done: 18% (72/380, 308 left) (jobs: 0)                                      Hello, World!
State 0:
Lookahead token is now LID (0-4)
Shifting (LID) to state 3
State 3:
(1, 8, "::=")
Lookahead token is now COLONCOLONEQUAL (5-8)
Shifting (COLONCOLONEQUAL) to state 4
State 4:
Lookahead token is now LID (9-13)
Shifting (LID) to state 14
State 14:
Lookahead token is now PLUS (13-14)
Reducing production term -> LID
("DEBUG:lid", ("item", (("", 1, 0, 9), ("", 1, 0, 13))))
("DEBUG:sterm/lid", ("item", (("", 1, 0, 9), ("", 1, 0, 13))))
("DEBUG:term/sterm", (("item", (("", 1, 0, 9), ("", 1, 0, 13)))))
State 18:
Shifting (PLUS) to state 21
State 21:
Lookahead token is now NEWLINE (14-15)
Reducing production factor -> term PLUS
["DEBUG:plus"]
("DEBUG:mod", 2)
("DEBUG:termfactor", Tag2 ((("item", (("", 1, 0, 9), ("", 1, 0, 13))))))
State 24:
Reducing production concatenation -> factor
("DEBUG:concat2", Tag2 (Tag2 (Tag2 ((("item", (("", 1, 0, 9), ("", 1, 0, 13))))))))
State 25:
Reducing production alternation -> concatenation
("DEBUG:alt", Tag2 (Tag2 (Tag2 (Tag2 ((("item", (("", 1, 0, 9), ("", 1, 0, 13)))))))))
State 29:
Reducing production rhs -> alternation
("DEBUG:rhs", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("item", (("", 1, 0, 9), ("", 1, 0, 13))))))))))
State 33:
Reducing production rule -> LID COLONCOLONEQUAL rhs
("DEBUG:rule", ("root", (("", 1, 0, 0), ("", 1, 0, 4))), Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("item", (("", 1, 0, 9), ("", 1, 0, 13)))))))))))
State 41:
Reducing production rules -> rule
("DEBUG:OLDRULE", ("root", [(("", 1, 0, 0), ("", 1, 0, 4))], 0))
State 34:
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now NEWLINE (15-16)
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now NEWLINE (16-57)
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now LID (57-61)
Reducing production nonempty_list(NEWLINE) -> NEWLINE
State 2:
Reducing production nonempty_list(NEWLINE) -> NEWLINE nonempty_list(NEWLINE)
State 2:
Reducing production nonempty_list(NEWLINE) -> NEWLINE nonempty_list(NEWLINE)
State 37:
Shifting (LID) to state 3
State 3:
(1, 65, "::=")
Lookahead token is now COLONCOLONEQUAL (62-65)
Shifting (COLONCOLONEQUAL) to state 4
State 4:
("DEBUG2:rs", 45)
("DEBUG2:rs", 32)
Lookahead token is now QID (69-70)
Shifting (QID) to state 9
State 9:
"["
"^"
"\\"
"r"
"\\"
"n"
"\\"
"x"
"0"
"b"
"\\"
"x"
"0"
"c"
"\\"
"x"
"8"
"5"
"\\"
"u"
"2"
"0"
"2"
"8"
"\\"
"u"
"2"
"0"
"2"
"9"
"]"
Lookahead token is now REGEX (101-102)
Reducing production term -> QID
("DEBUG:quid", ("\"- \"", (("", 1, 0, 66), ("", 1, 0, 70))))
("DEBUG:sterm/quid", ("\"- \"", (("", 1, 0, 66), ("", 1, 0, 70))))
("DEBUG:term/sterm", (("\"- \"", (("", 1, 0, 66), ("", 1, 0, 70)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("\"- \"", (("", 1, 0, 66), ("", 1, 0, 70))))))
State 24:
Reducing production concatenation -> factor
("DEBUG:concat2", Tag2 (Tag2 (Tag2 ((("\"- \"", (("", 1, 0, 66), ("", 1, 0, 70))))))))
State 25:
Shifting (REGEX) to state 8
State 8:
Lookahead token is now PLUS (102-103)
Reducing production term -> REGEX
("DEBUG:class", ("\"TODO\"", (("", 1, 0, 71), ("", 1, 0, 102))))
("DEBUG:cterm/class", (("\"TODO\"", (("", 1, 0, 71), ("", 1, 0, 102)))))
("DEBUG:term/cterms", Tag2 ((("\"TODO\"", (("", 1, 0, 71), ("", 1, 0, 102))))))
State 18:
Shifting (PLUS) to state 21
State 21:
("DEBUG2:rs", 92)
("DEBUG2:rs", 110)
Lookahead token is now QID (107-108)
Reducing production factor -> term PLUS
["DEBUG:plus"]
("DEBUG:mod", 2)
("DEBUG:termfactor", Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 71), ("", 1, 0, 102)))))))
State 26:
Reducing production concatenation -> concatenation factor
("DEBUG:concat1", Tag2 (Tag2 (Tag2 (Tag2 ((("\"- \"", (("", 1, 0, 66), ("", 1, 0, 70)))))))))
State 25:
Shifting (QID) to state 9
State 9:
Lookahead token is now NEWLINE (108-109)
Reducing production term -> QID
("DEBUG:quid", ("\"\\n\"", (("", 1, 0, 104), ("", 1, 0, 108))))
("DEBUG:sterm/quid", ("\"\\n\"", (("", 1, 0, 104), ("", 1, 0, 108))))
("DEBUG:term/sterm", (("\"\\n\"", (("", 1, 0, 104), ("", 1, 0, 108)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("\"\\n\"", (("", 1, 0, 104), ("", 1, 0, 108))))))
State 26:
Reducing production concatenation -> concatenation factor
("DEBUG:concat1", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"- \"", (("", 1, 0, 66), ("", 1, 0, 70))))))))))
State 25:
Reducing production alternation -> concatenation
("DEBUG:alt", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"- \"", (("", 1, 0, 66), ("", 1, 0, 70)))))))))))
State 29:
Reducing production rhs -> alternation
("DEBUG:rhs", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"- \"", (("", 1, 0, 66), ("", 1, 0, 70))))))))))))
State 33:
Reducing production rule -> LID COLONCOLONEQUAL rhs
("DEBUG:rule", ("item", (("", 1, 0, 57), ("", 1, 0, 61))), Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"- \"", (("", 1, 0, 66), ("", 1, 0, 70)))))))))))))
State 38:
Reducing production rules -> rules nonempty_list(NEWLINE) rule
("DEBUG:OLDRULE1", ("item", [(("", 1, 0, 57), ("", 1, 0, 61))], 0))
State 34:
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now EOF (109-109)
Reducing production list(NEWLINE) ->
State 12:
Reducing production list(NEWLINE) -> NEWLINE list(NEWLINE)
State 39:
Shifting (EOF) to state 40
State 40:
Reducing production postlude -> list(NEWLINE) EOF
"DEBUG:DONE"
State 36:
Reducing production grammar -> rules postlude
("DEBUG:grammar", Tag4 (("item", [(("", 1, 0, 57), ("", 1, 0, 61))], 0)), 0)
State 44:
Accepting
[""]
0
