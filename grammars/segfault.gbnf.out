Done: 2% (9/366, 357 left) (jobs: 0)                                    Done: 18% (72/380, 308 left) (jobs: 0)                                      Hello, World!
State 0:
Lookahead token is now LID (0-4)
Shifting (LID) to state 3
State 3:
(1, 8, "::=")
Lookahead token is now COLONCOLONEQUAL (5-8)
Shifting (COLONCOLONEQUAL) to state 4
State 4:
Lookahead token is now LID (10-20)
Shifting (LID) to state 14
State 14:
Lookahead token is now NEWLINE (20-21)
Reducing production term -> LID
("DEBUG:lid", ("expression", (("", 1, 0, 10), ("", 1, 0, 20))))
("DEBUG:sterm/lid", ("expression", (("", 1, 0, 10), ("", 1, 0, 20))))
("DEBUG:term/sterm", (("expression", (("", 1, 0, 10), ("", 1, 0, 20)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("expression", (("", 1, 0, 10), ("", 1, 0, 20))))))
State 24:
Reducing production concatenation -> factor
("DEBUG:concat2", Tag2 (Tag2 (Tag2 ((("expression", (("", 1, 0, 10), ("", 1, 0, 20))))))))
State 25:
Reducing production alternation -> concatenation
("DEBUG:alt", Tag2 (Tag2 (Tag2 (Tag2 ((("expression", (("", 1, 0, 10), ("", 1, 0, 20)))))))))
State 29:
Reducing production rhs -> alternation
("DEBUG:rhs", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("expression", (("", 1, 0, 10), ("", 1, 0, 20))))))))))
State 33:
Reducing production rule -> LID COLONCOLONEQUAL rhs
("DEBUG:rule", ("root", (("", 1, 0, 0), ("", 1, 0, 4))), Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("expression", (("", 1, 0, 10), ("", 1, 0, 20)))))))))))
State 41:
Reducing production rules -> rule
("DEBUG:OLDRULE", ("root", [(("", 1, 0, 0), ("", 1, 0, 4))], 0))
State 34:
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now NEWLINE (21-22)
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now LID (22-32)
Reducing production nonempty_list(NEWLINE) -> NEWLINE
State 2:
Reducing production nonempty_list(NEWLINE) -> NEWLINE nonempty_list(NEWLINE)
State 37:
Shifting (LID) to state 3
State 3:
(1, 36, "::=")
Lookahead token is now COLONCOLONEQUAL (33-36)
Shifting (COLONCOLONEQUAL) to state 4
State 4:
"("
Lookahead token is now LPAREN (37-38)
Shifting (LPAREN) to state 10
State 10:
Lookahead token is now LID (38-45)
Reducing production list(NEWLINE) ->
State 13:
Shifting (LID) to state 14
State 14:
Lookahead token is now BAR (46-47)
Reducing production term -> LID
("DEBUG:lid", ("integer", (("", 1, 0, 38), ("", 1, 0, 45))))
("DEBUG:sterm/lid", ("integer", (("", 1, 0, 38), ("", 1, 0, 45))))
("DEBUG:term/sterm", (("integer", (("", 1, 0, 38), ("", 1, 0, 45)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("integer", (("", 1, 0, 38), ("", 1, 0, 45))))))
State 24:
Reducing production concatenation -> factor
("DEBUG:concat2", Tag2 (Tag2 (Tag2 ((("integer", (("", 1, 0, 38), ("", 1, 0, 45))))))))
State 25:
Reducing production alternation -> concatenation
("DEBUG:alt", Tag2 (Tag2 (Tag2 (Tag2 ((("integer", (("", 1, 0, 38), ("", 1, 0, 45)))))))))
State 29:
Shifting (BAR) to state 30
State 30:
Lookahead token is now LID (48-63)
Reducing production list(NEWLINE) ->
State 31:
Shifting (LID) to state 14
State 14:
Lookahead token is now RPAREN (63-64)
Reducing production term -> LID
("DEBUG:lid", ("binary-operator", (("", 1, 0, 48), ("", 1, 0, 63))))
("DEBUG:sterm/lid", ("binary-operator", (("", 1, 0, 48), ("", 1, 0, 63))))
("DEBUG:term/sterm", (("binary-operator", (("", 1, 0, 48), ("", 1, 0, 63)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("binary-operator", (("", 1, 0, 48), ("", 1, 0, 63))))))
State 24:
Reducing production concatenation -> factor
("DEBUG:concat2", Tag2 (Tag2 (Tag2 ((("binary-operator", (("", 1, 0, 48), ("", 1, 0, 63))))))))
State 32:
Reducing production alternation -> alternation BAR list(NEWLINE) concatenation
State 29:
Reducing production rhs -> alternation
("DEBUG:rhs", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("integer", (("", 1, 0, 38), ("", 1, 0, 45)))))))))))
State 22:
Shifting (RPAREN) to state 23
State 23:
Lookahead token is now NEWLINE (64-65)
Reducing production term -> LPAREN list(NEWLINE) rhs RPAREN
("DEBUG:rhs", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("integer", (("", 1, 0, 38), ("", 1, 0, 45))))))))))))
("DEBUG:cterm/group", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("integer", (("", 1, 0, 38), ("", 1, 0, 45)))))))))))))
("DEBUG:term/cterms", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("integer", (("", 1, 0, 38), ("", 1, 0, 45))))))))))))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("integer", (("", 1, 0, 38), ("", 1, 0, 45)))))))))))))))
State 24:
Reducing production concatenation -> factor
("DEBUG:concat2", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("integer", (("", 1, 0, 38), ("", 1, 0, 45)))))))))))))))))
State 25:
Reducing production alternation -> concatenation
("DEBUG:alt", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("integer", (("", 1, 0, 38), ("", 1, 0, 45))))))))))))))))))
State 29:
Reducing production rhs -> alternation
("DEBUG:rhs", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("integer", (("", 1, 0, 38), ("", 1, 0, 45)))))))))))))))))))
State 33:
Reducing production rule -> LID COLONCOLONEQUAL rhs
("DEBUG:rule", ("expression", (("", 1, 0, 22), ("", 1, 0, 32))), Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("integer", (("", 1, 0, 38), ("", 1, 0, 45))))))))))))))))))))
State 38:
Reducing production rules -> rules nonempty_list(NEWLINE) rule
("DEBUG:OLDRULE1", ("expression", [(("", 1, 0, 22), ("", 1, 0, 32))], 0))
State 34:
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now NEWLINE (65-66)
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now LID (66-73)
Reducing production nonempty_list(NEWLINE) -> NEWLINE
State 2:
Reducing production nonempty_list(NEWLINE) -> NEWLINE nonempty_list(NEWLINE)
State 37:
Shifting (LID) to state 3
State 3:
(1, 77, "::=")
Lookahead token is now COLONCOLONEQUAL (74-77)
Shifting (COLONCOLONEQUAL) to state 4
State 4:
"["
"0"
"-"
"9"
"]"
Lookahead token is now REGEX (83-84)
Shifting (REGEX) to state 8
State 8:
Lookahead token is now PLUS (84-85)
Reducing production term -> REGEX
("DEBUG:class", ("\"TODO\"", (("", 1, 0, 79), ("", 1, 0, 84))))
("DEBUG:cterm/class", (("\"TODO\"", (("", 1, 0, 79), ("", 1, 0, 84)))))
("DEBUG:term/cterms", Tag2 ((("\"TODO\"", (("", 1, 0, 79), ("", 1, 0, 84))))))
State 18:
Shifting (PLUS) to state 21
State 21:
Lookahead token is now NEWLINE (85-86)
Reducing production factor -> term PLUS
["DEBUG:plus"]
("DEBUG:mod", 2)
("DEBUG:termfactor", Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 79), ("", 1, 0, 84)))))))
State 24:
Reducing production concatenation -> factor
("DEBUG:concat2", Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 79), ("", 1, 0, 84)))))))))
State 25:
Reducing production alternation -> concatenation
("DEBUG:alt", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 79), ("", 1, 0, 84))))))))))
State 29:
Reducing production rhs -> alternation
("DEBUG:rhs", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 79), ("", 1, 0, 84)))))))))))
State 33:
Reducing production rule -> LID COLONCOLONEQUAL rhs
("DEBUG:rule", ("integer", (("", 1, 0, 66), ("", 1, 0, 73))), Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"TODO\"", (("", 1, 0, 79), ("", 1, 0, 84))))))))))))
State 38:
Reducing production rules -> rules nonempty_list(NEWLINE) rule
("DEBUG:OLDRULE1", ("integer", [(("", 1, 0, 66), ("", 1, 0, 73))], 0))
State 34:
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now NEWLINE (86-87)
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now LID (87-102)
Reducing production nonempty_list(NEWLINE) -> NEWLINE
State 2:
Reducing production nonempty_list(NEWLINE) -> NEWLINE nonempty_list(NEWLINE)
State 37:
Shifting (LID) to state 3
State 3:
(1, 106, "::=")
Lookahead token is now COLONCOLONEQUAL (103-106)
Shifting (COLONCOLONEQUAL) to state 4
State 4:
Lookahead token is now LID (108-118)
Shifting (LID) to state 14
State 14:
"("
Lookahead token is now LPAREN (120-121)
Reducing production term -> LID
("DEBUG:lid", ("expression", (("", 1, 0, 108), ("", 1, 0, 118))))
("DEBUG:sterm/lid", ("expression", (("", 1, 0, 108), ("", 1, 0, 118))))
("DEBUG:term/sterm", (("expression", (("", 1, 0, 108), ("", 1, 0, 118)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("expression", (("", 1, 0, 108), ("", 1, 0, 118))))))
State 24:
Reducing production concatenation -> factor
("DEBUG:concat2", Tag2 (Tag2 (Tag2 ((("expression", (("", 1, 0, 108), ("", 1, 0, 118))))))))
State 25:
Shifting (LPAREN) to state 10
State 10:
("DEBUG2:rs", 43)
Lookahead token is now QID (123-124)
Reducing production list(NEWLINE) ->
State 13:
Shifting (QID) to state 9
State 9:
Lookahead token is now BAR (126-127)
Reducing production term -> QID
("DEBUG:quid", ("\"+\"", (("", 1, 0, 121), ("", 1, 0, 124))))
("DEBUG:sterm/quid", ("\"+\"", (("", 1, 0, 121), ("", 1, 0, 124))))
("DEBUG:term/sterm", (("\"+\"", (("", 1, 0, 121), ("", 1, 0, 124)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("\"+\"", (("", 1, 0, 121), ("", 1, 0, 124))))))
State 24:
Reducing production concatenation -> factor
("DEBUG:concat2", Tag2 (Tag2 (Tag2 ((("\"+\"", (("", 1, 0, 121), ("", 1, 0, 124))))))))
State 25:
Reducing production alternation -> concatenation
("DEBUG:alt", Tag2 (Tag2 (Tag2 (Tag2 ((("\"+\"", (("", 1, 0, 121), ("", 1, 0, 124)))))))))
State 29:
Shifting (BAR) to state 30
State 30:
("DEBUG2:rs", 45)
Lookahead token is now QID (131-132)
Reducing production list(NEWLINE) ->
State 31:
Shifting (QID) to state 9
State 9:
Lookahead token is now RPAREN (132-133)
Reducing production term -> QID
("DEBUG:quid", ("\"-\"", (("", 1, 0, 129), ("", 1, 0, 132))))
("DEBUG:sterm/quid", ("\"-\"", (("", 1, 0, 129), ("", 1, 0, 132))))
("DEBUG:term/sterm", (("\"-\"", (("", 1, 0, 129), ("", 1, 0, 132)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("\"-\"", (("", 1, 0, 129), ("", 1, 0, 132))))))
State 24:
Reducing production concatenation -> factor
("DEBUG:concat2", Tag2 (Tag2 (Tag2 ((("\"-\"", (("", 1, 0, 129), ("", 1, 0, 132))))))))
State 32:
Reducing production alternation -> alternation BAR list(NEWLINE) concatenation
State 29:
Reducing production rhs -> alternation
("DEBUG:rhs", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"+\"", (("", 1, 0, 121), ("", 1, 0, 124)))))))))))
State 22:
Shifting (RPAREN) to state 23
State 23:
Lookahead token is now LID (135-145)
Reducing production term -> LPAREN list(NEWLINE) rhs RPAREN
("DEBUG:rhs", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"+\"", (("", 1, 0, 121), ("", 1, 0, 124))))))))))))
("DEBUG:cterm/group", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"+\"", (("", 1, 0, 121), ("", 1, 0, 124)))))))))))))
("DEBUG:term/cterms", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"+\"", (("", 1, 0, 121), ("", 1, 0, 124))))))))))))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("\"+\"", (("", 1, 0, 121), ("", 1, 0, 124)))))))))))))))
State 26:
Reducing production concatenation -> concatenation factor
("DEBUG:concat1", Tag2 (Tag2 (Tag2 (Tag2 ((("expression", (("", 1, 0, 108), ("", 1, 0, 118)))))))))
State 25:
Shifting (LID) to state 14
State 14:
Lookahead token is now NEWLINE (145-146)
Reducing production term -> LID
("DEBUG:lid", ("expression", (("", 1, 0, 135), ("", 1, 0, 145))))
("DEBUG:sterm/lid", ("expression", (("", 1, 0, 135), ("", 1, 0, 145))))
("DEBUG:term/sterm", (("expression", (("", 1, 0, 135), ("", 1, 0, 145)))))
State 18:
Reducing production factor -> term
("DEBUG:termfactor", Tag2 ((("expression", (("", 1, 0, 135), ("", 1, 0, 145))))))
State 26:
Reducing production concatenation -> concatenation factor
("DEBUG:concat1", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("expression", (("", 1, 0, 108), ("", 1, 0, 118))))))))))
State 25:
Reducing production alternation -> concatenation
("DEBUG:alt", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("expression", (("", 1, 0, 108), ("", 1, 0, 118)))))))))))
State 29:
Reducing production rhs -> alternation
("DEBUG:rhs", Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("expression", (("", 1, 0, 108), ("", 1, 0, 118))))))))))))
State 33:
Reducing production rule -> LID COLONCOLONEQUAL rhs
("DEBUG:rule", ("binary-operator", (("", 1, 0, 87), ("", 1, 0, 102))), Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 (Tag2 ((("expression", (("", 1, 0, 108), ("", 1, 0, 118)))))))))))))
State 38:
Reducing production rules -> rules nonempty_list(NEWLINE) rule
("DEBUG:OLDRULE1", ("binary-operator", [(("", 1, 0, 87), ("", 1, 0, 102))], 0))
State 34:
Shifting (NEWLINE) to state 35
State 35:
Lookahead token is now EOF (146-146)
Reducing production list(NEWLINE) ->
State 12:
Reducing production list(NEWLINE) -> NEWLINE list(NEWLINE)
State 39:
Shifting (EOF) to state 40
State 40:
Reducing production postlude -> list(NEWLINE) EOF
"DEBUG:DONE"
State 36:
Reducing production grammar -> rules postlude
("DEBUG:grammar", Tag4 (("binary-operator", [(("", 1, 0, 87), ("", 1, 0, 102))], 0)), 0)
State 44:
Accepting
[""]
0
